/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./node_modules/@restart/ui/esm/Button.js":
/*!************************************************!*\
  !*** ./node_modules/@restart/ui/esm/Button.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isTrivialHref: function() { return /* binding */ isTrivialHref; },\n/* harmony export */   useButtonProps: function() { return /* binding */ useButtonProps; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\nconst _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nfunction useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\n/* harmony default export */ __webpack_exports__[\"default\"] = (Button);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC91aS9lc20vQnV0dG9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQSwyREFBMkQsK0JBQStCLGlCQUFpQixzQ0FBc0MsWUFBWSxZQUFZLHVCQUF1QixPQUFPLHFCQUFxQiwwQ0FBMEMsNkJBQTZCO0FBQ3BRO0FBQ2lCO0FBQ3pDO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsV0FBVyxjQUFjO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSw0QkFBNEIsNkNBQWdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSCxzQkFBc0Isc0RBQUksNEJBQTRCO0FBQ3REO0FBQ0EsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBLCtEQUFlLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L3VpL2VzbS9CdXR0b24uanM/OGFiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBfZXhjbHVkZWQgPSBbXCJhc1wiLCBcImRpc2FibGVkXCJdO1xuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkgeyBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTsgdmFyIHRhcmdldCA9IHt9OyB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7IHZhciBrZXksIGk7IGZvciAoaSA9IDA7IGkgPCBzb3VyY2VLZXlzLmxlbmd0aDsgaSsrKSB7IGtleSA9IHNvdXJjZUtleXNbaV07IGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gcmV0dXJuIHRhcmdldDsgfVxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmV4cG9ydCBmdW5jdGlvbiBpc1RyaXZpYWxIcmVmKGhyZWYpIHtcbiAgcmV0dXJuICFocmVmIHx8IGhyZWYudHJpbSgpID09PSAnIyc7XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlQnV0dG9uUHJvcHMoe1xuICB0YWdOYW1lLFxuICBkaXNhYmxlZCxcbiAgaHJlZixcbiAgdGFyZ2V0LFxuICByZWwsXG4gIHJvbGUsXG4gIG9uQ2xpY2ssXG4gIHRhYkluZGV4ID0gMCxcbiAgdHlwZVxufSkge1xuICBpZiAoIXRhZ05hbWUpIHtcbiAgICBpZiAoaHJlZiAhPSBudWxsIHx8IHRhcmdldCAhPSBudWxsIHx8IHJlbCAhPSBudWxsKSB7XG4gICAgICB0YWdOYW1lID0gJ2EnO1xuICAgIH0gZWxzZSB7XG4gICAgICB0YWdOYW1lID0gJ2J1dHRvbic7XG4gICAgfVxuICB9XG4gIGNvbnN0IG1ldGEgPSB7XG4gICAgdGFnTmFtZVxuICB9O1xuICBpZiAodGFnTmFtZSA9PT0gJ2J1dHRvbicpIHtcbiAgICByZXR1cm4gW3tcbiAgICAgIHR5cGU6IHR5cGUgfHwgJ2J1dHRvbicsXG4gICAgICBkaXNhYmxlZFxuICAgIH0sIG1ldGFdO1xuICB9XG4gIGNvbnN0IGhhbmRsZUNsaWNrID0gZXZlbnQgPT4ge1xuICAgIGlmIChkaXNhYmxlZCB8fCB0YWdOYW1lID09PSAnYScgJiYgaXNUcml2aWFsSHJlZihocmVmKSkge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gICAgaWYgKGRpc2FibGVkKSB7XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgb25DbGljayA9PSBudWxsID8gdm9pZCAwIDogb25DbGljayhldmVudCk7XG4gIH07XG4gIGNvbnN0IGhhbmRsZUtleURvd24gPSBldmVudCA9PiB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJyAnKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgaGFuZGxlQ2xpY2soZXZlbnQpO1xuICAgIH1cbiAgfTtcbiAgaWYgKHRhZ05hbWUgPT09ICdhJykge1xuICAgIC8vIEVuc3VyZSB0aGVyZSdzIGEgaHJlZiBzbyBFbnRlciBjYW4gdHJpZ2dlciBhbmNob3IgYnV0dG9uLlxuICAgIGhyZWYgfHwgKGhyZWYgPSAnIycpO1xuICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgaHJlZiA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIFt7XG4gICAgcm9sZTogcm9sZSAhPSBudWxsID8gcm9sZSA6ICdidXR0b24nLFxuICAgIC8vIGV4cGxpY2l0bHkgdW5kZWZpbmVkIHNvIHRoYXQgaXQgb3ZlcnJpZGVzIHRoZSBwcm9wcyBkaXNhYmxlZCBpbiBhIHNwcmVhZFxuICAgIC8vIGUuZy4gPFRhZyB7Li4ucHJvcHN9IHsuLi5ob29rUHJvcHN9IC8+XG4gICAgZGlzYWJsZWQ6IHVuZGVmaW5lZCxcbiAgICB0YWJJbmRleDogZGlzYWJsZWQgPyB1bmRlZmluZWQgOiB0YWJJbmRleCxcbiAgICBocmVmLFxuICAgIHRhcmdldDogdGFnTmFtZSA9PT0gJ2EnID8gdGFyZ2V0IDogdW5kZWZpbmVkLFxuICAgICdhcmlhLWRpc2FibGVkJzogIWRpc2FibGVkID8gdW5kZWZpbmVkIDogZGlzYWJsZWQsXG4gICAgcmVsOiB0YWdOYW1lID09PSAnYScgPyByZWwgOiB1bmRlZmluZWQsXG4gICAgb25DbGljazogaGFuZGxlQ2xpY2ssXG4gICAgb25LZXlEb3duOiBoYW5kbGVLZXlEb3duXG4gIH0sIG1ldGFdO1xufVxuY29uc3QgQnV0dG9uID0gLyojX19QVVJFX18qL1JlYWN0LmZvcndhcmRSZWYoKF9yZWYsIHJlZikgPT4ge1xuICBsZXQge1xuICAgICAgYXM6IGFzUHJvcCxcbiAgICAgIGRpc2FibGVkXG4gICAgfSA9IF9yZWYsXG4gICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBfZXhjbHVkZWQpO1xuICBjb25zdCBbYnV0dG9uUHJvcHMsIHtcbiAgICB0YWdOYW1lOiBDb21wb25lbnRcbiAgfV0gPSB1c2VCdXR0b25Qcm9wcyhPYmplY3QuYXNzaWduKHtcbiAgICB0YWdOYW1lOiBhc1Byb3AsXG4gICAgZGlzYWJsZWRcbiAgfSwgcHJvcHMpKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KENvbXBvbmVudCwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMsIGJ1dHRvblByb3BzLCB7XG4gICAgcmVmOiByZWZcbiAgfSkpO1xufSk7XG5CdXR0b24uZGlzcGxheU5hbWUgPSAnQnV0dG9uJztcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@restart/ui/esm/Button.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/braintree-web-drop-in-react/lib/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/braintree-web-drop-in-react/lib/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(app-pages-browser)/./node_modules/@babel/runtime/regenerator/index.js\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\n\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\n\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/createClass.js\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\n\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/inherits.js\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\n\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\"));\n\nvar _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\"));\n\nvar _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ \"(app-pages-browser)/./node_modules/prop-types/index.js\"));\n\nvar _braintreeWebDropIn = _interopRequireDefault(__webpack_require__(/*! braintree-web-drop-in */ \"(app-pages-browser)/./node_modules/braintree-web-drop-in/dist/browser/dropin.js\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar DropIn = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(DropIn, _React$Component);\n\n  var _super = _createSuper(DropIn);\n\n  function DropIn() {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, DropIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"wrapper\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"instance\", void 0);\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(DropIn, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n        var _this2 = this;\n\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _braintreeWebDropIn[\"default\"].create(_objectSpread({\n                  container: _reactDom[\"default\"].findDOMNode(this.wrapper),\n                  preselectVaultedPaymentMethod: this.props.preselectVaultedPaymentMethod\n                }, this.props.options));\n\n              case 3:\n                this.instance = _context.sent;\n                this.instance.on(\"noPaymentMethodRequestable\", function () {\n                  if (_this2.props.onNoPaymentMethodRequestable) {\n                    var _this2$props;\n\n                    (_this2$props = _this2.props).onNoPaymentMethodRequestable.apply(_this2$props, arguments);\n                  }\n                });\n                this.instance.on(\"paymentMethodRequestable\", function () {\n                  if (_this2.props.onPaymentMethodRequestable) {\n                    var _this2$props2;\n\n                    (_this2$props2 = _this2.props).onPaymentMethodRequestable.apply(_this2$props2, arguments);\n                  }\n                });\n                this.instance.on(\"paymentOptionSelected\", function () {\n                  if (_this2.props.onPaymentOptionSelected) {\n                    var _this2$props3;\n\n                    (_this2$props3 = _this2.props).onPaymentOptionSelected.apply(_this2$props3, arguments);\n                  }\n                });\n\n                if (this.props.onInstance) {\n                  this.props.onInstance(this.instance);\n                }\n\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n\n                if (this.props.onError) {\n                  this.props.onError(_context.t0);\n                }\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      var _componentWillUnmount = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.instance) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.instance.teardown();\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillUnmount() {\n        return _componentWillUnmount.apply(this, arguments);\n      }\n\n      return componentWillUnmount;\n    }()\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      // Static\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n        ref: function ref(_ref) {\n          return _this3.wrapper = _ref;\n        }\n      });\n    }\n  }]);\n  return DropIn;\n}(_react[\"default\"].Component);\n\nexports[\"default\"] = DropIn;\n(0, _defineProperty2[\"default\"])(DropIn, \"displayName\", \"BraintreeWebDropIn\");\n(0, _defineProperty2[\"default\"])(DropIn, \"propTypes\", {\n  options: _propTypes[\"default\"].object.isRequired,\n  // @deprecated: Include inside options\n  preselectVaultedPaymentMethod: _propTypes[\"default\"].bool,\n  onInstance: _propTypes[\"default\"].func,\n  onError: _propTypes[\"default\"].func,\n  onNoPaymentMethodRequestable: _propTypes[\"default\"].func,\n  onPaymentMethodRequestable: _propTypes[\"default\"].func,\n  onPaymentOptionSelected: _propTypes[\"default\"].func\n});\n(0, _defineProperty2[\"default\"])(DropIn, \"defaultProps\", {\n  preselectVaultedPaymentMethod: true\n});\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/braintree-web-drop-in-react/lib/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/braintree-web-drop-in/dist/browser/dropin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/braintree-web-drop-in/dist/browser/dropin.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=undefined;if(!f&&c)return require(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=undefined,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadStylesheet = exports.loadScript = void 0;\nvar loadScript = require(\"./load-script\");\nexports.loadScript = loadScript;\nvar loadStylesheet = require(\"./load-stylesheet\");\nexports.loadStylesheet = loadStylesheet;\n\n},{\"./load-script\":3,\"./load-stylesheet\":4}],2:[function(require,module,exports){\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromiseGlobal = void 0;\nvar promise_polyfill_1 = __importDefault(require(\"promise-polyfill\"));\nvar PromiseGlobal = \n// eslint-disable-next-line no-undef\ntypeof Promise !== \"undefined\" ? Promise : promise_polyfill_1.default;\nexports.PromiseGlobal = PromiseGlobal;\n\n},{\"promise-polyfill\":184}],3:[function(require,module,exports){\n\"use strict\";\nvar promise_1 = require(\"./lib/promise\");\nvar scriptPromiseCache = {};\nfunction loadScript(options) {\n    var scriptLoadPromise;\n    var stringifiedOptions = JSON.stringify(options);\n    if (!options.forceScriptReload) {\n        scriptLoadPromise = scriptPromiseCache[stringifiedOptions];\n        if (scriptLoadPromise) {\n            return scriptLoadPromise;\n        }\n    }\n    var script = document.createElement(\"script\");\n    var attrs = options.dataAttributes || {};\n    var container = options.container || document.head;\n    script.src = options.src;\n    script.id = options.id || \"\";\n    script.async = true;\n    if (options.crossorigin) {\n        script.setAttribute(\"crossorigin\", \"\" + options.crossorigin);\n    }\n    Object.keys(attrs).forEach(function (key) {\n        script.setAttribute(\"data-\" + key, \"\" + attrs[key]);\n    });\n    scriptLoadPromise = new promise_1.PromiseGlobal(function (resolve, reject) {\n        script.addEventListener(\"load\", function () {\n            resolve(script);\n        });\n        script.addEventListener(\"error\", function () {\n            reject(new Error(options.src + \" failed to load.\"));\n        });\n        script.addEventListener(\"abort\", function () {\n            reject(new Error(options.src + \" has aborted.\"));\n        });\n        container.appendChild(script);\n    });\n    scriptPromiseCache[stringifiedOptions] = scriptLoadPromise;\n    return scriptLoadPromise;\n}\nloadScript.clearCache = function () {\n    scriptPromiseCache = {};\n};\nmodule.exports = loadScript;\n\n},{\"./lib/promise\":2}],4:[function(require,module,exports){\n\"use strict\";\nvar promise_1 = require(\"./lib/promise\");\nmodule.exports = function loadStylesheet(options) {\n    var stylesheet = document.querySelector(\"link[href=\\\"\" + options.href + \"\\\"]\");\n    if (stylesheet) {\n        return promise_1.PromiseGlobal.resolve(stylesheet);\n    }\n    stylesheet = document.createElement(\"link\");\n    var container = options.container || document.head;\n    stylesheet.setAttribute(\"rel\", \"stylesheet\");\n    stylesheet.setAttribute(\"type\", \"text/css\");\n    stylesheet.setAttribute(\"href\", options.href);\n    stylesheet.setAttribute(\"id\", options.id);\n    if (container.firstChild) {\n        container.insertBefore(stylesheet, container.firstChild);\n    }\n    else {\n        container.appendChild(stylesheet);\n    }\n    return promise_1.PromiseGlobal.resolve(stylesheet);\n};\n\n},{\"./lib/promise\":2}],5:[function(require,module,exports){\nmodule.exports = require(\"./dist/load-script\");\n\n},{\"./dist/load-script\":3}],6:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isAndroid(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /Android/i.test(ua);\n};\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isChromeOS(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /CrOS/i.test(ua);\n};\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\nvar isEdge = require(\"./is-edge\");\nvar isSamsung = require(\"./is-samsung\");\nvar isDuckDuckGo = require(\"./is-duckduckgo\");\nvar isOpera = require(\"./is-opera\");\nvar isSilk = require(\"./is-silk\");\nmodule.exports = function isChrome(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ((ua.indexOf(\"Chrome\") !== -1 || ua.indexOf(\"CriOS\") !== -1) &&\n        !isEdge(ua) &&\n        !isSamsung(ua) &&\n        !isDuckDuckGo(ua) &&\n        !isOpera(ua) &&\n        !isSilk(ua));\n};\n\n},{\"./is-duckduckgo\":9,\"./is-edge\":10,\"./is-opera\":21,\"./is-samsung\":22,\"./is-silk\":23}],9:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isDuckDuckGo(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"DuckDuckGo/\") !== -1;\n};\n\n},{}],10:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isEdge(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"Edge/\") !== -1;\n};\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isFirefox(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /Firefox/i.test(ua);\n};\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isIe10(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"MSIE 10\") !== -1;\n};\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isIe9(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"MSIE 9\") !== -1;\n};\n\n},{}],14:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isIosFirefox(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /FxiOS/i.test(ua);\n};\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\nvar isIos = require(\"./is-ios\");\nfunction isGoogleSearchApp(ua) {\n    return /\\bGSA\\b/.test(ua);\n}\nmodule.exports = function isIosGoogleSearchApp(ua) {\n    ua = ua || window.navigator.userAgent;\n    return isIos(ua) && isGoogleSearchApp(ua);\n};\n\n},{\"./is-ios\":19}],16:[function(require,module,exports){\n\"use strict\";\nvar isIos = require(\"./is-ios\");\nvar isIosFirefox = require(\"./is-ios-firefox\");\nvar webkitRegexp = /webkit/i;\nfunction isWebkit(ua) {\n    return webkitRegexp.test(ua);\n}\nfunction isIosChrome(ua) {\n    return ua.indexOf(\"CriOS\") > -1;\n}\nfunction isFacebook(ua) {\n    return ua.indexOf(\"FBAN\") > -1;\n}\nmodule.exports = function isIosSafari(ua) {\n    ua = ua || window.navigator.userAgent;\n    return (isIos(ua) &&\n        isWebkit(ua) &&\n        !isIosChrome(ua) &&\n        !isIosFirefox(ua) &&\n        !isFacebook(ua));\n};\n\n},{\"./is-ios\":19,\"./is-ios-firefox\":14}],17:[function(require,module,exports){\n\"use strict\";\nvar isIos = require(\"./is-ios\");\nvar isIosGoogleSearchApp = require(\"./is-ios-google-search-app\");\nmodule.exports = function isIosWebview(ua) {\n    ua = ua || window.navigator.userAgent;\n    if (isIos(ua)) {\n        // The Google Search iOS app is technically a webview and doesn't support popups.\n        if (isIosGoogleSearchApp(ua)) {\n            return true;\n        }\n        // Historically, a webview could be identified by the presence of AppleWebKit and _no_ presence of Safari after.\n        return /.+AppleWebKit(?!.*Safari)/i.test(ua);\n    }\n    return false;\n};\n\n},{\"./is-ios\":19,\"./is-ios-google-search-app\":15}],18:[function(require,module,exports){\n\"use strict\";\nvar isIosWebview = require(\"./is-ios-webview\");\nmodule.exports = function isIosWKWebview(ua, statusBarVisible) {\n    statusBarVisible =\n        typeof statusBarVisible !== \"undefined\"\n            ? statusBarVisible\n            : window.statusbar.visible;\n    return isIosWebview(ua) && statusBarVisible;\n};\n\n},{\"./is-ios-webview\":17}],19:[function(require,module,exports){\n\"use strict\";\nvar isIpadOS = require(\"./is-ipados\");\nmodule.exports = function isIos(ua, checkIpadOS, document) {\n    if (checkIpadOS === void 0) { checkIpadOS = true; }\n    ua = ua || window.navigator.userAgent;\n    var iOsTest = /iPhone|iPod|iPad/i.test(ua);\n    return checkIpadOS ? iOsTest || isIpadOS(ua, document) : iOsTest;\n};\n\n},{\"./is-ipados\":20}],20:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isIpadOS(ua, document) {\n    ua = ua || window.navigator.userAgent;\n    document = document || window.document;\n    // \"ontouchend\" is used to determine if a browser is on an iPad, otherwise\n    // user-agents for iPadOS behave/identify as a desktop browser\n    return /Mac|iPad/i.test(ua) && \"ontouchend\" in document;\n};\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isOpera(ua) {\n    ua = ua || window.navigator.userAgent;\n    return (ua.indexOf(\"OPR/\") !== -1 ||\n        ua.indexOf(\"Opera/\") !== -1 ||\n        ua.indexOf(\"OPT/\") !== -1);\n};\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isSamsungBrowser(ua) {\n    ua = ua || window.navigator.userAgent;\n    return /SamsungBrowser/i.test(ua);\n};\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\nmodule.exports = function isSilk(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"Silk/\") !== -1;\n};\n\n},{}],24:[function(require,module,exports){\n\"use strict\";\nvar MINIMUM_SUPPORTED_CHROME_IOS_VERSION = 48;\nvar isAndroid = require(\"./is-android\");\nvar isIosFirefox = require(\"./is-ios-firefox\");\nvar isIosWebview = require(\"./is-ios-webview\");\nvar isChrome = require(\"./is-chrome\");\nvar isSamsungBrowser = require(\"./is-samsung\");\nvar isDuckDuckGo = require(\"./is-duckduckgo\");\nfunction isUnsupportedIosChrome(ua) {\n    ua = ua || window.navigator.userAgent;\n    var match = ua.match(/CriOS\\/(\\d+)\\./);\n    if (!match) {\n        return false;\n    }\n    var version = parseInt(match[1], 10);\n    return version < MINIMUM_SUPPORTED_CHROME_IOS_VERSION;\n}\nfunction isOperaMini(ua) {\n    ua = ua || window.navigator.userAgent;\n    return ua.indexOf(\"Opera Mini\") > -1;\n}\nfunction isAndroidWebview(ua) {\n    var androidWebviewRegExp = /Version\\/[\\d.]+/i;\n    ua = ua || window.navigator.userAgent;\n    if (isAndroid(ua)) {\n        return (androidWebviewRegExp.test(ua) && !isOperaMini(ua) && !isDuckDuckGo(ua));\n    }\n    return false;\n}\nfunction isOldSamsungBrowserOrSamsungWebview(ua) {\n    return !isChrome(ua) && !isSamsungBrowser(ua) && /samsung/i.test(ua);\n}\nmodule.exports = function supportsPopups(ua) {\n    ua = ua || window.navigator.userAgent;\n    return !(isIosWebview(ua) ||\n        isIosFirefox(ua) ||\n        isAndroidWebview(ua) ||\n        isOperaMini(ua) ||\n        isUnsupportedIosChrome(ua) ||\n        isOldSamsungBrowserOrSamsungWebview(ua));\n};\n\n},{\"./is-android\":6,\"./is-chrome\":8,\"./is-duckduckgo\":9,\"./is-ios-firefox\":14,\"./is-ios-webview\":17,\"./is-samsung\":22}],25:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-android\");\n\n},{\"./dist/is-android\":6}],26:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-chrome-os\");\n\n},{\"./dist/is-chrome-os\":7}],27:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-chrome\");\n\n},{\"./dist/is-chrome\":8}],28:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-firefox\");\n\n},{\"./dist/is-firefox\":11}],29:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-ie10\");\n\n},{\"./dist/is-ie10\":12}],30:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-ie9\");\n\n},{\"./dist/is-ie9\":13}],31:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-ios-safari\");\n\n},{\"./dist/is-ios-safari\":16}],32:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-ios-webview\");\n\n},{\"./dist/is-ios-webview\":17}],33:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-ios-wkwebview\");\n\n},{\"./dist/is-ios-wkwebview\":18}],34:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-ios\");\n\n},{\"./dist/is-ios\":19}],35:[function(require,module,exports){\nmodule.exports = require(\"./dist/is-samsung\");\n\n},{\"./dist/is-samsung\":22}],36:[function(require,module,exports){\nmodule.exports = require(\"./dist/supports-popups\");\n\n},{\"./dist/supports-popups\":24}],37:[function(require,module,exports){\n\"use strict\";\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n        this._events = {};\n    }\n    EventEmitter.prototype.on = function (event, callback) {\n        if (this._events[event]) {\n            this._events[event].push(callback);\n        }\n        else {\n            this._events[event] = [callback];\n        }\n    };\n    EventEmitter.prototype.off = function (event, callback) {\n        var eventCallbacks = this._events[event];\n        if (!eventCallbacks) {\n            return;\n        }\n        var indexOfCallback = eventCallbacks.indexOf(callback);\n        eventCallbacks.splice(indexOfCallback, 1);\n    };\n    EventEmitter.prototype._emit = function (event) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var eventCallbacks = this._events[event];\n        if (!eventCallbacks) {\n            return;\n        }\n        eventCallbacks.forEach(function (callback) {\n            callback.apply(void 0, args);\n        });\n    };\n    EventEmitter.prototype.hasListener = function (event) {\n        var eventCallbacks = this._events[event];\n        if (!eventCallbacks) {\n            return false;\n        }\n        return eventCallbacks.length > 0;\n    };\n    EventEmitter.createChild = function (ChildObject) {\n        ChildObject.prototype = Object.create(EventEmitter.prototype, {\n            constructor: ChildObject,\n        });\n    };\n    return EventEmitter;\n}());\nmodule.exports = EventEmitter;\n\n},{}],38:[function(require,module,exports){\n\"use strict\";\nvar GlobalPromise = (typeof Promise !== \"undefined\"\n    ? Promise // eslint-disable-line no-undef\n    : null);\nvar ExtendedPromise = /** @class */ (function () {\n    function ExtendedPromise(options) {\n        var _this = this;\n        if (typeof options === \"function\") {\n            this._promise = new ExtendedPromise.Promise(options);\n            return;\n        }\n        this._promise = new ExtendedPromise.Promise(function (resolve, reject) {\n            _this._resolveFunction = resolve;\n            _this._rejectFunction = reject;\n        });\n        options = options || {};\n        this._onResolve = options.onResolve || ExtendedPromise.defaultOnResolve;\n        this._onReject = options.onReject || ExtendedPromise.defaultOnReject;\n        if (ExtendedPromise.shouldCatchExceptions(options)) {\n            this._promise.catch(function () {\n                // prevents unhandled promise rejection warning\n                // in the console for extended promises that\n                // that catch the error in an asynchronous manner\n            });\n        }\n        this._resetState();\n    }\n    ExtendedPromise.defaultOnResolve = function (result) {\n        return ExtendedPromise.Promise.resolve(result);\n    };\n    ExtendedPromise.defaultOnReject = function (err) {\n        return ExtendedPromise.Promise.reject(err);\n    };\n    ExtendedPromise.setPromise = function (PromiseClass) {\n        ExtendedPromise.Promise = PromiseClass;\n    };\n    ExtendedPromise.shouldCatchExceptions = function (options) {\n        if (options.hasOwnProperty(\"suppressUnhandledPromiseMessage\")) {\n            return Boolean(options.suppressUnhandledPromiseMessage);\n        }\n        return Boolean(ExtendedPromise.suppressUnhandledPromiseMessage);\n    };\n    // start Promise methods documented in:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise#Methods\n    ExtendedPromise.all = function (args) {\n        return ExtendedPromise.Promise.all(args);\n    };\n    ExtendedPromise.allSettled = function (args) {\n        return ExtendedPromise.Promise.allSettled(args);\n    };\n    ExtendedPromise.race = function (args) {\n        return ExtendedPromise.Promise.race(args);\n    };\n    ExtendedPromise.reject = function (arg) {\n        return ExtendedPromise.Promise.reject(arg);\n    };\n    ExtendedPromise.resolve = function (arg) {\n        return ExtendedPromise.Promise.resolve(arg);\n    };\n    ExtendedPromise.prototype.then = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return (_a = this._promise).then.apply(_a, args);\n    };\n    ExtendedPromise.prototype.catch = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return (_a = this._promise).catch.apply(_a, args);\n    };\n    ExtendedPromise.prototype.resolve = function (arg) {\n        var _this = this;\n        if (this.isFulfilled) {\n            return this;\n        }\n        this._setResolved();\n        ExtendedPromise.Promise.resolve()\n            .then(function () {\n            return _this._onResolve(arg);\n        })\n            .then(function (argForResolveFunction) {\n            _this._resolveFunction(argForResolveFunction);\n        })\n            .catch(function (err) {\n            _this._resetState();\n            _this.reject(err);\n        });\n        return this;\n    };\n    ExtendedPromise.prototype.reject = function (arg) {\n        var _this = this;\n        if (this.isFulfilled) {\n            return this;\n        }\n        this._setRejected();\n        ExtendedPromise.Promise.resolve()\n            .then(function () {\n            return _this._onReject(arg);\n        })\n            .then(function (result) {\n            _this._setResolved();\n            _this._resolveFunction(result);\n        })\n            .catch(function (err) {\n            return _this._rejectFunction(err);\n        });\n        return this;\n    };\n    ExtendedPromise.prototype._resetState = function () {\n        this.isFulfilled = false;\n        this.isResolved = false;\n        this.isRejected = false;\n    };\n    ExtendedPromise.prototype._setResolved = function () {\n        this.isFulfilled = true;\n        this.isResolved = true;\n        this.isRejected = false;\n    };\n    ExtendedPromise.prototype._setRejected = function () {\n        this.isFulfilled = true;\n        this.isResolved = false;\n        this.isRejected = true;\n    };\n    ExtendedPromise.Promise = GlobalPromise;\n    return ExtendedPromise;\n}());\nmodule.exports = ExtendedPromise;\n\n},{}],39:[function(require,module,exports){\n\"use strict\";\nvar set_attributes_1 = require(\"./lib/set-attributes\");\nvar default_attributes_1 = require(\"./lib/default-attributes\");\nvar assign_1 = require(\"./lib/assign\");\nmodule.exports = function createFrame(options) {\n    if (options === void 0) { options = {}; }\n    var iframe = document.createElement(\"iframe\");\n    var config = assign_1.assign({}, default_attributes_1.defaultAttributes, options);\n    if (config.style && typeof config.style !== \"string\") {\n        assign_1.assign(iframe.style, config.style);\n        delete config.style;\n    }\n    set_attributes_1.setAttributes(iframe, config);\n    if (!iframe.getAttribute(\"id\")) {\n        iframe.id = iframe.name;\n    }\n    return iframe;\n};\n\n},{\"./lib/assign\":40,\"./lib/default-attributes\":41,\"./lib/set-attributes\":42}],40:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assign = void 0;\nfunction assign(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntarget) {\n    var objs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objs[_i - 1] = arguments[_i];\n    }\n    objs.forEach(function (obj) {\n        if (typeof obj !== \"object\") {\n            return;\n        }\n        Object.keys(obj).forEach(function (key) {\n            target[key] = obj[key];\n        });\n    });\n    return target;\n}\nexports.assign = assign;\n\n},{}],41:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultAttributes = void 0;\nexports.defaultAttributes = {\n    src: \"about:blank\",\n    frameBorder: 0,\n    allowtransparency: true,\n    scrolling: \"no\",\n};\n\n},{}],42:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setAttributes = void 0;\nfunction setAttributes(element, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nattributes) {\n    for (var key in attributes) {\n        if (attributes.hasOwnProperty(key)) {\n            var value = attributes[key];\n            if (value == null) {\n                element.removeAttribute(key);\n            }\n            else {\n                element.setAttribute(key, value);\n            }\n        }\n    }\n}\nexports.setAttributes = setAttributes;\n\n},{}],43:[function(require,module,exports){\n'use strict';\n\nfunction uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n\n    return v.toString(16);\n  });\n}\n\nmodule.exports = uuid;\n\n},{}],44:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction deferred(fn) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        setTimeout(function () {\n            try {\n                fn.apply(void 0, args);\n            }\n            catch (err) {\n                /* eslint-disable no-console */\n                console.log(\"Error in callback function\");\n                console.log(err);\n                /* eslint-enable no-console */\n            }\n        }, 1);\n    };\n}\nexports.deferred = deferred;\n\n},{}],45:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction once(fn) {\n    var called = false;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!called) {\n            called = true;\n            fn.apply(void 0, args);\n        }\n    };\n}\nexports.once = once;\n\n},{}],46:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable consistent-return */\nfunction promiseOrCallback(promise, callback) {\n    if (!callback) {\n        return promise;\n    }\n    promise.then(function (data) { return callback(null, data); }).catch(function (err) { return callback(err); });\n}\nexports.promiseOrCallback = promiseOrCallback;\n\n},{}],47:[function(require,module,exports){\n\"use strict\";\nvar deferred_1 = require(\"./lib/deferred\");\nvar once_1 = require(\"./lib/once\");\nvar promise_or_callback_1 = require(\"./lib/promise-or-callback\");\nfunction wrapPromise(fn) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var callback;\n        var lastArg = args[args.length - 1];\n        if (typeof lastArg === \"function\") {\n            callback = args.pop();\n            callback = once_1.once(deferred_1.deferred(callback));\n        }\n        // I know, I know, this looks bad. But it's a quirk of the library that\n        // we need to allow passing the this context to the original function\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore: this has an implicit any\n        return promise_or_callback_1.promiseOrCallback(fn.apply(this, args), callback); // eslint-disable-line no-invalid-this\n    };\n}\nwrapPromise.wrapPrototype = function (target, options) {\n    if (options === void 0) { options = {}; }\n    var ignoreMethods = options.ignoreMethods || [];\n    var includePrivateMethods = options.transformPrivateMethods === true;\n    var methods = Object.getOwnPropertyNames(target.prototype).filter(function (method) {\n        var isNotPrivateMethod;\n        var isNonConstructorFunction = method !== \"constructor\" &&\n            typeof target.prototype[method] === \"function\";\n        var isNotAnIgnoredMethod = ignoreMethods.indexOf(method) === -1;\n        if (includePrivateMethods) {\n            isNotPrivateMethod = true;\n        }\n        else {\n            isNotPrivateMethod = method.charAt(0) !== \"_\";\n        }\n        return (isNonConstructorFunction && isNotPrivateMethod && isNotAnIgnoredMethod);\n    });\n    methods.forEach(function (method) {\n        var original = target.prototype[method];\n        target.prototype[method] = wrapPromise(original);\n    });\n    return target;\n};\nmodule.exports = wrapPromise;\n\n},{\"./lib/deferred\":44,\"./lib/once\":45,\"./lib/promise-or-callback\":46}],48:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar analytics = require(\"../lib/analytics\");\nvar errors = require(\"./errors\");\nvar methods = require(\"../lib/methods\");\nvar convertMethodsToError = require(\"../lib/convert-methods-to-error\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\n\n/**\n * @typedef {object} ApplePay~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {object} details Additional details.\n * @property {string} details.cardType Type of card, ex: Visa, MasterCard.\n * @property {string} details.cardHolderName The name of the card holder.\n * @property {string} details.dpanLastTwo Last two digits of card number.\n * @property {string} description A human-readable description.\n * @property {string} type The payment method type, always `ApplePayCard`.\n * @property {object} binData Information about the card based on the bin.\n * @property {string} binData.commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.countryOfIssuance The country of issuance.\n * @property {string} binData.debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.issuingBank The issuing bank.\n * @property {string} binData.payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.productId The product id.\n */\n\n/**\n * An Apple Pay Payment Authorization Event object.\n * @typedef {object} ApplePayPaymentAuthorizedEvent\n * @external ApplePayPaymentAuthorizedEvent\n * @see {@link https://developer.apple.com/reference/applepayjs/applepaypaymentauthorizedevent ApplePayPaymentAuthorizedEvent}\n */\n\n/**\n * An Apple Pay Payment Request object.\n * @typedef {object} ApplePayPaymentRequest\n * @external ApplePayPaymentRequest\n * @see {@link https://developer.apple.com/reference/applepayjs/1916082-applepay_js_data_types/paymentrequest PaymentRequest}\n */\n\n/**\n * @class\n * @param {object} options Options\n * @description <strong>You cannot use this constructor directly. Use {@link module:braintree-web/apple-pay.create|braintree.applePay.create} instead.</strong>\n * @classdesc This class represents an Apple Pay component. Instances of this class have methods for validating the merchant server and tokenizing payments.\n */\nfunction ApplePay(options) {\n  this._instantiatedWithClient = Boolean(!options.useDeferredClient);\n  this._client = options.client;\n  this._createPromise = options.createPromise;\n\n  if (this._client) {\n    this._setMerchantIdentifier();\n  }\n}\n\nApplePay.prototype._waitForClient = function () {\n  if (this._client) {\n    return Promise.resolve();\n  }\n\n  return this._createPromise.then(\n    function (client) {\n      this._client = client;\n\n      this._setMerchantIdentifier();\n    }.bind(this)\n  );\n};\n\nApplePay.prototype._setMerchantIdentifier = function () {\n  var applePayConfig =\n    this._client.getConfiguration().gatewayConfiguration.applePayWeb;\n\n  if (!applePayConfig) {\n    return;\n  }\n  /**\n   * @name ApplePay#merchantIdentifier\n   * @description A special merchant ID which represents the merchant association with Braintree. Required when using `ApplePaySession.canMakePaymentsWithActiveCard`.\n   * @example\n   * var promise = ApplePaySession.canMakePaymentsWithActiveCard(applePayInstance.merchantIdentifier);\n   * promise.then(function (canMakePaymentsWithActiveCard) {\n   *   if (canMakePaymentsWithActiveCard) {\n   *     // Set up Apple Pay buttons\n   *   }\n   * });\n   */\n  Object.defineProperty(this, \"merchantIdentifier\", {\n    value: applePayConfig.merchantIdentifier,\n    configurable: false,\n    writable: false,\n  });\n};\n\n/**\n * Merges a payment request with Braintree defaults to return an {external:ApplePayPaymentRequest}.\n *\n * The following properties are assigned to `paymentRequest` if not already defined. Their default values come from the Braintree gateway.\n * - `countryCode`\n * - `currencyCode`\n * - `merchantCapabilities`\n * - `supportedNetworks`\n * @public\n * @param {external:ApplePayPaymentRequest} paymentRequest The payment request details to apply on top of those from Braintree.\n * @returns {external:ApplePayPaymentRequest|Promise} The decorated `paymentRequest` object. If `useDeferredClient` is used along with an `authorization`, this method will return a promise that resolves with the `paymentRequest` object.\n * @example\n * var applePay = require('braintree-web/apple-pay');\n *\n * applePay.create({client: clientInstance}, function (applePayErr, applePayInstance) {\n *   if (applePayErr) {\n *     // Handle error here\n *     return;\n *   }\n *\n *   var paymentRequest = applePayInstance.createPaymentRequest({\n *     total: {\n *       label: 'My Company',\n *       amount: '19.99'\n *     }\n *   });\n *\n *   var session = new ApplePaySession(3, paymentRequest);\n *\n *   // ...\n * @example <caption>With deferred client</caption>\n * var applePay = require('braintree-web/apple-pay');\n *\n * applePay.create({\n *   authorization: 'client-token-or-tokenization-key',\n *   useDeferredClient: true\n * }, function (applePayErr, applePayInstance) {\n *   if (applePayErr) {\n *     // Handle error here\n *     return;\n *   }\n *\n *   applePayInstance.createPaymentRequest({\n *     total: {\n *       label: 'My Company',\n *       amount: '19.99'\n *     }\n *   }).then(function (paymentRequest) {\n *     var session = new ApplePaySession(3, paymentRequest);\n *\n *     // ...\n *   });\n */\nApplePay.prototype.createPaymentRequest = function (paymentRequest) {\n  if (this._instantiatedWithClient) {\n    return this._createPaymentRequestSynchronously(paymentRequest);\n  }\n\n  return this._waitForClient().then(\n    function () {\n      return this._createPaymentRequestSynchronously(paymentRequest);\n    }.bind(this)\n  );\n};\n\nApplePay.prototype._createPaymentRequestSynchronously = function (\n  paymentRequest\n) {\n  var applePay =\n    this._client.getConfiguration().gatewayConfiguration.applePayWeb;\n  var defaults = {\n    countryCode: applePay.countryCode,\n    currencyCode: applePay.currencyCode,\n    merchantCapabilities: applePay.merchantCapabilities || [\"supports3DS\"],\n    supportedNetworks: applePay.supportedNetworks.map(function (network) {\n      return network === \"mastercard\" ? \"masterCard\" : network;\n    }),\n  };\n\n  return Object.assign({}, defaults, paymentRequest);\n};\n\n/**\n * Validates your merchant website, as required by `ApplePaySession` before payment can be authorized.\n * @public\n * @param {object} options Options\n * @param {string} options.validationURL The validationURL from an `ApplePayValidateMerchantEvent`.\n * @param {string} options.displayName The canonical name for your store. Use a non-localized name. This parameter should be a UTF-8 string that is a maximum of 64 characters. The system may display this name to the user.\n * @param {callback} [callback] The second argument, <code>data</code>, is the Apple Pay merchant session object. If no callback is provided, `performValidation` returns a promise.\n * Pass the merchant session to your Apple Pay session's `completeMerchantValidation` method.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * var applePay = require('braintree-web/apple-pay');\n *\n * applePay.create({client: clientInstance}, function (applePayErr, applePayInstance) {\n *   if (applePayErr) {\n *     // Handle error here\n *     return;\n *   }\n *\n *   var paymentRequest = applePayInstance.createPaymentRequest({\n *     total: {\n *       label: 'My Company',\n *       amount: '19.99'\n *     }\n *   });\n *   var session = new ApplePaySession(3, paymentRequest);\n *\n *   session.onvalidatemerchant = function (event) {\n *     applePayInstance.performValidation({\n *       validationURL: event.validationURL,\n *       displayName: 'My Great Store'\n *     }, function (validationErr, validationData) {\n *       if (validationErr) {\n *         console.error(validationErr);\n *         session.abort();\n *         return;\n *       }\n *\n *       session.completeMerchantValidation(validationData);\n *     });\n *   };\n * });\n */\nApplePay.prototype.performValidation = function (options) {\n  var self = this;\n\n  if (!options || !options.validationURL) {\n    return Promise.reject(\n      new BraintreeError(errors.APPLE_PAY_VALIDATION_URL_REQUIRED)\n    );\n  }\n\n  return this._waitForClient()\n    .then(function () {\n      var applePayWebSession = {\n        validationUrl: options.validationURL,\n        domainName: options.domainName || window.location.hostname,\n        merchantIdentifier:\n          options.merchantIdentifier || self.merchantIdentifier,\n      };\n\n      if (options.displayName != null) {\n        applePayWebSession.displayName = options.displayName;\n      }\n\n      return self._client.request({\n        method: \"post\",\n        endpoint: \"apple_pay_web/sessions\",\n        data: {\n          _meta: { source: \"apple-pay\" },\n          applePayWebSession: applePayWebSession,\n        },\n      });\n    })\n    .then(function (response) {\n      analytics.sendEvent(self._client, \"applepay.performValidation.succeeded\");\n\n      return Promise.resolve(response);\n    })\n    .catch(function (err) {\n      analytics.sendEvent(self._client, \"applepay.performValidation.failed\");\n\n      if (err.code === \"CLIENT_REQUEST_ERROR\") {\n        return Promise.reject(\n          new BraintreeError({\n            type: errors.APPLE_PAY_MERCHANT_VALIDATION_FAILED.type,\n            code: errors.APPLE_PAY_MERCHANT_VALIDATION_FAILED.code,\n            message: errors.APPLE_PAY_MERCHANT_VALIDATION_FAILED.message,\n            details: {\n              originalError: err.details.originalError,\n            },\n          })\n        );\n      }\n\n      return Promise.reject(\n        new BraintreeError({\n          type: errors.APPLE_PAY_MERCHANT_VALIDATION_NETWORK.type,\n          code: errors.APPLE_PAY_MERCHANT_VALIDATION_NETWORK.code,\n          message: errors.APPLE_PAY_MERCHANT_VALIDATION_NETWORK.message,\n          details: {\n            originalError: err,\n          },\n        })\n      );\n    });\n};\n\n/**\n * Tokenizes an Apple Pay payment. This will likely be called in your `ApplePaySession`'s `onpaymentauthorized` callback.\n * @public\n * @param {object} options Options\n * @param {object} options.token The `payment.token` property of an {@link external:ApplePayPaymentAuthorizedEvent}.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link ApplePay~tokenizePayload|tokenizePayload}. If no callback is provided, `tokenize` returns a promise that resolves with a {@link ApplePay~tokenizePayload|tokenizePayload}.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * var applePay = require('braintree-web/apple-pay');\n *\n * applePay.create({client: clientInstance}, function (applePayErr, applePayInstance) {\n *   if (applePayErr) {\n *     // Handle error here\n *     return;\n *   }\n *\n *   var paymentRequest = applePayInstance.createPaymentRequest({\n *     total: {\n *       label: 'My Company',\n *       amount: '19.99'\n *     }\n *   });\n *   var session = new ApplePaySession(3, paymentRequest);\n *\n *   session.onpaymentauthorized = function (event) {\n *     applePayInstance.tokenize({\n *       token: event.payment.token\n *     }, function (tokenizeErr, tokenizedPayload) {\n *       if (tokenizeErr) {\n *         session.completePayment(ApplePaySession.STATUS_FAILURE);\n *         return;\n *       }\n *       // Send the tokenizedPayload to your server here!\n *\n *       // Once the transaction is complete, call completePayment\n *       // to close the Apple Pay sheet\n *       session.completePayment(ApplePaySession.STATUS_SUCCESS);\n *     });\n *   };\n *\n *   // ...\n * });\n */\nApplePay.prototype.tokenize = function (options) {\n  var self = this;\n\n  if (!options.token) {\n    return Promise.reject(\n      new BraintreeError(errors.APPLE_PAY_PAYMENT_TOKEN_REQUIRED)\n    );\n  }\n\n  return this._waitForClient()\n    .then(function () {\n      return self._client.request({\n        method: \"post\",\n        endpoint: \"payment_methods/apple_payment_tokens\",\n        data: {\n          _meta: {\n            source: \"apple-pay\",\n          },\n          applePaymentToken: Object.assign({}, options.token, {\n            // The gateway requires this key to be base64-encoded.\n            paymentData: btoa(JSON.stringify(options.token.paymentData)),\n          }),\n        },\n      });\n    })\n    .then(function (response) {\n      analytics.sendEvent(self._client, \"applepay.tokenize.succeeded\");\n\n      return Promise.resolve(response.applePayCards[0]);\n    })\n    .catch(function (err) {\n      analytics.sendEvent(self._client, \"applepay.tokenize.failed\");\n\n      return Promise.reject(\n        new BraintreeError({\n          type: errors.APPLE_PAY_TOKENIZATION.type,\n          code: errors.APPLE_PAY_TOKENIZATION.code,\n          message: errors.APPLE_PAY_TOKENIZATION.message,\n          details: {\n            originalError: err,\n          },\n        })\n      );\n    });\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/apple-pay.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * applePayInstance.teardown();\n * @example <caption>With callback</caption>\n * applePayInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nApplePay.prototype.teardown = function () {\n  convertMethodsToError(this, methods(ApplePay.prototype));\n\n  return Promise.resolve();\n};\n\nmodule.exports = wrapPromise.wrapPrototype(ApplePay);\n\n},{\"../lib/analytics\":86,\"../lib/braintree-error\":91,\"../lib/convert-methods-to-error\":93,\"../lib/methods\":121,\"./errors\":49,\"@braintree/wrap-promise\":47}],49:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.Apple Pay - Creation Error Codes\n * @description Errors that occur when [creating the Apple Pay component](./module-braintree-web_apple-pay.html#.create).\n * @property {MERCHANT} APPLE_PAY_NOT_ENABLED Occurs when the authorization used is not authorized to process Apple Pay.\n */\n\n/**\n * @name BraintreeError.Apple Pay - performValidation Error Codes\n * @description Errors that occur when [validating](./ApplePay.html#performValidation).\n * @property {MERCHANT} APPLE_PAY_VALIDATION_URL_REQUIRED Occurs when the `validationURL` option is not passed in.\n * @property {MERCHANT} APPLE_PAY_MERCHANT_VALIDATION_FAILED Occurs when the website domain has not been registered in the Braintree control panel.\n * @property {NETWORK} APPLE_PAY_MERCHANT_VALIDATION_NETWORK Occurs when an unknown network error occurs.\n */\n\n/**\n * @name BraintreeError.Apple Pay - tokenize Error Codes\n * @description Errors that occur when [tokenizing](./ApplePay.html#tokenize).\n * @property {MERCHANT} APPLE_PAY_PAYMENT_TOKEN_REQUIRED Occurs when the `token` option is not passed in.\n * @property {NETWORK} APPLE_PAY_TOKENIZATION Occurs when an unknown network error occurs.\n */\n\nvar BraintreeError = require(\"../lib/braintree-error\");\n\nmodule.exports = {\n  APPLE_PAY_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"APPLE_PAY_NOT_ENABLED\",\n    message: \"Apple Pay is not enabled for this merchant.\",\n  },\n  APPLE_PAY_VALIDATION_URL_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"APPLE_PAY_VALIDATION_URL_REQUIRED\",\n    message: \"performValidation must be called with a validationURL.\",\n  },\n  APPLE_PAY_MERCHANT_VALIDATION_NETWORK: {\n    type: BraintreeError.types.NETWORK,\n    code: \"APPLE_PAY_MERCHANT_VALIDATION_NETWORK\",\n    message: \"A network error occurred when validating the Apple Pay merchant.\",\n  },\n  APPLE_PAY_MERCHANT_VALIDATION_FAILED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"APPLE_PAY_MERCHANT_VALIDATION_FAILED\",\n    message:\n      \"Make sure you have registered your domain name in the Braintree Control Panel.\",\n  },\n  APPLE_PAY_PAYMENT_TOKEN_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"APPLE_PAY_PAYMENT_TOKEN_REQUIRED\",\n    message: \"tokenize must be called with a payment token.\",\n  },\n  APPLE_PAY_TOKENIZATION: {\n    type: BraintreeError.types.NETWORK,\n    code: \"APPLE_PAY_TOKENIZATION\",\n    message: \"A network error occurred when processing the Apple Pay payment.\",\n  },\n};\n\n},{\"../lib/braintree-error\":91}],50:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @module braintree-web/apple-pay\n * @description Accept Apple Pay on the Web. *This component is currently in beta and is subject to change.*\n */\n\nvar ApplePay = require(\"./apple-pay\");\nvar analytics = require(\"../lib/analytics\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar basicComponentVerification = require(\"../lib/basic-component-verification\");\nvar createAssetsUrl = require(\"../lib/create-assets-url\");\nvar createDeferredClient = require(\"../lib/create-deferred-client\");\nvar errors = require(\"./errors\");\nvar VERSION = \"3.99.0\";\nvar wrapPromise = require(\"@braintree/wrap-promise\");\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {boolean} [options.useDeferredClient] Used in conjunction with `authorization`, allows the Apple Pay instance to be available right away by fetching the client configuration in the background. When this option is used, {@link ApplePay#createPaymentRequest} will return a promise that resolves with the configuration instead of returning synchronously.\n * @param {callback} [callback] The second argument, `data`, is the {@link ApplePay} instance. If no callback is provided, `create` returns a promise that resolves with the {@link ApplePay} instance.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nfunction create(options) {\n  var name = \"Apple Pay\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var applePayInstance;\n      var createPromise = createDeferredClient\n        .create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: createAssetsUrl.create(options.authorization),\n          name: name,\n        })\n        .then(function (client) {\n          if (!client.getConfiguration().gatewayConfiguration.applePayWeb) {\n            return Promise.reject(\n              new BraintreeError(errors.APPLE_PAY_NOT_ENABLED)\n            );\n          }\n\n          analytics.sendEvent(client, \"applepay.initialized\");\n\n          return client;\n        });\n\n      options.createPromise = createPromise;\n      applePayInstance = new ApplePay(options);\n\n      if (!options.useDeferredClient) {\n        return createPromise.then(function (client) {\n          applePayInstance._client = client;\n\n          return applePayInstance;\n        });\n      }\n\n      return applePayInstance;\n    });\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n\n},{\"../lib/analytics\":86,\"../lib/basic-component-verification\":89,\"../lib/braintree-error\":91,\"../lib/create-assets-url\":95,\"../lib/create-deferred-client\":97,\"./apple-pay\":48,\"./errors\":49,\"@braintree/wrap-promise\":47}],51:[function(require,module,exports){\n\"use strict\";\n\nvar BRAINTREE_VERSION = require(\"./constants\").BRAINTREE_VERSION;\n\nvar GraphQL = require(\"./request/graphql\");\nvar request = require(\"./request\");\nvar isVerifiedDomain = require(\"../lib/is-verified-domain\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar convertToBraintreeError = require(\"../lib/convert-to-braintree-error\");\nvar getGatewayConfiguration = require(\"./get-configuration\").getConfiguration;\nvar createAuthorizationData = require(\"../lib/create-authorization-data\");\nvar addMetadata = require(\"../lib/add-metadata\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar once = require(\"../lib/once\");\nvar deferred = require(\"../lib/deferred\");\nvar assign = require(\"../lib/assign\").assign;\nvar analytics = require(\"../lib/analytics\");\nvar errors = require(\"./errors\");\nvar VERSION = require(\"../lib/constants\").VERSION;\nvar GRAPHQL_URLS = require(\"../lib/constants\").GRAPHQL_URLS;\nvar methods = require(\"../lib/methods\");\nvar convertMethodsToError = require(\"../lib/convert-methods-to-error\");\nvar assets = require(\"../lib/assets\");\nvar FRAUDNET_FNCLS = require(\"../lib/constants\").FRAUDNET_FNCLS;\nvar FRAUDNET_SOURCE = require(\"../lib/constants\").FRAUDNET_SOURCE;\nvar FRAUDNET_URL = require(\"../lib/constants\").FRAUDNET_URL;\n\nvar cachedClients = {};\n\n/**\n * This object is returned by {@link Client#getConfiguration|getConfiguration}. This information is used extensively by other Braintree modules to properly configure themselves.\n * @typedef {object} Client~configuration\n * @property {object} client The braintree-web/client parameters.\n * @property {string} client.authorization A tokenizationKey or clientToken.\n * @property {object} gatewayConfiguration Gateway-supplied configuration.\n * @property {object} analyticsMetadata Analytics-specific data.\n * @property {string} analyticsMetadata.sessionId Uniquely identifies a browsing session.\n * @property {string} analyticsMetadata.sdkVersion The braintree.js version.\n * @property {string} analyticsMetadata.merchantAppId Identifies the merchant's web app.\n */\n\n/**\n * @class\n * @param {Client~configuration} configuration Options\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/client.create|braintree.client.create} instead.</strong>\n * @classdesc This class is required by many other Braintree components. It serves as the base API layer that communicates with our servers. It is also capable of being used to formulate direct calls to our servers, such as direct credit card tokenization. See {@link Client#request}.\n */\nfunction Client(configuration) {\n  var configurationJSON, gatewayConfiguration;\n\n  configuration = configuration || {};\n\n  configurationJSON = JSON.stringify(configuration);\n  gatewayConfiguration = configuration.gatewayConfiguration;\n\n  if (!gatewayConfiguration) {\n    throw new BraintreeError(errors.CLIENT_MISSING_GATEWAY_CONFIGURATION);\n  }\n\n  [\"assetsUrl\", \"clientApiUrl\", \"configUrl\"].forEach(function (property) {\n    if (\n      property in gatewayConfiguration &&\n      !isVerifiedDomain(gatewayConfiguration[property])\n    ) {\n      throw new BraintreeError({\n        type: errors.CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN.type,\n        code: errors.CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN.code,\n        message: property + \" property is on an invalid domain.\",\n      });\n    }\n  });\n\n  /**\n   * Returns a copy of the configuration values.\n   * @public\n   * @returns {Client~configuration} configuration\n   */\n  this.getConfiguration = function () {\n    return JSON.parse(configurationJSON);\n  };\n\n  this._request = request;\n  this._configuration = this.getConfiguration();\n\n  this._clientApiBaseUrl = gatewayConfiguration.clientApiUrl + \"/v1/\";\n\n  if (gatewayConfiguration.graphQL) {\n    if (!isVerifiedDomain(gatewayConfiguration.graphQL.url)) {\n      throw new BraintreeError({\n        type: errors.CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN.type,\n        code: errors.CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN.code,\n        message: \"graphQL.url property is on an invalid domain.\",\n      });\n    }\n\n    this._graphQL = new GraphQL({\n      graphQL: gatewayConfiguration.graphQL,\n    });\n  }\n}\n\nClient.initialize = function (options) {\n  var clientInstance, authData;\n  var promise = cachedClients[options.authorization];\n\n  if (promise) {\n    analytics.sendEvent(promise, \"custom.client.load.cached\");\n\n    return promise;\n  }\n\n  try {\n    authData = createAuthorizationData(options.authorization);\n  } catch (err) {\n    return Promise.reject(\n      new BraintreeError(errors.CLIENT_INVALID_AUTHORIZATION)\n    );\n  }\n\n  promise = getGatewayConfiguration(authData).then(function (configuration) {\n    if (options.debug) {\n      configuration.isDebug = true;\n    }\n\n    configuration.authorization = options.authorization;\n\n    clientInstance = new Client(configuration);\n\n    return clientInstance;\n  });\n\n  cachedClients[options.authorization] = promise;\n\n  analytics.sendEvent(promise, \"custom.client.load.initialized\");\n\n  return promise\n    .then(function (client) {\n      analytics.sendEvent(clientInstance, \"custom.client.load.succeeded\");\n\n      return client;\n    })\n    .catch(function (err) {\n      delete cachedClients[options.authorization];\n\n      return Promise.reject(err);\n    });\n};\n\n// Primarily used for testing the client initalization call\nClient.clearCache = function () {\n  cachedClients = {};\n};\n\nClient.prototype._findOrCreateFraudnetJSON = function (clientMetadataId) {\n  var el = document.querySelector('script[fncls=\"' + FRAUDNET_FNCLS + '\"]');\n  var config, additionalData, authorizationFingerprint, parameters;\n\n  if (!el) {\n    el = document.body.appendChild(document.createElement(\"script\"));\n    el.type = \"application/json\";\n    el.setAttribute(\"fncls\", FRAUDNET_FNCLS);\n  }\n\n  config = this.getConfiguration();\n  additionalData = {\n    rda_tenant: \"bt_card\", // eslint-disable-line camelcase\n    mid: config.gatewayConfiguration.merchantId,\n  };\n  authorizationFingerprint = config.authorizationFingerprint;\n\n  if (authorizationFingerprint) {\n    authorizationFingerprint.split(\"&\").forEach(function (pieces) {\n      var component = pieces.split(\"=\");\n\n      if (component[0] === \"customer_id\" && component.length > 1) {\n        additionalData.cid = component[1];\n      }\n    });\n  }\n\n  parameters = {\n    f: clientMetadataId.substr(0, 32),\n    fp: additionalData,\n    bu: false,\n    s: FRAUDNET_SOURCE,\n  };\n  el.text = JSON.stringify(parameters);\n};\n\n/**\n * Used by other modules to formulate all network requests to the Braintree gateway. It is also capable of being used directly from your own form to tokenize credit card information. However, be sure to satisfy PCI compliance if you use direct card tokenization.\n * @public\n * @param {object} options Request options:\n * @param {string} options.method HTTP method, e.g. \"get\" or \"post\".\n * @param {string} options.endpoint Endpoint path, e.g. \"payment_methods\".\n * @param {object} options.data Data to send with the request.\n * @param {number} [options.timeout=60000] Set a timeout (in milliseconds) for the request.\n * @param {callback} [callback] The second argument, <code>data</code>, is the returned server data.\n * @example\n * <caption>Direct Credit Card Tokenization</caption>\n * var createClient = require('braintree-web/client').create;\n *\n * createClient({\n *   authorization: CLIENT_AUTHORIZATION\n * }, function (createErr, clientInstance) {\n *   var form = document.getElementById('my-form-id');\n *   var data = {\n *     creditCard: {\n *       number: form['cc-number'].value,\n *       cvv: form['cc-cvv'].value,\n *       expirationDate: form['cc-expiration-date'].value,\n *       billingAddress: {\n *         postalCode: form['cc-postal-code'].value\n *       },\n *       options: {\n *         validate: false\n *       }\n *     }\n *   };\n *\n *   // Warning: For a merchant to be eligible for the easiest level of PCI compliance (SAQ A),\n *   // payment fields cannot be hosted on your checkout page.\n *   // For an alternative to the following, use Hosted Fields.\n *   clientInstance.request({\n *     endpoint: 'payment_methods/credit_cards',\n *     method: 'post',\n *     data: data\n *   }, function (requestErr, response) {\n *     // More detailed example of handling API errors: https://codepen.io/braintree/pen/MbwjdM\n *     if (requestErr) { throw new Error(requestErr); }\n *\n *     console.log('Got nonce:', response.creditCards[0].nonce);\n *   });\n * });\n * @example\n * <caption>Tokenizing Fields for AVS Checks</caption>\n * var createClient = require('braintree-web/client').create;\n *\n * createClient({\n *   authorization: CLIENT_AUTHORIZATION\n * }, function (createErr, clientInstance) {\n *   var form = document.getElementById('my-form-id');\n *   var data = {\n *     creditCard: {\n *       number: form['cc-number'].value,\n *       cvv: form['cc-cvv'].value,\n *       expirationDate: form['cc-date'].value,\n *       // The billing address can be checked with AVS rules.\n *       // See: https://articles.braintreepayments.com/support/guides/fraud-tools/basic/avs-cvv-rules\n *       billingAddress: {\n *         postalCode: form['cc-postal-code'].value,\n *         streetAddress: form['cc-street-address'].value,\n *         countryName: form['cc-country-name'].value,\n *         countryCodeAlpha2: form['cc-country-alpha2'].value,\n *         countryCodeAlpha3: form['cc-country-alpha3'].value,\n *         countryCodeNumeric: form['cc-country-numeric'].value\n *       },\n *       options: {\n *         validate: false\n *       }\n *     }\n *   };\n *\n *   // Warning: For a merchant to be eligible for the easiest level of PCI compliance (SAQ A),\n *   // payment fields cannot be hosted on your checkout page.\n *   // For an alternative to the following, use Hosted Fields.\n *   clientInstance.request({\n *     endpoint: 'payment_methods/credit_cards',\n *     method: 'post',\n *     data: data\n *   }, function (requestErr, response) {\n *     // More detailed example of handling API errors: https://codepen.io/braintree/pen/MbwjdM\n *     if (requestErr) { throw new Error(requestErr); }\n *\n *     console.log('Got nonce:', response.creditCards[0].nonce);\n *   });\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nClient.prototype.request = function (options, callback) {\n  var self = this; // eslint-disable-line no-invalid-this\n  var requestPromise = new Promise(function (resolve, reject) {\n    var optionName, api, baseUrl, requestOptions;\n    var shouldCollectData = Boolean(\n      options.endpoint === \"payment_methods/credit_cards\" &&\n        self.getConfiguration().gatewayConfiguration.creditCards\n          .collectDeviceData\n    );\n\n    if (options.api !== \"graphQLApi\") {\n      if (!options.method) {\n        optionName = \"options.method\";\n      } else if (!options.endpoint) {\n        optionName = \"options.endpoint\";\n      }\n    }\n\n    if (optionName) {\n      throw new BraintreeError({\n        type: errors.CLIENT_OPTION_REQUIRED.type,\n        code: errors.CLIENT_OPTION_REQUIRED.code,\n        message: optionName + \" is required when making a request.\",\n      });\n    }\n\n    if (\"api\" in options) {\n      api = options.api;\n    } else {\n      api = \"clientApi\";\n    }\n\n    requestOptions = {\n      method: options.method,\n      graphQL: self._graphQL,\n      timeout: options.timeout,\n      metadata: self._configuration.analyticsMetadata,\n    };\n\n    if (api === \"clientApi\") {\n      baseUrl = self._clientApiBaseUrl;\n\n      requestOptions.data = addMetadata(self._configuration, options.data);\n    } else if (api === \"graphQLApi\") {\n      baseUrl =\n        GRAPHQL_URLS[self._configuration.gatewayConfiguration.environment];\n      options.endpoint = \"\";\n      requestOptions.method = \"post\";\n      requestOptions.data = assign(\n        {\n          clientSdkMetadata: {\n            platform: self._configuration.analyticsMetadata.platform,\n            source: self._configuration.analyticsMetadata.source,\n            integration: self._configuration.analyticsMetadata.integration,\n            sessionId: self._configuration.analyticsMetadata.sessionId,\n            version: VERSION,\n          },\n        },\n        options.data\n      );\n\n      requestOptions.headers = getAuthorizationHeadersForGraphQL(\n        self._configuration\n      );\n    } else {\n      throw new BraintreeError({\n        type: errors.CLIENT_OPTION_INVALID.type,\n        code: errors.CLIENT_OPTION_INVALID.code,\n        message: \"options.api is invalid.\",\n      });\n    }\n\n    requestOptions.url = baseUrl + options.endpoint;\n    requestOptions.sendAnalyticsEvent = function (kind) {\n      analytics.sendEvent(self, kind);\n    };\n\n    self._request(requestOptions, function (err, data, status) {\n      var resolvedData, requestError;\n\n      requestError = formatRequestError(status, err);\n\n      if (requestError) {\n        reject(requestError);\n\n        return;\n      }\n\n      if (api === \"graphQLApi\" && data.errors) {\n        reject(\n          convertToBraintreeError(data.errors, {\n            type: errors.CLIENT_GRAPHQL_REQUEST_ERROR.type,\n            code: errors.CLIENT_GRAPHQL_REQUEST_ERROR.code,\n            message: errors.CLIENT_GRAPHQL_REQUEST_ERROR.message,\n          })\n        );\n\n        return;\n      }\n\n      resolvedData = assign({ _httpStatus: status }, data);\n\n      if (\n        shouldCollectData &&\n        resolvedData.creditCards &&\n        resolvedData.creditCards.length > 0\n      ) {\n        self._findOrCreateFraudnetJSON(resolvedData.creditCards[0].nonce);\n\n        assets.loadScript({\n          src: FRAUDNET_URL,\n          forceScriptReload: true,\n        });\n      }\n      resolve(resolvedData);\n    });\n  });\n\n  if (typeof callback === \"function\") {\n    callback = once(deferred(callback));\n\n    requestPromise\n      .then(function (response) {\n        callback(null, response, response._httpStatus);\n      })\n      .catch(function (err) {\n        var status = err && err.details && err.details.httpStatus;\n\n        callback(err, null, status);\n      });\n\n    return;\n  }\n\n  return requestPromise; // eslint-disable-line consistent-return\n};\n\n// eslint-disable-next-line consistent-return\nfunction formatRequestError(status, err) {\n  var requestError;\n\n  if (status === -1) {\n    requestError = new BraintreeError(errors.CLIENT_REQUEST_TIMEOUT);\n  } else if (status === 401) {\n    requestError = new BraintreeError(errors.CLIENT_AUTHORIZATION_INVALID);\n  } else if (status === 403) {\n    requestError = new BraintreeError(errors.CLIENT_AUTHORIZATION_INSUFFICIENT);\n  } else if (status === 429) {\n    requestError = new BraintreeError(errors.CLIENT_RATE_LIMITED);\n  } else if (status >= 500) {\n    requestError = new BraintreeError(errors.CLIENT_GATEWAY_NETWORK);\n  } else if (status < 200 || status >= 400) {\n    requestError = convertToBraintreeError(err, {\n      type: errors.CLIENT_REQUEST_ERROR.type,\n      code: errors.CLIENT_REQUEST_ERROR.code,\n      message: errors.CLIENT_REQUEST_ERROR.message,\n    });\n  }\n\n  if (requestError) {\n    requestError.details = requestError.details || {};\n    requestError.details.httpStatus = status;\n\n    return requestError;\n  }\n}\n\nClient.prototype.toJSON = function () {\n  return this.getConfiguration();\n};\n\n/**\n * Returns the Client version.\n * @public\n * @returns {String} The created client's version.\n * @example\n * var createClient = require('braintree-web/client').create;\n *\n * createClient({\n *   authorization: CLIENT_AUTHORIZATION\n * }, function (createErr, clientInstance) {\n *   console.log(clientInstance.getVersion()); // Ex: 1.0.0\n * });\n * @returns {void}\n */\nClient.prototype.getVersion = function () {\n  return VERSION;\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/client.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * clientInstance.teardown();\n * @example <caption>With callback</caption>\n * clientInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nClient.prototype.teardown = wrapPromise(function () {\n  var self = this; // eslint-disable-line no-invalid-this\n\n  delete cachedClients[self.getConfiguration().authorization];\n  convertMethodsToError(self, methods(Client.prototype));\n\n  return Promise.resolve();\n});\n\nfunction getAuthorizationHeadersForGraphQL(configuration) {\n  var token =\n    configuration.authorizationFingerprint || configuration.authorization;\n\n  return {\n    Authorization: \"Bearer \" + token,\n    \"Braintree-Version\": BRAINTREE_VERSION,\n  };\n}\n\nmodule.exports = Client;\n\n},{\"../lib/add-metadata\":85,\"../lib/analytics\":86,\"../lib/assets\":87,\"../lib/assign\":88,\"../lib/braintree-error\":91,\"../lib/constants\":92,\"../lib/convert-methods-to-error\":93,\"../lib/convert-to-braintree-error\":94,\"../lib/create-authorization-data\":96,\"../lib/deferred\":98,\"../lib/is-verified-domain\":119,\"../lib/methods\":121,\"../lib/once\":122,\"./constants\":52,\"./errors\":53,\"./get-configuration\":54,\"./request\":65,\"./request/graphql\":63,\"@braintree/wrap-promise\":47}],52:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n  BRAINTREE_VERSION: \"2018-05-10\",\n};\n\n},{}],53:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.Client - Internal Error Codes\n * @ignore\n * @description These codes should never be experienced by the merchant directly.\n * @property {MERCHANT} CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN An error to prevent client creation for domains that are not allowed in the JS.\n * @property {INTERNAL} CLIENT_MISSING_GATEWAY_CONFIGURATION Occurs when the client is created without a gateway configuration. Should never happen.\n */\n\n/**\n * @name BraintreeError.Client - Create Error Codes\n * @description Errors that may occur when [creating the client](./module-braintree-web_client.html#.create)\n * @property {MERCHANT} CLIENT_INVALID_AUTHORIZATION Occurs when client token cannot be parsed.\n */\n\n/**\n * @name BraintreeError.Client - Request Error Codes\n * @description Errors that may occur when [using the request method](./Client.html#request)\n * @property {MERCHANT} CLIENT_OPTION_REQUIRED An option required in the request method was not provided. Usually `options.method` or `options.endpoint`\n * @property {MERCHANT} CLIENT_OPTION_INVALID The request option provided is invalid.\n * @property {MERCHANT} CLIENT_GATEWAY_NETWORK The Braintree gateway could not be contacted.\n * @property {NETWORK} CLIENT_REQUEST_TIMEOUT The request took too long to complete and timed out.\n * @property {NETWORK} CLIENT_REQUEST_ERROR The response from a request had status 400 or greater.\n * @property {NETWORK} CLIENT_GRAPHQL_REQUEST_ERROR The response from a request to GraphQL contained an error.\n * @property {MERCHANT} CLIENT_RATE_LIMITED The response from a request had a status of 429, indicating rate limiting.\n * @property {MERCHANT} CLIENT_AUTHORIZATION_INSUFFICIENT The user associated with the client token or tokenization key does not have permissions to make the request.\n * @property {MERCHANT} CLIENT_AUTHORIZATION_INVALID The provided authorization could not be found. Either the client token has expired and a new client token must be generated or the tokenization key used is set to be inactive or has been deleted.\n */\n\nvar BraintreeError = require(\"../lib/braintree-error\");\n\nmodule.exports = {\n  CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN\",\n  },\n  CLIENT_OPTION_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_OPTION_REQUIRED\",\n  },\n  CLIENT_OPTION_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_OPTION_INVALID\",\n  },\n  CLIENT_MISSING_GATEWAY_CONFIGURATION: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"CLIENT_MISSING_GATEWAY_CONFIGURATION\",\n    message: \"Missing gatewayConfiguration.\",\n  },\n  CLIENT_INVALID_AUTHORIZATION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_INVALID_AUTHORIZATION\",\n    message:\n      \"Authorization is invalid. Make sure your client token or tokenization key is valid.\",\n  },\n  CLIENT_GATEWAY_NETWORK: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_GATEWAY_NETWORK\",\n    message: \"Cannot contact the gateway at this time.\",\n  },\n  CLIENT_REQUEST_TIMEOUT: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_REQUEST_TIMEOUT\",\n    message: \"Request timed out waiting for a reply.\",\n  },\n  CLIENT_REQUEST_ERROR: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_REQUEST_ERROR\",\n    message: \"There was a problem with your request.\",\n  },\n  CLIENT_GRAPHQL_REQUEST_ERROR: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_GRAPHQL_REQUEST_ERROR\",\n    message: \"There was a problem with your request.\",\n  },\n  CLIENT_RATE_LIMITED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_RATE_LIMITED\",\n    message: \"You are being rate-limited; please try again in a few minutes.\",\n  },\n  CLIENT_AUTHORIZATION_INSUFFICIENT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_AUTHORIZATION_INSUFFICIENT\",\n    message: \"The authorization used has insufficient privileges.\",\n  },\n  CLIENT_AUTHORIZATION_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_AUTHORIZATION_INVALID\",\n    message:\n      \"Either the client token has expired and a new one should be generated or the tokenization key has been deactivated or deleted.\",\n  },\n};\n\n},{\"../lib/braintree-error\":91}],54:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar request = require(\"./request\");\nvar uuid = require(\"@braintree/uuid\");\nvar constants = require(\"../lib/constants\");\nvar errors = require(\"./errors\");\nvar GraphQL = require(\"./request/graphql\");\nvar GRAPHQL_URLS = require(\"../lib/constants\").GRAPHQL_URLS;\nvar isDateStringBeforeOrOn = require(\"../lib/is-date-string-before-or-on\");\n\nvar BRAINTREE_VERSION = require(\"./constants\").BRAINTREE_VERSION;\n\nfunction getConfiguration(authData) {\n  return new Promise(function (resolve, reject) {\n    var configuration, attrs, configUrl, reqOptions;\n    var sessionId = uuid();\n    var analyticsMetadata = {\n      merchantAppId: window.location.host,\n      platform: constants.PLATFORM,\n      sdkVersion: constants.VERSION,\n      source: constants.SOURCE,\n      // NEXT_MAJOR_VERSION remove one of these to not duplicate data. Target parity with mobile platforms approach.\n      integration: constants.INTEGRATION,\n      integrationType: constants.INTEGRATION,\n      sessionId: sessionId,\n    };\n\n    attrs = authData.attrs;\n    configUrl = authData.configUrl;\n\n    attrs._meta = analyticsMetadata;\n    attrs.braintreeLibraryVersion = constants.BRAINTREE_LIBRARY_VERSION;\n    attrs.configVersion = \"3\";\n\n    reqOptions = {\n      url: configUrl,\n      method: \"GET\",\n      data: attrs,\n    };\n\n    if (attrs.authorizationFingerprint && authData.graphQL) {\n      if (isDateStringBeforeOrOn(authData.graphQL.date, BRAINTREE_VERSION)) {\n        reqOptions.graphQL = new GraphQL({\n          graphQL: {\n            url: authData.graphQL.url,\n            features: [\"configuration\"],\n          },\n        });\n      }\n\n      reqOptions.metadata = analyticsMetadata;\n    } else if (attrs.tokenizationKey) {\n      reqOptions.graphQL = new GraphQL({\n        graphQL: {\n          url: GRAPHQL_URLS[authData.environment],\n          features: [\"configuration\"],\n        },\n      });\n\n      reqOptions.metadata = analyticsMetadata;\n    }\n\n    // NEXT_MAJOR_VERSION\n    // there are various issues with the config endpoint where the values returned\n    // do not match the values from the merchant account id passed into a client token\n    // we need to update the configuration request endpoint to be able to pass the\n    // correct values. The following ones are incorrect\n    // * applePayWeb - definitely supportedNetworks, which compiles all the card\n    //    networks from all the merchant accounts instead of providing just the\n    //    ones from the specified one. The same is probably true for ios apple pay\n    //    Also the merchantidentifier\n    // NEXT_MAJOR_VERSION Allow passing in merchant account id when creating the component\n    // to fetch the config for that merchant account id (particularly helpful when using\n    // a tokenization key for authorization)\n    request(reqOptions, function (err, response, status) {\n      var errorTemplate;\n\n      if (err) {\n        if (status === 403) {\n          errorTemplate = errors.CLIENT_AUTHORIZATION_INSUFFICIENT;\n        } else if (status === 401) {\n          errorTemplate = errors.CLIENT_AUTHORIZATION_INVALID;\n        } else {\n          errorTemplate = errors.CLIENT_GATEWAY_NETWORK;\n        }\n\n        reject(\n          new BraintreeError({\n            type: errorTemplate.type,\n            code: errorTemplate.code,\n            message: errorTemplate.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n\n        return;\n      }\n\n      configuration = {\n        authorizationType: attrs.tokenizationKey\n          ? \"TOKENIZATION_KEY\"\n          : \"CLIENT_TOKEN\",\n        authorizationFingerprint: attrs.authorizationFingerprint,\n        analyticsMetadata: analyticsMetadata,\n        gatewayConfiguration: response,\n      };\n\n      resolve(configuration);\n    });\n  });\n}\n\nmodule.exports = {\n  getConfiguration: wrapPromise(getConfiguration),\n};\n\n},{\"../lib/braintree-error\":91,\"../lib/constants\":92,\"../lib/is-date-string-before-or-on\":117,\"./constants\":52,\"./errors\":53,\"./request\":65,\"./request/graphql\":63,\"@braintree/uuid\":43,\"@braintree/wrap-promise\":47}],55:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar Client = require(\"./client\");\nvar VERSION = \"3.99.0\";\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar sharedErrors = require(\"../lib/errors\");\n\n/** @module braintree-web/client */\n\n/**\n * @function create\n * @description This function is the entry point for the <code>braintree.client</code> module. It is used for creating {@link Client} instances that service communication to Braintree servers.\n * @param {object} options Object containing all {@link Client} options:\n * @param {string} options.authorization A tokenizationKey or clientToken.\n * @param {callback} [callback] The second argument, <code>data</code>, is the {@link Client} instance.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * var createClient = require('braintree-web/client').create;\n *\n * createClient({\n *   authorization: CLIENT_AUTHORIZATION\n * }, function (createErr, clientInstance) {\n *   if (createErr) {\n *     if (createErr.code === 'CLIENT_AUTHORIZATION_INVALID') {\n *       // either the client token has expired, and a new one should be generated\n *       // or the tokenization key was deactivated or deleted\n *     } else {\n *       console.log('something went wrong creating the client instance', createErr);\n *     }\n *     return;\n *   }\n *\n *  // set up other components\n * });\n * @static\n */\nfunction create(options) {\n  if (!options.authorization) {\n    return Promise.reject(\n      new BraintreeError({\n        type: sharedErrors.INSTANTIATION_OPTION_REQUIRED.type,\n        code: sharedErrors.INSTANTIATION_OPTION_REQUIRED.code,\n        message:\n          \"options.authorization is required when instantiating a client.\",\n      })\n    );\n  }\n\n  return Client.initialize(options);\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n\n},{\"../lib/braintree-error\":91,\"../lib/errors\":101,\"./client\":51,\"@braintree/wrap-promise\":47}],56:[function(require,module,exports){\n\"use strict\";\n\nvar querystring = require(\"../../lib/querystring\");\nvar assign = require(\"../../lib/assign\").assign;\nvar prepBody = require(\"./prep-body\");\nvar parseBody = require(\"./parse-body\");\nvar xhr = require(\"./xhr\");\nvar isXHRAvailable = xhr.isAvailable;\nvar GraphQLRequest = require(\"./graphql/request\");\nvar DefaultRequest = require(\"./default-request\");\n\nvar MAX_TCP_RETRYCOUNT = 1;\nvar TCP_PRECONNECT_BUG_STATUS_CODE = 408;\n\nfunction requestShouldRetry(status) {\n  return !status || status === TCP_PRECONNECT_BUG_STATUS_CODE;\n}\n\nfunction graphQLRequestShouldRetryWithClientApi(body) {\n  var errorClass =\n    !body.data &&\n    body.errors &&\n    body.errors[0] &&\n    body.errors[0].extensions &&\n    body.errors[0].extensions.errorClass;\n\n  return errorClass === \"UNKNOWN\" || errorClass === \"INTERNAL\";\n}\n\nfunction _requestWithRetry(options, tcpRetryCount, cb) {\n  var status, resBody, ajaxRequest, body, method, headers, parsedBody;\n  var url = options.url;\n  var graphQL = options.graphQL;\n  var timeout = options.timeout;\n  var req = xhr.getRequestObject();\n  var callback = cb;\n  var isGraphQLRequest = Boolean(\n    graphQL && graphQL.isGraphQLRequest(url, options.data)\n  );\n\n  options.headers = assign(\n    { \"Content-Type\": \"application/json\" },\n    options.headers\n  );\n\n  if (isGraphQLRequest) {\n    ajaxRequest = new GraphQLRequest(options);\n  } else {\n    ajaxRequest = new DefaultRequest(options);\n  }\n\n  url = ajaxRequest.getUrl();\n  body = ajaxRequest.getBody();\n  method = ajaxRequest.getMethod();\n  headers = ajaxRequest.getHeaders();\n\n  if (method === \"GET\") {\n    url = querystring.queryify(url, body);\n    body = null;\n  }\n\n  if (isXHRAvailable) {\n    req.onreadystatechange = function () {\n      if (req.readyState !== 4) {\n        return;\n      }\n\n      if (req.status === 0 && isGraphQLRequest) {\n        // If a merchant experiences a connection\n        // issue to the GraphQL endpoint (possibly\n        // due to a Content Security Policy), retry\n        // the request against the old client API.\n        delete options.graphQL;\n        _requestWithRetry(options, tcpRetryCount, cb);\n\n        return;\n      }\n\n      parsedBody = parseBody(req.responseText);\n      resBody = ajaxRequest.adaptResponseBody(parsedBody);\n      status = ajaxRequest.determineStatus(req.status, parsedBody);\n\n      if (status >= 400 || status < 200) {\n        if (\n          isGraphQLRequest &&\n          graphQLRequestShouldRetryWithClientApi(parsedBody)\n        ) {\n          delete options.graphQL;\n          _requestWithRetry(options, tcpRetryCount, cb);\n\n          return;\n        }\n\n        if (tcpRetryCount < MAX_TCP_RETRYCOUNT && requestShouldRetry(status)) {\n          tcpRetryCount++;\n          _requestWithRetry(options, tcpRetryCount, cb);\n\n          return;\n        }\n        callback(resBody || \"error\", null, status || 500);\n      } else {\n        callback(null, resBody, status);\n      }\n    };\n  } else {\n    if (options.headers) {\n      url = querystring.queryify(url, headers);\n    }\n\n    req.onload = function () {\n      callback(null, parseBody(req.responseText), req.status);\n    };\n\n    req.onerror = function () {\n      // XDomainRequest does not report a body or status for errors, so\n      // hardcode to 'error' and 500, respectively\n      callback(\"error\", null, 500);\n    };\n\n    // This must remain for IE9 to work\n    req.onprogress = function () {};\n\n    req.ontimeout = function () {\n      callback(\"timeout\", null, -1);\n    };\n  }\n\n  try {\n    req.open(method, url, true);\n  } catch (requestOpenError) {\n    // If a merchant has a Content Security Policy and they have\n    // not allowed our endpoints, some browsers may\n    // synchronously throw an error. If it is not a GraphQL\n    // request, we throw the error. If it is a GraphQL request\n    // we remove the GraphQL option and try the request against\n    // the old client API.\n    if (!isGraphQLRequest) {\n      throw requestOpenError;\n    }\n\n    delete options.graphQL;\n\n    _requestWithRetry(options, tcpRetryCount, cb);\n\n    return;\n  }\n\n  req.timeout = timeout;\n\n  if (isXHRAvailable) {\n    Object.keys(headers).forEach(function (headerKey) {\n      req.setRequestHeader(headerKey, headers[headerKey]);\n    });\n  }\n\n  try {\n    req.send(prepBody(method, body));\n  } catch (e) {\n    /* ignored */\n  }\n}\n\nfunction request(options, cb) {\n  _requestWithRetry(options, 0, cb);\n}\n\nmodule.exports = {\n  request: request,\n};\n\n},{\"../../lib/assign\":88,\"../../lib/querystring\":123,\"./default-request\":57,\"./graphql/request\":64,\"./parse-body\":66,\"./prep-body\":67,\"./xhr\":68}],57:[function(require,module,exports){\n\"use strict\";\n\nfunction DefaultRequest(options) {\n  this._url = options.url;\n  this._data = options.data;\n  this._method = options.method;\n  this._headers = options.headers;\n}\n\nDefaultRequest.prototype.getUrl = function () {\n  return this._url;\n};\n\nDefaultRequest.prototype.getBody = function () {\n  return this._data;\n};\n\nDefaultRequest.prototype.getMethod = function () {\n  return this._method;\n};\n\nDefaultRequest.prototype.getHeaders = function () {\n  return this._headers;\n};\n\nDefaultRequest.prototype.adaptResponseBody = function (parsedBody) {\n  return parsedBody;\n};\n\nDefaultRequest.prototype.determineStatus = function (status) {\n  return status;\n};\n\nmodule.exports = DefaultRequest;\n\n},{}],58:[function(require,module,exports){\n\"use strict\";\n\nvar errorResponseAdapter = require(\"./error\");\nvar assign = require(\"../../../../lib/assign\").assign;\n\n/* eslint-disable camelcase */\nvar cardTypeTransforms = {\n  creditCard: {\n    AMERICAN_EXPRESS: \"American Express\",\n    DISCOVER: \"Discover\",\n    INTERNATIONAL_MAESTRO: \"Maestro\",\n    JCB: \"JCB\",\n    MASTERCARD: \"MasterCard\",\n    SOLO: \"Solo\",\n    UK_MAESTRO: \"UK Maestro\",\n    UNION_PAY: \"UnionPay\",\n    VISA: \"Visa\",\n    ELO: \"Elo\",\n    HIPER: \"Hiper\",\n    HIPERCARD: \"Hipercard\",\n  },\n  applePayWeb: {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    DISCOVER: \"discover\",\n    AMERICAN_EXPRESS: \"amex\",\n    INTERNATIONAL_MAESTRO: \"maestro\",\n    ELO: \"elo\",\n  },\n  visaCheckout: {\n    VISA: \"Visa\",\n    MASTERCARD: \"MasterCard\",\n    DISCOVER: \"Discover\",\n    AMERICAN_EXPRESS: \"American Express\",\n  },\n  googlePay: {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    DISCOVER: \"discover\",\n    AMERICAN_EXPRESS: \"amex\",\n    INTERNATIONAL_MAESTRO: \"maestro\",\n    ELO: \"elo\",\n  },\n  masterpass: {\n    VISA: \"visa\",\n    MASTERCARD: \"master\",\n    DISCOVER: \"discover\",\n    AMERICAN_EXPRESS: \"amex\",\n    DINERS: \"diners\",\n    INTERNATIONAL_MAESTRO: \"maestro\",\n    JCB: \"jcb\",\n  },\n};\n/* eslint-enable camelcase */\n\nfunction configurationResponseAdapter(responseBody, ctx) {\n  var adaptedResponse;\n\n  if (responseBody.data && !responseBody.errors) {\n    adaptedResponse = adaptConfigurationResponseBody(responseBody, ctx);\n  } else {\n    adaptedResponse = errorResponseAdapter(responseBody);\n  }\n\n  return adaptedResponse;\n}\n\nfunction adaptConfigurationResponseBody(body, ctx) {\n  var configuration = body.data.clientConfiguration;\n  var response;\n\n  response = {\n    environment: configuration.environment.toLowerCase(),\n    clientApiUrl: configuration.clientApiUrl,\n    assetsUrl: configuration.assetsUrl,\n    analytics: {\n      url: configuration.analyticsUrl,\n    },\n    merchantId: configuration.merchantId,\n    venmo: \"off\",\n  };\n\n  if (configuration.supportedFeatures) {\n    response.graphQL = {\n      url: ctx._graphQL._config.url,\n      features: configuration.supportedFeatures.map(function (feature) {\n        return feature.toLowerCase();\n      }),\n    };\n  }\n\n  if (configuration.braintreeApi) {\n    response.braintreeApi = configuration.braintreeApi;\n  }\n\n  if (configuration.applePayWeb) {\n    response.applePayWeb = configuration.applePayWeb;\n    response.applePayWeb.supportedNetworks = mapCardTypes(\n      configuration.applePayWeb.supportedCardBrands,\n      cardTypeTransforms.applePayWeb\n    );\n\n    delete response.applePayWeb.supportedCardBrands;\n  }\n\n  if (configuration.ideal) {\n    response.ideal = configuration.ideal;\n  }\n\n  if (configuration.kount) {\n    response.kount = {\n      kountMerchantId: configuration.kount.merchantId,\n    };\n  }\n\n  if (configuration.creditCard) {\n    response.challenges = configuration.creditCard.challenges.map(function (\n      challenge\n    ) {\n      return challenge.toLowerCase();\n    });\n\n    response.creditCards = {\n      supportedCardTypes: mapCardTypes(\n        configuration.creditCard.supportedCardBrands,\n        cardTypeTransforms.creditCard\n      ),\n    };\n    response.threeDSecureEnabled = configuration.creditCard.threeDSecureEnabled;\n    response.threeDSecure = configuration.creditCard.threeDSecure;\n  } else {\n    response.challenges = [];\n    response.creditCards = {\n      supportedCardTypes: [],\n    };\n    response.threeDSecureEnabled = false;\n  }\n\n  if (configuration.googlePay) {\n    response.androidPay = {\n      displayName: configuration.googlePay.displayName,\n      enabled: true,\n      environment: configuration.googlePay.environment.toLowerCase(),\n      googleAuthorizationFingerprint:\n        configuration.googlePay.googleAuthorization,\n      paypalClientId: configuration.googlePay.paypalClientId,\n      supportedNetworks: mapCardTypes(\n        configuration.googlePay.supportedCardBrands,\n        cardTypeTransforms.googlePay\n      ),\n    };\n  }\n\n  if (configuration.venmo) {\n    response.payWithVenmo = {\n      merchantId: configuration.venmo.merchantId,\n      accessToken: configuration.venmo.accessToken,\n      environment: configuration.venmo.environment.toLowerCase(),\n      enrichedCustomerDataEnabled:\n        configuration.venmo.enrichedCustomerDataEnabled,\n    };\n  }\n\n  if (configuration.paypal) {\n    response.paypalEnabled = true;\n    response.paypal = assign({}, configuration.paypal);\n    response.paypal.currencyIsoCode = response.paypal.currencyCode;\n    response.paypal.environment = response.paypal.environment.toLowerCase();\n\n    delete response.paypal.currencyCode;\n  } else {\n    response.paypalEnabled = false;\n  }\n\n  if (configuration.unionPay) {\n    response.unionPay = {\n      enabled: true,\n      merchantAccountId: configuration.unionPay.merchantAccountId,\n    };\n  }\n\n  if (configuration.visaCheckout) {\n    response.visaCheckout = {\n      apikey: configuration.visaCheckout.apiKey,\n      encryptionKey: configuration.visaCheckout.encryptionKey,\n      externalClientId: configuration.visaCheckout.externalClientId,\n      supportedCardTypes: mapCardTypes(\n        configuration.visaCheckout.supportedCardBrands,\n        cardTypeTransforms.visaCheckout\n      ),\n    };\n  }\n\n  if (configuration.masterpass) {\n    response.masterpass = {\n      merchantCheckoutId: configuration.masterpass.merchantCheckoutId,\n      supportedNetworks: mapCardTypes(\n        configuration.masterpass.supportedCardBrands,\n        cardTypeTransforms.masterpass\n      ),\n    };\n  }\n\n  if (configuration.usBankAccount) {\n    response.usBankAccount = {\n      routeId: configuration.usBankAccount.routeId,\n      plaid: {\n        publicKey: configuration.usBankAccount.plaidPublicKey,\n      },\n    };\n  }\n\n  return response;\n}\n\nfunction mapCardTypes(cardTypes, cardTypeTransformMap) {\n  return cardTypes.reduce(function (acc, type) {\n    if (cardTypeTransformMap.hasOwnProperty(type)) {\n      return acc.concat(cardTypeTransformMap[type]);\n    }\n\n    return acc;\n  }, []);\n}\n\nmodule.exports = configurationResponseAdapter;\n\n},{\"../../../../lib/assign\":88,\"./error\":60}],59:[function(require,module,exports){\n\"use strict\";\n\nvar errorResponseAdapter = require(\"./error\");\n\nvar CARD_BRAND_MAP = {\n  /* eslint-disable camelcase */\n  AMERICAN_EXPRESS: \"American Express\",\n  DINERS: \"Discover\",\n  DISCOVER: \"Discover\",\n  ELO: \"Elo\",\n  HIPER: \"Hiper\",\n  HIPERCARD: \"Hipercard\",\n  INTERNATIONAL_MAESTRO: \"Maestro\",\n  JCB: \"JCB\",\n  MASTERCARD: \"MasterCard\",\n  UK_MAESTRO: \"Maestro\",\n  UNION_PAY: \"UnionPay\",\n  VISA: \"Visa\",\n  /* eslint-enable camelcase */\n};\n\nvar BIN_DATA_MAP = {\n  YES: \"Yes\",\n  NO: \"No\",\n  UNKNOWN: \"Unknown\",\n};\n\nvar AUTHENTICATION_INSIGHT_MAP = {\n  PSDTWO: \"psd2\",\n};\n\nfunction creditCardTokenizationResponseAdapter(responseBody) {\n  var adaptedResponse;\n\n  if (responseBody.data && !responseBody.errors) {\n    adaptedResponse = adaptTokenizeCreditCardResponseBody(responseBody);\n  } else {\n    adaptedResponse = errorResponseAdapter(responseBody);\n  }\n\n  return adaptedResponse;\n}\n\nfunction adaptTokenizeCreditCardResponseBody(body) {\n  var data = body.data.tokenizeCreditCard;\n  var creditCard = data.creditCard;\n  var lastTwo = creditCard.last4 ? creditCard.last4.substr(2, 4) : \"\";\n  var binData = creditCard.binData;\n  var response, regulationEnvironment;\n\n  if (binData) {\n    [\n      \"commercial\",\n      \"debit\",\n      \"durbinRegulated\",\n      \"healthcare\",\n      \"payroll\",\n      \"prepaid\",\n    ].forEach(function (key) {\n      if (binData[key]) {\n        binData[key] = BIN_DATA_MAP[binData[key]];\n      } else {\n        binData[key] = \"Unknown\";\n      }\n    });\n\n    [\"issuingBank\", \"countryOfIssuance\", \"productId\"].forEach(function (key) {\n      if (!binData[key]) {\n        binData[key] = \"Unknown\";\n      }\n    });\n  }\n\n  response = {\n    creditCards: [\n      {\n        binData: binData,\n        consumed: false,\n        description: lastTwo ? \"ending in \" + lastTwo : \"\",\n        nonce: data.token,\n        details: {\n          cardholderName: creditCard.cardholderName,\n          expirationMonth: creditCard.expirationMonth,\n          expirationYear: creditCard.expirationYear,\n          bin: creditCard.bin || \"\",\n          cardType: CARD_BRAND_MAP[creditCard.brandCode] || \"Unknown\",\n          lastFour: creditCard.last4 || \"\",\n          lastTwo: lastTwo,\n        },\n        type: \"CreditCard\",\n        threeDSecureInfo: null,\n      },\n    ],\n  };\n\n  if (data.authenticationInsight) {\n    regulationEnvironment =\n      data.authenticationInsight.customerAuthenticationRegulationEnvironment;\n    response.creditCards[0].authenticationInsight = {\n      regulationEnvironment:\n        AUTHENTICATION_INSIGHT_MAP[regulationEnvironment] ||\n        regulationEnvironment.toLowerCase(),\n    };\n  }\n\n  return response;\n}\n\nmodule.exports = creditCardTokenizationResponseAdapter;\n\n},{\"./error\":60}],60:[function(require,module,exports){\n\"use strict\";\n\nfunction errorResponseAdapter(responseBody) {\n  var response;\n  var errorClass =\n    responseBody.errors &&\n    responseBody.errors[0] &&\n    responseBody.errors[0].extensions &&\n    responseBody.errors[0].extensions.errorClass;\n\n  if (errorClass === \"VALIDATION\") {\n    response = userErrorResponseAdapter(responseBody);\n  } else if (errorClass) {\n    response = errorWithClassResponseAdapter(responseBody);\n  } else {\n    response = {\n      error: { message: \"There was a problem serving your request\" },\n      fieldErrors: [],\n    };\n  }\n\n  return response;\n}\n\nfunction errorWithClassResponseAdapter(responseBody) {\n  return {\n    error: { message: responseBody.errors[0].message },\n    fieldErrors: [],\n  };\n}\n\nfunction userErrorResponseAdapter(responseBody) {\n  var fieldErrors = buildFieldErrors(responseBody.errors);\n\n  if (fieldErrors.length === 0) {\n    return { error: { message: responseBody.errors[0].message } };\n  }\n\n  return {\n    error: { message: getLegacyMessage(fieldErrors) },\n    fieldErrors: fieldErrors,\n  };\n}\n\nfunction buildFieldErrors(errors) {\n  var fieldErrors = [];\n\n  errors.forEach(function (error) {\n    if (!(error.extensions && error.extensions.inputPath)) {\n      return;\n    }\n    addFieldError(error.extensions.inputPath.slice(1), error, fieldErrors);\n  });\n\n  return fieldErrors;\n}\n\nfunction addFieldError(inputPath, errorDetail, fieldErrors) {\n  var fieldError;\n  var legacyCode = errorDetail.extensions.legacyCode;\n  var inputField = inputPath[0];\n\n  if (inputPath.length === 1) {\n    fieldErrors.push({\n      code: legacyCode,\n      field: inputField,\n      message: errorDetail.message,\n    });\n\n    return;\n  }\n\n  fieldErrors.forEach(function (candidate) {\n    if (candidate.field === inputField) {\n      fieldError = candidate;\n    }\n  });\n\n  if (!fieldError) {\n    fieldError = { field: inputField, fieldErrors: [] };\n    fieldErrors.push(fieldError);\n  }\n\n  addFieldError(inputPath.slice(1), errorDetail, fieldError.fieldErrors);\n}\n\nfunction getLegacyMessage(errors) {\n  var legacyMessages = {\n    creditCard: \"Credit card is invalid\",\n  };\n\n  var field = errors[0].field;\n\n  return legacyMessages[field];\n}\n\nmodule.exports = errorResponseAdapter;\n\n},{}],61:[function(require,module,exports){\n\"use strict\";\n\nvar CONFIGURATION_QUERY =\n  \"query ClientConfiguration { \" +\n  \"  clientConfiguration { \" +\n  \"    analyticsUrl \" +\n  \"    environment \" +\n  \"    merchantId \" +\n  \"    assetsUrl \" +\n  \"    clientApiUrl \" +\n  \"    creditCard { \" +\n  \"      supportedCardBrands \" +\n  \"      challenges \" +\n  \"      threeDSecureEnabled \" +\n  \"      threeDSecure { \" +\n  \"        cardinalAuthenticationJWT \" +\n  \"      } \" +\n  \"    } \" +\n  \"    applePayWeb { \" +\n  \"      countryCode \" +\n  \"      currencyCode \" +\n  \"      merchantIdentifier \" +\n  \"      supportedCardBrands \" +\n  \"    } \" +\n  \"    googlePay { \" +\n  \"      displayName \" +\n  \"      supportedCardBrands \" +\n  \"      environment \" +\n  \"      googleAuthorization \" +\n  \"      paypalClientId \" +\n  \"    } \" +\n  \"    ideal { \" +\n  \"      routeId \" +\n  \"      assetsUrl \" +\n  \"    } \" +\n  \"    kount { \" +\n  \"      merchantId \" +\n  \"    } \" +\n  \"    masterpass { \" +\n  \"      merchantCheckoutId \" +\n  \"      supportedCardBrands \" +\n  \"    } \" +\n  \"    paypal { \" +\n  \"      displayName \" +\n  \"      clientId \" +\n  \"      assetsUrl \" +\n  \"      environment \" +\n  \"      environmentNoNetwork \" +\n  \"      unvettedMerchant \" +\n  \"      braintreeClientId \" +\n  \"      billingAgreementsEnabled \" +\n  \"      merchantAccountId \" +\n  \"      currencyCode \" +\n  \"      payeeEmail \" +\n  \"    } \" +\n  \"    unionPay { \" +\n  \"      merchantAccountId \" +\n  \"    } \" +\n  \"    usBankAccount { \" +\n  \"      routeId \" +\n  \"      plaidPublicKey \" +\n  \"    } \" +\n  \"    venmo { \" +\n  \"      merchantId \" +\n  \"      accessToken \" +\n  \"      environment \" +\n  \"      enrichedCustomerDataEnabled\" +\n  \"    } \" +\n  \"    visaCheckout { \" +\n  \"      apiKey \" +\n  \"      externalClientId \" +\n  \"      supportedCardBrands \" +\n  \"    } \" +\n  \"    braintreeApi { \" +\n  \"      accessToken \" +\n  \"      url \" +\n  \"    } \" +\n  \"    supportedFeatures \" +\n  \"  } \" +\n  \"}\";\n\nfunction configuration() {\n  return {\n    query: CONFIGURATION_QUERY,\n    operationName: \"ClientConfiguration\",\n  };\n}\n\nmodule.exports = configuration;\n\n},{}],62:[function(require,module,exports){\n\"use strict\";\n\nvar assign = require(\"../../../../lib/assign\").assign;\n\nfunction createMutation(config) {\n  var hasAuthenticationInsight = config.hasAuthenticationInsight;\n  var mutation = \"mutation TokenizeCreditCard($input: TokenizeCreditCardInput!\";\n\n  if (hasAuthenticationInsight) {\n    mutation += \", $authenticationInsightInput: AuthenticationInsightInput!\";\n  }\n\n  mutation +=\n    \") { \" +\n    \"  tokenizeCreditCard(input: $input) { \" +\n    \"    token \" +\n    \"    creditCard { \" +\n    \"      bin \" +\n    \"      brandCode \" +\n    \"      last4 \" +\n    \"      cardholderName \" +\n    \"      expirationMonth\" +\n    \"      expirationYear\" +\n    \"      binData { \" +\n    \"        prepaid \" +\n    \"        healthcare \" +\n    \"        debit \" +\n    \"        durbinRegulated \" +\n    \"        commercial \" +\n    \"        payroll \" +\n    \"        issuingBank \" +\n    \"        countryOfIssuance \" +\n    \"        productId \" +\n    \"      } \" +\n    \"    } \";\n\n  if (hasAuthenticationInsight) {\n    mutation +=\n      \"    authenticationInsight(input: $authenticationInsightInput) {\" +\n      \"      customerAuthenticationRegulationEnvironment\" +\n      \"    }\";\n  }\n\n  mutation += \"  } }\";\n\n  return mutation;\n}\n\nfunction createCreditCardTokenizationBody(body, options) {\n  var cc = body.creditCard;\n  var billingAddress = cc && cc.billingAddress;\n  var expDate = cc && cc.expirationDate;\n  var expirationMonth =\n    cc && (cc.expirationMonth || (expDate && expDate.split(\"/\")[0].trim()));\n  var expirationYear =\n    cc && (cc.expirationYear || (expDate && expDate.split(\"/\")[1].trim()));\n  var variables = {\n    input: {\n      creditCard: {\n        number: cc && cc.number,\n        expirationMonth: expirationMonth,\n        expirationYear: expirationYear,\n        cvv: cc && cc.cvv,\n        cardholderName: cc && cc.cardholderName,\n      },\n      options: {},\n    },\n  };\n\n  if (options.hasAuthenticationInsight) {\n    variables.authenticationInsightInput = {\n      merchantAccountId: body.merchantAccountId,\n    };\n  }\n\n  if (billingAddress) {\n    variables.input.creditCard.billingAddress = billingAddress;\n  }\n\n  variables.input = addValidationRule(body, variables.input);\n\n  return variables;\n}\n\nfunction addValidationRule(body, input) {\n  var validate;\n\n  if (\n    body.creditCard &&\n    body.creditCard.options &&\n    typeof body.creditCard.options.validate === \"boolean\"\n  ) {\n    validate = body.creditCard.options.validate;\n  } else if (\n    (body.authorizationFingerprint && body.tokenizationKey) ||\n    body.authorizationFingerprint\n  ) {\n    validate = true;\n  } else if (body.tokenizationKey) {\n    validate = false;\n  }\n\n  if (typeof validate === \"boolean\") {\n    input.options = assign(\n      {\n        validate: validate,\n      },\n      input.options\n    );\n  }\n\n  return input;\n}\n\nfunction creditCardTokenization(body) {\n  var options = {\n    hasAuthenticationInsight: Boolean(\n      body.authenticationInsight && body.merchantAccountId\n    ),\n  };\n\n  return {\n    query: createMutation(options),\n    variables: createCreditCardTokenizationBody(body, options),\n    operationName: \"TokenizeCreditCard\",\n  };\n}\n\nmodule.exports = creditCardTokenization;\n\n},{\"../../../../lib/assign\":88}],63:[function(require,module,exports){\n\"use strict\";\n\nvar features = {\n  tokenize_credit_cards: \"payment_methods/credit_cards\", // eslint-disable-line camelcase\n  configuration: \"configuration\",\n};\n\nvar disallowedInputPaths = [\"creditCard.options.unionPayEnrollment\"];\n\nfunction GraphQL(config) {\n  this._config = config.graphQL;\n}\n\nGraphQL.prototype.getGraphQLEndpoint = function () {\n  return this._config.url;\n};\n\nGraphQL.prototype.isGraphQLRequest = function (url, body) {\n  var featureEnabled;\n  var path = this.getClientApiPath(url);\n\n  if (!this._isGraphQLEnabled() || !path) {\n    return false;\n  }\n\n  featureEnabled = this._config.features.some(function (feature) {\n    return features[feature] === path;\n  });\n\n  if (containsDisallowedlistedKeys(body)) {\n    return false;\n  }\n\n  return featureEnabled;\n};\n\nGraphQL.prototype.getClientApiPath = function (url) {\n  var path;\n  var clientApiPrefix = \"/client_api/v1/\";\n  var pathParts = url.split(clientApiPrefix);\n\n  if (pathParts.length > 1) {\n    path = pathParts[1].split(\"?\")[0];\n  }\n\n  return path;\n};\n\nGraphQL.prototype._isGraphQLEnabled = function () {\n  return Boolean(this._config);\n};\n\nfunction containsDisallowedlistedKeys(body) {\n  return disallowedInputPaths.some(function (keys) {\n    var value = keys.split(\".\").reduce(function (accumulator, key) {\n      return accumulator && accumulator[key];\n    }, body);\n\n    return value !== undefined; // eslint-disable-line no-undefined\n  });\n}\n\nmodule.exports = GraphQL;\n\n},{}],64:[function(require,module,exports){\n\"use strict\";\n\nvar BRAINTREE_VERSION = require(\"../../constants\").BRAINTREE_VERSION;\n\nvar assign = require(\"../../../lib/assign\").assign;\nvar snakeCaseToCamelCase = require(\"../../../lib/snake-case-to-camel-case\");\n\nvar creditCardTokenizationBodyGenerator = require(\"./generators/credit-card-tokenization\");\nvar creditCardTokenizationResponseAdapter = require(\"./adapters/credit-card-tokenization\");\n\nvar configurationBodyGenerator = require(\"./generators/configuration\");\nvar configurationResponseAdapter = require(\"./adapters/configuration\");\n\nvar generators = {\n  \"payment_methods/credit_cards\": creditCardTokenizationBodyGenerator,\n  configuration: configurationBodyGenerator,\n};\nvar adapters = {\n  \"payment_methods/credit_cards\": creditCardTokenizationResponseAdapter,\n  configuration: configurationResponseAdapter,\n};\n\nfunction GraphQLRequest(options) {\n  var clientApiPath = options.graphQL.getClientApiPath(options.url);\n\n  this._graphQL = options.graphQL;\n  this._data = options.data;\n  this._method = options.method;\n  this._headers = options.headers;\n  this._clientSdkMetadata = {\n    source: options.metadata.source,\n    integration: options.metadata.integration,\n    sessionId: options.metadata.sessionId,\n  };\n  this._sendAnalyticsEvent = options.sendAnalyticsEvent || Function.prototype;\n\n  this._generator = generators[clientApiPath];\n  this._adapter = adapters[clientApiPath];\n\n  this._sendAnalyticsEvent(\"graphql.init\");\n}\n\nGraphQLRequest.prototype.getUrl = function () {\n  return this._graphQL.getGraphQLEndpoint();\n};\n\nGraphQLRequest.prototype.getBody = function () {\n  var formattedBody = formatBodyKeys(this._data);\n  var generatedBody = this._generator(formattedBody);\n  var body = assign(\n    { clientSdkMetadata: this._clientSdkMetadata },\n    generatedBody\n  );\n\n  return JSON.stringify(body);\n};\n\nGraphQLRequest.prototype.getMethod = function () {\n  return \"POST\";\n};\n\nGraphQLRequest.prototype.getHeaders = function () {\n  var authorization, headers;\n\n  if (this._data.authorizationFingerprint) {\n    this._sendAnalyticsEvent(\"graphql.authorization-fingerprint\");\n    authorization = this._data.authorizationFingerprint;\n  } else {\n    this._sendAnalyticsEvent(\"graphql.tokenization-key\");\n    authorization = this._data.tokenizationKey;\n  }\n\n  headers = {\n    Authorization: \"Bearer \" + authorization,\n    \"Braintree-Version\": BRAINTREE_VERSION,\n  };\n\n  return assign({}, this._headers, headers);\n};\n\nGraphQLRequest.prototype.adaptResponseBody = function (parsedBody) {\n  return this._adapter(parsedBody, this);\n};\n\nGraphQLRequest.prototype.determineStatus = function (\n  httpStatus,\n  parsedResponse\n) {\n  var status, errorClass;\n\n  if (httpStatus === 200) {\n    errorClass =\n      parsedResponse.errors &&\n      parsedResponse.errors[0] &&\n      parsedResponse.errors[0].extensions &&\n      parsedResponse.errors[0].extensions.errorClass;\n\n    if (parsedResponse.data && !parsedResponse.errors) {\n      status = 200;\n    } else if (errorClass === \"VALIDATION\") {\n      status = 422;\n    } else if (errorClass === \"AUTHORIZATION\") {\n      status = 403;\n    } else if (errorClass === \"AUTHENTICATION\") {\n      status = 401;\n    } else if (isGraphQLError(errorClass, parsedResponse)) {\n      status = 403;\n    } else {\n      status = 500;\n    }\n  } else if (!httpStatus) {\n    status = 500;\n  } else {\n    status = httpStatus;\n  }\n\n  this._sendAnalyticsEvent(\"graphql.status.\" + httpStatus);\n  this._sendAnalyticsEvent(\"graphql.determinedStatus.\" + status);\n\n  return status;\n};\n\nfunction isGraphQLError(errorClass, parsedResponse) {\n  return !errorClass && parsedResponse.errors[0].message;\n}\n\nfunction formatBodyKeys(originalBody) {\n  var body = {};\n\n  Object.keys(originalBody).forEach(function (key) {\n    var camelCaseKey = snakeCaseToCamelCase(key);\n\n    if (typeof originalBody[key] === \"object\") {\n      body[camelCaseKey] = formatBodyKeys(originalBody[key]);\n    } else if (typeof originalBody[key] === \"number\") {\n      body[camelCaseKey] = String(originalBody[key]);\n    } else {\n      body[camelCaseKey] = originalBody[key];\n    }\n  });\n\n  return body;\n}\n\nmodule.exports = GraphQLRequest;\n\n},{\"../../../lib/assign\":88,\"../../../lib/snake-case-to-camel-case\":125,\"../../constants\":52,\"./adapters/configuration\":58,\"./adapters/credit-card-tokenization\":59,\"./generators/configuration\":61,\"./generators/credit-card-tokenization\":62}],65:[function(require,module,exports){\n\"use strict\";\n\nvar once = require(\"../../lib/once\");\nvar AJAXDriver = require(\"./ajax-driver\");\n\nmodule.exports = function (options, cb) {\n  cb = once(cb || Function.prototype);\n  options.method = (options.method || \"GET\").toUpperCase();\n  options.timeout = options.timeout == null ? 60000 : options.timeout;\n  options.data = options.data || {};\n\n  AJAXDriver.request(options, cb);\n};\n\n},{\"../../lib/once\":122,\"./ajax-driver\":56}],66:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (body) {\n  try {\n    body = JSON.parse(body);\n  } catch (e) {\n    /* ignored */\n  }\n\n  return body;\n};\n\n},{}],67:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (method, body) {\n  if (typeof method !== \"string\") {\n    throw new Error(\"Method must be a string\");\n  }\n\n  if (method.toLowerCase() !== \"get\" && body != null) {\n    body = typeof body === \"string\" ? body : JSON.stringify(body);\n  }\n\n  return body;\n};\n\n},{}],68:[function(require,module,exports){\n\"use strict\";\n\nvar isXHRAvailable =\n  typeof window !== \"undefined\" &&\n  window.XMLHttpRequest &&\n  \"withCredentials\" in new window.XMLHttpRequest();\n\nfunction getRequestObject() {\n  return isXHRAvailable\n    ? new window.XMLHttpRequest()\n    : new window.XDomainRequest();\n}\n\nmodule.exports = {\n  isAvailable: isXHRAvailable,\n  getRequestObject: getRequestObject,\n};\n\n},{}],69:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.Google Payment - Creation Error Codes\n * @description Errors that occur when [creating the Google Payment component](./module-braintree-web_google-payment.html#.create).\n * @property {MERCHANT} GOOGLE_PAYMENT_NOT_ENABLED Occurs when Google Pay is not enabled on the Braintree control panel.\n * @property {MERCHANT} GOOGLE_PAYMENT_UNSUPPORTED_VERSION Occurs when a Google Pay version is used that is not supported by the Braintree SDK.\n */\n\n/**\n * @name BraintreeError.Google Payment - parseResponse Error Codes\n * @description Errors that occur when [parsing the response from Google](./GooglePayment.html#parseResponse).\n * @property {UNKNOWN} GOOGLE_PAYMENT_GATEWAY_ERROR Occurs when Google Pay could not be tokenized.\n */\n\nvar BraintreeError = require(\"../lib/braintree-error\");\n\nmodule.exports = {\n  GOOGLE_PAYMENT_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"GOOGLE_PAYMENT_NOT_ENABLED\",\n    message: \"Google Pay is not enabled for this merchant.\",\n  },\n  GOOGLE_PAYMENT_GATEWAY_ERROR: {\n    code: \"GOOGLE_PAYMENT_GATEWAY_ERROR\",\n    message:\n      \"There was an error when tokenizing the Google Pay payment method.\",\n    type: BraintreeError.types.UNKNOWN,\n  },\n  GOOGLE_PAYMENT_UNSUPPORTED_VERSION: {\n    code: \"GOOGLE_PAYMENT_UNSUPPORTED_VERSION\",\n    type: BraintreeError.types.MERCHANT,\n  },\n};\n\n},{\"../lib/braintree-error\":91}],70:[function(require,module,exports){\n\"use strict\";\n\nvar analytics = require(\"../lib/analytics\");\nvar assign = require(\"../lib/assign\").assign;\nvar convertMethodsToError = require(\"../lib/convert-methods-to-error\");\nvar find = require(\"../lib/find\");\nvar generateGooglePayConfiguration = require(\"../lib/generate-google-pay-configuration\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar errors = require(\"./errors\");\nvar methods = require(\"../lib/methods\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\n\nvar CREATE_PAYMENT_DATA_REQUEST_METHODS = {\n  1: \"_createV1PaymentDataRequest\",\n  2: \"_createV2PaymentDataRequest\",\n};\n\n/**\n * @typedef {object} GooglePayment~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {object} details Additional account details.\n * @property {string} details.cardType Type of card, ex: Visa, MasterCard.\n * @property {string} details.lastFour Last four digits of card number.\n * @property {string} details.lastTwo Last two digits of card number.\n * @property {boolean} details.isNetworkTokenized True if the card is network tokenized.\n * @property {string} details.bin First six digits of card number.\n * @property {string} description A human-readable description.\n * @property {string} type The payment method type, `CreditCard` or `AndroidPayCard`.\n * @property {object} binData Information about the card based on the bin.\n * @property {string} binData.commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.countryOfIssuance The country of issuance.\n * @property {string} binData.debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.issuingBank The issuing bank.\n * @property {string} binData.payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.productId The product id.\n */\n\n/**\n * @class GooglePayment\n * @param {object} options Google Payment {@link module:braintree-web/google-payment.create create} options.\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/google-payment.create|braintree-web.google-payment.create} instead.</strong>\n * @classdesc This class represents a Google Payment component produced by {@link module:braintree-web/google-payment.create|braintree-web/google-payment.create}. Instances of this class have methods for initializing the Google Pay flow.\n */\nfunction GooglePayment(options) {\n  this._createPromise = options.createPromise;\n  this._client = options.client;\n  this._useDeferredClient = options.useDeferredClient;\n  // NEXT_MAJOR_VERSION this should be updated to 2 (or whatever the current latest version is)\n  this._googlePayVersion = options.googlePayVersion || 1;\n  this._googleMerchantId = options.googleMerchantId;\n\n  if (this._isUnsupportedGooglePayAPIVersion()) {\n    throw new BraintreeError({\n      code: errors.GOOGLE_PAYMENT_UNSUPPORTED_VERSION.code,\n      message:\n        \"The Braintree SDK does not support Google Pay version \" +\n        this._googlePayVersion +\n        \". Please upgrade the version of your Braintree SDK and contact support if this error persists.\",\n      type: errors.GOOGLE_PAYMENT_UNSUPPORTED_VERSION.type,\n    });\n  }\n}\n\nGooglePayment.prototype._waitForClient = function () {\n  if (this._client) {\n    return Promise.resolve();\n  }\n\n  return this._createPromise.then(\n    function (client) {\n      this._client = client;\n    }.bind(this)\n  );\n};\n\nGooglePayment.prototype._isUnsupportedGooglePayAPIVersion = function () {\n  // if we don't have createPaymentDatqRequest method for the specific\n  // API version, then the version is not supported\n  return !(this._googlePayVersion in CREATE_PAYMENT_DATA_REQUEST_METHODS);\n};\n\nGooglePayment.prototype._getDefaultConfig = function () {\n  if (!this._defaultConfig) {\n    this._defaultConfig = generateGooglePayConfiguration(\n      this._client.getConfiguration(),\n      this._googlePayVersion,\n      this._googleMerchantId\n    );\n  }\n\n  return this._defaultConfig;\n};\n\nGooglePayment.prototype._createV1PaymentDataRequest = function (\n  paymentDataRequest\n) {\n  var defaultConfig = this._getDefaultConfig();\n  var overrideCardNetworks =\n    paymentDataRequest.cardRequirements &&\n    paymentDataRequest.cardRequirements.allowedCardNetworks;\n  var defaultConfigCardNetworks =\n    defaultConfig.cardRequirements.allowedCardNetworks;\n  var allowedCardNetworks = overrideCardNetworks || defaultConfigCardNetworks;\n\n  paymentDataRequest = assign({}, defaultConfig, paymentDataRequest);\n\n  // this way we can preserve allowedCardNetworks from default integration\n  // if merchant did not pass any in `cardRequirements`\n  paymentDataRequest.cardRequirements.allowedCardNetworks = allowedCardNetworks;\n\n  return paymentDataRequest;\n};\n\nGooglePayment.prototype._createV2PaymentDataRequest = function (\n  paymentDataRequest\n) {\n  var defaultConfig = this._getDefaultConfig();\n\n  if (paymentDataRequest.allowedPaymentMethods) {\n    paymentDataRequest.allowedPaymentMethods.forEach(function (paymentMethod) {\n      var defaultPaymentMethod = find(\n        defaultConfig.allowedPaymentMethods,\n        \"type\",\n        paymentMethod.type\n      );\n\n      if (defaultPaymentMethod) {\n        applyDefaultsToPaymentMethodConfiguration(\n          paymentMethod,\n          defaultPaymentMethod\n        );\n      }\n    });\n  }\n\n  paymentDataRequest = assign({}, defaultConfig, paymentDataRequest);\n\n  return paymentDataRequest;\n};\n\n/**\n * Create a configuration object for use in the `loadPaymentData` method.\n *\n * **Note**: Version 1 of the Google Pay Api is deprecated and will become unsupported in a future version. Until then, version 1 will continue to be used by default, and version 1 schema parameters and overrides will remain functional on existing integrations. However, new integrations and all following examples will be presented in the GooglePay version 2 schema. See [Google Pay's upgrade guide](https://developers.google.com/pay/api/web/guides/resources/update-to-latest-version) to see how to update your integration.\n *\n * If `options.googlePayVersion === 2` was set during the initial {@link module:braintree-web/google-payment.create|create} call, overrides must match the Google Pay v2 schema to be valid.\n *\n * @public\n * @param {object} overrides The supplied parameters for creating the PaymentDataRequest object. Required parameters are:\n *  @param {object} overrides.transactionInfo Object according to the [Google Pay Transaction Info](https://developers.google.com/pay/api/web/reference/object#TransactionInfo) spec.\n *  Optionally, any of the parameters in the [PaymentDataRequest](https://developers.google.com/pay/api/web/reference/object#PaymentDataRequest) parameters can be overridden, but note that it is recommended only to override top level parameters to avoid squashing deeply nested configuration objects. An example can be found below showing how to safely edit these deeply nested objects.\n * @example\n * var paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({\n *   merchantInfo: {\n *     merchantId: 'my-merchant-id-from-google'\n *   },\n *   transactionInfo: {\n *     currencyCode: 'USD',\n *     totalPriceStatus: 'FINAL',\n *     totalPrice: '100.00'\n *   }\n * });\n *\n * // Update card payment methods to require billing address\n * var cardPaymentMethod = paymentDataRequest.allowedPaymentMethods;\n * cardPaymentMethod.parameters.billingAddressRequired = true;\n * cardPaymentMethod.parameters.billingAddressParameters = {\n *   format: 'FULL',\n *   phoneNumberRequired: true\n * };\n *\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * })\n *\n * paymentsClient.loadPaymentData(paymentDataRequest).then(function (response) {\n *   // handle response with googlePaymentInstance.parseResponse\n *   // (see below)\n * });\n * @example <caption>With deferred client</caption>\n * googlePaymentInstance.createPaymentDataRequest({\n *   merchantInfo: {\n *     merchantId: 'my-merchant-id-from-google'\n *   },\n *   transactionInfo: {\n *     currencyCode: 'USD',\n *     totalPriceStatus: 'FINAL',\n *     totalPrice: '100.00'\n *   }\n * }).then(function (paymentDataRequest) {\n *   // Update card payment methods to require billing address\n *   var cardPaymentMethod = paymentDataRequest.allowedPaymentMethods;\n *   cardPaymentMethod.parameters.billingAddressRequired = true;\n *   cardPaymentMethod.parameters.billingAddressParameters = {\n *     format: 'FULL',\n *     phoneNumberRequired: true\n *   };\n *\n *   var paymentsClient = new google.payments.api.PaymentsClient({\n *     environment: 'TEST' // or 'PRODUCTION'\n *   })\n *\n *   return paymentsClient.loadPaymentData(paymentDataRequest);\n * }).then(function (response) {\n *   // handle response with googlePaymentInstance.parseResponse\n *   // (see below)\n * });\n * @returns {object|Promise} Returns a configuration object for Google PaymentDataRequest. If instantiated with `useDeferredClient` and an `authorization` it will return a promise that resolves with the configuration.\n */\nGooglePayment.prototype.createPaymentDataRequest = function (overrides) {\n  if (!this._useDeferredClient) {\n    return this._createPaymentDataRequestSyncronously(overrides);\n  }\n\n  return this._waitForClient().then(\n    function () {\n      return this._createPaymentDataRequestSyncronously(overrides);\n    }.bind(this)\n  );\n};\n\nGooglePayment.prototype._createPaymentDataRequestSyncronously = function (\n  overrides\n) {\n  var paymentDataRequest = assign({}, overrides);\n  var version = this._googlePayVersion;\n  var createPaymentDataRequestMethod =\n    CREATE_PAYMENT_DATA_REQUEST_METHODS[version];\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"google-payment.v\" + version + \".createPaymentDataRequest\"\n  );\n\n  return this[createPaymentDataRequestMethod](paymentDataRequest);\n};\n\n/**\n * Parse the response from the tokenization.\n * @public\n * @param {object} response The response back from the Google Pay tokenization.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link GooglePay~tokenizePayload|tokenizePayload}. If no callback is provided, `parseResponse` returns a promise that resolves with a {@link GooglePayment~tokenizePayload|tokenizePayload}.\n * @example with callback\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * })\n *\n * paymentsClient.loadPaymentData(paymentDataRequestFromCreatePaymentDataRequest).then(function (response) {\n *   googlePaymentInstance.parseResponse(response, function (err, data) {\n *     if (err) {\n *       // handle errors\n *     }\n *     // send parsedResponse.nonce to your server\n *   });\n * });\n * @example with promise\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * })\n *\n * paymentsClient.loadPaymentData(paymentDataRequestFromCreatePaymentDataRequest).then(function (response) {\n *   return googlePaymentInstance.parseResponse(response);\n * }).then(function (parsedResponse) {\n *   // send parsedResponse.nonce to your server\n * }).catch(function (err) {\n *   // handle errors\n * });\n * @returns {(Promise|void)} Returns a promise that resolves the parsed response if no callback is provided.\n */\nGooglePayment.prototype.parseResponse = function (response) {\n  var self = this;\n\n  return Promise.resolve()\n    .then(function () {\n      var payload;\n      var rawResponse =\n        response.apiVersion === 2\n          ? response.paymentMethodData.tokenizationData.token\n          : response.paymentMethodToken.token;\n      var parsedResponse = JSON.parse(rawResponse);\n      var error = parsedResponse.error;\n\n      if (error) {\n        return Promise.reject(error);\n      }\n\n      analytics.sendEvent(\n        self._createPromise,\n        \"google-payment.parseResponse.succeeded\"\n      );\n\n      if (parsedResponse.paypalAccounts) {\n        payload = parsedResponse.paypalAccounts[0];\n        analytics.sendEvent(\n          self._createPromise,\n          \"google-payment.parseResponse.succeeded.paypal\"\n        );\n\n        return Promise.resolve({\n          nonce: payload.nonce,\n          type: payload.type,\n          description: payload.description,\n        });\n      }\n      payload = parsedResponse.androidPayCards[0];\n      analytics.sendEvent(\n        self._createPromise,\n        \"google-payment.parseResponse.succeeded.google-payment\"\n      );\n\n      return Promise.resolve({\n        nonce: payload.nonce,\n        type: payload.type,\n        description: payload.description,\n        details: {\n          cardType: payload.details.cardType,\n          lastFour: payload.details.lastFour,\n          lastTwo: payload.details.lastTwo,\n          isNetworkTokenized: payload.details.isNetworkTokenized,\n          bin: payload.details.bin,\n        },\n        binData: payload.binData,\n      });\n    })\n    .catch(function (error) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"google-payment.parseResponse.failed\"\n      );\n\n      return Promise.reject(\n        new BraintreeError({\n          code: errors.GOOGLE_PAYMENT_GATEWAY_ERROR.code,\n          message: errors.GOOGLE_PAYMENT_GATEWAY_ERROR.message,\n          type: errors.GOOGLE_PAYMENT_GATEWAY_ERROR.type,\n          details: {\n            originalError: error,\n          },\n        })\n      );\n    });\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/google-payment.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * googlePaymentInstance.teardown();\n * @example <caption>With callback</caption>\n * googlePaymentInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nGooglePayment.prototype.teardown = function () {\n  convertMethodsToError(this, methods(GooglePayment.prototype));\n\n  return Promise.resolve();\n};\n\nfunction applyDefaultsToPaymentMethodConfiguration(\n  merchantSubmittedPaymentMethod,\n  defaultPaymentMethod\n) {\n  Object.keys(defaultPaymentMethod).forEach(function (parameter) {\n    if (typeof defaultPaymentMethod[parameter] === \"object\") {\n      merchantSubmittedPaymentMethod[parameter] = assign(\n        {},\n        defaultPaymentMethod[parameter],\n        merchantSubmittedPaymentMethod[parameter]\n      );\n    } else {\n      merchantSubmittedPaymentMethod[parameter] =\n        merchantSubmittedPaymentMethod[parameter] ||\n        defaultPaymentMethod[parameter];\n    }\n  });\n}\n\nmodule.exports = wrapPromise.wrapPrototype(GooglePayment);\n\n},{\"../lib/analytics\":86,\"../lib/assign\":88,\"../lib/braintree-error\":91,\"../lib/convert-methods-to-error\":93,\"../lib/find\":103,\"../lib/generate-google-pay-configuration\":115,\"../lib/methods\":121,\"./errors\":69,\"@braintree/wrap-promise\":47}],71:[function(require,module,exports){\n\"use strict\";\n/**\n * @module braintree-web/google-payment\n * @description A component to integrate with Google Pay. The majority of the integration uses [Google's pay.js JavaScript file](https://pay.google.com/gp/p/js/pay.js). The Braintree component generates the configuration object necessary for Google Pay to initiate the Payment Request and parse the returned data to retrieve the payment method nonce which is used to process the transaction on the server.\n */\n\nvar GooglePayment = require(\"./google-payment\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar createAssetsUrl = require(\"../lib/create-assets-url\");\nvar createDeferredClient = require(\"../lib/create-deferred-client\");\nvar basicComponentVerification = require(\"../lib/basic-component-verification\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar VERSION = \"3.99.0\";\nvar errors = require(\"./errors\");\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {boolean} [options.useDeferredClient] Used in conjunction with `authorization`, allows the Google Payment instance to be available right away by fetching the client configuration in the background. When this option is used, {@link GooglePayment#createPaymentDataRequest} will return a promise that resolves with the configuration instead of returning synchronously.\n * @param {number} [options.googlePayVersion] The version of the Google Pay API to use. Value of 2 is required to accept parameters documented [by Google](https://developers.google.com/pay/api/web/reference/object). Omit this parameter to use the deprecated Google Pay Version 1.\n * @param {string} [options.googleMerchantId] A Google merchant identifier issued after your website is approved by Google. Required when PaymentsClient is initialized with an environment property of PRODUCTION, but may be omitted in TEST environment.\n * @param {callback} [callback] The second argument, `data`, is the {@link GooglePayment} instance. If no callback is provided, `create` returns a promise that resolves with the {@link GooglePayment} instance.\n * @example <caption>Simple Example</caption>\n * // include https://pay.google.com/gp/p/js/pay.js in a script tag\n * // on your page to load the `google.payments.api.PaymentsClient` global object.\n *\n * var paymentButton = document.querySelector('#google-pay-button');\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * });\n *\n * braintree.client.create({\n *   authorization: 'tokenization-key-or-client-token'\n * }).then(function (clientInstance) {\n *   return braintree.googlePayment.create({\n *     client: clientInstance,\n *      googlePayVersion: 2,\n *      googleMerchantId: 'your-merchant-id-from-google'\n *   });\n * }).then(function (googlePaymentInstance) {\n *   paymentButton.addEventListener('click', function (event) {\n *     var paymentDataRequest;\n *\n *     event.preventDefault();\n *\n *     paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({\n *       transactionInfo: {\n *         currencyCode: 'USD',\n *         totalPriceStatus: 'FINAL',\n *         totalPrice: '100.00'\n *       }\n *     });\n *\n *     paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\n *       return googlePaymentInstance.parseResponse(paymentData);\n *     }).then(function (result) {\n *       // send result.nonce to your server\n *     }).catch(function (err) {\n *       // handle err\n *     });\n *   });\n * });\n * @example <caption>Check Browser and Customer Compatibility</caption>\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * });\n *\n * function setupGooglePayButton(googlePaymentInstance) {\n *   var button = document.createElement('button');\n *\n *   button.id = 'google-pay';\n *   button.appendChild(document.createTextNode('Google Pay'));\n *   button.addEventListener('click', function (event) {\n *     var paymentRequestData;\n *\n *     event.preventDefault();\n *\n *     paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({\n *       transactionInfo: {\n *         currencyCode: 'USD',\n *         totalPriceStatus: 'FINAL',\n *         totalPrice: '100.00' // your amount\n *       }\n *     });\n *\n *     paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\n *       return googlePaymentInstance.parseResponse(paymentData);\n *       }).then(function (result) {\n *       // send result.nonce to your server\n *     }).catch(function (err) {\n *       // handle errors\n *     });\n *   });\n *\n *   document.getElementById('container').appendChild(button);\n * }\n *\n * braintree.client.create({\n *   authorization: 'tokenization-key-or-client-token'\n * }).then(function (clientInstance) {\n *   return braintree.googlePayment.create({\n *     client: clientInstance,\n *     googlePayVersion: 2,\n *     googleMerchantId: 'your-merchant-id-from-google'\n *   });\n * }).then(function (googlePaymentInstance) {\n *\n *   return paymentsClient.isReadyToPay({\n *     // see https://developers.google.com/pay/api/web/reference/object#IsReadyToPayRequest for all options\n *     apiVersion: 2,\n *     apiVersionMinor: 0,\n *     allowedPaymentMethods: googlePaymentInstance.createPaymentDataRequest().allowedPaymentMethods,\n *     existingPaymentMethodRequired: true\n *   });\n * }).then(function (response) {\n *   if (response.result) {\n *     setupGooglePayButton(googlePaymentInstance);\n *   }\n * }).catch(function (err) {\n *   // handle setup errors\n * });\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nfunction create(options) {\n  var name = \"Google Pay\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var createPromise, instance;\n\n      createPromise = createDeferredClient\n        .create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: createAssetsUrl.create(options.authorization),\n          name: name,\n        })\n        .then(function (client) {\n          var configuration = client.getConfiguration();\n\n          options.client = client;\n          if (!configuration.gatewayConfiguration.androidPay) {\n            return Promise.reject(\n              new BraintreeError(errors.GOOGLE_PAYMENT_NOT_ENABLED)\n            );\n          }\n\n          return client;\n        });\n\n      options.createPromise = createPromise;\n      instance = new GooglePayment(options);\n\n      if (!options.useDeferredClient) {\n        return createPromise.then(function (client) {\n          instance._client = client;\n\n          return instance;\n        });\n      }\n\n      return instance;\n    });\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n\n},{\"../lib/basic-component-verification\":89,\"../lib/braintree-error\":91,\"../lib/create-assets-url\":95,\"../lib/create-deferred-client\":97,\"./errors\":69,\"./google-payment\":70,\"@braintree/wrap-promise\":47}],72:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"../../lib/braintree-error\");\nvar errors = require(\"../shared/errors\");\nvar allowedAttributes = require(\"../shared/constants\").allowedAttributes;\n\nfunction attributeValidationError(attribute, value) {\n  var err;\n\n  if (!allowedAttributes.hasOwnProperty(attribute)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED.type,\n      code: errors.HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED.code,\n      message:\n        'The \"' + attribute + '\" attribute is not supported in Hosted Fields.',\n    });\n  } else if (value != null && !_isValid(attribute, value)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED.type,\n      code: errors.HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED.code,\n      message:\n        'Value \"' +\n        value +\n        '\" is not allowed for \"' +\n        attribute +\n        '\" attribute.',\n    });\n  }\n\n  return err;\n}\n\nfunction _isValid(attribute, value) {\n  if (allowedAttributes[attribute] === \"string\") {\n    return typeof value === \"string\" || typeof value === \"number\";\n  } else if (allowedAttributes[attribute] === \"boolean\") {\n    return String(value) === \"true\" || String(value) === \"false\";\n  }\n\n  return false;\n}\n\nmodule.exports = attributeValidationError;\n\n},{\"../../lib/braintree-error\":91,\"../shared/constants\":80,\"../shared/errors\":81}],73:[function(require,module,exports){\n\"use strict\";\n\nvar constants = require(\"../shared/constants\");\nvar useMin = require(\"../../lib/use-min\");\n\nmodule.exports = function composeUrl(assetsUrl, componentId, isDebug) {\n  return (\n    assetsUrl +\n    \"/web/\" +\n    constants.VERSION +\n    \"/html/hosted-fields-frame\" +\n    useMin(isDebug) +\n    \".html#\" +\n    componentId\n  );\n};\n\n},{\"../../lib/use-min\":126,\"../shared/constants\":80}],74:[function(require,module,exports){\n\"use strict\";\n\nvar directions = require(\"../shared/constants\").navigationDirections;\nvar browserDetection = require(\"../shared/browser-detection\");\nvar focusIntercept = require(\"../shared/focus-intercept\");\nvar findParentTags = require(\"../shared/find-parent-tags\");\nvar userFocusableTagNames = [\"INPUT\", \"SELECT\", \"TEXTAREA\"];\n// Devices with software keyboards do not or cannot focus on input types\n// that do not require keyboard-based interaction.\nvar unfocusedInputTypes = [\n  \"hidden\",\n  \"button\",\n  \"reset\",\n  \"submit\",\n  \"checkbox\",\n  \"radio\",\n  \"file\",\n];\n\nfunction _isUserFocusableElement(element) {\n  if (!browserDetection.hasSoftwareKeyboard()) {\n    // on desktop browsers, the only input type that isn't focusable\n    // is the hidden input\n    return element.type !== \"hidden\";\n  }\n\n  return (\n    userFocusableTagNames.indexOf(element.tagName) > -1 &&\n    unfocusedInputTypes.indexOf(element.type) < 0\n  );\n}\n\nfunction _createNavigationHelper(direction, numberOfElementsInForm) {\n  switch (direction) {\n    case directions.BACK:\n      return {\n        checkIndexBounds: function (index) {\n          return index < 0;\n        },\n        indexChange: -1,\n      };\n    case directions.FORWARD:\n      return {\n        checkIndexBounds: function (index) {\n          return index > numberOfElementsInForm - 1;\n        },\n        indexChange: 1,\n      };\n    default:\n  }\n\n  return {};\n}\n\nfunction _findFirstFocusableElement(elementsInForm) {\n  var elementsIndex, element;\n\n  for (\n    elementsIndex = 0;\n    elementsIndex < elementsInForm.length;\n    elementsIndex++\n  ) {\n    element = elementsInForm[elementsIndex];\n\n    if (_isUserFocusableElement(element)) {\n      return element;\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  removeExtraFocusElements: function (checkoutForm, onRemoveFocusIntercepts) {\n    var elements = Array.prototype.slice.call(checkoutForm.elements);\n    var firstFocusableInput = _findFirstFocusableElement(elements);\n    var lastFocusableInput = _findFirstFocusableElement(elements.reverse());\n\n    // these should never be identical, because there will at least be the\n    // before and the after input\n    [firstFocusableInput, lastFocusableInput].forEach(function (input) {\n      if (!input) {\n        return;\n      }\n\n      if (focusIntercept.matchFocusElement(input.getAttribute(\"id\"))) {\n        onRemoveFocusIntercepts(input.getAttribute(\"id\"));\n      }\n    });\n  },\n\n  createFocusChangeHandler: function (hostedFieldsId, callbacks) {\n    return function (data) {\n      var currentIndex, targetElement, checkoutForm, navHelper;\n      var sourceElement = document.getElementById(\n        \"bt-\" + data.field + \"-\" + data.direction + \"-\" + hostedFieldsId\n      );\n\n      if (!sourceElement) {\n        return;\n      }\n\n      checkoutForm = findParentTags(sourceElement, \"form\")[0];\n\n      if (document.forms.length < 1 || !checkoutForm) {\n        callbacks.onRemoveFocusIntercepts();\n\n        return;\n      }\n\n      checkoutForm = [].slice.call(checkoutForm.elements);\n      currentIndex = checkoutForm.indexOf(sourceElement);\n      navHelper = _createNavigationHelper(data.direction, checkoutForm.length);\n\n      do {\n        currentIndex += navHelper.indexChange;\n        if (navHelper.checkIndexBounds(currentIndex)) {\n          return;\n        }\n        targetElement = checkoutForm[currentIndex];\n      } while (!_isUserFocusableElement(targetElement));\n\n      if (focusIntercept.matchFocusElement(targetElement.getAttribute(\"id\"))) {\n        callbacks.onTriggerInputFocus(\n          targetElement.getAttribute(\"data-braintree-type\")\n        );\n      } else {\n        targetElement.focus();\n      }\n    };\n  },\n};\n\n},{\"../shared/browser-detection\":79,\"../shared/constants\":80,\"../shared/find-parent-tags\":82,\"../shared/focus-intercept\":83}],75:[function(require,module,exports){\n\"use strict\";\n\nvar allowedStyles = require(\"../shared/constants\").allowedStyles;\n\nmodule.exports = function getStylesFromClass(cssClass) {\n  var element = document.createElement(\"input\");\n  var styles = {};\n  var computedStyles;\n\n  if (cssClass[0] === \".\") {\n    cssClass = cssClass.substring(1);\n  }\n\n  element.className = cssClass;\n  element.style.display = \"none !important\";\n  element.style.position = \"fixed !important\";\n  element.style.left = \"-99999px !important\";\n  element.style.top = \"-99999px !important\";\n  document.body.appendChild(element);\n\n  computedStyles = window.getComputedStyle(element);\n\n  allowedStyles.forEach(function (style) {\n    var value = computedStyles[style];\n\n    if (value) {\n      styles[style] = value;\n    }\n  });\n\n  document.body.removeChild(element);\n\n  return styles;\n};\n\n},{\"../shared/constants\":80}],76:[function(require,module,exports){\n\"use strict\";\n\nvar assign = require(\"../../lib/assign\").assign;\nvar createAssetsUrl = require(\"../../lib/create-assets-url\");\nvar isVerifiedDomain = require(\"../../lib/is-verified-domain\");\nvar Destructor = require(\"../../lib/destructor\");\nvar iFramer = require(\"@braintree/iframer\");\nvar Bus = require(\"framebus\");\nvar createDeferredClient = require(\"../../lib/create-deferred-client\");\nvar BraintreeError = require(\"../../lib/braintree-error\");\nvar composeUrl = require(\"./compose-url\");\nvar getStylesFromClass = require(\"./get-styles-from-class\");\nvar constants = require(\"../shared/constants\");\nvar errors = require(\"../shared/errors\");\nvar INTEGRATION_TIMEOUT_MS =\n  require(\"../../lib/constants\").INTEGRATION_TIMEOUT_MS;\nvar uuid = require(\"@braintree/uuid\");\nvar findParentTags = require(\"../shared/find-parent-tags\");\nvar browserDetection = require(\"../shared/browser-detection\");\nvar events = constants.events;\nvar EventEmitter = require(\"@braintree/event-emitter\");\nvar injectFrame = require(\"./inject-frame\");\nvar analytics = require(\"../../lib/analytics\");\nvar allowedFields = constants.allowedFields;\nvar methods = require(\"../../lib/methods\");\nvar shadow = require(\"../../lib/shadow\");\nvar findRootNode = require(\"../../lib/find-root-node\");\nvar convertMethodsToError = require(\"../../lib/convert-methods-to-error\");\nvar sharedErrors = require(\"../../lib/errors\");\nvar getCardTypes = require(\"../shared/get-card-types\");\nvar attributeValidationError = require(\"./attribute-validation-error\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar focusChange = require(\"./focus-change\");\nvar destroyFocusIntercept = require(\"../shared/focus-intercept\").destroy;\n\nvar SAFARI_FOCUS_TIMEOUT = 5;\n\n/**\n * @typedef {object} HostedFields~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {object} authenticationInsight Info about the [regulatory environment](https://developer.paypal.com/braintree/docs/guides/3d-secure/advanced-options/javascript/v3#authentication-insight) of the tokenized card. Only available if `authenticationInsight.merchantAccountId` is passed in the `tokenize` method options.\n * @property {string} authenticationInsight.regulationEnvironment The [regulation environment](https://developer.paypal.com/braintree/docs/guides/3d-secure/advanced-options/javascript/v3#authentication-insight) for the tokenized card.\n * @property {object} details Additional account details.\n * @property {string} details.bin The BIN number of the card.\n * @property {string} details.cardType Type of card, ex: Visa, MasterCard.\n * @property {string} details.expirationMonth The expiration month of the card.\n * @property {string} details.expirationYear The expiration year of the card.\n * @property {string} details.cardholderName The cardholder name tokenized with the card.\n * @property {string} details.lastFour Last four digits of card number.\n * @property {string} details.lastTwo Last two digits of card number.\n * @property {string} description A human-readable description.\n * @property {string} type The payment method type, always `CreditCard`.\n * @property {object} binData Information about the card based on the bin.\n * @property {string} binData.commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.countryOfIssuance The country of issuance.\n * @property {string} binData.debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.issuingBank The issuing bank.\n * @property {string} binData.payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.productId The product id.\n */\n\n/**\n * @typedef {object} HostedFields~stateObject\n * @description The event payload sent from {@link HostedFields#on|on} or {@link HostedFields#getState|getState}.\n * @property {HostedFields~hostedFieldsCard[]} cards\n * This will return an array of potential {@link HostedFields~hostedFieldsCard|cards}. If the card type has been determined, the array will contain only one card.\n * Internally, Hosted Fields uses <a href=\"https://github.com/braintree/credit-card-type\">credit-card-type</a>,\n * an open-source card detection library.\n * @property {string} emittedBy\n * The name of the field associated with an event. This will not be included if returned by {@link HostedFields#getState|getState}. It will be one of the following strings:<br>\n * - `\"number\"`\n * - `\"cvv\"`\n * - `\"expirationDate\"`\n * - `\"expirationMonth\"`\n * - `\"expirationYear\"`\n * - `\"postalCode\"`\n * - `\"cardholderName\"`\n * @property {object} fields\n * @property {?HostedFields~hostedFieldsFieldData} fields.number {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the number field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.cvv {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the CVV field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.expirationDate {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the expiration date field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.expirationMonth {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the expiration month field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.expirationYear {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the expiration year field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.postalCode {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the postal code field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.cardholderName {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the cardholder name field, if it is present.\n */\n\n/**\n * @typedef {object} HostedFields~binPayload\n * @description The event payload sent from {@link HostedFields#on|on} when the {@link HostedFields#event:binAvailable|binAvailable} event is emitted.\n * @property {string} bin The first 6 digits of the card number.\n */\n\n/**\n * @typedef {object} HostedFields~hostedFieldsFieldData\n * @description Data about Hosted Fields fields, sent in {@link HostedFields~stateObject|stateObjects}.\n * @property {HTMLElement} container Reference to the container DOM element on your page associated with the current event.\n * @property {boolean} isFocused Whether or not the input is currently focused.\n * @property {boolean} isEmpty Whether or not the user has entered a value in the input.\n * @property {boolean} isPotentiallyValid\n * A determination based on the future validity of the input value.\n * This is helpful when a user is entering a card number and types <code>\"41\"</code>.\n * While that value is not valid for submission, it is still possible for\n * it to become a fully qualified entry. However, if the user enters <code>\"4x\"</code>\n * it is clear that the card number can never become valid and isPotentiallyValid will\n * return false.\n * @property {boolean} isValid Whether or not the value of the associated input is <i>fully</i> qualified for submission.\n */\n\n/**\n * @typedef {object} HostedFields~hostedFieldsCard\n * @description Information about the card type, sent in {@link HostedFields~stateObject|stateObjects}.\n * @property {string} type The code-friendly representation of the card type. It will be one of the following strings:\n * - `american-express`\n * - `diners-club`\n * - `discover`\n * - `jcb`\n * - `maestro`\n * - `master-card`\n * - `unionpay`\n * - `visa`\n * @property {string} niceType The pretty-printed card type. It will be one of the following strings:\n * - `American Express`\n * - `Diners Club`\n * - `Discover`\n * - `JCB`\n * - `Maestro`\n * - `MasterCard`\n * - `UnionPay`\n * - `Visa`\n * @property {object} code\n * This object contains data relevant to the security code requirements of the card brand.\n * For example, on a Visa card there will be a <code>CVV</code> of 3 digits, whereas an\n * American Express card requires a 4-digit <code>CID</code>.\n * @property {string} code.name <code>\"CVV\"</code> <code>\"CID\"</code> <code>\"CVC\"</code>\n * @property {number} code.size The expected length of the security code. Typically, this is 3 or 4.\n */\n\n/**\n * @name HostedFields#on\n * @function\n * @param {string} event The name of the event to which you are subscribing.\n * @param {function} handler A callback to handle the event.\n * @description Subscribes a handler function to a named event.\n *\n * **Events that emit a {@link HostedFields~stateObject|stateObject}.**\n * * {@link HostedFields#event:blur|blur}\n * * {@link HostedFields#event:focus|focus}\n * * {@link HostedFields#event:empty|empty}\n * * {@link HostedFields#event:notEmpty|notEmpty}\n * * {@link HostedFields#event:cardTypeChange|cardTypeChange}\n * * {@link HostedFields#event:validityChange|validityChange}\n * * {@link HostedFields#event:inputSubmitRequest|inputSubmitRequest}\n *\n * **Other Events**\n * * {@link HostedFields#event:binAvailable|binAvailable} - emits a {@link HostedFields~binPayload|bin payload}. Note: If you are using a [Referrer-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) header that prevents the origin from being sent, this event will not fire.\n * @example\n * <caption>Listening to a Hosted Field event, in this case 'focus'</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('focus', function (event) {\n *     console.log(event.emittedBy, 'has been focused');\n *   });\n * });\n * @returns {void}\n */\n\n/**\n * @name HostedFields#off\n * @function\n * @param {string} event The name of the event to which you are unsubscribing.\n * @param {function} handler The callback for the event you are unsubscribing from.\n * @description Unsubscribes the handler function to a named event.\n * @example\n * <caption>Subscribing and then unsubscribing from a Hosted Field event, in this case 'focus'</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   var callback = function (event) {\n *     console.log(event.emittedBy, 'has been focused');\n *   };\n *   hostedFieldsInstance.on('focus', callback);\n *\n *   // later on\n *   hostedFieldsInstance.off('focus', callback);\n * });\n * @returns {void}\n */\n\n/**\n * This event is emitted when the user requests submission of an input field, such as by pressing the Enter or Return key on their keyboard, or mobile equivalent.\n * @event HostedFields#inputSubmitRequest\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Clicking a submit button upon hitting Enter (or equivalent) within a Hosted Field</caption>\n * var hostedFields = require('braintree-web/hosted-fields');\n * var submitButton = document.querySelector('input[type=\"submit\"]');\n *\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('inputSubmitRequest', function () {\n *     // User requested submission, e.g. by pressing Enter or equivalent\n *     submitButton.click();\n *   });\n * });\n */\n\n/**\n * This event is emitted when a field transitions from having data to being empty.\n * @event HostedFields#empty\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to an empty event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('empty', function (event) {\n *     console.log(event.emittedBy, 'is now empty');\n *   });\n * });\n */\n\n/**\n * This event is emitted when a field transitions from being empty to having data.\n * @event HostedFields#notEmpty\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to an notEmpty event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('notEmpty', function (event) {\n *     console.log(event.emittedBy, 'is now not empty');\n *   });\n * });\n */\n\n/**\n * This event is emitted when a field loses focus.\n * @event HostedFields#blur\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to a blur event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('blur', function (event) {\n *     console.log(event.emittedBy, 'lost focus');\n *   });\n * });\n */\n\n/**\n * This event is emitted when a field gains focus.\n * @event HostedFields#focus\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to a focus event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('focus', function (event) {\n *     console.log(event.emittedBy, 'gained focus');\n *   });\n * });\n */\n\n/**\n * This event is emitted when activity within the number field has changed such that the possible card type has changed.\n * @event HostedFields#cardTypeChange\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to a cardTypeChange event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('cardTypeChange', function (event) {\n *     if (event.cards.length === 1) {\n *       console.log(event.cards[0].type);\n *     } else {\n *       console.log('Type of card not yet known');\n *     }\n *   });\n * });\n */\n\n/**\n * This event is emitted when the validity of a field has changed. Validity is represented in the {@link HostedFields~stateObject|stateObject} as two booleans: `isValid` and `isPotentiallyValid`.\n * @event HostedFields#validityChange\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to a validityChange event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('validityChange', function (event) {\n *     var field = event.fields[event.emittedBy];\n *\n *     if (field.isValid) {\n *       console.log(event.emittedBy, 'is fully valid');\n *     } else if (field.isPotentiallyValid) {\n *       console.log(event.emittedBy, 'is potentially valid');\n *     } else {\n *       console.log(event.emittedBy, 'is not valid');\n *     }\n *   });\n * });\n */\n\n/**\n * This event is emitted when the first 6 digits of the card number have been entered by the customer.\n * @event HostedFields#binAvailable\n * @type {string}\n * @example\n * <caption>Listening to a `binAvailable` event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('binAvailable', function (event) {\n *     event.bin // send bin to 3rd party bin service\n *   });\n * });\n */\n\nfunction createInputEventHandler(fields) {\n  return function (eventData) {\n    var field;\n    var merchantPayload = eventData.merchantPayload;\n    var emittedBy = merchantPayload.emittedBy;\n    var container = fields[emittedBy].containerElement;\n\n    Object.keys(merchantPayload.fields).forEach(function (key) {\n      merchantPayload.fields[key].container = fields[key].containerElement;\n    });\n\n    field = merchantPayload.fields[emittedBy];\n\n    container.classList.toggle(\n      constants.externalClasses.FOCUSED,\n      field.isFocused\n    );\n    container.classList.toggle(constants.externalClasses.VALID, field.isValid);\n\n    container.classList.toggle(\n      constants.externalClasses.INVALID,\n      !field.isPotentiallyValid\n    );\n\n    // eslint-disable-next-line no-invalid-this\n    this._state = {\n      cards: merchantPayload.cards,\n      fields: merchantPayload.fields,\n    };\n\n    this._emit(eventData.type, merchantPayload); // eslint-disable-line no-invalid-this\n  };\n}\n\nfunction isVisibleEnough(node) {\n  var boundingBox = node.getBoundingClientRect();\n  var verticalMidpoint = Math.floor(boundingBox.height / 2);\n  var horizontalMidpoint = Math.floor(boundingBox.width / 2);\n\n  return (\n    boundingBox.top <\n      (window.innerHeight - verticalMidpoint ||\n        document.documentElement.clientHeight - verticalMidpoint) &&\n    boundingBox.right > horizontalMidpoint &&\n    boundingBox.bottom > verticalMidpoint &&\n    boundingBox.left <\n      (window.innerWidth - horizontalMidpoint ||\n        document.documentElement.clientWidth - horizontalMidpoint)\n  );\n}\n\n/**\n * @class HostedFields\n * @param {object} options The Hosted Fields {@link module:braintree-web/hosted-fields.create create} options.\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/hosted-fields.create|braintree-web.hosted-fields.create} instead.</strong>\n * @classdesc This class represents a Hosted Fields component produced by {@link module:braintree-web/hosted-fields.create|braintree-web/hosted-fields.create}. Instances of this class have methods for interacting with the input fields within Hosted Fields' iframes.\n */\nfunction HostedFields(options) {\n  var failureTimeout, clientConfig, assetsUrl, isDebug, hostedFieldsUrl;\n  var self = this;\n  var fields = {};\n  var frameReadyPromiseResolveFunctions = {};\n  var frameReadyPromises = [];\n  var componentId = uuid();\n\n  this._merchantConfigurationOptions = assign({}, options);\n\n  if (options.client) {\n    clientConfig = options.client.getConfiguration();\n    assetsUrl = clientConfig.gatewayConfiguration.assetsUrl;\n    isDebug = clientConfig.isDebug;\n  } else {\n    assetsUrl = createAssetsUrl.create(options.authorization);\n    isDebug = Boolean(options.isDebug);\n  }\n\n  this._clientPromise = createDeferredClient.create({\n    client: options.client,\n    authorization: options.authorization,\n    debug: isDebug,\n    assetsUrl: assetsUrl,\n    name: \"Hosted Fields\",\n  });\n\n  hostedFieldsUrl = composeUrl(assetsUrl, componentId, isDebug);\n\n  if (!options.fields || Object.keys(options.fields).length === 0) {\n    throw new BraintreeError({\n      type: sharedErrors.INSTANTIATION_OPTION_REQUIRED.type,\n      code: sharedErrors.INSTANTIATION_OPTION_REQUIRED.code,\n      message: \"options.fields is required when instantiating Hosted Fields.\",\n    });\n  }\n\n  EventEmitter.call(this);\n\n  this._injectedNodes = [];\n  this._destructor = new Destructor();\n  this._fields = fields;\n  this._state = {\n    fields: {},\n    cards: getCardTypes(\"\"),\n  };\n\n  this._bus = new Bus({\n    channel: componentId,\n    verifyDomain: isVerifiedDomain,\n    targetFrames: [window],\n  });\n\n  this._destructor.registerFunctionForTeardown(function () {\n    self._bus.teardown();\n  });\n\n  // NEXT_MAJOR_VERSION analytics events should have present tense verbs\n  if (!options.client) {\n    analytics.sendEvent(\n      this._clientPromise,\n      \"custom.hosted-fields.initialized.deferred-client\"\n    );\n  } else {\n    analytics.sendEvent(\n      this._clientPromise,\n      \"custom.hosted-fields.initialized\"\n    );\n  }\n\n  Object.keys(options.fields).forEach(\n    function (key) {\n      var field, externalContainer, internalContainer, frame, frameReadyPromise;\n\n      if (!constants.allowedFields.hasOwnProperty(key)) {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_INVALID_FIELD_KEY.type,\n          code: errors.HOSTED_FIELDS_INVALID_FIELD_KEY.code,\n          message: '\"' + key + '\" is not a valid field.',\n        });\n      }\n\n      field = options.fields[key];\n      // NEXT_MAJOR_VERSION remove selector as an option\n      // and simply make the API take a container\n      externalContainer = field.container || field.selector;\n\n      if (typeof externalContainer === \"string\") {\n        externalContainer = document.querySelector(externalContainer);\n      }\n\n      if (!externalContainer || externalContainer.nodeType !== 1) {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_INVALID_FIELD_SELECTOR.type,\n          code: errors.HOSTED_FIELDS_INVALID_FIELD_SELECTOR.code,\n          message: errors.HOSTED_FIELDS_INVALID_FIELD_SELECTOR.message,\n          details: {\n            fieldSelector: field.selector,\n            fieldContainer: field.container,\n            fieldKey: key,\n          },\n        });\n      } else if (\n        externalContainer.querySelector('iframe[name^=\"braintree-\"]')\n      ) {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME.type,\n          code: errors.HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME.code,\n          message: errors.HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME.message,\n          details: {\n            fieldSelector: field.selector,\n            fieldContainer: field.container,\n            fieldKey: key,\n          },\n        });\n      }\n\n      internalContainer = externalContainer;\n\n      if (shadow.isShadowElement(internalContainer)) {\n        internalContainer = shadow.transformToSlot(\n          internalContainer,\n          \"height: 100%\"\n        );\n      }\n\n      if (field.maxlength && typeof field.maxlength !== \"number\") {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.type,\n          code: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.code,\n          message: \"The value for maxlength must be a number.\",\n          details: {\n            fieldKey: key,\n          },\n        });\n      }\n\n      if (field.minlength && typeof field.minlength !== \"number\") {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.type,\n          code: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.code,\n          message: \"The value for minlength must be a number.\",\n          details: {\n            fieldKey: key,\n          },\n        });\n      }\n\n      frame = iFramer({\n        type: key,\n        name: \"braintree-hosted-field-\" + key,\n        style: constants.defaultIFrameStyle,\n        title:\n          field.iframeTitle ||\n          \"Secure Credit Card Frame - \" + constants.allowedFields[key].label,\n      });\n      this._bus.addTargetFrame(frame);\n\n      this._injectedNodes.push.apply(\n        this._injectedNodes,\n        injectFrame(componentId, frame, internalContainer, function () {\n          self.focus(key);\n        })\n      );\n\n      this._setupLabelFocus(key, externalContainer);\n      fields[key] = {\n        frameElement: frame,\n        containerElement: externalContainer,\n      };\n      frameReadyPromise = new Promise(function (resolve) {\n        frameReadyPromiseResolveFunctions[key] = resolve;\n      });\n      frameReadyPromises.push(frameReadyPromise);\n\n      this._state.fields[key] = {\n        isEmpty: true,\n        isValid: false,\n        isPotentiallyValid: true,\n        isFocused: false,\n        container: externalContainer,\n      };\n\n      // prevents loading the iframe from blocking the code\n      setTimeout(function () {\n        frame.src = hostedFieldsUrl;\n      }, 0);\n    }.bind(this)\n  );\n\n  if (this._merchantConfigurationOptions.styles) {\n    Object.keys(this._merchantConfigurationOptions.styles).forEach(function (\n      selector\n    ) {\n      var className = self._merchantConfigurationOptions.styles[selector];\n\n      if (typeof className === \"string\") {\n        self._merchantConfigurationOptions.styles[selector] =\n          getStylesFromClass(className);\n      }\n    });\n  }\n\n  this._bus.on(events.REMOVE_FOCUS_INTERCEPTS, function (data) {\n    destroyFocusIntercept(data && data.id);\n  });\n\n  this._bus.on(\n    events.TRIGGER_FOCUS_CHANGE,\n    focusChange.createFocusChangeHandler(componentId, {\n      onRemoveFocusIntercepts: function (element) {\n        self._bus.emit(events.REMOVE_FOCUS_INTERCEPTS, {\n          id: element,\n        });\n      },\n      onTriggerInputFocus: function (targetType) {\n        self.focus(targetType);\n      },\n    })\n  );\n\n  this._bus.on(events.READY_FOR_CLIENT, function (reply) {\n    self._clientPromise.then(function (client) {\n      reply(client);\n    });\n  });\n\n  this._bus.on(events.CARD_FORM_ENTRY_HAS_BEGUN, function () {\n    analytics.sendEvent(self._clientPromise, \"hosted-fields.input.started\");\n  });\n\n  this._bus.on(events.BIN_AVAILABLE, function (bin) {\n    self._emit(\"binAvailable\", {\n      bin: bin,\n    });\n  });\n\n  failureTimeout = setTimeout(function () {\n    analytics.sendEvent(\n      self._clientPromise,\n      \"custom.hosted-fields.load.timed-out\"\n    );\n    self._emit(\"timeout\");\n  }, INTEGRATION_TIMEOUT_MS);\n\n  Promise.all(frameReadyPromises).then(function (results) {\n    var reply = results[0];\n\n    clearTimeout(failureTimeout);\n    reply(\n      formatMerchantConfigurationForIframes(self._merchantConfigurationOptions)\n    );\n\n    self._cleanUpFocusIntercepts();\n\n    self._emit(\"ready\");\n  });\n\n  this._bus.on(events.FRAME_READY, function (data, reply) {\n    frameReadyPromiseResolveFunctions[data.field](reply);\n  });\n\n  this._bus.on(events.INPUT_EVENT, createInputEventHandler(fields).bind(this));\n\n  this._destructor.registerFunctionForTeardown(function () {\n    var j, node, parent;\n\n    for (j = 0; j < self._injectedNodes.length; j++) {\n      node = self._injectedNodes[j];\n      parent = node.parentNode;\n\n      parent.removeChild(node);\n\n      parent.classList.remove(\n        constants.externalClasses.FOCUSED,\n        constants.externalClasses.INVALID,\n        constants.externalClasses.VALID\n      );\n    }\n  });\n\n  this._destructor.registerFunctionForTeardown(function () {\n    destroyFocusIntercept();\n  });\n\n  this._destructor.registerFunctionForTeardown(function () {\n    var methodNames = methods(HostedFields.prototype).concat(\n      methods(EventEmitter.prototype)\n    );\n\n    convertMethodsToError(self, methodNames);\n  });\n}\n\nEventEmitter.createChild(HostedFields);\n\nHostedFields.prototype._setupLabelFocus = function (type, container) {\n  var labels, i;\n  var self = this;\n  var rootNode = findRootNode(container);\n\n  if (container.id == null) {\n    return;\n  }\n\n  function triggerFocus() {\n    self.focus(type);\n  }\n\n  // find any labels in the normal DOM\n  labels = Array.prototype.slice.call(\n    document.querySelectorAll('label[for=\"' + container.id + '\"]')\n  );\n  if (rootNode !== document) {\n    // find any labels within the shadow dom\n    labels = labels.concat(\n      Array.prototype.slice.call(\n        rootNode.querySelectorAll('label[for=\"' + container.id + '\"]')\n      )\n    );\n  }\n  // find any labels surrounding the container that don't also have the `for` attribute\n  labels = labels.concat(findParentTags(container, \"label\"));\n  // filter out any accidental duplicates\n  labels = labels.filter(function (label, index, arr) {\n    return arr.indexOf(label) === index;\n  });\n\n  for (i = 0; i < labels.length; i++) {\n    labels[i].addEventListener(\"click\", triggerFocus, false);\n  }\n\n  this._destructor.registerFunctionForTeardown(function () {\n    for (i = 0; i < labels.length; i++) {\n      labels[i].removeEventListener(\"click\", triggerFocus, false);\n    }\n  });\n};\n\nHostedFields.prototype._getAnyFieldContainer = function () {\n  var self = this;\n\n  return Object.keys(this._fields).reduce(function (found, field) {\n    return found || self._fields[field].containerElement;\n  }, null);\n};\n\nHostedFields.prototype._cleanUpFocusIntercepts = function () {\n  var iframeContainer, checkoutForm;\n\n  if (document.forms.length < 1) {\n    this._bus.emit(events.REMOVE_FOCUS_INTERCEPTS);\n  } else {\n    iframeContainer = this._getAnyFieldContainer();\n    checkoutForm = findParentTags(iframeContainer, \"form\")[0];\n\n    if (checkoutForm) {\n      focusChange.removeExtraFocusElements(\n        checkoutForm,\n        function (id) {\n          this._bus.emit(events.REMOVE_FOCUS_INTERCEPTS, {\n            id: id,\n          });\n        }.bind(this)\n      );\n    } else {\n      this._bus.emit(events.REMOVE_FOCUS_INTERCEPTS);\n    }\n  }\n};\n\nHostedFields.prototype._attachInvalidFieldContainersToError = function (err) {\n  if (\n    !(\n      err.details &&\n      err.details.invalidFieldKeys &&\n      err.details.invalidFieldKeys.length > 0\n    )\n  ) {\n    return;\n  }\n  err.details.invalidFields = {};\n  err.details.invalidFieldKeys.forEach(\n    function (field) {\n      err.details.invalidFields[field] = this._fields[field].containerElement;\n    }.bind(this)\n  );\n};\n\n/**\n * Get card verification challenges, such as requirements for cvv and postal code.\n * @public\n * @param {callback} [callback] Called on completion, containing an error if one occurred. If no callback is provided, `getChallenges` returns a promise.\n * @example\n * hostedFieldsInstance.getChallenges().then(function (challenges) {\n *   challenges // ['cvv', 'postal_code']\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.getChallenges = function () {\n  return this._clientPromise.then(function (client) {\n    return client.getConfiguration().gatewayConfiguration.challenges;\n  });\n};\n\n/**\n * Get supported card types configured in the Braintree Control Panel\n * @public\n * @param {callback} [callback] Called on completion, containing an error if one occurred. If no callback is provided, `getSupportedCardTypes` returns a promise.\n * @example\n * hostedFieldsInstance.getSupportedCardTypes().then(function (cardTypes) {\n *   cardTypes // ['Visa', 'American Express', 'Mastercard']\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.getSupportedCardTypes = function () {\n  return this._clientPromise.then(function (client) {\n    var cards = client\n      .getConfiguration()\n      .gatewayConfiguration.creditCards.supportedCardTypes.map(function (\n        cardType\n      ) {\n        if (cardType === \"MasterCard\") {\n          // Mastercard changed their branding. We can't update our\n          // config without creating a breaking change, so we just\n          // hard code the change here\n          return \"Mastercard\";\n        }\n\n        return cardType;\n      });\n\n    return cards;\n  });\n};\n\n/**\n * Cleanly remove anything set up by {@link module:braintree-web/hosted-fields.create|create}.\n * @public\n * @param {callback} [callback] Called on completion, containing an error if one occurred. No data is returned if teardown completes successfully. If no callback is provided, `teardown` returns a promise.\n * @example\n * hostedFieldsInstance.teardown(function (teardownErr) {\n *   if (teardownErr) {\n *     console.error('Could not tear down Hosted Fields!');\n *   } else {\n *     console.info('Hosted Fields has been torn down!');\n *   }\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.teardown = function () {\n  var self = this;\n\n  return new Promise(function (resolve, reject) {\n    self._destructor.teardown(function (err) {\n      analytics.sendEvent(\n        self._clientPromise,\n        \"custom.hosted-fields.teardown-completed\"\n      );\n\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\n/**\n * Tokenizes fields and returns a nonce payload.\n * @public\n * @param {object} [options] All tokenization options for the Hosted Fields component.\n * @param {boolean} [options.vault=false] When true, will vault the tokenized card. Cards will only be vaulted when using a client created with a client token that includes a customer ID. Note: merchants using Advanced Fraud Tools should not use this option, as device data will not be included.\n * @param {object} [options.authenticationInsight] Options for checking authentication insight - the [regulatory environment](https://developer.paypal.com/braintree/docs/guides/3d-secure/advanced-options/javascript/v3#authentication-insight) of the tokenized card.\n * @param {string} options.authenticationInsight.merchantAccountId The Braintree merchant account id to use to look up the authentication insight information.\n * @param {array} [options.fieldsToTokenize] By default, all fields will be tokenized. You may specify which fields specifically you wish to tokenize with this property. Valid options are `'number'`, `'cvv'`, `'expirationDate'`, `'expirationMonth'`, `'expirationYear'`, `'postalCode'`, `'cardholderName'`.\n * @param {string} [options.cardholderName] When supplied, the cardholder name to be tokenized with the contents of the fields.\n * @param {string} [options.billingAddress.postalCode] When supplied, this postal code will be tokenized along with the contents of the fields. If a postal code is provided as part of the Hosted Fields configuration, the value of the field will be tokenized and this value will be ignored.\n * @param {string} [options.billingAddress.firstName] When supplied, this customer first name will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.lastName] When supplied, this customer last name will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.company] When supplied, this company name will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.streetAddress] When supplied, this street address will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.extendedAddress] When supplied, this extended address will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.locality] When supplied, this locality (the city) will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.region] When supplied, this region (the state) will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.countryCodeNumeric] When supplied, this numeric country code will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.countryCodeAlpha2] When supplied, this alpha 2 representation of a country will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.countryCodeAlpha3] When supplied, this alpha 3 representation of a country will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.countryName] When supplied, this country name will be tokenized along with the contents of the fields.\n *\n * @param {callback} [callback] May be used as the only parameter of the function if no options are passed in. The second argument, <code>data</code>, is a {@link HostedFields~tokenizePayload|tokenizePayload}. If no callback is provided, `tokenize` returns a function that resolves with a {@link HostedFields~tokenizePayload|tokenizePayload}.\n * @example <caption>Tokenize a card</caption>\n * hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     switch (tokenizeErr.code) {\n *       case 'HOSTED_FIELDS_FIELDS_EMPTY':\n *         // occurs when none of the fields are filled in\n *         console.error('All fields are empty! Please fill out the form.');\n *         break;\n *       case 'HOSTED_FIELDS_FIELDS_INVALID':\n *         // occurs when certain fields do not pass client side validation\n *         console.error('Some fields are invalid:', tokenizeErr.details.invalidFieldKeys);\n *\n *         // you can also programmatically access the field containers for the invalid fields\n *         tokenizeErr.details.invalidFields.forEach(function (fieldContainer) {\n *           fieldContainer.className = 'invalid';\n *         });\n *         break;\n *       case 'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':\n *         // occurs when:\n *         //   * the client token used for client authorization was generated\n *         //     with a customer ID and the fail on duplicate payment method\n *         //     option is set to true\n *         //   * the card being tokenized has previously been vaulted (with any customer)\n *         // See: https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#options.fail_on_duplicate_payment_method\n *         console.error('This payment method already exists in your vault.');\n *         break;\n *       case 'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':\n *         // occurs when:\n *         //   * the client token used for client authorization was generated\n *         //     with a customer ID and the verify card option is set to true\n *         //     and you have credit card verification turned on in the Braintree\n *         //     control panel\n *         //   * the cvv does not pass verification (https://developer.paypal.com/braintree/docs/reference/general/testing#avs-and-cvv/cid-responses)\n *         // See: https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#options.verify_card\n *         console.error('CVV did not pass verification');\n *         break;\n *       case 'HOSTED_FIELDS_FAILED_TOKENIZATION':\n *         // occurs for any other tokenization error on the server\n *         console.error('Tokenization failed server side. Is the card valid?');\n *         break;\n *       case 'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':\n *         // occurs when the Braintree gateway cannot be contacted\n *         console.error('Network error occurred when tokenizing.');\n *         break;\n *       default:\n *         console.error('Something bad happened!', tokenizeErr);\n *     }\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Tokenize and vault a card</caption>\n * hostedFieldsInstance.tokenize({\n *   vault: true\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Tokenize a card with non-Hosted Fields cardholder name</caption>\n * hostedFieldsInstance.tokenize({\n *   cardholderName: 'First Last'\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Tokenize a card with non-Hosted Fields postal code option</caption>\n * hostedFieldsInstance.tokenize({\n *   billingAddress: {\n *     postalCode: '11111'\n *   }\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Tokenize a card with additional billing address options</caption>\n * hostedFieldsInstance.tokenize({\n *   billingAddress: {\n *     firstName: 'First',\n *     lastName: 'Last',\n *     company: 'Company',\n *     streetAddress: '123 Street',\n *     extendedAddress: 'Unit 1',\n *     // passing just one of the country options is sufficient to\n *     // associate the card details with a particular country\n *     // valid country names and codes can be found here:\n *     // https://developer.paypal.com/braintree/docs/reference/general/countries/ruby#list-of-countries\n *     countryName: 'United States',\n *     countryCodeAlpha2: 'US',\n *     countryCodeAlpha3: 'USA',\n *     countryCodeNumeric: '840'\n *   }\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Allow tokenization with empty cardholder name field</caption>\n * var state = hostedFieldsInstance.getState();\n * var fields = Object.keys(state.fields);\n *\n * // normally, if you tried to tokenize an empty cardholder name field\n * // you would get an error, to allow making this field optional,\n * // tokenize all the fields except for the cardholder name field\n * // when the cardholder name field is empty. Otherwise, tokenize\n * // all the fields\n * if (state.fields.cardholderName.isEmpty) {\n *  fields = fields.filter(function (field) {\n *    return field !== 'cardholderName';\n *  });\n * }\n *\n * hostedFieldsInstance.tokenize({\n *  fieldsToTokenize: fields\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.tokenize = function (options) {\n  var self = this;\n\n  if (!options) {\n    options = {};\n  }\n\n  return new Promise(function (resolve, reject) {\n    self._bus.emit(events.TOKENIZATION_REQUEST, options, function (response) {\n      var err = response[0];\n      var payload = response[1];\n\n      if (err) {\n        self._attachInvalidFieldContainersToError(err);\n        reject(new BraintreeError(err));\n      } else {\n        resolve(payload);\n      }\n    });\n  });\n};\n\n/**\n * Add a class to a {@link module:braintree-web/hosted-fields~field field}. Useful for updating field styles when events occur elsewhere in your checkout.\n * @public\n * @param {string} field The field you wish to add a class to. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} classname The class to be added.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the class is added successfully.\n *\n * @example\n * hostedFieldsInstance.addClass('number', 'custom-class', function (addClassErr) {\n *   if (addClassErr) {\n *     console.error(addClassErr);\n *   }\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.addClass = function (field, classname) {\n  var err;\n\n  if (!allowedFields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        field +\n        '\" is not a valid field. You must use a valid field option when adding a class.',\n    });\n  } else if (!this._fields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot add class to \"' +\n        field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    this._bus.emit(events.ADD_CLASS, {\n      field: field,\n      classname: classname,\n    });\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Removes a class to a {@link module:braintree-web/hosted-fields~field field}. Useful for updating field styles when events occur elsewhere in your checkout.\n * @public\n * @param {string} field The field you wish to remove a class from. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} classname The class to be removed.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the class is removed successfully.\n *\n * @example\n * hostedFieldsInstance.addClass('number', 'custom-class', function (addClassErr) {\n *   if (addClassErr) {\n *     console.error(addClassErr);\n *     return;\n *   }\n *\n *   // some time later...\n *   hostedFieldsInstance.removeClass('number', 'custom-class');\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.removeClass = function (field, classname) {\n  var err;\n\n  if (!allowedFields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        field +\n        '\" is not a valid field. You must use a valid field option when removing a class.',\n    });\n  } else if (!this._fields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot remove class from \"' +\n        field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    this._bus.emit(events.REMOVE_CLASS, {\n      field: field,\n      classname: classname,\n    });\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Sets an attribute of a {@link module:braintree-web/hosted-fields~field field}.\n * Supported attributes are `aria-invalid`, `aria-required`, `disabled`, and `placeholder`.\n *\n * @public\n * @param {object} options The options for the attribute you wish to set.\n * @param {string} options.field The field to which you wish to add an attribute. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} options.attribute The name of the attribute you wish to add to the field.\n * @param {string} options.value The value for the attribute.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the attribute is set successfully.\n *\n * @example <caption>Set the placeholder attribute of a field</caption>\n * hostedFieldsInstance.setAttribute({\n *   field: 'number',\n *   attribute: 'placeholder',\n *   value: '1111 1111 1111 1111'\n * }, function (attributeErr) {\n *   if (attributeErr) {\n *     console.error(attributeErr);\n *   }\n * });\n *\n * @example <caption>Set the aria-required attribute of a field</caption>\n * hostedFieldsInstance.setAttribute({\n *   field: 'number',\n *   attribute: 'aria-required',\n *   value: true\n * }, function (attributeErr) {\n *   if (attributeErr) {\n *     console.error(attributeErr);\n *   }\n * });\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.setAttribute = function (options) {\n  var attributeErr, err;\n\n  if (!allowedFields.hasOwnProperty(options.field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        options.field +\n        '\" is not a valid field. You must use a valid field option when setting an attribute.',\n    });\n  } else if (!this._fields.hasOwnProperty(options.field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot set attribute for \"' +\n        options.field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    attributeErr = attributeValidationError(options.attribute, options.value);\n\n    if (attributeErr) {\n      err = attributeErr;\n    } else {\n      this._bus.emit(events.SET_ATTRIBUTE, {\n        field: options.field,\n        attribute: options.attribute,\n        value: options.value,\n      });\n    }\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Sets the month options for the expiration month field when presented as a select element.\n *\n * @public\n * @param {array} options An array of 12 entries corresponding to the 12 months.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the options are updated successfully. Errors if expirationMonth is not configured on the Hosted Fields instance or if the expirationMonth field is not configured to be a select input.\n *\n * @example <caption>Update the month options to spanish</caption>\n * hostedFieldsInstance.setMonthOptions([\n *   '01 - enero',\n *   '02 - febrero',\n *   '03 - marzo',\n *   '04 - abril',\n *   '05 - mayo',\n *   '06 - junio',\n *   '07 - julio',\n *   '08 - agosto',\n *   '09 - septiembre',\n *   '10 - octubre',\n *   '11 - noviembre',\n *   '12 - diciembre'\n * ]);\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.setMonthOptions = function (options) {\n  var self = this;\n  var merchantOptions = this._merchantConfigurationOptions.fields;\n  var errorMessage;\n\n  if (!merchantOptions.expirationMonth) {\n    errorMessage = \"Expiration month field must exist to use setMonthOptions.\";\n  } else if (!merchantOptions.expirationMonth.select) {\n    errorMessage = \"Expiration month field must be a select element.\";\n  }\n\n  if (errorMessage) {\n    return Promise.reject(\n      new BraintreeError({\n        type: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.type,\n        code: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.code,\n        message: errorMessage,\n      })\n    );\n  }\n\n  return new Promise(function (resolve) {\n    self._bus.emit(events.SET_MONTH_OPTIONS, options, resolve);\n  });\n};\n\n/**\n * Sets a visually hidden message (for screen readers) on a {@link module:braintree-web/hosted-fields~field field}.\n *\n * @public\n * @param {object} options The options for the attribute you wish to set.\n * @param {string} options.field The field to which you wish to add an attribute. Must be a valid {@link module:braintree-web/hosted-fields~field field}.\n * @param {string} options.message The message to set.\n *\n * @example <caption>Set an error message on a field</caption>\n * hostedFieldsInstance.setMessage({\n *   field: 'number',\n *   message: 'Invalid card number'\n * });\n *\n * @example <caption>Remove the message on a field</caption>\n * hostedFieldsInstance.setMessage({\n *   field: 'number',\n *   message: ''\n * });\n *\n * @returns {void}\n */\nHostedFields.prototype.setMessage = function (options) {\n  this._bus.emit(events.SET_MESSAGE, {\n    field: options.field,\n    message: options.message,\n  });\n};\n\n/**\n * Removes a supported attribute from a {@link module:braintree-web/hosted-fields~field field}.\n *\n * @public\n * @param {object} options The options for the attribute you wish to remove.\n * @param {string} options.field The field from which you wish to remove an attribute. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} options.attribute The name of the attribute you wish to remove from the field.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the attribute is removed successfully.\n *\n * @example <caption>Remove the placeholder attribute of a field</caption>\n * hostedFieldsInstance.removeAttribute({\n *   field: 'number',\n *   attribute: 'placeholder'\n * }, function (attributeErr) {\n *   if (attributeErr) {\n *     console.error(attributeErr);\n *   }\n * });\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.removeAttribute = function (options) {\n  var attributeErr, err;\n\n  if (!allowedFields.hasOwnProperty(options.field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        options.field +\n        '\" is not a valid field. You must use a valid field option when removing an attribute.',\n    });\n  } else if (!this._fields.hasOwnProperty(options.field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot remove attribute for \"' +\n        options.field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    attributeErr = attributeValidationError(options.attribute);\n\n    if (attributeErr) {\n      err = attributeErr;\n    } else {\n      this._bus.emit(events.REMOVE_ATTRIBUTE, {\n        field: options.field,\n        attribute: options.attribute,\n      });\n    }\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * @deprecated since version 3.8.0. Use {@link HostedFields#setAttribute|setAttribute} instead.\n *\n * @public\n * @param {string} field The field whose placeholder you wish to change. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} placeholder Will be used as the `placeholder` attribute of the input.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the placeholder updated successfully.\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.setPlaceholder = function (field, placeholder) {\n  return this.setAttribute({\n    field: field,\n    attribute: \"placeholder\",\n    value: placeholder,\n  });\n};\n\n/**\n * Clear the value of a {@link module:braintree-web/hosted-fields~field field}.\n * @public\n * @param {string} field The field you wish to clear. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the field cleared successfully.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * hostedFieldsInstance.clear('number', function (clearErr) {\n *   if (clearErr) {\n *     console.error(clearErr);\n *   }\n * });\n *\n * @example <caption>Clear several fields</caption>\n * hostedFieldsInstance.clear('number');\n * hostedFieldsInstance.clear('cvv');\n * hostedFieldsInstance.clear('expirationDate');\n */\nHostedFields.prototype.clear = function (field) {\n  var err;\n\n  if (!allowedFields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        field +\n        '\" is not a valid field. You must use a valid field option when clearing a field.',\n    });\n  } else if (!this._fields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot clear \"' +\n        field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    this._bus.emit(events.CLEAR_FIELD, {\n      field: field,\n    });\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Programmatically focus a {@link module:braintree-web/hosted-fields~field field}.\n * @public\n * @param {string} field The field you want to focus. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the field focused successfully.\n * @returns {void}\n * @example\n * hostedFieldsInstance.focus('number', function (focusErr) {\n *   if (focusErr) {\n *     console.error(focusErr);\n *   }\n * });\n * @example <caption>Using an event listener</caption>\n * myElement.addEventListener('click', function (e) {\n *   // In Firefox, the focus method can be suppressed\n *   //   if the element has a tabindex property or the element\n *   //   is an anchor link with an href property.\n *   e.preventDefault();\n *   hostedFieldsInstance.focus('number');\n * });\n */\nHostedFields.prototype.focus = function (field) {\n  var err;\n  var fieldConfig = this._fields[field];\n\n  if (!allowedFields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        field +\n        '\" is not a valid field. You must use a valid field option when focusing a field.',\n    });\n  } else if (!this._fields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot focus \"' +\n        field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    fieldConfig.frameElement.focus();\n\n    this._bus.emit(events.TRIGGER_INPUT_FOCUS, {\n      field: field,\n    });\n\n    if (browserDetection.isIos()) {\n      // Inputs outside of the viewport don't always scroll into view on\n      // focus in iOS Safari. 5ms timeout gives the browser a chance to\n      // do the right thing and prevents stuttering.\n      setTimeout(function () {\n        if (!isVisibleEnough(fieldConfig.containerElement)) {\n          fieldConfig.containerElement.scrollIntoView();\n        }\n      }, SAFARI_FOCUS_TIMEOUT);\n    }\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Returns an {@link HostedFields~stateObject|object} that includes the state of all fields and possible card types.\n * @public\n * @returns {object} {@link HostedFields~stateObject|stateObject}\n * @example <caption>Check if all fields are valid</caption>\n * var state = hostedFieldsInstance.getState();\n *\n * var formValid = Object.keys(state.fields).every(function (key) {\n *   return state.fields[key].isValid;\n * });\n */\nHostedFields.prototype.getState = function () {\n  return this._state;\n};\n\n// React adds decorations to DOM nodes that cause\n// circular dependencies, so we remove them from the\n// config before sending it to the iframes. However,\n// we don't want to mutate the original object that\n// was passed in, so we create fresh objects via assign\nfunction formatMerchantConfigurationForIframes(config) {\n  var formattedConfig = assign({}, config);\n\n  formattedConfig.fields = assign({}, formattedConfig.fields);\n  Object.keys(formattedConfig.fields).forEach(function (field) {\n    formattedConfig.fields[field] = assign({}, formattedConfig.fields[field]);\n    delete formattedConfig.fields[field].container;\n  });\n\n  return formattedConfig;\n}\n\nmodule.exports = wrapPromise.wrapPrototype(HostedFields);\n\n},{\"../../lib/analytics\":86,\"../../lib/assign\":88,\"../../lib/braintree-error\":91,\"../../lib/constants\":92,\"../../lib/convert-methods-to-error\":93,\"../../lib/create-assets-url\":95,\"../../lib/create-deferred-client\":97,\"../../lib/destructor\":99,\"../../lib/errors\":101,\"../../lib/find-root-node\":102,\"../../lib/is-verified-domain\":119,\"../../lib/methods\":121,\"../../lib/shadow\":124,\"../shared/browser-detection\":79,\"../shared/constants\":80,\"../shared/errors\":81,\"../shared/find-parent-tags\":82,\"../shared/focus-intercept\":83,\"../shared/get-card-types\":84,\"./attribute-validation-error\":72,\"./compose-url\":73,\"./focus-change\":74,\"./get-styles-from-class\":75,\"./inject-frame\":77,\"@braintree/event-emitter\":37,\"@braintree/iframer\":39,\"@braintree/uuid\":43,\"@braintree/wrap-promise\":47,\"framebus\":167}],77:[function(require,module,exports){\n\"use strict\";\n\nvar focusIntercept = require(\"../shared/focus-intercept\");\nvar directions = require(\"../shared/constants\").navigationDirections;\n\nmodule.exports = function injectFrame(id, frame, container, focusHandler) {\n  var frameType = frame.getAttribute(\"type\");\n  var clearboth = document.createElement(\"div\");\n  var fragment = document.createDocumentFragment();\n  var focusInterceptBefore = focusIntercept.generate(\n    id,\n    frameType,\n    directions.BACK,\n    focusHandler\n  );\n  var focusInterceptAfter = focusIntercept.generate(\n    id,\n    frameType,\n    directions.FORWARD,\n    focusHandler\n  );\n\n  clearboth.style.clear = \"both\";\n\n  fragment.appendChild(focusInterceptBefore);\n  fragment.appendChild(frame);\n  fragment.appendChild(focusInterceptAfter);\n  fragment.appendChild(clearboth);\n\n  container.appendChild(fragment);\n\n  return [frame, clearboth];\n};\n\n},{\"../shared/constants\":80,\"../shared/focus-intercept\":83}],78:[function(require,module,exports){\n\"use strict\";\n/** @module braintree-web/hosted-fields */\n\nvar HostedFields = require(\"./external/hosted-fields\");\nvar basicComponentVerification = require(\"../lib/basic-component-verification\");\nvar errors = require(\"./shared/errors\");\nvar supportsInputFormatting = require(\"restricted-input/supports-input-formatting\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar VERSION = \"3.99.0\";\n\n/**\n * Fields used in {@link module:braintree-web/hosted-fields~fieldOptions fields options}\n * @typedef {object} field\n * @property {string} selector Deprecated: Now an alias for `options.container`.\n * @property {(string|HTMLElement)} container A DOM node or CSS selector to find the container where the hosted field will be inserted.\n * @property {string} [placeholder] Will be used as the `placeholder` attribute of the input. If `placeholder` is not natively supported by the browser, it will be polyfilled.\n * @property {string} [type] Will be used as the `type` attribute of the input. To mask `cvv` input, for instance, `type: \"password\"` can be used.\n * @property {string} [iframeTitle] The title used for the iframe containing the credit card input. By default, this will be `Secure Credit Card Frame - <the name of the specific field>`.\n * @property {string} [internalLabel] Each Hosted Field iframe has a hidden label that is used by screen readers to identify the input. The `internalLabel` property can be used to customize the field for localization purposes. The default values are:\n * * number: Credit Card Number\n * * cvv: CVV\n * * expirationDate: Expiration Date\n * * expirationMonth: Expiration Month\n * * expirationYear: Expiration Year\n * * postalCode: Postal Code\n * * cardholderName: Cardholder Name\n * @property {boolean} [formatInput=true] Enable or disable automatic formatting on this field.\n * @property {(object|boolean)} [maskInput=false] Enable or disable input masking when input is not focused. If set to `true` instead of an object, the defaults for the `maskInput` parameters will be used.\n * @property {string} [maskInput.character=•] The character to use when masking the input. The default character ('•') uses a unicode symbol, so the webpage must support UTF-8 characters when using the default.\n * @property {Boolean} [maskInput.showLastFour=false] Only applicable for the credit card field. Whether or not to show the last 4 digits of the card when masking.\n * @property {(object|boolean)} [select] If truthy, this field becomes a `<select>` dropdown list. This can only be used for `expirationMonth` and `expirationYear` fields. If you do not use a `placeholder` property for the field, the current month/year will be the default selected value.\n * @property {string[]} [select.options] An array of 12 strings, one per month. This can only be used for the `expirationMonth` field. For example, the array can look like `['01 - January', '02 - February', ...]`.\n * @property {number} [maxCardLength] This option applies only to the number field. Allows a limit to the length of the card number, even if the card brand may support numbers of a greater length. If the value passed is greater than the max length for a card brand, the smaller number of the 2 values will be used. For example, is `maxCardLength` is set to 16, but an American Express card is entered (which has a max card length of 15), a max card length of 15 will be used.\n * @property {number} [maxlength] This option applies only to the CVV and postal code fields. Will be used as the `maxlength` attribute of the input. The primary use cases for the `maxlength` option are: limiting the length of the CVV input for CVV-only verifications when the card type is known and setting the length of the postal code input when cards are coming from a known region. The default `maxlength` for the postal code input is `10`.\n * @property {number} [minlength=3] This option applies only to the cvv and postal code fields. Will be used as the `minlength` attribute of the input.\n * For postal code fields, the default value is 3, representing the Icelandic postal code length. This option's primary use case is to increase the `minlength`, e.g. for US customers, the postal code `minlength` can be set to 5.\n * For cvv fields, the default value is 3. The `minlength` attribute only applies to integrations capturing a cvv without a number field.\n * @property {string} [prefill] A value to prefill the field with. For example, when creating an update card form, you can prefill the expiration date fields with the old expiration date data.\n * @property {boolean} [rejectUnsupportedCards=false] Deprecated since version 3.46.0, use `supportedCardBrands` instead. Only allow card types that your merchant account is able to process. Unsupported card types will invalidate the card form. e.g. if you only process Visa cards, a customer entering a American Express card would get an invalid card field. This can only be used for the `number` field.\n * @property {object} [supportedCardBrands] Override card brands that are supported by the card form. Pass `'card-brand-id': true` to override the default in the merchant configuration and enable a card brand. Pass `'card-brand-id': false` to disable a card brand. Unsupported card types will invalidate the card form. e.g. if you only process Visa cards, a customer entering an American Express card would get an invalid card field. This can only be used for the  `number` field. (Note: only allow card types that your merchant account is actually able to process.)\n *\n * Valid card brand ids are:\n * * visa\n * * mastercard\n * * american-express\n * * diners-club\n * * discover\n * * jcb\n * * union-pay\n * * maestro\n * * elo\n * * mir\n * * hiper\n * * hipercard\n */\n\n/**\n * An object that has {@link module:braintree-web/hosted-fields~field field objects} for each field. Used in {@link module:braintree-web/hosted-fields~create create}.\n * @typedef {object} fieldOptions\n * @property {field} [number] A field for card number.\n * @property {field} [expirationDate] A field for expiration date in `MM/YYYY` or `MM/YY` format. This should not be used with the `expirationMonth` and `expirationYear` properties.\n * @property {field} [expirationMonth] A field for expiration month in `MM` format. This should be used with the `expirationYear` property.\n * @property {field} [expirationYear] A field for expiration year in `YYYY` or `YY` format. This should be used with the `expirationMonth` property.\n * @property {field} [cvv] A field for 3 or 4 digit card verification code (like CVV or CID). If you wish to create a CVV-only payment method nonce to verify a card already stored in your Vault, omit all other fields to only collect CVV.\n * @property {field} [postalCode] A field for postal or region code.\n * @property {field} [cardholderName] A field for the cardholder name on the customer's credit card.\n */\n\n/**\n * An object that represents CSS that will be applied in each hosted field. This object looks similar to CSS. Typically, these styles involve fonts (such as `font-family` or `color`).\n *\n * You may also pass the name of a class on your site that contains the styles you would like to apply. The style properties will be automatically pulled off the class and applied to the Hosted Fields inputs. Note: this is recommended for `input` elements only. If using a `select` for the expiration date, unexpected styling may occur.\n *\n * These are the CSS properties that Hosted Fields supports. Any other CSS should be specified on your page and outside of any Braintree configuration. Trying to set unsupported properties will fail and put a warning in the console.\n *\n * Supported CSS properties are:\n * `appearance`\n * `box-shadow`\n * `color`\n * `direction`\n * `font-family`\n * `font-size-adjust`\n * `font-size`\n * `font-stretch`\n * `font-style`\n * `font-variant-alternates`\n * `font-variant-caps`\n * `font-variant-east-asian`\n * `font-variant-ligatures`\n * `font-variant-numeric`\n * `font-variant`\n * `font-weight`\n * `font`\n * `letter-spacing`\n * `line-height`\n * `opacity`\n * `outline`\n * `margin`\n * `margin-top`\n * `margin-right`\n * `margin-bottom`\n * `margin-left`\n * `padding`\n * `padding-top`\n * `padding-right`\n * `padding-bottom`\n * `padding-left`\n * `text-align`\n * `text-shadow`\n * `transition`\n * `-moz-appearance`\n * `-moz-box-shadow`\n * `-moz-osx-font-smoothing`\n * `-moz-tap-highlight-color`\n * `-moz-transition`\n * `-webkit-appearance`\n * `-webkit-box-shadow`\n * `-webkit-font-smoothing`\n * `-webkit-tap-highlight-color`\n * `-webkit-transition`\n * @typedef {object} styleOptions\n */\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {fieldOptions} options.fields A {@link module:braintree-web/hosted-fields~fieldOptions set of options for each field}.\n * @param {styleOptions} [options.styles] {@link module:braintree-web/hosted-fields~styleOptions Styles} applied to each field.\n * @param {boolean} [options.preventAutofill=false] When true, browsers will not try to prompt the customer to autofill their credit card information.\n * @param {callback} [callback] The second argument, `data`, is the {@link HostedFields} instance. If no callback is provided, `create` returns a promise that resolves with the {@link HostedFields} instance.\n * @returns {void}\n * @example\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   styles: {\n *     'input': {\n *       'font-size': '16pt',\n *       'color': '#3A3A3A'\n *     },\n *     '.number': {\n *       'font-family': 'monospace'\n *     },\n *     '.valid': {\n *       'color': 'green'\n *     }\n *   },\n *   fields: {\n *     number: {\n *       container: '#card-number'\n *     },\n *     cvv: {\n *       container: '#cvv',\n *       placeholder: '•••'\n *     },\n *     expirationDate: {\n *       container: '#expiration-date'\n *     }\n *   }\n * }, callback);\n * @example <caption>With cardholder name</caption>\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   fields: {\n *     number: {\n *       container: '#card-number'\n *     },\n *     cardholderName: {\n *       container: '#cardholder-name'\n *     },\n *     cvv: {\n *       container: '#cvv',\n *     },\n *     expirationDate: {\n *       container: '#expiration-date'\n *     }\n *   }\n * }, callback);\n * @example <caption>Applying styles with a class name</caption>\n * // in document head\n * <style>\n *   .braintree-input-class {\n *     color: black;\n *   }\n *   .braintree-valid-class {\n *     color: green;\n *   }\n *   .braintree-invalid-class {\n *     color: red;\n *   }\n * </style>\n * // in a script tag\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   styles: {\n *     'input': 'braintree-input-class',\n *     '.invalid': 'braintree-invalid-class',\n *     '.valid': {\n *       // you can also use the object syntax alongside\n *       // the class name syntax\n *       color: green;\n *     }\n *   },\n *   fields: {\n *     number: {\n *       container: '#card-number'\n *     },\n *     // etc...\n *   }\n * }, callback);\n * @example <caption>Right to Left Language Support</caption>\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   styles: {\n *     'input': {\n *       // other styles\n *       direction: 'rtl'\n *     },\n *   },\n *   fields: {\n *     number: {\n *       container: '#card-number',\n *       // Credit card formatting is not currently supported\n *       // with RTL languages, so we need to turn it off for the number input\n *       formatInput: false\n *     },\n *     cvv: {\n *       container: '#cvv',\n *       placeholder: '•••'\n *     },\n *     expirationDate: {\n *       container: '#expiration-date',\n *       type: 'month'\n *     }\n *   }\n * }, callback);\n * @example <caption>Setting up Hosted Fields to tokenize CVV only</caption>\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   fields: {\n *     // Only add the `cvv` option.\n *     cvv: {\n *       container: '#cvv',\n *       placeholder: '•••'\n *     }\n *   }\n * }, callback);\n * @example <caption>Creating an expiration date update form with prefilled data</caption>\n * var storedCreditCardInformation = {\n *   // get this info from your server\n *   // with a payment method lookup\n *   month: '09',\n *   year: '2017'\n * };\n *\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   fields: {\n *     expirationMonth: {\n *       container: '#expiration-month',\n *       prefill: storedCreditCardInformation.month\n *     },\n *     expirationYear: {\n *       container: '#expiration-year',\n *       prefill: storedCreditCardInformation.year\n *     }\n *   }\n * }, callback);\n * @example <caption>Validate the card form for supported card types</caption>\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   fields: {\n *     number: {\n *       container: '#card-number',\n *       supportedCardBrands: {\n *         visa: false, // prevents Visas from showing up as valid even when the Braintree control panel is configured to allow them\n *         'diners-club': true // allow Diners Club cards to be valid (processed as Discover cards on the Braintree backend)\n *       }\n *     },\n *     cvv: {\n *       container: '#cvv',\n *       placeholder: '•••'\n *     },\n *     expirationDate: {\n *       container: '#expiration-date',\n *       type: 'month'\n *     }\n *   },\n * }, callback);\n */\nfunction create(options) {\n  return basicComponentVerification\n    .verify({\n      name: \"Hosted Fields\",\n      authorization: options.authorization,\n      client: options.client,\n    })\n    .then(function () {\n      var integration = new HostedFields(options);\n\n      return new Promise(function (resolve, reject) {\n        integration.on(\"ready\", function () {\n          resolve(integration);\n        });\n        integration.on(\"timeout\", function () {\n          reject(new BraintreeError(errors.HOSTED_FIELDS_TIMEOUT));\n        });\n      });\n    });\n}\n\nmodule.exports = {\n  /**\n   * @static\n   * @function supportsInputFormatting\n   * @description Returns false if input formatting will be automatically disabled due to browser incompatibility. Otherwise, returns true. For a list of unsupported browsers, [go here](https://github.com/braintree/restricted-input/blob/main/README.md#browsers-where-formatting-is-turned-off-automatically).\n   * @returns {Boolean} Returns false if input formatting will be automatically disabled due to browser incompatibility. Otherwise, returns true.\n   * @example\n   * <caption>Conditionally choosing split expiration date inputs if formatting is unavailable</caption>\n   * var canFormat = braintree.hostedFields.supportsInputFormatting();\n   * var fields = {\n   *   number: {\n   *     container: '#card-number'\n   *   },\n   *   cvv: {\n   *     container: '#cvv'\n   *   }\n   * };\n   *\n   * if (canFormat) {\n   *   fields.expirationDate = {\n   *     selection: '#expiration-date'\n   *   };\n   *   functionToCreateAndInsertExpirationDateDivToForm();\n   * } else {\n   *   fields.expirationMonth = {\n   *     selection: '#expiration-month'\n   *   };\n   *   fields.expirationYear = {\n   *     selection: '#expiration-year'\n   *   };\n   *   functionToCreateAndInsertExpirationMonthAndYearDivsToForm();\n   * }\n   *\n   * braintree.hostedFields.create({\n   *   client: clientInstance,\n   *   styles: {\n   *     // Styles\n   *   },\n   *   fields: fields\n   * }, callback);\n   */\n  supportsInputFormatting: supportsInputFormatting,\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n\n},{\"../lib/basic-component-verification\":89,\"../lib/braintree-error\":91,\"./external/hosted-fields\":76,\"./shared/errors\":81,\"@braintree/wrap-promise\":47,\"restricted-input/supports-input-formatting\":187}],79:[function(require,module,exports){\n\"use strict\";\n\nvar isAndroid = require(\"@braintree/browser-detection/is-android\");\nvar isChromeOS = require(\"@braintree/browser-detection/is-chrome-os\");\nvar isIos = require(\"@braintree/browser-detection/is-ios\");\nvar isChrome = require(\"@braintree/browser-detection/is-chrome\");\n\nfunction hasSoftwareKeyboard() {\n  return isAndroid() || isChromeOS() || isIos();\n}\n\nfunction isChromeIos() {\n  return isChrome() && isIos();\n}\n\nmodule.exports = {\n  isAndroid: isAndroid,\n  isChromeOS: isChromeOS,\n  isChromeIos: isChromeIos,\n  isFirefox: require(\"@braintree/browser-detection/is-firefox\"),\n  isIos: isIos,\n  isIosWebview: require(\"@braintree/browser-detection/is-ios-webview\"),\n  hasSoftwareKeyboard: hasSoftwareKeyboard,\n};\n\n},{\"@braintree/browser-detection/is-android\":25,\"@braintree/browser-detection/is-chrome\":27,\"@braintree/browser-detection/is-chrome-os\":26,\"@braintree/browser-detection/is-firefox\":28,\"@braintree/browser-detection/is-ios\":34,\"@braintree/browser-detection/is-ios-webview\":32}],80:[function(require,module,exports){\n\"use strict\";\n\nvar enumerate = require(\"../../lib/enumerate\");\nvar errors = require(\"./errors\");\nvar VERSION = \"3.99.0\";\n\nvar constants = {\n  VERSION: VERSION,\n  maxExpirationYearAge: 19,\n  externalEvents: {\n    FOCUS: \"focus\",\n    BLUR: \"blur\",\n    EMPTY: \"empty\",\n    NOT_EMPTY: \"notEmpty\",\n    VALIDITY_CHANGE: \"validityChange\",\n    CARD_TYPE_CHANGE: \"cardTypeChange\",\n  },\n  defaultMaxLengths: {\n    number: 19,\n    postalCode: 8,\n    expirationDate: 7,\n    expirationMonth: 2,\n    expirationYear: 4,\n    cvv: 3,\n  },\n  externalClasses: {\n    FOCUSED: \"braintree-hosted-fields-focused\",\n    INVALID: \"braintree-hosted-fields-invalid\",\n    VALID: \"braintree-hosted-fields-valid\",\n  },\n  navigationDirections: {\n    BACK: \"before\",\n    FORWARD: \"after\",\n  },\n  defaultIFrameStyle: {\n    border: \"none\",\n    width: \"100%\",\n    height: \"100%\",\n    float: \"left\",\n  },\n  tokenizationErrorCodes: {\n    81724: errors.HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE,\n    // NEXT_MAJOR_VERSION this error triggers for both AVS and CVV errors\n    // but the code name implies that it would only trigger for CVV verification\n    // failures\n    81736: errors.HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED,\n  },\n  allowedStyles: [\n    \"-moz-appearance\",\n    \"-moz-box-shadow\",\n    \"-moz-osx-font-smoothing\",\n    \"-moz-tap-highlight-color\",\n    \"-moz-transition\",\n    \"-webkit-appearance\",\n    \"-webkit-box-shadow\",\n    \"-webkit-font-smoothing\",\n    \"-webkit-tap-highlight-color\",\n    \"-webkit-transition\",\n    \"appearance\",\n    \"box-shadow\",\n    \"color\",\n    \"direction\",\n    \"font\",\n    \"font-family\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-variant\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-weight\",\n    \"letter-spacing\",\n    \"line-height\",\n    \"margin\",\n    \"margin-top\",\n    \"margin-right\",\n    \"margin-bottom\",\n    \"margin-left\",\n    \"opacity\",\n    \"outline\",\n    \"padding\",\n    \"padding-top\",\n    \"padding-right\",\n    \"padding-bottom\",\n    \"padding-left\",\n    \"text-align\",\n    \"text-shadow\",\n    \"transition\",\n  ],\n  allowedFields: {\n    cardholderName: {\n      name: \"cardholder-name\",\n      label: \"Cardholder Name\",\n    },\n    number: {\n      name: \"credit-card-number\",\n      label: \"Credit Card Number\",\n    },\n    cvv: {\n      name: \"cvv\",\n      label: \"CVV\",\n    },\n    expirationDate: {\n      name: \"expiration\",\n      label: \"Expiration Date\",\n    },\n    expirationMonth: {\n      name: \"expiration-month\",\n      label: \"Expiration Month\",\n    },\n    expirationYear: {\n      name: \"expiration-year\",\n      label: \"Expiration Year\",\n    },\n    postalCode: {\n      name: \"postal-code\",\n      label: \"Postal Code\",\n    },\n  },\n  allowedAttributes: {\n    \"aria-invalid\": \"boolean\",\n    \"aria-required\": \"boolean\",\n    disabled: \"boolean\",\n    placeholder: \"string\",\n  },\n  autocompleteMappings: {\n    \"cardholder-name\": \"cc-name\",\n    \"credit-card-number\": \"cc-number\",\n    expiration: \"cc-exp\",\n    \"expiration-month\": \"cc-exp-month\",\n    \"expiration-year\": \"cc-exp-year\",\n    cvv: \"cc-csc\",\n    \"postal-code\": \"billing postal-code\",\n  },\n};\n\nconstants.events = enumerate(\n  [\n    \"ADD_CLASS\",\n    \"AUTOFILL_DATA_AVAILABLE\",\n    \"BIN_AVAILABLE\",\n    \"CARD_FORM_ENTRY_HAS_BEGUN\",\n    \"CLEAR_FIELD\",\n    \"CONFIGURATION\",\n    \"FRAME_READY\",\n    \"INPUT_EVENT\",\n    \"READY_FOR_CLIENT\",\n    \"REMOVE_ATTRIBUTE\",\n    \"REMOVE_CLASS\",\n    \"REMOVE_FOCUS_INTERCEPTS\",\n    \"SET_ATTRIBUTE\",\n    \"SET_MESSAGE\",\n    \"SET_MONTH_OPTIONS\",\n    \"TOKENIZATION_REQUEST\",\n    \"TRIGGER_FOCUS_CHANGE\",\n    \"TRIGGER_INPUT_FOCUS\",\n    \"VALIDATE_STRICT\",\n  ],\n  \"hosted-fields:\"\n);\n\nmodule.exports = constants;\n\n},{\"../../lib/enumerate\":100,\"./errors\":81}],81:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.Hosted Fields - Creation Error Codes\n * @description Errors that occur when [creating the Hosted Fields component](./module-braintree-web_hosted-fields.html#.create).\n * @property {UNKNOWN} HOSTED_FIELDS_TIMEOUT Occurs when Hosted Fields does not finish setting up within 60 seconds.\n * @property {MERCHANT} HOSTED_FIELDS_INVALID_FIELD_KEY Occurs when Hosted Fields is instantiated with an invalid Field option.\n * @property {MERCHANT} HOSTED_FIELDS_INVALID_FIELD_SELECTOR Occurs when Hosted Fields given a field selector that is not valid.\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME Occurs when Hosted Fields given a field selector that already contains an iframe.\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_PROPERTY_INVALID Occurs when a field configuration option is not valid.\n */\n\n/**\n * @name BraintreeError.Hosted Fields - Field Manipulation Error Codes\n * @description Errors that occur when modifying fields through [`addClass`](./HostedFields.html#addClass), [`removeClass`](./HostedFields.html#removeClass), [`setAttribute`](./HostedFields.html#setAttribute), [`removeAttribute`](./HostedFields.html#removeAttribute), [`clear`](./HostedFields.html#clear), [`focus`](./HostedFields.html#focus), and [`setMonthOptions`](./HostedFields.html#setMonthOptions).\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_INVALID Occurs when attempting to modify a field that is not a valid Hosted Fields option.\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_NOT_PRESENT Occurs when attempting to modify a field that is not configured with Hosted Fields.\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_PROPERTY_INVALID Occurs when a field configuration option is not valid.\n */\n\n/**\n * @name BraintreeError.Hosted Fields - Set Attribute Error Codes\n * @description Errors that occur when using the [`setAttribute` method](./HostedFields.html#setAttribute)\n * @property {MERCHANT} HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED Occurs when trying to set an attribute that is not supported to be set.\n * @property {MERCHANT} HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED Occurs when the type of value for an attribute is not allowed to be set.\n */\n\n/**\n * @name BraintreeError.Hosted Fields - Tokenize Error Codes\n * @description Errors that occur when [tokenizing the card details with Hosted Fields](./HostedFields.html#tokenize).\n * @property {NETWORK} HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR Occurs when the Braintree gateway cannot be contacted.\n * @property {CUSTOMER} HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE Occurs when attempting to vault a card, but the client token being used is configured to fail if the card already exists in the vault.\n * @property {CUSTOMER} HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED Occurs when cvv verification is turned on in the Braintree control panel.\n * @property {CUSTOMER} HOSTED_FIELDS_FAILED_TOKENIZATION Occurs when the credit card details were sent to Braintree, but failed to tokenize.\n * @property {CUSTOMER} HOSTED_FIELDS_FIELDS_EMPTY Occurs when all the Hosted Fields inputs are empty.\n * @property {CUSTOMER} HOSTED_FIELDS_FIELDS_INVALID Occurs when one ore more fields are invalid.\n */\n\nvar BraintreeError = require(\"../../lib/braintree-error\");\n\nmodule.exports = {\n  HOSTED_FIELDS_TIMEOUT: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"HOSTED_FIELDS_TIMEOUT\",\n    message: \"Hosted Fields timed out when attempting to set up.\",\n  },\n  HOSTED_FIELDS_INVALID_FIELD_KEY: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_INVALID_FIELD_KEY\",\n  },\n  HOSTED_FIELDS_INVALID_FIELD_SELECTOR: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_INVALID_FIELD_SELECTOR\",\n    message: \"Selector does not reference a valid DOM node.\",\n  },\n  HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME\",\n    message: \"Element already contains a Braintree iframe.\",\n  },\n  HOSTED_FIELDS_FIELD_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_FIELD_INVALID\",\n  },\n  HOSTED_FIELDS_FIELD_NOT_PRESENT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_FIELD_NOT_PRESENT\",\n  },\n  HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR: {\n    type: BraintreeError.types.NETWORK,\n    code: \"HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR\",\n    message: \"A tokenization network error occurred.\",\n  },\n  HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE\",\n    message: \"This credit card already exists in the merchant's vault.\",\n  },\n  HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED\",\n    message: \"CVV verification failed during tokenization.\",\n  },\n  HOSTED_FIELDS_FAILED_TOKENIZATION: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_FAILED_TOKENIZATION\",\n    message: \"The supplied card data failed tokenization.\",\n  },\n  HOSTED_FIELDS_FIELDS_EMPTY: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_FIELDS_EMPTY\",\n    message: \"All fields are empty. Cannot tokenize empty card fields.\",\n  },\n  HOSTED_FIELDS_FIELDS_INVALID: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_FIELDS_INVALID\",\n    message:\n      \"Some payment input fields are invalid. Cannot tokenize invalid card fields.\",\n  },\n  HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED\",\n  },\n  HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED\",\n  },\n  HOSTED_FIELDS_FIELD_PROPERTY_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_FIELD_PROPERTY_INVALID\",\n  },\n};\n\n},{\"../../lib/braintree-error\":91}],82:[function(require,module,exports){\n\"use strict\";\n\nfunction findParentTags(element, tag) {\n  var parent = element.parentNode;\n  var parents = [];\n\n  while (parent != null) {\n    if (parent.tagName != null && parent.tagName.toLowerCase() === tag) {\n      parents.push(parent);\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return parents;\n}\n\nmodule.exports = findParentTags;\n\n},{}],83:[function(require,module,exports){\n\"use strict\";\n\nvar browserDetection = require(\"./browser-detection\");\nvar constants = require(\"./constants\");\nvar allowedFields = Object.keys(constants.allowedFields);\nvar directions = constants.navigationDirections;\n\nvar focusIntercept = {\n  generate: function (hostedFieldsId, type, direction, handler) {\n    var input = document.createElement(\"input\");\n    var focusInterceptStyles = {\n      border: \"none !important\",\n      display: \"block !important\",\n      height: \"1px !important\",\n      left: \"-1px !important\",\n      opacity: \"0 !important\",\n      position: \"absolute !important\",\n      top: \"-1px !important\",\n      width: \"1px !important\",\n    };\n    var shouldCreateFocusIntercept =\n      browserDetection.hasSoftwareKeyboard() || browserDetection.isFirefox();\n\n    if (!shouldCreateFocusIntercept) {\n      return document.createDocumentFragment();\n    }\n\n    input.setAttribute(\"aria-hidden\", \"true\");\n    input.setAttribute(\"autocomplete\", \"off\");\n    input.setAttribute(\"data-braintree-direction\", direction);\n    input.setAttribute(\"data-braintree-type\", type);\n    input.setAttribute(\n      \"id\",\n      \"bt-\" + type + \"-\" + direction + \"-\" + hostedFieldsId\n    );\n    input.setAttribute(\n      \"style\",\n      JSON.stringify(focusInterceptStyles)\n        .replace(/[{}\"]/g, \"\")\n        .replace(/,/g, \";\")\n    );\n\n    input.classList.add(\"focus-intercept\");\n\n    input.addEventListener(\"focus\", function (event) {\n      handler(event);\n\n      /*\n        Certain browsers without software keyboards (Firefox, Internet\n        Explorer) need the focus intercept inputs that get inserted\n        around the actual input to blur themselves, otherwise the\n        browser gets confused about what should have focus. Can't\n        apply this to browsers with software keyboards however,\n        because it blurs everything, and focus on the actual input is\n        also lost.\n      */\n      if (!browserDetection.hasSoftwareKeyboard()) {\n        input.blur();\n      }\n    });\n\n    return input;\n  },\n  destroy: function (idString) {\n    var focusInputs;\n\n    if (!idString) {\n      focusInputs = document.querySelectorAll(\"[data-braintree-direction]\");\n      focusInputs = [].slice.call(focusInputs);\n    } else {\n      focusInputs = [document.getElementById(idString)];\n    }\n\n    focusInputs.forEach(function (node) {\n      if (\n        node &&\n        node.nodeType === 1 &&\n        focusIntercept.matchFocusElement(node.getAttribute(\"id\"))\n      ) {\n        node.parentNode.removeChild(node);\n      }\n    });\n  },\n  matchFocusElement: function (idString) {\n    var idComponents, hasBTPrefix, isAllowedType, isValidDirection;\n\n    if (!idString) {\n      return false;\n    }\n\n    idComponents = idString.split(\"-\");\n\n    if (idComponents.length < 4) {\n      return false;\n    }\n\n    hasBTPrefix = idComponents[0] === \"bt\";\n    isAllowedType = allowedFields.indexOf(idComponents[1]) > -1;\n    isValidDirection =\n      idComponents[2] === directions.BACK ||\n      idComponents[2] === directions.FORWARD;\n\n    return Boolean(hasBTPrefix && isAllowedType && isValidDirection);\n  },\n};\n\nmodule.exports = focusIntercept;\n\n},{\"./browser-detection\":79,\"./constants\":80}],84:[function(require,module,exports){\n\"use strict\";\n\nvar creditCardType = require(\"credit-card-type\");\n\nmodule.exports = function (number) {\n  var results = creditCardType(number);\n\n  results.forEach(function (card) {\n    // NEXT_MAJOR_VERSION credit-card-type fixed the mastercard enum\n    // but we still pass master-card in the braintree API\n    // in a major version bump, we can remove this and\n    // this will be mastercard instead of master-card\n    if (card.type === \"mastercard\") {\n      card.type = \"master-card\";\n    }\n  });\n\n  return results;\n};\n\n},{\"credit-card-type\":159}],85:[function(require,module,exports){\n\"use strict\";\n\nvar createAuthorizationData = require(\"./create-authorization-data\");\nvar jsonClone = require(\"./json-clone\");\nvar constants = require(\"./constants\");\n\nfunction addMetadata(configuration, data) {\n  var key;\n  var attrs = data ? jsonClone(data) : {};\n  var authAttrs = createAuthorizationData(configuration.authorization).attrs;\n  var _meta = jsonClone(configuration.analyticsMetadata);\n\n  attrs.braintreeLibraryVersion = constants.BRAINTREE_LIBRARY_VERSION;\n\n  for (key in attrs._meta) {\n    if (attrs._meta.hasOwnProperty(key)) {\n      _meta[key] = attrs._meta[key];\n    }\n  }\n\n  attrs._meta = _meta;\n\n  if (authAttrs.tokenizationKey) {\n    attrs.tokenizationKey = authAttrs.tokenizationKey;\n  } else {\n    attrs.authorizationFingerprint = authAttrs.authorizationFingerprint;\n  }\n\n  return attrs;\n}\n\nmodule.exports = addMetadata;\n\n},{\"./constants\":92,\"./create-authorization-data\":96,\"./json-clone\":120}],86:[function(require,module,exports){\n\"use strict\";\n\nvar constants = require(\"./constants\");\nvar addMetadata = require(\"./add-metadata\");\n\nfunction sendAnalyticsEvent(clientInstanceOrPromise, kind, callback) {\n  var timestamp = Date.now(); // milliseconds\n\n  return Promise.resolve(clientInstanceOrPromise)\n    .then(function (client) {\n      var timestampInPromise = Date.now();\n      var configuration = client.getConfiguration();\n      var request = client._request;\n      var url = configuration.gatewayConfiguration.analytics.url;\n      var data = {\n        analytics: [\n          {\n            kind: constants.ANALYTICS_PREFIX + kind,\n            isAsync:\n              Math.floor(timestampInPromise / 1000) !==\n              Math.floor(timestamp / 1000),\n            timestamp: timestamp,\n          },\n        ],\n      };\n\n      request(\n        {\n          url: url,\n          method: \"post\",\n          data: addMetadata(configuration, data),\n          timeout: constants.ANALYTICS_REQUEST_TIMEOUT_MS,\n        },\n        callback\n      );\n    })\n    .catch(function (err) {\n      // for all non-test cases, we don't provide a callback,\n      // so this error will always be swallowed. In this case,\n      // that's fine, it should only error when the deferred\n      // client fails to set up, in which case we don't want\n      // that error to report over and over again via these\n      // deferred analytics events\n      if (callback) {\n        callback(err);\n      }\n    });\n}\n\nmodule.exports = {\n  sendEvent: sendAnalyticsEvent,\n};\n\n},{\"./add-metadata\":85,\"./constants\":92}],87:[function(require,module,exports){\n\"use strict\";\n\nvar loadScript = require(\"@braintree/asset-loader/load-script\");\n\nmodule.exports = {\n  loadScript: loadScript,\n};\n\n},{\"@braintree/asset-loader/load-script\":5}],88:[function(require,module,exports){\n\"use strict\";\n\nvar assignNormalized =\n  typeof Object.assign === \"function\" ? Object.assign : assignPolyfill;\n\nfunction assignPolyfill(destination) {\n  var i, source, key;\n\n  for (i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      if (source.hasOwnProperty(key)) {\n        destination[key] = source[key];\n      }\n    }\n  }\n\n  return destination;\n}\n\nmodule.exports = {\n  assign: assignNormalized,\n  _assign: assignPolyfill,\n};\n\n},{}],89:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"./braintree-error\");\nvar sharedErrors = require(\"./errors\");\nvar VERSION = \"3.99.0\";\n\nfunction basicComponentVerification(options) {\n  var client, authorization, name;\n\n  if (!options) {\n    return Promise.reject(\n      new BraintreeError({\n        type: sharedErrors.INVALID_USE_OF_INTERNAL_FUNCTION.type,\n        code: sharedErrors.INVALID_USE_OF_INTERNAL_FUNCTION.code,\n        message:\n          \"Options must be passed to basicComponentVerification function.\",\n      })\n    );\n  }\n\n  name = options.name;\n  client = options.client;\n  authorization = options.authorization;\n\n  if (!client && !authorization) {\n    return Promise.reject(\n      new BraintreeError({\n        type: sharedErrors.INSTANTIATION_OPTION_REQUIRED.type,\n        code: sharedErrors.INSTANTIATION_OPTION_REQUIRED.code,\n        // NEXT_MAJOR_VERSION in major version, we expose passing in authorization for all components\n        // instead of passing in a client instance. Leave this a silent feature for now.\n        message: \"options.client is required when instantiating \" + name + \".\",\n      })\n    );\n  }\n\n  if (!authorization && client.getVersion() !== VERSION) {\n    return Promise.reject(\n      new BraintreeError({\n        type: sharedErrors.INCOMPATIBLE_VERSIONS.type,\n        code: sharedErrors.INCOMPATIBLE_VERSIONS.code,\n        message:\n          \"Client (version \" +\n          client.getVersion() +\n          \") and \" +\n          name +\n          \" (version \" +\n          VERSION +\n          \") components must be from the same SDK version.\",\n      })\n    );\n  }\n\n  return Promise.resolve();\n}\n\nmodule.exports = {\n  verify: basicComponentVerification,\n};\n\n},{\"./braintree-error\":91,\"./errors\":101}],90:[function(require,module,exports){\n\"use strict\";\n\nvar once = require(\"./once\");\n\nfunction call(fn, callback) {\n  var isSync = fn.length === 0;\n\n  if (isSync) {\n    fn();\n    callback(null);\n  } else {\n    fn(callback);\n  }\n}\n\nmodule.exports = function (functions, cb) {\n  var i;\n  var length = functions.length;\n  var remaining = length;\n  var callback = once(cb);\n\n  if (length === 0) {\n    callback(null);\n\n    return;\n  }\n\n  function finish(err) {\n    if (err) {\n      callback(err);\n\n      return;\n    }\n\n    remaining -= 1;\n    if (remaining === 0) {\n      callback(null);\n    }\n  }\n\n  for (i = 0; i < length; i++) {\n    call(functions[i], finish);\n  }\n};\n\n},{\"./once\":122}],91:[function(require,module,exports){\n\"use strict\";\n\nvar enumerate = require(\"./enumerate\");\n\n/**\n * @class\n * @global\n * @param {object} options Construction options\n * @classdesc This class is used to report error conditions, frequently as the first parameter to callbacks throughout the Braintree SDK.\n * @description <strong>You cannot use this constructor directly. Interact with instances of this class through {@link callback callbacks}.</strong>\n */\nfunction BraintreeError(options) {\n  if (!BraintreeError.types.hasOwnProperty(options.type)) {\n    throw new Error(options.type + \" is not a valid type.\");\n  }\n\n  if (!options.code) {\n    throw new Error(\"Error code required.\");\n  }\n\n  if (!options.message) {\n    throw new Error(\"Error message required.\");\n  }\n\n  this.name = \"BraintreeError\";\n\n  /**\n   * @type {string}\n   * @description A code that corresponds to specific errors.\n   */\n  this.code = options.code;\n\n  /**\n   * @type {string}\n   * @description A short description of the error.\n   */\n  this.message = options.message;\n\n  /**\n   * @type {BraintreeError.types}\n   * @description The type of error.\n   */\n  this.type = options.type;\n\n  /**\n   * @type {object=}\n   * @description Additional information about the error, such as an underlying network error response.\n   */\n  this.details = options.details;\n}\n\nBraintreeError.prototype = Object.create(Error.prototype);\nBraintreeError.prototype.constructor = BraintreeError;\n\n/**\n * Enum for {@link BraintreeError} types.\n * @name BraintreeError.types\n * @enum\n * @readonly\n * @memberof BraintreeError\n * @property {string} CUSTOMER An error caused by the customer.\n * @property {string} MERCHANT An error that is actionable by the merchant.\n * @property {string} NETWORK An error due to a network problem.\n * @property {string} INTERNAL An error caused by Braintree code.\n * @property {string} UNKNOWN An error where the origin is unknown.\n */\nBraintreeError.types = enumerate([\n  \"CUSTOMER\",\n  \"MERCHANT\",\n  \"NETWORK\",\n  \"INTERNAL\",\n  \"UNKNOWN\",\n]);\n\nBraintreeError.findRootError = function (err) {\n  if (\n    err instanceof BraintreeError &&\n    err.details &&\n    err.details.originalError\n  ) {\n    return BraintreeError.findRootError(err.details.originalError);\n  }\n\n  return err;\n};\n\nmodule.exports = BraintreeError;\n\n},{\"./enumerate\":100}],92:[function(require,module,exports){\n\"use strict\";\n\nvar VERSION = \"3.99.0\";\nvar PLATFORM = \"web\";\n\nvar CLIENT_API_URLS = {\n  production: \"https://api.braintreegateway.com:443\",\n  sandbox: \"https://api.sandbox.braintreegateway.com:443\",\n};\n\nvar ASSETS_URLS = {\n  production: \"https://assets.braintreegateway.com\",\n  sandbox: \"https://assets.braintreegateway.com\",\n};\n\nvar GRAPHQL_URLS = {\n  production: \"https://payments.braintree-api.com/graphql\",\n  sandbox: \"https://payments.sandbox.braintree-api.com/graphql\",\n};\n\nmodule.exports = {\n  ANALYTICS_PREFIX: PLATFORM + \".\",\n  ANALYTICS_REQUEST_TIMEOUT_MS: 2000,\n  ASSETS_URLS: ASSETS_URLS,\n  CLIENT_API_URLS: CLIENT_API_URLS,\n  FRAUDNET_SOURCE: \"BRAINTREE_SIGNIN\",\n  FRAUDNET_FNCLS: \"fnparams-dede7cc5-15fd-4c75-a9f4-36c430ee3a99\",\n  FRAUDNET_URL: \"https://c.paypal.com/da/r/fb.js\",\n  BUS_CONFIGURATION_REQUEST_EVENT: \"BUS_CONFIGURATION_REQUEST\",\n  GRAPHQL_URLS: GRAPHQL_URLS,\n  INTEGRATION_TIMEOUT_MS: 60000,\n  VERSION: VERSION,\n  INTEGRATION: \"custom\",\n  SOURCE: \"client\",\n  PLATFORM: PLATFORM,\n  BRAINTREE_LIBRARY_VERSION: \"braintree/\" + PLATFORM + \"/\" + VERSION,\n};\n\n},{}],93:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"./braintree-error\");\nvar sharedErrors = require(\"./errors\");\n\nmodule.exports = function (instance, methodNames) {\n  methodNames.forEach(function (methodName) {\n    instance[methodName] = function () {\n      throw new BraintreeError({\n        type: sharedErrors.METHOD_CALLED_AFTER_TEARDOWN.type,\n        code: sharedErrors.METHOD_CALLED_AFTER_TEARDOWN.code,\n        message: methodName + \" cannot be called after teardown.\",\n      });\n    };\n  });\n};\n\n},{\"./braintree-error\":91,\"./errors\":101}],94:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"./braintree-error\");\n\nfunction convertToBraintreeError(originalErr, btErrorObject) {\n  if (originalErr instanceof BraintreeError) {\n    return originalErr;\n  }\n\n  return new BraintreeError({\n    type: btErrorObject.type,\n    code: btErrorObject.code,\n    message: btErrorObject.message,\n    details: {\n      originalError: originalErr,\n    },\n  });\n}\n\nmodule.exports = convertToBraintreeError;\n\n},{\"./braintree-error\":91}],95:[function(require,module,exports){\n\"use strict\";\n\nvar ASSETS_URLS = require(\"./constants\").ASSETS_URLS;\n\nfunction createAssetsUrl(authorization) {\n  return ASSETS_URLS.production;\n}\n/* eslint-enable */\n\nmodule.exports = {\n  create: createAssetsUrl,\n};\n\n},{\"./constants\":92}],96:[function(require,module,exports){\n\"use strict\";\n\nvar atob = require(\"../lib/vendor/polyfill\").atob;\nvar CLIENT_API_URLS = require(\"../lib/constants\").CLIENT_API_URLS;\n\nfunction _isTokenizationKey(str) {\n  return /^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9_]+$/.test(str);\n}\n\nfunction _parseTokenizationKey(tokenizationKey) {\n  var tokens = tokenizationKey.split(\"_\");\n  var environment = tokens[0];\n  var merchantId = tokens.slice(2).join(\"_\");\n\n  return {\n    merchantId: merchantId,\n    environment: environment,\n  };\n}\n\nfunction createAuthorizationData(authorization) {\n  var parsedClientToken, parsedTokenizationKey;\n  var data = {\n    attrs: {},\n    configUrl: \"\",\n  };\n\n  if (_isTokenizationKey(authorization)) {\n    parsedTokenizationKey = _parseTokenizationKey(authorization);\n    data.environment = parsedTokenizationKey.environment;\n    data.attrs.tokenizationKey = authorization;\n    data.configUrl =\n      CLIENT_API_URLS[parsedTokenizationKey.environment] +\n      \"/merchants/\" +\n      parsedTokenizationKey.merchantId +\n      \"/client_api/v1/configuration\";\n  } else {\n    parsedClientToken = JSON.parse(atob(authorization));\n    data.environment = parsedClientToken.environment;\n    data.attrs.authorizationFingerprint =\n      parsedClientToken.authorizationFingerprint;\n    data.configUrl = parsedClientToken.configUrl;\n    data.graphQL = parsedClientToken.graphQL;\n  }\n\n  return data;\n}\n\nmodule.exports = createAuthorizationData;\n\n},{\"../lib/constants\":92,\"../lib/vendor/polyfill\":127}],97:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"./braintree-error\");\nvar assets = require(\"./assets\");\nvar sharedErrors = require(\"./errors\");\n\nvar VERSION = \"3.99.0\";\n\nfunction createDeferredClient(options) {\n  var promise = Promise.resolve();\n\n  if (options.client) {\n    return Promise.resolve(options.client);\n  }\n\n  if (!(window.braintree && window.braintree.client)) {\n    promise = assets\n      .loadScript({\n        src: options.assetsUrl + \"/web/\" + VERSION + \"/js/client.min.js\",\n      })\n      .catch(function (err) {\n        return Promise.reject(\n          new BraintreeError({\n            type: sharedErrors.CLIENT_SCRIPT_FAILED_TO_LOAD.type,\n            code: sharedErrors.CLIENT_SCRIPT_FAILED_TO_LOAD.code,\n            message: sharedErrors.CLIENT_SCRIPT_FAILED_TO_LOAD.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      });\n  }\n\n  return promise.then(function () {\n    if (window.braintree.client.VERSION !== VERSION) {\n      return Promise.reject(\n        new BraintreeError({\n          type: sharedErrors.INCOMPATIBLE_VERSIONS.type,\n          code: sharedErrors.INCOMPATIBLE_VERSIONS.code,\n          message:\n            \"Client (version \" +\n            window.braintree.client.VERSION +\n            \") and \" +\n            options.name +\n            \" (version \" +\n            VERSION +\n            \") components must be from the same SDK version.\",\n        })\n      );\n    }\n\n    return window.braintree.client.create({\n      authorization: options.authorization,\n      debug: options.debug,\n    });\n  });\n}\n\nmodule.exports = {\n  create: createDeferredClient,\n};\n\n},{\"./assets\":87,\"./braintree-error\":91,\"./errors\":101}],98:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (fn) {\n  return function () {\n    // IE9 doesn't support passing arguments to setTimeout so we have to emulate it.\n    var args = arguments;\n\n    setTimeout(function () {\n      fn.apply(null, args);\n    }, 1);\n  };\n};\n\n},{}],99:[function(require,module,exports){\n\"use strict\";\n\nvar batchExecuteFunctions = require(\"./batch-execute-functions\");\n\nfunction Destructor() {\n  this._teardownRegistry = [];\n\n  this._isTearingDown = false;\n}\n\nDestructor.prototype.registerFunctionForTeardown = function (fn) {\n  if (typeof fn === \"function\") {\n    this._teardownRegistry.push(fn);\n  }\n};\n\nDestructor.prototype.teardown = function (callback) {\n  if (this._isTearingDown) {\n    callback(new Error(\"Destructor is already tearing down\"));\n\n    return;\n  }\n\n  this._isTearingDown = true;\n\n  batchExecuteFunctions(\n    this._teardownRegistry,\n    function (err) {\n      this._teardownRegistry = [];\n      this._isTearingDown = false;\n\n      if (typeof callback === \"function\") {\n        callback(err);\n      }\n    }.bind(this)\n  );\n};\n\nmodule.exports = Destructor;\n\n},{\"./batch-execute-functions\":90}],100:[function(require,module,exports){\n\"use strict\";\n\nfunction enumerate(values, prefix) {\n  prefix = prefix == null ? \"\" : prefix;\n\n  return values.reduce(function (enumeration, value) {\n    enumeration[value] = prefix + value;\n\n    return enumeration;\n  }, {});\n}\n\nmodule.exports = enumerate;\n\n},{}],101:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.Shared Internal Error Codes\n * @ignore\n * @description These codes should never be experienced by the merchant directly.\n * @property {INTERNAL} INVALID_USE_OF_INTERNAL_FUNCTION Occurs when the client is created without a gateway configuration. Should never happen.\n */\n\n/**\n * @name BraintreeError.Shared Errors - Component Creation Error Codes\n * @description Errors that occur when creating components.\n * @property {MERCHANT} INSTANTIATION_OPTION_REQUIRED Occurs when a component is created that is missing a required option.\n * @property {MERCHANT} INCOMPATIBLE_VERSIONS Occurs when a component is created with a client with a different version than the component.\n * @property {NETWORK} CLIENT_SCRIPT_FAILED_TO_LOAD Occurs when a component attempts to load the Braintree client script, but the request fails.\n */\n\n/**\n * @name BraintreeError.Shared Errors - Component Instance Error Codes\n * @description Errors that occur when using instances of components.\n * @property {MERCHANT} METHOD_CALLED_AFTER_TEARDOWN Occurs when a method is called on a component instance after it has been torn down.\n */\n\nvar BraintreeError = require(\"./braintree-error\");\n\nmodule.exports = {\n  INVALID_USE_OF_INTERNAL_FUNCTION: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"INVALID_USE_OF_INTERNAL_FUNCTION\",\n  },\n  INSTANTIATION_OPTION_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"INSTANTIATION_OPTION_REQUIRED\",\n  },\n  INCOMPATIBLE_VERSIONS: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"INCOMPATIBLE_VERSIONS\",\n  },\n  CLIENT_SCRIPT_FAILED_TO_LOAD: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_SCRIPT_FAILED_TO_LOAD\",\n    message: \"Braintree client script could not be loaded.\",\n  },\n  METHOD_CALLED_AFTER_TEARDOWN: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"METHOD_CALLED_AFTER_TEARDOWN\",\n  },\n};\n\n},{\"./braintree-error\":91}],102:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function findRootNode(element) {\n  while (element.parentNode) {\n    element = element.parentNode;\n  }\n\n  return element;\n};\n\n},{}],103:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (array, key, value) {\n  var i;\n\n  for (i = 0; i < array.length; i++) {\n    if (array[i].hasOwnProperty(key) && array[i][key] === value) {\n      return array[i];\n    }\n  }\n\n  return null;\n};\n\n},{}],104:[function(require,module,exports){\n\"use strict\";\n\nvar Popup = require(\"./strategies/popup\");\nvar PopupBridge = require(\"./strategies/popup-bridge\");\nvar Modal = require(\"./strategies/modal\");\nvar Bus = require(\"framebus\");\nvar events = require(\"../shared/events\");\nvar errors = require(\"../shared/errors\");\nvar constants = require(\"../shared/constants\");\nvar uuid = require(\"@braintree/uuid\");\nvar iFramer = require(\"@braintree/iframer\");\nvar BraintreeError = require(\"../../braintree-error\");\nvar browserDetection = require(\"../shared/browser-detection\");\nvar assign = require(\"./../../assign\").assign;\nvar BUS_CONFIGURATION_REQUEST_EVENT =\n  require(\"../../constants\").BUS_CONFIGURATION_REQUEST_EVENT;\n\nvar REQUIRED_CONFIG_KEYS = [\"name\", \"dispatchFrameUrl\", \"openFrameUrl\"];\n\nfunction noop() {}\n\nfunction _validateFrameConfiguration(options) {\n  if (!options) {\n    throw new Error(\"Valid configuration is required\");\n  }\n\n  REQUIRED_CONFIG_KEYS.forEach(function (key) {\n    if (!options.hasOwnProperty(key)) {\n      throw new Error(\"A valid frame \" + key + \" must be provided\");\n    }\n  });\n\n  if (!/^[\\w_]+$/.test(options.name)) {\n    throw new Error(\"A valid frame name must be provided\");\n  }\n}\n\nfunction FrameService(options) {\n  _validateFrameConfiguration(options);\n\n  this._serviceId = uuid().replace(/-/g, \"\");\n\n  this._options = {\n    name: options.name + \"_\" + this._serviceId,\n    dispatchFrameUrl: options.dispatchFrameUrl,\n    openFrameUrl: options.openFrameUrl,\n    height: options.height,\n    width: options.width,\n    top: options.top,\n    left: options.left,\n  };\n  this.state = options.state || {};\n\n  this._bus = new Bus({ channel: this._serviceId });\n  this._setBusEvents();\n}\n\nFrameService.prototype.initialize = function (callback) {\n  var dispatchFrameReadyHandler = function () {\n    callback();\n    this._bus.off(events.DISPATCH_FRAME_READY, dispatchFrameReadyHandler);\n  }.bind(this);\n\n  this._bus.on(events.DISPATCH_FRAME_READY, dispatchFrameReadyHandler);\n  this._writeDispatchFrame();\n};\n\nFrameService.prototype._writeDispatchFrame = function () {\n  var frameName = constants.DISPATCH_FRAME_NAME + \"_\" + this._serviceId;\n  var frameSrc = this._options.dispatchFrameUrl;\n\n  this._dispatchFrame = iFramer({\n    \"aria-hidden\": true,\n    name: frameName,\n    title: frameName,\n    src: frameSrc,\n    class: constants.DISPATCH_FRAME_CLASS,\n    height: 0,\n    width: 0,\n    style: {\n      position: \"absolute\",\n      left: \"-9999px\",\n    },\n  });\n\n  document.body.appendChild(this._dispatchFrame);\n};\n\nFrameService.prototype._setBusEvents = function () {\n  this._bus.on(\n    events.DISPATCH_FRAME_REPORT,\n    function (res, reply) {\n      if (this._onCompleteCallback) {\n        this._onCompleteCallback.call(null, res.err, res.payload);\n      }\n      this._frame.close();\n\n      this._onCompleteCallback = null;\n\n      if (reply) {\n        reply();\n      }\n    }.bind(this)\n  );\n\n  this._bus.on(\n    BUS_CONFIGURATION_REQUEST_EVENT,\n    function (reply) {\n      reply(this.state);\n    }.bind(this)\n  );\n};\n\nFrameService.prototype.open = function (options, callback) {\n  options = options || {};\n  this._frame = this._getFrameForEnvironment(options);\n\n  this._frame.initialize(callback);\n\n  if (this._frame instanceof PopupBridge) {\n    // Frameservice loads a spinner then redirects to the final destination url.\n    // For Popupbridge it doesn't have the same rules around popups since it's deferred to the mobile side\n    // therefore, skips the regular open path and instead uses `#redirect` to handle things\n    return;\n  }\n\n  assign(this.state, options.state);\n\n  this._onCompleteCallback = callback;\n  this._frame.open();\n\n  if (this.isFrameClosed()) {\n    this._cleanupFrame();\n\n    if (callback) {\n      callback(new BraintreeError(errors.FRAME_SERVICE_FRAME_OPEN_FAILED));\n    }\n\n    return;\n  }\n  this._pollForPopupClose();\n};\n\nFrameService.prototype.redirect = function (url) {\n  if (this._frame && !this.isFrameClosed()) {\n    this._frame.redirect(url);\n  }\n};\n\nFrameService.prototype.close = function () {\n  if (!this.isFrameClosed()) {\n    this._frame.close();\n  }\n};\n\nFrameService.prototype.focus = function () {\n  if (!this.isFrameClosed()) {\n    this._frame.focus();\n  }\n};\n\nFrameService.prototype.createHandler = function (options) {\n  options = options || {};\n\n  return {\n    close: function () {\n      if (options.beforeClose) {\n        options.beforeClose();\n      }\n\n      this.close();\n    }.bind(this),\n    focus: function () {\n      if (options.beforeFocus) {\n        options.beforeFocus();\n      }\n\n      this.focus();\n    }.bind(this),\n  };\n};\n\nFrameService.prototype.createNoopHandler = function () {\n  return {\n    close: noop,\n    focus: noop,\n  };\n};\n\nFrameService.prototype.teardown = function () {\n  this.close();\n  this._dispatchFrame.parentNode.removeChild(this._dispatchFrame);\n  this._dispatchFrame = null;\n  this._cleanupFrame();\n};\n\nFrameService.prototype.isFrameClosed = function () {\n  return this._frame == null || this._frame.isClosed();\n};\n\nFrameService.prototype._cleanupFrame = function () {\n  this._frame = null;\n  clearInterval(this._popupInterval);\n  this._popupInterval = null;\n};\n\nFrameService.prototype._pollForPopupClose = function () {\n  this._popupInterval = setInterval(\n    function () {\n      if (this.isFrameClosed()) {\n        this._cleanupFrame();\n        if (this._onCompleteCallback) {\n          this._onCompleteCallback(\n            new BraintreeError(errors.FRAME_SERVICE_FRAME_CLOSED)\n          );\n        }\n      }\n    }.bind(this),\n    constants.POPUP_POLL_INTERVAL\n  );\n\n  return this._popupInterval;\n};\n\nFrameService.prototype._getFrameForEnvironment = function (options) {\n  var usePopup = browserDetection.supportsPopups();\n  var popupBridgeExists = Boolean(window.popupBridge);\n\n  var initOptions = assign({}, this._options, options);\n\n  if (popupBridgeExists) {\n    return new PopupBridge(initOptions);\n  } else if (usePopup) {\n    return new Popup(initOptions);\n  }\n\n  return new Modal(initOptions);\n};\n\nmodule.exports = FrameService;\n\n},{\"../../braintree-error\":91,\"../../constants\":92,\"../shared/browser-detection\":111,\"../shared/constants\":112,\"../shared/errors\":113,\"../shared/events\":114,\"./../../assign\":88,\"./strategies/modal\":106,\"./strategies/popup\":109,\"./strategies/popup-bridge\":107,\"@braintree/iframer\":39,\"@braintree/uuid\":43,\"framebus\":167}],105:[function(require,module,exports){\n\"use strict\";\n\nvar FrameService = require(\"./frame-service\");\n\n/**\n * @ignore\n * @function create\n * Initializing FrameService should be done at the point when the component is created, so it is ready whenever a component needs to open a popup window.\n * Browsers have varying rules around what constitutes and async action worth blocking a popup for, but the likes of Safari\n * will block the popup if `frameService#create` is invoked during any asynchronous process (such as an API request to tokenize payment details).\n *\n * The process of setting up the dispatch frame and subsequent framebus communications via event listeners are considered async by Safari's standards.\n *\n * @param {object} options The options provided to frameservice\n * @param {string} options.name The name to use for identifying the various pieces associated with frameservice.\n * @param {string} options.dispatchFrameUrl The static asset to load for use as the dispatch frame. This allows for secure communication between the iframe and the popup, since they are on the same asset domain (usually checkout.paypal.com or assets.braintreegateway.com)\n * @param {string} options.openFrameUrl The url to load in the popup. Sometimes it is the case that you'll need info that comes _after_ the popup loads in which case we load the `landing-frame` that's a loading spinner then redirect to the proper/final destination. See the PayPal component for an example.\n * Otherwise if all the info needed is ready up-front, then you can forego a landing frame and go straight to the final destination.\n * @param {string} [options.height] The desired popup height.\n * @param {string} [options.width] The desired popup width.\n * @param {string} [options.top] The desired top value of the popup for positioning.\n * @param {string} [options.left] The desired left value of the popup for positioning.\n * @param {object} [options.state] Seems to be dead code, but allows for injecting data in to popup. NEXT_MAJOR_VERSION remove this param if no usage exists.\n * @param {function} callback The function to invoke once the frameservice is created and ready to use. FrameService instance is returned.\n */\nmodule.exports = {\n  create: function createFrameService(options, callback) {\n    var frameService = new FrameService(options);\n\n    frameService.initialize(function () {\n      callback(frameService);\n    });\n  },\n};\n\n},{\"./frame-service\":104}],106:[function(require,module,exports){\n\"use strict\";\n\nvar iFramer = require(\"@braintree/iframer\");\nvar assign = require(\"../../../assign\").assign;\nvar browserDetection = require(\"../../shared/browser-detection\");\n\nvar ELEMENT_STYLES = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  bottom: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  outline: \"none\",\n  zIndex: 20001,\n  background: \"#FFFFFF\",\n};\n\nfunction noop() {}\n\n/**\n *\n * We should not ever really use the Modal. Modals are _like_  popups, but the key difference is that the customer can't actually verify it's app domain and thus secure/valid. Old PP sdk (./src/paypal) uses this\n * to get info from webviews (e.g. facebook).\n */\n\nfunction Modal(options) {\n  this._closed = null;\n  this._frame = null;\n  this._options = options || {};\n  this._container = this._options.container || document.body;\n}\n\nModal.prototype.initialize = noop;\n\nModal.prototype.open = function () {\n  var iframerConfig = {\n    src: this._options.openFrameUrl,\n    name: this._options.name,\n    scrolling: \"yes\",\n    height: \"100%\",\n    width: \"100%\",\n    style: assign({}, ELEMENT_STYLES),\n    title: \"Lightbox Frame\",\n  };\n\n  if (browserDetection.isIos()) {\n    // WKWebView has buggy behavior when scrolling a fixed position modal. The workaround is to lock scrolling in\n    // the background. When modal is closed, we restore scrolling and return to the previous scroll position.\n    if (browserDetection.isIosWKWebview()) {\n      this._lockScrolling();\n      // Allows WKWebView to scroll all the way down to bottom\n      iframerConfig.style = {};\n    }\n\n    this._el = document.createElement(\"div\");\n\n    assign(this._el.style, ELEMENT_STYLES, {\n      height: \"100%\",\n      width: \"100%\",\n      overflow: \"auto\",\n      \"-webkit-overflow-scrolling\": \"touch\",\n    });\n\n    this._frame = iFramer(iframerConfig);\n    this._el.appendChild(this._frame);\n  } else {\n    this._el = this._frame = iFramer(iframerConfig);\n  }\n  this._closed = false;\n\n  this._container.appendChild(this._el);\n};\n\nModal.prototype.focus = noop;\n\nModal.prototype.close = function () {\n  this._container.removeChild(this._el);\n  this._frame = null;\n  this._closed = true;\n  if (browserDetection.isIosWKWebview()) {\n    this._unlockScrolling();\n  }\n};\n\nModal.prototype.isClosed = function () {\n  return Boolean(this._closed);\n};\n\nModal.prototype.redirect = function (redirectUrl) {\n  this._frame.src = redirectUrl;\n};\n\nModal.prototype._unlockScrolling = function () {\n  document.body.style.overflow = this._savedBodyProperties.overflowStyle;\n  document.body.style.position = this._savedBodyProperties.positionStyle;\n  window.scrollTo(\n    this._savedBodyProperties.left,\n    this._savedBodyProperties.top\n  );\n  delete this._savedBodyProperties;\n};\n\nModal.prototype._lockScrolling = function () {\n  var doc = document.documentElement;\n\n  // From https://stackoverflow.com/questions/9538868/prevent-body-from-scrolling-when-a-modal-is-opened#comment65626743_24727206\n  this._savedBodyProperties = {\n    left: (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\n    top: (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0),\n    overflowStyle: document.body.style.overflow,\n    positionStyle: document.body.style.position,\n  };\n  document.body.style.overflow = \"hidden\";\n  document.body.style.position = \"fixed\";\n  window.scrollTo(0, 0);\n};\n\nmodule.exports = Modal;\n\n},{\"../../../assign\":88,\"../../shared/browser-detection\":111,\"@braintree/iframer\":39}],107:[function(require,module,exports){\n\"use strict\";\n\nvar BraintreeError = require(\"../../../braintree-error\");\nvar errors = require(\"../../shared/errors\");\n\nfunction noop() {}\n\nfunction PopupBridge(options) {\n  this._closed = null;\n  this._options = options;\n}\n\nPopupBridge.prototype.initialize = function (callback) {\n  var self = this;\n\n  window.popupBridge.onComplete = function (err, payload) {\n    var popupDismissed = !payload && !err;\n\n    self._closed = true;\n\n    if (err || popupDismissed) {\n      // User clicked \"Done\" button of browser view\n      callback(new BraintreeError(errors.FRAME_SERVICE_FRAME_CLOSED));\n\n      return;\n    }\n    // User completed popup flow (includes success and cancel cases)\n    callback(null, payload);\n  };\n};\n\nPopupBridge.prototype.open = function (options) {\n  var url;\n\n  options = options || {};\n  url = options.openFrameUrl || this._options.openFrameUrl;\n\n  this._closed = false;\n  window.popupBridge.open(url);\n};\n\nPopupBridge.prototype.focus = noop;\n\nPopupBridge.prototype.close = noop;\n\nPopupBridge.prototype.isClosed = function () {\n  return Boolean(this._closed);\n};\n\nPopupBridge.prototype.redirect = function (redirectUrl) {\n  this.open({ openFrameUrl: redirectUrl });\n};\n\nmodule.exports = PopupBridge;\n\n},{\"../../../braintree-error\":91,\"../../shared/errors\":113}],108:[function(require,module,exports){\n\"use strict\";\n\nvar constants = require(\"../../../shared/constants\");\nvar position = require(\"./position\");\n\nfunction calculatePosition(type, userDefinedPosition, size) {\n  if (typeof userDefinedPosition !== \"undefined\") {\n    return userDefinedPosition;\n  }\n\n  return position[type](size);\n}\n\nmodule.exports = function composePopupOptions(options) {\n  var height = options.height || constants.DEFAULT_POPUP_HEIGHT;\n  var width = options.width || constants.DEFAULT_POPUP_WIDTH;\n  var top = calculatePosition(\"top\", options.top, height);\n  var left = calculatePosition(\"left\", options.left, width);\n\n  return [\n    constants.POPUP_BASE_OPTIONS,\n    \"height=\" + height,\n    \"width=\" + width,\n    \"top=\" + top,\n    \"left=\" + left,\n  ].join(\",\");\n};\n\n},{\"../../../shared/constants\":112,\"./position\":110}],109:[function(require,module,exports){\n\"use strict\";\n\nvar composeOptions = require(\"./compose-options\");\n\nfunction noop() {}\n\nfunction Popup(options) {\n  this._frame = null;\n  this._options = options || {};\n}\n\nPopup.prototype.initialize = noop;\n\nPopup.prototype.open = function () {\n  this._frame = window.open(\n    this._options.openFrameUrl,\n    this._options.name,\n    composeOptions(this._options)\n  );\n};\n\nPopup.prototype.focus = function () {\n  this._frame.focus();\n};\n\nPopup.prototype.close = function () {\n  if (this._frame.closed) {\n    return;\n  }\n  this._frame.close();\n};\n\nPopup.prototype.isClosed = function () {\n  return !this._frame || Boolean(this._frame.closed);\n};\n\nPopup.prototype.redirect = function (redirectUrl) {\n  this._frame.location.href = redirectUrl;\n};\n\nmodule.exports = Popup;\n\n},{\"./compose-options\":108}],110:[function(require,module,exports){\n\"use strict\";\n\nfunction top(height) {\n  var windowHeight =\n    window.outerHeight || document.documentElement.clientHeight;\n  var windowTop = window.screenY == null ? window.screenTop : window.screenY;\n\n  return center(windowHeight, height, windowTop);\n}\n\nfunction left(width) {\n  var windowWidth = window.outerWidth || document.documentElement.clientWidth;\n  var windowLeft = window.screenX == null ? window.screenLeft : window.screenX;\n\n  return center(windowWidth, width, windowLeft);\n}\n\nfunction center(windowMetric, popupMetric, offset) {\n  return (windowMetric - popupMetric) / 2 + offset;\n}\n\nmodule.exports = {\n  top: top,\n  left: left,\n  center: center,\n};\n\n},{}],111:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n  isIos: require(\"@braintree/browser-detection/is-ios\"),\n  isIosWKWebview: require(\"@braintree/browser-detection/is-ios-wkwebview\"),\n  supportsPopups: require(\"@braintree/browser-detection/supports-popups\"),\n};\n\n},{\"@braintree/browser-detection/is-ios\":34,\"@braintree/browser-detection/is-ios-wkwebview\":33,\"@braintree/browser-detection/supports-popups\":36}],112:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n  DISPATCH_FRAME_NAME: \"dispatch\",\n  DISPATCH_FRAME_CLASS: \"braintree-dispatch-frame\",\n  POPUP_BASE_OPTIONS: \"resizable,scrollbars\",\n  DEFAULT_POPUP_WIDTH: 450,\n  DEFAULT_POPUP_HEIGHT: 535,\n  POPUP_POLL_INTERVAL: 100,\n  POPUP_CLOSE_TIMEOUT: 100,\n};\n\n},{}],113:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.Popup Related Error Codes\n * @ignore\n * @description Errors that occur when using a component that opens a popup window.\n * @property {INTERNAL} FRAME_SERVICE_FRAME_CLOSED - Occurs when the frame is closed before tokenization can occur.\n * @property {INTERNAL} FRAME_SERVICE_FRAME_OPEN_FAILED - Occurs when the popup could not be opened.\n */\n\nvar BraintreeError = require(\"../../braintree-error\");\n\nmodule.exports = {\n  FRAME_SERVICE_FRAME_CLOSED: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"FRAME_SERVICE_FRAME_CLOSED\",\n    message: \"Frame closed before tokenization could occur.\",\n  },\n  FRAME_SERVICE_FRAME_OPEN_FAILED: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"FRAME_SERVICE_FRAME_OPEN_FAILED\",\n    message: \"Frame failed to open.\",\n  },\n};\n\n},{\"../../braintree-error\":91}],114:[function(require,module,exports){\n\"use strict\";\n\nvar enumerate = require(\"../../enumerate\");\n\nmodule.exports = enumerate(\n  [\"DISPATCH_FRAME_READY\", \"DISPATCH_FRAME_REPORT\"],\n  \"frameService:\"\n);\n\n},{\"../../enumerate\":100}],115:[function(require,module,exports){\n\"use strict\";\n\nvar VERSION = \"3.99.0\";\nvar assign = require(\"./assign\").assign;\n\nfunction generateTokenizationParameters(configuration, overrides) {\n  var metadata = configuration.analyticsMetadata;\n  var basicTokenizationParameters = {\n    gateway: \"braintree\",\n    \"braintree:merchantId\": configuration.gatewayConfiguration.merchantId,\n    \"braintree:apiVersion\": \"v1\",\n    \"braintree:sdkVersion\": VERSION,\n    \"braintree:metadata\": JSON.stringify({\n      source: metadata.source,\n      integration: metadata.integration,\n      sessionId: metadata.sessionId,\n      version: VERSION,\n      platform: metadata.platform,\n    }),\n  };\n\n  return assign({}, basicTokenizationParameters, overrides);\n}\n\nmodule.exports = function (configuration, googlePayVersion, googleMerchantId) {\n  var data, paypalPaymentMethod;\n  var androidPayConfiguration = configuration.gatewayConfiguration.androidPay;\n  var environment =\n    configuration.gatewayConfiguration.environment === \"production\"\n      ? \"PRODUCTION\"\n      : \"TEST\";\n\n  if (googlePayVersion === 2) {\n    data = {\n      apiVersion: 2,\n      apiVersionMinor: 0,\n      environment: environment,\n      allowedPaymentMethods: [\n        {\n          type: \"CARD\",\n          parameters: {\n            allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n            allowedCardNetworks: androidPayConfiguration.supportedNetworks.map(\n              function (card) {\n                return card.toUpperCase();\n              }\n            ),\n          },\n          tokenizationSpecification: {\n            type: \"PAYMENT_GATEWAY\",\n            parameters: generateTokenizationParameters(configuration, {\n              \"braintree:authorizationFingerprint\":\n                androidPayConfiguration.googleAuthorizationFingerprint,\n            }),\n          },\n        },\n      ],\n    };\n\n    if (googleMerchantId) {\n      data.merchantInfo = {\n        merchantId: googleMerchantId,\n      };\n    }\n\n    if (androidPayConfiguration.paypalClientId) {\n      paypalPaymentMethod = {\n        type: \"PAYPAL\",\n        parameters: {\n          /* eslint-disable camelcase */\n          purchase_context: {\n            purchase_units: [\n              {\n                payee: {\n                  client_id: androidPayConfiguration.paypalClientId,\n                },\n                recurring_payment: true,\n              },\n            ],\n          },\n          /* eslint-enable camelcase */\n        },\n        tokenizationSpecification: {\n          type: \"PAYMENT_GATEWAY\",\n          parameters: generateTokenizationParameters(configuration, {\n            \"braintree:paypalClientId\": androidPayConfiguration.paypalClientId,\n          }),\n        },\n      };\n\n      data.allowedPaymentMethods.push(paypalPaymentMethod);\n    }\n  } else {\n    data = {\n      environment: environment,\n      allowedPaymentMethods: [\"CARD\", \"TOKENIZED_CARD\"],\n      paymentMethodTokenizationParameters: {\n        tokenizationType: \"PAYMENT_GATEWAY\",\n        parameters: generateTokenizationParameters(configuration, {\n          \"braintree:authorizationFingerprint\":\n            androidPayConfiguration.googleAuthorizationFingerprint,\n        }),\n      },\n      cardRequirements: {\n        allowedCardNetworks: androidPayConfiguration.supportedNetworks.map(\n          function (card) {\n            return card.toUpperCase();\n          }\n        ),\n      },\n    };\n\n    if (configuration.authorizationType === \"TOKENIZATION_KEY\") {\n      data.paymentMethodTokenizationParameters.parameters[\n        \"braintree:clientKey\"\n      ] = configuration.authorization;\n    }\n\n    if (googleMerchantId) {\n      data.merchantId = googleMerchantId;\n    }\n\n    if (googlePayVersion) {\n      data.apiVersion = googlePayVersion;\n    }\n  }\n\n  return data;\n};\n\n},{\"./assign\":88}],116:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function inIframe(win) {\n  win = win || window;\n\n  try {\n    return win.self !== win.top;\n  } catch (e) {\n    return true;\n  }\n};\n\n},{}],117:[function(require,module,exports){\n\"use strict\";\n\nfunction convertDateStringToDate(dateString) {\n  var splitDate = dateString.split(\"-\");\n\n  return new Date(splitDate[0], splitDate[1], splitDate[2]);\n}\n\nfunction isDateStringBeforeOrOn(firstDate, secondDate) {\n  return (\n    convertDateStringToDate(firstDate) <= convertDateStringToDate(secondDate)\n  );\n}\n\nmodule.exports = isDateStringBeforeOrOn;\n\n},{}],118:[function(require,module,exports){\n\"use strict\";\n\nfunction isHTTPS(protocol) {\n  protocol = protocol || window.location.protocol;\n\n  return protocol === \"https:\";\n}\n\nmodule.exports = {\n  isHTTPS: isHTTPS,\n};\n\n},{}],119:[function(require,module,exports){\n\"use strict\";\n\nvar parser;\nvar legalHosts = {\n  \"paypal.com\": 1,\n  \"braintreepayments.com\": 1,\n  \"braintreegateway.com\": 1,\n  \"braintree-api.com\": 1,\n};\n\nfunction stripSubdomains(domain) {\n  return domain.split(\".\").slice(-2).join(\".\");\n}\n\nfunction isVerifiedDomain(url) {\n  var mainDomain;\n\n  url = url.toLowerCase();\n\n  if (!/^https:/.test(url)) {\n    return false;\n  }\n\n  parser = parser || document.createElement(\"a\");\n  parser.href = url;\n  mainDomain = stripSubdomains(parser.hostname);\n\n  return legalHosts.hasOwnProperty(mainDomain);\n}\n\nmodule.exports = isVerifiedDomain;\n\n},{}],120:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (value) {\n  return JSON.parse(JSON.stringify(value));\n};\n\n},{}],121:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (obj) {\n  return Object.keys(obj).filter(function (key) {\n    return typeof obj[key] === \"function\";\n  });\n};\n\n},{}],122:[function(require,module,exports){\n\"use strict\";\n\nfunction once(fn) {\n  var called = false;\n\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(null, arguments);\n    }\n  };\n}\n\nmodule.exports = once;\n\n},{}],123:[function(require,module,exports){\n\"use strict\";\n\nfunction _notEmpty(obj) {\n  var key;\n\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/* eslint-disable no-mixed-operators */\nfunction _isArray(value) {\n  return (\n    (value &&\n      typeof value === \"object\" &&\n      typeof value.length === \"number\" &&\n      Object.prototype.toString.call(value) === \"[object Array]\") ||\n    false\n  );\n}\n/* eslint-enable no-mixed-operators */\n\nfunction hasQueryParams(url) {\n  url = url || window.location.href;\n\n  return /\\?/.test(url);\n}\n\nfunction parse(url) {\n  var query, params;\n\n  url = url || window.location.href;\n\n  if (!hasQueryParams(url)) {\n    return {};\n  }\n\n  query = url.split(\"?\")[1] || \"\";\n  query = query.replace(/#.*$/, \"\").split(\"&\");\n\n  params = query.reduce(function (toReturn, keyValue) {\n    var parts = keyValue.split(\"=\");\n    var key = decodeURIComponent(parts[0]);\n    var value = decodeURIComponent(parts[1]);\n\n    toReturn[key] = value;\n\n    return toReturn;\n  }, {});\n\n  return params;\n}\n\nfunction stringify(params, namespace) {\n  var k, v, p;\n  var query = [];\n\n  for (p in params) {\n    if (!params.hasOwnProperty(p)) {\n      continue;\n    }\n\n    v = params[p];\n\n    if (namespace) {\n      if (_isArray(params)) {\n        k = namespace + \"[]\";\n      } else {\n        k = namespace + \"[\" + p + \"]\";\n      }\n    } else {\n      k = p;\n    }\n    if (typeof v === \"object\") {\n      query.push(stringify(v, k));\n    } else {\n      query.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n    }\n  }\n\n  return query.join(\"&\");\n}\n\nfunction queryify(url, params) {\n  url = url || \"\";\n\n  if (params != null && typeof params === \"object\" && _notEmpty(params)) {\n    url += url.indexOf(\"?\") === -1 ? \"?\" : \"\";\n    url += url.indexOf(\"=\") !== -1 ? \"&\" : \"\";\n    url += stringify(params);\n  }\n\n  return url;\n}\n\nmodule.exports = {\n  parse: parse,\n  stringify: stringify,\n  queryify: queryify,\n  hasQueryParams: hasQueryParams,\n};\n\n},{}],124:[function(require,module,exports){\n\"use strict\";\n\nvar uuid = require(\"@braintree/uuid\");\nvar findRootNode = require(\"./find-root-node\");\n\n// based on https://github.com/krakenjs/belter/blob/cdddc4f8ddb172d29db9e7e1ad1eeeacfb93e215/src/dom.js#L981-L1031\n// thanks @bluepnume\n\nfunction isShadowElement(element) {\n  element = findRootNode(element);\n\n  return element.toString() === \"[object ShadowRoot]\";\n}\n\nfunction getShadowHost(element) {\n  element = findRootNode(element);\n\n  if (!isShadowElement(element)) {\n    return null;\n  }\n\n  return element.host;\n}\n\nfunction transformToSlot(element, styles) {\n  var styleNode = findRootNode(element).querySelector(\"style\");\n  var shadowHost = getShadowHost(element);\n  var slotName = \"shadow-slot-\" + uuid();\n  var slot = document.createElement(\"slot\");\n  var slotProvider = document.createElement(\"div\");\n\n  slot.setAttribute(\"name\", slotName);\n  element.appendChild(slot);\n\n  slotProvider.setAttribute(\"slot\", slotName);\n  shadowHost.appendChild(slotProvider);\n\n  if (styles) {\n    if (!styleNode) {\n      styleNode = document.createElement(\"style\");\n      element.appendChild(styleNode);\n    }\n\n    styleNode.sheet.insertRule(\n      '::slotted([slot=\"' + slotName + '\"]) { ' + styles + \" }\"\n    );\n  }\n\n  if (isShadowElement(shadowHost)) {\n    return transformToSlot(slotProvider, styles);\n  }\n\n  return slotProvider;\n}\n\nmodule.exports = {\n  isShadowElement: isShadowElement,\n  getShadowHost: getShadowHost,\n  transformToSlot: transformToSlot,\n};\n\n},{\"./find-root-node\":102,\"@braintree/uuid\":43}],125:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = function (snakeString) {\n  if (snakeString.indexOf(\"_\") === -1) {\n    return snakeString;\n  }\n\n  return snakeString.toLowerCase().replace(/(\\_\\w)/g, function (match) {\n    return match[1].toUpperCase();\n  });\n};\n\n},{}],126:[function(require,module,exports){\n\"use strict\";\n\nfunction useMin(isDebug) {\n  return isDebug ? \"\" : \".min\";\n}\n\nmodule.exports = useMin;\n\n},{}],127:[function(require,module,exports){\n\"use strict\";\n\n// NEXT_MAJOR_VERSION old versions of IE don't have atob, in the\n// next major version, we're dropping support for those versions\n// so we can eliminate the need to have this atob polyfill\nvar atobNormalized = typeof atob === \"function\" ? atob : atobPolyfill;\n\nfunction atobPolyfill(base64String) {\n  var a, b, c, b1, b2, b3, b4, i;\n  var base64Matcher = new RegExp(\n    \"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})([=]{1,2})?$\"\n  );\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  var result = \"\";\n\n  if (!base64Matcher.test(base64String)) {\n    throw new Error(\"Non base64 encoded input passed to window.atob polyfill\");\n  }\n\n  i = 0;\n  do {\n    b1 = characters.indexOf(base64String.charAt(i++));\n    b2 = characters.indexOf(base64String.charAt(i++));\n    b3 = characters.indexOf(base64String.charAt(i++));\n    b4 = characters.indexOf(base64String.charAt(i++));\n\n    a = ((b1 & 0x3f) << 2) | ((b2 >> 4) & 0x3);\n    b = ((b2 & 0xf) << 4) | ((b3 >> 2) & 0xf);\n    c = ((b3 & 0x3) << 6) | (b4 & 0x3f);\n\n    result +=\n      String.fromCharCode(a) +\n      (b ? String.fromCharCode(b) : \"\") +\n      (c ? String.fromCharCode(c) : \"\");\n  } while (i < base64String.length);\n\n  return result;\n}\n\nmodule.exports = {\n  atob: function (base64String) {\n    return atobNormalized.call(window, base64String);\n  },\n  _atob: atobPolyfill,\n};\n\n},{}],128:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.PayPal Checkout - Creation Error Codes\n * @description Errors that occur when [creating the PayPal Checkout component](./module-braintree-web_paypal-checkout.html#.create).\n * @property {MERCHANT} PAYPAL_NOT_ENABLED Occurs when PayPal is not enabled on the Braintree control panel.\n * @property {MERCHANT} PAYPAL_SANDBOX_ACCOUNT_NOT_LINKED Occurs only when testing in Sandbox, when a PayPal sandbox account is not linked to the merchant account in the Braintree control panel.\n */\n\n/**\n * @name BraintreeError.PayPal Checkout - createPayment Error Codes\n * @description Errors that occur when using the [`createPayment` method](./PayPalCheckout.html#createPayment).\n * @property {MERCHANT} PAYPAL_FLOW_OPTION_REQUIRED Occurs when a required option is missing.\n * @property {MERCHANT} PAYPAL_INVALID_PAYMENT_OPTION Occurs when an option contains an invalid value.\n * @property {NETWORK} PAYPAL_FLOW_FAILED Occurs when something goes wrong when initializing the flow.\n */\n\n/**\n * @name BraintreeError.PayPal Checkout - startVaultInitiatedCheckout Error Codes\n * @description Errors that occur when using the [`startVaultInitiatedCheckout` method](./PayPalCheckout.html#startVaultInitiatedCheckout).\n * @property {MERCHANT} PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED Occurs when a required param is missing when calling the method.\n * @property {MERCHANT} PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED Occurs when PayPal window could not be opened. This often occurs because the call to start the vault initiated flow was not triggered from a click event.\n * @property {CUSTOMER} PAYPAL_START_VAULT_INITIATED_CHECKOUT_CANCELED Occurs when a customer closes the PayPal flow before completion.\n * @property {MERCHANT} PAYPAL_START_VAULT_INITIATED_CHECKOUT_IN_PROGRESS Occurs when the flow is initialized while an authorization is already in progress.\n * @property {NETWORK} PAYPAL_START_VAULT_INITIATED_CHECKOUT_SETUP_FAILED Occurs when something went wrong setting up the flow.\n */\n\n/**\n * @name BraintreeError.PayPal Checkout - tokenizePayment Error Codes\n * @description Errors that occur when using the [`tokenizePayment` method](./PayPalCheckout.html#tokenizePayment).\n * @property {NETWORK} PAYPAL_ACCOUNT_TOKENIZATION_FAILED Occurs when PayPal account could not be tokenized.\n */\n\n/**\n * @name BraintreeError.Paypal Checkout - updatePayment Error Codes\n * @description Errors that occur when using the [`updatePayment` method](./PayPalCheckout.html#updatePayment).\n * @property {MERCHANT} PAYPAL_INVALID_PAYMENT_OPTION Occurs when an option contains an invalid value.\n * @property {MERCHANT} PAYPAL_MISSING_REQUIRED_OPTION Occurs when a required option is missing.\n * @property {NETWORK} PAYPAL_FLOW_FAILED Occurs when something goes wrong when initializing the flow or communicating with the server.\n */\nvar BraintreeError = require(\"../lib/braintree-error\");\n\nmodule.exports = {\n  PAYPAL_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_NOT_ENABLED\",\n    message: \"PayPal is not enabled for this merchant.\",\n  },\n  PAYPAL_SANDBOX_ACCOUNT_NOT_LINKED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_SANDBOX_ACCOUNT_NOT_LINKED\",\n    message:\n      \"A linked PayPal Sandbox account is required to use PayPal Checkout in Sandbox. See https://developer.paypal.com/braintree/docs/guides/paypal/testing-go-live#linked-paypal-testing for details on linking your PayPal sandbox with Braintree.\",\n  },\n  PAYPAL_ACCOUNT_TOKENIZATION_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"PAYPAL_ACCOUNT_TOKENIZATION_FAILED\",\n    message: \"Could not tokenize user's PayPal account.\",\n  },\n  PAYPAL_FLOW_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"PAYPAL_FLOW_FAILED\",\n    message: \"Could not initialize PayPal flow.\",\n  },\n  PAYPAL_FLOW_OPTION_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_FLOW_OPTION_REQUIRED\",\n    message: \"PayPal flow property is invalid or missing.\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_SETUP_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_SETUP_FAILED\",\n    message: \"Something went wrong when setting up the checkout workflow.\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED\",\n    message:\n      \"PayPal popup failed to open, make sure to initiate the vault checkout in response to a user action.\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_CANCELED\",\n    message: \"Customer closed PayPal popup before authorizing.\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_IN_PROGRESS: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_IN_PROGRESS\",\n    message: \"Vault initiated checkout already in progress.\",\n  },\n  PAYPAL_INVALID_PAYMENT_OPTION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_INVALID_PAYMENT_OPTION\",\n    message: \"PayPal payment options are invalid.\",\n  },\n  PAYPAL_MISSING_REQUIRED_OPTION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_MISSING_REQUIRED_OPTION\",\n    message: \"Missing required option.\",\n  },\n};\n\n},{\"../lib/braintree-error\":91}],129:[function(require,module,exports){\n\"use strict\";\n/**\n * @module braintree-web/paypal-checkout\n * @description A component to integrate with the [PayPal JS SDK](https://github.com/paypal/paypal-checkout-components).\n */\n\nvar basicComponentVerification = require(\"../lib/basic-component-verification\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar PayPalCheckout = require(\"./paypal-checkout\");\nvar VERSION = \"3.99.0\";\n\n/**\n * @static\n * @function create\n * @description There are two ways to integrate the PayPal Checkout component. See the [PayPal Checkout constructor documentation](PayPalCheckout.html#PayPalCheckout) for more information and examples.\n *\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {string} [options.merchantAccountId] A non-default merchant account ID to use for tokenization.\n * @param {boolean} [options.autoSetDataUserIdToken=false] Whether or not to render the PayPal SDK button with a customer's vaulted PayPal account. Must be used in conjunction with a Client Token generated with a customer id.\n * @param {callback} [callback] The second argument, `data`, is the {@link PayPalCheckout} instance.\n * @example\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   // set up the PayPal JS SDK\n * }).catch(function (err) {\n *   console.error('Error!', err);\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nfunction create(options) {\n  var name = \"PayPal Checkout\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var instance = new PayPalCheckout(options);\n\n      return instance._initialize(options);\n    });\n}\n\n/**\n * @static\n * @function isSupported\n * @description Returns true if PayPal Checkout [supports this browser](index.html#browser-support-webviews).\n * @deprecated Previously, this method checked for Popup support in the browser. The PayPal JS SDK now falls back to a modal if popups are not supported.\n * @returns {Boolean} Returns true if PayPal Checkout supports this browser.\n */\nfunction isSupported() {\n  return true;\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  isSupported: isSupported,\n  /**\n   * @description The current version of the SDK, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n\n},{\"../lib/basic-component-verification\":89,\"./paypal-checkout\":130,\"@braintree/wrap-promise\":47}],130:[function(require,module,exports){\n\"use strict\";\n\nvar analytics = require(\"../lib/analytics\");\nvar assign = require(\"../lib/assign\").assign;\nvar createDeferredClient = require(\"../lib/create-deferred-client\");\nvar createAssetsUrl = require(\"../lib/create-assets-url\");\nvar ExtendedPromise = require(\"@braintree/extended-promise\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar convertToBraintreeError = require(\"../lib/convert-to-braintree-error\");\nvar errors = require(\"./errors\");\nvar constants = require(\"../paypal/shared/constants\");\nvar frameService = require(\"../lib/frame-service/external\");\nvar createAuthorizationData = require(\"../lib/create-authorization-data\");\nvar methods = require(\"../lib/methods\");\nvar useMin = require(\"../lib/use-min\");\nvar convertMethodsToError = require(\"../lib/convert-methods-to-error\");\nvar querystring = require(\"../lib/querystring\");\nvar VERSION = \"3.99.0\";\nvar INTEGRATION_TIMEOUT_MS = require(\"../lib/constants\").INTEGRATION_TIMEOUT_MS;\n\nvar REQUIRED_PARAMS_FOR_START_VAULT_INITIATED_CHECKOUT = [\n  \"amount\",\n  \"currency\",\n  \"vaultInitiatedCheckoutPaymentMethodToken\",\n];\n\nvar PAYPAL_SDK_PRELOAD_URL =\n  \"https://www.{ENV}paypal.com/smart/buttons/preload\";\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\n/**\n * PayPal Checkout tokenized payload. Returned in {@link PayPalCheckout#tokenizePayment}'s callback as the second argument, `data`.\n * @typedef {object} PayPalCheckout~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {string} type The payment method type, always `PayPalAccount`.\n * @property {object} details Additional PayPal account details.\n * @property {string} details.email User's email address.\n * @property {string} details.payerId User's payer ID, the unique identifier for each PayPal account.\n * @property {string} details.firstName User's given name.\n * @property {string} details.lastName User's surname.\n * @property {?string} details.countryCode User's 2 character country code.\n * @property {?string} details.phone User's phone number (e.g. 555-867-5309).\n * @property {?object} details.shippingAddress User's shipping address details, only available if shipping address is enabled.\n * @property {string} details.shippingAddress.recipientName Recipient of postage.\n * @property {string} details.shippingAddress.line1 Street number and name.\n * @property {string} details.shippingAddress.line2 Extended address.\n * @property {string} details.shippingAddress.city City or locality.\n * @property {string} details.shippingAddress.state State or region.\n * @property {string} details.shippingAddress.postalCode Postal code.\n * @property {string} details.shippingAddress.countryCode 2 character country code (e.g. US).\n * @property {?object} details.billingAddress User's billing address details.\n * Not available to all merchants; [contact support](https://developer.paypal.com/braintree/help) for details on eligibility and enabling this feature.\n * Alternatively, see `shippingAddress` above as an available client option.\n * @property {string} details.billingAddress.line1 Street number and name.\n * @property {string} details.billingAddress.line2 Extended address.\n * @property {string} details.billingAddress.city City or locality.\n * @property {string} details.billingAddress.state State or region.\n * @property {string} details.billingAddress.postalCode Postal code.\n * @property {string} details.billingAddress.countryCode 2 character country code (e.g. US).\n * @property {?object} creditFinancingOffered This property will only be present when the customer pays with PayPal Credit.\n * @property {object} creditFinancingOffered.totalCost This is the estimated total payment amount including interest and fees the user will pay during the lifetime of the loan.\n * @property {string} creditFinancingOffered.totalCost.value An amount defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm) for the given currency.\n * @property {string} creditFinancingOffered.totalCost.currency 3 letter currency code as defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm).\n * @property {number} creditFinancingOffered.term Length of financing terms in months.\n * @property {object} creditFinancingOffered.monthlyPayment This is the estimated amount per month that the customer will need to pay including fees and interest.\n * @property {string} creditFinancingOffered.monthlyPayment.value An amount defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm) for the given currency.\n * @property {string} creditFinancingOffered.monthlyPayment.currency 3 letter currency code as defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm).\n * @property {object} creditFinancingOffered.totalInterest Estimated interest or fees amount the payer will have to pay during the lifetime of the loan.\n * @property {string} creditFinancingOffered.totalInterest.value An amount defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm) for the given currency.\n * @property {string} creditFinancingOffered.totalInterest.currency 3 letter currency code as defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm).\n * @property {boolean} creditFinancingOffered.payerAcceptance Status of whether the customer ultimately was approved for and chose to make the payment using the approved installment credit.\n * @property {boolean} creditFinancingOffered.cartAmountImmutable Indicates whether the cart amount is editable after payer's acceptance on PayPal side.\n */\n\n/**\n * @class\n * @param {object} options see {@link module:braintree-web/paypal-checkout.create|paypal-checkout.create}\n * @classdesc This class represents a PayPal Checkout component that coordinates with the {@link https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page|PayPal SDK}. Instances of this class can generate payment data and tokenize authorized payments.\n *\n * All UI (such as preventing actions on the parent page while authentication is in progress) is managed by the {@link https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page|PayPal SDK}. You must provide your PayPal `client-id` as a query parameter. You can [retrieve this value from the PayPal Dashboard](https://developer.paypal.com/docs/checkout/integrate/#1-get-paypal-rest-api-credentials).\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/paypal-checkout.create|braintree-web.paypal-checkout.create} instead.</strong>\n *\n * #### Integrate Checkout Flow with PayPal SDK\n *\n * You must have [PayPal's script, configured with various query parameters](https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page), loaded on your page:\n *\n * ```html\n * <script src=\"https://www.paypal.com/sdk/js?client-id=your-sandbox-or-prod-client-id\"></script>\n * <div id=\"paypal-button\"></div>\n * ```\n *\n * When passing values in the `createPayment` method, make sure they match the [corresponding parameters in the query parameters for the PayPal SDK script](https://developer.paypal.com/docs/checkout/reference/customize-sdk/).\n *\n * ```javascript\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   return paypal.Buttons({\n *     createOrder: function () {\n *       return paypalCheckoutInstance.createPayment({\n *         flow: 'checkout',\n *         currency: 'USD',\n *         amount: '10.00',\n *         intent: 'capture' // this value must either be `capture` or match the intent passed into the PayPal SDK intent query parameter\n *         // your other createPayment options here\n *       });\n *     },\n *\n *     onApprove: function (data, actions) {\n *       // some logic here before tokenization happens below\n *       return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n *         // Submit payload.nonce to your server\n *       });\n *     },\n *\n *     onCancel: function () {\n *       // handle case where user cancels\n *     },\n *\n *     onError: function (err) {\n *       // handle case where error occurs\n *     }\n *   }).render('#paypal-button');\n * }).catch(function (err) {\n *  console.error('Error!', err);\n * });\n * ```\n *\n * #### Integrate Vault Flow with PayPal SDK\n *\n * You must have [PayPal's script, configured with various query parameters](https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page), loaded on your page:\n *\n * ```html\n * <script src=\"https://www.paypal.com/sdk/js?client-id=your-sandbox-or-prod-client-id&vault=true\"></script>\n * <div id=\"paypal-button\"></div>\n * ```\n *\n * When passing values in the `createPayment` method, make sure they match the [corresponding parameters in the query parameters for the PayPal SDK script](https://developer.paypal.com/docs/checkout/reference/customize-sdk/).\n *\n * ```javascript\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   return paypal.Buttons({\n *     createBillingAgreement: function () {\n *       return paypalCheckoutInstance.createPayment({\n *         flow: 'vault'\n *         // your other createPayment options here\n *       });\n *     },\n *\n *     onApprove: function (data, actions) {\n *       // some logic here before tokenization happens below\n *       return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n *         // Submit payload.nonce to your server\n *       });\n *     },\n *\n *     onCancel: function () {\n *       // handle case where user cancels\n *     },\n *\n *     onError: function (err) {\n *       // handle case where error occurs\n *     }\n *   }).render('#paypal-button');\n * }).catch(function (err) {\n *  console.error('Error!', err);\n * });\n * ```\n *\n * #### Integrate with Checkout.js (deprecated PayPal SDK)\n *\n * If you are creating a new PayPal integration, please follow the previous integration guide to use the current version of the PayPal SDK. Use this integration guide only as a reference if you are already integrated with Checkout.js.\n *\n * You must have PayPal's Checkout.js script loaded on your page.\n *\n * ```html\n * <script src=\"https://www.paypalobjects.com/api/checkout.js\" data-version-4 log-level=\"warn\"></script>\n * ```\n *\n * ```javascript\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   return paypal.Button.render({\n *     env: 'production', // or 'sandbox'\n *\n *     payment: function () {\n *       return paypalCheckoutInstance.createPayment({\n *         // your createPayment options here\n *       });\n *     },\n *\n *     onAuthorize: function (data, actions) {\n *       // some logic here before tokenization happens below\n *       return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n *         // Submit payload.nonce to your server\n *       });\n *     }\n *   }, '#paypal-button');\n * }).catch(function (err) {\n *  console.error('Error!', err);\n * });\n * ```\n */\nfunction PayPalCheckout(options) {\n  this._merchantAccountId = options.merchantAccountId;\n  // TODO remove this requirement for it to be opt in.\n  // This feature is not yet GA, so we're intentionally making\n  // it opt in and not publicly documenting it yet. Once it's\n  // GA, we can remove the requirement to opt in to it\n  this._autoSetDataUserIdToken = Boolean(options.autoSetDataUserIdToken);\n}\n\nPayPalCheckout.prototype._initialize = function (options) {\n  var config;\n\n  if (options.client) {\n    config = options.client.getConfiguration();\n    this._authorizationInformation = {\n      fingerprint: config.authorizationFingerprint,\n      environment: config.gatewayConfiguration.environment,\n    };\n  } else {\n    config = createAuthorizationData(options.authorization);\n    this._authorizationInformation = {\n      fingerprint: config.attrs.authorizationFingerprint,\n      environment: config.environment,\n    };\n  }\n\n  this._clientPromise = createDeferredClient\n    .create({\n      authorization: options.authorization,\n      client: options.client,\n      debug: options.debug,\n      assetsUrl: createAssetsUrl.create(options.authorization),\n      name: \"PayPal Checkout\",\n    })\n    .then(\n      function (client) {\n        this._configuration = client.getConfiguration();\n\n        // we skip these checks if a merchant account id is\n        // passed in, because the default merchant account\n        // may not have paypal enabled\n        if (!this._merchantAccountId) {\n          if (!this._configuration.gatewayConfiguration.paypalEnabled) {\n            this._setupError = new BraintreeError(errors.PAYPAL_NOT_ENABLED);\n          } else if (\n            this._configuration.gatewayConfiguration.paypal\n              .environmentNoNetwork === true\n          ) {\n            this._setupError = new BraintreeError(\n              errors.PAYPAL_SANDBOX_ACCOUNT_NOT_LINKED\n            );\n          }\n        }\n\n        if (this._setupError) {\n          return Promise.reject(this._setupError);\n        }\n\n        analytics.sendEvent(client, \"paypal-checkout.initialized\");\n        this._frameServicePromise = this._setupFrameService(client);\n\n        return client;\n      }.bind(this)\n    );\n\n  // if client was passed in, let config checks happen before\n  // resolving the instance. Otherwise, just resolve the instance\n  if (options.client) {\n    return this._clientPromise.then(\n      function () {\n        return this;\n      }.bind(this)\n    );\n  }\n\n  return Promise.resolve(this);\n};\n\nPayPalCheckout.prototype._setupFrameService = function (client) {\n  var frameServicePromise = new ExtendedPromise();\n  var config = client.getConfiguration();\n  var timeoutRef = setTimeout(function () {\n    analytics.sendEvent(client, \"paypal-checkout.frame-service.timed-out\");\n    frameServicePromise.reject(\n      new BraintreeError(\n        errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_SETUP_FAILED\n      )\n    );\n  }, INTEGRATION_TIMEOUT_MS);\n\n  this._assetsUrl =\n    config.gatewayConfiguration.paypal.assetsUrl + \"/web/\" + VERSION;\n  this._isDebug = config.isDebug;\n  // Note: this is using the static landing frame that the deprecated PayPal component builds and uses\n  this._loadingFrameUrl =\n    this._assetsUrl +\n    \"/html/paypal-landing-frame\" +\n    useMin(this._isDebug) +\n    \".html\";\n\n  frameService.create(\n    {\n      name: \"braintreepaypallanding\",\n      dispatchFrameUrl:\n        this._assetsUrl +\n        \"/html/dispatch-frame\" +\n        useMin(this._isDebug) +\n        \".html\",\n      openFrameUrl: this._loadingFrameUrl,\n    },\n    function (service) {\n      this._frameService = service;\n      clearTimeout(timeoutRef);\n\n      frameServicePromise.resolve();\n    }.bind(this)\n  );\n\n  return frameServicePromise;\n};\n\n/**\n * @typedef {object} PayPalCheckout~lineItem\n * @property {string} quantity Number of units of the item purchased. This value must be a whole number and can't be negative or zero.\n * @property {string} unitAmount Per-unit price of the item. Can include up to 2 decimal places. This value can't be negative or zero.\n * @property {string} name Item name. Maximum 127 characters.\n * @property {string} kind Indicates whether the line item is a debit (sale) or credit (refund) to the customer. Accepted values: `debit` and `credit`.\n * @property {?string} unitTaxAmount Per-unit tax price of the item. Can include up to 2 decimal places. This value can't be negative or zero.\n * @property {?string} description Item description. Maximum 127 characters.\n * @property {?string} productCode Product or UPC code for the item. Maximum 127 characters.\n * @property {?string} url The URL to product information.\n */\n\n/**\n * @typedef {object} PayPalCheckout~shippingOption\n * @property {string} id A unique ID that identifies a payer-selected shipping option.\n * @property {string} label A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this description to the payer's locale.\n * @property {boolean} selected If `selected = true` is specified as part of the API request it represents the shipping option that the payee/merchant expects to be pre-selected for the payer when they first view the shipping options within the PayPal checkout experience. As part of the response if a shipping option has `selected = true` it represents the shipping option that the payer selected during the course of checkout with PayPal. Only 1 `shippingOption` can be set to `selected = true`.\n * @property {string} type The method by which the payer wants to get their items. The possible values are:\n * * `SHIPPING` - The payer intends to receive the items at a specified address.\n * * `PICKUP` - The payer intends to pick up the items at a specified address. For example, a store address.\n * @property {object} amount The shipping cost for the selected option.\n * @property {string} amount.currency The three-character ISO-4217 currency code. PayPal does not support all currencies.\n * @property {string} amount.value The amount the shipping option will cost. Includes the specified number of digits after decimal separator for the ISO-4217 currency code.\n */\n\n/**\n * Creates a PayPal payment ID or billing token using the given options. This is meant to be passed to the PayPal JS SDK.\n * When a {@link callback} is defined, the function returns undefined and invokes the callback with the id to be used with the PayPal JS SDK. Otherwise, it returns a Promise that resolves with the id.\n * @public\n * @param {object} options All options for the PayPalCheckout component.\n * @param {string} options.flow Set to 'checkout' for one-time payment flow, or 'vault' for Vault flow. If 'vault' is used with a client token generated with a customer ID, the PayPal account will be added to that customer as a saved payment method.\n * @param {string} [options.intent=authorize]\n * * `authorize` - Submits the transaction for authorization but not settlement.\n * * `order` - Validates the transaction without an authorization (i.e. without holding funds). Useful for authorizing and capturing funds up to 90 days after the order has been placed. Only available for Checkout flow.\n * * `capture` - Payment will be immediately submitted for settlement upon creating a transaction. `sale` can be used as an alias for this value.\n * @param {boolean} [options.offerCredit=false] Offers PayPal Credit as the default funding instrument for the transaction. If the customer isn't pre-approved for PayPal Credit, they will be prompted to apply for it.\n * @param {(string|number)} [options.amount] The amount of the transaction. Required when using the Checkout flow. Should not include shipping cost.\n * * Supports up to 2 digits after the decimal point\n * @param {string} [options.currency] The currency code of the amount, such as 'USD'. Required when using the Checkout flow.\n * @param {string} [options.displayName] The merchant name displayed inside of the PayPal lightbox; defaults to the company name on your Braintree account\n * @param {boolean} [options.requestBillingAgreement] If `true` and `flow = checkout`, the customer will be prompted to consent to a billing agreement during the checkout flow. This value is ignored when `flow = vault`.\n * @param {object} [options.billingAgreementDetails] When `requestBillingAgreement = true`, allows for details to be set for the billing agreement portion of the flow.\n * @param {string} [options.billingAgreementDetails.description] Description of the billing agreement to display to the customer.\n * @param {string} [options.vaultInitiatedCheckoutPaymentMethodToken] Use the payment method nonce representing a PayPal account with a Billing Agreement ID to create the payment and redirect the customer to select a new financial instrument. This option is only applicable to the `checkout` flow.\n * @param {shippingOption[]} [options.shippingOptions] List of shipping options offered by the payee or merchant to the payer to ship or pick up their items.\n * @param {boolean} [options.enableShippingAddress=false] Returns a shipping address object in {@link PayPal#tokenize}.\n * @param {object} [options.shippingAddressOverride] Allows you to pass a shipping address you have already collected into the PayPal payment flow.\n * @param {string} options.shippingAddressOverride.line1 Street address.\n * @param {string} [options.shippingAddressOverride.line2] Street address (extended).\n * @param {string} options.shippingAddressOverride.city City.\n * @param {string} options.shippingAddressOverride.state State.\n * @param {string} options.shippingAddressOverride.postalCode Postal code.\n * @param {string} options.shippingAddressOverride.countryCode Country.\n * @param {string} [options.shippingAddressOverride.phone] Phone number.\n * @param {string} [options.shippingAddressOverride.recipientName] Recipient's name.\n * @param {boolean} [options.shippingAddressEditable=true] Set to false to disable user editing of the shipping address.\n * @param {string} [options.billingAgreementDescription] Use this option to set the description of the preapproved payment agreement visible to customers in their PayPal profile during Vault flows. Max 255 characters.\n * @param {string} [options.landingPageType] Use this option to specify the PayPal page to display when a user lands on the PayPal site to complete the payment.\n * * `login` - A PayPal account login page is used.\n * * `billing` - A non-PayPal account landing page is used.\n * @param {lineItem[]} [options.lineItems] The {@link PayPalCheckout~lineItem|line items} for this transaction. It can include up to 249 line items.\n * @param {callback} [callback] The second argument is a PayPal `paymentId` or `billingToken` string, depending on whether `options.flow` is `checkout` or `vault`. This is also what is resolved by the promise if no callback is provided.\n * @example\n * // this paypal object is created by the PayPal JS SDK\n * // see https://github.com/paypal/paypal-checkout-components\n * paypal.Buttons({\n *   createOrder: function () {\n *     // when createPayment resolves, it is automatically passed to the PayPal JS SDK\n *     return paypalCheckoutInstance.createPayment({\n *       flow: 'checkout',\n *       amount: '10.00',\n *       currency: 'USD',\n *       intent: 'capture' // this value must either be `capture` or match the intent passed into the PayPal SDK intent query parameter\n *     });\n *   },\n *   // Add other options, e.g. onApproved, onCancel, onError\n * }).render('#paypal-button');\n *\n * @example\n * // shippingOptions are passed to createPayment. You can review the result from onAuthorize to determine which shipping option id was selected.\n * ```javascript\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   return paypal.Button.render({\n *     env: 'production'\n *\n *     payment: function () {\n *       return paypalCheckoutInstance.createPayment({\n *         flow: 'checkout',\n *         amount: '10.00',\n *         currency: 'USD',\n *         shippingOptions: [\n *           {\n *             id: 'UUID-9',\n *             type: 'PICKUP',\n *             label: 'Store Location Five',\n *             selected: true,\n *             amount: {\n *               value: '1.00',\n *               currency: 'USD'\n *             }\n *           },\n *           {\n *             id: 'shipping-speed-fast',\n *             type: 'SHIPPING',\n *             label: 'Fast Shipping',\n *             selected: false,\n *             amount: {\n *               value: '1.00',\n *               currency: 'USD'\n *             }\n *           },\n *           {\n *             id: 'shipping-speed-slow',\n *             type: 'SHIPPING',\n *             label: 'Slow Shipping',\n *             selected: false,\n *             amount: {\n *               value: '1.00',\n *               currency: 'USD'\n *             }\n *           }\n *         ]\n *       });\n *     },\n *\n *     onAuthorize: function (data, actions) {\n *       return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n *         // Submit payload.nonce to your server\n *       });\n *     }\n *   }, '#paypal-button');\n * }).catch(function (err) {\n *  console.error('Error!', err);\n * });\n * ```\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.createPayment = function (options) {\n  if (!options || !constants.FLOW_ENDPOINTS.hasOwnProperty(options.flow)) {\n    return Promise.reject(\n      new BraintreeError(errors.PAYPAL_FLOW_OPTION_REQUIRED)\n    );\n  }\n\n  analytics.sendEvent(this._clientPromise, \"paypal-checkout.createPayment\");\n\n  return this._createPaymentResource(options).then(function (response) {\n    var flowToken, urlParams;\n\n    if (options.flow === \"checkout\") {\n      urlParams = querystring.parse(response.paymentResource.redirectUrl);\n      flowToken = urlParams.token;\n    } else {\n      flowToken = response.agreementSetup.tokenId;\n    }\n\n    return flowToken;\n  });\n};\n\nPayPalCheckout.prototype._createPaymentResource = function (options, config) {\n  var self = this;\n  var endpoint = \"paypal_hermes/\" + constants.FLOW_ENDPOINTS[options.flow];\n\n  delete this.intentFromCreatePayment;\n\n  config = config || {};\n\n  if (options.offerCredit === true) {\n    analytics.sendEvent(this._clientPromise, \"paypal-checkout.credit.offered\");\n  }\n\n  return this._clientPromise\n    .then(function (client) {\n      return client\n        .request({\n          endpoint: endpoint,\n          method: \"post\",\n          data: self._formatPaymentResourceData(options, config),\n        })\n        .then(function (data) {\n          self.intentFromCreatePayment = options.intent;\n\n          return data;\n        });\n    })\n    .catch(function (err) {\n      var status;\n\n      if (self._setupError) {\n        return Promise.reject(self._setupError);\n      }\n\n      status = err.details && err.details.httpStatus;\n\n      if (status === 422) {\n        return Promise.reject(\n          new BraintreeError({\n            type: errors.PAYPAL_INVALID_PAYMENT_OPTION.type,\n            code: errors.PAYPAL_INVALID_PAYMENT_OPTION.code,\n            message: errors.PAYPAL_INVALID_PAYMENT_OPTION.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      }\n\n      return Promise.reject(\n        convertToBraintreeError(err, {\n          type: errors.PAYPAL_FLOW_FAILED.type,\n          code: errors.PAYPAL_FLOW_FAILED.code,\n          message: errors.PAYPAL_FLOW_FAILED.message,\n        })\n      );\n    });\n};\n\n/**\n * Use this function to update {@link PayPalCheckout~lineItem|line items} and/or {@link PayPalCheckout~shippingOption|shipping options} associated with a PayPalCheckout flow (`paymentId`).\n * When a {@link callback} is defined, this function returns undefined and invokes the callback. The second callback argument, <code>data</code>, is the returned server data. If no callback is provided, `updatePayment` returns a promise that resolves with the server data.\n * @public\n * @param {object} options All options for the PayPalCheckout component.\n * @param {string} options.paymentId This should be PayPal `paymentId`.\n * @param {(string|number)} options.amount The amount of the transaction, including the amount of the selected shipping option, and all `line_items`.\n * * Supports up to 2 decimal digits.\n * @param {string} options.currency The currency code of the amount, such as 'USD'. Required when using the Checkout flow.\n * @param {shippingOption[]} [options.shippingOptions] List of {@link PayPalCheckout~shippingOption|shipping options} offered by the payee or merchant to the payer to ship or pick up their items.\n * @param {lineItem[]} [options.lineItems] The {@link PayPalCheckout~lineItem|line items} for this transaction. It can include up to 249 line items.\n * @param {callback} [callback] The second argument is a PayPal `paymentId` or `billingToken` string, depending on whether `options.flow` is `checkout` or `vault`. This is also what is resolved by the promise if no callback is provided.\n * @example\n * // this paypal object is created by the PayPal JS SDK\n * // see https://github.com/paypal/paypal-checkout-components\n * paypal.Buttons({\n *   createOrder: function () {\n *     // when createPayment resolves, it is automatically passed to the PayPal JS SDK\n *     return paypalCheckoutInstance.createPayment({\n *       //\n *     });\n *   },\n *   onShippingChange: function (data) {\n *     // Examine data and determine if the payment needs to be updated.\n *     // when updatePayment resolves, it is automatically passed to the PayPal JS SDK\n *     return paypalCheckoutInstance.updatePayment({\n *         paymentId: data.paymentId,\n *         amount: '15.00',\n *         currency: 'USD',\n *         shippingOptions: [\n *           {\n *             id: 'shipping-speed-fast',\n *             type: 'SHIPPING',\n *             label: 'Fast Shipping',\n *             selected: true,\n *             amount: {\n *               value: '5.00',\n *               currency: 'USD'\n *             }\n *           },\n *           {\n *             id: 'shipping-speed-slow',\n *             type: 'SHIPPING',\n *             label: 'Slow Shipping',\n *             selected: false,\n *             amount: {\n *               value: '1.00',\n *               currency: 'USD'\n *             }\n *           }\n *         ]\n *     });\n *   }\n *   // Add other options, e.g. onApproved, onCancel, onError\n * }).render('#paypal-button');\n *\n * ```\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.updatePayment = function (options) {\n  var self = this;\n  var endpoint = \"paypal_hermes/patch_payment_resource\";\n\n  if (!options || this._hasMissingOption(options, constants.REQUIRED_OPTIONS)) {\n    analytics.sendEvent(\n      self._clientPromise,\n      \"paypal-checkout.updatePayment.missing-options\"\n    );\n\n    return Promise.reject(\n      new BraintreeError(errors.PAYPAL_MISSING_REQUIRED_OPTION)\n    );\n  }\n\n  if (!this._verifyConsistentCurrency(options)) {\n    analytics.sendEvent(\n      self._clientPromise,\n      \"paypal-checkout.updatePayment.inconsistent-currencies\"\n    );\n\n    return Promise.reject(\n      new BraintreeError({\n        type: errors.PAYPAL_INVALID_PAYMENT_OPTION.type,\n        code: errors.PAYPAL_INVALID_PAYMENT_OPTION.code,\n        message: errors.PAYPAL_INVALID_PAYMENT_OPTION.message,\n        details: {\n          originalError: new Error(\n            \"One or more shipping option currencies differ from checkout currency.\"\n          ),\n        },\n      })\n    );\n  }\n\n  analytics.sendEvent(this._clientPromise, \"paypal-checkout.updatePayment\");\n\n  return this._clientPromise\n    .then(function (client) {\n      return client.request({\n        endpoint: endpoint,\n        method: \"post\",\n        data: self._formatUpdatePaymentData(options),\n      });\n    })\n    .catch(function (err) {\n      var status = err.details && err.details.httpStatus;\n\n      if (status === 422) {\n        analytics.sendEvent(\n          self._clientPromise,\n          \"paypal-checkout.updatePayment.invalid\"\n        );\n\n        return Promise.reject(\n          new BraintreeError({\n            type: errors.PAYPAL_INVALID_PAYMENT_OPTION.type,\n            code: errors.PAYPAL_INVALID_PAYMENT_OPTION.code,\n            message: errors.PAYPAL_INVALID_PAYMENT_OPTION.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      }\n\n      analytics.sendEvent(\n        self._clientPromise,\n        \"paypal-checkout.updatePayment.\" + errors.PAYPAL_FLOW_FAILED.code\n      );\n\n      return Promise.reject(\n        convertToBraintreeError(err, {\n          type: errors.PAYPAL_FLOW_FAILED.type,\n          code: errors.PAYPAL_FLOW_FAILED.code,\n          message: errors.PAYPAL_FLOW_FAILED.message,\n        })\n      );\n    });\n};\n\n/**\n * Initializes the PayPal checkout flow with a payment method nonce that represents a vaulted PayPal account.\n * When a {@link callback} is defined, the function returns undefined and invokes the callback with the id to be used with the PayPal JS SDK. Otherwise, it returns a Promise that resolves with the id.\n * @public\n * @ignore\n * @param {object} options These options are identical to the {@link PayPalCheckout#createPayment|options for creating a payment resource}, except for the following:\n * * `flow` cannot be set (will always be `'checkout'`)\n * * `amount`, `currency`, and `vaultInitiatedCheckoutPaymentMethodToken` are required instead of optional\n * * Additional configuration is available (listed below)\n * @param {boolean} [options.optOutOfModalBackdrop=false] By default, the webpage will darken and become unusable while the PayPal window is open. For full control of the UI, pass `true` for this option.\n * @param {callback} [callback] The second argument, <code>payload</code>, is a {@link PayPalCheckout~tokenizePayload|tokenizePayload}. If no callback is provided, the promise resolves with a {@link PayPalCheckout~tokenizePayload|tokenizePayload}.\n * @example\n * paypalCheckoutInstance.startVaultInitiatedCheckout({\n *   vaultInitiatedCheckoutPaymentMethodToken: 'nonce-that-represents-a-vaulted-paypal-account',\n *   amount: '10.00',\n *   currency: 'USD'\n * }).then(function (payload) {\n *   // send payload.nonce to your server\n * }).catch(function (err) {\n *   if (err.code === 'PAYPAL_POPUP_CLOSED') {\n *     // indicates that customer canceled by\n *     // manually closing the PayPal popup\n *   }\n *\n *   // handle other errors\n * });\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.startVaultInitiatedCheckout = function (options) {\n  var missingRequiredParam;\n  var self = this;\n\n  if (this._vaultInitiatedCheckoutInProgress) {\n    analytics.sendEvent(\n      this._clientPromise,\n      \"paypal-checkout.startVaultInitiatedCheckout.error.already-in-progress\"\n    );\n\n    return Promise.reject(\n      new BraintreeError(\n        errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_IN_PROGRESS\n      )\n    );\n  }\n\n  REQUIRED_PARAMS_FOR_START_VAULT_INITIATED_CHECKOUT.forEach(function (param) {\n    if (!options.hasOwnProperty(param)) {\n      missingRequiredParam = param;\n    }\n  });\n\n  if (missingRequiredParam) {\n    return Promise.reject(\n      new BraintreeError({\n        type: errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED.type,\n        code: errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED.code,\n        message: \"Required param \" + missingRequiredParam + \" is missing.\",\n      })\n    );\n  }\n\n  this._vaultInitiatedCheckoutInProgress = true;\n  this._addModalBackdrop(options);\n\n  options = assign({}, options, {\n    flow: \"checkout\",\n  });\n\n  analytics.sendEvent(\n    this._clientPromise,\n    \"paypal-checkout.startVaultInitiatedCheckout.started\"\n  );\n\n  return this._waitForVaultInitiatedCheckoutDependencies()\n    .then(function () {\n      var frameCommunicationPromise = new ExtendedPromise();\n      var startVaultInitiatedCheckoutPromise = self\n        ._createPaymentResource(options, {\n          returnUrl: self._constructVaultCheckutUrl(\"redirect-frame\"),\n          cancelUrl: self._constructVaultCheckutUrl(\"cancel-frame\"),\n        })\n        .then(function (response) {\n          var redirectUrl = response.paymentResource.redirectUrl;\n\n          self._frameService.redirect(redirectUrl);\n\n          return frameCommunicationPromise;\n        });\n\n      self._frameService.open(\n        {},\n        self._createFrameServiceCallback(frameCommunicationPromise)\n      );\n\n      return startVaultInitiatedCheckoutPromise;\n    })\n    .catch(function (err) {\n      self._vaultInitiatedCheckoutInProgress = false;\n      self._removeModalBackdrop();\n\n      if (err.code === \"FRAME_SERVICE_FRAME_CLOSED\") {\n        analytics.sendEvent(\n          self._clientPromise,\n          \"paypal-checkout.startVaultInitiatedCheckout.canceled.by-customer\"\n        );\n\n        return Promise.reject(\n          new BraintreeError(\n            errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_CANCELED\n          )\n        );\n      }\n\n      if (self._frameService) {\n        self._frameService.close();\n      }\n\n      if (\n        err.code &&\n        err.code.indexOf(\"FRAME_SERVICE_FRAME_OPEN_FAILED\") > -1\n      ) {\n        analytics.sendEvent(\n          self._clientPromise,\n          \"paypal-checkout.startVaultInitiatedCheckout.failed.popup-not-opened\"\n        );\n\n        return Promise.reject(\n          new BraintreeError({\n            code: errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED\n              .code,\n            type: errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED\n              .type,\n            message:\n              errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED\n                .message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      }\n\n      return Promise.reject(err);\n    })\n    .then(function (response) {\n      self._frameService.close();\n      self._vaultInitiatedCheckoutInProgress = false;\n      self._removeModalBackdrop();\n      analytics.sendEvent(\n        self._clientPromise,\n        \"paypal-checkout.startVaultInitiatedCheckout.succeeded\"\n      );\n\n      return Promise.resolve(response);\n    });\n};\n\nPayPalCheckout.prototype._addModalBackdrop = function (options) {\n  if (options.optOutOfModalBackdrop) {\n    return;\n  }\n\n  if (!this._modalBackdrop) {\n    this._modalBackdrop = document.createElement(\"div\");\n    this._modalBackdrop.setAttribute(\n      \"data-braintree-paypal-vault-initiated-checkout-modal\",\n      true\n    );\n    this._modalBackdrop.style.position = \"fixed\";\n    this._modalBackdrop.style.top = 0;\n    this._modalBackdrop.style.bottom = 0;\n    this._modalBackdrop.style.left = 0;\n    this._modalBackdrop.style.right = 0;\n    this._modalBackdrop.style.zIndex = 9999;\n    this._modalBackdrop.style.background = \"black\";\n    this._modalBackdrop.style.opacity = \"0.7\";\n    this._modalBackdrop.addEventListener(\n      \"click\",\n      function () {\n        this.focusVaultInitiatedCheckoutWindow();\n      }.bind(this)\n    );\n  }\n\n  document.body.appendChild(this._modalBackdrop);\n};\n\nPayPalCheckout.prototype._removeModalBackdrop = function () {\n  if (!(this._modalBackdrop && this._modalBackdrop.parentNode)) {\n    return;\n  }\n\n  this._modalBackdrop.parentNode.removeChild(this._modalBackdrop);\n};\n\n/**\n * Closes the PayPal window if it is opened via `startVaultInitiatedCheckout`.\n * @public\n * @ignore\n * @param {callback} [callback] Gets called when window is closed.\n * @example\n * paypalCheckoutInstance.closeVaultInitiatedCheckoutWindow();\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.closeVaultInitiatedCheckoutWindow = function () {\n  if (this._vaultInitiatedCheckoutInProgress) {\n    analytics.sendEvent(\n      this._clientPromise,\n      \"paypal-checkout.startVaultInitiatedCheckout.canceled.by-merchant\"\n    );\n  }\n\n  return this._waitForVaultInitiatedCheckoutDependencies().then(\n    function () {\n      this._frameService.close();\n    }.bind(this)\n  );\n};\n\n/**\n * Focuses the PayPal window if it is opened via `startVaultInitiatedCheckout`.\n * @public\n * @ignore\n * @param {callback} [callback] Gets called when window is focused.\n * @example\n * paypalCheckoutInstance.focusVaultInitiatedCheckoutWindow();\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.focusVaultInitiatedCheckoutWindow = function () {\n  return this._waitForVaultInitiatedCheckoutDependencies().then(\n    function () {\n      this._frameService.focus();\n    }.bind(this)\n  );\n};\n\nPayPalCheckout.prototype._createFrameServiceCallback = function (\n  frameCommunicationPromise\n) {\n  var self = this;\n\n  // TODO when a merchant integrates an iOS or Android integration\n  // with a webview using the web SDK, we will have to add popupbridge\n  // support\n  return function (err, payload) {\n    if (err) {\n      frameCommunicationPromise.reject(err);\n    } else if (payload) {\n      self._frameService.redirect(self._loadingFrameUrl);\n      self\n        .tokenizePayment({\n          paymentToken: payload.token,\n          payerID: payload.PayerID,\n          paymentID: payload.paymentId,\n          orderID: payload.orderId,\n        })\n        .then(function (res) {\n          frameCommunicationPromise.resolve(res);\n        })\n        .catch(function (tokenizationError) {\n          frameCommunicationPromise.reject(tokenizationError);\n        });\n    }\n  };\n};\n\nPayPalCheckout.prototype._waitForVaultInitiatedCheckoutDependencies =\n  function () {\n    var self = this;\n\n    return this._clientPromise.then(function () {\n      return self._frameServicePromise;\n    });\n  };\n\nPayPalCheckout.prototype._constructVaultCheckutUrl = function (frameName) {\n  var serviceId = this._frameService._serviceId;\n\n  return (\n    this._assetsUrl +\n    \"/html/\" +\n    frameName +\n    useMin(this._isDebug) +\n    \".html?channel=\" +\n    serviceId\n  );\n};\n\n/**\n * Tokenizes the authorize data from the PayPal JS SDK when completing a buyer approval flow.\n * When a {@link callback} is defined, invokes the callback with {@link PayPalCheckout~tokenizePayload|tokenizePayload} and returns undefined. Otherwise, returns a Promise that resolves with a {@link PayPalCheckout~tokenizePayload|tokenizePayload}.\n * @public\n * @param {object} tokenizeOptions Tokens and IDs required to tokenize the payment.\n * @param {string} tokenizeOptions.payerId Payer ID returned by PayPal `onApproved` callback.\n * @param {string} [tokenizeOptions.paymentId] Payment ID returned by PayPal `onApproved` callback.\n * @param {string} [tokenizeOptions.billingToken] Billing Token returned by PayPal `onApproved` callback.\n * @param {boolean} [tokenizeOptions.vault=true] Whether or not to vault the resulting PayPal account (if using a client token generated with a customer id and the vault flow).\n * @param {callback} [callback] The second argument, <code>payload</code>, is a {@link PayPalCheckout~tokenizePayload|tokenizePayload}. If no callback is provided, the promise resolves with a {@link PayPalCheckout~tokenizePayload|tokenizePayload}.\n * @example <caption>Opt out of auto-vaulting behavior</caption>\n * // create the paypalCheckoutInstance with a client token generated with a customer id\n * paypal.Buttons({\n *   createBillingAgreement: function () {\n *     return paypalCheckoutInstance.createPayment({\n *       flow: 'vault'\n *       // your other createPayment options here\n *     });\n *   },\n *   onApproved: function (data) {\n *     data.vault = false;\n *\n *     return paypalCheckoutInstance.tokenizePayment(data);\n *   },\n *   // Add other options, e.g. onCancel, onError\n * }).render('#paypal-button');\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.tokenizePayment = function (tokenizeOptions) {\n  var self = this;\n  var shouldVault = true;\n  var payload;\n  var options = {\n    flow:\n      tokenizeOptions.billingToken && !tokenizeOptions.paymentID\n        ? \"vault\"\n        : \"checkout\",\n    intent: tokenizeOptions.intent || this.intentFromCreatePayment,\n  };\n  var params = {\n    // The paymentToken provided by the PayPal JS SDK is the EC Token\n    ecToken: tokenizeOptions.paymentToken,\n    billingToken: tokenizeOptions.billingToken,\n    payerId: tokenizeOptions.payerID,\n    paymentId: tokenizeOptions.paymentID,\n    orderId: tokenizeOptions.orderID,\n    shippingOptionsId: tokenizeOptions.shippingOptionsId,\n  };\n\n  if (tokenizeOptions.hasOwnProperty(\"vault\")) {\n    shouldVault = tokenizeOptions.vault;\n  }\n\n  options.vault = shouldVault;\n\n  analytics.sendEvent(\n    this._clientPromise,\n    \"paypal-checkout.tokenization.started\"\n  );\n\n  return this._clientPromise\n    .then(function (client) {\n      return client.request({\n        endpoint: \"payment_methods/paypal_accounts\",\n        method: \"post\",\n        data: self._formatTokenizeData(options, params),\n      });\n    })\n    .then(function (response) {\n      payload = self._formatTokenizePayload(response);\n\n      analytics.sendEvent(\n        self._clientPromise,\n        \"paypal-checkout.tokenization.success\"\n      );\n      if (payload.creditFinancingOffered) {\n        analytics.sendEvent(\n          self._clientPromise,\n          \"paypal-checkout.credit.accepted\"\n        );\n      }\n\n      return payload;\n    })\n    .catch(function (err) {\n      if (self._setupError) {\n        return Promise.reject(self._setupError);\n      }\n\n      analytics.sendEvent(\n        self._clientPromise,\n        \"paypal-checkout.tokenization.failed\"\n      );\n\n      return Promise.reject(\n        convertToBraintreeError(err, {\n          type: errors.PAYPAL_ACCOUNT_TOKENIZATION_FAILED.type,\n          code: errors.PAYPAL_ACCOUNT_TOKENIZATION_FAILED.code,\n          message: errors.PAYPAL_ACCOUNT_TOKENIZATION_FAILED.message,\n        })\n      );\n    });\n};\n\n/**\n * Resolves with the PayPal client id to be used when loading the PayPal SDK.\n * @public\n * @param {callback} [callback] The second argument, <code>id</code>, is a the PayPal client id. If no callback is provided, the promise resolves with the PayPal client id.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * paypalCheckoutInstance.getClientId().then(function (id) {\n *  var script = document.createElement('script');\n *\n *  script.src = 'https://www.paypal.com/sdk/js?client-id=' + id;\n *  script.onload = function () {\n *    // setup the PayPal SDK\n *  };\n *\n *  document.body.appendChild(script);\n * });\n */\nPayPalCheckout.prototype.getClientId = function () {\n  return this._clientPromise.then(function (client) {\n    return client.getConfiguration().gatewayConfiguration.paypal.clientId;\n  });\n};\n\n/**\n * Resolves when the PayPal SDK has been successfully loaded onto the page.\n * @public\n * @param {object} [options] A configuration object to modify the query params and data-attributes on the PayPal SDK. A subset of the parameters are listed below. For a full list of query params, see the [PayPal docs](https://developer.paypal.com/docs/checkout/reference/customize-sdk/?mark=query#query-parameters).\n * @param {string} [options.client-id] By default, this will be the client id associated with the authorization used to create the Braintree component. When used in conjunction with passing `authorization` when creating the PayPal Checkout component, you can speed up the loading of the PayPal SDK.\n * @param {string} [options.intent=\"authorize\"] By default, the PayPal SDK defaults to an intent of `capture`. Since the default intent when calling {@link PayPalCheckout#createPayment|`createPayment`} is `authorize`, the PayPal SDK will be loaded with `intent=authorize`. If you wish to use a different intent when calling {@link PayPalCheckout#createPayment|`createPayment`}, make sure it matches here. If `sale` is used, it will be converted to `capture` for the PayPal SDK. If the `vault: true` param is used, `tokenize` will be passed as the default intent.\n * @param {string} [options.locale=en_US] Use this option to change the language, links, and terminology used in the PayPal flow. This locale will be used unless the buyer has set a preferred locale for their account. If an unsupported locale is supplied, a fallback locale (determined by buyer preference or browser data) will be used and no error will be thrown.\n *\n * Supported locales are:\n * `da_DK`,\n * `de_DE`,\n * `en_AU`,\n * `en_GB`,\n * `en_US`,\n * `es_ES`,\n * `fr_CA`,\n * `fr_FR`,\n * `id_ID`,\n * `it_IT`,\n * `ja_JP`,\n * `ko_KR`,\n * `nl_NL`,\n * `no_NO`,\n * `pl_PL`,\n * `pt_BR`,\n * `pt_PT`,\n * `ru_RU`,\n * `sv_SE`,\n * `th_TH`,\n * `zh_CN`,\n * `zh_HK`,\n * and `zh_TW`.\n *\n * @param {string} [options.currency=\"USD\"] If a currency is passed in {@link PayPalCheckout#createPayment|`createPayment`}, it must match the currency passed here.\n * @param {boolean} [options.vault] Must be `true` when using `flow: vault` in {@link PayPalCheckout#createPayment|`createPayment`}.\n * @param {string} [options.components=buttons] By default, the Braintree SDK will only load the PayPal smart buttons component. If you would like to load just the [messages component](https://developer.paypal.com/docs/business/checkout/add-capabilities/credit-messaging/), pass `messages`. If you would like to load both, pass `buttons,messages`\n * @param {object} [options.dataAttributes] The data attributes to apply to the script. Any data attribute can be passed. A subset of the parameters are listed below. For a full list of data attributes, see the [PayPal docs](https://developer.paypal.com/docs/checkout/reference/customize-sdk/#script-parameters).\n * @param {string} [options.dataAttributes.client-token] The client token to use in the script. (usually not needed)\n * @param {string} [options.dataAttributes.csp-nonce] See the [PayPal docs about content security nonces](https://developer.paypal.com/docs/checkout/reference/customize-sdk/#csp-nonce).\n * @param {callback} [callback] Called when the PayPal SDK has been loaded onto the page. The second argument is the PayPal Checkout instance. If no callback is provided, the promise resolves with the PayPal Checkout instance when the PayPal SDK has been loaded onto the page.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example <caption>Without options</caption>\n * paypalCheckoutInstance.loadPayPalSDK().then(function () {\n *   // window.paypal.Buttons is now available to use\n * });\n * @example <caption>With options</caption>\n * paypalCheckoutInstance.loadPayPalSDK({\n *   'client-id': 'PayPal Client Id', // Can speed up rendering time to hardcode this value\n *\n *   intent: 'capture', // Make sure this value matches the value in createPayment\n *   currency: 'USD', // Make sure this value matches the value in createPayment\n * }).then(function () {\n *   // window.paypal.Buttons is now available to use\n * });\n * @example <caption>With Vaulting</caption>\n * paypalCheckoutInstance.loadPayPalSDK({\n *   vault: true\n * }).then(function () {\n *   // window.paypal.Buttons is now available to use\n * });\n */\nPayPalCheckout.prototype.loadPayPalSDK = function (options) {\n  var idPromise, src;\n  var loadPromise = new ExtendedPromise();\n  var dataAttributes = (options && options.dataAttributes) || {};\n  var userIdToken =\n    dataAttributes[\"user-id-token\"] || dataAttributes[\"data-user-id-token\"];\n\n  if (!userIdToken) {\n    userIdToken =\n      this._authorizationInformation.fingerprint &&\n      this._authorizationInformation.fingerprint.split(\"?\")[0];\n  }\n\n  this._paypalScript = document.createElement(\"script\");\n\n  // NEXT_MAJOR_VERSION\n  // this options object should have 2 properties:\n  // * queryParams\n  // * dataAttributes\n  // should make organizing this better than squashing\n  // all the query params at the top level and extracting\n  // the data attributes\n  options = assign(\n    {},\n    {\n      components: \"buttons\",\n    },\n    options\n  );\n  delete options.dataAttributes;\n\n  // NEXT_MAJOR_VERSION if merchant passes an explicit intent,\n  // currency, amount, etc, save those for use in createPayment\n  // if no explicit param of that type is passed in when calling\n  // createPayment to reduce the number of items that need to be\n  // duplicated here and in createPayment\n  if (options.vault) {\n    options.intent = options.intent || \"tokenize\";\n  } else {\n    options.intent = options.intent || \"authorize\";\n    options.currency = options.currency || \"USD\";\n  }\n\n  src = \"https://www.paypal.com/sdk/js?\";\n  this._paypalScript.onload = function () {\n    loadPromise.resolve();\n  };\n\n  Object.keys(dataAttributes).forEach(\n    function (attribute) {\n      this._paypalScript.setAttribute(\n        \"data-\" + attribute.replace(/^data\\-/, \"\"),\n        dataAttributes[attribute]\n      );\n    }.bind(this)\n  );\n\n  if (options[\"client-id\"]) {\n    idPromise = Promise.resolve(options[\"client-id\"]);\n  } else {\n    idPromise = this.getClientId();\n  }\n\n  idPromise.then(\n    function (id) {\n      options[\"client-id\"] = id;\n\n      if (this._autoSetDataUserIdToken && userIdToken) {\n        this._paypalScript.setAttribute(\"data-user-id-token\", userIdToken);\n\n        // preloading improves the rendering time of the PayPal button\n        this._attachPreloadPixel({\n          id: id,\n          userIdToken: userIdToken,\n          amount: dataAttributes.amount,\n          currency: options.currency,\n          merchantId: options[\"merchant-id\"],\n        });\n      }\n\n      this._paypalScript.src = querystring.queryify(src, options);\n      document.head.insertBefore(\n        this._paypalScript,\n        document.head.firstElementChild\n      );\n    }.bind(this)\n  );\n\n  return loadPromise.then(\n    function () {\n      return this;\n    }.bind(this)\n  );\n};\n\nPayPalCheckout.prototype._attachPreloadPixel = function (options) {\n  var request;\n  var id = options.id;\n  var userIdToken = options.userIdToken;\n  var env = this._authorizationInformation.environment;\n  var subdomain = env === \"production\" ? \"\" : \"sandbox.\";\n  var url = PAYPAL_SDK_PRELOAD_URL.replace(\"{ENV}\", subdomain);\n  var preloadOptions = {\n    \"client-id\": id,\n    \"user-id-token\": userIdToken,\n  };\n\n  if (options.amount) {\n    preloadOptions.amount = options.amount;\n  }\n  if (options.currency) {\n    preloadOptions.currency = options.currency;\n  }\n  if (options.merchantId) {\n    preloadOptions[\"merchant-id\"] = options.merchantId;\n  }\n\n  request = new XMLHttpRequest();\n  request.open(\"GET\", querystring.queryify(url, preloadOptions));\n  request.send();\n};\n\nPayPalCheckout.prototype._formatPaymentResourceData = function (\n  options,\n  config\n) {\n  var key;\n  var gatewayConfiguration = this._configuration.gatewayConfiguration;\n  // NEXT_MAJOR_VERSION default value for intent in PayPal SDK is capture\n  // but our integrations default value is authorize. Default this to capture\n  // in the next major version.\n  var intent = options.intent;\n  var paymentResource = {\n    // returnUrl and cancelUrl are required in hermes create_payment_resource route\n    // but are not used by the PayPal sdk, except to redirect to an error page\n    returnUrl: config.returnUrl || \"https://www.paypal.com/checkoutnow/error\",\n    cancelUrl: config.cancelUrl || \"https://www.paypal.com/checkoutnow/error\",\n    offerPaypalCredit: options.offerCredit === true,\n    merchantAccountId: this._merchantAccountId,\n    experienceProfile: {\n      brandName: options.displayName || gatewayConfiguration.paypal.displayName,\n      localeCode: options.locale,\n      noShipping: (!options.enableShippingAddress).toString(),\n      addressOverride: options.shippingAddressEditable === false,\n      landingPageType: options.landingPageType,\n    },\n    shippingOptions: options.shippingOptions,\n  };\n\n  if (options.flow === \"checkout\") {\n    paymentResource.amount = options.amount;\n    paymentResource.currencyIsoCode = options.currency;\n    paymentResource.requestBillingAgreement = options.requestBillingAgreement;\n\n    if (intent) {\n      // 'sale' has been changed to 'capture' in PayPal's backend, but\n      // we use an old version with 'sale'. We provide capture as an alias\n      // to match the PayPal SDK\n      if (intent === \"capture\") {\n        intent = \"sale\";\n      }\n      paymentResource.intent = intent;\n    }\n\n    if (options.hasOwnProperty(\"lineItems\")) {\n      paymentResource.lineItems = options.lineItems;\n    }\n\n    if (options.hasOwnProperty(\"vaultInitiatedCheckoutPaymentMethodToken\")) {\n      paymentResource.vaultInitiatedCheckoutPaymentMethodToken =\n        options.vaultInitiatedCheckoutPaymentMethodToken;\n    }\n\n    if (options.hasOwnProperty(\"shippingOptions\")) {\n      paymentResource.shippingOptions = options.shippingOptions;\n    }\n\n    for (key in options.shippingAddressOverride) {\n      if (options.shippingAddressOverride.hasOwnProperty(key)) {\n        paymentResource[key] = options.shippingAddressOverride[key];\n      }\n    }\n\n    if (options.hasOwnProperty(\"billingAgreementDetails\")) {\n      paymentResource.billingAgreementDetails = options.billingAgreementDetails;\n    }\n  } else {\n    paymentResource.shippingAddress = options.shippingAddressOverride;\n\n    if (options.billingAgreementDescription) {\n      paymentResource.description = options.billingAgreementDescription;\n    }\n  }\n\n  // this needs to be set outside of the block where add it to the\n  // payment request so that a follow up tokenization call can use it,\n  // but if a second create payment resource call is made without\n  // the correlation id, we want to reset it to undefined so that the\n  // tokenization call does not use a stale correlation id\n  this._riskCorrelationId = options.riskCorrelationId;\n  if (options.riskCorrelationId) {\n    paymentResource.correlationId = this._riskCorrelationId;\n  }\n\n  return paymentResource;\n};\n\n/**\n * @ignore\n * @static\n * @function _verifyConsistentCurrency\n * Verifies that `options.currency` and the currencies for each `shippingOption` the same.\n * @param {object} options `options` provided for `updatePayment`.\n * @returns {boolean} true is currencies match (or no shipping options); false if currencies do not match.\n */\n\nPayPalCheckout.prototype._verifyConsistentCurrency = function (options) {\n  if (\n    options.currency &&\n    options.hasOwnProperty(\"shippingOptions\") &&\n    Array.isArray(options.shippingOptions)\n  ) {\n    return options.shippingOptions.every(function (item) {\n      return (\n        item.amount &&\n        item.amount.currency &&\n        options.currency.toLowerCase() === item.amount.currency.toLowerCase()\n      );\n    });\n  }\n\n  return true;\n};\n\n/**\n * @ignore\n * @static\n * @function _hasMissingOption\n * @param {object} options All options provided for intiating the PayPal flow.\n * @param {array} required A list of required inputs that must be include as part of the options.\n * @returns {boolean} Returns a boolean.\n */\n\nPayPalCheckout.prototype._hasMissingOption = function (options, required) {\n  var i, option;\n\n  required = required || [];\n\n  if (\n    !options.hasOwnProperty(\"amount\") &&\n    !options.hasOwnProperty(\"lineItems\")\n  ) {\n    return true;\n  }\n\n  for (i = 0; i < required.length; i++) {\n    option = required[i];\n\n    if (!options.hasOwnProperty(option)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nPayPalCheckout.prototype._formatUpdatePaymentData = function (options) {\n  var self = this;\n  var paymentResource = {\n    merchantAccountId: this._merchantAccountId,\n    paymentId: options.paymentId || options.orderId,\n    currencyIsoCode: options.currency,\n  };\n\n  if (options.hasOwnProperty(\"amount\")) {\n    paymentResource.amount = options.amount;\n  }\n\n  if (options.hasOwnProperty(\"lineItems\")) {\n    paymentResource.lineItems = options.lineItems;\n  }\n\n  if (options.hasOwnProperty(\"shippingOptions\")) {\n    paymentResource.shippingOptions = options.shippingOptions;\n  }\n\n  /* shippingAddress not supported yet */\n  if (options.hasOwnProperty(\"shippingAddress\")) {\n    analytics.sendEvent(\n      self._clientPromise,\n      \"paypal-checkout.updatePayment.shippingAddress.provided.by-the-merchant\"\n    );\n\n    paymentResource.line1 = options.shippingAddress.line1;\n\n    if (options.shippingAddress.hasOwnProperty(\"line2\")) {\n      paymentResource.line2 = options.shippingAddress.line2;\n    }\n\n    paymentResource.city = options.shippingAddress.city;\n    paymentResource.state = options.shippingAddress.state;\n    paymentResource.postalCode = options.shippingAddress.postalCode;\n    paymentResource.countryCode = options.shippingAddress.countryCode;\n\n    if (options.shippingAddress.hasOwnProperty(\"phone\")) {\n      paymentResource.phone = options.shippingAddress.phone;\n    }\n\n    if (options.shippingAddress.hasOwnProperty(\"recipientName\")) {\n      paymentResource.recipientName = options.shippingAddress.recipientName;\n    }\n  }\n\n  return paymentResource;\n};\n\nPayPalCheckout.prototype._formatTokenizeData = function (options, params) {\n  var clientConfiguration = this._configuration;\n  var gatewayConfiguration = clientConfiguration.gatewayConfiguration;\n  var isTokenizationKey =\n    clientConfiguration.authorizationType === \"TOKENIZATION_KEY\";\n  var isVaultFlow = options.flow === \"vault\";\n  var correlationId =\n    this._riskCorrelationId || params.billingToken || params.ecToken;\n  var data = {\n    paypalAccount: {\n      correlationId: correlationId,\n      options: {\n        validate: isVaultFlow && !isTokenizationKey && options.vault,\n      },\n    },\n  };\n\n  if (isVaultFlow) {\n    data.paypalAccount.billingAgreementToken = params.billingToken;\n  } else {\n    data.paypalAccount.paymentToken = params.paymentId || params.orderId;\n    data.paypalAccount.payerId = params.payerId;\n    data.paypalAccount.unilateral =\n      gatewayConfiguration.paypal.unvettedMerchant;\n\n    if (options.intent) {\n      data.paypalAccount.intent = options.intent;\n    }\n  }\n\n  if (this._merchantAccountId) {\n    data.merchantAccountId = this._merchantAccountId;\n  }\n\n  return data;\n};\n\nPayPalCheckout.prototype._formatTokenizePayload = function (response) {\n  var payload;\n  var account = {};\n\n  if (response.paypalAccounts) {\n    account = response.paypalAccounts[0];\n  }\n\n  payload = {\n    nonce: account.nonce,\n    details: {},\n    type: account.type,\n  };\n\n  if (account.details && account.details.payerInfo) {\n    payload.details = account.details.payerInfo;\n  }\n\n  if (account.details && account.details.creditFinancingOffered) {\n    payload.creditFinancingOffered = account.details.creditFinancingOffered;\n  }\n\n  if (account.details && account.details.shippingOptionId) {\n    payload.shippingOptionId = account.details.shippingOptionId;\n  }\n\n  if (account.details && account.details.cobrandedCardLabel) {\n    payload.cobrandedCardLabel = account.details.cobrandedCardLabel;\n  }\n\n  return payload;\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/paypal-checkout.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * paypalCheckoutInstance.teardown();\n * @example <caption>With callback</caption>\n * paypalCheckoutInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.teardown = function () {\n  var self = this;\n\n  convertMethodsToError(this, methods(PayPalCheckout.prototype));\n\n  if (this._paypalScript && this._paypalScript.parentNode) {\n    this._paypalScript.parentNode.removeChild(this._paypalScript);\n  }\n\n  return this._frameServicePromise\n    .catch(function () {\n      // no need to error in teardown for an error setting up the frame service\n    })\n    .then(function () {\n      if (!self._frameService) {\n        return Promise.resolve();\n      }\n\n      return self._frameService.teardown();\n    });\n};\n\nmodule.exports = wrapPromise.wrapPrototype(PayPalCheckout);\n\n},{\"../lib/analytics\":86,\"../lib/assign\":88,\"../lib/braintree-error\":91,\"../lib/constants\":92,\"../lib/convert-methods-to-error\":93,\"../lib/convert-to-braintree-error\":94,\"../lib/create-assets-url\":95,\"../lib/create-authorization-data\":96,\"../lib/create-deferred-client\":97,\"../lib/frame-service/external\":105,\"../lib/methods\":121,\"../lib/querystring\":123,\"../lib/use-min\":126,\"../paypal/shared/constants\":131,\"./errors\":128,\"@braintree/extended-promise\":38,\"@braintree/wrap-promise\":47}],131:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n  LANDING_FRAME_NAME: \"braintreepaypallanding\",\n  FLOW_ENDPOINTS: {\n    checkout: \"create_payment_resource\",\n    vault: \"setup_billing_agreement\",\n  },\n  REQUIRED_OPTIONS: [\"paymentId\", \"currency\"],\n};\n\n},{}],132:[function(require,module,exports){\n\"use strict\";\n\nvar assign = require(\"../../../lib/assign\").assign;\nvar analytics = require(\"../../../lib/analytics\");\nvar BraintreeError = require(\"../../../lib/braintree-error\");\nvar isVerifiedDomain = require(\"../../../lib/is-verified-domain\");\nvar ExtendedPromise = require(\"@braintree/extended-promise\");\nvar EventEmitter = require(\"@braintree/event-emitter\");\nvar errors = require(\"../../shared/errors\");\nvar iFramer = require(\"@braintree/iframer\");\nvar Bus = require(\"framebus\");\nvar constants = require(\"../../shared/constants\");\nvar uuid = require(\"@braintree/uuid\");\nvar events = require(\"../../shared/events\");\nvar useMin = require(\"../../../lib/use-min\");\nvar BUS_CONFIGURATION_REQUEST_EVENT =\n  require(\"../../../lib/constants\").BUS_CONFIGURATION_REQUEST_EVENT;\n\nvar VERSION = \"3.99.0\";\nvar IFRAME_HEIGHT = 400;\nvar IFRAME_WIDTH = 400;\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\nfunction BaseFramework(options) {\n  EventEmitter.call(this);\n\n  this._client = options.client;\n  this._createPromise = options.createPromise;\n  this._createOptions = options;\n\n  if (this._client) {\n    this._isDebug = this._client.getConfiguration().isDebug;\n    this._assetsUrl =\n      this._client.getConfiguration().gatewayConfiguration.assetsUrl;\n  } else {\n    this._isDebug = Boolean(options.isDebug);\n    this._assetsUrl = options.assetsUrl;\n  }\n  this._assetsUrl = this._assetsUrl + \"/web/\" + VERSION;\n}\n\nEventEmitter.createChild(BaseFramework);\n\nBaseFramework.prototype._waitForClient = function () {\n  if (this._client) {\n    return Promise.resolve();\n  }\n\n  return this._createPromise.then(\n    function (client) {\n      this._client = client;\n    }.bind(this)\n  );\n};\n\nBaseFramework.prototype.setUpEventListeners = function () {\n  throw new BraintreeError(errors.THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED);\n};\n\nBaseFramework.prototype.verifyCard = function (options, privateOptions) {\n  var formattedOptions, error;\n  var self = this;\n\n  privateOptions = privateOptions || {};\n\n  error = this._checkForVerifyCardError(options, privateOptions);\n\n  if (error) {\n    return Promise.reject(error);\n  }\n\n  this._verifyCardInProgress = true;\n\n  formattedOptions = this._formatVerifyCardOptions(options);\n\n  return this._formatLookupData(formattedOptions)\n    .then(function (data) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.started\"\n      );\n\n      return self._performLookup(formattedOptions.nonce, data);\n    })\n    .then(function (response) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.3ds-version.\" +\n          response.lookup.threeDSecureVersion\n      );\n\n      return self._onLookupComplete(response, formattedOptions);\n    })\n    .then(function (response) {\n      return self.initializeChallengeWithLookupResponse(\n        response,\n        formattedOptions\n      );\n    })\n    .then(function (payload) {\n      self._resetVerificationState();\n\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.completed\"\n      );\n\n      return payload;\n    })\n    .catch(function (err) {\n      self._resetVerificationState();\n\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.failed\"\n      );\n\n      return Promise.reject(err);\n    });\n};\n\nBaseFramework.prototype._checkForFrameworkSpecificVerifyCardErrors =\n  function () {\n    throw new BraintreeError(errors.THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED);\n  };\n\nBaseFramework.prototype._presentChallenge = function () {\n  throw new BraintreeError(errors.THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED);\n};\n\nBaseFramework.prototype.prepareLookup = function () {\n  throw new BraintreeError(errors.THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED);\n};\n\nBaseFramework.prototype._resetVerificationState = function () {\n  this._verifyCardInProgress = false;\n  this._verifyCardPromisePlus = null;\n\n  if (typeof this._reloadThreeDSecure === \"function\") {\n    this._reloadThreeDSecure();\n  }\n};\n\nBaseFramework.prototype._performLookup = function (nonce, data) {\n  var self = this;\n  var url = \"payment_methods/\" + nonce + \"/three_d_secure/lookup\";\n\n  return this._waitForClient().then(function () {\n    return self._client\n      .request({\n        endpoint: url,\n        method: \"post\",\n        data: data,\n      })\n      .catch(function (err) {\n        var status = err && err.details && err.details.httpStatus;\n        var analyticsMessage = \"three-d-secure.verification-flow.lookup-failed\";\n        var lookupError;\n\n        if (status === 404) {\n          lookupError = errors.THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR;\n          analyticsMessage += \".404\";\n        } else if (status === 422) {\n          lookupError = errors.THREEDS_LOOKUP_VALIDATION_ERROR;\n          analyticsMessage += \".422\";\n        } else {\n          lookupError = errors.THREEDS_LOOKUP_ERROR;\n        }\n\n        analytics.sendEvent(self._createPromise, analyticsMessage);\n\n        return Promise.reject(\n          new BraintreeError({\n            type: lookupError.type,\n            code: lookupError.code,\n            message: lookupError.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      });\n  });\n};\n\nBaseFramework.prototype._checkForVerifyCardError = function (\n  options,\n  privateOptions\n) {\n  var errorOption;\n\n  if (this._verifyCardInProgress === true) {\n    return new BraintreeError(errors.THREEDS_AUTHENTICATION_IN_PROGRESS);\n  } else if (!options.nonce) {\n    errorOption = \"a nonce\";\n  } else if (!options.amount) {\n    errorOption = \"an amount\";\n  }\n\n  if (!errorOption) {\n    errorOption = this._checkForFrameworkSpecificVerifyCardErrors(\n      options,\n      privateOptions\n    );\n  }\n\n  if (errorOption) {\n    return new BraintreeError({\n      type: errors.THREEDS_MISSING_VERIFY_CARD_OPTION.type,\n      code: errors.THREEDS_MISSING_VERIFY_CARD_OPTION.code,\n      message: \"verifyCard options must include \" + errorOption + \".\",\n    });\n  }\n\n  return null;\n};\n\nBaseFramework.prototype.initializeChallengeWithLookupResponse = function (\n  lookupResponse,\n  options\n) {\n  var self = this;\n\n  options = options || {};\n\n  this._lookupPaymentMethod = lookupResponse.paymentMethod;\n\n  // sets this in the case that initializeChallengeWithLookupResponse is\n  // called as a standalone method from a server side lookup. In a normal\n  // verifyCard flow, this promise will already exist\n  self._verifyCardPromisePlus =\n    self._verifyCardPromisePlus || new ExtendedPromise();\n  self._handleLookupResponse(lookupResponse, options);\n\n  return self._verifyCardPromisePlus.then(function (payload) {\n    analytics.sendEvent(\n      self._createPromise,\n      \"three-d-secure.verification-flow.liability-shifted.\" +\n        String(payload.liabilityShifted)\n    );\n    analytics.sendEvent(\n      self._createPromise,\n      \"three-d-secure.verification-flow.liability-shift-possible.\" +\n        String(payload.liabilityShiftPossible)\n    );\n\n    return payload;\n  });\n};\n\nBaseFramework.prototype._handleLookupResponse = function (\n  lookupResponse,\n  options\n) {\n  var challengeShouldBePresented = Boolean(\n    lookupResponse.lookup && lookupResponse.lookup.acsUrl\n  );\n  var details;\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"three-d-secure.verification-flow.challenge-presented.\" +\n      String(challengeShouldBePresented)\n  );\n\n  if (challengeShouldBePresented) {\n    this._presentChallenge(lookupResponse, options);\n  } else {\n    details = this._formatAuthResponse(\n      lookupResponse.paymentMethod,\n      lookupResponse.threeDSecureInfo\n    );\n    details.verificationDetails = lookupResponse.threeDSecureInfo;\n\n    this._verifyCardPromisePlus.resolve(details);\n  }\n};\n\nBaseFramework.prototype._onLookupComplete = function (response) {\n  this._lookupPaymentMethod = response.paymentMethod;\n  this._verifyCardPromisePlus = new ExtendedPromise();\n\n  return Promise.resolve(response);\n};\n\nBaseFramework.prototype._formatAuthResponse = function (\n  paymentMethod,\n  threeDSecureInfo\n) {\n  return {\n    nonce: paymentMethod.nonce,\n    type: paymentMethod.type,\n    binData: paymentMethod.binData,\n    details: paymentMethod.details,\n    description:\n      paymentMethod.description &&\n      paymentMethod.description.replace(/\\+/g, \" \"),\n    liabilityShifted: threeDSecureInfo && threeDSecureInfo.liabilityShifted,\n    liabilityShiftPossible:\n      threeDSecureInfo && threeDSecureInfo.liabilityShiftPossible,\n    threeDSecureInfo: paymentMethod.threeDSecureInfo,\n  };\n};\n\nBaseFramework.prototype._formatVerifyCardOptions = function (options) {\n  return assign({}, options);\n};\n\nBaseFramework.prototype._formatLookupData = function (options) {\n  var data = {\n    amount: options.amount,\n  };\n\n  if (options.collectDeviceData === true) {\n    data.browserColorDepth = window.screen.colorDepth;\n    data.browserJavaEnabled = window.navigator.javaEnabled();\n    data.browserJavascriptEnabled = true;\n    data.browserLanguage = window.navigator.language;\n    data.browserScreenHeight = window.screen.height;\n    data.browserScreenWidth = window.screen.width;\n    data.browserTimeZone = new Date().getTimezoneOffset();\n    data.deviceChannel = \"Browser\";\n  }\n\n  return Promise.resolve(data);\n};\n\nBaseFramework.prototype._handleV1AuthResponse = function (data) {\n  var authResponse = JSON.parse(data.auth_response);\n\n  if (authResponse.success) {\n    this._verifyCardPromisePlus.resolve(\n      this._formatAuthResponse(\n        authResponse.paymentMethod,\n        authResponse.threeDSecureInfo\n      )\n    );\n  } else if (\n    authResponse.threeDSecureInfo &&\n    authResponse.threeDSecureInfo.liabilityShiftPossible\n  ) {\n    this._verifyCardPromisePlus.resolve(\n      this._formatAuthResponse(\n        this._lookupPaymentMethod,\n        authResponse.threeDSecureInfo\n      )\n    );\n  } else {\n    this._verifyCardPromisePlus.reject(\n      new BraintreeError({\n        type: BraintreeError.types.UNKNOWN,\n        code: \"UNKNOWN_AUTH_RESPONSE\",\n        message: authResponse.error.message,\n      })\n    );\n  }\n};\n\nBaseFramework.prototype.cancelVerifyCard = function () {\n  var response, threeDSecureInfo;\n\n  this._verifyCardInProgress = false;\n\n  if (!this._lookupPaymentMethod) {\n    return Promise.reject(\n      new BraintreeError(errors.THREEDS_NO_VERIFICATION_PAYLOAD)\n    );\n  }\n\n  threeDSecureInfo = this._lookupPaymentMethod.threeDSecureInfo;\n\n  response = assign({}, this._lookupPaymentMethod, {\n    liabilityShiftPossible:\n      threeDSecureInfo && threeDSecureInfo.liabilityShiftPossible,\n    liabilityShifted: threeDSecureInfo && threeDSecureInfo.liabilityShifted,\n    verificationDetails:\n      threeDSecureInfo && threeDSecureInfo.verificationDetails,\n  });\n\n  return Promise.resolve(response);\n};\n\nBaseFramework.prototype._setupV1Bus = function (options) {\n  var clientConfiguration = this._client.getConfiguration();\n  var parentURL = window.location.href.split(\"#\")[0];\n  var lookupResponse = options.lookupResponse;\n  var channel = uuid();\n  var bus = new Bus({\n    channel: channel,\n    verifyDomain: isVerifiedDomain,\n  });\n  var authenticationCompleteBaseUrl =\n    this._assetsUrl +\n    \"/html/three-d-secure-authentication-complete-frame.html?channel=\" +\n    encodeURIComponent(channel) +\n    \"&\";\n\n  bus.on(BUS_CONFIGURATION_REQUEST_EVENT, function (reply) {\n    reply({\n      clientConfiguration: clientConfiguration,\n      nonce: options.nonce,\n      acsUrl: lookupResponse.acsUrl,\n      pareq: lookupResponse.pareq,\n      termUrl:\n        lookupResponse.termUrl +\n        \"&three_d_secure_version=\" +\n        VERSION +\n        \"&authentication_complete_base_url=\" +\n        encodeURIComponent(authenticationCompleteBaseUrl),\n      md: lookupResponse.md,\n      parentUrl: parentURL,\n    });\n  });\n\n  bus.on(events.AUTHENTICATION_COMPLETE, options.handleAuthResponse);\n\n  return bus;\n};\n\nBaseFramework.prototype._setupV1Iframe = function (options) {\n  var url =\n    this._assetsUrl +\n    \"/html/three-d-secure-bank-frame\" +\n    useMin(this._isDebug) +\n    \".html?showLoader=\" +\n    options.showLoader;\n  var bankIframe = iFramer({\n    src: url,\n    height: IFRAME_HEIGHT,\n    width: IFRAME_WIDTH,\n    name: constants.LANDING_FRAME_NAME + \"_\" + this._v1Bus.channel,\n    title: \"3D Secure Authorization Frame\",\n  });\n\n  return bankIframe;\n};\n\nBaseFramework.prototype._setupV1Elements = function (options) {\n  this._v1Bus = this._setupV1Bus(options);\n  this._v1Iframe = this._setupV1Iframe(options);\n};\n\nBaseFramework.prototype._teardownV1Elements = function () {\n  if (this._v1Bus) {\n    this._v1Bus.teardown();\n    this._v1Bus = null;\n  }\n\n  if (this._v1Iframe && this._v1Iframe.parentNode) {\n    this._v1Iframe.parentNode.removeChild(this._v1Iframe);\n    this._v1Iframe = null;\n  }\n\n  if (this._onV1Keyup) {\n    document.removeEventListener(\"keyup\", this._onV1Keyup);\n    this._onV1Keyup = null;\n  }\n};\n\nBaseFramework.prototype.teardown = function () {\n  analytics.sendEvent(this._createPromise, \"three-d-secure.teardown-completed\");\n\n  this._teardownV1Elements();\n\n  return Promise.resolve();\n};\n\nmodule.exports = BaseFramework;\n\n},{\"../../../lib/analytics\":86,\"../../../lib/assign\":88,\"../../../lib/braintree-error\":91,\"../../../lib/constants\":92,\"../../../lib/is-verified-domain\":119,\"../../../lib/use-min\":126,\"../../shared/constants\":141,\"../../shared/errors\":142,\"../../shared/events\":143,\"@braintree/event-emitter\":37,\"@braintree/extended-promise\":38,\"@braintree/iframer\":39,\"@braintree/uuid\":43,\"framebus\":167}],133:[function(require,module,exports){\n\"use strict\";\n// NEXT_MAJOR_VERSION drop support for Bootstrap framework,\n// recomend using inline frame version and putting it in\n// the merchant's own bootstrap modal\n\nvar SongbirdFramework = require(\"./songbird\");\n\nfunction Bootstrap3ModalFramework(options) {\n  SongbirdFramework.call(this, options);\n}\n\nBootstrap3ModalFramework.prototype = Object.create(\n  SongbirdFramework.prototype,\n  {\n    constructor: SongbirdFramework,\n  }\n);\n\nBootstrap3ModalFramework.prototype._createV1IframeModalElement = function (\n  iframe\n) {\n  var modal = document.createElement(\"div\");\n\n  modal.innerHTML =\n    '<div class=\"modal fade in\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"CCAFrameModal-label\" aria-hidden=\"true\" style=\"display: block;\">' +\n    '<div class=\"modal-dialog\" style=\"width:440px;z-index:999999;\">' +\n    '<div class=\"modal-content\">' +\n    '<div class=\"modal-body\" data-braintree-v1-fallback-iframe-container>' +\n    '<button type=\"button\" data-braintree-v1-fallback-close-button class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>' +\n    \"</div>\" +\n    \"</div>\" +\n    \"</div>\" +\n    '<div data-braintree-v1-fallback-backdrop style=\"' +\n    \"position: fixed;\" +\n    \"cursor: pointer;\" +\n    \"z-index: 999998;\" +\n    \"top: 0;\" +\n    \"left: 0;\" +\n    \"width: 100%;\" +\n    \"height: 100%;\" +\n    '\"></div>' +\n    \"</div>\";\n\n  modal\n    .querySelector(\"[data-braintree-v1-fallback-iframe-container]\")\n    .appendChild(iframe);\n\n  return modal;\n};\n\nBootstrap3ModalFramework.prototype._createCardinalConfigurationOptions =\n  function (setupOptions) {\n    var options =\n      SongbirdFramework.prototype._createCardinalConfigurationOptions.call(\n        this,\n        setupOptions\n      );\n\n    options.payment.framework = \"bootstrap3\";\n\n    return options;\n  };\n\nmodule.exports = Bootstrap3ModalFramework;\n\n},{\"./songbird\":138}],134:[function(require,module,exports){\n\"use strict\";\n\nvar SongbirdFramework = require(\"./songbird\");\n\nfunction CardinalModalFramework(options) {\n  SongbirdFramework.call(this, options);\n}\n\nCardinalModalFramework.prototype = Object.create(SongbirdFramework.prototype, {\n  constructor: SongbirdFramework,\n});\n\nCardinalModalFramework.prototype._createV1IframeModalElement = function (\n  iframe\n) {\n  var modal = document.createElement(\"div\");\n  var addCloseButton = Boolean(\n    this._createOptions &&\n      this._createOptions.cardinalSDKConfig &&\n      this._createOptions.cardinalSDKConfig.payment &&\n      this._createOptions.cardinalSDKConfig.payment.displayExitButton\n  );\n\n  modal.innerHTML =\n    '<div style=\"' +\n    \"position: fixed;\" +\n    \"z-index: 999999;\" +\n    \"top: 50%;\" +\n    \"left: 50%;\" +\n    \"padding: 24px 20px;\" +\n    \"transform: translate(-50%,-50%);\" +\n    \"border-radius: 2px;\" +\n    \"background: #fff;\" +\n    \"max-width: 100%;\" +\n    \"overflow: auto;\" +\n    '\">' +\n    \"<div>\" +\n    \"<button data-braintree-v1-fallback-close-button \" +\n    'style=\"' +\n    \"font-family: Helvetica,Arial,sans-serif;\" +\n    \"font-size: 25px;\" +\n    \"line-height: 12px;\" +\n    \"position: absolute;\" +\n    \"top: 2px;\" +\n    \"right: 0px;\" +\n    \"cursor: pointer;\" +\n    \"color: #999;\" +\n    \"border: 0;\" +\n    \"outline: none;\" +\n    \"background: none;\" +\n    '\" ' +\n    \"onMouseOver=\\\"this.style.color='#000'\\\" \" +\n    \"onMouseOut=\\\"this.style.color='#999'\\\"\" +\n    \">×</button>\" +\n    \"</div>\" +\n    // iframe container\n    '<div data-braintree-v1-fallback-iframe-container style=\"' +\n    \"height: 400px;\" +\n    '\"></div>' +\n    \"</div>\" +\n    // modal backdrop\n    '<div data-braintree-v1-fallback-backdrop style=\"' +\n    \"position: fixed;\" +\n    \"z-index: 999998;\" +\n    \"cursor: pointer;\" +\n    \"top: 0;\" +\n    \"left: 0;\" +\n    \"width: 100%;\" +\n    \"height: 100%;\" +\n    \"transition: opacity 1ms ease;\" +\n    \"background: rgba(0,0,0,.6);\" +\n    '\"></div>';\n\n  if (!addCloseButton) {\n    modal.querySelector(\n      \"[data-braintree-v1-fallback-close-button]\"\n    ).style.display = \"none\";\n  }\n  modal\n    .querySelector(\"[data-braintree-v1-fallback-iframe-container]\")\n    .appendChild(iframe);\n\n  return modal;\n};\n\nmodule.exports = CardinalModalFramework;\n\n},{\"./songbird\":138}],135:[function(require,module,exports){\n\"use strict\";\n\nvar LegacyFramework = require(\"./legacy\");\nvar CardinalModalFramework = require(\"./cardinal-modal\");\nvar Bootstrap3ModalFramework = require(\"./bootstrap3-modal\");\nvar InlineIframeFramework = require(\"./inline-iframe\");\n\nmodule.exports = {\n  legacy: LegacyFramework,\n  \"cardinal-modal\": CardinalModalFramework,\n  \"bootstrap3-modal\": Bootstrap3ModalFramework,\n  \"inline-iframe\": InlineIframeFramework,\n};\n\n},{\"./bootstrap3-modal\":133,\"./cardinal-modal\":134,\"./inline-iframe\":136,\"./legacy\":137}],136:[function(require,module,exports){\n\"use strict\";\n\nvar SongbirdFramework = require(\"./songbird\");\nvar BraintreeError = require(\"../../../lib/braintree-error\");\nvar errors = require(\"../../shared/errors\");\nvar enumerate = require(\"../../../lib/enumerate\");\n\nfunction InlineIframeFramework(options) {\n  SongbirdFramework.call(this, options);\n}\n\nInlineIframeFramework.prototype = Object.create(SongbirdFramework.prototype, {\n  constructor: SongbirdFramework,\n});\n\nInlineIframeFramework.events = enumerate(\n  [\"AUTHENTICATION_IFRAME_AVAILABLE\"],\n  \"inline-iframe-framework:\"\n);\n\nInlineIframeFramework.prototype.setUpEventListeners = function (reply) {\n  SongbirdFramework.prototype.setUpEventListeners.call(this, reply);\n\n  this.on(\n    InlineIframeFramework.events.AUTHENTICATION_IFRAME_AVAILABLE,\n    function (payload, next) {\n      reply(\"authentication-iframe-available\", payload, next);\n    }\n  );\n};\n\nInlineIframeFramework.prototype._createCardinalConfigurationOptions = function (\n  setupOptions\n) {\n  var options =\n    SongbirdFramework.prototype._createCardinalConfigurationOptions.call(\n      this,\n      setupOptions\n    );\n\n  options.payment.framework = \"inline\";\n\n  return options;\n};\n\nInlineIframeFramework.prototype._addV1IframeToPage = function () {\n  this._emit(\n    InlineIframeFramework.events.AUTHENTICATION_IFRAME_AVAILABLE,\n    {\n      element: this._v1Modal,\n    },\n    function () {\n      // NOOP\n    }\n  );\n};\n\nInlineIframeFramework.prototype._setupFrameworkSpecificListeners = function () {\n  this.setCardinalListener(\"ui.inline.setup\", this._onInlineSetup.bind(this));\n};\n\nInlineIframeFramework.prototype._onInlineSetup = function (\n  htmlTemplate,\n  details,\n  resolve,\n  reject\n) {\n  var container, hasError;\n\n  if (!htmlTemplate || !details) {\n    hasError = true;\n  } else if (details.paymentType !== \"CCA\") {\n    hasError = true;\n  } else if (\n    !(details.data.mode === \"suppress\" || details.data.mode === \"static\")\n  ) {\n    hasError = true;\n  }\n\n  if (hasError) {\n    reject(new BraintreeError(errors.THREEDS_INLINE_IFRAME_DETAILS_INCORRECT));\n\n    return;\n  }\n\n  container = document.createElement(\"div\");\n  container.innerHTML = htmlTemplate;\n\n  if (details.data.mode === \"suppress\") {\n    container.style.display = \"none\";\n    document.body.appendChild(container);\n    resolve();\n  } else if (details.data.mode === \"static\") {\n    this._emit(\n      InlineIframeFramework.events.AUTHENTICATION_IFRAME_AVAILABLE,\n      {\n        element: container,\n      },\n      function () {\n        resolve();\n      }\n    );\n  }\n};\n\nmodule.exports = InlineIframeFramework;\n\n},{\"../../../lib/braintree-error\":91,\"../../../lib/enumerate\":100,\"../../shared/errors\":142,\"./songbird\":138}],137:[function(require,module,exports){\n\"use strict\";\n\nvar BaseFramework = require(\"./base\");\nvar deferred = require(\"../../../lib/deferred\");\n\nfunction LegacyFramework(options) {\n  BaseFramework.call(this, options);\n}\n\nLegacyFramework.prototype = Object.create(BaseFramework.prototype, {\n  constructor: LegacyFramework,\n});\n\nLegacyFramework.prototype.setUpEventListeners = function () {\n  // noop\n};\n\nLegacyFramework.prototype.transformV1CustomerBillingAddress = function (\n  customer\n) {\n  customer.billingAddress.line1 = customer.billingAddress.streetAddress;\n  customer.billingAddress.line2 = customer.billingAddress.extendedAddress;\n  customer.billingAddress.city = customer.billingAddress.locality;\n  customer.billingAddress.state = customer.billingAddress.region;\n  customer.billingAddress.countryCode =\n    customer.billingAddress.countryCodeAlpha2;\n  delete customer.billingAddress.streetAddress;\n  delete customer.billingAddress.extendedAddress;\n  delete customer.billingAddress.locality;\n  delete customer.billingAddress.region;\n  delete customer.billingAddress.countryCodeAlpha2;\n\n  return customer;\n};\n\nLegacyFramework.prototype._createIframe = function (options) {\n  var self = this;\n\n  this._setupV1Elements({\n    nonce: options.nonce,\n    lookupResponse: options.lookupResponse,\n    showLoader: options.showLoader,\n    handleAuthResponse: function (data) {\n      self._handleAuthResponse(data, options);\n    },\n  });\n\n  return this._v1Iframe;\n};\n\nLegacyFramework.prototype._handleAuthResponse = function (data, options) {\n  this._v1Bus.teardown();\n\n  options.removeFrame();\n\n  // This also has to be in a setTimeout so it executes after the `removeFrame`.\n  deferred(\n    function () {\n      this._handleV1AuthResponse(data);\n    }.bind(this)\n  )();\n};\n\nLegacyFramework.prototype._checkForFrameworkSpecificVerifyCardErrors =\n  function (options) {\n    var errorOption;\n\n    if (typeof options.addFrame !== \"function\") {\n      errorOption = \"an addFrame function\";\n    } else if (typeof options.removeFrame !== \"function\") {\n      errorOption = \"a removeFrame function\";\n    }\n\n    return errorOption;\n  };\n\nLegacyFramework.prototype._formatVerifyCardOptions = function (options) {\n  var modifiedOptions = BaseFramework.prototype._formatVerifyCardOptions.call(\n    this,\n    options\n  );\n\n  modifiedOptions.addFrame = deferred(options.addFrame);\n  modifiedOptions.removeFrame = deferred(options.removeFrame);\n  modifiedOptions.showLoader = options.showLoader !== false;\n\n  return modifiedOptions;\n};\n\nLegacyFramework.prototype._formatLookupData = function (options) {\n  var self = this;\n\n  return BaseFramework.prototype._formatLookupData\n    .call(this, options)\n    .then(function (data) {\n      if (options.customer && options.customer.billingAddress) {\n        data.customer = self.transformV1CustomerBillingAddress(\n          options.customer\n        );\n      }\n\n      return data;\n    });\n};\n\nLegacyFramework.prototype._presentChallenge = function (\n  lookupResponse,\n  options\n) {\n  options.addFrame(\n    null,\n    this._createIframe({\n      showLoader: options.showLoader,\n      lookupResponse: lookupResponse.lookup,\n      nonce: lookupResponse.paymentMethod.nonce,\n      removeFrame: options.removeFrame,\n    })\n  );\n};\n\nmodule.exports = LegacyFramework;\n\n},{\"../../../lib/deferred\":98,\"./base\":132}],138:[function(require,module,exports){\n\"use strict\";\n\nvar BaseFramework = require(\"./base\");\nvar assign = require(\"../../../lib/assign\").assign;\nvar deferred = require(\"../../../lib/deferred\");\nvar BraintreeError = require(\"../../../lib/braintree-error\");\nvar convertToBraintreeError = require(\"../../../lib/convert-to-braintree-error\");\nvar analytics = require(\"../../../lib/analytics\");\nvar assets = require(\"../../../lib/assets\");\nvar errors = require(\"../../shared/errors\");\nvar enumerate = require(\"../../../lib/enumerate\");\nvar constants = require(\"../../shared/constants\");\nvar ExtendedPromise = require(\"@braintree/extended-promise\");\n\nvar INTEGRATION_TIMEOUT_MS =\n  require(\"../../../lib/constants\").INTEGRATION_TIMEOUT_MS;\nvar PLATFORM = require(\"../../../lib/constants\").PLATFORM;\nvar VERSION = \"3.99.0\";\nvar CUSTOMER_CANCELED_SONGBIRD_MODAL = \"01\";\nvar SONGBIRD_UI_EVENTS = [\n  \"ui.close\",\n  \"ui.render\",\n\n  // TODO these events are not documented in the\n  // client reference because so far we have\n  // not been able to trigger them in our testing\n  \"ui.renderHidden\",\n  \"ui.loading.close\",\n  \"ui.loading.render\",\n];\n\nvar SCA_EXEMPTION_TYPES = [\"low_value\", \"transaction_risk_analysis\"];\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\nfunction SongbirdFramework(options) {\n  BaseFramework.call(this, options);\n\n  this._useV1Fallback = false;\n  this._clientMetadata = {\n    requestedThreeDSecureVersion: \"2\",\n    sdkVersion: PLATFORM + \"/\" + VERSION,\n  };\n  this.originalSetupOptions = options;\n  this._getDfReferenceIdPromisePlus = new ExtendedPromise();\n  this.setupSongbird(options);\n  this._cardinalEvents = [];\n}\n\nSongbirdFramework.prototype = Object.create(BaseFramework.prototype, {\n  constructor: SongbirdFramework,\n});\n\nSongbirdFramework.events = enumerate(\n  [\n    \"LOOKUP_COMPLETE\",\n    \"CUSTOMER_CANCELED\",\n    \"UI.CLOSE\",\n    \"UI.RENDER\",\n    \"UI.RENDERHIDDEN\",\n    \"UI.LOADING.CLOSE\",\n    \"UI.LOADING.RENDER\",\n  ],\n  \"songbird-framework:\"\n);\n\nSongbirdFramework.prototype.setUpEventListeners = function (reply) {\n  this.on(SongbirdFramework.events.LOOKUP_COMPLETE, function (data, next) {\n    reply(\"lookup-complete\", data, next);\n  });\n  this.on(SongbirdFramework.events.CUSTOMER_CANCELED, function () {\n    reply(\"customer-canceled\");\n  });\n  this.on(SongbirdFramework.events[\"UI.CLOSE\"], function () {\n    reply(\"authentication-modal-close\");\n  });\n  this.on(SongbirdFramework.events[\"UI.RENDER\"], function () {\n    reply(\"authentication-modal-render\");\n  });\n  this.on(SongbirdFramework.events[\"UI.RENDERHIDDEN\"], function () {\n    reply(\"authentication-modal-render-hidden\");\n  });\n  this.on(SongbirdFramework.events[\"UI.LOADING.CLOSE\"], function () {\n    reply(\"authentication-modal-loader-close\");\n  });\n  this.on(SongbirdFramework.events[\"UI.LOADING.RENDER\"], function () {\n    reply(\"authentication-modal-loader-render\");\n  });\n};\n\nSongbirdFramework.prototype.prepareLookup = function (options) {\n  var data = assign({}, options);\n  var self = this;\n\n  return this.getDfReferenceId()\n    .then(function (id) {\n      data.dfReferenceId = id;\n    })\n    .then(function () {\n      return self._triggerCardinalBinProcess(options.bin);\n    })\n    .catch(function () {\n      // catch and ignore errors from looking up\n      // df reference and Cardinal bin process\n    })\n    .then(function () {\n      return self._waitForClient();\n    })\n    .then(function () {\n      data.clientMetadata = self._clientMetadata;\n      data.authorizationFingerprint =\n        self._client.getConfiguration().authorizationFingerprint;\n      data.braintreeLibraryVersion = \"braintree/web/\" + VERSION;\n\n      return data;\n    });\n};\n\nSongbirdFramework.prototype.initializeChallengeWithLookupResponse = function (\n  lookupResponse,\n  options\n) {\n  return this.setupSongbird().then(\n    function () {\n      return BaseFramework.prototype.initializeChallengeWithLookupResponse.call(\n        this,\n        lookupResponse,\n        options\n      );\n    }.bind(this)\n  );\n};\n\nSongbirdFramework.prototype.initiateV1Fallback = function (errorType) {\n  this._useV1Fallback = true;\n  this._removeSongbirdListeners();\n  analytics.sendEvent(\n    this._createPromise,\n    \"three-d-secure.v1-fallback.\" + errorType\n  );\n\n  if (this._songbirdPromise) {\n    this._songbirdPromise.resolve();\n  }\n};\n\nSongbirdFramework.prototype._triggerCardinalBinProcess = function (bin) {\n  var self = this;\n  var issuerStartTime = Date.now();\n\n  return window.Cardinal.trigger(\"bin.process\", bin).then(function (\n    binResults\n  ) {\n    self._clientMetadata.issuerDeviceDataCollectionTimeElapsed =\n      Date.now() - issuerStartTime;\n    self._clientMetadata.issuerDeviceDataCollectionResult =\n      binResults && binResults.Status;\n  });\n};\n\nSongbirdFramework.prototype.transformBillingAddress = function (\n  additionalInformation,\n  billingAddress\n) {\n  if (billingAddress) {\n    // map from public API to the API that the Gateway expects\n    extractAddressData(billingAddress, additionalInformation, \"billing\");\n    additionalInformation.billingPhoneNumber = billingAddress.phoneNumber;\n    additionalInformation.billingGivenName = billingAddress.givenName;\n    additionalInformation.billingSurname = billingAddress.surname;\n  }\n\n  return additionalInformation;\n};\n\nSongbirdFramework.prototype.transformShippingAddress = function (\n  additionalInformation\n) {\n  var shippingAddress = additionalInformation.shippingAddress;\n\n  if (shippingAddress) {\n    // map from public API to the API that the Gateway expects\n    extractAddressData(shippingAddress, additionalInformation, \"shipping\");\n\n    delete additionalInformation.shippingAddress;\n  }\n\n  return additionalInformation;\n};\n\nSongbirdFramework.prototype._createV1IframeModalElement = function (iframe) {\n  var modal = document.createElement(\"div\");\n\n  modal.innerHTML =\n    '<div data-braintree-v1-fallback-iframe-container=\"true\" style=\"' +\n    \"height: 400px;\" +\n    '\"></div>';\n  modal\n    .querySelector('[data-braintree-v1-fallback-iframe-container=\"true\"]')\n    .appendChild(iframe);\n\n  return modal;\n};\n\nSongbirdFramework.prototype._createV1IframeModal = function (iframe) {\n  var modal = this._createV1IframeModalElement(iframe);\n  var btn = modal.querySelector(\"[data-braintree-v1-fallback-close-button]\");\n  var backdrop = modal.querySelector(\"[data-braintree-v1-fallback-backdrop]\");\n  var self = this;\n\n  function closeHandler() {\n    modal.parentNode.removeChild(modal);\n    self.cancelVerifyCard(errors.THREEDS_CARDINAL_SDK_CANCELED);\n    document.removeEventListener(\"keyup\", self._onV1Keyup);\n    self._onV1Keyup = null;\n  }\n\n  this._onV1Keyup = function (e) {\n    if (e.key !== \"Escape\") {\n      return;\n    }\n\n    if (!modal.parentNode) {\n      // modal not on page\n      return;\n    }\n\n    closeHandler();\n  };\n\n  if (btn) {\n    btn.addEventListener(\"click\", closeHandler);\n  }\n\n  if (backdrop) {\n    backdrop.addEventListener(\"click\", closeHandler);\n  }\n\n  document.addEventListener(\"keyup\", this._onV1Keyup);\n\n  return modal;\n};\n\nSongbirdFramework.prototype._addV1IframeToPage = function () {\n  document.body.appendChild(this._v1Modal);\n};\n\nSongbirdFramework.prototype._handleAuthResponseFromV1Fallback = function (\n  data\n) {\n  this._teardownV1Elements();\n  this._v1Modal.parentNode.removeChild(this._v1Modal);\n  this._handleV1AuthResponse(data);\n};\n\nSongbirdFramework.prototype._presentChallengeWithV1Fallback = function (\n  lookupResponse\n) {\n  var self = this;\n\n  this._setupV1Elements({\n    lookupResponse: lookupResponse,\n    showLoader: true,\n    handleAuthResponse: function (data) {\n      self._handleAuthResponseFromV1Fallback(data);\n    },\n  });\n  this._v1Modal = this._createV1IframeModal(this._v1Iframe);\n  this._addV1IframeToPage();\n};\n\nSongbirdFramework.prototype.setupSongbird = function (setupOptions) {\n  var self = this;\n  var startTime = Date.now();\n\n  if (this._songbirdPromise) {\n    return this._songbirdPromise;\n  }\n\n  setupOptions = setupOptions || {};\n\n  this._songbirdPromise = new ExtendedPromise();\n  this._v2SetupFailureReason = \"reason-unknown\";\n\n  self\n    ._loadCardinalScript(setupOptions)\n    .then(function () {\n      if (!window.Cardinal) {\n        self._v2SetupFailureReason = \"cardinal-global-unavailable\";\n\n        return Promise.reject(\n          new BraintreeError(errors.THREEDS_CARDINAL_SDK_SETUP_FAILED)\n        );\n      }\n\n      return self._configureCardinalSdk({\n        setupOptions: setupOptions,\n        setupStartTime: startTime,\n      });\n    })\n    .catch(function (err) {\n      var error = convertToBraintreeError(err, {\n        type: errors.THREEDS_CARDINAL_SDK_SETUP_FAILED.type,\n        code: errors.THREEDS_CARDINAL_SDK_SETUP_FAILED.code,\n        message: errors.THREEDS_CARDINAL_SDK_SETUP_FAILED.message,\n      });\n\n      self._getDfReferenceIdPromisePlus.reject(error);\n\n      window.clearTimeout(self._songbirdSetupTimeoutReference);\n      analytics.sendEvent(\n        self._client,\n        \"three-d-secure.cardinal-sdk.init.setup-failed\"\n      );\n      self.initiateV1Fallback(\n        \"cardinal-sdk-setup-failed.\" + self._v2SetupFailureReason\n      );\n    });\n\n  return this._songbirdPromise;\n};\n\nSongbirdFramework.prototype._configureCardinalSdk = function (config) {\n  var self = this;\n\n  return this._waitForClient()\n    .then(function () {\n      var threeDSConfig =\n        self._client.getConfiguration().gatewayConfiguration.threeDSecure;\n\n      return threeDSConfig;\n    })\n    .then(function (threeDSConfig) {\n      var jwt = threeDSConfig.cardinalAuthenticationJWT;\n      var setupOptions = config.setupOptions;\n      var setupStartTime = config.setupStartTime;\n      var cardinalConfiguration =\n        self._createCardinalConfigurationOptions(setupOptions);\n\n      SONGBIRD_UI_EVENTS.forEach(function (eventName) {\n        self.setCardinalListener(eventName, function () {\n          self._emit(SongbirdFramework.events[eventName.toUpperCase()]);\n        });\n      });\n      self.setCardinalListener(\n        \"payments.setupComplete\",\n        self._createPaymentsSetupCompleteCallback()\n      );\n\n      self._setupFrameworkSpecificListeners();\n\n      window.Cardinal.configure(cardinalConfiguration);\n\n      window.Cardinal.setup(\"init\", {\n        jwt: jwt,\n      });\n\n      self._clientMetadata.cardinalDeviceDataCollectionTimeElapsed =\n        Date.now() - setupStartTime;\n\n      self.setCardinalListener(\n        \"payments.validated\",\n        self._createPaymentsValidatedCallback()\n      );\n    })\n    .catch(function (err) {\n      self._v2SetupFailureReason = \"cardinal-configuration-threw-error\";\n\n      return Promise.reject(err);\n    });\n};\n\nSongbirdFramework.prototype.setCardinalListener = function (eventName, cb) {\n  this._cardinalEvents.push(eventName);\n  window.Cardinal.on(eventName, cb);\n};\n\nSongbirdFramework.prototype._setupFrameworkSpecificListeners = function () {\n  // noop\n};\n\nSongbirdFramework.prototype._createCardinalConfigurationOptions = function (\n  setupOptions\n) {\n  var cardinalConfiguration = setupOptions.cardinalSDKConfig || {};\n  var paymentSettings = cardinalConfiguration.payment || {};\n\n  if (!cardinalConfiguration.logging && setupOptions.loggingEnabled) {\n    cardinalConfiguration.logging = {\n      level: \"verbose\",\n    };\n  }\n\n  cardinalConfiguration.payment = {};\n\n  if (paymentSettings.hasOwnProperty(\"displayLoading\")) {\n    cardinalConfiguration.payment.displayLoading =\n      paymentSettings.displayLoading;\n  }\n  if (paymentSettings.hasOwnProperty(\"displayExitButton\")) {\n    cardinalConfiguration.payment.displayExitButton =\n      paymentSettings.displayExitButton;\n  }\n\n  return cardinalConfiguration;\n};\n\nSongbirdFramework.prototype._loadCardinalScript = function (setupOptions) {\n  var self = this;\n\n  return this._waitForClient()\n    .then(function () {\n      var scriptSource = self._getCardinalScriptSource();\n\n      self._songbirdSetupTimeoutReference = window.setTimeout(function () {\n        analytics.sendEvent(\n          self._client,\n          \"three-d-secure.cardinal-sdk.init.setup-timeout\"\n        );\n        self.initiateV1Fallback(\"cardinal-sdk-setup-timeout\");\n      }, setupOptions.timeout || INTEGRATION_TIMEOUT_MS);\n\n      return assets.loadScript({ src: scriptSource });\n    })\n    .catch(function (err) {\n      self._v2SetupFailureReason = \"songbird-js-failed-to-load\";\n\n      return Promise.reject(\n        convertToBraintreeError(\n          err,\n          errors.THREEDS_CARDINAL_SDK_SCRIPT_LOAD_FAILED\n        )\n      );\n    });\n};\n\nSongbirdFramework.prototype._getCardinalScriptSource = function () {\n  var gatewayConfig = this._client.getConfiguration().gatewayConfiguration;\n\n  if (gatewayConfig && gatewayConfig.environment === \"production\") {\n    return constants.CARDINAL_SCRIPT_SOURCE.production;\n  }\n\n  return constants.CARDINAL_SCRIPT_SOURCE.sandbox;\n};\n\nSongbirdFramework.prototype._createPaymentsSetupCompleteCallback = function () {\n  var self = this;\n\n  return function (data) {\n    self._getDfReferenceIdPromisePlus.resolve(data.sessionId);\n\n    window.clearTimeout(self._songbirdSetupTimeoutReference);\n    analytics.sendEvent(\n      self._createPromise,\n      \"three-d-secure.cardinal-sdk.init.setup-completed\"\n    );\n\n    self._songbirdPromise.resolve();\n  };\n};\n\nSongbirdFramework.prototype.getDfReferenceId = function () {\n  return this._getDfReferenceIdPromisePlus;\n};\n\nSongbirdFramework.prototype._performJWTValidation = function (\n  rawCardinalSDKVerificationData,\n  jwt\n) {\n  var self = this;\n  var nonce = this._lookupPaymentMethod.nonce;\n  var url =\n    \"payment_methods/\" + nonce + \"/three_d_secure/authenticate_from_jwt\";\n  var cancelCode =\n    rawCardinalSDKVerificationData &&\n    rawCardinalSDKVerificationData.Payment &&\n    rawCardinalSDKVerificationData.Payment.ExtendedData &&\n    rawCardinalSDKVerificationData.Payment.ExtendedData.ChallengeCancel;\n\n  if (cancelCode) {\n    // see ChallengeCancel docs here for different values:\n    // https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/98315/Response+Objects\n    analytics.sendEvent(\n      this._createPromise,\n      \"three-d-secure.verification-flow.cardinal-sdk.cancel-code.\" + cancelCode\n    );\n\n    if (cancelCode === CUSTOMER_CANCELED_SONGBIRD_MODAL) {\n      this._emit(SongbirdFramework.events.CUSTOMER_CANCELED);\n    }\n  }\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"three-d-secure.verification-flow.upgrade-payment-method.started\"\n  );\n\n  return this._waitForClient()\n    .then(function () {\n      return self._client.request({\n        method: \"post\",\n        endpoint: url,\n        data: {\n          jwt: jwt,\n          paymentMethodNonce: nonce,\n        },\n      });\n    })\n    .then(function (response) {\n      var paymentMethod = response.paymentMethod || self._lookupPaymentMethod;\n      var formattedResponse = self._formatAuthResponse(\n        paymentMethod,\n        response.threeDSecureInfo\n      );\n\n      formattedResponse.rawCardinalSDKVerificationData =\n        rawCardinalSDKVerificationData;\n      analytics.sendEvent(\n        self._client,\n        \"three-d-secure.verification-flow.upgrade-payment-method.succeeded\"\n      );\n\n      return Promise.resolve(formattedResponse);\n    })\n    .catch(function (err) {\n      var error = new BraintreeError({\n        type: errors.THREEDS_JWT_AUTHENTICATION_FAILED.type,\n        code: errors.THREEDS_JWT_AUTHENTICATION_FAILED.code,\n        message: errors.THREEDS_JWT_AUTHENTICATION_FAILED.message,\n        details: {\n          originalError: err,\n        },\n      });\n\n      analytics.sendEvent(\n        self._client,\n        \"three-d-secure.verification-flow.upgrade-payment-method.errored\"\n      );\n\n      return Promise.reject(error);\n    });\n};\n\nSongbirdFramework.prototype._createPaymentsValidatedCallback = function () {\n  var self = this;\n\n  /**\n   * @param {object} data Response Data\n   * @see {@link https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/98315/Response+Objects#ResponseObjects-ObjectDefinition}\n   * @param {string} data.ActionCode The resulting state of the transaction.\n   * @param {boolean} data.Validated Represents whether transaction was successfully or not.\n   * @param {object} data.Payment Represents additional information about the verification.\n   * @param {number} data.ErrorNumber A non-zero value represents the error encountered while attempting the process the message request.\n   * @param {string} data.ErrorDescription Application error description for the associated error number.\n   * @param {string} validatedJwt Response JWT\n   * @returns {void}\n   * */\n  return function (data, validatedJwt) {\n    var formattedError;\n\n    if (self._useV1Fallback) {\n      // TODO since we've removed the listeners for the payments validated callback when initiating the v1 fallback,\n      // we should never get to this point. Leave this analtyics event in for now and review if that is indeed the\n      // case before removing this block.\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.cardinal-sdk.payments-validated-callback-called-in-v1-fallback-flow\"\n      );\n\n      return;\n    }\n\n    analytics.sendEvent(\n      self._createPromise,\n      \"three-d-secure.verification-flow.cardinal-sdk.action-code.\" +\n        data.ActionCode.toLowerCase()\n    );\n\n    if (!self._verifyCardPromisePlus) {\n      self.initiateV1Fallback(\n        \"cardinal-sdk-setup-error.number-\" + data.ErrorNumber\n      );\n\n      return;\n    }\n\n    switch (data.ActionCode) {\n      // Handle these scenarios based on liability shift information in the response.\n      case \"SUCCESS\":\n      case \"NOACTION\":\n      case \"FAILURE\":\n        self\n          ._performJWTValidation(data, validatedJwt)\n          .then(function (result) {\n            self._verifyCardPromisePlus.resolve(result);\n          })\n          .catch(function (err) {\n            self._verifyCardPromisePlus.reject(err);\n          });\n        break;\n\n      case \"ERROR\":\n        analytics.sendEvent(\n          self._createPromise,\n          \"three-d-secure.verification-flow.cardinal-sdk-error.\" +\n            data.ErrorNumber\n        );\n\n        switch (data.ErrorNumber) {\n          case 10001: // Cardinal Docs: Timeout when sending an /Init message\n          case 10002: // Cardinal Docs: Timeout when sending an /Start message\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_SETUP_TIMEDOUT\n            );\n            break;\n          case 10003: // Cardinal Docs: Timeout when sending an /Validate message. Although this code exists we do not yet have a flow where a validate message is sent to Midas. This error should not yet be triggered\n          case 10007: // Cardinal Docs: Timeout when sending an /Confirm message\n          case 10009: // Cardinal Docs: Timeout when sending an /Continue message\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_RESPONSE_TIMEDOUT\n            );\n            break;\n          case 10005: // Cardinal Docs: Songbird was started without a request jwt.\n          case 10006: // Cardinal Docs: This is a general configuration error. The description is populated by the specific configuration error that caused the error.\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_BAD_CONFIG\n            );\n            break;\n          case 10008: // Cardinal Docs: Songbird was initialized without a merchant JWT.\n          case 10010: // Cardinal Docs: The response JWT was\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_BAD_JWT\n            );\n            break;\n          case 10011:\n            // This may never get called, according to the Cardinal docs:\n            // The user has canceled the transaction. This is generally found in alternative\n            // payments that supply a cancel button on the payment brand side.\n            analytics.sendEvent(\n              self._createPromise,\n              \"three-d-secure.verification-flow.canceled\"\n            );\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_CANCELED\n            );\n            break;\n          default:\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_ERROR\n            );\n        }\n\n        formattedError.details = {\n          originalError: {\n            code: data.ErrorNumber,\n            description: data.ErrorDescription,\n          },\n        };\n\n        self._verifyCardPromisePlus.reject(formattedError);\n        break;\n\n      default:\n    }\n  };\n};\n\nSongbirdFramework.prototype._checkForVerifyCardError = function (\n  options,\n  privateOptions\n) {\n  if (!options.bin) {\n    return new BraintreeError({\n      type: errors.THREEDS_MISSING_VERIFY_CARD_OPTION.type,\n      code: errors.THREEDS_MISSING_VERIFY_CARD_OPTION.code,\n      message: \"verifyCard options must include a BIN.\",\n    });\n  }\n\n  return BaseFramework.prototype._checkForVerifyCardError.call(\n    this,\n    options,\n    privateOptions\n  );\n};\n\nSongbirdFramework.prototype._checkForFrameworkSpecificVerifyCardErrors =\n  function (options, privateOptions) {\n    var errorOption;\n\n    if (\n      typeof options.onLookupComplete !== \"function\" &&\n      !privateOptions.ignoreOnLookupCompleteRequirement\n    ) {\n      errorOption = \"an onLookupComplete function\";\n    }\n\n    return errorOption;\n  };\n\nSongbirdFramework.prototype._formatVerifyCardOptions = function (options) {\n  var modifiedOptions = BaseFramework.prototype._formatVerifyCardOptions.call(\n    this,\n    options\n  );\n  var additionalInformation = modifiedOptions.additionalInformation || {};\n\n  additionalInformation = this.transformBillingAddress(\n    additionalInformation,\n    options.billingAddress\n  );\n  additionalInformation = this.transformShippingAddress(additionalInformation);\n\n  if (options.onLookupComplete) {\n    modifiedOptions.onLookupComplete = deferred(options.onLookupComplete);\n  }\n  if (options.email) {\n    additionalInformation.email = options.email;\n  }\n  if (options.mobilePhoneNumber) {\n    additionalInformation.mobilePhoneNumber = options.mobilePhoneNumber;\n  }\n\n  modifiedOptions.additionalInformation = additionalInformation;\n\n  return modifiedOptions;\n};\n\nSongbirdFramework.prototype._onLookupComplete = function (\n  lookupResponse,\n  options\n) {\n  var self = this;\n\n  return BaseFramework.prototype._onLookupComplete\n    .call(this, lookupResponse)\n    .then(function (response) {\n      return new Promise(function (resolve, reject) {\n        // NEXT_MAJOR_VERSION format this response object to look like the mobile sdk response\n        // which is basically the lookup param at the top level with some additional accessors\n        response.requiresUserAuthentication = Boolean(\n          response.lookup && response.lookup.acsUrl\n        );\n\n        function next() {\n          resolve(response);\n        }\n\n        self._verifyCardPromisePlus.catch(reject);\n\n        // If both event and callback are mistakenly used together,\n        // prefer the callback when it is passed into the verifyCard options\n        if (options.onLookupComplete) {\n          options.onLookupComplete(response, next);\n        } else {\n          self._emit(SongbirdFramework.events.LOOKUP_COMPLETE, response, next);\n        }\n      });\n    });\n};\n\nSongbirdFramework.prototype._presentChallenge = function (lookupResponse) {\n  // transactionId is required for the Songbird flow, so if it\n  // does not exist, we fallback to the 3ds v1 flow\n  if (this._useV1Fallback || !lookupResponse.lookup.transactionId) {\n    this._presentChallengeWithV1Fallback(lookupResponse.lookup);\n\n    return;\n  }\n\n  // set up listener for ref id to call out to bt before calling verify callback\n  window.Cardinal.continue(\n    \"cca\",\n    {\n      AcsUrl: lookupResponse.lookup.acsUrl,\n      Payload: lookupResponse.lookup.pareq,\n    },\n    {\n      OrderDetails: { TransactionId: lookupResponse.lookup.transactionId },\n    }\n  );\n};\n\nSongbirdFramework.prototype._formatLookupData = function (options) {\n  var self = this;\n\n  return BaseFramework.prototype._formatLookupData\n    .call(this, options)\n    .then(function (data) {\n      data.additionalInfo = options.additionalInformation;\n\n      if (options.accountType) {\n        data.accountType = options.accountType;\n      }\n      if (options.challengeRequested) {\n        data.challengeRequested = options.challengeRequested;\n      }\n      if (options.requestedExemptionType) {\n        if (!SCA_EXEMPTION_TYPES.includes(options.requestedExemptionType)) {\n          throw new BraintreeError({\n            code: errors.THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID.code,\n            type: errors.THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID.type,\n            message:\n              \"requestedExemptionType `\" +\n              options.requestedExemptionType +\n              \"` is not a valid exemption. The accepted values are: `\" +\n              SCA_EXEMPTION_TYPES.join(\"`, `\") +\n              \"`\",\n          });\n        }\n        data.requestedExemptionType = options.requestedExemptionType;\n      }\n      if (options.customFields) {\n        data.customFields = options.customFields;\n      }\n      if (options.dataOnlyRequested) {\n        data.dataOnlyRequested = options.dataOnlyRequested;\n      }\n      if (options.exemptionRequested) {\n        data.exemptionRequested = options.exemptionRequested;\n      }\n      if (options.requestVisaDAF) {\n        data.requestVisaDAF = options.requestVisaDAF;\n      }\n      if (options.bin) {\n        data.bin = options.bin;\n      }\n      // NEXT_MAJOR_VERSION remove cardAdd in favor of cardAddChallengeRequested\n      if (options.cardAdd != null) {\n        data.cardAdd = options.cardAdd;\n      }\n      if (options.cardAddChallengeRequested != null) {\n        data.cardAdd = options.cardAddChallengeRequested;\n      }\n      if (options.merchantName) {\n        data.merchantName = options.merchantName;\n      }\n\n      return self.prepareLookup(data);\n    });\n};\n\nSongbirdFramework.prototype.cancelVerifyCard = function (verifyCardError) {\n  var self = this;\n\n  return BaseFramework.prototype.cancelVerifyCard\n    .call(this)\n    .then(function (response) {\n      if (self._verifyCardPromisePlus) {\n        verifyCardError =\n          verifyCardError ||\n          new BraintreeError(errors.THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT);\n\n        self._verifyCardPromisePlus.reject(verifyCardError);\n      }\n\n      return response;\n    });\n};\n\nSongbirdFramework.prototype._removeSongbirdListeners = function () {\n  this._cardinalEvents.forEach(function (eventName) {\n    window.Cardinal.off(eventName);\n  });\n\n  this._cardinalEvents = [];\n};\n\nSongbirdFramework.prototype.teardown = function () {\n  if (window.Cardinal) {\n    this._removeSongbirdListeners();\n  }\n\n  // we intentionally do not remove the Cardinal SDK\n  // from the page when tearing down. Subsequent\n  // component creations will be faster because\n  // the asset is already on the page\n\n  return BaseFramework.prototype.teardown.call(this);\n};\n\nSongbirdFramework.prototype._reloadThreeDSecure = function () {\n  var self = this;\n  var startTime = Date.now();\n\n  return self.teardown().then(function () {\n    self._configureCardinalSdk({\n      setupOptions: self.originalSetupOptions,\n      setupStartTime: startTime,\n    });\n  });\n};\n\nfunction extractAddressData(source, target, prefix) {\n  target[prefix + \"Line1\"] = source.streetAddress;\n  target[prefix + \"Line2\"] = source.extendedAddress;\n  target[prefix + \"Line3\"] = source.line3;\n  target[prefix + \"City\"] = source.locality;\n  target[prefix + \"State\"] = source.region;\n  target[prefix + \"PostalCode\"] = source.postalCode;\n  target[prefix + \"CountryCode\"] = source.countryCodeAlpha2;\n}\n\nmodule.exports = SongbirdFramework;\n\n},{\"../../../lib/analytics\":86,\"../../../lib/assets\":87,\"../../../lib/assign\":88,\"../../../lib/braintree-error\":91,\"../../../lib/constants\":92,\"../../../lib/convert-to-braintree-error\":94,\"../../../lib/deferred\":98,\"../../../lib/enumerate\":100,\"../../shared/constants\":141,\"../../shared/errors\":142,\"./base\":132,\"@braintree/extended-promise\":38}],139:[function(require,module,exports){\n\"use strict\";\n\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar methods = require(\"../../lib/methods\");\nvar convertMethodsToError = require(\"../../lib/convert-methods-to-error\");\nvar EventEmitter = require(\"@braintree/event-emitter\");\nvar FRAMEWORKS = require(\"./frameworks\");\n\n/**\n * @deprecated\n * @callback ThreeDSecure~addFrameCallback\n * @param {?BraintreeError} [err] `null` or `undefined` if there was no error.\n * @param {HTMLIFrameElement} iframe An iframe element containing the bank's authentication page that you must put on your page.\n * @description **Deprecated** The callback used for options.addFrame in 3DS 1.0's {@link ThreeDSecure#verifyCard|verifyCard}.\n * @returns {void}\n */\n\n/**\n * @deprecated\n * @callback ThreeDSecure~removeFrameCallback\n * @description **Deprecated** The callback used for options.removeFrame in 3DS 1.0's {@link ThreeDSecure#verifyCard|verifyCard}.\n * @returns {void}\n */\n\n/**\n * @deprecated\n * @typedef {object} ThreeDSecure~verifyCardCustomerObject\n * @property {string} [customer.mobilePhoneNumber] The mobile phone number used for verification. Only numbers; remove dashes, parenthesis and other characters.\n * @property {string} [customer.email] The email used for verification.\n * @property {string} [customer.shippingMethod] The 2-digit string indicating the shipping method chosen for the transaction.\n * @property {string} [customer.billingAddress.firstName] The first name associated with the address.\n * @property {string} [customer.billingAddress.lastName] The last name associated with the address.\n * @property {string} [customer.billingAddress.streetAddress] Line 1 of the Address (eg. number, street, etc).\n * @property {string} [customer.billingAddress.extendedAddress] Line 2 of the Address (eg. suite, apt #, etc.).\n * @property {string} [customer.billingAddress.locality] The locality (city) name associated with the address.\n * @property {string} [customer.billingAddress.region] The 2 letter code for US states or an ISO-3166-2 country subdivision code of up to three letters.\n * @property {string} [customer.billingAddress.postalCode] The zip code or equivalent for countries that have them.\n * @property {string} [customer.billingAddress.countryCodeAlpha2] The 2 character country code.\n * @property {string} [customer.billingAddress.phoneNumber] The phone number associated with the address. Only numbers; remove dashes, parenthesis and other characters.\n * @description **Deprecated** Optional customer information to be passed to 3DS 1.0 for verification.\n */\n\n/**\n * @typedef {object} ThreeDSecure~verifyPayload\n * @property {string} nonce The new payment method nonce produced by the 3D Secure lookup. The original nonce passed into {@link ThreeDSecure#verifyCard|verifyCard} was consumed. This new nonce should be used to transact on your server.\n * @property {string} type The payment method type.\n * @property {object} details Additional account details.\n * @property {string} details.cardType Type of card, ex: Visa, MasterCard.\n * @property {string} details.lastFour Last four digits of card number.\n * @property {string} details.lastTwo Last two digits of card number.\n * @property {string} description A human-readable description.\n * @property {object} binData Information about the card based on the bin.\n * @property {string} binData.commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.countryOfIssuance The country of issuance.\n * @property {string} binData.debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.issuingBank The issuing bank.\n * @property {string} binData.payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.productId The product id.\n * @property {boolean} liabilityShiftPossible *Deprecated:* Use `threeDSecureInfo.liabilityShiftPossible` instead.\n * @property {boolean} liabilityShifted *Deprecated:* Use `threeDSecureInfo.liabilityShifted` instead.\n * @property {object} threeDSecureInfo 3DS information about the card. Note: This information should be verified on the server by using the [payment method nonce find method](https://developer.paypal.com/braintree/docs/reference/request/payment-method-nonce/find). The values provided here are merely for convenience. Only values looked up on the server should determine the logic about how to process a transaction.\n * @property {string} threeDSecureInfo.acsTransactionId The transaction identifier from the issuing bank.\n * @property {string} threeDSecureInfo.cavv Cardholder authentication verification value or CAVV. The main encrypted message issuers and card networks use to verify authentication has occurred. Mastercard uses an AVV message and American Express uses an AEVV message, each of which should also be passed in the cavv parameter.\n * @property {string} threeDSecureInfo.dsTransactionId Transaction identifier resulting from 3D Secure 2 authentication.\n * @property {string} threeDSecureInfo.eciFlag The value of the electronic commerce indicator (ECI) flag, which indicates the outcome of the 3DS authentication. This will be a two-digit value.\n * @property {boolean} threeDSecureInfo.enrolled Indicates the status of 3D Secure authentication eligibility with the card issuer.\n * @property {boolean} threeDSecureInfo.liabilityShifted Indicates whether the liability for fraud has been shifted away from the merchant.\n * @property {boolean} threeDSecureInfo.liabilityShiftPossible Indicates whether liability shift is still possible on a retry.\n * @property {string} threeDSecureInfo.paresStatus Transaction status result identifier.\n * @property {string} threeDSecureInfo.status Indicates the outcome of the 3D Secure event.\n * @property {string} threeDSecureInfo.threeDSecureAuthenticationId ID of the 3D Secure authentication performed for this transaction. Do not provide this field as a transaction sale parameter if you are using the returned payment method nonce from the payload.\n * @property {string} threeDSecureInfo.threeDSecureServerTransactionId Transaction identifier provided by the issuing bank who recieved the 3D Secure event.\n * @property {string} threeDSecureInfo.threeDSecureVersion The version of 3D Secure authentication used for the transaction.\n * @property {string} threeDSecureInfo.xid Transaction identifier resulting from 3D Secure authentication. Uniquely identifies the transaction and sometimes required in the authorization message. This is a base64-encoded value. This field will no longer be used in 3D Secure 2 authentications for Visa and Mastercard, however it will be supported by American Express.\n * @property {string} threeDSecureInfo.lookup.transStatus Error code returned from the 3D Secure MPI provider.\n * @property {string} threeDSecureInfo.lookup.transStatusReason Description correlating to the transStatus error code.\n * @property {string} threeDSecureInfo.authentication.transStatus Error code returned from the 3D Secure MPI provider.\n * @property {string} threeDSecureInfo.authentication.transStatusReason Description correlating to the transStatus error code.\n * @property {object} rawCardinalSDKVerificationData The response back from the Cardinal SDK after verification has completed. See [Cardinal's Documentation](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/98315/Response+Objects) for more information. If the customer was not required to do a 3D Secure challenge, this object will not be available.\n */\n\n/**\n * @typedef {string} ThreeDSecure~prepareLookupPayload The client data to pass on when doing a server side lookup call.\n */\n\n/**\n * @typedef {object} ThreeDSecure~verificationData\n * @property {boolean} requiresUserAuthentication When `true`, the user will be presented with a 3D Secure challenge when calling `next` in the {@link ThreeDSecure#event:lookup-complete|`lookup-complete` event}.\n * @property {object} threeDSecureInfo Contains liability shift details.\n * @property {boolean} threeDSecureInfo.liabilityShiftPossible Indicates whether the card was eligible for 3D Secure.\n * @property {boolean} threeDSecureInfo.liabilityShifted Indicates whether the liability for fraud has been shifted away from the merchant.\n * @property {object} paymentMethod A {@link ThreeDSecure~verifyPayload|verifyPayload} object.\n * @property {object} lookup Details about the 3D Secure lookup.\n * @property {string} lookup.threeDSecureVersion The version of 3D Secure that will be used for the 3D Secure challenge.\n */\n\n/**\n * @typedef {object} ThreeDSecure~billingAddress\n * @property {string} [givenName] The first name associated with the billing address. (maximum length 50, ASCII characters)\n * @property {string} [surname] The last name associated with the billing address. (maximum length 50, ASCII characters)\n * @property {string} [phoneNumber] The phone number associated with the billing address. Only numbers; remove dashes, parenthesis and other characters.\n * @property {string} [streetAddress] Line 1 of the billing address (eg. number, street, etc). (maximum length 50)\n * @property {string} [extendedAddress] Line 2 of the billing address (eg. suite, apt #, etc.). (maximum length 50)\n * @property {string} [line3] Line 3 of the billing address if needed (eg. suite, apt #, etc). (maximum length 50)\n * @property {string} [locality] The locality (city) name associated with the billing address.\n * @property {string} [region] This field expects an ISO3166-2 subdivision code. The subdivision code is what follows the hyphen separator in the full ISO 3166-2 code. For example, the state of Ohio in the United States we expect \"OH\" as opposed to the full ISO 3166-2 code \"US-OH\".\n * @property {string} [postalCode] The zip code or equivalent for countries that have them.\n * @property {string} [countryCodeAlpha2] The 2 character country code.\n */\n\n/**\n * @typedef {object} ThreeDSecure~additionalInformation\n * @property {string} [workPhoneNumber] The work phone number used for verification. Only numbers; remove dashes, parenthesis and other characters. (maximum length 25)\n * @property {string} [shippingGivenName] The first name associated with the shipping address. (maximum length 50, ASCII characters)\n * @property {string} [shippingSurname] The last name associated with the shipping address. (maximum length 50, ASCII characters)\n * @property {object} [shippingAddress]\n * @property {string} [shippingAddress.streetAddress] Line 1 of the shipping address (eg. number, street, etc). (maximum length 50)\n * @property {string} [shippingAddress.extendedAddress] Line 2 of the shipping address (eg. suite, apt #, etc.). (maximum length 50)\n * @property {string} [shippingAddress.line3] Line 3 of the shipping address if needed (eg. suite, apt #, etc). (maximum length 50)\n * @property {string} [shippingAddress.locality] The locality (city) name associated with the shipping address. (maximum length 50)\n * @property {string} [shippingAddress.region] This field expects an ISO3166-2 subdivision code. The subdivision code is what follows the hyphen separator in the full ISO 3166-2 code. For example, the state of Ohio in the United States we expect \"OH\" as opposed to the full ISO 3166-2 code \"US-OH\".\n * @property {string} [shippingAddress.postalCode] The zip code or equivalent for countries that have them. (maximum length 10)\n * @property {string} [shippingAddress.countryCodeAlpha2] The 2 character country code. (maximum length 2)\n * @property {string} [shippingPhone] The phone number associated with the shipping address. Only numbers; remove dashes, parenthesis and other characters. (maximum length 20)\n * @property {string} [shippingMethod] The 2-digit string indicating the name of the shipping method chosen for the transaction. (maximum length 50) Possible values:\n * - `01` Same Day\n * - `02` Overnight / Expedited\n * - `03` Priority (2-3 Days)\n * - `04` Ground\n * - `05` Electronic Delivery\n * - `06` Ship to Store\n * @property {string} [shippingMethodIndicator] The 2-digit string indicating the shipping method chosen for the transaction Possible values.\n * - `01` Ship to cardholder billing address\n * - `02` Ship to another verified address on file with merchant\n * - `03` Ship to address that is different from billing address\n * - `04` Ship to store (store address should be populated on request)\n * - `05` Digital goods\n * - `06` Travel and event tickets, not shipped\n * - `07` Other\n * @property {string} [productCode] The 3-letter string representing the merchant product code. Possible values:\n * - `AIR` Airline\n * - `GEN` General Retail\n * - `DIG` Digital Goods\n * - `SVC` Services\n * - `RES` Restaurant\n * - `TRA` Travel\n * - `DSP` Cash Dispensing\n * - `REN` Car Rental\n * - `GAS` Fuel\n * - `LUX` Luxury Retail\n * - `ACC` Accommodation Retail\n * - `TBD` Other\n * @property {string} [deliveryTimeframe] The 2-digit number indicating the delivery time frame. Possible values:\n * - `01` Electronic delivery\n * - `02` Same day shipping\n * - `03` Overnight shipping\n * - `04` Two or more day shipping\n * @property {string} [deliveryEmail] For electronic delivery, email address to which the merchandise was delivered. (maximum length 254)\n * @property {string} [reorderindicator] The 2-digit number indicating whether the cardholder is reordering previously purchased merchandise. possible values:\n * - `01` First time ordered\n * - `02` Reordered\n * @property {string} [preorderIndicator] The 2-digit number indicating whether cardholder is placing an order with a future availability or release date. possible values:\n * - `01` Merchandise available\n * - `02` Future availability\n * @property {string} [preorderDate] The 8-digit number (format: YYYYMMDD) indicating expected date that a pre-ordered purchase will be available.\n * @property {string} [giftCardAmount] The purchase amount total for prepaid gift cards in major units. (maximum length 15)\n * @property {string} [giftCardCurrencyCode] ISO 4217 currency code for the gift card purchased. (maximum length 3)\n * @property {string} [giftCardCount] Total count of individual prepaid gift cards purchased. (maximum length 2)\n * @property {string} [accountAgeIndicator] The 2-digit value representing the length of time cardholder has had account. Possible values:\n * - `01` No Account\n * - `02` Created during transaction\n * - `03` Less than 30 days\n * - `04` 30-60 days\n * - `05` More than 60 days\n * @property {string} [accountCreateDate] The 8-digit number (format: YYYYMMDD) indicating the date the cardholder opened the account.\n * @property {string} [accountChangeIndicator] The 2-digit value representing the length of time since the last change to the cardholder account. This includes shipping address, new payment account or new user added. Possible values:\n * - `01` Changed during transaction\n * - `02` Less than 30 days\n * - `03` 30-60 days\n * - `04` More than 60 days\n * @property {string} [accountChangeDate] The 8-digit number (format: YYYYMMDD) indicating the date the cardholder's account was last changed. This includes changes to the billing or shipping address, new payment accounts or new users added.\n * @property {string} [accountPwdChangeIndicator] The 2-digit value representing the length of time since the cardholder changed or reset the password on the account. Possible values:\n * - `01` No change\n * - `02` Changed during transaction\n * - `03` Less than 30 days\n * - `04` 30-60 days\n * - `05` More than 60 days\n * @property {string} [accountPwdChangeDate] The 8-digit number (format: YYYYMMDD) indicating the date the cardholder last changed or reset password on account.\n * @property {string} [shippingAddressUsageIndicator] The 2-digit value indicating when the shipping address used for transaction was first used. Possible values:\n * - `01` This transaction\n * - `02` Less than 30 days\n * - `03` 30-60 days\n * - `04` More than 60 days\n * @property {string} [shippingAddressUsageDate] The 8-digit number (format: YYYYMMDD) indicating the date when the shipping address used for this transaction was first used.\n * @property {string} [transactionCountDay] Number of transactions (successful or abandoned) for this cardholder account within the last 24 hours. (maximum length 3)\n * @property {string} [transactionCountYear] Number of transactions (successful or abandoned) for this cardholder account within the last year. (maximum length 3)\n * @property {string} [addCardAttempts] Number of add card attempts in the last 24 hours. (maximum length 3)\n * @property {string} [accountPurchases] Number of purchases with this cardholder account during the previous six months.\n * @property {string} [fraudActivity] The 2-digit value indicating whether the merchant experienced suspicious activity (including previous fraud) on the account. Possible values:\n * - `01` No suspicious activity\n * - `02` Suspicious activity observed\n * @property {string} [shippingNameIndicator] The 2-digit value indicating if the cardholder name on the account is identical to the shipping name used for the transaction. Possible values:\n * - `01` Account and shipping name identical\n * - `02` Account and shipping name differ\n * @property {string} [paymentAccountIndicator] The 2-digit value indicating the length of time that the payment account was enrolled in the merchant account. Possible values:\n * - `01` No account (guest checkout)\n * - `02` During the transaction\n * - `03` Less than 30 days\n * - `04` 30-60 days\n * - `05` More than 60 days\n * @property {string} [paymentAccountAge] The 8-digit number (format: YYYYMMDD) indicating the date the payment account was added to the cardholder account.\n * @property {string} [acsWindowSize] The 2-digit number to set the challenge window size to display to the end cardholder.  The ACS will reply with content that is formatted appropriately to this window size to allow for the best user experience.  The sizes are width x height in pixels of the window displayed in the cardholder browser window. Possible values:\n * - `01` 250x400\n * - `02` 390x400\n * - `03` 500x600\n * - `04` 600x400\n * - `05` Full page\n * @property {string} [sdkMaxTimeout] The 2-digit number of minutes (minimum 05) to set the maximum amount of time for all 3DS 2.0 messages to be communicated between all components.\n * @property {string} [addressMatch] The 1-character value (Y/N) indicating whether cardholder billing and shipping addresses match.\n * @property {string} [accountId] Additional cardholder account information. (maximum length 64)\n * @property {string} [ipAddress] The IP address of the consumer. IPv4 and IPv6 are supported.\n * - only one IP address supported\n * - only numbers, letters, period '.' chars, or colons ':' are acceptable\n * @property {string} [orderDescription] Brief description of items purchased. (maximum length 256)\n * @property {string} [taxAmount] Unformatted tax amount without any decimalization (ie. $123.67 = 12367). (maximum length 20)\n * @property {string} [userAgent] The exact content of the HTTP user agent header. (maximum length 500)\n * @property {string} [authenticationIndicator] The 2-digit number indicating the type of authentication request. Possible values:\n *  - `01` Payment\n *  - `02` Recurring transaction\n *  - `03` Installment\n *  - `04` Add card\n *  - `05` Maintain card\n *  - `06` Cardholder verification as part of EMV token ID&V\n * @property {string} [installment] An integer value greater than 1 indicating the maximum number of permitted authorizations for installment payments. (maximum length 3)\n * @property {string} [purchaseDate] The 14-digit number (format: YYYYMMDDHHMMSS) indicating the date in UTC of original purchase.\n * @property {string} [recurringEnd] The 8-digit number (format: YYYYMMDD) indicating the date after which no further recurring authorizations should be performed.\n * @property {string} [recurringFrequency] Integer value indicating the minimum number of days between recurring authorizations. A frequency of monthly is indicated by the value 28. Multiple of 28 days will be used to indicate months (ex. 6 months = 168). (maximum length 3)\n */\n\n/**\n * @name ThreeDSecure#on\n * @function\n * @param {string} event The name of the event to which you are subscribing.\n * @param {function} handler A callback to handle the event.\n * @description Subscribes a handler function to a named event. The following events are available:\n *   * {@link ThreeDSecure#event:lookup-complete|lookup-complete}\n *   * {@link ThreeDSecure#event:customer-canceled|customer-canceled}\n *   * {@link ThreeDSecure#event:authentication-iframe-available|authentication-iframe-available}\n *   * {@link ThreeDSecure#event:authentication-modal-render|authentication-modal-render}\n *   * {@link ThreeDSecure#event:authentication-modal-close|authentication-modal-close}\n * @example\n * <caption>Listening to a 3D Secure event</caption>\n * braintree.threeDSecure.create({ ... }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('lookup-complete', function (data, next) {\n *     console.log('data from the lookup', data);\n *     next();\n *   });\n *   threeDSecureInstance.on('customer-canceled', function () {\n *     console.log('log that the customer canceled');\n *   });\n * });\n * @returns {void}\n */\n\n/**\n * @name ThreeDSecure#off\n * @function\n * @param {string} event The name of the event to which you are unsubscribing.\n * @param {function} handler The callback for the event you are unsubscribing from.\n * @description Unsubscribes the handler function to a named event.\n * @example\n * <caption>Subscribing and then unsubscribing from a 3D Secure eld event</caption>\n * braintree.threeDSecure.create({ ... }, function (createErr, threeDSecureInstance) {\n *   var lookupCallback = function (data, next) {\n *     console.log(data);\n *     next();\n *   };\n *   var cancelCallback = function () {\n *     // log the cancelation\n *     // or update UI\n *   };\n *\n *   threeDSecureInstance.on('lookup-complete', lookupCallback);\n *   threeDSecureInstance.on('customer-canceled', cancelCallback);\n *\n *   // later on\n *   threeDSecureInstance.off('lookup-complete', lookupCallback);\n *   threeDSecureInstance.off('customer-canceled', cancelCallback);\n * });\n * @returns {void}\n */\n\n/**\n * This event is emitted when the `2-inline-iframe` version is specified when creating the 3D Secure instance and the authentication iframe becomes available.\n * @event ThreeDSecure#authentication-iframe-available\n * @example\n * <caption>Listening for the authentication iframe to be available</caption>\n *   threeDSecureInstance.on('authentication-iframe-available', function (event, next) {\n *     document.body.appendChild(event.element); // add iframe element to page\n *\n *     next(); // let the SDK know the iframe is ready\n *   });\n * });\n */\n\n/**\n * This event is emitted when using the 3D Secure 2.0 flow and the initial lookup request completes. If this is not used, a `onLookupComplete` callback must be passed into the `verifyCard` method.\n * @event ThreeDSecure#lookup-complete\n * @example\n * <caption>Listening for when the lookup request is complete</caption>\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('lookup-complete', function (data, next) {\n *     // inspect the data\n *\n *     // call next when ready to proceed with the challenge\n *     next();\n *   });\n * });\n */\n\n/**\n * This event is emitted when using the 3D Secure 2.0 flow and the customer cancels the 3D Secure challenge.\n * @event ThreeDSecure#customer-canceled\n * @example\n * <caption>Listening for when the customer cancels the 3D Secure challenge</caption>\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('customer-canceled', function () {\n *     // the customer canceled the 3D Secure challenge\n *   });\n * });\n */\n\n/**\n * This event is emitted when using the 3D Secure 2.0 flow and the authentication modal closes, either because the authentication was completed or because the customer canceled the process.\n * @event ThreeDSecure#authentication-modal-close\n * @example\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('authentication-modal-close', function () {\n *     // the modal was closed\n *   });\n * });\n */\n\n/**\n * This event is emitted when using the 3D Secure 2.0 flow and the authentication modal is rendered.\n * @event ThreeDSecure#authentication-modal-render\n * @example\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('authentication-modal-render', function () {\n *     // the modal was rendered, presenting the authentication form to the customer\n *   });\n * });\n */\n\n/**\n * @class\n * @param {object} options 3D Secure {@link module:braintree-web/three-d-secure.create create} options\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/three-d-secure.create|braintree.threeDSecure.create} instead.</strong>\n * @classdesc This class represents a ThreeDSecure component produced by {@link module:braintree-web/three-d-secure.create|braintree.threeDSecure.create}. Instances of this class have a method for launching a 3D Secure authentication flow.\n *\n * If you use the Braintree SDK from within an iframe, you must not use the `sandbox` attribute on your iframe or the 3D Secure modal will not function correctly.\n *\n * **Note**: 3D Secure 2.0 is documented below and will become the default integration method in a future version of Braintree-web. Until then, version 1.0 will continue to be supported. To view 3D Secure 1.0 documentation, look at Braintree-web documentation from version [3.40.0](https://braintree.github.io/braintree-web/3.40.0/ThreeDSecure.html) and earlier, or upgrade your integration by referring to the [3D Secure 2.0 adoption guide](https://developer.paypal.com/braintree/docs/guides/3d-secure/migration/javascript/v3).\n */\nfunction ThreeDSecure(options) {\n  var self = this;\n  var Framework = FRAMEWORKS[options.framework];\n\n  EventEmitter.call(this);\n\n  this._framework = new Framework(options);\n  this._framework.setUpEventListeners(function () {\n    self._emit.apply(self, arguments);\n  });\n}\n\nEventEmitter.createChild(ThreeDSecure);\n// NEXT_MAJOR_VERSION remove exemptionRequested entirely in favor of `requestedExemptionType`\n/**\n * Launch the 3D Secure login flow, returning a nonce payload.\n *\n * @public\n * @param {object} options Options for card verification.\n * @param {string} options.nonce The nonce representing the card from a tokenization payload. For example, this can be a {@link HostedFields~tokenizePayload|tokenizePayload} returned by Hosted Fields under `payload.nonce`.\n * @param {string} options.bin The numeric Bank Identification Number (bin) of the card from a tokenization payload. For example, this can be a {@link HostedFields~tokenizePayload|tokenizePayload} returned by Hosted Fields under `payload.details.bin`.\n * @param {string} options.amount The amount of the transaction in the current merchant account's currency. This must be expressed in numbers with an optional decimal (using `.`) and precision up to the hundredths place. For example, if you're processing a transaction for 1.234,56 € then `amount` should be `1234.56`.\n * @param {string} [options.accountType] The account type for the card (if known). Accepted values: `credit` or `debit`.\n * @param {boolean} [options.cardAddChallengeRequested] If set to `true`, a card-add challenge will be requested from the issuer. If set to `false`, a card-add challenge will not be requested. If the param is missing, a card-add challenge will only be requested for $0 amount. An authentication created using this flag should only be used for vaulting operations (creation of customers' credit cards or payment methods) and not for creating transactions.\n * @param {boolean} [options.cardAdd] *Deprecated:* Use `cardAddChallengeRequested` instead.\n * @param {boolean} [options.challengeRequested] If set to true, an authentication challenge will be forced if possible.\n * @param {boolean} [options.dataOnlyRequested] Indicates whether to use the data only flow. In this flow, frictionless 3DS is ensured for Mastercard cardholders as the card scheme provides a risk score for the issuer to determine whether to approve. If data only is not supported by the processor, a validation error will be raised. Non-Mastercard cardholders will fallback to a normal 3DS flow.\n * @param {boolean} [options.exemptionRequested] *Deprecated:* Use `requestedExemptionType` instead.\n * @param {boolean} [options.requestVisaDAF] Request to use VISA Digital Authentication Framework. If set to true, a Visa DAF authenticated payment credential will be created and/or used for authentication if the merchant is eligible.\n * @param {string} [options.merchantName] Allows to override the merchant name that is shown in the challenge.\n * @param {string} [options.requestedExemptionType] If an exemption is requested and the exemption's conditions are satisfied, then it will be applied. The following supported exemptions are defined as per PSD2 regulation: `low_value`, `transaction_risk_analysis`\n * @param {object} [options.customFields] Object where each key is the name of a custom field which has been configured in the Control Panel. In the Control Panel you can configure 3D Secure Rules which trigger on certain values.\n * @param {function} [options.onLookupComplete] *Deprecated:* Use {@link ThreeDSecure#event:lookup-complete|`threeDSecureInstance.on('lookup-complete')`} instead. Function to execute when lookup completes. The first argument, `data`, is a {@link ThreeDSecure~verificationData|verificationData} object, and the second argument, `next`, is a callback. `next` must be called to continue.\n * @param {string} [options.email] The email used for verification. (maximum length 255)\n * @param {string} [options.mobilePhoneNumber] The mobile phone number used for verification. Only numbers; remove dashes, parenthesis and other characters. (maximum length 25)\n * @param {object} [options.billingAddress] An {@link ThreeDSecure~billingAddress|billingAddress} object for verification.\n * @param {object} [options.additionalInformation] An {@link ThreeDSecure~additionalInformation|additionalInformation} object for verification.\n * @param {object} [options.collectDeviceData] If set to `true`, device data such as browser screen dimensions, language and time zone is submitted with lookup data.\n * @param {object} [options.customer] **Deprecated** Customer information for use in 3DS 1.0 verifications. Can contain any subset of a {@link ThreeDSecure~verifyCardCustomerObject|verifyCardCustomerObject}. Only to be used for 3DS 1.0 integrations.\n * @param {callback} options.addFrame **Deprecated** This {@link ThreeDSecure~addFrameCallback|addFrameCallback} will be called when the bank frame needs to be added to your page. Only to be used for 3DS 1.0 integrations.\n * @param {callback} options.removeFrame **Deprecated** For use in 3DS 1.0 Flows. This {@link ThreeDSecure~removeFrameCallback|removeFrameCallback} will be called when the bank frame needs to be removed from your page. Only to be used in 3DS 1.0 integrations.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link ThreeDSecure~verifyPayload|verifyPayload}. If no callback is provided, it will return a promise that resolves {@link ThreeDSecure~verifyPayload|verifyPayload}.\n\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * <caption>Verifying a payment method nonce with 3DS 2.0</caption>\n * var my3DSContainer;\n *\n * // set up listener after initialization\n * threeDSecure.on(('lookup-complete', function (data, next) {\n *   // use `data` here, then call `next()`\n *   next();\n * });\n *\n * // call verifyCard after tokenizing a card\n * threeDSecure.verifyCard({\n *   amount: '123.45',\n *   nonce: hostedFieldsTokenizationPayload.nonce,\n *   bin: hostedFieldsTokenizationPayload.details.bin,\n *   email: 'test@example.com'\n *   billingAddress: {\n *     givenName: 'Jill',\n *     surname: 'Doe',\n *     phoneNumber: '8101234567',\n *     streetAddress: '555 Smith St.',\n *     extendedAddress: '#5',\n *     locality: 'Oakland',\n *     region: 'CA',\n *     postalCode: '12345',\n *     countryCodeAlpha2: 'US'\n *   },\n *   additionalInformation: {\n *     workPhoneNumber: '5555555555',\n *     shippingGivenName: 'Jill',\n *     shippingSurname: 'Doe',\n *     shippingAddress: {\n *       streetAddress: '555 Smith st',\n *       extendedAddress: '#5',\n *       locality: 'Oakland',\n *       region: 'CA',\n *       postalCode: '12345',\n *       countryCodeAlpha2: 'US'\n *     }\n *     shippingPhone: '8101234567'\n *   }\n * }, function (err, payload) {\n *   if (err) {\n *     console.error(err);\n *     return;\n *   }\n *\n *   if (payload.liabilityShifted) {\n *     // Liability has shifted\n *     submitNonceToServer(payload.nonce);\n *   } else if (payload.liabilityShiftPossible) {\n *     // Liability may still be shifted\n *     // Decide if you want to submit the nonce\n *   } else {\n *     // Liability has not shifted and will not shift\n *     // Decide if you want to submit the nonce\n *   }\n * });\n * @example\n * <caption>Verifying a payment method nonce with 3DS 2.0 with onLookupComplete callback</caption>\n * var my3DSContainer;\n *\n * threeDSecure.verifyCard({\n *   amount: '123.45',\n *   nonce: hostedFieldsTokenizationPayload.nonce,\n *   bin: hostedFieldsTokenizationPayload.details.bin,\n *   email: 'test@example.com'\n *   billingAddress: {\n *     givenName: 'Jill',\n *     surname: 'Doe',\n *     phoneNumber: '8101234567',\n *     streetAddress: '555 Smith St.',\n *     extendedAddress: '#5',\n *     locality: 'Oakland',\n *     region: 'CA',\n *     postalCode: '12345',\n *     countryCodeAlpha2: 'US'\n *   },\n *   additionalInformation: {\n *     workPhoneNumber: '5555555555',\n *     shippingGivenName: 'Jill',\n *     shippingSurname: 'Doe',\n *     shippingAddress: {\n *       streetAddress: '555 Smith st',\n *       extendedAddress: '#5',\n *       locality: 'Oakland',\n *       region: 'CA',\n *       postalCode: '12345',\n *       countryCodeAlpha2: 'US'\n *     }\n *     shippingPhone: '8101234567'\n *   },\n *   onLookupComplete: function (data, next) {\n *     // use `data` here, then call `next()`\n *     next();\n *   }\n * }, function (err, payload) {\n *   if (err) {\n *     console.error(err);\n *     return;\n *   }\n *\n *   if (payload.liabilityShifted) {\n *     // Liability has shifted\n *     submitNonceToServer(payload.nonce);\n *   } else if (payload.liabilityShiftPossible) {\n *     // Liability may still be shifted\n *     // Decide if you want to submit the nonce\n *   } else {\n *     // Liability has not shifted and will not shift\n *     // Decide if you want to submit the nonce\n *   }\n * });\n * @example\n * <caption>Handling 3DS lookup errors</caption>\n * var my3DSContainer;\n *\n * // set up listener after initialization\n * threeDSecure.on(('lookup-complete', function (data, next) {\n *   // use `data` here, then call `next()`\n *   next();\n * });\n *\n * // call verifyCard after tokenizing a card\n * threeDSecure.verifyCard({\n *   amount: '123.45',\n *   nonce: hostedFieldsTokenizationPayload.nonce,\n *   bin: hostedFieldsTokenizationPayload.details.bin,\n *   email: 'test@example.com',\n *   billingAddress: billingAddressFromCustomer,\n *   additionalInformation: additionalInfoFromCustomer\n * }, function (err, payload) {\n *   if (err) {\n *     if (err.code.indexOf('THREEDS_LOOKUP') === 0) {\n *       // an error occurred during the initial lookup request\n *\n *       if (err.code === 'THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR') {\n *         // either the passed payment method nonce does not exist\n *         // or it was already consumed before the lookup call was made\n *       } else if (err.code.indexOf('THREEDS_LOOKUP_VALIDATION') === 0) {\n *         // a validation error occurred\n *         // likely some non-ascii characters were included in the billing\n *         // address given name or surname fields, or the cardholdername field\n *\n *         // Instruct your user to check their data and try again\n *       } else {\n *         // an unknown lookup error occurred\n *       }\n *     } else {\n *       // some other kind of error\n *     }\n *     return;\n *   }\n *\n *   // handle success\n * });\n */\nThreeDSecure.prototype.verifyCard = function (options) {\n  var privateOptions;\n\n  if (this.hasListener(\"lookup-complete\")) {\n    privateOptions = {\n      ignoreOnLookupCompleteRequirement: true,\n    };\n  }\n\n  return this._framework.verifyCard(options, privateOptions);\n};\n\n/* eslint-disable-next-line valid-jsdoc */\n/**\n * Launch the iframe challenge using a 3D Secure lookup response from a server side lookup.\n *\n * @public\n * @param {(object|string)} lookupResponse The lookup response from the server side call to lookup the 3D Secure information. The raw string or a parsed object can be passed.\n * @returns {Promise} Returns a promise.\n * @example\n * var my3DSContainer;\n *\n * threeDSecure.initializeChallengeWithLookupResponse(lookupResponseFromServer).then(function (payload) {\n *   if (payload.liabilityShifted) {\n *     // Liability has shifted\n *     submitNonceToServer(payload.nonce);\n *   } else if (payload.liabilityShiftPossible) {\n *     // Liability may still be shifted\n *     // Decide if you want to submit the nonce\n *   } else {\n *     // Liability has not shifted and will not shift\n *     // Decide if you want to submit the nonce\n *   }\n * });\n */\nThreeDSecure.prototype.initializeChallengeWithLookupResponse = function (\n  lookupResponse\n) {\n  if (typeof lookupResponse === \"string\") {\n    lookupResponse = JSON.parse(lookupResponse);\n  }\n\n  return this._framework.initializeChallengeWithLookupResponse(lookupResponse);\n};\n\n/**\n * Gather the data needed for a 3D Secure lookup call.\n *\n * @public\n * @param {object} options Options for 3D Secure lookup.\n * @param {string} options.nonce The nonce representing the card from a tokenization payload. For example, this can be a {@link HostedFields~tokenizePayload|tokenizePayload} returned by Hosted Fields under `payload.nonce`.\n * @param {string} options.bin The numeric Bank Identification Number (bin) of the card from a tokenization payload. For example, this can be a {@link HostedFields~tokenizePayload|tokenizePayload} returned by Hosted Fields under `payload.details.bin`.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link ThreeDSecure~prepareLookupPayload|prepareLookupPayload}. If no callback is provided, it will return a promise that resolves {@link ThreeDSecure~prepareLookupPayload|prepareLookupPayload}.\n\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * <caption>Preparing data for a 3D Secure lookup</caption>\n * threeDSecure.prepareLookup({\n *   nonce: hostedFieldsTokenizationPayload.nonce,\n *   bin: hostedFieldsTokenizationPayload.details.bin\n * }, function (err, payload) {\n *   if (err) {\n *     console.error(err);\n *     return;\n *   }\n *\n *   // send payload to server to do server side lookup\n * });\n */\nThreeDSecure.prototype.prepareLookup = function (options) {\n  return this._framework.prepareLookup(options).then(function (data) {\n    return JSON.stringify(data);\n  });\n};\n\n/**\n * Cancel the 3DS flow and return the verification payload if available. If using 3D Secure version 2, this will not close the UI of the authentication modal. It is recommended that this method only be used in the {@link ThreeDSecure#event:lookup-complete|`lookup-complete`} event or the `onLookupComplete` callback.\n * @public\n * @param {callback} [callback] The second argument is a {@link ThreeDSecure~verifyPayload|verifyPayload}. If there is no verifyPayload (the initial lookup did not complete), an error will be returned. If no callback is passed, `cancelVerifyCard` will return a promise.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example <caption>Cancel the verification in `lookup-complete` event</caption>\n * // set up listener after instantiation\n * threeDSecure.on('lookup-complete', function (data, next) {\n *   // determine if you want to call next to start the challenge,\n *   // if not, call cancelVerifyCard\n *   threeDSecure.cancelVerifyCard(function (err, verifyPayload) {\n *     if (err) {\n *       // Handle error\n *       console.log(err.message); // No verification payload available\n *       return;\n *     }\n *\n *     verifyPayload.nonce; // The nonce returned from the 3ds lookup call\n *     verifyPayload.liabilityShifted; // boolean\n *     verifyPayload.liabilityShiftPossible; // boolean\n *   });\n * });\n *\n * // after tokenizing a credit card\n * threeDSecure.verifyCard({\n *   amount: '100.00',\n *   nonce: nonceFromTokenizationPayload,\n *   bin: binFromTokenizationPayload\n *   // other fields such as billing address\n * }, function (verifyError, payload) {\n *   if (verifyError) {\n *     if (verifyError.code === 'THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT ') {\n *       // flow was canceled by merchant, 3ds info can be found in the payload\n *       // for cancelVerifyCard\n *     }\n *   }\n * });\n * @example <caption>Cancel the verification in onLookupComplete callback</caption>\n * threeDSecure.verifyCard({\n *   amount: '100.00',\n *   nonce: nonceFromTokenizationPayload,\n *   bin: binFromTokenizationPayload,\n *   // other fields such as billing address\n *   onLookupComplete: function (data, next) {\n *     // determine if you want to call next to start the challenge,\n *     // if not, call cancelVerifyCard\n *     threeDSecure.cancelVerifyCard(function (err, verifyPayload) {\n *       if (err) {\n *         // Handle error\n *         console.log(err.message); // No verification payload available\n *         return;\n *       }\n *\n *       verifyPayload.nonce; // The nonce returned from the 3ds lookup call\n *       verifyPayload.liabilityShifted; // boolean\n *       verifyPayload.liabilityShiftPossible; // boolean\n *     });\n *   }\n * }, function (verifyError, payload) {\n *   if (verifyError) {\n *     if (verifyError.code === 'THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT ') {\n *       // flow was canceled by merchant, 3ds info can be found in the payload\n *       // for cancelVerifyCard\n *     }\n *   }\n * });\n * @example <caption>Cancel the verification in 3D Secure version 1</caption>\n * // unlike with v2, this will not cause `verifyCard` to error, it will simply\n * // never call the callback\n * threeDSecure.cancelVerifyCard(function (err, verifyPayload) {\n *   if (err) {\n *     // Handle error\n *     console.log(err.message); // No verification payload available\n *     return;\n *   }\n *\n *   verifyPayload.nonce; // The nonce returned from the 3ds lookup call\n *   verifyPayload.liabilityShifted; // boolean\n *   verifyPayload.liabilityShiftPossible; // boolean\n * });\n */\nThreeDSecure.prototype.cancelVerifyCard = function () {\n  return this._framework.cancelVerifyCard();\n};\n\n/**\n * Cleanly remove anything set up by {@link module:braintree-web/three-d-secure.create|create}, with the exception that the Cardinal SDK, on window.Cardinal, will remain.\n * @public\n * @param {callback} [callback] Called on completion. If no callback is passed, `teardown` will return a promise.\n * @example\n * threeDSecure.teardown();\n * @example <caption>With callback</caption>\n * threeDSecure.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nThreeDSecure.prototype.teardown = function () {\n  var methodNames = methods(ThreeDSecure.prototype).concat(\n    methods(EventEmitter.prototype)\n  );\n\n  convertMethodsToError(this, methodNames);\n\n  return this._framework.teardown();\n};\n\nmodule.exports = wrapPromise.wrapPrototype(ThreeDSecure);\n\n},{\"../../lib/convert-methods-to-error\":93,\"../../lib/methods\":121,\"./frameworks\":135,\"@braintree/event-emitter\":37,\"@braintree/wrap-promise\":47}],140:[function(require,module,exports){\n\"use strict\";\n/** @module braintree-web/three-d-secure */\n\nvar ThreeDSecure = require(\"./external/three-d-secure\");\nvar isHTTPS = require(\"../lib/is-https\").isHTTPS;\nvar basicComponentVerification = require(\"../lib/basic-component-verification\");\nvar createDeferredClient = require(\"../lib/create-deferred-client\");\nvar createAssetsUrl = require(\"../lib/create-assets-url\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar analytics = require(\"../lib/analytics\");\nvar errors = require(\"./shared/errors\");\nvar VERSION = \"3.99.0\";\nvar wrapPromise = require(\"@braintree/wrap-promise\");\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {object} [options.cardinalSDKConfig] A config for the underlying Cardinal SDK.\n * @param {object} [options.cardinalSDKConfig.logging] The logging configuration for the Cardinal SDK. See [Cardinal's documentation for the logging object](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/1409568/Configurations#Configurations-Logging) for more information.\n * @param {number} [options.cardinalSDKConfig.timeout] The time in milliseconds to wait before a request to Cardinal's API times out. See [Cardinal's documentation for root level configuration](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/1409568/Configurations#Configurations-RootLevelConfiguration) for more information.\n * @param {number} [options.cardinalSDKConfig.maxRequestRetries] How many times a request should be re-attempted to Cardinal's API before giving up as a failure. See [Cardinal's documentation for root level configuration](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/1409568/Configurations#Configurations-RootLevelConfiguration) for more information.\n * @param {object} [options.cardinalSDKConfig.payment] An object to describe how you want the user interactions to behave. Only a subset of the [Cardinal SDK payment configuration object](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/1409568/Configurations#Configurations-Payment) are supported: `displayLoading` and `displayExitButton`.\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {(number|string)} [options.version=1] The version of 3D Secure to use. Possible options:\n * * 1 - The legacy 3D Secure v1.0 integration.\n * * 2 - A 3D Secure v2.0 integration that uses a modal to host the 3D Secure iframe.\n * * 2-bootstrap3-modal - A 3D Secure v2.0 integration that uses a modal styled with Bootstrap 3 styles to host the 3D Secure iframe. Requires having the Bootstrap 3 script files and stylesheets on your page.\n * * 2-inline-iframe - A 3D Secure v2.0 integration that provides the authentication iframe directly to the merchant.\n * @param {callback} [callback] The second argument, `data`, is the {@link ThreeDSecure} instance. If no callback is provided, it returns a promise that resolves the {@link ThreeDSecure} instance.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n@example\n * <caption>Creating a v2 3D Secure component using 2 version (Cardinal modal)</caption>\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createError, threeDSecure) {\n *   // set up lookup-complete listener\n *   threeDSecure.on('lookup-complete', function (data, next) {\n *     // check lookup data\n *\n *     next();\n *   });\n *\n *   // using Hosted Fields, use `tokenize` to get back a credit card nonce\n *\n *   threeDSecure.verifyCard({\n *     nonce: nonceFromTokenizationPayload,,\n *     bin: binFromTokenizationPayload,\n *     amount: '100.00'\n *   }, function (verifyError, payload) {\n *     // inspect payload\n *     // send payload.nonce to your server\n *   });\n * });\n * @example\n * <caption>Creating a v2 3D Secure component using 2-bootstrap3-modal version</caption>\n * // must have the boostrap js, css and jquery files on your page\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2-bootstrap3-modal'\n * }, function (createError, threeDSecure) {\n *   // set up lookup-complete listener\n *   threeDSecure.on('lookup-complete', function (data, next) {\n *     // check lookup data\n *\n *     next();\n *   });\n *\n *   // using Hosted Fields, use `tokenize` to get back a credit card nonce\n *\n *   // challenge will be presented in a bootstrap 3 modal\n *   threeDSecure.verifyCard({\n *     nonce: nonceFromTokenizationPayload,\n *     bin: binFromTokenizationPayload,\n *     amount: '100.00'\n *   }, function (verifyError, payload) {\n *     // inspect payload\n *     // send payload.nonce to your server\n *   });\n * });\n * @example\n * <caption>Creating a v2 3D Secure component using 2-inline-iframe version</caption>\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2-inline-iframe'\n * }, function (createError, threeDSecure) {\n *   // set up lookup-complete listener\n *   threeDSecure.on('lookup-complete', function (data, next) {\n *     // check lookup data\n *\n *     next();\n *   });\n *   // set up iframe listener\n *   threeDSecure.on('authentication-iframe-available', function (event, next) {\n *     var element = event.element; // an html element that contains the iframe\n *\n *     document.body.appendChild(element); // put it on your page\n *\n *     next(); // let the sdk know the element has been added to the page\n *   });\n *\n *   // using Hosted Fields, use `tokenize` to get back a credit card nonce\n *\n *   threeDSecure.verifyCard({\n *     nonce: nonceFromTokenizationPayload,,\n *     bin: binFromTokenizationPayload,\n *     amount: '100.00'\n *   }, function (verifyError, payload) {\n *     // inspect payload\n *     // send payload.nonce to your server\n *   });\n * });\n */\nfunction create(options) {\n  var name = \"3D Secure\";\n  var framework = getFramework(options);\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var assetsUrl = createAssetsUrl.create(options.authorization);\n      var createPromise = createDeferredClient\n        .create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: assetsUrl,\n          name: name,\n        })\n        .then(function (client) {\n          var error, isProduction;\n          var config = client.getConfiguration();\n          var gwConfig = config.gatewayConfiguration;\n\n          options.client = client;\n\n          if (!gwConfig.threeDSecureEnabled) {\n            error = errors.THREEDS_NOT_ENABLED;\n          }\n\n          if (config.authorizationType === \"TOKENIZATION_KEY\") {\n            error = errors.THREEDS_CAN_NOT_USE_TOKENIZATION_KEY;\n          }\n\n          isProduction = gwConfig.environment === \"production\";\n\n          if (isProduction && !isHTTPS()) {\n            error = errors.THREEDS_HTTPS_REQUIRED;\n          }\n\n          if (\n            framework !== \"legacy\" &&\n            !(\n              gwConfig.threeDSecure &&\n              gwConfig.threeDSecure.cardinalAuthenticationJWT\n            )\n          ) {\n            analytics.sendEvent(\n              options.client,\n              \"three-d-secure.initialization.failed.missing-cardinalAuthenticationJWT\"\n            );\n            error = errors.THREEDS_NOT_ENABLED_FOR_V2;\n          }\n\n          if (error) {\n            return Promise.reject(new BraintreeError(error));\n          }\n\n          analytics.sendEvent(options.client, \"three-d-secure.initialized\");\n\n          return client;\n        });\n      var instance = new ThreeDSecure({\n        client: options.client,\n        assetsUrl: assetsUrl,\n        createPromise: createPromise,\n        loggingEnabled: options.loggingEnabled,\n        cardinalSDKConfig: options.cardinalSDKConfig,\n        framework: framework,\n      });\n\n      if (options.client) {\n        return createPromise.then(function () {\n          return instance;\n        });\n      }\n\n      return instance;\n    });\n}\n\nfunction getFramework(options) {\n  var version = String(options.version || \"\");\n\n  if (!version || version === \"1\") {\n    throw new BraintreeError({\n      code: errors.THREEDS_UNSUPPORTED_VERSION.code,\n      type: errors.THREEDS_UNSUPPORTED_VERSION.type,\n      message: errors.THREEDS_UNSUPPORTED_VERSION.message,\n    });\n  }\n\n  switch (version) {\n    case \"2\":\n    case \"2-cardinal-modal\":\n      return \"cardinal-modal\";\n    case \"2-bootstrap3-modal\":\n      return \"bootstrap3-modal\";\n    case \"2-inline-iframe\":\n      return \"inline-iframe\";\n    default:\n      throw new BraintreeError({\n        code: errors.THREEDS_UNRECOGNIZED_VERSION.code,\n        type: errors.THREEDS_UNRECOGNIZED_VERSION.type,\n        message:\n          \"Version `\" +\n          options.version +\n          \"` is not a recognized version. You may need to update the version of your Braintree SDK to support this version.\",\n      });\n  }\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n\n},{\"../lib/analytics\":86,\"../lib/basic-component-verification\":89,\"../lib/braintree-error\":91,\"../lib/create-assets-url\":95,\"../lib/create-deferred-client\":97,\"../lib/is-https\":118,\"./external/three-d-secure\":139,\"./shared/errors\":142,\"@braintree/wrap-promise\":47}],141:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n  LANDING_FRAME_NAME: \"braintreethreedsecurelanding\",\n  CARDINAL_SCRIPT_SOURCE: {\n    production: \"https://songbird.cardinalcommerce.com/edge/v1/songbird.js\",\n    sandbox: \"https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js\",\n  },\n};\n\n},{}],142:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.3D Secure - Creation Error Codes\n * @description Errors that occur when [creating the 3D Secure component](./module-braintree-web_three-d-secure.html#.create).\n * @property {MERCHANT} THREEDS_NOT_ENABLED Occurs when 3D Secure is not enabled in the Braintree control panel.\n * @property {MERCHANT} THREEDS_CAN_NOT_USE_TOKENIZATION_KEY Occurs when 3D Secure component is created without a Client Token.\n * @property {MERCHANT} THREEDS_HTTPS_REQUIRED Occurs when 3D Secure component is created in production over HTTPS.\n * @property {MERCHANT} THREEDS_NOT_ENABLED_FOR_V2 Occurs when 3D Secure component is created with version 2 parameter, but merchant is not enabled to use version 2.\n * @property {MERCHANT} THREEDS_UNRECOGNIZED_VERSION Occurs when unrecognized version enum is passed into the create call.\n * @property {UNKNOWN} THREEDS_CARDINAL_SDK_SETUP_FAILED Occurs when Cardinal's Songbird.js library fails to setup for an unknown reason.\n * @property {NETWORK} THREEDS_CARDINAL_SDK_SCRIPT_LOAD_FAILED Occurs when using version 2 and Cardinal's Songbird.js script could not be loaded.\n * @property {UNKNOWN} THREEDS_CARDINAL_SDK_SETUP_TIMEDOUT Occurs when Cardinal's Songbird.js library takes longer than 60 seconds to set up.\n * @property {UNKNOWN} THREEDS_CARDINAL_SDK_RESPONSE_TIMEDOUT Occurs when Cardinal sends a response indicating a timeout on /Validate, /Confirm, or /Continue.\n * @property {MERCHANT} THREEDS_CARDINAL_SDK_BAD_CONFIG Occurs when there is no JWT in the request. Also when there's some other malformed aspect of config.\n * @property {MERCHANT} THREEDS_CARDINAL_SDK_BAD_JWT Occurs when a malformed config causes a either a missing response JWT or a malformed Cardinal response.\n * @property {UNKNOWN} THREEDS_CARDINAL_SDK_ERROR Occurs when a \"general error\" or a Cardinal hosted fields error happens. Description contains more details.\n * @property {CUSTOMER} THREEDS_CARDINAL_SDK_CANCELED Occurs when customer cancels the transaction mid-flow, usually with alt-pays that have their own cancel buttons.\n * @property {MERCHANT} THREEDS_UNSUPPORTED_VERSION Occurs when 3D Secure component is created with version 1 (or default version) parameter.\n */\n\n/**\n * @name BraintreeError.3D Secure - verifyCard Error Codes\n * @description Errors that occur when using the [`verifyCard` method](./ThreeDSecure.html#verifyCard).\n * @property {MERCHANT} THREEDS_AUTHENTICATION_IN_PROGRESS Occurs when another verification is already in progress.\n * @property {MERCHANT} THREEDS_MISSING_VERIFY_CARD_OPTION Occurs when a required option is missing.\n * @property {UNKNOWN} THREEDS_JWT_AUTHENTICATION_FAILED Occurs when something went wrong authenticating the JWT from the Cardinal SDK.\n * @property {MERCHANT} THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR Occurs when the supplied payment method nonce does not exist or the payment method nonce has already been consumed.\n * @property {CUSTOMER} THREEDS_LOOKUP_VALIDATION_ERROR Occurs when a validation error occurs during the 3D Secure lookup.\n * @property {UNKNOWN} THREEDS_LOOKUP_ERROR An unknown error occurred while attempting the 3D Secure lookup.\n * @property {MERCHANT} THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT Occurs when the 3D Secure flow is canceled by the merchant using `cancelVerifyCard` (3D Secure v2 flows only).\n * @property {UNKNOWN} THREEDS_INLINE_IFRAME_DETAILS_INCORRECT An unknown error occurred while attempting to use the inline iframe framework.\n * @property {MERCHANT} THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID Occurs when unrecognized exemption enum value is passed into verifyCard.\n */\n\n/**\n * @name BraintreeError.3D Secure - cancelVerifyCard Error Codes\n * @description Errors that occur when using the [`cancelVerifyCard` method](./ThreeDSecure.html#cancelVerifyCard).\n * @property {MERCHANT} THREEDS_NO_VERIFICATION_PAYLOAD Occurs when the 3D Secure flow is canceled, but there is no 3D Secure information available.\n */\n\n/**\n * @name BraintreeError.3D Secure - Internal Error Codes\n * @ignore\n * @description Errors that occur internally\n * @property {INTERNAL} THREEDS_TERM_URL_REQUIRES_BRAINTREE_DOMAIN Occurs when iframe is initialized on a non-verified domain.\n * @property {INTERNAL} THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED Occurs when a 3D Secure framework method is not implemented.\n */\n\nvar BraintreeError = require(\"../../lib/braintree-error\");\n\nmodule.exports = {\n  THREEDS_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_NOT_ENABLED\",\n    message: \"3D Secure is not enabled for this merchant.\",\n  },\n  THREEDS_CAN_NOT_USE_TOKENIZATION_KEY: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_CAN_NOT_USE_TOKENIZATION_KEY\",\n    message: \"3D Secure can not use a tokenization key for authorization.\",\n  },\n  THREEDS_HTTPS_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_HTTPS_REQUIRED\",\n    message: \"3D Secure requires HTTPS.\",\n  },\n  THREEDS_NOT_ENABLED_FOR_V2: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_NOT_ENABLED_FOR_V2\",\n    message:\n      \"3D Secure version 2 is not enabled for this merchant. Contact Braintree Support for assistance at https://help.braintreepayments.com/\",\n  },\n  THREEDS_UNRECOGNIZED_VERSION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_UNRECOGNIZED_VERSION\",\n  },\n  THREEDS_CARDINAL_SDK_SETUP_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_CARDINAL_SDK_SETUP_FAILED\",\n    message: \"Something went wrong setting up Cardinal's Songbird.js library.\",\n  },\n  THREEDS_CARDINAL_SDK_SCRIPT_LOAD_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"THREEDS_CARDINAL_SDK_SCRIPT_LOAD_FAILED\",\n    message: \"Cardinal's Songbird.js library could not be loaded.\",\n  },\n  THREEDS_CARDINAL_SDK_SETUP_TIMEDOUT: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_CARDINAL_SDK_SETUP_TIMEDOUT\",\n    message: \"Cardinal's Songbird.js took too long to setup.\",\n  },\n  THREEDS_CARDINAL_SDK_RESPONSE_TIMEDOUT: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_CARDINAL_SDK_RESPONSE_TIMEDOUT\",\n    message: \"Cardinal's API took too long to respond.\",\n  },\n  THREEDS_CARDINAL_SDK_BAD_CONFIG: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_CARDINAL_SDK_BAD_CONFIG\",\n    message:\n      \"JWT or other required field missing. Please check your setup configuration.\",\n  },\n  THREEDS_CARDINAL_SDK_BAD_JWT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_CARDINAL_SDK_BAD_JWT\",\n    message:\n      \"Cardinal JWT missing or malformed. Please check your setup configuration.\",\n  },\n  THREEDS_CARDINAL_SDK_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_CARDINAL_SDK_ERROR\",\n    message:\n      \"A general error has occurred with Cardinal. See description for more information.\",\n  },\n  THREEDS_CARDINAL_SDK_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"THREEDS_CARDINAL_SDK_CANCELED\",\n    message: \"Canceled by user.\",\n  },\n  THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT\",\n    message: \"3D Secure verfication canceled by merchant.\",\n  },\n  THREEDS_AUTHENTICATION_IN_PROGRESS: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_AUTHENTICATION_IN_PROGRESS\",\n    message:\n      \"Cannot call verifyCard while existing authentication is in progress.\",\n  },\n  THREEDS_MISSING_VERIFY_CARD_OPTION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_MISSING_VERIFY_CARD_OPTION\",\n  },\n  THREEDS_JWT_AUTHENTICATION_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_JWT_AUTHENTICATION_FAILED\",\n    message: \"Something went wrong authenticating the JWT from Cardinal\",\n  },\n  THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR\",\n    message:\n      \"Either the payment method nonce passed to `verifyCard` does not exist, or it was already consumed\",\n  },\n  THREEDS_LOOKUP_VALIDATION_ERROR: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"THREEDS_LOOKUP_VALIDATION_ERROR\",\n    message:\n      \"The data passed in `verifyCard` did not pass validation checks. See details for more info\",\n  },\n  THREEDS_LOOKUP_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_LOOKUP_ERROR\",\n    message: \"Something went wrong during the 3D Secure lookup\",\n  },\n  THREEDS_INLINE_IFRAME_DETAILS_INCORRECT: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_INLINE_IFRAME_DETAILS_INCORRECT\",\n    message:\n      \"Something went wrong when attempting to add the authentication iframe to the page.\",\n  },\n  THREEDS_NO_VERIFICATION_PAYLOAD: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_NO_VERIFICATION_PAYLOAD\",\n    message: \"No verification payload available.\",\n  },\n  THREEDS_TERM_URL_REQUIRES_BRAINTREE_DOMAIN: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"THREEDS_TERM_URL_REQUIRES_BRAINTREE_DOMAIN\",\n    message: \"Term Url must be on a Braintree domain.\",\n  },\n  THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED\",\n    message: \"Method not implemented for this framework.\",\n  },\n  THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID\",\n    message: \"Requested Exemption Type is invalid.\",\n  },\n  THREEDS_UNSUPPORTED_VERSION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_UNSUPPORTED_VERSION\",\n    message:\n      \"3D Secure `1` is deprecated and no longer supported. See available versions at https://braintree.github.io/braintree-web/current/module-braintree-web_three-d-secure.html#.create\",\n  },\n};\n\n},{\"../../lib/braintree-error\":91}],143:[function(require,module,exports){\n\"use strict\";\n\nvar enumerate = require(\"../../lib/enumerate\");\n\nmodule.exports = enumerate([\"AUTHENTICATION_COMPLETE\"], \"threedsecure:\");\n\n},{\"../../lib/enumerate\":100}],144:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.Vault Manager - deletePaymentMethod Error Codes\n * @description Errors that occur when using the [`deletePaymentMethod` method](./VaultManager.html#deletePaymentMethod).\n * @property {MERCHANT} VAULT_MANAGER_DELETE_PAYMENT_METHOD_NONCE_REQUIRES_CLIENT_TOKEN Occurs when vault manager is initialized with a tokenization key instead of a Client Token.\n * @property {MERCHANT} VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND Occurs when the specified payment method can not be found.\n * @property {UNKNOWN} VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR Occurs when there is an error attempting to delete the payment method.\n */\n\nvar BraintreeError = require(\"../lib/braintree-error\");\n\nmodule.exports = {\n  VAULT_MANAGER_DELETE_PAYMENT_METHOD_NONCE_REQUIRES_CLIENT_TOKEN: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VAULT_MANAGER_DELETE_PAYMENT_METHOD_NONCE_REQUIRES_CLIENT_TOKEN\",\n    message:\n      \"A client token with a customer id must be used to delete a payment method nonce.\",\n  },\n  VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND\",\n  },\n  VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR\",\n  },\n};\n\n},{\"../lib/braintree-error\":91}],145:[function(require,module,exports){\n\"use strict\";\n/**\n * @module braintree-web/vault-manager\n * @description Manages customer's payment methods.\n */\n\nvar basicComponentVerification = require(\"../lib/basic-component-verification\");\nvar createDeferredClient = require(\"../lib/create-deferred-client\");\nvar createAssetsUrl = require(\"../lib/create-assets-url\");\nvar VaultManager = require(\"./vault-manager\");\nvar VERSION = \"3.99.0\";\nvar wrapPromise = require(\"@braintree/wrap-promise\");\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {callback} callback The second argument, `data`, is the {@link VaultManager} instance.\n * @returns {void}\n */\nfunction create(options) {\n  var name = \"Vault Manager\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      return new VaultManager({\n        createPromise: createDeferredClient.create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: createAssetsUrl.create(options.authorization),\n          name: name,\n        }),\n      });\n    });\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n\n},{\"../lib/basic-component-verification\":89,\"../lib/create-assets-url\":95,\"../lib/create-deferred-client\":97,\"./vault-manager\":146,\"@braintree/wrap-promise\":47}],146:[function(require,module,exports){\n\"use strict\";\n\nvar analytics = require(\"../lib/analytics\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar errors = require(\"./errors\");\nvar convertMethodsToError = require(\"../lib/convert-methods-to-error\");\nvar methods = require(\"../lib/methods\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\n\nvar DELETE_PAYMENT_METHOD_MUTATION =\n  \"mutation DeletePaymentMethodFromSingleUseToken($input: DeletePaymentMethodFromSingleUseTokenInput!) {\" +\n  \"  deletePaymentMethodFromSingleUseToken(input: $input) {\" +\n  \"    clientMutationId\" +\n  \"  }\" +\n  \"}\";\n\n/**\n * @typedef {array} VaultManager~fetchPaymentMethodsPayload The customer's payment methods.\n * @property {object} paymentMethod The payment method object.\n * @property {string} paymentMethod.nonce A nonce that can be sent to your server to transact on the payment method.\n * @property {boolean} paymentMethod.default Whether or not this is the default payment method for the customer.\n * @property {object} paymentMethod.details Any additional details about the payment method. Varies depending on the type of payment method.\n * @property {string} paymentMethod.type A constant indicating the type of payment method.\n * @property {?string} paymentMethod.description Additional description about the payment method.\n * @property {?object} paymentMethod.binData Bin data about the payment method.\n *\n */\n\n/**\n * @class\n * @param {object} options Options\n * @description <strong>You cannot use this constructor directly. Use {@link module:braintree-web/vault-manager.create|braintree.vault-manager.create} instead.</strong>\n * @classdesc This class allows you to manage a customer's payment methods on the client.\n */\nfunction VaultManager(options) {\n  this._createPromise = options.createPromise;\n}\n\n/**\n * Fetches payment methods owned by the customer whose id was used to generate the client token used to create the {@link module:braintree-web/client|client}.\n * @public\n * @param {object} [options] Options for fetching payment methods.\n * @param {boolean} [options.defaultFirst = false] If `true`, the payment methods will be returned with the default payment method for the customer first. Otherwise, order is not guaranteed.\n * @param {callback} [callback] The second argument is a {@link VaultManager~fetchPaymentMethodsPayload|fetchPaymentMethodsPayload}. This is also what is resolved by the promise if no callback is provided.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * vaultManagerInstance.fetchPaymentMethods(function (err, paymentMethods) {\n *   paymentMethods.forEach(function (paymentMethod) {\n *     // add payment method to UI\n *     // paymentMethod.nonce <- transactable nonce associated with payment method\n *     // paymentMethod.details <- object with additional information about payment method\n *     // paymentMethod.type <- a constant signifying the type\n *   });\n * });\n */\nVaultManager.prototype.fetchPaymentMethods = function (options) {\n  var defaultFirst;\n\n  options = options || {};\n\n  defaultFirst = options.defaultFirst === true ? 1 : 0;\n\n  return this._createPromise\n    .then(function (client) {\n      return client.request({\n        endpoint: \"payment_methods\",\n        method: \"get\",\n        data: {\n          defaultFirst: defaultFirst,\n        },\n      });\n    })\n    .then(\n      function (paymentMethodsPayload) {\n        analytics.sendEvent(\n          this._createPromise,\n          \"vault-manager.fetch-payment-methods.succeeded\"\n        );\n\n        return paymentMethodsPayload.paymentMethods.map(\n          formatPaymentMethodPayload\n        );\n      }.bind(this)\n    );\n};\n\n/**\n * Deletes a payment method owned by the customer whose id was used to generate the client token used to create the {@link module:braintree-web/client|client}.\n * @public\n * @param {string} paymentMethodNonce The payment method nonce that references a vaulted payment method.\n * @param {callback} [callback] No data is returned if the operation is successful.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * vaultManagerInstance.deletePaymentMethod('nonce-to-delete', function (err) {\n *   // handle err if it exists\n * });\n */\nVaultManager.prototype.deletePaymentMethod = function (paymentMethodNonce) {\n  return this._createPromise.then(function (client) {\n    var usesClientToken =\n      client.getConfiguration().authorizationType === \"CLIENT_TOKEN\";\n\n    if (!usesClientToken) {\n      return Promise.reject(\n        new BraintreeError(\n          errors.VAULT_MANAGER_DELETE_PAYMENT_METHOD_NONCE_REQUIRES_CLIENT_TOKEN\n        )\n      );\n    }\n\n    return client\n      .request({\n        api: \"graphQLApi\",\n        data: {\n          query: DELETE_PAYMENT_METHOD_MUTATION,\n          variables: {\n            input: {\n              singleUseTokenId: paymentMethodNonce,\n            },\n          },\n          operationName: \"DeletePaymentMethodFromSingleUseToken\",\n        },\n      })\n      .then(function () {\n        analytics.sendEvent(\n          client,\n          \"vault-manager.delete-payment-method.succeeded\"\n        );\n\n        // noop to prevent sending back the raw graphql data\n      })\n      .catch(function (error) {\n        var originalError = error.details.originalError;\n        var formattedError;\n\n        analytics.sendEvent(\n          client,\n          \"vault-manager.delete-payment-method.failed\"\n        );\n\n        if (\n          originalError[0] &&\n          originalError[0].extensions.errorClass === \"NOT_FOUND\"\n        ) {\n          formattedError = new BraintreeError({\n            type: errors.VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND.type,\n            code: errors.VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND.code,\n            message:\n              \"A payment method for payment method nonce `\" +\n              paymentMethodNonce +\n              \"` could not be found.\",\n            details: {\n              originalError: originalError,\n            },\n          });\n        }\n\n        if (!formattedError) {\n          formattedError = new BraintreeError({\n            type: errors.VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR.type,\n            code: errors.VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR.code,\n            message:\n              \"An unknown error occured when attempting to delete the payment method assocaited with the payment method nonce `\" +\n              paymentMethodNonce +\n              \"`.\",\n            details: {\n              originalError: originalError,\n            },\n          });\n        }\n\n        return Promise.reject(formattedError);\n      });\n  });\n};\n\nfunction formatPaymentMethodPayload(paymentMethod) {\n  var formattedPaymentMethod = {\n    nonce: paymentMethod.nonce,\n    default: paymentMethod.default,\n    details: paymentMethod.details,\n    hasSubscription: paymentMethod.hasSubscription,\n    type: paymentMethod.type,\n  };\n\n  if (paymentMethod.description) {\n    formattedPaymentMethod.description = paymentMethod.description;\n  }\n\n  if (paymentMethod.binData) {\n    formattedPaymentMethod.binData = paymentMethod.binData;\n  }\n\n  return formattedPaymentMethod;\n}\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/vault-manager.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * vaultManagerInstance.teardown();\n * @example <caption>With callback</caption>\n * vaultManagerInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nVaultManager.prototype.teardown = function () {\n  convertMethodsToError(this, methods(VaultManager.prototype));\n\n  return Promise.resolve();\n};\n\nmodule.exports = wrapPromise.wrapPrototype(VaultManager);\n\n},{\"../lib/analytics\":86,\"../lib/braintree-error\":91,\"../lib/convert-methods-to-error\":93,\"../lib/methods\":121,\"./errors\":144,\"@braintree/wrap-promise\":47}],147:[function(require,module,exports){\n\"use strict\";\nvar __importDefault =\n  (this && this.__importDefault) ||\n  function (mod) {\n    return mod && mod.__esModule ? mod : { default: mod };\n  };\nvar venmo_desktop_1 = __importDefault(require(\"./venmo-desktop\"));\nmodule.exports = function createVenmoDesktop(options) {\n  var instance = new venmo_desktop_1.default(options);\n  return instance.initialize();\n};\n\n},{\"./venmo-desktop\":149}],148:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VENMO_PAYMENT_CONTEXT_STATUS_QUERY =\n  exports.LEGACY_VENMO_PAYMENT_CONTEXT_STATUS_QUERY =\n  exports.UPDATE_PAYMENT_CONTEXT_QUERY =\n  exports.LEGACY_UPDATE_PAYMENT_CONTEXT_QUERY =\n  exports.CREATE_PAYMENT_CONTEXT_QUERY =\n  exports.LEGACY_CREATE_PAYMENT_CONTEXT_QUERY =\n    void 0;\nexports.LEGACY_CREATE_PAYMENT_CONTEXT_QUERY =\n  \"mutation CreateVenmoQRCodePaymentContext($input: CreateVenmoQRCodePaymentContextInput!) {\\n  createVenmoQRCodePaymentContext(input: $input) {\\n    clientMutationId\\n    venmoQRCodePaymentContext {\\n      id\\n      merchantId\\n      createdAt\\n      expiresAt\\n    }\\n  }\\n}\";\nexports.CREATE_PAYMENT_CONTEXT_QUERY =\n  \"mutation CreateVenmoPaymentContext($input: CreateVenmoPaymentContextInput!) {\\n  createVenmoPaymentContext(input: $input) {\\n    clientMutationId\\n    venmoPaymentContext {\\n      id\\n      merchantId\\n      createdAt\\n      expiresAt\\n    }\\n  }\\n}\";\nexports.LEGACY_UPDATE_PAYMENT_CONTEXT_QUERY =\n  \"mutation UpdateVenmoQRCodePaymentContext($input: UpdateVenmoQRCodePaymentContextInput!) {\\n  updateVenmoQRCodePaymentContext(input: $input) {\\n    clientMutationId\\n  }\\n}\";\nexports.UPDATE_PAYMENT_CONTEXT_QUERY =\n  \"mutation UpdateVenmoPaymentContextStatus($input: UpdateVenmoPaymentContextStatusInput!) {\\n  updateVenmoPaymentContextStatus(input: $input) {\\n    clientMutationId\\n  }\\n}\";\nexports.LEGACY_VENMO_PAYMENT_CONTEXT_STATUS_QUERY =\n  \"query PaymentContext($id: ID!) {\\n  node(id: $id) {\\n    ... on VenmoQRCodePaymentContext {\\n      status\\n      paymentMethodId\\n      userName\\n    }\\n  }\\n}\";\nexports.VENMO_PAYMENT_CONTEXT_STATUS_QUERY =\n  \"query PaymentContext($id: ID!) {\\n  node(id: $id) {\\n    ... on VenmoPaymentContext {\\n      status\\n      paymentMethodId\\n      userName\\n      payerInfo {\\n        firstName\\n        lastName\\n        phoneNumber\\n        email\\n        externalId\\n        userName\\n        billingAddress {\\n          fullName\\n          addressLine1\\n          addressLine2\\n          adminArea1\\n          adminArea2\\n          postalCode\\n          countryCode\\n        }\\n        shippingAddress {\\n          fullName\\n          addressLine1\\n          addressLine2\\n          adminArea1\\n          adminArea2\\n          postalCode\\n          countryCode\\n        }\\n      }\\n    }\\n  }\\n}\";\n\n},{}],149:[function(require,module,exports){\n\"use strict\";\nvar __assign =\n  (this && this.__assign) ||\n  function () {\n    __assign =\n      Object.assign ||\n      function (t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n      };\n    return __assign.apply(this, arguments);\n  };\nvar __importDefault =\n  (this && this.__importDefault) ||\n  function (mod) {\n    return mod && mod.__esModule ? mod : { default: mod };\n  };\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar framebus_1 = __importDefault(require(\"framebus\"));\nvar iframer_1 = __importDefault(require(\"@braintree/iframer\"));\nvar uuid_1 = __importDefault(require(\"@braintree/uuid\"));\nvar events_1 = require(\"../shared/events\");\nvar queries_1 = require(\"./queries\");\nvar VENMO_DESKTOP_POLLING_INTERVAL = 1000; // 1 second\nvar VISUAL_DELAY_BEFORE_SIGNALLING_COMPLETION = 2000; // 2 seconds\nvar VenmoDesktop = /** @class */ (function () {\n  function VenmoDesktop(options) {\n    this.isHidden = true;\n    this.env = options.environment;\n    this.id = uuid_1.default();\n    this.profileId = options.profileId;\n    this.displayName = options.displayName;\n    this.paymentMethodUsage = options.paymentMethodUsage;\n    this.shouldUseLegacyQRCodeMutation = !this.paymentMethodUsage;\n    var frameUrl = options.url + \"#\" + this.env + \"_\" + this.id;\n    this.bus = new framebus_1.default({\n      channel: this.id,\n      verifyDomain: options.verifyDomain,\n      targetFrames: [],\n    });\n    this.apiRequest = options.apiRequest;\n    this.sendEvent = options.sendEvent;\n    this.Promise = options.Promise;\n    this.alertBox = document.createElement(\"div\");\n    this.alertBox.setAttribute(\"data-venmo-desktop-id\", this.id);\n    this.alertBox.setAttribute(\"role\", \"alert\");\n    this.alertBox.style.position = \"fixed\";\n    this.alertBox.style.display = \"none\";\n    this.alertBox.style.height = \"1px\";\n    this.alertBox.style.width = \"1px\";\n    this.alertBox.style.overflow = \"hidden\";\n    this.alertBox.style.zIndex = \"0\";\n    this.iframe = iframer_1.default({\n      src: frameUrl,\n      name: \"venmo-desktop-iframe\",\n      style: {\n        display: \"none\",\n        position: \"fixed\",\n        top: \"0\",\n        bottom: \"0\",\n        right: \"0\",\n        left: \"0\",\n        height: \"100%\",\n        width: \"100%\",\n        zIndex: \"9999999\",\n      },\n      title: \"Venmo Desktop\",\n    });\n    this.bus.addTargetFrame(this.iframe);\n  }\n  VenmoDesktop.prototype.initialize = function () {\n    var _this = this;\n    return new this.Promise(function (resolve) {\n      _this.bus.on(events_1.VENMO_DESKTOP_IFRAME_READY, function () {\n        resolve(_this);\n      });\n      _this.bus.on(events_1.VENMO_DESKTOP_REQUEST_NEW_QR_CODE, function () {\n        _this.sendEvent(\"venmo.tokenize.desktop.restarted-from-error-view\");\n        _this.startPolling();\n      });\n      document.body.appendChild(_this.iframe);\n      document.body.appendChild(_this.alertBox);\n    });\n  };\n  VenmoDesktop.prototype.launchDesktopFlow = function () {\n    var _this = this;\n    this.isHidden = false;\n    var promise = new this.Promise(function (resolve, reject) {\n      _this.launchDesktopPromiseRejectFunction = reject;\n      var removeListeners = function () {\n        /* eslint-disable @typescript-eslint/no-use-before-define */\n        _this.bus.off(\n          events_1.VENMO_DESKTOP_CUSTOMER_CANCELED,\n          customerCancelledHandler\n        );\n        _this.bus.off(\n          events_1.VENMO_DESKTOP_UNKNOWN_ERROR,\n          unknownErrorHandler\n        );\n        /* eslint-enable @typescript-eslint/no-use-before-define */\n      };\n      var unknownErrorHandler = function (err) {\n        removeListeners();\n        _this.sendEvent(\"venmo.tokenize.desktop.unknown-error\");\n        reject({\n          allowUIToHandleError: false,\n          reason: \"UNKNOWN_ERROR\",\n          err: err,\n        });\n      };\n      var customerCancelledHandler = function () {\n        removeListeners();\n        _this.updateVenmoDesktopPaymentContext(\"CANCELED\");\n        _this.sendEvent(\n          \"venmo.tokenize.desktop.status-change.canceled-from-modal\"\n        );\n        reject({\n          allowUIToHandleError: false,\n          reason: \"CUSTOMER_CANCELED\",\n        });\n      };\n      _this.completedHandler = function (payload) {\n        removeListeners();\n        resolve(payload);\n      };\n      _this.bus.on(\n        events_1.VENMO_DESKTOP_CUSTOMER_CANCELED,\n        customerCancelledHandler\n      );\n      _this.bus.on(events_1.VENMO_DESKTOP_UNKNOWN_ERROR, unknownErrorHandler);\n    });\n    this.iframe.style.display = \"block\";\n    this.setAlert(\"Generating a QR code, get your Venmo app ready\");\n    this.iframe.focus();\n    this.startPolling();\n    return promise\n      .then(function (result) {\n        delete _this.venmoContextId;\n        delete _this.launchDesktopPromiseRejectFunction;\n        return result;\n      })\n      .catch(function (err) {\n        delete _this.venmoContextId;\n        delete _this.launchDesktopPromiseRejectFunction;\n        return _this.Promise.reject(err);\n      });\n  };\n  VenmoDesktop.prototype.triggerCompleted = function (result) {\n    var _this = this;\n    if (this.isHidden) {\n      return;\n    }\n    setTimeout(function () {\n      if (_this.completedHandler) {\n        _this.completedHandler(result);\n      }\n      delete _this.completedHandler;\n    }, VISUAL_DELAY_BEFORE_SIGNALLING_COMPLETION);\n  };\n  VenmoDesktop.prototype.triggerRejected = function (err) {\n    if (this.launchDesktopPromiseRejectFunction) {\n      this.launchDesktopPromiseRejectFunction(err);\n    }\n  };\n  VenmoDesktop.prototype.hideDesktopFlow = function () {\n    this.setAlert(\"\");\n    this.iframe.style.display = \"none\";\n    this.bus.emit(events_1.VENMO_DESKTOP_CLOSED_FROM_PARENT);\n    this.isHidden = true;\n  };\n  VenmoDesktop.prototype.displayError = function (message) {\n    if (this.isHidden) {\n      return;\n    }\n    this.bus.emit(events_1.VENMO_DESKTOP_DISPLAY_ERROR, {\n      message: message,\n    });\n    this.setAlert(message);\n  };\n  VenmoDesktop.prototype.displayQRCode = function (id, merchantId) {\n    if (this.isHidden) {\n      return;\n    }\n    this.bus.emit(events_1.VENMO_DESKTOP_DISPLAY_QR_CODE, {\n      id: id,\n      merchantId: merchantId,\n    });\n    this.setAlert(\"To scan the QR code, open your Venmo app\");\n  };\n  VenmoDesktop.prototype.authorize = function () {\n    if (this.isHidden) {\n      return;\n    }\n    this.bus.emit(events_1.VENMO_DESKTOP_AUTHORIZE);\n    this.setAlert(\"Venmo account authorized\");\n  };\n  VenmoDesktop.prototype.authorizing = function () {\n    if (this.isHidden) {\n      return;\n    }\n    this.bus.emit(events_1.VENMO_DESKTOP_AUTHORIZING);\n    this.setAlert(\"Authorize on your Venmo app\");\n  };\n  VenmoDesktop.prototype.startPolling = function () {\n    var _this = this;\n    return this.createVenmoDesktopPaymentContext()\n      .then(function (result) {\n        var expiresIn =\n          new Date(result.expiresAt).getTime() -\n          new Date(result.createdAt).getTime();\n        var expiredTime = Date.now() + expiresIn;\n        _this.displayQRCode(result.id, result.merchantId);\n        return _this.pollForStatusChange(result.status, expiredTime);\n      })\n      .then(function (result) {\n        if (!result) {\n          return;\n        }\n        // since we are manually adding a prepended @ sign\n        // we want to make sure that the username does not\n        // start giving us the @ sign up front in the future\n        var username = result.userName || \"\";\n        username = \"@\" + username.replace(\"@\", \"\");\n        _this.triggerCompleted({\n          paymentMethodNonce: result.paymentMethodId,\n          username: username,\n          payerInfo: result.payerInfo,\n          id: _this.venmoContextId || \"\",\n        });\n      })\n      .catch(function (err) {\n        if (err.allowUIToHandleError) {\n          // noop here and let the UI handle the customer error\n          return;\n        }\n        _this.sendEvent(\"venmo.tokenize.desktop.unhandled-error\");\n        _this.triggerRejected(err);\n      });\n  };\n  VenmoDesktop.prototype.pollForStatusChange = function (status, expiredTime) {\n    var _this = this;\n    if (!this.venmoContextId) {\n      return this.Promise.resolve();\n    }\n    if (Date.now() > expiredTime) {\n      return this.updateVenmoDesktopPaymentContext(\"EXPIRED\").then(function () {\n        _this.displayError(\"Something went wrong\");\n        _this.sendEvent(\"venmo.tokenize.desktop.status-change.sdk-timeout\");\n        return _this.Promise.reject({\n          allowUIToHandleError: true,\n          reason: \"TIMEOUT\",\n        });\n      });\n    }\n    return this.lookupVenmoDesktopPaymentContext().then(function (response) {\n      if (!_this.venmoContextId || !response) {\n        return _this.Promise.resolve();\n      }\n      var newStatus = response.status;\n      if (newStatus !== status) {\n        status = newStatus;\n        _this.sendEvent(\n          \"venmo.tokenize.desktop.status-change.\" + status.toLowerCase()\n        );\n        switch (status) {\n          case \"CREATED\":\n            // noop, no need to do anything here\n            // should never be able to get to this point\n            // but we'll keep it in to enumerate the statuses\n            break;\n          case \"EXPIRED\":\n          case \"FAILED\":\n          case \"CANCELED\":\n            var message =\n              status === \"CANCELED\"\n                ? \"The authorization was canceled\"\n                : \"Something went wrong\";\n            _this.displayError(message);\n            // these are all terminal states, so we end it here\n            return _this.Promise.reject({\n              allowUIToHandleError: true,\n              reason: status,\n            });\n          case \"SCANNED\":\n            _this.authorizing();\n            break;\n          case \"APPROVED\":\n            _this.authorize();\n            return _this.Promise.resolve(response);\n          default:\n          // any other statuses are irrelevant to the polling\n          // and can just be ignored\n        }\n      }\n      return new _this.Promise(function (resolve, reject) {\n        setTimeout(function () {\n          _this\n            .pollForStatusChange(status, expiredTime)\n            .then(resolve)\n            .catch(reject);\n        }, VENMO_DESKTOP_POLLING_INTERVAL);\n      });\n    });\n  };\n  VenmoDesktop.prototype.teardown = function () {\n    this.bus.teardown();\n    if (this.iframe.parentNode) {\n      this.iframe.parentNode.removeChild(this.iframe);\n    }\n    if (this.alertBox.parentNode) {\n      this.alertBox.parentNode.removeChild(this.alertBox);\n    }\n  };\n  VenmoDesktop.prototype.setAlert = function (message) {\n    this.alertBox.style.display = message ? \"block\" : \"none\";\n    this.alertBox.textContent = message;\n  };\n  VenmoDesktop.prototype.createPaymentContextFromGraphqlLegacyQRCodeMutation =\n    function (intent) {\n      return this.apiRequest(queries_1.LEGACY_CREATE_PAYMENT_CONTEXT_QUERY, {\n        input: {\n          environment: this.env,\n          intent: intent,\n        },\n      }).then(function (response) {\n        return response\n          .createVenmoQRCodePaymentContext.venmoQRCodePaymentContext;\n      });\n    };\n  VenmoDesktop.prototype.createPaymentContextFromGraphQL = function (intent) {\n    var input = {\n      intent: intent,\n      paymentMethodUsage: this.paymentMethodUsage,\n      customerClient: \"DESKTOP\",\n    };\n    if (this.profileId) {\n      input.merchantProfileId = this.profileId;\n    }\n    if (this.displayName) {\n      input.displayName = this.displayName;\n    }\n    return this.apiRequest(queries_1.CREATE_PAYMENT_CONTEXT_QUERY, {\n      input: input,\n    }).then(function (response) {\n      return response.createVenmoPaymentContext.venmoPaymentContext;\n    });\n  };\n  VenmoDesktop.prototype.createVenmoDesktopPaymentContext = function () {\n    var _this = this;\n    var contextPromise = this.shouldUseLegacyQRCodeMutation\n      ? this.createPaymentContextFromGraphqlLegacyQRCodeMutation(\"PAY_FROM_APP\")\n      : this.createPaymentContextFromGraphQL(\"PAY_FROM_APP\");\n    return contextPromise.then(function (context) {\n      _this.venmoContextId = context.id;\n      var merchantId = _this.profileId || context.merchantId;\n      return {\n        id: context.id,\n        status: context.status,\n        merchantId: merchantId,\n        createdAt: context.createdAt,\n        expiresAt: context.expiresAt,\n      };\n    });\n  };\n  VenmoDesktop.prototype.updateVenmoDesktopPaymentContext = function (\n    status,\n    additionalOptions\n  ) {\n    if (additionalOptions === void 0) {\n      additionalOptions = {};\n    }\n    if (!this.venmoContextId) {\n      return this.Promise.resolve();\n    }\n    var data = {\n      input: __assign(\n        { id: this.venmoContextId, status: status },\n        additionalOptions\n      ),\n    };\n    var query = this.shouldUseLegacyQRCodeMutation\n      ? queries_1.LEGACY_UPDATE_PAYMENT_CONTEXT_QUERY\n      : queries_1.UPDATE_PAYMENT_CONTEXT_QUERY;\n    return this.apiRequest(query, data).then(function () {\n      // noop so we can resolve without any data to match the type\n    });\n  };\n  VenmoDesktop.prototype.lookupVenmoDesktopPaymentContext = function () {\n    if (!this.venmoContextId) {\n      return this.Promise.resolve();\n    }\n    var query = this.shouldUseLegacyQRCodeMutation\n      ? queries_1.LEGACY_VENMO_PAYMENT_CONTEXT_STATUS_QUERY\n      : queries_1.VENMO_PAYMENT_CONTEXT_STATUS_QUERY;\n    return this.apiRequest(query, {\n      id: this.venmoContextId,\n    }).then(function (response) {\n      return response.node;\n    });\n  };\n  return VenmoDesktop;\n})();\nexports.default = VenmoDesktop;\n\n},{\"../shared/events\":154,\"./queries\":148,\"@braintree/iframer\":39,\"@braintree/uuid\":43,\"framebus\":167}],150:[function(require,module,exports){\n\"use strict\";\n/** @module braintree-web/venmo */\n\nvar analytics = require(\"../lib/analytics\");\nvar basicComponentVerification = require(\"../lib/basic-component-verification\");\nvar createDeferredClient = require(\"../lib/create-deferred-client\");\nvar createAssetsUrl = require(\"../lib/create-assets-url\");\nvar errors = require(\"./shared/errors\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar Venmo = require(\"./venmo\");\nvar supportsVenmo = require(\"./shared/supports-venmo\");\nvar VERSION = \"3.99.0\";\n\n/**\n * @typedef {object} Venmo~lineItem\n * @property {number} quantity Number of units of the item purchased. This value must be a whole number and can't be negative or zero.\n * @property {string} unitAmount Per-unit price of the item. Can include up to 2 decimal places. This value can't be negative or zero.\n * @property {string} name Item name. Maximum 127 characters.\n * @property {string} kind Indicates whether the line item is a debit (sale) or credit (refund) to the customer. Accepted values: `debit` and `credit`.\n * @property {?string} unitTaxAmount Per-unit tax price of the item. Can include up to 2 decimal places. This value can't be negative or zero.\n * @property {?string} description Item description. Maximum 127 characters.\n * @property {?string} productCode Product or UPC code for the item. Maximum 127 characters.\n * @property {?string} url The URL to product information.\n */\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {boolean} [options.allowNewBrowserTab=true] This should be set to false if your payment flow requires returning to the same tab, e.g. single page applications. Doing so causes {@link Venmo#isBrowserSupported|isBrowserSupported} to return true only for mobile web browsers that support returning from the Venmo app to the same tab.\n * @param {boolean} [options.allowWebviews=true] This should be set to false if your payment flow does not occur from within a webview that you control. Doing so causes {@link Venmo#isBrowserSupported|isBrowserSupported} to return true only for mobile web browsers that are not webviews.\n * @param {boolean} [options.ignoreHistoryChanges=false] When the Venmo app returns to the website, it will modify the hash of the url to include data about the tokenization. By default, the SDK will put the state of the hash back to where it was before the change was made. Pass `true` to handle the hash change instead of the SDK.\n * @param {string} [options.profileId] The Venmo profile ID to be used during payment authorization. Customers will see the business name and logo associated with this Venmo profile, and it will show up in the Venmo app as a \"Connected Merchant\". Venmo profile IDs can be found in the Braintree Control Panel. Omitting this value will use the default Venmo profile.\n * @param {string} [options.deepLinkReturnUrl] An override for the URL that the Venmo iOS app opens to return from an app switch.\n * @param {boolean} [options.requireManualReturn=false] When `true`, the customer will have to manually switch back to the browser/webview that is presenting Venmo to complete the payment.\n * @param {boolean} [options.useRedirectForIOS=false] Normally, the Venmo flow is launched using `window.open` and the Venmo app intercepts that call and opens the Venmo app instead. If the customer does not have the Venmo app installed, it opens the Venmo website in a new window and instructs the customer to install the app.\n \n * In iOS webviews and Safari View Controllers (a webview-like environment which is indistinguishable from Safari for JavaScript environments), this call to `window.open` will always fail to app switch to Venmo, resulting instead in a white screen. Because of this, an alternate approach is required to launch the Venmo flow.\n *\n * When `useRedirectForIOS` is `true` and the Venmo flow is started in an iOS environment, the Venmo flow will be started by setting `window.location.href` to the Venmo website (which will still be intercepted by the Venmo app and should be the same behavior as if `window.open` was called). However, if the customer does not have the Venmo app installed, the merchant page will instead be replaced with the Venmo website and the customer will need to use the browser's back button to return to the merchant's website. Ensure that your customer's checkout information will not be lost if they are navigated away from the website and return using the browser back button.\n *\n * Due to a bug in iOS's implementation of `window.open` in iOS webviews and Safari View Controllers, if `useRedirectForIOS` is not set to `true` and the flow is launched from an iOS webview or Safari View Controller, the customer will be presented with a blank screen, halting the flow and leaving the customer unable to return to the merchant's website. Setting `useRedirectForIOS` to `true` will allow the flow to continue, but the Venmo app will be unable to return back to the webview/Safari View Controller. It will instead open the merchant's site in a new window in the customer's browser, which means the merchant site must be able to process the Venmo payment. If the SDK is configured with `allowNewBrowserTab = false`, it is unlikely that the website is set up to process the Venmo payment from a new window.\n *\n * If processing the payment from a new window is not possible, use this flag in conjunction with `requireManualReturn` so that the customer may start the flow from a webview/Safari View Controller or their Safari browser and manually return to the place that originated the flow once the Venmo app has authorized the payment and instructed them to do so.\n * @param {string} [options.paymentMethodUsage] The intended usage for the Venmo payment method nonce. Possible options are:\n * * single_use - intended as a one time transaction\n * * multi_use - intended to be vaulted and used for multiple transactions\n * @param {string} [options.displayName] The business name that will be displayed in the Venmo app payment approval screen. Only applicable when used with `paymentMethodUsage` and used by merchants onboarded as PayFast channel partners.\n * @param {boolean} [options.allowDesktop] Used to support desktop users. When enabled, the default mode is to render a scannable QR-code customers scan with their phone's to approve via the mobile app.\n * @param {boolean} [options.allowDesktopWebLogin=false] When `true`, the customer will authorize payment via a window popup that allows them to sign in to their Venmo account. This is used explicitly for customers operating from desktop browsers wanting to avoid the QR Code flow.\n * @param {boolean} [options.mobileWebFallBack] Use this option when you want to use a web-login experience, such as if on mobile and the Venmo app isn't installed.\n * @param {boolean} [options.allowAndroidRecreation=true] This flag is for when your integration uses the [Android PopupBridge](https://github.com/braintree/popup-bridge-android). Setting this flag to false will avoid a page refresh when returning to your page after payment authorization. If not specified, it defaults to true and the Android activity will be recreated, resulting in a page refresh.\n * @param {boolean} [options.collectCustomerBillingAddress] When `true`, the customer's billing address will be collected and displayed on the Venmo paysheet (provided the Enriched Customer Data checkbox is also enabled for the merchant account).\n * @param {boolean} [options.collectCustomerShippingAddress] When `true`, the customer's shipping address will be collected and displayed on the Venmo paysheet (provided the Enriched Customer Data checkbox is also enabled for the merchant account).\n * @param {lineItem[]} [options.lineItems] The {@link Venmo~lineItem|line items} belonging to the transaction. It can include up to 249 line items.\n * @param {string} [options.subTotalAmount] The subtotal amount of the transaction, excluding taxes, discounts, and shipping.\n * @param {string} [options.discountAmount] The total discount amount applied on the transaction.\n * @param {string} [options.shippingAmount] Shipping amount to be charged for the transaction.\n * @param {string} [options.taxAmount] The total tax amount applied to the transaction. This value can't be negative or zero.\n * @param {string} [options.totalAmount] The grand total amount of the transaction.\n *\n * Note: This flow currently requires a full page redirect, which means to utilize this flow your page will need to be able to handle the checkout session across different pages.\n * @param {callback} [callback] The second argument, `data`, is the {@link Venmo} instance. If no callback is provided, `create` returns a promise that resolves with the {@link Venmo} instance.\n * @example\n * braintree.venmo.create({\n *   client: clientInstance\n * }).then(function (venmoInstance) {\n *   // venmoInstance is ready to be used.\n * }).catch(function (createErr) {\n *   console.error('Error creating Venmo instance', createErr);\n * });\n * @example <caption>Allow desktop flow to be used</caption>\n * braintree.venmo.create({\n *   client: clientInstance,\n *   allowDesktop: true\n * }).then(function (venmoInstance) {\n *   // venmoInstance is ready to be used.\n * }).catch(function (createErr) {\n *   console.error('Error creating Venmo instance', createErr);\n * });\n * @returns {(Promise|void)} Returns the Venmo instance.\n */\nfunction create(options) {\n  var name = \"Venmo\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var createPromise, instance;\n\n      if (options.profileId && typeof options.profileId !== \"string\") {\n        return Promise.reject(\n          new BraintreeError(errors.VENMO_INVALID_PROFILE_ID)\n        );\n      }\n\n      if (\n        options.deepLinkReturnUrl &&\n        typeof options.deepLinkReturnUrl !== \"string\"\n      ) {\n        return Promise.reject(\n          new BraintreeError(errors.VENMO_INVALID_DEEP_LINK_RETURN_URL)\n        );\n      }\n\n      createPromise = createDeferredClient\n        .create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: createAssetsUrl.create(options.authorization),\n          name: name,\n        })\n        .then(function (client) {\n          var configuration = client.getConfiguration();\n\n          options.client = client;\n\n          if (!configuration.gatewayConfiguration.payWithVenmo) {\n            return Promise.reject(new BraintreeError(errors.VENMO_NOT_ENABLED));\n          }\n\n          return client;\n        });\n\n      options.createPromise = createPromise;\n      instance = new Venmo(options);\n\n      analytics.sendEvent(createPromise, \"venmo.initialized\");\n\n      return createPromise.then(function () {\n        return instance;\n      });\n    });\n}\n\n/**\n * @static\n * @function isBrowserSupported\n * @param {object} [options] browser support options:\n * @param {boolean} [options.allowNewBrowserTab=true] This should be set to false if your payment flow requires returning to the same tab, e.g. single page applications.\n * @param {boolean} [options.allowWebviews=true] This should be set to false if your payment flow does not occur from within a webview that you control.\n * @example\n * if (braintree.venmo.isBrowserSupported()) {\n *   // set up Venmo\n * }\n * @example <caption>Explicitly require browser support returning to the same tab</caption>\n * if (braintree.venmo.isBrowserSupported({\n *   allowNewBrowserTab: false\n * })) {\n *   // set up Venmo\n * }\n * @example <caption>Explicitly set webviews as disallowed browsers</caption>\n * if (braintree.venmo.isBrowserSupported({\n *   allowWebviews: false\n * })) {\n *   // set up Venmo\n * }\n * @returns {boolean} Whether or not the browser supports Venmo.\n */\nfunction isBrowserSupported(options) {\n  return supportsVenmo.isBrowserSupported(options);\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  isBrowserSupported: isBrowserSupported,\n  /**\n   * @description The current version of the SDK, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n\n},{\"../lib/analytics\":86,\"../lib/basic-component-verification\":89,\"../lib/braintree-error\":91,\"../lib/create-assets-url\":95,\"../lib/create-deferred-client\":97,\"./shared/errors\":153,\"./shared/supports-venmo\":156,\"./venmo\":158,\"@braintree/wrap-promise\":47}],151:[function(require,module,exports){\n\"use strict\";\n\nvar isAndroid = require(\"@braintree/browser-detection/is-android\");\nvar isChrome = require(\"@braintree/browser-detection/is-chrome\");\nvar isIos = require(\"@braintree/browser-detection/is-ios\");\nvar isIosSafari = require(\"@braintree/browser-detection/is-ios-safari\");\nvar isIosWebview = require(\"@braintree/browser-detection/is-ios-webview\");\nvar isSamsung = require(\"@braintree/browser-detection/is-samsung\");\n\nfunction isAndroidWebview() {\n  return (\n    isAndroid() && window.navigator.userAgent.toLowerCase().indexOf(\"wv\") > -1\n  );\n}\n\nfunction doesNotSupportWindowOpenInIos() {\n  if (!isIos()) {\n    return false;\n  }\n\n  return isIosWebview() || !isIosSafari();\n}\n\nfunction isFacebookOwnedBrowserOnAndroid() {\n  var ua = window.navigator.userAgent.toLowerCase();\n\n  // Huawei's Facebook useragent does not include Android\n  if (ua.indexOf(\"huawei\") > -1 && ua.indexOf(\"fban\") > -1) {\n    return true;\n  }\n\n  if (!isAndroid()) {\n    return false;\n  }\n\n  return ua.indexOf(\"fb_iab\") > -1 || ua.indexOf(\"instagram\") > -1;\n}\n\nfunction isIosChrome() {\n  return isIos() && isChrome();\n}\n\nmodule.exports = {\n  isAndroid: isAndroid,\n  isAndroidWebview: isAndroidWebview,\n  isChrome: isChrome,\n  isIos: isIos,\n  isIosChrome: isIosChrome,\n  isSamsung: isSamsung,\n  isIosSafari: isIosSafari,\n  isIosWebview: isIosWebview,\n  isFacebookOwnedBrowserOnAndroid: isFacebookOwnedBrowserOnAndroid,\n  doesNotSupportWindowOpenInIos: doesNotSupportWindowOpenInIos,\n};\n\n},{\"@braintree/browser-detection/is-android\":25,\"@braintree/browser-detection/is-chrome\":27,\"@braintree/browser-detection/is-ios\":34,\"@braintree/browser-detection/is-ios-safari\":31,\"@braintree/browser-detection/is-ios-webview\":32,\"@braintree/browser-detection/is-samsung\":35}],152:[function(require,module,exports){\n\"use strict\";\n\n/**\n * Venmo shared constants\n * @typedef {object} Venmo~venmoConstants\n * @ignore\n * @property {string} VENMO_APP_OR_MOBILE_AUTH_URL A deep-linked url that will open the Venmo app if installed, or navigate to a Venmo web-login experience if the Venmo app is not present.\n * @property {string} VENMO_MOBILE_APP_AUTH_ONLY_URL A deep-linked url that leads to a Venmo dead-end page if the Venmo app is not installed (page asks customer to download the app).\n * @property {string} VENMO_WEB_LOGIN_URL A non-deeplinked url that leads to a Venmo login page. For use when explicitly wanting to avoid using the Venmo mobile app via a deep-linked url.\n */\nmodule.exports = {\n  DOCUMENT_VISIBILITY_CHANGE_EVENT_DELAY: 500,\n  DEFAULT_PROCESS_RESULTS_DELAY: 1000,\n  VENMO_APP_OR_MOBILE_AUTH_URL: \"https://venmo.com/go/checkout\",\n  VENMO_MOBILE_APP_AUTH_ONLY_URL: \"https://venmo.com/braintree/checkout\",\n  VENMO_WEB_LOGIN_URL: \"https://account.venmo.com/go/web\",\n};\n\n},{}],153:[function(require,module,exports){\n\"use strict\";\n\n/**\n * @name BraintreeError.Venmo - Creation Error Codes\n * @description Errors that occur when [creating the Venmo component](./module-braintree-web_venmo.html#.create).\n * @property {MERCHANT} VENMO_NOT_ENABLED Occurs when Venmo is not enabled on the Braintree control panel.\n * @property {MERCHANT} VENMO_INVALID_PROFILE_ID Occurs when Venmo is initialized with a profile id, but it is invalid.\n * @property {UNKNOWN} VENMO_MOBILE_POLLING_SETUP_FAILED __Deprecated__ No longer returned. Use `VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED` instead.\n * @property {UNKNOWN} VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED Occurs when the request to set up a Venmo Payment Context object fails.\n */\n\n/**\n * @name BraintreeError.Venmo - tokenize Error Codes\n * @description Errors that occur when using the [`tokenize` method](./Venmo.html#tokenize).\n * @property {CUSTOMER} VENMO_APP_CANCELED Occurs when customer cancels flow from the Venmo app.\n * @property {UNKNOWN} VENMO_APP_FAILED Occurs when tokenization fails.\n * @property {CUSTOMER} VENMO_CANCELED Occurs when customer cancels the flow or Venmo app is not available.\n * @property {CUSTOMER} VENMO_CUSTOMER_CANCELED Occurs when customer cancels the flow.\n * @property {CUSTOMER} VENMO_DESKTOP_CANCELED Occurs when customer cancels the Venmo Desktop flow by closing the modal.\n * @property {UNKNOWN} VENMO_DESKTOP_UNKNOWN_ERROR Occurs when an unknown error causes the Venmo Desktop flow to fail.\n * @property {UNKNOWN} VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR Occurs when an unknown network error causes the mobile polling process to fail.\n * @property {CUSTOMER} VENMO_MOBILE_POLLING_TOKENIZATION_EXPIRED Occurs when the polling has expired and the payment cannot be completed.\n * @property {CUSTOMER} VENMO_MOBILE_POLLING_TOKENIZATION_CANCELED Occurs when the polling operation is canceled by the customer.\n * @property {CUSTOMER} VENMO_MOBILE_POLLING_TOKENIZATION_TIMEOUT Occurs when customer takes too long to complete payment.\n * @property {UNKNOWN} VENMO_MOBILE_POLLING_TOKENIZATION_FAILED Occurs if there is an unknown error during the mobile polling process.\n * @property {NETWORK} VENMO_NETWORK_ERROR Occurs when a network error causes a request to fail.\n * @property {MERCHANT} VENMO_TOKENIZATION_CANCELED_BY_MERCHANT Occurs when `cancelTokenization` is called while tokenization is in progress.\n * @property {UNKNOWN} VENMO_TOKENIZATION_FAILED Occurs when there is an unknown error during the web login experience.\n * @property {MERCHANT} VENMO_TOKENIZATION_REQUEST_ACTIVE Occurs when `tokenize` is called when the flow is already in progress.\n * @property {MERCHANT} VENMO_TOKENIZATION_REQUEST_NOT_ACTIVE Occurs when `cancelTokenization` is called when the flow is not in progress.\n * @property {MERCHANT} VENMO_ECD_DISABLED Occurs when the merchant tries to access customer details without enabling Enriched Customer Data.\n */\n\nvar BraintreeError = require(\"../../lib/braintree-error\");\n\nmodule.exports = {\n  VENMO_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_NOT_ENABLED\",\n    message: \"Venmo is not enabled for this merchant.\",\n  },\n  VENMO_TOKENIZATION_REQUEST_ACTIVE: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_TOKENIZATION_REQUEST_ACTIVE\",\n    message: \"Another tokenization request is active.\",\n  },\n  VENMO_TOKENIZATION_REQUEST_NOT_ACTIVE: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_TOKENIZATION_REQUEST_NOT_ACTIVE\",\n    message: \"No tokenization in progress.\",\n  },\n  VENMO_APP_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_APP_FAILED\",\n    message: \"Venmo app encountered a problem.\",\n  },\n  VENMO_APP_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_APP_CANCELED\",\n    message: \"Venmo app authorization was canceled.\",\n  },\n  VENMO_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_CANCELED\",\n    message:\n      \"User canceled Venmo authorization, or Venmo app is not available.\",\n  },\n  VENMO_CUSTOMER_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_CUSTOMER_CANCELED\",\n    message: \"User canceled Venmo authorization.\",\n  },\n  VENMO_NETWORK_ERROR: {\n    type: BraintreeError.types.NETWORK,\n    code: \"VENMO_NETWORK_ERROR\",\n    message: \"Something went wrong making the request\",\n  },\n  VENMO_DESKTOP_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_DESKTOP_CANCELED\",\n    message:\n      \"User canceled Venmo authorization by closing the Venmo Desktop modal.\",\n  },\n  VENMO_TOKENIZATION_CANCELED_BY_MERCHANT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_TOKENIZATION_CANCELED_BY_MERCHANT\",\n    message: \"The Venmo tokenization was canceled by the merchant.\",\n  },\n  VENMO_DESKTOP_UNKNOWN_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_DESKTOP_UNKNOWN_ERROR\",\n    message: \"Something went wrong with the Venmo Desktop flow.\",\n  },\n  VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED\",\n    message: \"Something went wrong creating the Venmo Payment Context.\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR\",\n    message: \"Something went wrong during mobile polling.\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_EXPIRED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_EXPIRED\",\n    message: \"The Venmo authorization request is expired.\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_CANCELED\",\n    message: \"The Venmo authorization was canceled\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_TIMEOUT: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_TIMEOUT\",\n    message: \"Customer took too long to authorize Venmo payment.\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_FAILED\",\n    message: \"The Venmo authorization failed.\",\n  },\n  VENMO_INVALID_PROFILE_ID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_INVALID_PROFILE_ID\",\n    message: \"Venmo profile ID is invalid.\",\n  },\n  VENMO_INVALID_DEEP_LINK_RETURN_URL: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_INVALID_DEEP_LINK_RETURN_URL\",\n    message: \"Venmo deep link return URL is invalid.\",\n  },\n  VENMO_TOKENIZATION_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_TOKENIZATION_FAILED\",\n    message: \"Venmo encountered a problem\",\n  },\n  VENMO_ECD_DISABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"ECD_DISABLED\",\n    message:\n      \"Cannot collect customer data when ECD is disabled. Enable this feature in the Control Panel to collect this data.\",\n  },\n};\n\n},{\"../../lib/braintree-error\":91}],154:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VENMO_DESKTOP_UNKNOWN_ERROR =\n  exports.VENMO_DESKTOP_REQUEST_NEW_QR_CODE =\n  exports.VENMO_DESKTOP_CLOSED_FROM_PARENT =\n  exports.VENMO_DESKTOP_IFRAME_READY =\n  exports.VENMO_DESKTOP_DISPLAY_QR_CODE =\n  exports.VENMO_DESKTOP_DISPLAY_ERROR =\n  exports.VENMO_DESKTOP_CUSTOMER_CANCELED =\n  exports.VENMO_DESKTOP_AUTHORIZING =\n  exports.VENMO_DESKTOP_AUTHORIZE =\n  exports.VENMO_DESKTOP_AUTHORIZATION_TIMED_OUT =\n    void 0;\nexports.VENMO_DESKTOP_AUTHORIZATION_TIMED_OUT =\n  \"VENMO_DESKTOP_AUTHORIZATION_TIMED_OUT\";\nexports.VENMO_DESKTOP_AUTHORIZE = \"VENMO_DESKTOP_AUTHORIZE\";\nexports.VENMO_DESKTOP_AUTHORIZING = \"VENMO_DESKTOP_AUTHORIZING\";\nexports.VENMO_DESKTOP_CUSTOMER_CANCELED = \"VENMO_DESKTOP_CUSTOMER_CANCELED\";\nexports.VENMO_DESKTOP_DISPLAY_ERROR = \"VENMO_DESKTOP_DISPLAY_ERROR\";\nexports.VENMO_DESKTOP_DISPLAY_QR_CODE = \"VENMO_DESKTOP_DISPLAY_QR_CODE\";\nexports.VENMO_DESKTOP_IFRAME_READY = \"VENMO_DESKTOP_IFRAME_READY\";\nexports.VENMO_DESKTOP_CLOSED_FROM_PARENT = \"VENMO_DESKTOP_CLOSED_FROM_PARENT\";\nexports.VENMO_DESKTOP_REQUEST_NEW_QR_CODE = \"VENMO_DESKTOP_REQUEST_NEW_QR_CODE\";\nexports.VENMO_DESKTOP_UNKNOWN_ERROR = \"VENMO_DESKTOP_UNKNOWN_ERROR\";\n\n},{}],155:[function(require,module,exports){\n\"use strict\";\nvar venmoConstants = require(\"./constants\");\n\nfunction getVenmoUrl(options) {\n  if (options.useAllowDesktopWebLogin)\n    return venmoConstants.VENMO_WEB_LOGIN_URL;\n\n  if (options.mobileWebFallBack)\n    return venmoConstants.VENMO_APP_OR_MOBILE_AUTH_URL;\n\n  return venmoConstants.VENMO_MOBILE_APP_AUTH_ONLY_URL;\n}\n\nmodule.exports = getVenmoUrl;\n\n},{\"./constants\":152}],156:[function(require,module,exports){\n\"use strict\";\n\nvar browserDetection = require(\"./browser-detection\");\nvar inIframe = require(\"../../lib/in-iframe\");\n\nfunction isBrowserSupported(options) {\n  var isKnownUnsupportedMobileBrowser,\n    merchantAllowsDesktopBrowsers,\n    merchantAllowsIosChrome,\n    merchantAllowsReturningToNewBrowserTab,\n    merchantAllowsWebviews;\n  var isAndroid = browserDetection.isAndroid();\n  var isMobileDevice = isAndroid || browserDetection.isIos();\n  var isAndroidChrome = isAndroid && browserDetection.isChrome();\n  var isMobileDeviceThatSupportsReturnToSameTab =\n    browserDetection.isIosSafari() || isAndroidChrome;\n\n  options = options || {};\n  // NEXT_MAJOR_VERSION allowDesktop will default to true, but can be opted out\n  merchantAllowsDesktopBrowsers =\n    (options.allowDesktopWebLogin || options.allowDesktop) === true;\n  merchantAllowsReturningToNewBrowserTab = options.hasOwnProperty(\n    \"allowNewBrowserTab\"\n  )\n    ? options.allowNewBrowserTab\n    : true;\n  // NEXT_MAJOR_VERSION webviews are not supported, except for the case where\n  // the merchant themselves is presenting venmo in a webview using the deep\n  // link url to get back to their app. For the next major version, we should\n  // just not have this option and instead require the merchant to determine\n  // if the venmo button should be displayed when presenting it in the\n  // merchant's app via a webview.\n  merchantAllowsWebviews = options.hasOwnProperty(\"allowWebviews\")\n    ? options.allowWebviews\n    : true;\n  // Venmo only works on iOS Chrome when the\n  // button is not rendered in an iFrame and\n  // allowNewBrowserTab is set to true\n  merchantAllowsIosChrome =\n    merchantAllowsReturningToNewBrowserTab && !inIframe();\n\n  isKnownUnsupportedMobileBrowser =\n    (!merchantAllowsIosChrome && browserDetection.isIosChrome()) ||\n    browserDetection.isFacebookOwnedBrowserOnAndroid() ||\n    browserDetection.isSamsung();\n\n  if (isKnownUnsupportedMobileBrowser) {\n    return false;\n  }\n\n  if (\n    !merchantAllowsWebviews &&\n    (browserDetection.isAndroidWebview() || browserDetection.isIosWebview())\n  ) {\n    return false;\n  }\n\n  if (!isMobileDevice) {\n    return merchantAllowsDesktopBrowsers;\n  }\n\n  if (!merchantAllowsReturningToNewBrowserTab) {\n    return isMobileDeviceThatSupportsReturnToSameTab;\n  }\n\n  return isMobileDevice;\n}\n\nmodule.exports = {\n  isBrowserSupported: isBrowserSupported,\n};\n\n},{\"../../lib/in-iframe\":116,\"./browser-detection\":151}],157:[function(require,module,exports){\n\"use strict\";\n\nvar frameService = require(\"../../lib/frame-service/external\");\nvar useMin = require(\"../../lib/use-min\");\nvar ExtendedPromise = require(\"@braintree/extended-promise\");\n\nvar VERSION = \"3.99.0\";\nvar VENMO_LOGO_SVG =\n  '<svg width=\"198\" height=\"58\" viewBox=\"0 0 198 58\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.0702 13.6572C44.1935 15.4585 44.6999 17.3139 44.6999 19.6576C44.6999 27.1328 38.1277 36.8436 32.7935 43.6625H20.6099L15.7236 15.2939L26.3917 14.3105L28.9751 34.4966C31.389 30.6783 34.3678 24.6779 34.3678 20.587C34.3678 18.3477 33.9727 16.8225 33.3553 15.5666L43.0702 13.6572Z\" fill=\"white\"/>\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M56.8965 26.1491C58.8596 26.1491 63.8018 25.2772 63.8018 22.5499C63.8018 21.2402 62.8481 20.587 61.7242 20.587C59.7579 20.587 57.1776 22.8763 56.8965 26.1491ZM56.6715 31.5506C56.6715 34.8807 58.5787 36.1873 61.107 36.1873C63.8603 36.1873 66.4966 35.534 69.923 33.8433L68.6324 42.3523C66.2183 43.4976 62.4559 44.2617 58.8039 44.2617C49.5403 44.2617 46.2249 38.8071 46.2249 31.9879C46.2249 23.1496 51.6179 13.765 62.7365 13.765C68.858 13.765 72.2809 17.0949 72.2809 21.7317C72.2815 29.2066 62.4005 31.4965 56.6715 31.5506Z\" fill=\"white\"/>\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M103.067 20.3142C103.067 21.4052 102.897 22.9875 102.727 24.0216L99.5262 43.6622H89.1385L92.0585 25.658C92.1139 25.1696 92.284 24.1865 92.284 23.6411C92.284 22.3314 91.4414 22.0047 90.4282 22.0047C89.0826 22.0047 87.7337 22.6042 86.8354 23.0418L83.5234 43.6625H73.0772L77.8495 14.257H86.8908L87.0052 16.6041C89.1382 15.2404 91.9469 13.7656 95.932 13.7656C101.212 13.765 103.067 16.3845 103.067 20.3142Z\" fill=\"white\"/>\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M133.906 16.9841C136.881 14.9131 139.69 13.765 143.563 13.765C148.897 13.765 150.753 16.3845 150.753 20.3142C150.753 21.4052 150.583 22.9875 150.413 24.0216L147.216 43.6622H136.825L139.801 25.2774C139.855 24.786 139.971 24.1865 139.971 23.8063C139.971 22.3317 139.128 22.0047 138.115 22.0047C136.824 22.0047 135.535 22.5501 134.577 23.0418L131.266 43.6625H120.878L123.854 25.2777C123.908 24.7863 124.02 24.1868 124.02 23.8065C124.02 22.332 123.177 22.0049 122.167 22.0049C120.819 22.0049 119.473 22.6045 118.574 23.0421L115.26 43.6628H104.817L109.589 14.2573H118.52L118.8 16.7122C120.878 15.241 123.684 13.7662 127.446 13.7662C130.704 13.765 132.837 15.129 133.906 16.9841Z\" fill=\"white\"/>\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M171.426 25.5502C171.426 23.1496 170.808 21.513 168.956 21.513C164.857 21.513 164.015 28.55 164.015 32.1498C164.015 34.8807 164.802 36.5709 166.653 36.5709C170.528 36.5709 171.426 29.1497 171.426 25.5502ZM153.458 31.7152C153.458 22.442 158.511 13.765 170.136 13.765C178.896 13.765 182.098 18.7854 182.098 25.7148C182.098 34.8805 177.099 44.3723 165.194 44.3723C156.378 44.3723 153.458 38.7525 153.458 31.7152Z\" fill=\"white\"/>\\n</svg>';\nvar CONTINUE_OR_CANCEL_INSTRUCTIONS =\n  \"Tap cancel payment to cancel and return to the business. Continue payment will relaunch the payment window.\";\n\nvar POPUP_WIDTH = 400;\nvar POPUP_HEIGHT = 570;\nvar ELEMENT_IDS = {\n  backdrop: \"venmo-desktop-web-backdrop\",\n  backdropHidden: \"venmo-desktop-web-backdrop.hidden\",\n  backdropContainer: \"venmo-backdrop-container\",\n  cancelButton: \"venmo-popup-cancel-button\",\n  continueButton: \"venmo-popup-continue-button\",\n  message: \"venmo-message\",\n  instructions: \"venmo-instructions\",\n  venmoLogo: \"venmo-full-logo\",\n};\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\nfunction openPopup(options) {\n  var frameServiceInstance = options.frameServiceInstance;\n  var venmoUrl = options.venmoUrl;\n  var checkForStatusChange = options.checkForStatusChange;\n  var cancelTokenization = options.cancelTokenization;\n  var extendedPromise = new ExtendedPromise();\n\n  document\n    .getElementById(ELEMENT_IDS.continueButton)\n    .addEventListener(\"click\", function () {\n      frameServiceInstance.focus();\n    });\n  document\n    .getElementById(ELEMENT_IDS.cancelButton)\n    .addEventListener(\"click\", function () {\n      frameServiceInstance.close();\n      cancelTokenization();\n      closeBackdrop();\n    });\n\n  frameServiceInstance.open({}, function (frameServiceErr) {\n    var retryStartingCount = 1;\n\n    if (frameServiceErr) {\n      extendedPromise.reject(frameServiceErr);\n    } else {\n      checkForStatusChange(retryStartingCount)\n        .then(function (data) {\n          extendedPromise.resolve(data);\n        })\n        .catch(function (statusCheckError) {\n          extendedPromise.reject(statusCheckError);\n        });\n    }\n    frameServiceInstance.close();\n    closeBackdrop();\n  });\n  frameServiceInstance.redirect(venmoUrl);\n\n  return extendedPromise;\n}\n\nfunction centeredPopupDimensions() {\n  var popupTop =\n    Math.round((window.outerHeight - POPUP_HEIGHT) / 2) + window.screenTop;\n  var popupLeft =\n    Math.round((window.outerWidth - POPUP_WIDTH) / 2) + window.screenLeft;\n\n  return {\n    top: popupTop,\n    left: popupLeft,\n  };\n}\n\nfunction closeBackdrop() {\n  document.getElementById(\"venmo-desktop-web-backdrop\").classList.add(\"hidden\");\n}\n\nfunction getElementStyles() {\n  var backdropStyles = [\n    \"#\" + ELEMENT_IDS.backdropHidden + \" {\",\n    \"display: none;\",\n    \"}\",\n    \"#\" + ELEMENT_IDS.backdrop + \" {\",\n    \"z-index: 3141592632;\",\n    \"cursor: pointer;\",\n    \"position: fixed;\",\n    \"top: 0;\",\n    \"left: 0;\",\n    \"bottom: 0;\",\n    \"width: 100%;\",\n    \"background: rgba(0, 0, 0, 0.8);\",\n    \"}\",\n  ];\n  var backdropContainerStyles = [\n    \"#\" + ELEMENT_IDS.backdropContainer + \" {\",\n    \"display: flex;\",\n    \"align-content: center;\",\n    \"justify-content: center;\",\n    \"align-items: center;\",\n    \"width: 100%;\",\n    \"height: 100%;\",\n    \"flex-direction: column;\",\n    \"}\",\n  ];\n\n  var cancelButtonStyles = [\n    \"#\" + ELEMENT_IDS.cancelButton + \" {\",\n    \"height: 24px;\",\n    \"width: 380px;\",\n    \"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\",\n    \"font-style: normal;\",\n    \"font-weight: 700;\",\n    \"font-size: 18px;\",\n    \"line-height: 24px;\",\n    \"text-align: center;\",\n    \"background-color: transparent;\",\n    \"border: none;\",\n    \"color: #FFFFFF;\",\n    \"margin-top: 28px;\",\n    \"}\",\n  ];\n\n  var continueButtonStyles = [\n    \"#\" + ELEMENT_IDS.continueButton + \" {\",\n    \"width: 400px;\",\n    \"height: 50px;\",\n    \"background: #0074DE;\",\n    \"border-radius: 24px;\",\n    \"border: none;\",\n    \"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\",\n    \"font-style: normal;\",\n    \"font-weight: 700;\",\n    \"font-size: 18px;\",\n    \"color: #FFFFFF;\",\n    \"margin-top: 44px;\",\n    \"}\",\n  ];\n\n  var messageStyles = [\n    \"#\" + ELEMENT_IDS.message + \" {\",\n    \"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\",\n    \"font-style: normal;\",\n    \"font-weight: 500;\",\n    \"font-size: 24px;\",\n    \"line-height: 32px;\",\n    \"text-align: center;\",\n    \"color: #FFFFFF;\",\n    \"margin-top: 32px;\",\n    \"}\",\n  ];\n\n  var instructionStyles = [\n    \"#\" + ELEMENT_IDS.instructions + \" {\",\n    \"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\",\n    \"font-style: normal;\",\n    \"font-weight: 400;\",\n    \"font-size: 16px;\",\n    \"line-height: 20px;\",\n    \"text-align: center;\",\n    \"color: #FFFFFF;\",\n    \"margin-top: 16px;\",\n    \"width: 400px;\",\n    \"}\",\n  ];\n\n  var allStyles = backdropStyles.concat(\n    backdropContainerStyles,\n    cancelButtonStyles,\n    continueButtonStyles,\n    messageStyles,\n    instructionStyles\n  );\n\n  return allStyles.join(\"\\n\");\n}\n\nfunction buildAndStyleElements() {\n  var alreadyRenderedBackdrop = document.getElementById(ELEMENT_IDS.backdrop);\n  var backdropStylesElement,\n    backdropDiv,\n    backDropContentContainer,\n    venmoLogoDiv,\n    venmoMessageDiv,\n    instructionsDiv,\n    continueButton,\n    cancelButton;\n\n  if (alreadyRenderedBackdrop) {\n    alreadyRenderedBackdrop.classList.remove(\"hidden\");\n\n    return;\n  }\n  backdropStylesElement = document.createElement(\"style\");\n  backdropDiv = document.createElement(\"div\");\n  backDropContentContainer = document.createElement(\"div\");\n  venmoLogoDiv = document.createElement(\"div\");\n  venmoMessageDiv = document.createElement(\"div\");\n  instructionsDiv = document.createElement(\"div\");\n  continueButton = document.createElement(\"button\");\n  cancelButton = document.createElement(\"button\");\n\n  backdropStylesElement.id = \"venmo-desktop-web__injected-styles\";\n  backdropStylesElement.innerHTML = getElementStyles();\n\n  backdropDiv.id = ELEMENT_IDS.backdrop;\n\n  backDropContentContainer.id = ELEMENT_IDS.backdropContainer;\n\n  venmoLogoDiv.id = ELEMENT_IDS.venmoLogo;\n  venmoLogoDiv.innerHTML = VENMO_LOGO_SVG;\n\n  venmoMessageDiv.id = ELEMENT_IDS.message;\n  venmoMessageDiv.innerText = \"What would you like to do?\";\n\n  instructionsDiv.id = ELEMENT_IDS.instructions;\n  instructionsDiv.innerText = CONTINUE_OR_CANCEL_INSTRUCTIONS;\n\n  continueButton.id = ELEMENT_IDS.continueButton;\n  continueButton.innerText = \"Continue payment\";\n\n  cancelButton.id = ELEMENT_IDS.cancelButton;\n  cancelButton.innerText = \"Cancel payment\";\n\n  document.head.appendChild(backdropStylesElement);\n  backDropContentContainer.appendChild(venmoLogoDiv);\n  backDropContentContainer.appendChild(venmoMessageDiv);\n  backDropContentContainer.appendChild(instructionsDiv);\n  backDropContentContainer.appendChild(continueButton);\n  backDropContentContainer.appendChild(cancelButton);\n  backdropDiv.appendChild(backDropContentContainer);\n  document.body.appendChild(backdropDiv);\n\n  backdropDiv.addEventListener(\"click\", function (event) {\n    event.stopPropagation();\n  });\n}\n\n/**\n * Applies a backdrop over the page, and opens a popup to the supplied url. Uses supplied status and cancel functions to handle the flow.\n * @function runWebLogin\n * @ignore\n * @param {object} options Options for running the web login flow.\n * @param {string} options.venmoUrl Venmo url that is to be used for logging in.\n * @param {Venmo~checkPaymentContextStatusAndProcessResult} options.checkForStatusChange {@link Venmo~checkPaymentContextStatusAndProcessResult} to be invoked in order to check for a payment context status update.\n * @param {Venmo~cancelTokenization} options.cancelTokenization {@link Venmo~cancelTokenization} to be invoked when the appropriate payment context status is retrieved.\n * @param {boolean} options.debug A flag to control whether to use minified assets or not.\n * @returns {Promise} Returns a promise\n */\nfunction runWebLogin(options) {\n  buildAndStyleElements();\n\n  return openPopup(options);\n}\n\n/**\n * When using frameservice, it needs to be created separately from the action of opening. The setup process includes\n * steps that browsers may consider async or too disconnected from the user action required to open a popup.\n *\n * This function enables us to do that setup at an appropriate time.\n * @function setupDesktopWebLogin\n * @ignore\n * @param {object} options Options use for setting up the Desktop Web Login flow.\n * @param {string} options.assetsUrl Url that points to the hosted Braintree assets.\n * @param {boolean} options.debug A flag to control whether to use minified assets or not.\n\n * @returns {Promise} Returns a promise\n */\nfunction setupDesktopWebLogin(options) {\n  var extendedPromise = new ExtendedPromise();\n  var popupName = \"venmoDesktopWebLogin\";\n  var assetsUrl = options.assetsUrl;\n  var debug = options.debug || false;\n  var popupLocation = centeredPopupDimensions();\n  var assetsBaseUrl = assetsUrl + \"/web/\" + VERSION + \"/html\";\n\n  frameService.create(\n    {\n      name: popupName,\n      dispatchFrameUrl:\n        assetsBaseUrl + \"/dispatch-frame\" + useMin(debug) + \".html\",\n      openFrameUrl:\n        assetsBaseUrl + \"/venmo-landing-frame\" + useMin(debug) + \".html\",\n      top: popupLocation.top,\n      left: popupLocation.left,\n      height: POPUP_HEIGHT,\n      width: POPUP_WIDTH,\n    },\n    function (frameServiceInstance) {\n      extendedPromise.resolve(frameServiceInstance);\n    }\n  );\n\n  return extendedPromise;\n}\n\nmodule.exports = {\n  runWebLogin: runWebLogin,\n  openPopup: openPopup,\n  setupDesktopWebLogin: setupDesktopWebLogin,\n  POPUP_WIDTH: POPUP_WIDTH,\n  POPUP_HEIGHT: POPUP_HEIGHT,\n};\n\n},{\"../../lib/frame-service/external\":105,\"../../lib/use-min\":126,\"@braintree/extended-promise\":38}],158:[function(require,module,exports){\n\"use strict\";\n\nvar analytics = require(\"../lib/analytics\");\nvar isBrowserSupported = require(\"./shared/supports-venmo\");\nvar browserDetection = require(\"./shared/browser-detection\");\nvar constants = require(\"./shared/constants\");\nvar errors = require(\"./shared/errors\");\nvar querystring = require(\"../lib/querystring\");\nvar isVerifiedDomain = require(\"../lib/is-verified-domain\");\nvar methods = require(\"../lib/methods\");\nvar convertMethodsToError = require(\"../lib/convert-methods-to-error\");\nvar wrapPromise = require(\"@braintree/wrap-promise\");\nvar BraintreeError = require(\"../lib/braintree-error\");\nvar inIframe = require(\"../lib/in-iframe\");\nvar ExtendedPromise = require(\"@braintree/extended-promise\");\nvar getVenmoUrl = require(\"./shared/get-venmo-url\");\nvar desktopWebLogin = require(\"./shared/web-login-backdrop\");\nvar snakeCaseToCamelCase = require(\"../lib/snake-case-to-camel-case\");\n\n// NEXT_MAJOR_VERSION the source code for this is actually in a\n// typescript repo called venmo-desktop, once the SDK is migrated\n// to typescript, we can move the TS files out of that separate\n// repo and into the web SDK properly\nvar createVenmoDesktop = require(\"./external/\");\nvar graphqlQueries = require(\"./external/queries\");\n\nvar VERSION = \"3.99.0\";\nvar DEFAULT_MOBILE_POLLING_INTERVAL = 250; // 1/4 second\nvar DEFAULT_MOBILE_EXPIRING_THRESHOLD = 300000; // 5 minutes\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\n/**\n * Venmo tokenize payload.\n * @typedef {object} Venmo~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {string} type The payment method type, always `VenmoAccount`.\n * @property {object} details Additional Venmo account details.\n * @property {string} details.username The username of the Venmo account.\n * @property {string} details.paymentContextId The context ID of the Venmo payment. Only available when used with {@link https://braintree.github.io/braintree-web/current/module-braintree-web_venmo.html#.create|`paymentMethodUsage`}.\n */\n\n/**\n * @class\n * @param {object} options The Venmo {@link module:braintree-web/venmo.create create} options.\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/venmo.create|braintree-web.venmo.create} instead.</strong>\n * @classdesc This class represents a Venmo component produced by {@link module:braintree-web/venmo.create|braintree-web/venmo.create}. Instances of this class have methods for tokenizing Venmo payments.\n */\nfunction Venmo(options) {\n  var self = this;\n\n  this._allowDesktopWebLogin = options.allowDesktopWebLogin || false;\n  this._mobileWebFallBack = options.mobileWebFallBack || false;\n  this._createPromise = options.createPromise;\n  this._allowNewBrowserTab = options.allowNewBrowserTab !== false;\n  this._allowWebviews = options.allowWebviews !== false;\n  this._allowDesktop = options.allowDesktop === true;\n  this._useRedirectForIOS = options.useRedirectForIOS === true;\n  this._profileId = options.profileId;\n  this._displayName = options.displayName;\n  this._deepLinkReturnUrl = options.deepLinkReturnUrl;\n  this._ignoreHistoryChanges = options.ignoreHistoryChanges;\n  this._paymentMethodUsage = (options.paymentMethodUsage || \"\").toUpperCase();\n  this._shouldUseLegacyFlow = !this._paymentMethodUsage;\n  this._requireManualReturn = options.requireManualReturn === true;\n  this._useDesktopQRFlow =\n    this._allowDesktop && this._isDesktop() && !this._allowDesktopWebLogin;\n  this._useAllowDesktopWebLogin =\n    this._allowDesktopWebLogin && this._isDesktop();\n  this._cannotHaveReturnUrls = inIframe() || this._requireManualReturn;\n  this._allowAndroidRecreation = options.allowAndroidRecreation !== false;\n  this._maxRetryCount = 3;\n  this._collectCustomerBillingAddress =\n    options.collectCustomerBillingAddress || false;\n  this._collectCustomerShippingAddress =\n    options.collectCustomerShippingAddress || false;\n  this._lineItems = options.lineItems;\n  this._subTotalAmount = options.subTotalAmount;\n  this._discountAmount = options.discountAmount;\n  this._taxAmount = options.taxAmount;\n  this._shippingAmount = options.shippingAmount;\n  this._totalAmount = options.totalAmount;\n\n  this._shouldCreateVenmoPaymentContext =\n    this._cannotHaveReturnUrls || !this._shouldUseLegacyFlow;\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"venmo.desktop-flow.configured.\" + String(Boolean(this._allowDesktop))\n  );\n\n  // if the url has a tokenization result, that indicates\n  // that it cannot be the desktop flow or the manual return\n  // flow. If it's the hash change with paymentMethodUsage\n  // flow, we want to skip creating a new payment context, since\n  // there is already a pending payment context waiting to be\n  // processed. For the hash change flow without paymentMethodUsage,\n  // no further actions are needed.\n  if (this.hasTokenizationResult()) {\n    analytics.sendEvent(\n      this._createPromise,\n      \"venmo.appswitch.return-in-new-tab\"\n    );\n  } else if (this._useDesktopQRFlow) {\n    this._createPromise = this._createPromise.then(function (client) {\n      var config = client.getConfiguration().gatewayConfiguration;\n\n      return createVenmoDesktop({\n        url:\n          config.assetsUrl +\n          \"/web/\" +\n          VERSION +\n          \"/html/venmo-desktop-frame.html\",\n        environment:\n          config.environment === \"production\" ? \"PRODUCTION\" : \"SANDBOX\",\n        profileId: self._profileId || config.payWithVenmo.merchantId,\n        paymentMethodUsage: self._paymentMethodUsage,\n        displayName: self._displayName,\n        Promise: Promise,\n        apiRequest: function (query, data) {\n          return client\n            .request({\n              api: \"graphQLApi\",\n              data: {\n                query: query,\n                variables: data,\n              },\n            })\n            .then(function (response) {\n              return response.data;\n            });\n        },\n        sendEvent: function (eventName) {\n          analytics.sendEvent(self._createPromise, eventName);\n        },\n        verifyDomain: isVerifiedDomain,\n      })\n        .then(function (venmoDesktopInstance) {\n          self._venmoDesktopInstance = venmoDesktopInstance;\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.desktop-flow.presented\"\n          );\n\n          return client;\n        })\n        .catch(function () {\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.desktop-flow.setup-failed\"\n          );\n          self._useDesktopQRFlow = false;\n\n          return client;\n        });\n    });\n  } else if (this._shouldCreateVenmoPaymentContext) {\n    // these variables are only relevant for the manual return flow\n    // and they are only set to make testing easier (so they can\n    // be overwritten with smaller values in the tests)\n    this._mobilePollingInterval = DEFAULT_MOBILE_POLLING_INTERVAL;\n    this._mobilePollingExpiresThreshold = DEFAULT_MOBILE_EXPIRING_THRESHOLD;\n\n    this._createPromise = this._createPromise.then(function (client) {\n      var paymentContextPromise, webLoginPromise;\n      var analyticsCategory = self._cannotHaveReturnUrls\n        ? \"manual-return\"\n        : \"mobile-payment-context\";\n      var config = client.getConfiguration();\n\n      webLoginPromise = desktopWebLogin\n        .setupDesktopWebLogin({\n          assetsUrl: config.gatewayConfiguration.assetsUrl,\n          debug: config.isDebug,\n        })\n        .then(function (frameServiceInstance) {\n          self._frameServiceInstance = frameServiceInstance;\n        })\n        .catch(function (desktopWebErr) {\n          return desktopWebErr;\n        });\n\n      self._mobilePollingContextEnvironment =\n        config.gatewayConfiguration.environment.toUpperCase();\n\n      paymentContextPromise = self\n        ._createVenmoPaymentContext(client)\n        .then(function () {\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.\" + analyticsCategory + \".presented\"\n          );\n\n          return client;\n        })\n        .catch(function (err) {\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.\" + analyticsCategory + \".setup-failed\"\n          );\n\n          return Promise.reject(\n            new BraintreeError({\n              type: errors.VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED.type,\n              code: errors.VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED.code,\n              message: isValidationError(err)\n                ? err.details.originalError[0].message\n                : errors.VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED.message,\n              details: {\n                originalError: err,\n              },\n            })\n          );\n        });\n\n      return ExtendedPromise.all([webLoginPromise, paymentContextPromise])\n        .then(function (results) {\n          var paymentContextResult = results[1]; // We only care about the returned value of the paymentContextPromise\n\n          return Promise.resolve(paymentContextResult);\n        })\n        .catch(function (promiseErr) {\n          // ExtendedPromise.all returns just one error and it's either which fails first/at all.\n          return Promise.reject(promiseErr);\n        });\n    });\n  }\n}\n\nfunction isValidationError(err) {\n  return (\n    err.details &&\n    err.details.originalError &&\n    err.details.originalError[0] &&\n    err.details.originalError[0].extensions &&\n    err.details.originalError[0].extensions.errorClass === \"VALIDATION\" &&\n    err.details.originalError[0].extensions.errorType === \"user_error\"\n  );\n}\n\nVenmo.prototype._createVenmoPaymentContext = function (\n  client,\n  cancelIfTokenizationInProgress\n) {\n  var self = this;\n  var promise, transactionDetails;\n  var configuration = client.getConfiguration();\n  var venmoConfiguration = configuration.gatewayConfiguration.payWithVenmo;\n  var transactionDetailsPresent = false;\n\n  if (!this._shouldCreateVenmoPaymentContext) {\n    return Promise.resolve();\n  }\n\n  if (this._shouldUseLegacyFlow) {\n    promise = client\n      .request({\n        api: \"graphQLApi\",\n        data: {\n          query: graphqlQueries.LEGACY_CREATE_PAYMENT_CONTEXT_QUERY,\n          variables: {\n            input: {\n              environment: this._mobilePollingContextEnvironment,\n              intent: \"PAY_FROM_APP\",\n            },\n          },\n        },\n      })\n      .then(function (response) {\n        return response\n          .data.createVenmoQRCodePaymentContext.venmoQRCodePaymentContext;\n      });\n  } else {\n    // Merchants are not allowed to collect user addresses unless ECD (Enriched Customer Data) is enabled on the BT Control Panel.\n    if (\n      (this._collectCustomerBillingAddress ||\n        this._collectCustomerShippingAddress) &&\n      !venmoConfiguration.enrichedCustomerDataEnabled\n    ) {\n      return Promise.reject(new BraintreeError(errors.VENMO_ECD_DISABLED));\n    }\n\n    if (this._lineItems) {\n      this._lineItems.forEach(function (item) {\n        item.unitTaxAmount = item.unitTaxAmount || \"0\";\n      });\n    }\n    transactionDetails = {\n      subTotalAmount: this._subTotalAmount,\n      discountAmount: this._discountAmount,\n      taxAmount: this._taxAmount,\n      shippingAmount: this._shippingAmount,\n      totalAmount: this._totalAmount,\n      lineItems: this._lineItems,\n    };\n    transactionDetailsPresent = Object.keys(transactionDetails).some(function (\n      detail\n    ) {\n      return transactionDetails[detail] !== undefined; // eslint-disable-line no-undefined\n    });\n    promise = client\n      .request({\n        api: \"graphQLApi\",\n        data: {\n          query: graphqlQueries.CREATE_PAYMENT_CONTEXT_QUERY,\n          variables: {\n            input: {\n              paymentMethodUsage: this._paymentMethodUsage,\n              intent: \"CONTINUE\",\n              customerClient: \"MOBILE_WEB\",\n              displayName: this._displayName,\n              paysheetDetails: {\n                collectCustomerBillingAddress:\n                  this._collectCustomerBillingAddress,\n                collectCustomerShippingAddress:\n                  this._collectCustomerShippingAddress,\n                transactionDetails: transactionDetailsPresent\n                  ? transactionDetails\n                  : undefined, // eslint-disable-line no-undefined\n              },\n            },\n          },\n        },\n      })\n      .then(function (response) {\n        return response.data.createVenmoPaymentContext.venmoPaymentContext;\n      });\n  }\n\n  return promise.then(function (context) {\n    var expiredTime = new Date(context.expiresAt) - new Date(context.createdAt);\n    var refreshIn = expiredTime * 0.6666;\n\n    // prevents multiple setTimeouts from firing from separate calls\n    // to create a payment context by canceling the previous one\n    // if there is a pending call\n    clearTimeout(self._refreshPaymentContextTimeout);\n    self._refreshPaymentContextTimeout = setTimeout(function () {\n      if (self._tokenizationInProgress) {\n        return;\n      }\n      self._createVenmoPaymentContext(client, true);\n    }, refreshIn);\n\n    if (cancelIfTokenizationInProgress && self._tokenizationInProgress) {\n      return;\n    }\n\n    self._venmoPaymentContextStatus = context.status;\n    self._venmoPaymentContextId = context.id;\n  });\n};\n\nVenmo.prototype.appSwitch = function (url) {\n  if (this._deepLinkReturnUrl) {\n    if (isIosWebviewInDeepLinkReturnUrlFlow()) {\n      analytics.sendEvent(\n        this._createPromise,\n        \"venmo.appswitch.start.ios-webview\"\n      );\n      // Deep link URLs do not launch iOS apps from a webview when using window.open or PopupBridge.open.\n      window.location.href = url;\n    } else if (\n      window.popupBridge &&\n      typeof window.popupBridge.open === \"function\"\n    ) {\n      analytics.sendEvent(\n        this._createPromise,\n        \"venmo.appswitch.start.popup-bridge\"\n      );\n      window.popupBridge.open(url);\n    } else {\n      analytics.sendEvent(this._createPromise, \"venmo.appswitch.start.webview\");\n      window.open(url);\n    }\n  } else {\n    analytics.sendEvent(this._createPromise, \"venmo.appswitch.start.browser\");\n\n    if (\n      browserDetection.doesNotSupportWindowOpenInIos() ||\n      this._shouldUseRedirectStrategy()\n    ) {\n      window.location.href = url;\n    } else {\n      window.open(url);\n    }\n  }\n};\n\nVenmo.prototype.getUrl = function () {\n  return this._createPromise.then(\n    function (client) {\n      var configuration = client.getConfiguration();\n      var params = {};\n      var currentUrl =\n        this._deepLinkReturnUrl ||\n        window.location.href.replace(window.location.hash, \"\");\n      var venmoConfiguration = configuration.gatewayConfiguration.payWithVenmo;\n      var analyticsMetadata = configuration.analyticsMetadata;\n      var accessToken = venmoConfiguration.accessToken;\n      var braintreeData = {\n        _meta: {\n          version: analyticsMetadata.sdkVersion,\n          integration: analyticsMetadata.integration,\n          platform: analyticsMetadata.platform,\n          sessionId: analyticsMetadata.sessionId,\n        },\n      };\n\n      this._isDebug = configuration.isDebug;\n      this._assetsUrl = configuration.gatewayConfiguration.assetsUrl;\n\n      currentUrl = currentUrl.replace(/#*$/, \"\");\n\n      /* eslint-disable camelcase */\n      if (this._venmoPaymentContextId) {\n        if (this._shouldUseLegacyFlow) {\n          // NEXT_MAJOR_VERSION stop adding the context id to the access token.\n          // the context id is placed here for backwards compatiblity\n          // with versions of the venmo app that did not support\n          // pulling the resource id off of the query params\n          accessToken += \"|pcid:\" + this._venmoPaymentContextId;\n        } else {\n          params.resource_id = this._venmoPaymentContextId;\n        }\n      }\n\n      if (this._shouldIncludeReturnUrls() || this._useAllowDesktopWebLogin) {\n        if (this._useAllowDesktopWebLogin) {\n          currentUrl =\n            this._assetsUrl + \"/web/\" + VERSION + \"/html/redirect-frame.html\";\n        }\n        params[\"x-success\"] = currentUrl + \"#venmoSuccess=1\";\n        params[\"x-cancel\"] = currentUrl + \"#venmoCancel=1\";\n        params[\"x-error\"] = currentUrl + \"#venmoError=1\";\n      } else {\n        params[\"x-success\"] = \"NOOP\";\n        params[\"x-cancel\"] = \"NOOP\";\n        params[\"x-error\"] = \"NOOP\";\n      }\n\n      if (!this._allowAndroidRecreation) {\n        params.allowAndroidRecreation = 0;\n      } else {\n        params.allowAndroidRecreation = 1;\n      }\n\n      params.ua = window.navigator.userAgent;\n      params.braintree_merchant_id =\n        this._profileId || venmoConfiguration.merchantId;\n      params.braintree_access_token = accessToken;\n      params.braintree_environment = venmoConfiguration.environment;\n      params.braintree_sdk_data = btoa(JSON.stringify(braintreeData));\n\n      return (\n        getVenmoUrl({\n          useAllowDesktopWebLogin: this._useAllowDesktopWebLogin,\n          mobileWebFallBack: this._mobileWebFallBack,\n        }) +\n        \"?\" +\n        querystring.stringify(params)\n      );\n    }.bind(this)\n  );\n};\n\n/**\n * Returns a boolean indicating whether the current browser supports Venmo as a payment method. Please note that iOS Chrome is not supported when the Venmo button is rendered in an iFrame.\n *\n * If `options.allowNewBrowserTab` is false when calling {@link module:braintree-web/venmo.create|venmo.create}, this method will return true only for browsers known to support returning from the Venmo app to the same browser tab. Currently, this is limited to iOS Safari and Android Chrome.\n * If `options.allowWebviews` is false when calling {@link module:braintree-web/venmo.create|venmo.create}, this method will return true only for mobile browsers that are not webviews.\n * @public\n * @returns {boolean} True if the current browser is supported, false if not.\n */\nVenmo.prototype.isBrowserSupported = function () {\n  return isBrowserSupported.isBrowserSupported({\n    allowNewBrowserTab: this._allowNewBrowserTab,\n    allowWebviews: this._allowWebviews,\n    allowDesktop: this._allowDesktop,\n    allowDesktopWebLogin: this._allowDesktopWebLogin,\n  });\n};\n\n/**\n * Returns a boolean indicating whether a Venmo tokenization result is ready to be processed immediately.\n *\n * This method should be called after initialization to see if the result of Venmo authorization is available. If it returns true, call {@link Venmo#tokenize|tokenize} immediately to process the results.\n *\n * @public\n * @returns {boolean} True if the results of Venmo payment authorization are available and ready to process.\n */\nVenmo.prototype.hasTokenizationResult = function () {\n  return this._hasTokenizationResult();\n};\n\n// a private version that lets us pass in a custom hash\n// when listening on a hashchange event\nVenmo.prototype._hasTokenizationResult = function (hash) {\n  var params = getFragmentParameters(hash);\n\n  return (\n    typeof (params.venmoSuccess || params.venmoError || params.venmoCancel) !==\n    \"undefined\"\n  );\n};\n\nVenmo.prototype._shouldIncludeReturnUrls = function () {\n  // when a deep link return url is passed, we should always\n  // respect it and include the return urls so the venmo app\n  // can app switch back to it\n  if (this._deepLinkReturnUrl) {\n    return true;\n  }\n\n  // when the sdk is initialized within an iframe, it's\n  // impossible to return back to the correct place automatically\n  // without also setting a deepLinkReturnUrl. When the return\n  // urls are omitted, the Venmo app prompts the user to return\n  // manually.\n  return !this._cannotHaveReturnUrls;\n};\n\nVenmo.prototype._isDesktop = function () {\n  return !(browserDetection.isIos() || browserDetection.isAndroid());\n};\n\n/**\n * Launches the Venmo flow and returns a nonce payload.\n *\n * If {@link Venmo#hasTokenizationResult|hasTokenizationResult} returns true, calling tokenize will immediately process and return the results without initiating the Venmo payment authorization flow.\n *\n * Only one Venmo flow can be active at a time. One way to achieve this is to disable your Venmo button while the flow is open.\n * @public\n * @param {object} [options] Options for tokenization.\n * @param {number} [options.processResultsDelay=500] The amount of time in milliseconds to delay processing the results. In most cases, this value should be left as the default.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link Venmo~tokenizePayload|tokenizePayload}. If no callback is provided, the method will return a Promise that resolves with a {@link Venmo~tokenizePayload|tokenizePayload}.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * button.addEventListener('click', function () {\n *   // Disable the button so that we don't attempt to open multiple popups.\n *   button.setAttribute('disabled', 'disabled');\n *\n *   // Because tokenize opens a new window, this must be called\n *   // as a result of a user action, such as a button click.\n *   venmoInstance.tokenize().then(function (payload) {\n *     // Submit payload.nonce to your server\n *     // Use payload.username to get the Venmo username and display any UI\n *   }).catch(function (tokenizeError) {\n *     // Handle flow errors or premature flow closure\n *     switch (tokenizeErr.code) {\n *       case 'VENMO_APP_CANCELED':\n *         console.log('User canceled Venmo flow.');\n *         break;\n *       case 'VENMO_CANCELED':\n *         console.log('User canceled Venmo, or Venmo app is not available.');\n *         break;\n *       default:\n *         console.error('Error!', tokenizeErr);\n *     }\n *   }).then(function () {\n *     button.removeAttribute('disabled');\n *   });\n * });\n */\nVenmo.prototype.tokenize = function (options) {\n  var self = this;\n  var tokenizationPromise;\n\n  options = options || {};\n\n  if (this._tokenizationInProgress === true) {\n    return Promise.reject(\n      new BraintreeError(errors.VENMO_TOKENIZATION_REQUEST_ACTIVE)\n    );\n  }\n\n  this._tokenizationInProgress = true;\n  if (this._useDesktopQRFlow) {\n    // for the desktop flow, we create a venmo payment\n    // context and then present a qr code modal to the\n    // customer and they will open up their venmo app\n    // and scan it and approve the purchase on their\n    // mobile device. The sdk will start polling\n    // in order to determine when the status of the\n    // payment context has updated and then pass the\n    // resulting nonce back to the merchant.\n    tokenizationPromise = this._tokenizeForDesktopQRFlow(options);\n  } else if (this._useAllowDesktopWebLogin) {\n    /**\n     * For Desktop Web Login, we open a browser popup to allow for authorization. Once authorized, the redirect urls are used by Venmo, and we query the API for a payment context status update.\n     *\n     * - Payment context is created on initialization\n     * - Popup is opened to Venmo login url.\n     *  - The payment is authorized or canceled, and the popup is closed\n     * - Once the popup is closed, we query the API for a payment context status update\n     *\n     * This is an alternate, opt-in flow to be used the Desktop QR Flow is not desired for Pay with Venmo desktop experiences.\n     */\n    tokenizationPromise = this._tokenizeWebLoginWithRedirect();\n  } else if (this._cannotHaveReturnUrls) {\n    // in the manual return strategy, we create the payment\n    // context on initialization, then continually poll once\n    // the app switch begins until we get a response indiciating\n    // the payment context was approved by the customer on the\n    // Venmo app. The payment context response also includes a\n    // nonce. There are 2 cases where we use the manual return\n    // strategy:\n    // 1. the sdk is instantiated in an iframe, because\n    //    the venmo app is unable to redirect automatically\n    //    when that is the case so we rely on the customer\n    //    to do a manual redirect and continunally poll for\n    //    updates on the payment context to get the nonce\n    // 2. same deal for when `requireManualReturn` is configured\n    tokenizationPromise = this._tokenizeForMobileWithManualReturn();\n  } else {\n    // the default mobile flow is to app switch to the\n    // venmo app, and then have the venmo app switch\n    // back to the page with the venmo nonce details\n    // encoded into the hash portion of the url. If\n    // `paymentMethodUsage` is provided when instantiating\n    // the sdk, we also create a payment context and pass\n    // the resource id to the Venmo app during the app switch.\n    // Once we get a succesful return, we ping the payment\n    // context query to get any additional data needed\n    // to send back to the merchant.\n    tokenizationPromise =\n      this._tokenizeForMobileWithHashChangeListeners(options);\n  }\n\n  return tokenizationPromise\n    .then(function (payload) {\n      return self._createPromise\n        .then(function (client) {\n          return self._createVenmoPaymentContext(client);\n        })\n        .then(function () {\n          self._tokenizationInProgress = false;\n\n          return formatTokenizePayload(payload);\n        });\n    })\n    .catch(function (err) {\n      return self._createPromise\n        .then(function (client) {\n          // We create a new Payment Context because if the last one failed, then presumably we don't want to use it again.\n          // On the first pass, we create the payment context at initialization, and since we used that first one we now need to create a new one\n          // for the next time someone tries to tokenize.\n          return self._createVenmoPaymentContext(client);\n        })\n        .then(function () {\n          self._tokenizationInProgress = false;\n\n          return Promise.reject(err);\n        });\n    });\n};\n\n/**\n * Cancels the venmo tokenization process\n *\n * @public\n * @function Venmo~cancelTokenization\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * venmoTokenizeButton.addEventListener('click', function () {\n *   venmoInstance.tokenize().then(function (payload) {\n *     // handle payload\n *   }).catch(function (err) {\n *     if (err.code === 'VENMO_TOKENIZATION_CANCELED_BY_MERCHANT') {\n *       // tokenization was canceled by calling cancelTokenization\n *     }\n *   });\n * });\n *\n * venmoCancelButton.addEventListener('click', function () {\n *   // Hide the button when the venmo flow is not in progress\n *   venmoCancelButton.style.display = \"none\";\n *\n *   venmoInstance.cancelTokenization().then(function () {\n *     // done canceling the flow\n *   }).catch(function (err) {\n *     // should only get here if there is no tokenization in progress\n *   });\n * });\n */\nVenmo.prototype.cancelTokenization = function () {\n  if (!this._tokenizationInProgress) {\n    return Promise.reject(\n      new BraintreeError(errors.VENMO_TOKENIZATION_REQUEST_NOT_ACTIVE)\n    );\n  }\n\n  this._removeVisibilityEventListener();\n\n  // important to reject the tokenization promise first\n  // so the tokenize method rejects with this error\n  // rather than a customer canceled error in the mobile\n  // polling and desktop flows\n  if (this._tokenizePromise) {\n    this._tokenizePromise.reject(\n      new BraintreeError(errors.VENMO_TOKENIZATION_CANCELED_BY_MERCHANT)\n    );\n  }\n\n  return Promise.all([\n    this._cancelMobilePaymentContext(),\n    this._cancelVenmoDesktopContext(),\n  ]);\n};\n\nVenmo.prototype._tokenizeWebLoginWithRedirect = function () {\n  var self = this;\n\n  analytics.sendEvent(self._createPromise, \"venmo.tokenize.web-login.start\");\n  this._tokenizePromise = new ExtendedPromise();\n\n  return this.getUrl().then(function (url) {\n    desktopWebLogin\n      .runWebLogin({\n        checkForStatusChange:\n          self._checkPaymentContextStatusAndProcessResult.bind(self),\n        cancelTokenization: self.cancelTokenization.bind(self),\n        frameServiceInstance: self._frameServiceInstance,\n        venmoUrl: url,\n        debug: self._isDebug,\n      })\n      .then(function (payload) {\n        analytics.sendEvent(\n          self._createPromise,\n          \"venmo.tokenize.web-login.success\"\n        );\n\n        self._tokenizePromise.resolve({\n          paymentMethodNonce: payload.paymentMethodId,\n          username: payload.userName,\n          payerInfo: payload.payerInfo,\n          id: self._venmoPaymentContextId,\n        });\n      })\n      .catch(function (err) {\n        analytics.sendEvent(\n          self._createPromise,\n          \"venmo.tokenize.web-login.failure\"\n        );\n\n        self._tokenizePromise.reject(err);\n      });\n\n    return self._tokenizePromise;\n  });\n};\n\nVenmo.prototype._queryPaymentContextStatus = function (id) {\n  var self = this;\n\n  return this._createPromise\n    .then(function (client) {\n      var query = self._shouldUseLegacyFlow\n        ? graphqlQueries.LEGACY_VENMO_PAYMENT_CONTEXT_STATUS_QUERY\n        : graphqlQueries.VENMO_PAYMENT_CONTEXT_STATUS_QUERY;\n\n      return client.request({\n        api: \"graphQLApi\",\n        data: {\n          query: query,\n          variables: {\n            id: id,\n          },\n        },\n      });\n    })\n    .then(function (response) {\n      return response.data.node;\n    });\n};\n\n/**\n * Queries the GraphQL API to get the payment context and process the status. Retries until there is an update to the payment context status.\n * @name Venmo~checkPaymentContextStatusAndProcessResult\n * @ignore\n * @param {number} retryCount The counter for tracking number of retries made against the API.\n * @returns {Promise} Returns a promise\n */\nVenmo.prototype._checkPaymentContextStatusAndProcessResult = function (\n  retryCount\n) {\n  var self = this;\n\n  return self\n    ._queryPaymentContextStatus(self._venmoPaymentContextId)\n    .catch(function (networkError) {\n      return Promise.reject(\n        new BraintreeError({\n          type: errors.VENMO_NETWORK_ERROR.type,\n          code: errors.VENMO_NETWORK_ERROR.code,\n          message: errors.VENMO_NETWORK_ERROR.message,\n          details: networkError,\n        })\n      );\n    })\n    .then(function (node) {\n      var resultStatus = node.status;\n\n      if (resultStatus !== self._venmoPaymentContextStatus) {\n        self._venmoPaymentContextStatus = resultStatus;\n\n        analytics.sendEvent(\n          self._createPromise,\n          \"venmo.tokenize.web-login.status-change\"\n        );\n\n        switch (resultStatus) {\n          case \"APPROVED\":\n            return Promise.resolve(node);\n          case \"CANCELED\":\n            return Promise.reject(\n              new BraintreeError(errors.VENMO_CUSTOMER_CANCELED)\n            );\n          case \"FAILED\":\n            return Promise.reject(\n              new BraintreeError(errors.VENMO_TOKENIZATION_FAILED)\n            );\n          default:\n        }\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (retryCount < self._maxRetryCount) {\n          retryCount++;\n\n          return self\n            ._checkPaymentContextStatusAndProcessResult(retryCount)\n            .then(resolve)\n            .catch(reject);\n        }\n\n        return reject(new BraintreeError(errors.VENMO_TOKENIZATION_FAILED));\n      });\n    });\n};\n\nVenmo.prototype._pollForStatusChange = function () {\n  var self = this;\n\n  if (Date.now() > self._mobilePollingContextExpiresIn) {\n    return Promise.reject(\n      new BraintreeError(errors.VENMO_MOBILE_POLLING_TOKENIZATION_TIMEOUT)\n    );\n  }\n\n  return this._queryPaymentContextStatus(this._venmoPaymentContextId)\n    .catch(function (networkError) {\n      return Promise.reject(\n        new BraintreeError({\n          type: errors.VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR.type,\n          code: errors.VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR.code,\n          message:\n            errors.VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR.message,\n          details: {\n            originalError: networkError,\n          },\n        })\n      );\n    })\n    .then(function (node) {\n      var newStatus = node.status;\n\n      if (newStatus !== self._venmoPaymentContextStatus) {\n        self._venmoPaymentContextStatus = newStatus;\n\n        analytics.sendEvent(\n          self._createPromise,\n          \"venmo.tokenize.manual-return.status-change.\" +\n            newStatus.toLowerCase()\n        );\n\n        switch (newStatus) {\n          case \"EXPIRED\":\n          case \"FAILED\":\n          case \"CANCELED\":\n            return Promise.reject(\n              new BraintreeError(\n                errors[\"VENMO_MOBILE_POLLING_TOKENIZATION_\" + newStatus]\n              )\n            );\n          case \"APPROVED\":\n            return Promise.resolve(node);\n          case \"CREATED\":\n          case \"SCANNED\":\n          default:\n          // any other statuses are irrelevant to the polling\n          // and can just be ignored\n        }\n      }\n\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          self._pollForStatusChange().then(resolve).catch(reject);\n        }, self._mobilePollingInterval);\n      });\n    });\n};\n\nVenmo.prototype._tokenizeForMobileWithManualReturn = function () {\n  var self = this;\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"venmo.tokenize.manual-return.start\"\n  );\n\n  this._mobilePollingContextExpiresIn =\n    Date.now() + this._mobilePollingExpiresThreshold;\n  this._tokenizePromise = new ExtendedPromise();\n\n  this._pollForStatusChange()\n    .then(function (payload) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.tokenize.manual-return.success\"\n      );\n\n      self._tokenizePromise.resolve({\n        paymentMethodNonce: payload.paymentMethodId,\n        username: payload.userName,\n        payerInfo: payload.payerInfo,\n        id: self._venmoPaymentContextId,\n      });\n    })\n    .catch(function (err) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.tokenize.manual-return.failure\"\n      );\n\n      self._tokenizePromise.reject(err);\n    });\n\n  return this.getUrl().then(function (url) {\n    self.appSwitch(url);\n\n    return self._tokenizePromise;\n  });\n};\n\nVenmo.prototype._shouldUseRedirectStrategy = function () {\n  if (!browserDetection.isIos()) {\n    return false;\n  }\n\n  if (this._mobileWebFallBack === true) {\n    return true;\n  }\n\n  return this._useRedirectForIOS;\n};\n\nVenmo.prototype._tokenizeForMobileWithHashChangeListeners = function (options) {\n  var self = this;\n  var resultProcessingInProgress, visibilityChangeListenerTimeout;\n\n  if (this.hasTokenizationResult()) {\n    return this.processHashChangeFlowResults();\n  }\n\n  analytics.sendEvent(this._createPromise, \"venmo.tokenize.mobile.start\");\n  this._tokenizePromise = new ExtendedPromise();\n\n  this._previousHash = window.location.hash;\n\n  function completeFlow(hash) {\n    var error;\n\n    self\n      .processHashChangeFlowResults(hash)\n      .catch(function (err) {\n        error = err;\n      })\n      .then(function (res) {\n        if (\n          !self._ignoreHistoryChanges &&\n          window.location.hash !== self._previousHash\n        ) {\n          window.location.hash = self._previousHash;\n        }\n        self._removeVisibilityEventListener();\n\n        if (error) {\n          self._tokenizePromise.reject(error);\n        } else {\n          self._tokenizePromise.resolve(res);\n        }\n        delete self._tokenizePromise;\n      });\n  }\n\n  // The Venmo SDK app switches back with the results of the\n  // tokenization encoded in the hash\n  this._onHashChangeListener = function (e) {\n    var hash = e.newURL.split(\"#\")[1];\n\n    if (!self._hasTokenizationResult(hash)) {\n      return;\n    }\n\n    resultProcessingInProgress = true;\n    clearTimeout(visibilityChangeListenerTimeout);\n    completeFlow(hash);\n  };\n\n  window.addEventListener(\"hashchange\", this._onHashChangeListener, false);\n\n  // Subscribe to document visibility change events to detect when app switch\n  // has returned. Acts as a fallback for the hashchange listener and catches\n  // the cancel case via manual app switch back\n  this._visibilityChangeListener = function () {\n    var delay =\n      options.processResultsDelay || constants.DEFAULT_PROCESS_RESULTS_DELAY;\n\n    if (!window.document.hidden) {\n      if (!resultProcessingInProgress) {\n        visibilityChangeListenerTimeout = setTimeout(completeFlow, delay);\n      }\n    }\n  };\n\n  return this.getUrl().then(function (url) {\n    self.appSwitch(url);\n\n    // Add a brief delay to ignore visibility change events that occur right before app switch\n    setTimeout(function () {\n      window.document.addEventListener(\n        documentVisibilityChangeEventName(),\n        self._visibilityChangeListener\n      );\n    }, constants.DOCUMENT_VISIBILITY_CHANGE_EVENT_DELAY);\n\n    return self._tokenizePromise;\n  });\n};\n\nVenmo.prototype._tokenizeForDesktopQRFlow = function () {\n  var self = this;\n\n  analytics.sendEvent(this._createPromise, \"venmo.tokenize.desktop.start\");\n\n  this._tokenizePromise = new ExtendedPromise();\n\n  this._createPromise\n    .then(function () {\n      return self._venmoDesktopInstance.launchDesktopFlow();\n    })\n    .then(function (payload) {\n      self._venmoDesktopInstance.hideDesktopFlow();\n\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.tokenize.desktop.success\"\n      );\n\n      self._tokenizePromise.resolve(payload);\n    })\n    .catch(function (err) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.tokenize.desktop.failure\"\n      );\n\n      if (self._venmoDesktopInstance) {\n        self._venmoDesktopInstance.hideDesktopFlow();\n      }\n\n      if (err && err.reason === \"CUSTOMER_CANCELED\") {\n        self._tokenizePromise.reject(\n          new BraintreeError(errors.VENMO_DESKTOP_CANCELED)\n        );\n\n        return;\n      }\n\n      self._tokenizePromise.reject(\n        new BraintreeError({\n          type: errors.VENMO_DESKTOP_UNKNOWN_ERROR.type,\n          code: errors.VENMO_DESKTOP_UNKNOWN_ERROR.code,\n          message: errors.VENMO_DESKTOP_UNKNOWN_ERROR.message,\n          details: {\n            originalError: err,\n          },\n        })\n      );\n    });\n\n  return this._tokenizePromise;\n};\n\nVenmo.prototype._cancelMobilePaymentContext = function () {\n  var self = this;\n\n  return this._createPromise.then(function (client) {\n    var query;\n\n    if (self._venmoPaymentContextId) {\n      query = self._shouldUseLegacyFlow\n        ? graphqlQueries.LEGACY_UPDATE_PAYMENT_CONTEXT_QUERY\n        : graphqlQueries.UPDATE_PAYMENT_CONTEXT_QUERY;\n\n      return client.request({\n        api: \"graphQLApi\",\n        data: {\n          query: query,\n          variables: {\n            input: {\n              id: self._venmoPaymentContextId,\n              status: \"CANCELED\",\n            },\n          },\n        },\n      });\n    }\n\n    return Promise.resolve();\n  });\n};\n\nVenmo.prototype._cancelVenmoDesktopContext = function () {\n  var self = this;\n\n  return this._createPromise.then(function () {\n    if (self._venmoDesktopInstance) {\n      self._venmoDesktopInstance.updateVenmoDesktopPaymentContext(\"CANCELED\");\n    }\n\n    return Promise.resolve();\n  });\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/venmo.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * venmoInstance.teardown();\n * @example <caption>With callback</caption>\n * venmoInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nVenmo.prototype.teardown = function () {\n  var self = this;\n\n  this._removeVisibilityEventListener();\n\n  return this._createPromise.then(\n    function () {\n      if (self._venmoDesktopInstance) {\n        self._venmoDesktopInstance.teardown();\n      }\n\n      clearTimeout(self._refreshPaymentContextTimeout);\n      self._cancelMobilePaymentContext();\n\n      convertMethodsToError(this, methods(Venmo.prototype));\n    }.bind(this)\n  );\n};\n\nVenmo.prototype._removeVisibilityEventListener = function () {\n  window.removeEventListener(\"hashchange\", this._onHashChangeListener);\n  window.document.removeEventListener(\n    documentVisibilityChangeEventName(),\n    this._visibilityChangeListener\n  );\n\n  delete this._visibilityChangeListener;\n  delete this._onHashChangeListener;\n};\n\n/**\n * The hash parameter in this function is optional. If no hash parameter is passed, the `getFragmentParameters` function will default to the hash present in the website's URL instead.\n *\n * There are two scenarios where this method is called:\n *\n * 1. When called within a browser that is capable of returning to the same tab that started the Venmo flow, we set up a listener to detect hash changes in the url. Part of the return to the merchant's website from the Venmo app includes encoding the details of the purchase in the hash of the url. The callback is invoked and the hash is pulled off from the event payload. The reason we pull the hash off of the event payload instead of pulling it directly from the URL is because sometimes a single page app will use the hash parameter for it's routing system, and it's possible to hit a race condition where the routing code has already removed the Venmo specific attributes from the hash before we are able to pull it off the url. Grabbing the hash from the event handler instead ensures we get the Venmo details, no matter what the url is converted to.\n * 2. The other scenario is for browsers that cannot return to the same tab, and instead the Venmo app must open a new tab. Since there is no hash listener to pull the hash from, we pull the hash details directly from the url using the `getFragmentParameters` method.\n *\n * @ignore\n * @param {string} [hash] Optionally provided browser url hash.\n * @returns {Promise} Returns a promise\n */\nVenmo.prototype.processHashChangeFlowResults = function (hash) {\n  var self = this;\n  var params = getFragmentParameters(hash);\n\n  // NEXT_MAJOR_VERSION only rely on payment context status call and stop relying on the\n  // content of the hash\n\n  return new Promise(function (resolve, reject) {\n    if (!self._shouldUseLegacyFlow) {\n      self\n        ._pollForStatusChange()\n        .then(function (payload) {\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.appswitch.handle.payment-context-status-query.success\"\n          );\n\n          return resolve({\n            paymentMethodNonce: payload.paymentMethodId,\n            username: payload.userName,\n            payerInfo: payload.payerInfo,\n            id: self._venmoPaymentContextId,\n          });\n        })\n        .catch(function (err) {\n          if (\n            err.type === errors.VENMO_MOBILE_POLLING_TOKENIZATION_CANCELED.type\n          ) {\n            // We want to reject in this case because if it the process was canceled, we don't want to take the happy path\n            reject(err);\n          }\n\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.process-results.payment-context-status-query-failed\"\n          );\n          // If the polling request fails, but not because of cancelization, we will rely on the params provided from the hash\n          resolve(params);\n        });\n    } else if (params.venmoSuccess) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.appswitch.handle.success\"\n      );\n\n      resolve(params);\n    } else if (params.venmoError) {\n      analytics.sendEvent(self._createPromise, \"venmo.appswitch.handle.error\");\n      reject(\n        new BraintreeError({\n          type: errors.VENMO_APP_FAILED.type,\n          code: errors.VENMO_APP_FAILED.code,\n          message: errors.VENMO_APP_FAILED.message,\n          details: {\n            originalError: {\n              message: decodeURIComponent(params.errorMessage),\n              code: params.errorCode,\n            },\n          },\n        })\n      );\n    } else if (params.venmoCancel) {\n      analytics.sendEvent(self._createPromise, \"venmo.appswitch.handle.cancel\");\n      reject(new BraintreeError(errors.VENMO_APP_CANCELED));\n    } else {\n      // User has either manually switched back to browser, or app is not available for app switch\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.appswitch.cancel-or-unavailable\"\n      );\n      reject(new BraintreeError(errors.VENMO_CANCELED));\n    }\n\n    self._clearFragmentParameters();\n  });\n};\n\nVenmo.prototype._clearFragmentParameters = function () {\n  if (this._ignoreHistoryChanges) {\n    return;\n  }\n\n  if (\n    typeof window.history.replaceState === \"function\" &&\n    window.location.hash\n  ) {\n    history.pushState(\n      {},\n      \"\",\n      window.location.href.slice(0, window.location.href.indexOf(\"#\"))\n    );\n  }\n};\n\nfunction getFragmentParameters(hash) {\n  var keyValuesArray = (hash || window.location.hash.substring(1)).split(\"&\");\n\n  var parsedParams = keyValuesArray.reduce(function (toReturn, keyValue) {\n    var parts = keyValue.split(\"=\");\n    // some Single Page Apps may pre-pend a / to the first value\n    // in the hash, assuming it's a route in their app\n    // instead of information from Venmo, this removes all\n    // non-alphanumeric characters from the keys in the params\n    var decodedKey = decodeURIComponent(parts[0]).replace(/\\W/g, \"\");\n    var key = snakeCaseToCamelCase(decodedKey);\n    var value = decodeURIComponent(parts[1]);\n\n    toReturn[key] = value;\n\n    return toReturn;\n  }, {});\n\n  if (parsedParams.resourceId) {\n    parsedParams.id = parsedParams.resourceId;\n  }\n\n  return parsedParams;\n}\n\nfunction formatUserName(username) {\n  username = username || \"\";\n\n  // NEXT_MAJOR_VERSION the web sdks have a prepended @ sign\n  // but the ios and android ones do not. This should be standardized\n  return \"@\" + username.replace(\"@\", \"\");\n}\n\nfunction formatTokenizePayload(payload) {\n  var formattedPayload = {\n    nonce: payload.paymentMethodNonce,\n    type: \"VenmoAccount\",\n    details: {\n      username: formatUserName(payload.username),\n      paymentContextId: payload.id,\n    },\n  };\n\n  if (payload.payerInfo) {\n    formattedPayload.details.payerInfo = payload.payerInfo;\n    formattedPayload.details.payerInfo.userName = formatUserName(\n      payload.payerInfo.userName\n    );\n  }\n\n  return formattedPayload;\n}\n\n// From https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\nfunction documentVisibilityChangeEventName() {\n  var visibilityChange;\n\n  if (typeof window.document.hidden !== \"undefined\") {\n    // Opera 12.10 and Firefox 18 and later support\n    visibilityChange = \"visibilitychange\";\n  } else if (typeof window.document.msHidden !== \"undefined\") {\n    visibilityChange = \"msvisibilitychange\";\n  } else if (typeof window.document.webkitHidden !== \"undefined\") {\n    visibilityChange = \"webkitvisibilitychange\";\n  }\n\n  return visibilityChange;\n}\n\nfunction isIosWebviewInDeepLinkReturnUrlFlow() {\n  // we know it's a webview because this flow only gets\n  // used when checking the deep link flow\n  // test the platform here to get around custom useragents\n  return (\n    window.navigator.platform &&\n    /iPhone|iPad|iPod/.test(window.navigator.platform)\n  );\n}\n\nmodule.exports = wrapPromise.wrapPrototype(Venmo);\n\n},{\"../lib/analytics\":86,\"../lib/braintree-error\":91,\"../lib/convert-methods-to-error\":93,\"../lib/in-iframe\":116,\"../lib/is-verified-domain\":119,\"../lib/methods\":121,\"../lib/querystring\":123,\"../lib/snake-case-to-camel-case\":125,\"./external/\":147,\"./external/queries\":148,\"./shared/browser-detection\":151,\"./shared/constants\":152,\"./shared/errors\":153,\"./shared/get-venmo-url\":155,\"./shared/supports-venmo\":156,\"./shared/web-login-backdrop\":157,\"@braintree/extended-promise\":38,\"@braintree/wrap-promise\":47}],159:[function(require,module,exports){\n\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar cardTypes = require(\"./lib/card-types\");\nvar add_matching_cards_to_results_1 = require(\"./lib/add-matching-cards-to-results\");\nvar is_valid_input_type_1 = require(\"./lib/is-valid-input-type\");\nvar find_best_match_1 = require(\"./lib/find-best-match\");\nvar clone_1 = require(\"./lib/clone\");\nvar customCards = {};\nvar cardNames = {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    AMERICAN_EXPRESS: \"american-express\",\n    DINERS_CLUB: \"diners-club\",\n    DISCOVER: \"discover\",\n    JCB: \"jcb\",\n    UNIONPAY: \"unionpay\",\n    MAESTRO: \"maestro\",\n    ELO: \"elo\",\n    MIR: \"mir\",\n    HIPER: \"hiper\",\n    HIPERCARD: \"hipercard\",\n};\nvar ORIGINAL_TEST_ORDER = [\n    cardNames.VISA,\n    cardNames.MASTERCARD,\n    cardNames.AMERICAN_EXPRESS,\n    cardNames.DINERS_CLUB,\n    cardNames.DISCOVER,\n    cardNames.JCB,\n    cardNames.UNIONPAY,\n    cardNames.MAESTRO,\n    cardNames.ELO,\n    cardNames.MIR,\n    cardNames.HIPER,\n    cardNames.HIPERCARD,\n];\nvar testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\nfunction findType(cardType) {\n    return customCards[cardType] || cardTypes[cardType];\n}\nfunction getAllCardTypes() {\n    return testOrder.map(function (cardType) { return clone_1.clone(findType(cardType)); });\n}\nfunction getCardPosition(name, ignoreErrorForNotExisting) {\n    if (ignoreErrorForNotExisting === void 0) { ignoreErrorForNotExisting = false; }\n    var position = testOrder.indexOf(name);\n    if (!ignoreErrorForNotExisting && position === -1) {\n        throw new Error('\"' + name + '\" is not a supported card type.');\n    }\n    return position;\n}\nfunction creditCardType(cardNumber) {\n    var results = [];\n    if (!is_valid_input_type_1.isValidInputType(cardNumber)) {\n        return results;\n    }\n    if (cardNumber.length === 0) {\n        return getAllCardTypes();\n    }\n    testOrder.forEach(function (cardType) {\n        var cardConfiguration = findType(cardType);\n        add_matching_cards_to_results_1.addMatchingCardsToResults(cardNumber, cardConfiguration, results);\n    });\n    var bestMatch = find_best_match_1.findBestMatch(results);\n    if (bestMatch) {\n        return [bestMatch];\n    }\n    return results;\n}\ncreditCardType.getTypeInfo = function (cardType) {\n    return clone_1.clone(findType(cardType));\n};\ncreditCardType.removeCard = function (name) {\n    var position = getCardPosition(name);\n    testOrder.splice(position, 1);\n};\ncreditCardType.addCard = function (config) {\n    var existingCardPosition = getCardPosition(config.type, true);\n    customCards[config.type] = config;\n    if (existingCardPosition === -1) {\n        testOrder.push(config.type);\n    }\n};\ncreditCardType.updateCard = function (cardType, updates) {\n    var originalObject = customCards[cardType] || cardTypes[cardType];\n    if (!originalObject) {\n        throw new Error(\"\\\"\" + cardType + \"\\\" is not a recognized type. Use `addCard` instead.'\");\n    }\n    if (updates.type && originalObject.type !== updates.type) {\n        throw new Error(\"Cannot overwrite type parameter.\");\n    }\n    var clonedCard = clone_1.clone(originalObject);\n    clonedCard = __assign(__assign({}, clonedCard), updates);\n    customCards[clonedCard.type] = clonedCard;\n};\ncreditCardType.changeOrder = function (name, position) {\n    var currentPosition = getCardPosition(name);\n    testOrder.splice(currentPosition, 1);\n    testOrder.splice(position, 0, name);\n};\ncreditCardType.resetModifications = function () {\n    testOrder = clone_1.clone(ORIGINAL_TEST_ORDER);\n    customCards = {};\n};\ncreditCardType.types = cardNames;\nmodule.exports = creditCardType;\n\n},{\"./lib/add-matching-cards-to-results\":160,\"./lib/card-types\":161,\"./lib/clone\":162,\"./lib/find-best-match\":163,\"./lib/is-valid-input-type\":164}],160:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.addMatchingCardsToResults = void 0;\nvar clone_1 = require(\"./clone\");\nvar matches_1 = require(\"./matches\");\nfunction addMatchingCardsToResults(cardNumber, cardConfiguration, results) {\n    var i, patternLength;\n    for (i = 0; i < cardConfiguration.patterns.length; i++) {\n        var pattern = cardConfiguration.patterns[i];\n        if (!matches_1.matches(cardNumber, pattern)) {\n            continue;\n        }\n        var clonedCardConfiguration = clone_1.clone(cardConfiguration);\n        if (Array.isArray(pattern)) {\n            patternLength = String(pattern[0]).length;\n        }\n        else {\n            patternLength = String(pattern).length;\n        }\n        if (cardNumber.length >= patternLength) {\n            clonedCardConfiguration.matchStrength = patternLength;\n        }\n        results.push(clonedCardConfiguration);\n        break;\n    }\n}\nexports.addMatchingCardsToResults = addMatchingCardsToResults;\n\n},{\"./clone\":162,\"./matches\":165}],161:[function(require,module,exports){\n\"use strict\";\nvar cardTypes = {\n    visa: {\n        niceType: \"Visa\",\n        type: \"visa\",\n        patterns: [4],\n        gaps: [4, 8, 12],\n        lengths: [16, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    mastercard: {\n        niceType: \"Mastercard\",\n        type: \"mastercard\",\n        patterns: [[51, 55], [2221, 2229], [223, 229], [23, 26], [270, 271], 2720],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    \"american-express\": {\n        niceType: \"American Express\",\n        type: \"american-express\",\n        patterns: [34, 37],\n        gaps: [4, 10],\n        lengths: [15],\n        code: {\n            name: \"CID\",\n            size: 4,\n        },\n    },\n    \"diners-club\": {\n        niceType: \"Diners Club\",\n        type: \"diners-club\",\n        patterns: [[300, 305], 36, 38, 39],\n        gaps: [4, 10],\n        lengths: [14, 16, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    discover: {\n        niceType: \"Discover\",\n        type: \"discover\",\n        patterns: [6011, [644, 649], 65],\n        gaps: [4, 8, 12],\n        lengths: [16, 19],\n        code: {\n            name: \"CID\",\n            size: 3,\n        },\n    },\n    jcb: {\n        niceType: \"JCB\",\n        type: \"jcb\",\n        patterns: [2131, 1800, [3528, 3589]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVV\",\n            size: 3,\n        },\n    },\n    unionpay: {\n        niceType: \"UnionPay\",\n        type: \"unionpay\",\n        patterns: [\n            620,\n            [624, 626],\n            [62100, 62182],\n            [62184, 62187],\n            [62185, 62197],\n            [62200, 62205],\n            [622010, 622999],\n            622018,\n            [622019, 622999],\n            [62207, 62209],\n            [622126, 622925],\n            [623, 626],\n            6270,\n            6272,\n            6276,\n            [627700, 627779],\n            [627781, 627799],\n            [6282, 6289],\n            6291,\n            6292,\n            810,\n            [8110, 8131],\n            [8132, 8151],\n            [8152, 8163],\n            [8164, 8171],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVN\",\n            size: 3,\n        },\n    },\n    maestro: {\n        niceType: \"Maestro\",\n        type: \"maestro\",\n        patterns: [\n            493698,\n            [500000, 504174],\n            [504176, 506698],\n            [506779, 508999],\n            [56, 59],\n            63,\n            67,\n            6,\n        ],\n        gaps: [4, 8, 12],\n        lengths: [12, 13, 14, 15, 16, 17, 18, 19],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    elo: {\n        niceType: \"Elo\",\n        type: \"elo\",\n        patterns: [\n            401178,\n            401179,\n            438935,\n            457631,\n            457632,\n            431274,\n            451416,\n            457393,\n            504175,\n            [506699, 506778],\n            [509000, 509999],\n            627780,\n            636297,\n            636368,\n            [650031, 650033],\n            [650035, 650051],\n            [650405, 650439],\n            [650485, 650538],\n            [650541, 650598],\n            [650700, 650718],\n            [650720, 650727],\n            [650901, 650978],\n            [651652, 651679],\n            [655000, 655019],\n            [655021, 655058],\n        ],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVE\",\n            size: 3,\n        },\n    },\n    mir: {\n        niceType: \"Mir\",\n        type: \"mir\",\n        patterns: [[2200, 2204]],\n        gaps: [4, 8, 12],\n        lengths: [16, 17, 18, 19],\n        code: {\n            name: \"CVP2\",\n            size: 3,\n        },\n    },\n    hiper: {\n        niceType: \"Hiper\",\n        type: \"hiper\",\n        patterns: [637095, 63737423, 63743358, 637568, 637599, 637609, 637612],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n    hipercard: {\n        niceType: \"Hipercard\",\n        type: \"hipercard\",\n        patterns: [606282],\n        gaps: [4, 8, 12],\n        lengths: [16],\n        code: {\n            name: \"CVC\",\n            size: 3,\n        },\n    },\n};\nmodule.exports = cardTypes;\n\n},{}],162:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clone = void 0;\nfunction clone(originalObject) {\n    if (!originalObject) {\n        return null;\n    }\n    return JSON.parse(JSON.stringify(originalObject));\n}\nexports.clone = clone;\n\n},{}],163:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findBestMatch = void 0;\nfunction hasEnoughResultsToDetermineBestMatch(results) {\n    var numberOfResultsWithMaxStrengthProperty = results.filter(function (result) { return result.matchStrength; }).length;\n    /*\n     * if all possible results have a maxStrength property that means the card\n     * number is sufficiently long enough to determine conclusively what the card\n     * type is\n     * */\n    return (numberOfResultsWithMaxStrengthProperty > 0 &&\n        numberOfResultsWithMaxStrengthProperty === results.length);\n}\nfunction findBestMatch(results) {\n    if (!hasEnoughResultsToDetermineBestMatch(results)) {\n        return null;\n    }\n    return results.reduce(function (bestMatch, result) {\n        if (!bestMatch) {\n            return result;\n        }\n        /*\n         * If the current best match pattern is less specific than this result, set\n         * the result as the new best match\n         * */\n        if (Number(bestMatch.matchStrength) < Number(result.matchStrength)) {\n            return result;\n        }\n        return bestMatch;\n    });\n}\nexports.findBestMatch = findBestMatch;\n\n},{}],164:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidInputType = void 0;\nfunction isValidInputType(cardNumber) {\n    return typeof cardNumber === \"string\" || cardNumber instanceof String;\n}\nexports.isValidInputType = isValidInputType;\n\n},{}],165:[function(require,module,exports){\n\"use strict\";\n/*\n * Adapted from https://github.com/polvo-labs/card-type/blob/aaab11f80fa1939bccc8f24905a06ae3cd864356/src/cardType.js#L37-L42\n * */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.matches = void 0;\nfunction matchesRange(cardNumber, min, max) {\n    var maxLengthToCheck = String(min).length;\n    var substr = cardNumber.substr(0, maxLengthToCheck);\n    var integerRepresentationOfCardNumber = parseInt(substr, 10);\n    min = parseInt(String(min).substr(0, substr.length), 10);\n    max = parseInt(String(max).substr(0, substr.length), 10);\n    return (integerRepresentationOfCardNumber >= min &&\n        integerRepresentationOfCardNumber <= max);\n}\nfunction matchesPattern(cardNumber, pattern) {\n    pattern = String(pattern);\n    return (pattern.substring(0, cardNumber.length) ===\n        cardNumber.substring(0, pattern.length));\n}\nfunction matches(cardNumber, pattern) {\n    if (Array.isArray(pattern)) {\n        return matchesRange(cardNumber, pattern[0], pattern[1]);\n    }\n    return matchesPattern(cardNumber, pattern);\n}\nexports.matches = matches;\n\n},{}],166:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Framebus = void 0;\nvar lib_1 = require(\"./lib\");\nvar DefaultPromise = (typeof window !== \"undefined\" &&\n    window.Promise);\nvar Framebus = /** @class */ (function () {\n    function Framebus(options) {\n        if (options === void 0) { options = {}; }\n        this.origin = options.origin || \"*\";\n        this.channel = options.channel || \"\";\n        this.verifyDomain = options.verifyDomain;\n        // if a targetFrames configuration is not passed in,\n        // the default behavior is to broadcast the payload\n        // to the top level window or to the frame itself.\n        // By default, the broadcast function will loop through\n        // all the known siblings and children of the window.\n        // If a targetFrames array is passed, it will instead\n        // only broadcast to those specified targetFrames\n        this.targetFrames = options.targetFrames || [];\n        this.limitBroadcastToFramesArray = Boolean(options.targetFrames);\n        this.isDestroyed = false;\n        this.listeners = [];\n        this.hasAdditionalChecksForOnListeners = Boolean(this.verifyDomain || this.limitBroadcastToFramesArray);\n    }\n    Framebus.setPromise = function (PromiseGlobal) {\n        Framebus.Promise = PromiseGlobal;\n    };\n    Framebus.target = function (options) {\n        return new Framebus(options);\n    };\n    Framebus.prototype.addTargetFrame = function (frame) {\n        if (!this.limitBroadcastToFramesArray) {\n            return;\n        }\n        this.targetFrames.push(frame);\n    };\n    Framebus.prototype.include = function (childWindow) {\n        if (childWindow == null) {\n            return false;\n        }\n        if (childWindow.Window == null) {\n            return false;\n        }\n        if (childWindow.constructor !== childWindow.Window) {\n            return false;\n        }\n        lib_1.childWindows.push(childWindow);\n        return true;\n    };\n    Framebus.prototype.target = function (options) {\n        return Framebus.target(options);\n    };\n    Framebus.prototype.emit = function (eventName, data, reply) {\n        if (this.isDestroyed) {\n            return false;\n        }\n        var origin = this.origin;\n        eventName = this.namespaceEvent(eventName);\n        if ((0, lib_1.isntString)(eventName)) {\n            return false;\n        }\n        if ((0, lib_1.isntString)(origin)) {\n            return false;\n        }\n        if (typeof data === \"function\") {\n            reply = data;\n            data = undefined; // eslint-disable-line no-undefined\n        }\n        var payload = (0, lib_1.packagePayload)(eventName, origin, data, reply);\n        if (!payload) {\n            return false;\n        }\n        if (this.limitBroadcastToFramesArray) {\n            this.targetFramesAsWindows().forEach(function (frame) {\n                (0, lib_1.sendMessage)(frame, payload, origin);\n            });\n        }\n        else {\n            (0, lib_1.broadcast)(payload, {\n                origin: origin,\n                frame: window.top || window.self,\n            });\n        }\n        return true;\n    };\n    Framebus.prototype.emitAsPromise = function (eventName, data) {\n        var _this = this;\n        return new Framebus.Promise(function (resolve, reject) {\n            var didAttachListener = _this.emit(eventName, data, function (payload) {\n                resolve(payload);\n            });\n            if (!didAttachListener) {\n                reject(new Error(\"Listener not added for \\\"\".concat(eventName, \"\\\"\")));\n            }\n        });\n    };\n    Framebus.prototype.on = function (eventName, originalHandler) {\n        if (this.isDestroyed) {\n            return false;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var self = this;\n        var origin = this.origin;\n        var handler = originalHandler;\n        eventName = this.namespaceEvent(eventName);\n        if ((0, lib_1.subscriptionArgsInvalid)(eventName, handler, origin)) {\n            return false;\n        }\n        if (this.hasAdditionalChecksForOnListeners) {\n            /* eslint-disable no-invalid-this, @typescript-eslint/ban-ts-comment */\n            handler = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                // @ts-ignore\n                if (!self.passesVerifyDomainCheck(this && this.origin)) {\n                    return;\n                }\n                // @ts-ignore\n                if (!self.hasMatchingTargetFrame(this && this.source)) {\n                    return;\n                }\n                originalHandler.apply(void 0, args);\n            };\n            /* eslint-enable no-invalid-this, @typescript-eslint/ban-ts-comment */\n        }\n        this.listeners.push({\n            eventName: eventName,\n            handler: handler,\n            originalHandler: originalHandler,\n        });\n        lib_1.subscribers[origin] = lib_1.subscribers[origin] || {};\n        lib_1.subscribers[origin][eventName] = lib_1.subscribers[origin][eventName] || [];\n        lib_1.subscribers[origin][eventName].push(handler);\n        return true;\n    };\n    Framebus.prototype.off = function (eventName, originalHandler) {\n        var handler = originalHandler;\n        if (this.isDestroyed) {\n            return false;\n        }\n        if (this.verifyDomain) {\n            for (var i = 0; i < this.listeners.length; i++) {\n                var listener = this.listeners[i];\n                if (listener.originalHandler === originalHandler) {\n                    handler = listener.handler;\n                }\n            }\n        }\n        eventName = this.namespaceEvent(eventName);\n        var origin = this.origin;\n        if ((0, lib_1.subscriptionArgsInvalid)(eventName, handler, origin)) {\n            return false;\n        }\n        var subscriberList = lib_1.subscribers[origin] && lib_1.subscribers[origin][eventName];\n        if (!subscriberList) {\n            return false;\n        }\n        for (var i = 0; i < subscriberList.length; i++) {\n            if (subscriberList[i] === handler) {\n                subscriberList.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    Framebus.prototype.teardown = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.isDestroyed = true;\n        for (var i = 0; i < this.listeners.length; i++) {\n            var listener = this.listeners[i];\n            this.off(listener.eventName, listener.handler);\n        }\n        this.listeners.length = 0;\n    };\n    Framebus.prototype.passesVerifyDomainCheck = function (origin) {\n        if (!this.verifyDomain) {\n            // always pass this check if no verifyDomain option was set\n            return true;\n        }\n        return this.checkOrigin(origin);\n    };\n    Framebus.prototype.targetFramesAsWindows = function () {\n        if (!this.limitBroadcastToFramesArray) {\n            return [];\n        }\n        return this.targetFrames\n            .map(function (frame) {\n            // we can't pull off the contentWindow\n            // when the iframe is originally added\n            // to the array, because if it is not\n            // in the DOM at that time, it will have\n            // a contentWindow of `null`\n            if (frame instanceof HTMLIFrameElement) {\n                return frame.contentWindow;\n            }\n            return frame;\n        })\n            .filter(function (win) {\n            // just in case an iframe element\n            // was removed from the DOM\n            // and the contentWindow property\n            // is null\n            return win;\n        });\n    };\n    Framebus.prototype.hasMatchingTargetFrame = function (source) {\n        if (!this.limitBroadcastToFramesArray) {\n            // always pass this check if we aren't limiting to the target frames\n            return true;\n        }\n        var matchingFrame = this.targetFramesAsWindows().find(function (frame) {\n            return frame === source;\n        });\n        return Boolean(matchingFrame);\n    };\n    Framebus.prototype.checkOrigin = function (postMessageOrigin) {\n        var merchantHost;\n        var a = document.createElement(\"a\");\n        a.href = location.href;\n        if (a.protocol === \"https:\") {\n            merchantHost = a.host.replace(/:443$/, \"\");\n        }\n        else if (a.protocol === \"http:\") {\n            merchantHost = a.host.replace(/:80$/, \"\");\n        }\n        else {\n            merchantHost = a.host;\n        }\n        var merchantOrigin = a.protocol + \"//\" + merchantHost;\n        if (merchantOrigin === postMessageOrigin) {\n            return true;\n        }\n        if (this.verifyDomain) {\n            return this.verifyDomain(postMessageOrigin);\n        }\n        return true;\n    };\n    Framebus.prototype.namespaceEvent = function (eventName) {\n        if (!this.channel) {\n            return eventName;\n        }\n        return \"\".concat(this.channel, \":\").concat(eventName);\n    };\n    Framebus.Promise = DefaultPromise;\n    return Framebus;\n}());\nexports.Framebus = Framebus;\n\n},{\"./lib\":174}],167:[function(require,module,exports){\n\"use strict\";\nvar lib_1 = require(\"./lib\");\nvar framebus_1 = require(\"./framebus\");\n(0, lib_1.attach)();\nmodule.exports = framebus_1.Framebus;\n\n},{\"./framebus\":166,\"./lib\":174}],168:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detach = exports.attach = void 0;\nvar _1 = require(\"./\");\nvar isAttached = false;\nfunction attach() {\n    if (isAttached || typeof window === \"undefined\") {\n        return;\n    }\n    isAttached = true;\n    window.addEventListener(\"message\", _1.onMessage, false);\n}\nexports.attach = attach;\n// removeIf(production)\nfunction detach() {\n    isAttached = false;\n    window.removeEventListener(\"message\", _1.onMessage, false);\n}\nexports.detach = detach;\n// endRemoveIf(production)\n\n},{\"./\":174}],169:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.broadcastToChildWindows = void 0;\nvar _1 = require(\"./\");\nfunction broadcastToChildWindows(payload, origin, source) {\n    for (var i = _1.childWindows.length - 1; i >= 0; i--) {\n        var childWindow = _1.childWindows[i];\n        if (childWindow.closed) {\n            _1.childWindows.splice(i, 1);\n        }\n        else if (source !== childWindow) {\n            (0, _1.broadcast)(payload, {\n                origin: origin,\n                frame: childWindow.top,\n            });\n        }\n    }\n}\nexports.broadcastToChildWindows = broadcastToChildWindows;\n\n},{\"./\":174}],170:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.broadcast = void 0;\nvar _1 = require(\"./\");\nfunction broadcast(payload, options) {\n    var i = 0;\n    var frameToBroadcastTo;\n    var origin = options.origin, frame = options.frame;\n    try {\n        frame.postMessage(payload, origin);\n        if ((0, _1.hasOpener)(frame) && frame.opener.top !== window.top) {\n            broadcast(payload, {\n                origin: origin,\n                frame: frame.opener.top,\n            });\n        }\n        // previously, our max value was frame.frames.length\n        // but frames.length inherits from window.length\n        // which can be overwritten if a developer does\n        // `var length = value;` outside of a function\n        // scope, it'll prevent us from looping through\n        // all the frames. With this, we loop through\n        // until there are no longer any frames\n        // eslint-disable-next-line no-cond-assign\n        while ((frameToBroadcastTo = frame.frames[i])) {\n            broadcast(payload, {\n                origin: origin,\n                frame: frameToBroadcastTo,\n            });\n            i++;\n        }\n    }\n    catch (_) {\n        /* ignored */\n    }\n}\nexports.broadcast = broadcast;\n\n},{\"./\":174}],171:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subscribers = exports.childWindows = exports.prefix = void 0;\nexports.prefix = \"/*framebus*/\";\nexports.childWindows = [];\nexports.subscribers = {};\n\n},{}],172:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dispatch = void 0;\nvar _1 = require(\"./\");\nfunction dispatch(origin, event, data, reply, e) {\n    if (!_1.subscribers[origin]) {\n        return;\n    }\n    if (!_1.subscribers[origin][event]) {\n        return;\n    }\n    var args = [];\n    if (data) {\n        args.push(data);\n    }\n    if (reply) {\n        args.push(reply);\n    }\n    for (var i = 0; i < _1.subscribers[origin][event].length; i++) {\n        _1.subscribers[origin][event][i].apply(e, args);\n    }\n}\nexports.dispatch = dispatch;\n\n},{\"./\":174}],173:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOpener = void 0;\nfunction hasOpener(frame) {\n    if (frame.top !== frame) {\n        return false;\n    }\n    if (frame.opener == null) {\n        return false;\n    }\n    if (frame.opener === frame) {\n        return false;\n    }\n    if (frame.opener.closed === true) {\n        return false;\n    }\n    return true;\n}\nexports.hasOpener = hasOpener;\n\n},{}],174:[function(require,module,exports){\n\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./attach\"), exports);\n__exportStar(require(\"./broadcast-to-child-windows\"), exports);\n__exportStar(require(\"./broadcast\"), exports);\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./dispatch\"), exports);\n__exportStar(require(\"./has-opener\"), exports);\n__exportStar(require(\"./is-not-string\"), exports);\n__exportStar(require(\"./message\"), exports);\n__exportStar(require(\"./package-payload\"), exports);\n__exportStar(require(\"./send-message\"), exports);\n__exportStar(require(\"./subscribe-replier\"), exports);\n__exportStar(require(\"./subscription-args-invalid\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./unpack-payload\"), exports);\n\n},{\"./attach\":168,\"./broadcast\":170,\"./broadcast-to-child-windows\":169,\"./constants\":171,\"./dispatch\":172,\"./has-opener\":173,\"./is-not-string\":175,\"./message\":176,\"./package-payload\":177,\"./send-message\":178,\"./subscribe-replier\":179,\"./subscription-args-invalid\":180,\"./types\":181,\"./unpack-payload\":182}],175:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isntString = void 0;\nfunction isntString(str) {\n    return typeof str !== \"string\";\n}\nexports.isntString = isntString;\n\n},{}],176:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onMessage = void 0;\nvar _1 = require(\"./\");\nfunction onMessage(e) {\n    if ((0, _1.isntString)(e.data)) {\n        return;\n    }\n    var payload = (0, _1.unpackPayload)(e);\n    if (!payload) {\n        return;\n    }\n    var data = payload.eventData;\n    var reply = payload.reply;\n    (0, _1.dispatch)(\"*\", payload.event, data, reply, e);\n    (0, _1.dispatch)(e.origin, payload.event, data, reply, e);\n    (0, _1.broadcastToChildWindows)(e.data, payload.origin, e.source);\n}\nexports.onMessage = onMessage;\n\n},{\"./\":174}],177:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.packagePayload = void 0;\nvar _1 = require(\"./\");\nfunction packagePayload(event, origin, data, reply) {\n    var packaged;\n    var payload = {\n        event: event,\n        origin: origin,\n    };\n    if (typeof reply === \"function\") {\n        payload.reply = (0, _1.subscribeReplier)(reply, origin);\n    }\n    payload.eventData = data;\n    try {\n        packaged = _1.prefix + JSON.stringify(payload);\n    }\n    catch (e) {\n        throw new Error(\"Could not stringify event: \".concat(e.message));\n    }\n    return packaged;\n}\nexports.packagePayload = packagePayload;\n\n},{\"./\":174}],178:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sendMessage = void 0;\n/**\n * A basic function for wrapping the sending of postMessages to frames.\n */\nfunction sendMessage(frame, payload, origin) {\n    try {\n        frame.postMessage(payload, origin);\n    }\n    catch (error) {\n        /* ignored */\n    }\n}\nexports.sendMessage = sendMessage;\n\n},{}],179:[function(require,module,exports){\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subscribeReplier = void 0;\nvar framebus_1 = require(\"../framebus\");\nvar uuid_1 = __importDefault(require(\"@braintree/uuid\"));\nfunction subscribeReplier(fn, origin) {\n    var uuid = (0, uuid_1.default)();\n    function replier(data, replyOriginHandler) {\n        fn(data, replyOriginHandler);\n        framebus_1.Framebus.target({\n            origin: origin,\n        }).off(uuid, replier);\n    }\n    framebus_1.Framebus.target({\n        origin: origin,\n    }).on(uuid, replier);\n    return uuid;\n}\nexports.subscribeReplier = subscribeReplier;\n\n},{\"../framebus\":166,\"@braintree/uuid\":43}],180:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subscriptionArgsInvalid = void 0;\nvar _1 = require(\"./\");\nfunction subscriptionArgsInvalid(event, fn, origin) {\n    if ((0, _1.isntString)(event)) {\n        return true;\n    }\n    if (typeof fn !== \"function\") {\n        return true;\n    }\n    return (0, _1.isntString)(origin);\n}\nexports.subscriptionArgsInvalid = subscriptionArgsInvalid;\n\n},{\"./\":174}],181:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n},{}],182:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unpackPayload = void 0;\nvar _1 = require(\"./\");\nfunction unpackPayload(e) {\n    var payload;\n    if (e.data.slice(0, _1.prefix.length) !== _1.prefix) {\n        return false;\n    }\n    try {\n        payload = JSON.parse(e.data.slice(_1.prefix.length));\n    }\n    catch (err) {\n        return false;\n    }\n    if (payload.reply) {\n        var replyOrigin_1 = e.origin;\n        var replySource_1 = e.source;\n        var replyEvent_1 = payload.reply;\n        payload.reply = function reply(replyData) {\n            if (!replySource_1) {\n                return;\n            }\n            var replyPayload = (0, _1.packagePayload)(replyEvent_1, replyOrigin_1, replyData);\n            if (!replyPayload) {\n                return;\n            }\n            replySource_1.postMessage(replyPayload, replyOrigin_1);\n        };\n    }\n    return payload;\n}\nexports.unpackPayload = unpackPayload;\n\n},{\"./\":174}],183:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],184:[function(require,module,exports){\n(function (setImmediate){(function (){\n'use strict';\n\n/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      // @ts-ignore\n      return constructor.resolve(callback()).then(function() {\n        // @ts-ignore\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\nfunction allSettled(arr) {\n  var P = this;\n  return new P(function(resolve, reject) {\n    if (!(arr && typeof arr.length !== 'undefined')) {\n      return reject(\n        new TypeError(\n          typeof arr +\n            ' ' +\n            arr +\n            ' is not iterable(cannot read property Symbol(Symbol.iterator))'\n        )\n      );\n    }\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        var then = val.then;\n        if (typeof then === 'function') {\n          then.call(\n            val,\n            function(val) {\n              res(i, val);\n            },\n            function(e) {\n              args[i] = { status: 'rejected', reason: e };\n              if (--remaining === 0) {\n                resolve(args);\n              }\n            }\n          );\n          return;\n        }\n      }\n      args[i] = { status: 'fulfilled', value: val };\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n}\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction isArray(x) {\n  return Boolean(x && typeof x.length !== 'undefined');\n}\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = finallyConstructor;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.all accepts an array'));\n    }\n\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.allSettled = allSettled;\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!isArray(arr)) {\n      return reject(new TypeError('Promise.race accepts an array'));\n    }\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      Promise.resolve(arr[i]).then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  // @ts-ignore\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      // @ts-ignore\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\nmodule.exports = Promise;\n\n}).call(this)}).call(this,require(\"timers\").setImmediate)\n},{\"timers\":188}],185:[function(require,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isIos = exports.isIE9 = exports.isSamsungBrowser = exports.isAndroidChrome = exports.isKitKatWebview = void 0;\n// server side rendering check\nvar UA = (typeof window !== \"undefined\" &&\n    window.navigator &&\n    window.navigator.userAgent);\n// TODO remove this when browser detection is converted to typescript\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-ignore\nvar isAndroid = require(\"@braintree/browser-detection/is-android\");\n// @ts-ignore\nvar isChromeOs = require(\"@braintree/browser-detection/is-chrome-os\");\n// @ts-ignore\nvar isChrome = require(\"@braintree/browser-detection/is-chrome\");\n// @ts-ignore\nvar isIos = require(\"@braintree/browser-detection/is-ios\");\nexports.isIos = isIos;\n// @ts-ignore\nvar isIE9 = require(\"@braintree/browser-detection/is-ie9\");\nexports.isIE9 = isIE9;\n/* eslint-enable @typescript-eslint/ban-ts-comment */\n// Old Android Webviews used specific versions of Chrome with 0.0.0 as their version suffix\n// https://developer.chrome.com/multidevice/user-agent#webview_user_agent\nvar KITKAT_WEBVIEW_REGEX = /Version\\/\\d\\.\\d* Chrome\\/\\d*\\.0\\.0\\.0/;\nfunction isOldSamsungBrowserOrSamsungWebview(ua) {\n    return !isChrome(ua) && ua.indexOf(\"Samsung\") > -1;\n}\nfunction isKitKatWebview(ua) {\n    if (ua === void 0) { ua = UA; }\n    return isAndroid(ua) && KITKAT_WEBVIEW_REGEX.test(ua);\n}\nexports.isKitKatWebview = isKitKatWebview;\nfunction isAndroidChrome(ua) {\n    if (ua === void 0) { ua = UA; }\n    return (isAndroid(ua) || isChromeOs(ua)) && isChrome(ua);\n}\nexports.isAndroidChrome = isAndroidChrome;\nfunction isSamsungBrowser(ua) {\n    if (ua === void 0) { ua = UA; }\n    return /SamsungBrowser/.test(ua) || isOldSamsungBrowserOrSamsungWebview(ua);\n}\nexports.isSamsungBrowser = isSamsungBrowser;\n\n},{\"@braintree/browser-detection/is-android\":25,\"@braintree/browser-detection/is-chrome\":27,\"@braintree/browser-detection/is-chrome-os\":26,\"@braintree/browser-detection/is-ie9\":30,\"@braintree/browser-detection/is-ios\":34}],186:[function(require,module,exports){\n\"use strict\";\nvar device_1 = require(\"./lib/device\");\nmodule.exports = function supportsInputFormatting() {\n    // Digits get dropped in samsung browser\n    return !(0, device_1.isSamsungBrowser)();\n};\n\n},{\"./lib/device\":185}],187:[function(require,module,exports){\nmodule.exports = require(\"./dist/supports-input-formatting\");\n\n},{\"./dist/supports-input-formatting\":186}],188:[function(require,module,exports){\n(function (setImmediate,clearImmediate){(function (){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this)}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n},{\"process/browser.js\":183,\"timers\":188}],189:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  paymentOptionIDs: {\n    card: 'card',\n    paypal: 'paypal',\n    paypalCredit: 'paypalCredit',\n    applePay: 'applePay',\n    venmo: 'venmo',\n    googlePay: 'googlePay'\n  },\n  paymentMethodTypes: {\n    card: 'CreditCard',\n    paypal: 'PayPalAccount',\n    paypalCredit: 'PayPalAccount',\n    applePay: 'ApplePayCard',\n    venmo: 'VenmoAccount',\n    googlePay: 'AndroidPayCard'\n  },\n  analyticsKinds: {\n    CreditCard: 'card',\n    PayPalAccount: 'paypal',\n    ApplePayCard: 'applepay',\n    VenmoAccount: 'venmo',\n    AndroidPayCard: 'googlepay'\n  },\n  paymentMethodCardTypes: {\n    Visa: 'visa',\n    MasterCard: 'master-card',\n    'American Express': 'american-express',\n    'Diners Club': 'diners-club',\n    Discover: 'discover',\n    JCB: 'jcb',\n    UnionPay: 'unionpay',\n    Maestro: 'maestro',\n    Elo: 'elo',\n    Hiper: 'hiper',\n    Hipercard: 'hipercard'\n  },\n  cardTypeIcons: {\n    visa: 'visa',\n    mastercard: 'master-card',\n    'american-express': 'american-express',\n    'diners-club': 'diners-club',\n    discover: 'discover',\n    jcb: 'jcb',\n    'union-pay': 'unionpay',\n    maestro: 'maestro',\n    elo: 'elo',\n    hiper: 'hiper',\n    hipercard: 'hipercard'\n  },\n  configurationCardTypes: {\n    visa: 'Visa',\n    'master-card': 'MasterCard',\n    'american-express': 'American Express',\n    'diners-club': 'Discover',\n    discover: 'Discover',\n    jcb: 'JCB',\n    unionpay: 'UnionPay',\n    maestro: 'Maestro',\n    elo: 'Elo',\n    hiper: 'Hiper',\n    hipercard: 'Hipercard'\n  },\n  dependencySetupStates: {\n    DONE: 'done',\n    FAILED: 'failed',\n    INITIALIZING: 'initializing',\n    NOT_ENABLED: 'not-enabled'\n  },\n  errors: {\n    NO_PAYMENT_METHOD_ERROR: 'No payment method is available.',\n    DEVELOPER_MISCONFIGURATION_MESSAGE: 'Developer Error: Something went wrong. Check the console for details.'\n  },\n  ANALYTICS_REQUEST_TIMEOUT_MS: 2000,\n  ANALYTICS_PREFIX: 'web.dropin.',\n  CHANGE_ACTIVE_PAYMENT_METHOD_TIMEOUT: 200,\n  CHECKOUT_JS_SOURCE: 'https://www.paypalobjects.com/api/checkout.min.js',\n  GOOGLE_PAYMENT_SOURCE: 'https://pay.google.com/gp/p/js/pay.js',\n  INTEGRATION: 'dropin2',\n  PAYPAL_CHECKOUT_SCRIPT_ID: 'braintree-dropin-paypal-checkout-script',\n  GOOGLE_PAYMENT_SCRIPT_ID: 'braintree-dropin-google-payment-script',\n  DATA_COLLECTOR_SCRIPT_ID: 'braintree-dropin-data-collector-script',\n  STYLESHEET_ID: 'braintree-dropin-stylesheet'\n};\n\n},{}],190:[function(require,module,exports){\n'use strict';\n\nvar analytics = require('./lib/analytics');\nvar DropinError = require('./lib/dropin-error');\nvar EventEmitter = require('@braintree/event-emitter');\nvar constants = require('./constants');\nvar paymentMethodTypes = constants.paymentMethodTypes;\nvar paymentOptionIDs = constants.paymentOptionIDs;\nvar dependencySetupStates = constants.dependencySetupStates;\nvar isGuestCheckout = require('./lib/is-guest-checkout');\nvar paymentSheetViews = require('./views/payment-sheet-views');\nvar vaultManager = require('braintree-web/vault-manager');\nvar paymentOptionsViewID = require('./views/payment-options-view').ID;\n\n// these vaulted payment methods can only be used for existing subscription\n// any new transactions or subscriptons should prompt the customer to\n// authorize them again before using them and thus should always be hidden.\nvar VAULTED_PAYMENT_METHOD_TYPES_THAT_SHOULD_ALWAYS_BE_HIDDEN = [\n  paymentMethodTypes.applePay,\n  paymentMethodTypes.googlePay,\n  paymentMethodTypes.venmo\n];\nvar DEFAULT_PAYMENT_OPTION_PRIORITY = [\n  paymentOptionIDs.card,\n  paymentOptionIDs.paypal,\n  paymentOptionIDs.paypalCredit,\n  paymentOptionIDs.venmo,\n  paymentOptionIDs.applePay,\n  paymentOptionIDs.googlePay\n];\nvar NON_PAYMENT_OPTION_DEPENDENCIES = ['threeDSecure', 'dataCollector'];\nvar ASYNC_DEPENDENCIES = DEFAULT_PAYMENT_OPTION_PRIORITY.concat(NON_PAYMENT_OPTION_DEPENDENCIES);\nvar DEPENDENCY_READY_CHECK_INTERVAL = 200;\n\nfunction DropinModel(options) {\n  this.rootNode = options.container;\n  this.componentID = options.componentID;\n  this.merchantConfiguration = options.merchantConfiguration;\n  this.isGuestCheckout = isGuestCheckout(options.client);\n  this.dependencyStates = ASYNC_DEPENDENCIES.reduce(function (total, dependencyKey) {\n    if (this._shouldIncludeDependency(dependencyKey)) {\n      total[dependencyKey] = dependencySetupStates.INITIALIZING;\n    }\n\n    return total;\n  }.bind(this), {});\n  this.hiddenVaultedPaymentMethodTypes =\n    constructHiddenPaymentMethodTypes(\n      options.merchantConfiguration.hiddenVaultedPaymentMethodTypes\n    );\n\n  this.failedDependencies = {};\n  this._options = options;\n  this._setupComplete = false;\n  this.shouldWaitForVerifyCard = false;\n\n  while (this.rootNode.parentNode) {\n    this.rootNode = this.rootNode.parentNode;\n  }\n  this.isInShadowDom = this.rootNode.toString() === '[object ShadowRoot]';\n\n  EventEmitter.call(this);\n}\n\nEventEmitter.createChild(DropinModel);\n\nDropinModel.prototype.initialize = function () {\n  var dep;\n  var self = this;\n  var dependencyReadyInterval = setInterval(function () {\n    for (dep in self.dependencyStates) {\n      if (self.dependencyStates[dep] === dependencySetupStates.INITIALIZING) {\n        return;\n      }\n    }\n\n    clearInterval(dependencyReadyInterval);\n\n    self._emit('asyncDependenciesReady');\n  }, DEPENDENCY_READY_CHECK_INTERVAL);\n\n  return vaultManager.create({\n    client: self._options.client\n  }).then(function (vaultManagerInstance) {\n    self._vaultManager = vaultManagerInstance;\n\n    return self._getSupportedPaymentOptions(self._options);\n  }).then(function (paymentOptions) {\n    self.supportedPaymentOptions = paymentOptions;\n\n    return self.getVaultedPaymentMethods();\n  }).then(function (paymentMethods) {\n    self._paymentMethods = paymentMethods;\n    self._paymentMethodIsRequestable = self._paymentMethods.length > 0;\n  });\n};\n\nDropinModel.prototype.confirmDropinReady = function () {\n  this._setupComplete = true;\n};\n\nDropinModel.prototype.isPaymentMethodRequestable = function () {\n  return Boolean(this._paymentMethodIsRequestable);\n};\n\nDropinModel.prototype.addPaymentMethod = function (paymentMethod) {\n  this._paymentMethods.push(paymentMethod);\n  this._emit('addPaymentMethod', paymentMethod);\n  this.changeActivePaymentMethod(paymentMethod);\n};\n\nDropinModel.prototype.removePaymentMethod = function (paymentMethod) {\n  var paymentMethodLocation = this._paymentMethods.indexOf(paymentMethod);\n\n  if (paymentMethodLocation === -1) {\n    return;\n  }\n\n  this._paymentMethods.splice(paymentMethodLocation, 1);\n  this._emit('removePaymentMethod', paymentMethod);\n};\n\nDropinModel.prototype.refreshPaymentMethods = function () {\n  var self = this;\n\n  return self.getVaultedPaymentMethods().then(function (paymentMethods) {\n    self._paymentMethods = paymentMethods;\n\n    self._emit('refreshPaymentMethods');\n  });\n};\n\nDropinModel.prototype.changeActivePaymentMethod = function (paymentMethod) {\n  this._activePaymentMethod = paymentMethod;\n  this._emit('changeActivePaymentMethod', paymentMethod);\n};\n\nDropinModel.prototype.changeActiveView = function (paymentViewID) {\n  var previousViewId = this._activePaymentViewId;\n\n  this._activePaymentViewId = paymentViewID;\n  this._emit('changeActiveView', {\n    previousViewId: previousViewId,\n    newViewId: paymentViewID\n  });\n};\n\nDropinModel.prototype.removeActivePaymentMethod = function () {\n  this._activePaymentMethod = null;\n  this._emit('removeActivePaymentMethod');\n  this.setPaymentMethodRequestable({\n    isRequestable: false\n  });\n};\n\nDropinModel.prototype.selectPaymentOption = function (paymentViewID) {\n  this._emit('paymentOptionSelected', {\n    paymentOption: paymentViewID\n  });\n};\n\nDropinModel.prototype.enableEditMode = function () {\n  analytics.sendEvent(this._options.client, 'manager.appeared');\n  this._isInEditMode = true;\n  this._emit('enableEditMode');\n};\n\nDropinModel.prototype.disableEditMode = function () {\n  this._isInEditMode = false;\n  this._emit('disableEditMode');\n};\n\nDropinModel.prototype.isInEditMode = function () {\n  return Boolean(this._isInEditMode);\n};\n\nDropinModel.prototype.confirmPaymentMethodDeletion = function (paymentMethod) {\n  this._paymentMethodWaitingToBeDeleted = paymentMethod;\n  this._emit('confirmPaymentMethodDeletion', paymentMethod);\n};\n\nDropinModel.prototype._shouldIncludeDependency = function (key) {\n  if (key === 'card') {\n    // card is turned on by default unless the merchant explicitly\n    // passes a value of `false` or omits it from a custom\n    // `paymentOptionPriority` array\n    if (this.merchantConfiguration.card === false) {\n      return false;\n    }\n  } else if (!this.merchantConfiguration[key]) {\n    // if the merchant does not have the non-card dependency\n    // configured, do not include the dependency\n    return false;\n  }\n\n  if (NON_PAYMENT_OPTION_DEPENDENCIES.indexOf(key) > -1) {\n    // if the dependency is not a payment option (3DS, data collector)\n    // include it since the merchant configured Drop-in for it\n\n    return true;\n  }\n\n  if (this.merchantConfiguration.paymentOptionPriority) {\n    // if the merchant passed a custom `paymentOptionPriority` array,\n    // only include the dependency if it was configured _and_\n    // included in the array\n    return this.merchantConfiguration.paymentOptionPriority.indexOf(key) > -1;\n  }\n\n  // otherwise, include it if it is a valid payment option\n  return DEFAULT_PAYMENT_OPTION_PRIORITY.indexOf(key) > -1;\n};\n\nDropinModel.prototype._shouldEmitRequestableEvent = function (options) {\n  var requestableStateHasNotChanged = this.isPaymentMethodRequestable() === options.isRequestable;\n  var nonce = options.selectedPaymentMethod && options.selectedPaymentMethod.nonce;\n  var nonceHasNotChanged = nonce === this._paymentMethodRequestableNonce;\n\n  if (!this._setupComplete) {\n    // don't emit event until after Drop-in is fully set up\n    // fixes issues with lazy loading of imports where event\n    // should not be emitted\n    // https://github.com/braintree/braintree-web-drop-in/issues/511\n    return false;\n  }\n\n  if (this.shouldWaitForVerifyCard) {\n    return false;\n  }\n\n  if (requestableStateHasNotChanged && (!options.isRequestable || nonceHasNotChanged)) {\n    return false;\n  }\n\n  return true;\n};\n\nDropinModel.prototype.setPaymentMethodRequestable = function (options) {\n  var shouldEmitEvent = this._shouldEmitRequestableEvent(options);\n  var paymentMethodRequestableResponse = {\n    paymentMethodIsSelected: Boolean(options.selectedPaymentMethod),\n    type: options.type\n  };\n\n  this._paymentMethodIsRequestable = options.isRequestable;\n\n  if (options.isRequestable) {\n    this._paymentMethodRequestableNonce = options.selectedPaymentMethod && options.selectedPaymentMethod.nonce;\n  } else {\n    delete this._paymentMethodRequestableNonce;\n  }\n\n  if (!shouldEmitEvent) {\n    return;\n  }\n\n  if (options.isRequestable) {\n    this._emit('paymentMethodRequestable', paymentMethodRequestableResponse);\n  } else {\n    this._emit('noPaymentMethodRequestable');\n  }\n};\n\nDropinModel.prototype.getPaymentMethods = function () {\n  // we want to return a copy of the Array\n  // so we can loop through it in dropin.updateConfiguration\n  // while calling model.removePaymentMethod\n  // which updates the original array\n  return this._paymentMethods.slice();\n};\n\nDropinModel.prototype.getActivePaymentMethod = function () {\n  return this._activePaymentMethod;\n};\n\nDropinModel.prototype.hasPaymentMethods = function () {\n  return this.getPaymentMethods().length > 0;\n};\n\nDropinModel.prototype.getInitialViewId = function () {\n  if (this.supportedPaymentOptions.length > 1) {\n    return paymentOptionsViewID;\n  }\n\n  return this.supportedPaymentOptions[0];\n};\n\nDropinModel.prototype.getActivePaymentViewId = function () {\n  return this._activePaymentViewId;\n};\n\nDropinModel.prototype.reportAppSwitchPayload = function (payload) {\n  this.appSwitchPayload = payload;\n};\n\nDropinModel.prototype.reportAppSwitchError = function (sheetId, error) {\n  this.appSwitchError = {\n    id: sheetId,\n    error: error\n  };\n};\n\nDropinModel.prototype.hasAtLeastOneAvailablePaymentOption = function () {\n  var self = this;\n  var i;\n\n  for (i = 0; i < this.supportedPaymentOptions.length; i++) {\n    if (self.dependencyStates[this.supportedPaymentOptions[i]] === dependencySetupStates.DONE) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nDropinModel.prototype.asyncDependencyReady = function (key) {\n  this.dependencyStates[key] = dependencySetupStates.DONE;\n};\n\nDropinModel.prototype.asyncDependencyFailed = function (options) {\n  if (this.failedDependencies.hasOwnProperty(options.view)) {\n    return;\n  }\n  this.failedDependencies[options.view] = options.error;\n  this.dependencyStates[options.view] = dependencySetupStates.FAILED;\n};\n\nDropinModel.prototype.cancelInitialization = function (error) {\n  this._emit('cancelInitialization', error);\n};\n\nDropinModel.prototype.reportError = function (error) {\n  this._emit('errorOccurred', error);\n};\n\nDropinModel.prototype.clearError = function () {\n  this._emit('errorCleared');\n};\n\nDropinModel.prototype.preventUserAction = function () {\n  this._emit('preventUserAction');\n};\n\nDropinModel.prototype.allowUserAction = function () {\n  this._emit('allowUserAction');\n};\n\nDropinModel.prototype.deleteVaultedPaymentMethod = function () {\n  var self = this;\n  var promise = Promise.resolve();\n  var error;\n\n  this._emit('startVaultedPaymentMethodDeletion');\n\n  if (!self.isGuestCheckout) {\n    promise = this._vaultManager.deletePaymentMethod(this._paymentMethodWaitingToBeDeleted.nonce).catch(function (err) {\n      error = err;\n    });\n  }\n\n  return promise.then(function () {\n    delete self._paymentMethodWaitingToBeDeleted;\n\n    return self.refreshPaymentMethods();\n  }).then(function () {\n    self.disableEditMode();\n    self._emit('finishVaultedPaymentMethodDeletion', error);\n  });\n};\n\nDropinModel.prototype.cancelDeleteVaultedPaymentMethod = function () {\n  this._emit('cancelVaultedPaymentMethodDeletion');\n\n  delete this._paymentMethodWaitingToBeDeleted;\n};\n\nDropinModel.prototype.getVaultedPaymentMethods = function () {\n  var self = this;\n\n  if (self.isGuestCheckout) {\n    return Promise.resolve([]);\n  }\n\n  return self._vaultManager.fetchPaymentMethods({\n    defaultFirst: this.merchantConfiguration.showDefaultPaymentMethodFirst !== false\n  }).then(function (paymentMethods) {\n    return self._getSupportedPaymentMethods(paymentMethods).map(function (paymentMethod) {\n      paymentMethod.vaulted = true;\n\n      return paymentMethod;\n    });\n  }).catch(function () {\n    return Promise.resolve([]);\n  });\n};\n\nDropinModel.prototype._getSupportedPaymentMethods = function (paymentMethods) {\n  var self = this;\n  var supportedPaymentMethods = this.supportedPaymentOptions.reduce(function (\n    array,\n    key\n  ) {\n    var paymentMethodType = paymentMethodTypes[key];\n\n    if (\n      canShowVaultedPaymentMethodType(\n        paymentMethodType,\n        self.hiddenVaultedPaymentMethodTypes\n      )\n    ) {\n      array.push(paymentMethodType);\n    }\n\n    return array;\n  },\n  []);\n\n  return paymentMethods.filter(function (paymentMethod) {\n    return supportedPaymentMethods.indexOf(paymentMethod.type) > -1;\n  });\n};\n\nDropinModel.prototype._getSupportedPaymentOptions = function (options) {\n  var self = this;\n  var paymentOptionPriority = options.merchantConfiguration.paymentOptionPriority || DEFAULT_PAYMENT_OPTION_PRIORITY;\n  var promises;\n\n  if (!(paymentOptionPriority instanceof Array)) {\n    throw new DropinError('paymentOptionPriority must be an array.');\n  }\n\n  // Remove duplicates\n  paymentOptionPriority = paymentOptionPriority.filter(function (item, pos) { return paymentOptionPriority.indexOf(item) === pos; });\n\n  promises = paymentOptionPriority.map(function (paymentOption) {\n    return getPaymentOption(paymentOption, options).then(function (result) {\n      if (!result.success) {\n        self.dependencyStates[result.id] = dependencySetupStates.NOT_ENABLED;\n      }\n\n      return result;\n    });\n  });\n\n  return Promise.all(promises).then(function (result) {\n    result = result.filter(function (item) {\n      return item.success;\n    });\n\n    if (result.length === 0) {\n      return Promise.reject(new DropinError('No valid payment options available.'));\n    }\n\n    return result.map(function (item) { return item.id; });\n  });\n};\n\nfunction getPaymentOption(paymentOption, options) {\n  return isPaymentOptionEnabled(paymentOption, options).then(function (success) {\n    return {\n      success: success,\n      id: paymentOptionIDs[paymentOption]\n    };\n  });\n}\n\nfunction isPaymentOptionEnabled(paymentOption, options) {\n  var SheetView = paymentSheetViews[paymentOptionIDs[paymentOption]];\n\n  if (!SheetView) {\n    return Promise.reject(new DropinError('paymentOptionPriority: Invalid payment option specified.'));\n  }\n\n  return SheetView.isEnabled({\n    client: options.client,\n    merchantConfiguration: options.merchantConfiguration\n  }).catch(function (error) {\n    console.error(SheetView.ID + ' view errored when checking if it was supported.'); // eslint-disable-line no-console\n    console.error(error); // eslint-disable-line no-console\n\n    return Promise.resolve(false);\n  });\n}\n\nfunction canShowVaultedPaymentMethodType(\n  paymentMethodType,\n  hiddenVaultedPaymentMethodTypes\n) {\n  return (\n    paymentMethodType &&\n    hiddenVaultedPaymentMethodTypes.indexOf(paymentMethodType) ===\n      -1\n  );\n}\n\nfunction constructHiddenPaymentMethodTypes(paymentMethods) {\n  var hiddenVaultedPaymentMethodTypes = [].concat(\n    VAULTED_PAYMENT_METHOD_TYPES_THAT_SHOULD_ALWAYS_BE_HIDDEN\n  );\n\n  if (Array.isArray(paymentMethods)) {\n    paymentMethods.forEach(function (paymentMethod) {\n      var paymentMethodId = paymentMethodTypes[paymentMethod];\n\n      if (!paymentMethodId) {\n        // don't add it if it is an unknown payment method\n        return;\n      }\n\n      if (\n        hiddenVaultedPaymentMethodTypes.indexOf(paymentMethodId) >\n        -1\n      ) {\n        // don't add the same payment method type a second time\n        return;\n      }\n\n      hiddenVaultedPaymentMethodTypes.push(paymentMethodId);\n    });\n  }\n\n  return hiddenVaultedPaymentMethodTypes;\n}\n\nmodule.exports = DropinModel;\n\n},{\"./constants\":189,\"./lib/analytics\":194,\"./lib/dropin-error\":199,\"./lib/is-guest-checkout\":201,\"./views/payment-options-view\":251,\"./views/payment-sheet-views\":256,\"@braintree/event-emitter\":37,\"braintree-web/vault-manager\":145}],191:[function(require,module,exports){\n'use strict';\n\nvar assign = require('./lib/assign').assign;\nvar analytics = require('./lib/analytics');\nvar constants = require('./constants');\nvar DropinError = require('./lib/dropin-error');\nvar DropinModel = require('./dropin-model');\nvar EventEmitter = require('@braintree/event-emitter');\nvar assets = require('@braintree/asset-loader');\n\nvar MainView = require('./views/main-view');\nvar paymentOptionIDs = constants.paymentOptionIDs;\nvar translations = require('./translations').translations;\nvar isUtf8 = require('./lib/is-utf-8');\nvar uuid = require('@braintree/uuid');\nvar sanitizeHtml = require('./lib/sanitize-html');\nvar DataCollector = require('./lib/data-collector');\nvar ThreeDSecure = require('./lib/three-d-secure');\nvar wrapPrototype = require('@braintree/wrap-promise').wrapPrototype;\n\nvar mainHTML = \"<div class=\\\"braintree-dropin\\\">\\n  <div data-braintree-id=\\\"methods-label\\\" class=\\\"braintree-heading\\\">&nbsp;</div>\\n  <div data-braintree-id=\\\"methods-edit\\\" class=\\\"braintree-hidden braintree-heading\\\" role=\\\"button\\\" tabindex=\\\"0\\\">{{edit}}</div>\\n  <div data-braintree-id=\\\"choose-a-way-to-pay\\\" class=\\\"braintree-heading\\\">{{chooseAWayToPay}}</div>\\n  <div class=\\\"braintree-placeholder\\\">&nbsp;</div>\\n\\n  <div data-braintree-id=\\\"upper-container\\\" class=\\\"braintree-upper-container\\\">\\n    <div data-braintree-id=\\\"loading-container\\\" class=\\\"braintree-loader__container\\\">\\n      <div data-braintree-id=\\\"loading-indicator\\\" class=\\\"braintree-loader__indicator\\\">\\n        <svg width=\\\"14\\\" height=\\\"16\\\" class=\\\"braintree-loader__lock\\\">\\n          <use xlink:href=\\\"#iconLockLoader\\\"></use>\\n        </svg>\\n      </div>\\n    </div>\\n\\n    <div data-braintree-id=\\\"delete-confirmation\\\" class=\\\"braintree-delete-confirmation braintree-sheet\\\">\\n      <div data-braintree-id=\\\"delete-confirmation__message\\\"></div>\\n      <div class=\\\"braintree-delete-confirmation__button-container\\\">\\n        <div tabindex=\\\"0\\\" role=\\\"button\\\" data-braintree-id=\\\"delete-confirmation__no\\\" class=\\\"braintree-delete-confirmation__button\\\">{{deleteCancelButton}}</div>\\n        <div tabindex=\\\"0\\\" role=\\\"button\\\" data-braintree-id=\\\"delete-confirmation__yes\\\" class=\\\"braintree-delete-confirmation__button\\\">{{deleteConfirmationButton}}</div>\\n      </div>\\n    </div>\\n\\n    <div data-braintree-id=\\\"methods\\\" class=\\\"braintree-methods braintree-methods-initial\\\">\\n      <div data-braintree-id=\\\"methods-container\\\"></div>\\n    </div>\\n\\n    <div data-braintree-id=\\\"options\\\" class=\\\"braintree-test-class braintree-options braintree-options-initial\\\">\\n      <div data-braintree-id=\\\"payment-options-container\\\" class=\\\"braintree-options-list\\\"></div>\\n    </div>\\n\\n    <div data-braintree-id=\\\"sheet-container\\\" class=\\\"braintree-sheet__container\\\">\\n      <div data-braintree-id=\\\"paypal\\\" class=\\\"braintree-paypal braintree-sheet\\\">\\n        <div data-braintree-id=\\\"paypal-sheet-header\\\" class=\\\"braintree-sheet__header\\\">\\n          <div class=\\\"braintree-sheet__header-label\\\">\\n            <div class=\\\"braintree-sheet__logo--header\\\">\\n              <svg width=\\\"40\\\" height=\\\"24\\\">\\n                <use xlink:href=\\\"#logoPayPal\\\"></use>\\n              </svg>\\n            </div>\\n            <div class=\\\"braintree-sheet__label\\\">{{PayPal}}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"braintree-sheet__content braintree-sheet__content--button\\\">\\n          <div data-braintree-id=\\\"paypal-button\\\" class=\\\"braintree-sheet__button--paypal\\\"></div>\\n        </div>\\n      </div>\\n      <div data-braintree-id=\\\"paypalCredit\\\" class=\\\"braintree-paypalCredit braintree-sheet\\\">\\n        <div data-braintree-id=\\\"paypal-credit-sheet-header\\\" class=\\\"braintree-sheet__header\\\">\\n          <div class=\\\"braintree-sheet__header-label\\\">\\n            <div class=\\\"braintree-sheet__logo--header\\\">\\n              <svg width=\\\"40\\\" height=\\\"24\\\">\\n                <use xlink:href=\\\"#logoPayPalCredit\\\"></use>\\n              </svg>\\n            </div>\\n            <div class=\\\"braintree-sheet__label\\\">{{PayPal Credit}}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"braintree-sheet__content braintree-sheet__content--button\\\">\\n          <div data-braintree-id=\\\"paypal-credit-button\\\" class=\\\"braintree-sheet__button--paypal\\\"></div>\\n        </div>\\n      </div>\\n      <div data-braintree-id=\\\"applePay\\\" class=\\\"braintree-applePay braintree-sheet\\\">\\n        <div data-braintree-id=\\\"apple-pay-sheet-header\\\" class=\\\"braintree-sheet__header\\\">\\n          <div class=\\\"braintree-sheet__header-label\\\">\\n            <div class=\\\"braintree-sheet__logo--header\\\">\\n              <svg height=\\\"24\\\" width=\\\"40\\\">\\n              <use xlink:href=\\\"#logoApplePay\\\"></use>\\n              </svg>\\n            </div>\\n            <div class=\\\"braintree-sheet__label\\\">{{Apple Pay}}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"braintree-sheet__content braintree-sheet__content--button\\\">\\n          <div data-braintree-id=\\\"apple-pay-button\\\" class=\\\"braintree-sheet__button--apple-pay apple-pay-button\\\"></div>\\n        </div>\\n      </div>\\n      <div data-braintree-id=\\\"googlePay\\\" class=\\\"braintree-googlePay braintree-sheet\\\">\\n        <div data-braintree-id=\\\"google-pay-sheet-header\\\" class=\\\"braintree-sheet__header\\\">\\n          <div class=\\\"braintree-sheet__header-label\\\">\\n            <div class=\\\"braintree-sheet__logo--header\\\">\\n              <svg height=\\\"24\\\" width=\\\"40\\\">\\n              <use xlink:href=\\\"#logoGooglePay\\\"></use>\\n              </svg>\\n            </div>\\n            <div class=\\\"braintree-sheet__label\\\">{{Google Pay}}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"braintree-sheet__content braintree-sheet__content--button\\\">\\n          <div data-braintree-id=\\\"google-pay-button\\\"></div>\\n        </div>\\n      </div>\\n      <div data-braintree-id=\\\"venmo\\\" class=\\\"braintree-venmo braintree-sheet\\\">\\n        <div data-braintree-id=\\\"venmo-sheet-header\\\" class=\\\"braintree-sheet__header\\\">\\n          <div class=\\\"braintree-sheet__header-label\\\">\\n            <div class=\\\"braintree-sheet__logo--header\\\">\\n              <svg height=\\\"24\\\" width=\\\"40\\\">\\n              <use xlink:href=\\\"#logoVenmo\\\"></use>\\n              </svg>\\n            </div>\\n            <div class=\\\"braintree-sheet__label\\\">{{Venmo}}</div>\\n          </div>\\n        </div>\\n        <div class=\\\"braintree-sheet__content braintree-sheet__content--button\\\">\\n          <svg data-braintree-id=\\\"venmo-button\\\" class=\\\"braintree-sheet__button--venmo\\\">\\n            <use xlink:href=\\\"#buttonVenmo\\\"></use>\\n          </svg>\\n        </div>\\n      </div>\\n      <div data-braintree-id=\\\"card\\\" class=\\\"braintree-card braintree-form braintree-sheet\\\">\\n        <div data-braintree-id=\\\"card-sheet-header\\\" class=\\\"braintree-sheet__header\\\">\\n          <div class=\\\"braintree-sheet__header-label\\\">\\n            <div class=\\\"braintree-sheet__logo--header\\\">\\n              <svg width=\\\"40\\\" height=\\\"24\\\" class=\\\"braintree-icon--bordered\\\" aria-hidden=\\\"true\\\">\\n                <use xlink:href=\\\"#iconCardFront\\\"></use>\\n              </svg>\\n            </div>\\n            <div class=\\\"braintree-sheet__text\\\">{{payWithCard}}</div>\\n          </div>\\n          <div data-braintree-id=\\\"card-view-icons\\\" class=\\\"braintree-sheet__icons\\\"></div>\\n        </div>\\n        <div class=\\\"braintree-sheet__content braintree-sheet__content--form\\\">\\n          <div data-braintree-id=\\\"cardholder-name-field-group\\\" class=\\\"braintree-form__field-group\\\">\\n            <label for=\\\"braintree__card-view-input__cardholder-name\\\">\\n              <div class=\\\"braintree-form__label\\\">{{cardholderNameLabel}}</div>\\n              <div class=\\\"braintree-form__field\\\">\\n                <div class=\\\"braintree-form-cardholder-name braintree-form__hosted-field\\\"></div>\\n                <div class=\\\"braintree-form__icon-container\\\">\\n                  <div class=\\\"braintree-form__icon braintree-form__field-error-icon\\\">\\n                    <svg width=\\\"24\\\" height=\\\"24\\\">\\n                      <use xlink:href=\\\"#iconError\\\"></use>\\n                    </svg>\\n                  </div>\\n                </div>\\n              </div>\\n            </label>\\n            <div data-braintree-id=\\\"cardholder-name-field-error\\\" class=\\\"braintree-form__field-error\\\" role=\\\"alert\\\"></div>\\n          </div>\\n          <div data-braintree-id=\\\"number-field-group\\\" class=\\\"braintree-form__field-group\\\">\\n            <label>\\n              <div class=\\\"braintree-form__label\\\">{{cardNumberLabel}}</div>\\n              <div class=\\\"braintree-form__field\\\">\\n                <div class=\\\"braintree-form-number braintree-form__hosted-field\\\"></div>\\n                <div class=\\\"braintree-form__icon-container\\\">\\n                  <div data-braintree-id=\\\"card-number-icon\\\" class=\\\"braintree-form__icon braintree-form__field-secondary-icon\\\">\\n                    <svg width=\\\"40\\\" height=\\\"24\\\" class=\\\"braintree-icon--bordered\\\">\\n                    <use data-braintree-id=\\\"card-number-icon-svg\\\" xlink:href=\\\"#iconCardFront\\\"></use>\\n                    </svg>\\n                  </div>\\n                  <div class=\\\"braintree-form__icon braintree-form__field-error-icon\\\">\\n                    <svg width=\\\"24\\\" height=\\\"24\\\">\\n                      <use xlink:href=\\\"#iconError\\\"></use>\\n                    </svg>\\n                  </div>\\n                </div>\\n              </div>\\n            </label>\\n            <div data-braintree-id=\\\"number-field-error\\\" class=\\\"braintree-form__field-error\\\" role=\\\"alert\\\"></div>\\n          </div>\\n\\n          <div class=\\\"braintree-form__flexible-fields\\\">\\n            <div data-braintree-id=\\\"expiration-date-field-group\\\" class=\\\"braintree-form__field-group\\\">\\n              <label>\\n                <div class=\\\"braintree-form__label\\\">{{expirationDateLabel}}\\n                  <span class=\\\"braintree-form__descriptor\\\">{{expirationDateLabelSubheading}}</span>\\n                </div>\\n                <div class=\\\"braintree-form__field\\\">\\n                  <div class=\\\"braintree-form__hosted-field braintree-form-expiration\\\"></div>\\n                  <div class=\\\"braintree-form__icon-container\\\">\\n                    <div class=\\\"braintree-form__icon braintree-form__field-error-icon\\\">\\n                      <svg width=\\\"24\\\" height=\\\"24\\\">\\n                        <use xlink:href=\\\"#iconError\\\"></use>\\n                      </svg>\\n                    </div>\\n                  </div>\\n                </div>\\n              </label>\\n              <div data-braintree-id=\\\"expiration-date-field-error\\\" class=\\\"braintree-form__field-error\\\" role=\\\"alert\\\"></div>\\n            </div>\\n\\n\\n            <div data-braintree-id=\\\"cvv-field-group\\\" class=\\\"braintree-form__field-group\\\">\\n              <label>\\n                <div class=\\\"braintree-form__label\\\">{{cvvLabel}}\\n                  <span data-braintree-id=\\\"cvv-label-descriptor\\\" class=\\\"braintree-form__descriptor\\\">{{cvvThreeDigitLabelSubheading}}</span>\\n                </div>\\n                <div class=\\\"braintree-form__field\\\">\\n                  <div class=\\\"braintree-form__hosted-field braintree-form-cvv\\\"></div>\\n                  <div class=\\\"braintree-form__icon-container\\\">\\n                    <div data-braintree-id=\\\"cvv-icon\\\" class=\\\"braintree-form__icon braintree-form__field-secondary-icon\\\">\\n                      <svg width=\\\"40\\\" height=\\\"24\\\" class=\\\"braintree-icon--bordered\\\">\\n                      <use data-braintree-id=\\\"cvv-icon-svg\\\" xlink:href=\\\"#iconCVVBack\\\"></use>\\n                      </svg>\\n                    </div>\\n                    <div class=\\\"braintree-form__icon braintree-form__field-error-icon\\\">\\n                      <svg width=\\\"24\\\" height=\\\"24\\\">\\n                        <use xlink:href=\\\"#iconError\\\"></use>\\n                      </svg>\\n                    </div>\\n                  </div>\\n                </div>\\n              </label>\\n              <div data-braintree-id=\\\"cvv-field-error\\\" class=\\\"braintree-form__field-error\\\" role=\\\"alert\\\"></div>\\n            </div>\\n\\n            <div data-braintree-id=\\\"postal-code-field-group\\\" class=\\\"braintree-form__field-group\\\">\\n              <label>\\n                <div class=\\\"braintree-form__label\\\">{{postalCodeLabel}}</div>\\n                <div class=\\\"braintree-form__field\\\">\\n                  <div class=\\\"braintree-form__hosted-field braintree-form-postal-code\\\"></div>\\n                  <div class=\\\"braintree-form__icon-container\\\">\\n                    <div class=\\\"braintree-form__icon braintree-form__field-error-icon\\\">\\n                      <svg width=\\\"24\\\" height=\\\"24\\\">\\n                        <use xlink:href=\\\"#iconError\\\"></use>\\n                      </svg>\\n                    </div>\\n                  </div>\\n                </div>\\n              </label>\\n              <div data-braintree-id=\\\"postal-code-field-error\\\" class=\\\"braintree-form__field-error\\\" role=\\\"alert\\\"></div>\\n            </div>\\n\\n            <div class=\\\"braintree-form__notice-of-collection\\\">\\n              <a href=\\\"https://www.paypal.com/us/legalhub/home\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\">{{noticeOfCollection}}</a>\\n            </div>\\n          </div>\\n\\n          <div data-braintree-id=\\\"save-card-field-group\\\" class=\\\"braintree-form__field-group braintree-hidden\\\">\\n            <label>\\n              <div class=\\\"braintree-form__field braintree-form__checkbox\\\">\\n                <input type=\\\"checkbox\\\" data-braintree-id=\\\"save-card-input\\\" checked />\\n              </div>\\n              <div class=\\\"braintree-form__label\\\">{{saveCardLabel}}</div>\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div data-braintree-id=\\\"sheet-error\\\" class=\\\"braintree-sheet__error\\\">\\n        <div class=\\\"braintree-form__icon braintree-sheet__error-icon\\\">\\n          <svg width=\\\"24\\\" height=\\\"24\\\">\\n            <use xlink:href=\\\"#iconError\\\"></use>\\n          </svg>\\n        </div>\\n        <div data-braintree-id=\\\"sheet-error-text\\\" class=\\\"braintree-sheet__error-text\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div data-braintree-id=\\\"lower-container\\\" class=\\\"braintree-test-class braintree-options braintree-hidden\\\">\\n    <div data-braintree-id=\\\"other-ways-to-pay\\\" class=\\\"braintree-heading\\\">{{otherWaysToPay}}</div>\\n  </div>\\n\\n  <div data-braintree-id=\\\"toggle\\\" class=\\\"braintree-large-button braintree-toggle braintree-hidden\\\" tabindex=\\\"0\\\" role=\\\"button\\\">\\n    <span>{{chooseAnotherWayToPay}}</span>\\n  </div>\\n</div>\\n<div data-braintree-id=\\\"disable-wrapper\\\" class=\\\"braintree-dropin__disabled braintree-hidden\\\"></div>\\n\";\nvar svgHTML = \"<svg data-braintree-id=\\\"svgs\\\">\\n  <defs>\\n    <symbol id=\\\"icon-visa\\\" viewBox=\\\"0 0 44 14.2\\\">\\n      <title>Visa</title>\\n      <path fill=\\\"#1434CB\\\" d=\\\"M16.8,0.2L11,13.9H7.3L4.5,3C4.3,2.3,4.2,2.1,3.6,1.8C2.8,1.3,1.4,0.9,0.1,0.6l0.1-0.4h6   c0.8,0,1.5,0.5,1.6,1.4l1.5,7.9L13,0.2H16.8z M31.4,9.4c0-3.6-5-3.8-5-5.4c0-0.5,0.5-1,1.5-1.1c0.5-0.1,1.9-0.1,3.5,0.6L32,0.6   C31.2,0.3,30.1,0,28.7,0c-3.5,0-6,1.9-6,4.5c0,2,1.8,3.1,3.1,3.7c1.4,0.7,1.8,1.1,1.8,1.7c0,0.9-1.1,1.3-2.1,1.3   c-1.8,0-2.8-0.5-3.6-0.9l-0.6,3c0.8,0.4,2.3,0.7,3.9,0.7C28.9,14.1,31.4,12.3,31.4,9.4 M40.6,13.9h3.3L41,0.2h-3   c-0.7,0-1.3,0.4-1.5,1l-5.3,12.7h3.7l0.7-2h4.5L40.6,13.9z M36.7,9.1l1.9-5.1l1.1,5.1H36.7z M21.8,0.2l-2.9,13.7h-3.5l2.9-13.7   H21.8z\\\"/>\\n    </symbol>\\n\\n    <symbol id=\\\"icon-master-card\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>MasterCard</title>\\n      <path d=\\\"M0 1.927C0 .863.892 0 1.992 0h36.016C39.108 0 40 .863 40 1.927v20.146C40 23.137 39.108 24 38.008 24H1.992C.892 24 0 23.137 0 22.073V1.927z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M11.085 22.2v-1.36c0-.522-.318-.863-.864-.863-.272 0-.568.09-.773.386-.16-.25-.386-.386-.727-.386-.228 0-.455.068-.637.318v-.272h-.478V22.2h.478v-1.202c0-.386.204-.567.523-.567.318 0 .478.205.478.568V22.2h.477v-1.202c0-.386.23-.567.524-.567.32 0 .478.205.478.568V22.2h.523zm7.075-2.177h-.774v-.658h-.478v.658h-.432v.43h.432v.998c0 .5.205.795.75.795.206 0 .433-.068.592-.16l-.136-.407c-.136.09-.296.114-.41.114-.227 0-.318-.137-.318-.363v-.976h.774v-.43zm4.048-.046c-.273 0-.454.136-.568.318v-.272h-.478V22.2h.478v-1.225c0-.363.16-.567.455-.567.09 0 .204.023.295.046l.137-.454c-.09-.023-.228-.023-.32-.023zm-6.118.227c-.228-.16-.546-.227-.888-.227-.546 0-.91.272-.91.703 0 .363.274.567.75.635l.23.023c.25.045.385.113.385.227 0 .16-.182.272-.5.272-.32 0-.57-.113-.728-.227l-.228.363c.25.18.59.272.932.272.637 0 1-.295 1-.703 0-.385-.295-.59-.75-.658l-.227-.022c-.205-.023-.364-.068-.364-.204 0-.16.16-.25.41-.25.272 0 .545.114.682.182l.205-.386zm12.692-.227c-.273 0-.455.136-.568.318v-.272h-.478V22.2h.478v-1.225c0-.363.16-.567.455-.567.09 0 .203.023.294.046L29.1 20c-.09-.023-.227-.023-.318-.023zm-6.096 1.134c0 .66.455 1.135 1.16 1.135.32 0 .546-.068.774-.25l-.228-.385c-.182.136-.364.204-.57.204-.385 0-.658-.272-.658-.703 0-.407.273-.68.66-.702.204 0 .386.068.568.204l.228-.385c-.228-.182-.455-.25-.774-.25-.705 0-1.16.477-1.16 1.134zm4.413 0v-1.087h-.48v.272c-.158-.204-.385-.318-.68-.318-.615 0-1.093.477-1.093 1.134 0 .66.478 1.135 1.092 1.135.317 0 .545-.113.68-.317v.272h.48v-1.09zm-1.753 0c0-.384.25-.702.66-.702.387 0 .66.295.66.703 0 .387-.273.704-.66.704-.41-.022-.66-.317-.66-.703zm-5.71-1.133c-.636 0-1.09.454-1.09 1.134 0 .682.454 1.135 1.114 1.135.32 0 .638-.09.888-.295l-.228-.34c-.18.136-.41.227-.636.227-.296 0-.592-.136-.66-.522h1.615v-.18c.022-.704-.388-1.158-1.002-1.158zm0 .41c.297 0 .502.18.547.52h-1.137c.045-.295.25-.52.59-.52zm11.852.724v-1.95h-.48v1.135c-.158-.204-.385-.318-.68-.318-.615 0-1.093.477-1.093 1.134 0 .66.478 1.135 1.092 1.135.318 0 .545-.113.68-.317v.272h.48v-1.09zm-1.752 0c0-.384.25-.702.66-.702.386 0 .66.295.66.703 0 .387-.274.704-.66.704-.41-.022-.66-.317-.66-.703zm-15.97 0v-1.087h-.476v.272c-.16-.204-.387-.318-.683-.318-.615 0-1.093.477-1.093 1.134 0 .66.478 1.135 1.092 1.135.318 0 .545-.113.682-.317v.272h.477v-1.09zm-1.773 0c0-.384.25-.702.66-.702.386 0 .66.295.66.703 0 .387-.274.704-.66.704-.41-.022-.66-.317-.66-.703z\\\" fill=\\\"#000\\\" />\\n      <path fill=\\\"#FF5F00\\\" d=\\\"M23.095 3.49H15.93v12.836h7.165\\\" />\\n      <path d=\\\"M16.382 9.91c0-2.61 1.23-4.922 3.117-6.42-1.39-1.087-3.14-1.745-5.05-1.745-4.528 0-8.19 3.65-8.19 8.164 0 4.51 3.662 8.162 8.19 8.162 1.91 0 3.66-.657 5.05-1.746-1.89-1.474-3.118-3.81-3.118-6.417z\\\" fill=\\\"#EB001B\\\" />\\n      <path d=\\\"M32.76 9.91c0 4.51-3.664 8.162-8.19 8.162-1.91 0-3.662-.657-5.05-1.746 1.91-1.496 3.116-3.81 3.116-6.417 0-2.61-1.228-4.922-3.116-6.42 1.388-1.087 3.14-1.745 5.05-1.745 4.526 0 8.19 3.674 8.19 8.164z\\\" fill=\\\"#F79E1B\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-unionpay\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>Union Pay</title>\\n      <path d=\\\"M38.333 24H1.667C.75 24 0 23.28 0 22.4V1.6C0 .72.75 0 1.667 0h36.666C39.25 0 40 .72 40 1.6v20.8c0 .88-.75 1.6-1.667 1.6z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M9.877 2h8.126c1.135 0 1.84.93 1.575 2.077l-3.783 16.35c-.267 1.142-1.403 2.073-2.538 2.073H5.13c-1.134 0-1.84-.93-1.574-2.073L7.34 4.076C7.607 2.93 8.74 2 9.878 2z\\\" fill=\\\"#E21836\\\" />\\n      <path d=\\\"M17.325 2h9.345c1.134 0 .623.93.356 2.077l-3.783 16.35c-.265 1.142-.182 2.073-1.32 2.073H12.58c-1.137 0-1.84-.93-1.574-2.073l3.783-16.35C15.056 2.93 16.19 2 17.324 2z\\\" fill=\\\"#00447B\\\" />\\n      <path d=\\\"M26.3 2h8.126c1.136 0 1.84.93 1.575 2.077l-3.782 16.35c-.266 1.142-1.402 2.073-2.54 2.073h-8.122c-1.137 0-1.842-.93-1.574-2.073l3.78-16.35C24.03 2.93 25.166 2 26.303 2z\\\" fill=\\\"#007B84\\\" />\\n      <path d=\\\"M27.633 14.072l-.99 3.3h.266l-.208.68h-.266l-.062.212h-.942l.064-.21H23.58l.193-.632h.194l1.005-3.35.2-.676h.962l-.1.34s.255-.184.498-.248c.242-.064 1.636-.088 1.636-.088l-.206.672h-.33zm-1.695 0l-.254.843s.285-.13.44-.172c.16-.04.395-.057.395-.057l.182-.614h-.764zm-.38 1.262l-.263.877s.29-.15.447-.196c.157-.037.396-.066.396-.066l.185-.614h-.766zm-.614 2.046h.767l.222-.74h-.765l-.223.74z\\\" fill=\\\"#FEFEFE\\\" />\\n      <path d=\\\"M28.055 13.4h1.027l.01.385c-.005.065.05.096.17.096h.208l-.19.637h-.555c-.48.035-.662-.172-.65-.406l-.02-.71zM28.193 16.415h-.978l.167-.566H28.5l.16-.517h-1.104l.19-.638h3.072l-.193.638h-1.03l-.16.516h1.032l-.17.565H29.18l-.2.24h.454l.11.712c.013.07.014.116.036.147.023.026.158.038.238.038h.137l-.21.694h-.348c-.054 0-.133-.004-.243-.01-.105-.008-.18-.07-.25-.105-.064-.03-.16-.11-.182-.24l-.11-.712-.507.7c-.162.222-.38.39-.748.39h-.712l.186-.62h.273c.078 0 .15-.03.2-.056.052-.023.098-.05.15-.126l.74-1.05zM17.478 14.867h2.59l-.19.622H18.84l-.16.53h1.06l-.194.64h-1.06l-.256.863c-.03.095.25.108.353.108l.53-.072-.212.71h-1.193c-.096 0-.168-.013-.272-.037-.1-.023-.145-.07-.19-.138-.043-.07-.11-.128-.064-.278l.343-1.143h-.588l.195-.65h.592l.156-.53h-.588l.188-.623zM19.223 13.75h1.063l-.194.65H18.64l-.157.136c-.067.066-.09.038-.18.087-.08.04-.254.123-.477.123h-.466l.19-.625h.14c.118 0 .198-.01.238-.036.046-.03.098-.096.157-.203l.267-.487h1.057l-.187.356zM20.74 13.4h.905l-.132.46s.286-.23.487-.313c.2-.075.65-.143.65-.143l1.464-.007-.498 1.672c-.085.286-.183.472-.244.555-.055.087-.12.16-.248.23-.124.066-.236.104-.34.115-.096.007-.244.01-.45.012h-1.41l-.4 1.324c-.037.13-.055.194-.03.23.02.03.068.066.135.066l.62-.06-.21.726h-.698c-.22 0-.383-.004-.495-.013-.108-.01-.22 0-.295-.058-.065-.058-.164-.133-.162-.21.007-.073.037-.192.082-.356l1.268-4.23zm1.922 1.69h-1.484l-.09.3h1.283c.152-.018.184.004.196-.003l.096-.297zm-1.402-.272s.29-.266.786-.353c.112-.022.82-.015.82-.015l.106-.357h-1.496l-.216.725z\\\" fill=\\\"#FEFEFE\\\" />\\n      <path d=\\\"M23.382 16.1l-.084.402c-.036.125-.067.22-.16.302-.1.084-.216.172-.488.172l-.502.02-.004.455c-.006.13.028.117.048.138.024.022.045.032.067.04l.157-.008.48-.028-.198.663h-.552c-.385 0-.67-.008-.765-.084-.092-.057-.105-.132-.103-.26l.035-1.77h.88l-.013.362h.212c.072 0 .12-.007.15-.026.027-.02.047-.048.06-.093l.087-.282h.692zM10.84 7.222c-.032.143-.596 2.763-.598 2.764-.12.53-.21.91-.508 1.152-.172.14-.37.21-.6.21-.37 0-.587-.185-.624-.537l-.007-.12.113-.712s.593-2.388.7-2.703c.002-.017.005-.026.007-.035-1.152.01-1.357 0-1.37-.018-.007.024-.037.173-.037.173l-.605 2.688-.05.23-.1.746c0 .22.042.4.13.553.275.485 1.06.557 1.504.557.573 0 1.11-.123 1.47-.345.63-.375.797-.962.944-1.48l.067-.267s.61-2.48.716-2.803c.003-.017.006-.026.01-.035-.835.01-1.08 0-1.16-.018zM14.21 12.144c-.407-.006-.55-.006-1.03.018l-.018-.036c.042-.182.087-.363.127-.548l.06-.25c.086-.39.173-.843.184-.98.007-.084.036-.29-.2-.29-.1 0-.203.048-.307.096-.058.207-.174.79-.23 1.055-.118.558-.126.62-.178.897l-.036.037c-.42-.006-.566-.006-1.05.018l-.024-.04c.08-.332.162-.668.24-.998.203-.9.25-1.245.307-1.702l.04-.028c.47-.067.585-.08 1.097-.185l.043.047-.077.287c.086-.052.168-.104.257-.15.242-.12.51-.155.658-.155.223 0 .468.062.57.323.098.232.034.52-.094 1.084l-.066.287c-.13.627-.152.743-.225 1.174l-.05.036zM15.87 12.144c-.245 0-.405-.006-.56 0-.153 0-.303.008-.532.018l-.013-.02-.015-.02c.062-.238.097-.322.128-.406.03-.084.06-.17.115-.41.072-.315.116-.535.147-.728.033-.187.052-.346.075-.53l.02-.014.02-.018c.244-.036.4-.057.56-.082.16-.024.32-.055.574-.103l.008.023.008.022c-.047.195-.094.39-.14.588-.047.197-.094.392-.137.587-.093.414-.13.57-.152.68-.02.105-.026.163-.063.377l-.022.02-.023.017zM19.542 10.728c.143-.633.033-.928-.108-1.11-.213-.273-.59-.36-.978-.36-.235 0-.793.023-1.23.43-.312.29-.458.687-.546 1.066-.088.387-.19 1.086.447 1.344.198.085.48.108.662.108.466 0 .945-.13 1.304-.513.278-.312.405-.775.448-.965zm-1.07-.046c-.02.106-.113.503-.24.673-.086.123-.19.198-.305.198-.033 0-.235 0-.238-.3-.003-.15.027-.304.063-.47.108-.478.236-.88.56-.88.255 0 .27.298.16.78zM29.536 12.187c-.493-.004-.635-.004-1.09.015l-.03-.037c.124-.472.248-.943.358-1.42.142-.62.175-.882.223-1.244l.037-.03c.49-.07.625-.09 1.135-.186l.015.044c-.093.388-.186.777-.275 1.166-.19.816-.258 1.23-.33 1.658l-.044.035z\\\" fill=\\\"#FEFEFE\\\" />\\n      <path d=\\\"M29.77 10.784c.144-.63-.432-.056-.525-.264-.14-.323-.052-.98-.62-1.2-.22-.085-.732.025-1.17.428-.31.29-.458.683-.544 1.062-.088.38-.19 1.078.444 1.328.2.085.384.11.567.103.638-.034 1.124-1.002 1.483-1.386.277-.303.326.115.368-.07zm-.974-.047c-.024.1-.117.503-.244.67-.083.117-.283.192-.397.192-.032 0-.232 0-.24-.3 0-.146.03-.3.067-.467.11-.47.235-.87.56-.87.254 0 .363.293.254.774zM22.332 12.144c-.41-.006-.55-.006-1.03.018l-.018-.036c.04-.182.087-.363.13-.548l.057-.25c.09-.39.176-.843.186-.98.008-.084.036-.29-.198-.29-.1 0-.203.048-.308.096-.057.207-.175.79-.232 1.055-.115.558-.124.62-.176.897l-.035.037c-.42-.006-.566-.006-1.05.018l-.022-.04.238-.998c.203-.9.25-1.245.307-1.702l.038-.028c.472-.067.587-.08 1.098-.185l.04.047-.073.287c.084-.052.17-.104.257-.15.24-.12.51-.155.655-.155.224 0 .47.062.575.323.095.232.03.52-.098 1.084l-.065.287c-.133.627-.154.743-.225 1.174l-.05.036zM26.32 8.756c-.07.326-.282.603-.554.736-.225.114-.498.123-.78.123h-.183l.013-.074.336-1.468.01-.076.007-.058.132.015.71.062c.275.105.388.38.31.74zM25.88 7.22l-.34.003c-.883.01-1.238.006-1.383-.012l-.037.182-.315 1.478-.793 3.288c.77-.01 1.088-.01 1.22.004l.21-1.024s.153-.644.163-.667c0 0 .047-.066.096-.092h.07c.665 0 1.417 0 2.005-.437.4-.298.675-.74.797-1.274.03-.132.054-.29.054-.446 0-.205-.04-.41-.16-.568-.3-.423-.896-.43-1.588-.433zM33.572 9.28l-.04-.043c-.502.1-.594.118-1.058.18l-.034.034-.005.023-.003-.007c-.345.803-.334.63-.615 1.26-.003-.03-.003-.048-.004-.077l-.07-1.37-.044-.043c-.53.1-.542.118-1.03.18l-.04.034-.006.056.003.007c.06.315.047.244.108.738.03.244.065.49.093.73.05.4.077.6.134 1.21-.328.55-.408.757-.722 1.238l.017.044c.478-.018.587-.018.94-.018l.08-.088c.265-.578 2.295-4.085 2.295-4.085zM16.318 9.62c.27-.19.304-.45.076-.586-.23-.137-.634-.094-.906.095-.273.186-.304.45-.075.586.228.134.633.094.905-.096z\\\" fill=\\\"#FEFEFE\\\" />\\n      <path d=\\\"M31.238 13.415l-.397.684c-.124.232-.357.407-.728.41l-.632-.01.184-.618h.124c.064 0 .11-.004.148-.022.03-.01.054-.035.08-.072l.233-.373h.988z\\\" fill=\\\"#FEFEFE\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-american-express\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>American Express</title>\\n      <path d=\\\"M38.333 24H1.667C.75 24 0 23.28 0 22.4V1.6C0 .72.75 0 1.667 0h36.666C39.25 0 40 .72 40 1.6v20.8c0 .88-.75 1.6-1.667 1.6z\\\" fill=\\\"#FFF\\\" />\\n      <path fill=\\\"#1478BE\\\" d=\\\"M6.26 12.32h2.313L7.415 9.66M27.353 9.977h-3.738v1.23h3.666v1.384h-3.675v1.385h3.821v1.005c.623-.77 1.33-1.466 2.025-2.235l.707-.77c-.934-1.004-1.87-2.08-2.804-3.075v1.077z\\\" />\\n      <path d=\\\"M38.25 7h-5.605l-1.328 1.4L30.072 7H16.984l-1.017 2.416L14.877 7h-9.58L1.25 16.5h4.826l.623-1.556h1.4l.623 1.556H29.99l1.327-1.483 1.328 1.483h5.605l-4.36-4.667L38.25 7zm-17.685 8.1h-1.557V9.883L16.673 15.1h-1.33L13.01 9.883l-.084 5.217H9.73l-.623-1.556h-3.27L5.132 15.1H3.42l2.884-6.772h2.42l2.645 6.233V8.33h2.646l2.107 4.51 1.868-4.51h2.575V15.1zm14.727 0h-2.024l-2.024-2.26-2.023 2.26H22.06V8.328H29.53l1.795 2.177 2.024-2.177h2.025L32.26 11.75l3.032 3.35z\\\" fill=\\\"#1478BE\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-jcb\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>JCB</title>\\n      <path d=\\\"M38.333 24H1.667C.75 24 0 23.28 0 22.4V1.6C0 .72.75 0 1.667 0h36.666C39.25 0 40 .72 40 1.6v20.8c0 .88-.75 1.6-1.667 1.6z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M33.273 2.01h.013v17.062c-.004 1.078-.513 2.103-1.372 2.746-.63.47-1.366.67-2.14.67-.437 0-4.833.026-4.855 0-.01-.01 0-.07 0-.082v-6.82c0-.04.004-.064.033-.064h5.253c.867 0 1.344-.257 1.692-.61.44-.448.574-1.162.294-1.732-.24-.488-.736-.78-1.244-.913-.158-.04-.32-.068-.483-.083-.01 0-.064 0-.07-.006-.03-.034.023-.04.038-.046.102-.033.215-.042.32-.073.532-.164.993-.547 1.137-1.105.15-.577-.05-1.194-.524-1.552-.34-.257-.768-.376-1.187-.413-.43-.038-4.774-.022-5.21-.022-.072 0-.05-.02-.05-.09V5.63c0-.31.01-.616.073-.92.126-.592.41-1.144.815-1.59.558-.615 1.337-1.01 2.16-1.093.478-.048 4.89-.017 5.305-.017zm-4.06 8.616c.06.272-.01.567-.204.77-.173.176-.407.25-.648.253-.195.003-1.725 0-1.788 0l.003-1.645c.012-.027.02-.018.06-.018.097 0 1.713-.004 1.823.005.232.02.45.12.598.306.076.096.128.208.155.328zm-2.636 2.038h1.944c.242.002.47.063.652.228.226.204.327.515.283.815-.04.263-.194.5-.422.634-.187.112-.39.125-.6.125h-1.857v-1.8z\\\" fill=\\\"#53B230\\\" />\\n      <path d=\\\"M6.574 13.89c-.06-.03-.06-.018-.07-.06-.006-.026-.005-8.365.003-8.558.04-.95.487-1.857 1.21-2.47.517-.434 1.16-.71 1.83-.778.396-.04.803-.018 1.2-.018.69 0 4.11-.013 4.12 0 .008.008.002 16.758 0 17.074-.003.956-.403 1.878-1.105 2.523-.506.465-1.15.77-1.83.86-.41.056-5.02.032-5.363.032-.066 0-.054.013-.066-.024-.01-.025 0-7 0-7.17.66.178 1.35.28 2.03.348.662.067 1.33.093 1.993.062.93-.044 1.947-.192 2.712-.762.32-.238.574-.553.73-.922.148-.353.2-.736.2-1.117 0-.348.006-3.93-.016-3.942-.023-.014-2.885-.015-2.9.012-.012.022 0 3.87 0 3.95-.003.47-.16.933-.514 1.252-.468.42-1.11.47-1.707.423-.687-.055-1.357-.245-1.993-.508-.157-.065-.312-.135-.466-.208z\\\" fill=\\\"#006CB9\\\" />\\n      <path d=\\\"M15.95 9.835c-.025.02-.05.04-.072.06V6.05c0-.295-.012-.594.01-.888.12-1.593 1.373-2.923 2.944-3.126.382-.05 5.397-.042 5.41-.026.01.01 0 .062 0 .074v16.957c0 1.304-.725 2.52-1.89 3.1-.504.25-1.045.35-1.605.35-.322 0-4.757.015-4.834 0-.05-.01-.023.01-.035-.02-.007-.022 0-6.548 0-7.44v-.422c.554.48 1.256.75 1.96.908.536.12 1.084.176 1.63.196.537.02 1.076.01 1.61-.037.546-.05 1.088-.136 1.625-.244.137-.028.274-.057.41-.09.033-.006.17-.017.187-.044.013-.02 0-.097 0-.12v-1.324c-.582.292-1.19.525-1.83.652-.778.155-1.64.198-2.385-.123-.752-.326-1.2-1.024-1.274-1.837-.076-.837.173-1.716.883-2.212.736-.513 1.7-.517 2.553-.38.634.1 1.245.305 1.825.58.078.037.154.075.23.113V9.322c0-.02.013-.1 0-.118-.02-.028-.152-.038-.188-.046-.066-.016-.133-.03-.2-.045C22.38 9 21.84 8.908 21.3 8.85c-.533-.06-1.068-.077-1.603-.066-.542.01-1.086.054-1.62.154-.662.125-1.32.337-1.883.716-.085.056-.167.117-.245.18z\\\" fill=\\\"#E20138\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-discover\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>Discover</title>\\n      <path d=\\\"M38.333 24H1.667C.75 24 0 23.28 0 22.4V1.6C0 .72.75 0 1.667 0h36.666C39.25 0 40 .72 40 1.6v20.8c0 .88-.75 1.6-1.667 1.6z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M38.995 11.75S27.522 20.1 6.5 23.5h31.495c.552 0 1-.448 1-1V11.75z\\\" fill=\\\"#F48024\\\" />\\n      <path d=\\\"M5.332 11.758c-.338.305-.776.438-1.47.438h-.29V8.55h.29c.694 0 1.115.124 1.47.446.37.33.595.844.595 1.372 0 .53-.224 1.06-.595 1.39zM4.077 7.615H2.5v5.515h1.57c.833 0 1.435-.197 1.963-.637.63-.52 1-1.305 1-2.116 0-1.628-1.214-2.762-2.956-2.762zM7.53 13.13h1.074V7.616H7.53M11.227 9.732c-.645-.24-.834-.397-.834-.695 0-.347.338-.61.8-.61.322 0 .587.132.867.446l.562-.737c-.462-.405-1.015-.612-1.618-.612-.975 0-1.718.678-1.718 1.58 0 .76.346 1.15 1.355 1.513.42.148.635.247.743.314.215.14.322.34.322.57 0 .448-.354.78-.834.78-.51 0-.924-.258-1.17-.736l-.695.67c.495.726 1.09 1.05 1.907 1.05 1.116 0 1.9-.745 1.9-1.812 0-.876-.363-1.273-1.585-1.72zM13.15 10.377c0 1.62 1.27 2.877 2.907 2.877.462 0 .858-.09 1.347-.32v-1.267c-.43.43-.81.604-1.297.604-1.082 0-1.85-.785-1.85-1.9 0-1.06.792-1.895 1.8-1.895.512 0 .9.183 1.347.62V7.83c-.472-.24-.86-.34-1.322-.34-1.627 0-2.932 1.283-2.932 2.887zM25.922 11.32l-1.468-3.705H23.28l2.337 5.656h.578l2.38-5.655H27.41M29.06 13.13h3.046v-.934h-1.973v-1.488h1.9v-.934h-1.9V8.55h1.973v-.935H29.06M34.207 10.154h-.314v-1.67h.33c.67 0 1.034.28 1.034.818 0 .554-.364.852-1.05.852zm2.155-.91c0-1.033-.71-1.628-1.95-1.628H32.82v5.514h1.073v-2.215h.14l1.487 2.215h1.32l-1.733-2.323c.81-.165 1.255-.72 1.255-1.563z\\\" fill=\\\"#221F20\\\" />\\n      <path d=\\\"M23.6 10.377c0 1.62-1.31 2.93-2.927 2.93-1.617.002-2.928-1.31-2.928-2.93s1.31-2.932 2.928-2.932c1.618 0 2.928 1.312 2.928 2.932z\\\" fill=\\\"#F48024\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-diners-club\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>Diners Club</title>\\n      <path d=\\\"M38.333 24H1.667C.75 24 0 23.28 0 22.4V1.6C0 .72.75 0 1.667 0h36.666C39.25 0 40 .72 40 1.6v20.8c0 .88-.75 1.6-1.667 1.6z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M9.02 11.83c0-5.456 4.54-9.88 10.14-9.88 5.6 0 10.139 4.424 10.139 9.88-.002 5.456-4.54 9.88-10.14 9.88-5.6 0-10.14-4.424-10.14-9.88z\\\" fill=\\\"#FEFEFE\\\" />\\n      <path fill=\\\"#FFF\\\" d=\\\"M32.522 22H8.5V1.5h24.022\\\" />\\n      <path d=\\\"M25.02 11.732c-.003-2.534-1.607-4.695-3.868-5.55v11.102c2.26-.857 3.865-3.017 3.87-5.552zm-8.182 5.55V6.18c-2.26.86-3.86 3.017-3.867 5.55.007 2.533 1.61 4.69 3.868 5.55zm2.158-14.934c-5.25.002-9.503 4.202-9.504 9.384 0 5.182 4.254 9.38 9.504 9.382 5.25 0 9.504-4.2 9.505-9.382 0-5.182-4.254-9.382-9.504-9.384zM18.973 22C13.228 22.027 8.5 17.432 8.5 11.84 8.5 5.726 13.228 1.5 18.973 1.5h2.692c5.677 0 10.857 4.225 10.857 10.34 0 5.59-5.18 10.16-10.857 10.16h-2.692z\\\" fill=\\\"#004A97\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-maestro\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>Maestro</title>\\n      <path d=\\\"M38.333 24H1.667C.75 24 0 23.28 0 22.4V1.6C0 .72.75 0 1.667 0h36.666C39.25 0 40 .72 40 1.6v20.8c0 .88-.75 1.6-1.667 1.6z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M14.67 22.39V21c.022-.465-.303-.86-.767-.882h-.116c-.3-.023-.603.14-.788.394-.164-.255-.442-.417-.743-.394-.256-.023-.51.116-.65.324v-.278h-.487v2.203h.487v-1.183c-.046-.278.162-.533.44-.58h.094c.325 0 .488.21.488.58v1.23h.487v-1.23c-.047-.278.162-.556.44-.58h.093c.325 0 .487.21.487.58v1.23l.534-.024zm2.712-1.09v-1.113h-.487v.28c-.162-.21-.417-.326-.695-.326-.65 0-1.16.51-1.16 1.16 0 .65.51 1.16 1.16 1.16.278 0 .533-.117.695-.325v.278h.487V21.3zm-1.786 0c.024-.37.348-.65.72-.626.37.023.65.348.626.72-.023.347-.302.625-.673.625-.372 0-.674-.28-.674-.65-.023-.047-.023-.047 0-.07zm12.085-1.16c.163 0 .325.024.465.094.14.046.278.14.37.255.117.115.186.23.256.37.117.3.117.626 0 .927-.046.14-.138.255-.254.37-.116.117-.232.186-.37.256-.303.116-.65.116-.952 0-.14-.046-.28-.14-.37-.255-.118-.116-.187-.232-.257-.37-.116-.302-.116-.627 0-.928.047-.14.14-.255.256-.37.115-.117.23-.187.37-.256.163-.07.325-.116.488-.093zm0 .465c-.092 0-.185.023-.278.046-.092.024-.162.094-.232.14-.07.07-.116.14-.14.232-.068.185-.068.394 0 .58.024.092.094.162.14.23.07.07.14.117.232.14.186.07.37.07.557 0 .092-.023.16-.092.23-.14.07-.068.117-.138.14-.23.07-.186.07-.395 0-.58-.023-.093-.093-.162-.14-.232-.07-.07-.138-.116-.23-.14-.094-.045-.187-.07-.28-.045zm-7.677.695c0-.695-.44-1.16-1.043-1.16-.65 0-1.16.534-1.137 1.183.023.65.534 1.16 1.183 1.136.325 0 .65-.093.905-.302l-.23-.348c-.187.14-.42.232-.65.232-.326.023-.627-.21-.673-.533h1.646v-.21zm-1.646-.21c.023-.3.278-.532.58-.532.3 0 .556.232.556.533h-1.136zm3.664-.346c-.207-.116-.44-.186-.695-.186-.255 0-.417.093-.417.255 0 .163.162.186.37.21l.233.022c.488.07.766.278.766.672 0 .395-.37.72-1.02.72-.348 0-.673-.094-.95-.28l.23-.37c.21.162.465.232.743.232.324 0 .51-.094.51-.28 0-.115-.117-.185-.395-.23l-.232-.024c-.487-.07-.765-.302-.765-.65 0-.44.37-.718.927-.718.325 0 .627.07.905.232l-.21.394zm2.32-.116h-.788v.997c0 .23.07.37.325.37.14 0 .3-.046.417-.115l.14.417c-.186.116-.395.162-.604.162-.58 0-.765-.302-.765-.812v-1.02h-.44v-.44h.44v-.673h.487v.672h.79v.44zm1.67-.51c.117 0 .233.023.35.07l-.14.463c-.093-.045-.21-.045-.302-.045-.325 0-.464.208-.464.58v1.25h-.487v-2.2h.487v.277c.116-.255.325-.37.557-.394z\\\" fill=\\\"#000\\\" />\\n      <path fill=\\\"#7673C0\\\" d=\\\"M23.64 3.287h-7.305V16.41h7.306\\\" />\\n      <path d=\\\"M16.8 9.848c0-2.55 1.183-4.985 3.2-6.56C16.384.435 11.12 1.06 8.29 4.7 5.435 8.32 6.06 13.58 9.703 16.41c3.038 2.387 7.283 2.387 10.32 0-2.04-1.578-3.223-3.99-3.223-6.562z\\\" fill=\\\"#EB001B\\\" />\\n      <path d=\\\"M33.5 9.848c0 4.613-3.735 8.346-8.35 8.346-1.88 0-3.69-.626-5.15-1.785 3.618-2.83 4.245-8.092 1.415-11.71-.418-.532-.882-.996-1.415-1.413C23.618.437 28.883 1.06 31.736 4.7 32.873 6.163 33.5 7.994 33.5 9.85z\\\" fill=\\\"#00A1DF\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-elo\\\" viewBox=\\\"0 0 48 29\\\">\\n      <title>Elo</title>\\n      <path d=\\\"M46.177 29H1.823C.9 29 0 28.13 0 27.187V1.813C0 .87.9 0 1.823 0h44.354C47.1 0 48 .87 48 1.813v25.375C48 28.13 47.1 29 46.177 29z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M4.8 9.14c0-.427.57-.973 1.067-.973h7.466c.496 0 1.067.546 1.067.972v3.888c0 .425-.57.972-1.067.972H5.867c-.496 0-1.067-.547-1.067-.972v-3.89z\\\" fill=\\\"#828282\\\" />\\n      <rect fill=\\\"#828282\\\" x=\\\"10.8\\\" y=\\\"22.167\\\" width=\\\"3.6\\\" height=\\\"2.333\\\" rx=\\\"1.167\\\" />\\n      <rect fill=\\\"#828282\\\" x=\\\"4.8\\\" y=\\\"22.167\\\" width=\\\"3.6\\\" height=\\\"2.333\\\" rx=\\\"1.167\\\" />\\n      <path d=\\\"M6.55 16.333h34.9c.966 0 1.75.784 1.75 1.75 0 .967-.784 1.75-1.75 1.75H6.55c-.966 0-1.75-.783-1.75-1.75 0-.966.784-1.75 1.75-1.75z\\\" fill=\\\"#828282\\\" />\\n      <ellipse fill=\\\"#828282\\\" cx=\\\"40.2\\\" cy=\\\"6.417\\\" rx=\\\"3\\\" ry=\\\"2.917\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-hiper\\\" viewBox=\\\"0 0 48 29\\\">\\n      <title>Hiper</title>\\n      <path d=\\\"M46.177 29H1.823C.9 29 0 28.13 0 27.187V1.813C0 .87.9 0 1.823 0h44.354C47.1 0 48 .87 48 1.813v25.375C48 28.13 47.1 29 46.177 29z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M4.8 9.14c0-.427.57-.973 1.067-.973h7.466c.496 0 1.067.546 1.067.972v3.888c0 .425-.57.972-1.067.972H5.867c-.496 0-1.067-.547-1.067-.972v-3.89z\\\" fill=\\\"#828282\\\" />\\n      <rect fill=\\\"#828282\\\" x=\\\"10.8\\\" y=\\\"22.167\\\" width=\\\"3.6\\\" height=\\\"2.333\\\" rx=\\\"1.167\\\" />\\n      <rect fill=\\\"#828282\\\" x=\\\"4.8\\\" y=\\\"22.167\\\" width=\\\"3.6\\\" height=\\\"2.333\\\" rx=\\\"1.167\\\" />\\n      <path d=\\\"M6.55 16.333h34.9c.966 0 1.75.784 1.75 1.75 0 .967-.784 1.75-1.75 1.75H6.55c-.966 0-1.75-.783-1.75-1.75 0-.966.784-1.75 1.75-1.75z\\\" fill=\\\"#828282\\\" />\\n      <ellipse fill=\\\"#828282\\\" cx=\\\"40.2\\\" cy=\\\"6.417\\\" rx=\\\"3\\\" ry=\\\"2.917\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"icon-hipercard\\\" viewBox=\\\"0 0 48 29\\\">\\n      <title>Hipercard</title>\\n      <path d=\\\"M46.177 29H1.823C.9 29 0 28.13 0 27.187V1.813C0 .87.9 0 1.823 0h44.354C47.1 0 48 .87 48 1.813v25.375C48 28.13 47.1 29 46.177 29z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M4.8 9.14c0-.427.57-.973 1.067-.973h7.466c.496 0 1.067.546 1.067.972v3.888c0 .425-.57.972-1.067.972H5.867c-.496 0-1.067-.547-1.067-.972v-3.89z\\\" fill=\\\"#828282\\\" />\\n      <rect fill=\\\"#828282\\\" x=\\\"10.8\\\" y=\\\"22.167\\\" width=\\\"3.6\\\" height=\\\"2.333\\\" rx=\\\"1.167\\\" />\\n      <rect fill=\\\"#828282\\\" x=\\\"4.8\\\" y=\\\"22.167\\\" width=\\\"3.6\\\" height=\\\"2.333\\\" rx=\\\"1.167\\\" />\\n      <path d=\\\"M6.55 16.333h34.9c.966 0 1.75.784 1.75 1.75 0 .967-.784 1.75-1.75 1.75H6.55c-.966 0-1.75-.783-1.75-1.75 0-.966.784-1.75 1.75-1.75z\\\" fill=\\\"#828282\\\" />\\n      <ellipse fill=\\\"#828282\\\" cx=\\\"40.2\\\" cy=\\\"6.417\\\" rx=\\\"3\\\" ry=\\\"2.917\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"logoPayPal\\\" viewBox=\\\"0 0 48 29\\\">\\n      <title>PayPal Logo</title>\\n      <path d=\\\"M46 29H2c-1.1 0-2-.87-2-1.932V1.934C0 .87.9 0 2 0h44c1.1 0 2 .87 2 1.934v25.134C48 28.13 47.1 29 46 29z\\\" fill-opacity=\\\"0\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M31.216 16.4c.394-.7.69-1.5.886-2.4.196-.8.196-1.6.1-2.2-.1-.7-.396-1.2-.79-1.7-.195-.3-.59-.5-.885-.7.1-.8.1-1.5 0-2.1-.1-.6-.394-1.1-.886-1.6-.885-1-2.56-1.6-4.922-1.6h-6.4c-.492 0-.787.3-.886.8l-2.658 17.2c0 .2 0 .3.1.4.097.1.294.2.393.2h4.036l-.295 1.8c0 .1 0 .3.1.4.098.1.195.2.393.2h3.35c.393 0 .688-.3.786-.7v-.2l.59-4.1v-.2c.1-.4.395-.7.788-.7h.59c1.675 0 3.152-.4 4.137-1.1.59-.5 1.083-1 1.478-1.7h-.002z\\\" fill=\\\"#263B80\\\" />\\n      <path d=\\\"M21.364 9.4c0-.3.196-.5.492-.6.098-.1.196-.1.394-.1h5.02c.592 0 1.183 0 1.675.1.1 0 .295.1.394.1.098 0 .294.1.393.1.1 0 .1 0 .197.102.295.1.492.2.69.3.295-1.6 0-2.7-.887-3.8-.985-1.1-2.658-1.6-4.923-1.6h-6.4c-.49 0-.885.3-.885.8l-2.758 17.3c-.098.3.197.6.59.6h3.94l.985-6.4 1.083-6.9z\\\" fill=\\\"#263B80\\\" />\\n      <path d=\\\"M30.523 9.4c0 .1 0 .3-.098.4-.887 4.4-3.742 5.9-7.484 5.9h-1.87c-.492 0-.787.3-.886.8l-.985 6.2-.296 1.8c0 .3.196.6.492.6h3.348c.394 0 .69-.3.787-.7v-.2l.592-4.1v-.2c.1-.4.394-.7.787-.7h.69c3.248 0 5.808-1.3 6.497-5.2.296-1.6.197-3-.69-3.9-.196-.3-.49-.5-.885-.7z\\\" fill=\\\"#159BD7\\\" />\\n      <path d=\\\"M29.635 9c-.098 0-.295-.1-.394-.1-.098 0-.294-.1-.393-.1-.492-.102-1.083-.102-1.673-.102h-5.022c-.1 0-.197 0-.394.1-.198.1-.394.3-.492.6l-1.083 6.9v.2c.1-.5.492-.8.886-.8h1.87c3.742 0 6.598-1.5 7.484-5.9 0-.1 0-.3.098-.4-.196-.1-.492-.2-.69-.3 0-.1-.098-.1-.196-.1z\\\" fill=\\\"#232C65\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"logoPayPalCredit\\\" viewBox=\\\"0 0 48 29\\\">\\n      <title>PayPal Credit Logo</title>\\n      <path d=\\\"M46 29H2c-1.1 0-2-.87-2-1.932V1.934C0 .87.9 0 2 0h44c1.1 0 2 .87 2 1.934v25.134C48 28.13 47.1 29 46 29z\\\" fill-opacity=\\\"0\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" />\\n      <path d=\\\"M27.44 21.6h.518c1.377 0 2.67-.754 2.953-2.484.248-1.588-.658-2.482-2.14-2.482h-.38c-.093 0-.172.067-.187.16l-.763 4.805zm-1.254-6.646c.024-.158.16-.273.32-.273h2.993c2.47 0 4.2 1.942 3.81 4.436-.4 2.495-2.752 4.436-5.21 4.436h-3.05c-.116 0-.205-.104-.187-.218l1.323-8.38zM22.308 16.907l-.192 1.21h2.38c.116 0 .204.103.186.217l-.23 1.462c-.023.157-.16.273-.318.273h-2.048c-.16 0-.294.114-.32.27l-.203 1.26h2.52c.117 0 .205.102.187.217l-.228 1.46c-.025.16-.16.275-.32.275h-4.55c-.116 0-.204-.104-.186-.218l1.322-8.38c.025-.158.16-.273.32-.273h4.55c.116 0 .205.104.187.22l-.23 1.46c-.024.158-.16.274-.32.274H22.63c-.16 0-.295.115-.32.273M35.325 23.552h-1.81c-.115 0-.203-.104-.185-.218l1.322-8.38c.025-.158.16-.273.32-.273h1.81c.115 0 .203.104.185.22l-1.322 8.38c-.025.156-.16.272-.32.272M14.397 18.657h.224c.754 0 1.62-.14 1.777-1.106.158-.963-.345-1.102-1.15-1.104h-.326c-.097 0-.18.07-.197.168l-.326 2.043zm3.96 4.895h-2.37c-.102 0-.194-.058-.238-.15l-1.565-3.262h-.023l-.506 3.19c-.02.128-.13.222-.26.222h-1.86c-.116 0-.205-.104-.187-.218l1.33-8.432c.02-.128.13-.22.26-.22h3.222c1.753 0 2.953.834 2.66 2.728-.2 1.224-1.048 2.283-2.342 2.506l2.037 3.35c.076.125-.014.286-.16.286zM40.216 23.552h-1.808c-.116 0-.205-.104-.187-.218l1.06-6.7h-1.684c-.116 0-.205-.104-.187-.218l.228-1.462c.025-.157.16-.273.32-.273h5.62c.116 0 .205.104.186.22l-.228 1.46c-.025.158-.16.274-.32.274h-1.63l-1.05 6.645c-.025.156-.16.272-.32.272M11.467 17.202c-.027.164-.228.223-.345.104-.395-.405-.975-.62-1.6-.62-1.41 0-2.526 1.083-2.75 2.458-.21 1.4.588 2.41 2.022 2.41.592 0 1.22-.225 1.74-.6.144-.105.34.02.313.194l-.328 2.03c-.02.12-.108.22-.226.254-.702.207-1.24.355-1.9.355-3.823 0-4.435-3.266-4.238-4.655.553-3.894 3.712-4.786 5.65-4.678.623.034 1.182.117 1.73.323.177.067.282.25.252.436l-.32 1.99\\\" fill=\\\"#21306F\\\" />\\n      <path d=\\\"M23.184 7.67c-.11.717-.657.717-1.186.717h-.302l.212-1.34c.013-.08.082-.14.164-.14h.138c.36 0 .702 0 .877.206.105.123.137.305.097.557zm-.23-1.87h-1.998c-.137 0-.253.098-.274.233l-.808 5.123c-.016.1.062.192.165.192h1.024c.095 0 .177-.07.192-.164l.23-1.452c.02-.135.136-.235.273-.235h.63c1.317 0 2.076-.636 2.275-1.898.09-.553.003-.987-.255-1.29-.284-.334-.788-.51-1.456-.51z\\\" fill=\\\"#0093C7\\\" />\\n      <path d=\\\"M8.936 7.67c-.11.717-.656.717-1.186.717h-.302l.212-1.34c.013-.08.082-.14.164-.14h.138c.36 0 .702 0 .877.206.104.123.136.305.096.557zm-.23-1.87H6.708c-.136 0-.253.098-.274.233l-.808 5.123c-.016.1.062.192.165.192h.955c.136 0 .252-.1.274-.234l.217-1.382c.02-.135.137-.235.274-.235h.633c1.316 0 2.075-.636 2.274-1.898.09-.553.003-.987-.255-1.29-.284-.334-.788-.51-1.456-.51zM13.343 9.51c-.092.545-.526.912-1.08.912-.277 0-.5-.09-.642-.258-.14-.168-.193-.406-.148-.672.086-.542.527-.92 1.072-.92.27 0 .492.09.637.26.148.172.205.412.163.677zm1.334-1.863h-.957c-.082 0-.152.06-.164.14l-.042.268-.067-.097c-.208-.3-.67-.4-1.13-.4-1.057 0-1.96.8-2.135 1.923-.092.56.038 1.097.356 1.47.29.344.708.487 1.204.487.852 0 1.325-.548 1.325-.548l-.043.265c-.016.1.062.193.164.193h.862c.136 0 .253-.1.274-.234l.517-3.275c.017-.102-.06-.193-.163-.193z\\\" fill=\\\"#21306F\\\" />\\n      <path d=\\\"M27.59 9.51c-.09.545-.525.912-1.078.912-.278 0-.5-.09-.643-.258-.142-.168-.195-.406-.15-.672.086-.542.526-.92 1.07-.92.273 0 .494.09.64.26.146.172.203.412.16.677zm1.334-1.863h-.956c-.082 0-.152.06-.164.14l-.043.268-.065-.097c-.208-.3-.67-.4-1.13-.4-1.057 0-1.96.8-2.136 1.923-.092.56.038 1.097.355 1.47.292.344.71.487 1.205.487.852 0 1.325-.548 1.325-.548l-.043.265c-.016.1.062.193.164.193h.862c.136 0 .253-.1.274-.234l.517-3.275c.015-.102-.063-.193-.166-.193z\\\" fill=\\\"#0093C7\\\" />\\n      <path d=\\\"M19.77 7.647h-.96c-.092 0-.178.045-.23.122L17.254 9.72l-.562-1.877c-.035-.118-.143-.198-.266-.198h-.945c-.113 0-.194.112-.157.22l1.06 3.108-.997 1.404c-.078.11 0 .262.136.262h.96c.092 0 .177-.044.23-.12l3.196-4.614c.077-.11-.002-.26-.137-.26\\\" fill=\\\"#21306F\\\" />\\n      <path d=\\\"M30.052 5.94l-.82 5.216c-.016.1.062.192.165.192h.824c.138 0 .254-.1.275-.234l.81-5.122c.015-.1-.064-.193-.166-.193h-.924c-.082 0-.15.06-.164.14\\\" fill=\\\"#0093C7\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"iconCardFront\\\" viewBox=\\\"0 0 48 29\\\">\\n      <title>Generic Card</title>\\n      <path d=\\\"M46.177 29H1.823C.9 29 0 28.13 0 27.187V1.813C0 .87.9 0 1.823 0h44.354C47.1 0 48 .87 48 1.813v25.375C48 28.13 47.1 29 46.177 29z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M4.8 9.14c0-.427.57-.973 1.067-.973h7.466c.496 0 1.067.546 1.067.972v3.888c0 .425-.57.972-1.067.972H5.867c-.496 0-1.067-.547-1.067-.972v-3.89z\\\" fill=\\\"#828282\\\" />\\n      <rect fill=\\\"#828282\\\" x=\\\"10.8\\\" y=\\\"22.167\\\" width=\\\"3.6\\\" height=\\\"2.333\\\" rx=\\\"1.167\\\" />\\n      <rect fill=\\\"#828282\\\" x=\\\"4.8\\\" y=\\\"22.167\\\" width=\\\"3.6\\\" height=\\\"2.333\\\" rx=\\\"1.167\\\" />\\n      <path d=\\\"M6.55 16.333h34.9c.966 0 1.75.784 1.75 1.75 0 .967-.784 1.75-1.75 1.75H6.55c-.966 0-1.75-.783-1.75-1.75 0-.966.784-1.75 1.75-1.75z\\\" fill=\\\"#828282\\\" />\\n      <ellipse fill=\\\"#828282\\\" cx=\\\"40.2\\\" cy=\\\"6.417\\\" rx=\\\"3\\\" ry=\\\"2.917\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"iconCVVBack\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>CVV Back</title>\\n      <path d=\\\"M38.48 24H1.52C.75 24 0 23.28 0 22.5v-21C0 .72.75 0 1.52 0h36.96C39.25 0 40 .72 40 1.5v21c0 .78-.75 1.5-1.52 1.5z\\\" fill=\\\"#FFF\\\"/>\\n      <path fill=\\\"#828282\\\" d=\\\"M0 5h40v4H0z\\\" />\\n      <path d=\\\"M20 13.772v5.456c0 .423.37.772.82.772h13.36c.45 0 .82-.35.82-.772v-5.456c0-.423-.37-.772-.82-.772H20.82c-.45 0-.82.35-.82.772zm-1-.142c0-.9.76-1.63 1.68-1.63h13.64c.928 0 1.68.737 1.68 1.63v5.74c0 .9-.76 1.63-1.68 1.63H20.68c-.928 0-1.68-.737-1.68-1.63v-5.74z\\\" fill=\\\"#000\\\" fill-rule=\\\"nonzero\\\" />\\n      <circle fill=\\\"#828282\\\" cx=\\\"23.5\\\" cy=\\\"16.5\\\" r=\\\"1.5\\\" />\\n      <circle fill=\\\"#828282\\\" cx=\\\"27.5\\\" cy=\\\"16.5\\\" r=\\\"1.5\\\" />\\n      <circle fill=\\\"#828282\\\" cx=\\\"31.5\\\" cy=\\\"16.5\\\" r=\\\"1.5\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"iconCVVFront\\\" viewBox=\\\"0 0 40 24\\\">\\n      <title>CVV Front</title>\\n      <path d=\\\"M38.48 24H1.52C.75 24 0 23.28 0 22.5v-21C0 .72.75 0 1.52 0h36.96C39.25 0 40 .72 40 1.5v21c0 .78-.75 1.5-1.52 1.5z\\\" fill=\\\"#FFF\\\" />\\n      <path d=\\\"M16 5.772v5.456c0 .423.366.772.81.772h17.38c.444 0 .81-.348.81-.772V5.772C35 5.35 34.634 5 34.19 5H16.81c-.444 0-.81.348-.81.772zm-1-.142c0-.9.75-1.63 1.66-1.63h17.68c.917 0 1.66.737 1.66 1.63v5.74c0 .9-.75 1.63-1.66 1.63H16.66c-.917 0-1.66-.737-1.66-1.63V5.63z\\\" fill=\\\"#000\\\" fill-rule=\\\"nonzero\\\" />\\n      <circle fill=\\\"#828282\\\" cx=\\\"19.5\\\" cy=\\\"8.5\\\" r=\\\"1.5\\\" />\\n      <circle fill=\\\"#828282\\\" cx=\\\"27.5\\\" cy=\\\"8.5\\\" r=\\\"1.5\\\" />\\n      <circle fill=\\\"#828282\\\" cx=\\\"23.5\\\" cy=\\\"8.5\\\" r=\\\"1.5\\\" />\\n      <circle fill=\\\"#828282\\\" cx=\\\"31.5\\\" cy=\\\"8.5\\\" r=\\\"1.5\\\" />\\n      <path d=\\\"M4 7.833C4 7.47 4.476 7 4.89 7h6.22c.414 0 .89.47.89.833v3.334c0 .364-.476.833-.89.833H4.89c-.414 0-.89-.47-.89-.833V7.833zM4 18.5c0-.828.668-1.5 1.5-1.5h29c.828 0 1.5.666 1.5 1.5 0 .828-.668 1.5-1.5 1.5h-29c-.828 0-1.5-.666-1.5-1.5z\\\" fill=\\\"#828282\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"iconCheck\\\" viewBox=\\\"0 0 42 32\\\">\\n      <title>Check</title>\\n      <path class=\\\"path1\\\" d=\\\"M14.379 29.76L39.741 3.415 36.194.001l-21.815 22.79-10.86-11.17L0 15.064z\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"iconX\\\" viewBox=\\\"0 0 32 32\\\">\\n      <title>X</title>\\n      <path d=\\\"M29 3.54L25.46 0 14.5 10.97 3.54 0.01 0 3.54 10.96 14.5 0.01 25.46 3.54 28.99 14.5 18.04 25.46 29 28.99 25.46 18.03 14.5 29 3.54z\\\"/>\\n    </symbol>\\n\\n    <symbol id=\\\"iconLockLoader\\\" viewBox=\\\"0 0 28 32\\\">\\n      <title>Lock Loader</title>\\n      <path d=\\\"M6 10V8c0-4.422 3.582-8 8-8 4.41 0 8 3.582 8 8v2h-4V7.995C18 5.79 16.205 4 14 4c-2.21 0-4 1.792-4 3.995V10H6zM.997 14c-.55 0-.997.445-.997.993v16.014c0 .548.44.993.997.993h26.006c.55 0 .997-.445.997-.993V14.993c0-.548-.44-.993-.997-.993H.997z\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"iconError\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n      <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\" />\\n      <path d=\\\"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\\\" />\\n    </symbol>\\n\\n    <symbol id=\\\"logoApplePay\\\" viewBox=\\\"0 0 165.52 105.97\\\">\\n      <title>Apple Pay Logo</title>\\n      <path id=\\\"_Path_\\\" data-name=\\\"&lt;Path&gt;\\\" fill=\\\"#231f20\\\" d=\\\"M150.7 0h-139a20.78 20.78 0 0 0-3.12.3 10.51 10.51 0 0 0-3 1 9.94 9.94 0 0 0-4.31 4.32 10.46 10.46 0 0 0-1 3A20.65 20.65 0 0 0 0 11.7v82.57a20.64 20.64 0 0 0 .3 3.11 10.46 10.46 0 0 0 1 3 9.94 9.94 0 0 0 4.35 4.35 10.47 10.47 0 0 0 3 1 20.94 20.94 0 0 0 3.11.27h142.06a21 21 0 0 0 3.11-.27 10.48 10.48 0 0 0 3-1 9.94 9.94 0 0 0 4.35-4.35 10.4 10.4 0 0 0 1-3 20.63 20.63 0 0 0 .27-3.11V11.69a20.64 20.64 0 0 0-.27-3.11 10.4 10.4 0 0 0-1-3 9.94 9.94 0 0 0-4.35-4.35 10.52 10.52 0 0 0-3-1 20.84 20.84 0 0 0-3.1-.23h-1.43z\\\"/>\\n      <path id=\\\"_Path_2\\\" data-name=\\\"&lt;Path&gt;\\\" fill=\\\"#fff\\\" d=\\\"M150.7 3.53h3.03a17.66 17.66 0 0 1 2.58.22 7 7 0 0 1 2 .65 6.41 6.41 0 0 1 2.8 2.81 6.88 6.88 0 0 1 .64 2 17.56 17.56 0 0 1 .22 2.58v82.38a17.54 17.54 0 0 1-.22 2.59 6.85 6.85 0 0 1-.64 2 6.41 6.41 0 0 1-2.81 2.81 6.92 6.92 0 0 1-2 .65 18 18 0 0 1-2.57.22H11.79a18 18 0 0 1-2.58-.22 6.94 6.94 0 0 1-2-.65 6.41 6.41 0 0 1-2.8-2.8 6.93 6.93 0 0 1-.65-2 17.47 17.47 0 0 1-.22-2.58v-82.4a17.49 17.49 0 0 1 .22-2.59 6.92 6.92 0 0 1 .65-2 6.41 6.41 0 0 1 2.8-2.8 7 7 0 0 1 2-.65 17.63 17.63 0 0 1 2.58-.22H150.7\\\"/>\\n      <g id=\\\"_Group_\\\" data-name=\\\"&lt;Group&gt;\\\">\\n      <g id=\\\"_Group_2\\\" data-name=\\\"&lt;Group&gt;\\\">\\n      <path id=\\\"_Path_3\\\" data-name=\\\"&lt;Path&gt;\\\" class=\\\"cls-1\\\" d=\\\"M43.51 35.77a9.15 9.15 0 0 0 2.1-6.52 9.07 9.07 0 0 0-6 3.11 8.56 8.56 0 0 0-2.16 6.27 7.57 7.57 0 0 0 6.06-2.86\\\"/>\\n      <path id=\\\"_Path_4\\\" data-name=\\\"&lt;Path&gt;\\\" class=\\\"cls-1\\\" d=\\\"M45.59 39.08c-3.35-.2-6.2 1.9-7.79 1.9s-4-1.8-6.7-1.75a9.87 9.87 0 0 0-8.4 5.1c-3.6 6.2-.95 15.4 2.55 20.45 1.7 2.5 3.75 5.25 6.45 5.15s3.55-1.65 6.65-1.65 4 1.65 6.7 1.6 4.55-2.5 6.25-5a22.2 22.2 0 0 0 2.8-5.75 9.08 9.08 0 0 1-5.45-8.25A9.26 9.26 0 0 1 53 43.13a9.57 9.57 0 0 0-7.45-4\\\"/>\\n      </g>\\n      <g id=\\\"_Group_3\\\" data-name=\\\"&lt;Group&gt;\\\">\\n      <path id=\\\"_Compound_Path_\\\" data-name=\\\"&lt;Compound Path&gt;\\\" fill=\\\"#231f20\\\" d=\\\"M79 32.11c7.28 0 12.35 5 12.35 12.32S86.15 56.8 78.79 56.8h-8.06v12.82h-5.82V32.11zm-8.27 19.81h6.68c5.07 0 8-2.73 8-7.46S82.48 37 77.44 37h-6.71z\\\"/>\\n      <path id=\\\"_Compound_Path_2\\\" data-name=\\\"&lt;Compound Path&gt;\\\" fill=\\\"#231f20\\\" d=\\\"M92.76 61.85c0-4.81 3.67-7.56 10.42-8l7.25-.44v-2.06c0-3-2-4.7-5.56-4.7-2.94 0-5.07 1.51-5.51 3.82h-5.24c.16-4.86 4.73-8.4 10.92-8.4 6.65 0 11 3.48 11 8.89v18.66h-5.38v-4.5h-.13a9.59 9.59 0 0 1-8.58 4.78c-5.42 0-9.19-3.22-9.19-8.05zm17.68-2.42v-2.11l-6.47.42c-3.64.23-5.54 1.59-5.54 4s2 3.77 5.07 3.77c3.95-.05 6.94-2.57 6.94-6.08z\\\"/>\\n      <path id=\\\"_Compound_Path_3\\\" data-name=\\\"&lt;Compound Path&gt;\\\" fill=\\\"#231f20\\\" d=\\\"M121 79.65v-4.5a17.14 17.14 0 0 0 1.72.1c2.57 0 4-1.09 4.91-3.9l.52-1.66-9.88-27.29h6.08l6.86 22.15h.13l6.86-22.15h5.93l-10.21 28.67c-2.34 6.58-5 8.73-10.68 8.73a15.93 15.93 0 0 1-2.24-.15z\\\"/>\\n      </g>\\n      </g>\\n    </symbol>\\n    <symbol id=\\\"logoGooglePay\\\" viewbox=\\\"0 0 752 400\\\" >\\n      <g>\\n        <title>Google Pay Mark</title>\\n        <path d=\\\"m552.7,0l-352,0c-110,0 -200,90 -200,200l0,0c0,110 90,200 200,200l352,0c110,0 200,-90 200,-200l0,0c0,-110 -90,-200 -200,-200z\\\" fill=\\\"#FFFFFF\\\" id=\\\"Base_1_\\\"/>\\n        <path d=\\\"m552.7,16.2c24.7,0 48.7,4.9 71.3,14.5c21.9,9.3 41.5,22.6 58.5,39.5c16.9,16.9 30.2,36.6 39.5,58.5c9.6,22.6 14.5,46.6 14.5,71.3s-4.9,48.7 -14.5,71.3c-9.3,21.9 -22.6,41.5 -39.5,58.5c-16.9,16.9 -36.6,30.2 -58.5,39.5c-22.6,9.6 -46.6,14.5 -71.3,14.5l-352,0c-24.7,0 -48.7,-4.9 -71.3,-14.5c-21.9,-9.3 -41.5,-22.6 -58.5,-39.5c-16.9,-16.9 -30.2,-36.6 -39.5,-58.5c-9.6,-22.6 -14.5,-46.6 -14.5,-71.3s4.9,-48.7 14.5,-71.3c9.3,-21.9 22.6,-41.5 39.5,-58.5c16.9,-16.9 36.6,-30.2 58.5,-39.5c22.6,-9.6 46.6,-14.5 71.3,-14.5l352,0m0,-16.2l-352,0c-110,0 -200,90 -200,200l0,0c0,110 90,200 200,200l352,0c110,0 200,-90 200,-200l0,0c0,-110 -90,-200 -200,-200l0,0z\\\" fill=\\\"#3C4043\\\" id=\\\"Outline\\\"/>\\n        <g id=\\\"G_Pay_Lockup_1_\\\">\\n         <g id=\\\"Pay_Typeface_3_\\\">\\n          <path d=\\\"m359.3,214.2l0,60.5l-19.2,0l0,-149.4l50.9,0c12.9,0 23.9,4.3 32.9,12.9c9.2,8.6 13.8,19.1 13.8,31.5c0,12.7 -4.6,23.2 -13.8,31.7c-8.9,8.5 -19.9,12.7 -32.9,12.7l-31.7,0l0,0.1zm0,-70.5l0,52.1l32.1,0c7.6,0 14,-2.6 19,-7.7c5.1,-5.1 7.7,-11.3 7.7,-18.3c0,-6.9 -2.6,-13 -7.7,-18.1c-5,-5.3 -11.3,-7.9 -19,-7.9l-32.1,0l0,-0.1z\\\" fill=\\\"#3C4043\\\" id=\\\"Letter_p_3_\\\"/>\\n          <path d=\\\"m487.9,169.1c14.2,0 25.4,3.8 33.6,11.4c8.2,7.6 12.3,18 12.3,31.2l0,63l-18.3,0l0,-14.2l-0.8,0c-7.9,11.7 -18.5,17.5 -31.7,17.5c-11.3,0 -20.7,-3.3 -28.3,-10s-11.4,-15 -11.4,-25c0,-10.6 4,-19 12,-25.2c8,-6.3 18.7,-9.4 32,-9.4c11.4,0 20.8,2.1 28.1,6.3l0,-4.4c0,-6.7 -2.6,-12.3 -7.9,-17c-5.3,-4.7 -11.5,-7 -18.6,-7c-10.7,0 -19.2,4.5 -25.4,13.6l-16.9,-10.6c9.3,-13.5 23.1,-20.2 41.3,-20.2zm-24.8,74.2c0,5 2.1,9.2 6.4,12.5c4.2,3.3 9.2,5 14.9,5c8.1,0 15.3,-3 21.6,-9s9.5,-13 9.5,-21.1c-6,-4.7 -14.3,-7.1 -25,-7.1c-7.8,0 -14.3,1.9 -19.5,5.6c-5.3,3.9 -7.9,8.6 -7.9,14.1z\\\" fill=\\\"#3C4043\\\" id=\\\"Letter_a_3_\\\"/>\\n          <path d=\\\"m638.2,172.4l-64,147.2l-19.8,0l23.8,-51.5l-42.2,-95.7l20.9,0l30.4,73.4l0.4,0l29.6,-73.4l20.9,0z\\\" fill=\\\"#3C4043\\\" id=\\\"Letter_y_3_\\\"/>\\n         </g>\\n         <g id=\\\"G_Mark_1_\\\">\\n          <path d=\\\"m282.93,202c0,-6.26 -0.56,-12.25 -1.6,-18.01l-80.48,0l0,33l46.35,0.01c-1.88,10.98 -7.93,20.34 -17.2,26.58l0,21.41l27.59,0c16.11,-14.91 25.34,-36.95 25.34,-62.99z\\\" fill=\\\"#4285F4\\\" id=\\\"Blue_500\\\"/>\\n          <path d=\\\"m230.01,243.58c-7.68,5.18 -17.57,8.21 -29.14,8.21c-22.35,0 -41.31,-15.06 -48.1,-35.36l-28.46,0l0,22.08c14.1,27.98 43.08,47.18 76.56,47.18c23.14,0 42.58,-7.61 56.73,-20.71l-27.59,-21.4z\\\" fill=\\\"#34A853\\\" id=\\\"Green_500_1_\\\"/>\\n          <path d=\\\"m150.09,200.05c0,-5.7 0.95,-11.21 2.68,-16.39l0,-22.08l-28.46,0c-5.83,11.57 -9.11,24.63 -9.11,38.47s3.29,26.9 9.11,38.47l28.46,-22.08c-1.73,-5.18 -2.68,-10.69 -2.68,-16.39z\\\" fill=\\\"#FABB05\\\" id=\\\"Yellow_500_1_\\\"/>\\n          <path d=\\\"m200.87,148.3c12.63,0 23.94,4.35 32.87,12.85l24.45,-24.43c-14.85,-13.83 -34.21,-22.32 -57.32,-22.32c-33.47,0 -62.46,19.2 -76.56,47.18l28.46,22.08c6.79,-20.3 25.75,-35.36 48.1,-35.36z\\\" fill=\\\"#E94235\\\" id=\\\"Red_500\\\"/>\\n         </g>\\n        </g>\\n       </g>\\n    </symbol>\\n\\n    <symbol id=\\\"logoVenmo\\\" viewBox=\\\"0 0 48 32\\\">\\n      <title>Venmo</title>\\n      <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect fill=\\\"#3D95CE\\\" width=\\\"47.4074074\\\" height=\\\"31.6049383\\\" rx=\\\"3.16049383\\\"/>\\n        <path d=\\\"M33.1851852,10.1131555 C33.1851852,14.8373944 29.2425262,20.9745161 26.0425868,25.2839506 L18.7337285,25.2839506 L15.8024691,7.35534396 L22.202175,6.73384536 L23.7519727,19.4912014 C25.2000422,17.0781163 26.9870326,13.2859484 26.9870326,10.7005 C26.9870326,9.28531656 26.7500128,8.32139205 26.3796046,7.52770719 L32.207522,6.32098765 C32.8813847,7.45939896 33.1851852,8.63196439 33.1851852,10.1131555 Z\\\" fill=\\\"#FFF\\\"/>\\n      </g>\\n    </symbol>\\n    <symbol id=\\\"buttonVenmo\\\" viewBox=\\\"0 0 295 42\\\">\\n      <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n        <rect fill=\\\"#3D95CE\\\" width=\\\"295\\\" height=\\\"42\\\" rx=\\\"3\\\"/>\\n        <path d=\\\"M11.3250791 0C11.7902741.780434316 12 1.58428287 12 2.59970884 12 5.838396 9.27822123 10.0456806 7.06917212 13L2.02356829 13 0 .709099732 4.41797878.283033306 5.48786751 9.02879887C6.48752911 7.3745159 7.72116169 4.77480706 7.72116169 3.00236102 7.72116169 2.03218642 7.55753727 1.37137098 7.30182933.827262801L11.3250791 0 11.3250791 0zM17.5051689 5.68512193C18.333931 5.68512193 20.4203856 5.28483546 20.4203856 4.03281548 20.4203856 3.43161451 20.0177536 3.13172102 19.5432882 3.13172102 18.7131868 3.13172102 17.6238766 4.18269796 17.5051689 5.68512193L17.5051689 5.68512193zM17.4102028 8.1647385C17.4102028 9.69351403 18.2153451 10.293301 19.2827401 10.293301 20.4451012 10.293301 21.5580312 9.99340752 23.0045601 9.21725797L22.4597224 13.1234575C21.440541 13.649203 19.8521716 14 18.310433 14 14.3996547 14 13 11.49596 13 8.36552446 13 4.30815704 15.2767521 0 19.9706358 0 22.554932 0 24 1.52864698 24 3.65720949 24.0002435 7.08869546 19.8287953 8.13992948 17.4102028 8.1647385L17.4102028 8.1647385zM37 2.84753211C37 3.32189757 36.9261179 4.00994664 36.8526108 4.45959542L35.4649774 12.9998782 30.9621694 12.9998782 32.2279161 5.1711436C32.2519185 4.95879931 32.3256755 4.53131032 32.3256755 4.29412759 32.3256755 3.72466988 31.9603904 3.5825794 31.5212232 3.5825794 30.9379171 3.5825794 30.3532359 3.84326124 29.9638234 4.03356751L28.5281854 13 24 13 26.0686989.213683657 29.9878258.213683657 30.0374555 1.23425123C30.9620444.641294408 32.1795365 3.90379019e-8 33.9069526 3.90379019e-8 36.1955476-.000243475057 37 1.1387937 37 2.84753211L37 2.84753211zM51.2981937 1.39967969C52.6582977.49918987 53.9425913 0 55.7133897 0 58.1518468 0 59 1.13900518 59 2.84769558 59 3.32204771 58.9223438 4.01007745 58.8448195 4.4597136L57.3830637 12.9997565 52.6328518 12.9997565 53.9932194 5.00577861C54.0182698 4.792101 54.0708756 4.53142648 54.0708756 4.36608506 54.0708756 3.72493046 53.6854953 3.58272222 53.2224587 3.58272222 52.6325881 3.58272222 52.0429812 3.81989829 51.6052587 4.03369766L50.0914245 12.9998782 45.3423992 12.9998782 46.7027668 5.00590037C46.7278172 4.79222275 46.7788409 4.53154824 46.7788409 4.36620681 46.7788409 3.72505221 46.3933287 3.58284398 45.9318743 3.58284398 45.3153711 3.58284398 44.7000546 3.84351849 44.2893602 4.03381941L42.7740757 13 38 13 40.1814929.214042876 44.2643098.214042876 44.3925941 1.28145692C45.3423992.641763367 46.6253743.000487014507 48.3452809.000487014507 49.8344603 0 50.8094476.593061916 51.2981937 1.39967969L51.2981937 1.39967969zM67.5285327 5.39061542C67.5285327 4.29258876 67.2694573 3.54396333 66.4936812 3.54396333 64.7759775 3.54396333 64.4232531 6.76273249 64.4232531 8.4093242 64.4232531 9.65848482 64.7530184 10.4315735 65.5285529 10.4315735 67.1521242 10.4315735 67.5285327 7.03707905 67.5285327 5.39061542L67.5285327 5.39061542zM60 8.21054461C60 3.96893154 62.1170713 0 66.988027 0 70.6583423 0 72 2.29633967 72 5.46592624 72 9.65835674 69.905767 14 64.9173573 14 61.2233579 14 60 11.4294418 60 8.21054461L60 8.21054461z\\\" transform=\\\"translate(112 14)\\\" fill=\\\"#FFF\\\"/>\\n      </g>\\n    </symbol>\\n\\n    <symbol id=\\\"iconClose\\\" width=\\\"21\\\" height=\\\"21\\\" viewBox=\\\"0 0 21 21\\\" overflow=\\\"visible\\\">\\n      <path d=\\\"M16 5.414L14.586 4 10 8.586 5.414 4 4 5.414 8.586 10 4 14.586 5.414 16 10 11.414 14.586 16 16 14.586 11.414 10\\\"/>\\n    </symbol>\\n  </defs>\\n</svg>\\n\";\n\nvar PASS_THROUGH_EVENTS = [\n  'changeActiveView',\n  'paymentMethodRequestable',\n  'noPaymentMethodRequestable',\n  'paymentOptionSelected',\n\n  // Card View Events\n  'card:binAvailable',\n  'card:blur',\n  'card:cardTypeChange',\n  'card:empty',\n  'card:focus',\n  'card:inputSubmitRequest',\n  'card:notEmpty',\n  'card:validityChange',\n\n  // 3DS Events\n  '3ds:customer-canceled',\n  '3ds:authentication-modal-render',\n  '3ds:authentication-modal-close'\n];\nvar UPDATABLE_CONFIGURATION_OPTIONS = [\n  paymentOptionIDs.paypal,\n  paymentOptionIDs.paypalCredit,\n  paymentOptionIDs.applePay,\n  paymentOptionIDs.googlePay,\n  'threeDSecure'\n];\nvar UPDATABLE_CONFIGURATION_OPTIONS_THAT_REQUIRE_UNVAULTED_PAYMENT_METHODS_TO_BE_REMOVED = [\n  paymentOptionIDs.paypal,\n  paymentOptionIDs.paypalCredit,\n  paymentOptionIDs.applePay,\n  paymentOptionIDs.googlePay\n];\nvar HAS_RAW_PAYMENT_DATA = {};\nvar VERSION = '1.42.0';\n\nHAS_RAW_PAYMENT_DATA[constants.paymentMethodTypes.googlePay] = true;\nHAS_RAW_PAYMENT_DATA[constants.paymentMethodTypes.applePay] = true;\n\n/**\n * @typedef {object} Dropin~cardPaymentMethodPayload\n * @property {string} nonce The payment method nonce, used by your server to charge the card.\n * @property {object} details Additional account details. See a full list of details in the [Hosted Fields client reference](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#~tokenizePayload).\n * @property {string} description A human-readable description.\n * @property {string} type The payment method type, always `CreditCard` when the method requested is a card.\n * @property {object} binData Information about the card based on the bin. Documented {@link Dropin~binData|here}.\n * @property {?boolean} vaulted If present and true, indicates that the payment method refers to a vaulted payment method.\n * @property {?string} deviceData If data collector is configured, the device data property to be used when making a transaction.\n * @property {?boolean} liabilityShifted If 3D Secure is configured, whether or not liability did shift.\n * @property {?boolean} liabilityShiftPossible If 3D Secure is configured, whether or not liability shift is possible.\n * @property {?object} threeDSecureInfo If 3D Secure is configured, the `threeDSecureInfo` documented in the [Three D Secure client reference](http://braintree.github.io/braintree-web/3.99.0/ThreeDSecure.html#~verifyPayload)\n */\n\n/**\n * @typedef {object} Dropin~paypalPaymentMethodPayload\n * @property {string} nonce The payment method nonce, used by your server to charge the PayPal account.\n * @property {?boolean} vaulted If present and true, indicates that the payment method refers to a vaulted payment method.\n * @property {object} details Additional PayPal account details. See a full list of details in the [PayPal client reference](http://braintree.github.io/braintree-web/3.99.0/PayPalCheckout.html#~tokenizePayload).\n * @property {string} type The payment method type, always `PayPalAccount` when the method requested is a PayPal account.\n * @property {?string} deviceData If data collector is configured, the device data property to be used when making a transaction.\n */\n\n/**\n * @typedef {object} Dropin~applePayPaymentMethodPayload\n * @property {string} nonce The payment method nonce, used by your server to charge the Apple Pay provided card.\n * @property {?boolean} vaulted If present and true, indicates that the payment method refers to a vaulted payment method.\n * @property {string} details.cardType Type of card, ex: Visa, Mastercard.\n * @property {string} details.cardHolderName The name of the card holder.\n * @property {string} details.dpanLastTwo Last two digits of card number.\n * @property {external:ApplePayPayment} details.rawPaymentData The raw response back from the Apple Pay flow, which includes billing/shipping address, phone and email if passed in as required parameters.\n * @property {string} description A human-readable description.\n * @property {string} type The payment method type, always `ApplePayCard` when the method requested is an Apple Pay provided card.\n * @property {object} binData Information about the card based on the bin. Documented {@link Dropin~binData|here}.\n * @property {?string} deviceData If data collector is configured, the device data property to be used when making a transaction.\n */\n\n/**\n * @typedef {object} ApplePayPayment An [Apple Pay Payment object](https://developer.apple.com/documentation/apple_pay_on_the_web/applepaypayment).\n * @external ApplePayPayment\n * @see {@link https://developer.apple.com/documentation/apple_pay_on_the_web/applepaypayment ApplePayPayment}\n */\n\n/**\n * @typedef {object} Dropin~venmoPaymentMethodPayload\n * @property {string} nonce The payment method nonce, used by your server to charge the Venmo account.\n * @property {?boolean} vaulted If present and true, indicates that the payment method refers to a vaulted payment method.\n * @property {string} details.username The Venmo username.\n * @property {string} type The payment method type, always `VenmoAccount` when the method requested is a Venmo account.\n * @property {?string} deviceData If data collector is configured, the device data property to be used when making a transaction.\n */\n\n/**\n * @typedef {object} Dropin~googlePayPaymentMethodPayload\n * @property {string} nonce The payment method nonce, used by your server to charge the Google Pay card.\n * @property {?boolean} vaulted If present and true, indicates that the payment method refers to a vaulted payment method.\n * @property {string} details.cardType Type of card, ex: Visa, Mastercard.\n * @property {string} details.lastFour The last 4 digits of the card.\n * @property {string} details.lastTwo The last 2 digits of the card.\n * @property {boolean} details.isNetworkTokenized True if the card is network tokenized. A network tokenized card is a generated virtual card with a device-specific account number (DPAN) that is used in place of the underlying source card.\n * @property {string} details.bin First six digits of card number.\n * @property {external:GooglePayPaymentData} details.rawPaymentData The raw response back from the Google Pay flow, which includes shipping address, phone and email if passed in as required parameters.\n * @property {string} type The payment method type, always `AndroidPayCard` when the method requested is a Google Pay Card.\n * @property {object} binData Information about the card based on the bin. Documented {@link Dropin~binData|here}.\n * @property {?string} deviceData If data collector is configured, the device data property to be used when making a transaction.\n */\n\n/**\n * @typedef {object} GooglePayPaymentData A [Google Pay Payment Data object](https://developers.google.com/pay/api/web/object-reference#PaymentData).\n * @external GooglePayPaymentData\n * @see {@link https://developers.google.com/pay/api/web/object-reference#PaymentData PaymentData}\n */\n\n/**\n * @typedef {object} Dropin~binData Information about the card based on the bin.\n * @property {string} commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} countryOfIssuance The country of issuance.\n * @property {string} debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} issuingBank The issuing bank.\n * @property {string} payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} productId The product id.\n */\n\n/**\n * @name Dropin#on\n * @function\n * @param {string} event The name of the event to which you are subscribing.\n * @param {function} handler A callback to handle the event.\n * @description Subscribes a handler function to a named event. `event` should be one of the following:\n *\n *  * [`changeActiveView`](#event:changeActiveView)\n *  * [`paymentMethodRequestable`](#event:paymentMethodRequestable)\n *  * [`noPaymentMethodRequestable`](#event:noPaymentMethodRequestable)\n *  * [`paymentOptionSelected`](#event:paymentOptionSelected)\n *\n *  _Card View Specific Events_\n *  * [`card:binAvailable`](#event:card:binAvailable)\n *  * [`card:blur`](#event:card:blur)\n *  * [`card:cardTypeChange`](#event:card:cardTypeChange)\n *  * [`card:empty`](#event:card:empty)\n *  * [`card:focus`](#event:card:focus)\n *  * [`card:inputSubmitRequest`](#event:card:inputSubmitRequest)\n *  * [`card:notEmpty`](#event:card:notEmpty)\n *  * [`card:validityChange`](#event:card:validityChange)\n *\n *  _3DS Specific Events_\n *  * [`3ds:customer-canceled`](#event:3ds:customer-canceled)\n *  * [`3ds:authentication-modal-render`](#event:3ds:authentication-modal-render)\n *  * [`3ds:authentication-modal-close`](#event:3ds:authentication-modal-close)\n * @returns {void}\n * @example\n * <caption>Dynamically enable or disable your submit button based on whether or not the payment method is requestable</caption>\n * var submitButton = document.querySelector('#submit-button');\n *\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container'\n * }, function (err, dropinInstance) {\n *   submitButton.addEventListener('click', function () {\n *     dropinInstance.requestPaymentMethod(function (err, payload) {\n *       // Send payload.nonce to your server.\n *     });\n *   });\n *\n *   if (dropinInstance.isPaymentMethodRequestable()) {\n *     // This will be true if you generated the client token\n *     // with a customer ID and there is a saved payment method\n *     // available to tokenize with that customer.\n *     submitButton.removeAttribute('disabled');\n *   }\n *\n *   dropinInstance.on('paymentMethodRequestable', function (event) {\n *     console.log(event.type); // The type of Payment Method, e.g 'CreditCard', 'PayPalAccount'.\n *     console.log(event.paymentMethodIsSelected); // true if a customer has selected a payment method when paymentMethodRequestable fires\n *\n *     submitButton.removeAttribute('disabled');\n *   });\n *\n *   dropinInstance.on('noPaymentMethodRequestable', function () {\n *     submitButton.setAttribute('disabled', true);\n *   });\n * });\n *\n * @example\n * <caption>Automatically submit nonce to server as soon as it becomes available</caption>\n * var submitButton = document.querySelector('#submit-button');\n *\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container'\n * }, function (err, dropinInstance) {\n *   function sendNonceToServer() {\n *     dropinInstance.requestPaymentMethod(function (err, payload) {\n *       if (err) {\n *         // handle errors\n *       }\n *\n *       // send payload.nonce to your server\n *     });\n *   }\n *\n *   // allows us to still request the payment method manually, such as\n *   // when filling out a credit card form\n *   submitButton.addEventListener('click', sendNonceToServer);\n *\n *   dropinInstance.on('paymentMethodRequestable', function (event) {\n *     // if the nonce is already available (via PayPal authentication\n *     // or by using a stored payment method), we can request the\n *     // nonce right away. Otherwise, we wait for the customer to\n *     // request the nonce by pressing the submit button once they\n *     // are finished entering their credit card details. This is\n *     // particularly important if your credit card form includes a\n *     // postal code input. The `paymentMethodRequestable` event\n *     // could fire before the customer has finished entering their\n *     // postal code. (International postal codes can be as few as 3\n *     // characters in length)\n *     if (event.paymentMethodIsSelected) {\n *       sendNonceToServer();\n *     }\n *   });\n * });\n * @example\n * <caption>Listen for when the customer navigates to different views in Drop-in</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container'\n * }, function (err, dropinInstance) {\n *   dropinInstance.on('changeActiveView', function (event) {\n *     // fires when the view changes, such as going from the\n *     // credit card view to the saved payment methods view\n *     event.oldActivePaymentViewId; // card\n *     event.newActivePaymentViewId; // methods\n *   });\n * });\n * @example\n * <caption>Listen on various events from the card view</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container'\n * }, function (err, dropinInstance) {\n *   dropinInstance.on('card:focus', function (event) {\n *     // a card field was focussed\n *   });\n *   dropinInstance.on('card:blur', function (event) {\n *     // a card field was blurred\n *   });\n *   dropinInstance.on('card:validityChange', function (event) {\n *     // the card form went from invalid to valid or valid to invalid\n *   });\n * });\n */\n\n/**\n * @name Dropin#off\n * @function\n * @param {string} event The name of the event to which you are unsubscribing.\n * @param {function} handler A callback to unsubscribe from the event.\n * @description Unsubscribes a handler function to a named event.\n * @returns {void}\n * @example\n * <caption>Subscribe and then unsubscribe from event</caption>\n * var callback = function (event) {\n *   // do something\n * };\n * dropinInstance.on('paymentMethodRequestable', callback);\n *\n * // later on\n * dropinInstance.off('paymentMethodRequestable', callback);\n */\n\n/**\n * This event is emitted when the payment method available in Drop-in changes. This includes when the state of Drop-in transitions from having no payment method available to having a payment method available and when the kind of payment method available changes. This event is not fired if there is no payment method available on initialization. To check if there is a payment method requestable on initialization, use {@link Dropin#isPaymentMethodRequestable|`isPaymentMethodRequestable`}.\n * @event Dropin#paymentMethodRequestable\n * @type {Dropin~paymentMethodRequestablePayload}\n */\n\n/**\n * @typedef {object} Dropin~paymentMethodRequestablePayload\n * @description The event payload sent from {@link Dropin#on|`on`} with the {@link Dropin#event:paymentMethodRequestable|`paymentMethodRequestable`} event.\n * @property {string} type The type of payment method that is requestable. Either `CreditCard` or `PayPalAccount`.\n * @property {boolean} paymentMethodIsSelected A property to determine if a payment method is currently selected when the payment method becomes requestable.\n *\n * This will be `true` any time a payment method is visibly selected in the Drop-in UI, such as when PayPal authentication completes or a stored payment method is selected.\n *\n * This will be `false` when {@link Dropin#requestPaymentMethod|`requestPaymentMethod`} can be called, but a payment method is not currently selected. For instance, when a card form has been filled in with valid values, but has not been submitted to be converted into a payment method nonce.\n */\n\n/**\n * This event is emitted when there is no payment method available in Drop-in. This event is not fired if there is no payment method available on initialization. To check if there is a payment method requestable on initialization, use {@link Dropin#isPaymentMethodRequestable|`isPaymentMethodRequestable`}. No payload is available in the callback for this event.\n * @event Dropin#noPaymentMethodRequestable\n */\n\n/**\n * This event is emitted when the customer selects a new payment option type (e.g. PayPal, PayPal Credit, credit card). This event is not emitted when the user changes between existing saved payment methods. Only relevant when accepting multiple payment options.\n * @event Dropin#paymentOptionSelected\n * @type {Dropin~paymentOptionSelectedPayload}\n */\n\n/**\n * This event is emitted when the Drop-in view changes what is presented as the active view.\n * @event Dropin#changeActiveView\n * @type {Dropin~changeActiveView}\n */\n\n/**\n * @typedef {object} Dropin~changeActiveView\n * @description The event payload sent from {@link Dropin#on|`on`} with the {@link Dropin#event:changeActiveView|`changeActiveView`} event.\n * @property {string} previousViewId The id for the previously active view. Possible values are:\n * * `card` - The credit card form view\n * * `paypal` - The PayPal view\n * * `payapCredit` - The PayPal Credit view\n * * `venmo` - The Venmo View\n * * `googlePay` - The Google Pay view\n * * `applePay` - The Apple Pay view\n * * `methods` - The view presenting the available payment methods (already vaulted or tokenized payment methods)\n * * `options` - The view presenting the available payment options (where the customer chooses what payment method option to use). Note, if both the methods view and the options view are presented at the same time, `methods` will be shown as the view id.\n * * `delete-confirmation` - The view where the customer confirms they would like to delete their saved payment method.\n * @property {string} newViewId The id for the new active view. The possible values are the same as `previousViewId`.\n */\n\n/**\n * The underlying [hosted fields `binAvailable` event](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#event:binAvailable).\n * @event Dropin#card:binAvailable\n * @type {Dropin~card:binAvailable}\n */\n\n/**\n * The underlying [hosted fields `blur` event](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#event:blur).\n * @event Dropin#card:blur\n * @type {Dropin~card:blur}\n */\n\n/**\n * The underlying [hosted fields `cardTypeChange` event](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#event:cardTypeChange).\n * @event Dropin#card:cardTypeChange\n * @type {Dropin~card:cardTypeChange}\n */\n\n/**\n * The underlying [hosted fields `empty` event](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#event:empty).\n * @event Dropin#card:empty\n * @type {Dropin~card:empty}\n */\n\n/**\n * The underlying [hosted fields `focus` event](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#event:focus).\n * @event Dropin#card:focus\n * @type {Dropin~card:focus}\n */\n\n/**\n * The underlying [hosted fields `inputSubmitRequest` event](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#event:inputSubmitRequest).\n * @event Dropin#card:inputSubmitRequest\n * @type {Dropin~card:inputSubmitRequest}\n */\n\n/**\n * The underlying [hosted fields `notEmpty` event](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#event:notEmpty).\n * @event Dropin#card:notEmpty\n * @type {Dropin~card:notEmpty}\n */\n\n/**\n * The underlying [hosted fields `validityChange` event](http://braintree.github.io/braintree-web/3.99.0/HostedFields.html#event:validityChange).\n * @event Dropin#card:validityChange\n * @type {Dropin~card:validityChange}\n */\n\n/**\n * The underlying [3D Secure `customer-canceled` event](http://braintree.github.io/braintree-web/3.99.0/ThreeDSecure.html#event:customer-canceled).\n * @event Dropin#3ds:customer-canceled\n * @type {Dropin~3ds:customer-canceled}\n */\n\n/**\n * The underlying [3D Secure `authentication-modal-render` event](http://braintree.github.io/braintree-web/3.99.0/ThreeDSecure.html#event:authentication-modal-render).\n * @event Dropin#3ds:authentication-modal-render\n * @type {Dropin~3ds:authentication-modal-render}\n */\n\n/**\n * The underlying [3D Secure `authentication-modal-close` event](http://braintree.github.io/braintree-web/3.99.0/ThreeDSecure.html#event:authentication-modal-close).\n * @event Dropin#3ds:authentication-modal-close\n * @type {Dropin~3ds:authentication-modal-close}\n */\n\n/**\n * @typedef {object} Dropin~paymentOptionSelectedPayload\n * @description The event payload sent from {@link Dropin#on|`on`} with the {@link Dropin#event:paymentOptionSelected|`paymentOptionSelected`} event.\n * @property {string} paymentOption The payment option view selected. Either `card`, `paypal`, or `paypalCredit`.\n */\n\n/**\n * @class\n * @param {object} options For create options, see {@link module:braintree-web-drop-in|dropin.create}.\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web-drop-in|dropin.create} instead.</strong>\n * @classdesc This class represents a Drop-in component, that will create a pre-made UI for accepting cards and PayPal on your page. Instances of this class have methods for requesting a payment method and subscribing to events. For more information, see the [Drop-in guide](https://developer.paypal.com/braintree/docs/guides/drop-in/overview/javascript/v3) in the Braintree Developer Docs. To be used in conjunction with the [Braintree Server SDKs](https://developer.paypal.com/braintree/docs/start/hello-server).\n */\nfunction Dropin(options) {\n  this._client = options.client;\n  this._componentID = uuid();\n  this._dropinWrapper = document.createElement('div');\n  this._dropinWrapper.id = 'braintree--dropin__' + this._componentID;\n  this._dropinWrapper.setAttribute('data-braintree-id', 'wrapper');\n  this._dropinWrapper.style.display = 'none';\n  this._dropinWrapper.className = 'braintree-loading';\n  this._merchantConfiguration = options.merchantConfiguration;\n\n  EventEmitter.call(this);\n}\n\nEventEmitter.createChild(Dropin);\n\nDropin.prototype._initialize = function (callback) {\n  var localizedStrings, localizedHTML;\n  var self = this;\n  var container = self._merchantConfiguration.container || self._merchantConfiguration.selector;\n\n  if (!container) {\n    analytics.sendEvent(self._client, 'configuration-error');\n    callback(new DropinError('options.container is required.'));\n\n    return;\n  } else if (self._merchantConfiguration.container && self._merchantConfiguration.selector) {\n    analytics.sendEvent(self._client, 'configuration-error');\n    callback(new DropinError('Must only have one options.selector or options.container.'));\n\n    return;\n  }\n\n  if (typeof container === 'string') {\n    container = document.querySelector(container);\n  }\n\n  if (!container || container.nodeType !== 1) {\n    analytics.sendEvent(self._client, 'configuration-error');\n    callback(new DropinError('options.selector or options.container must reference a valid DOM node.'));\n\n    return;\n  }\n\n  if (container.innerHTML.trim()) {\n    analytics.sendEvent(self._client, 'configuration-error');\n    callback(new DropinError('options.selector or options.container must reference an empty DOM node.'));\n\n    return;\n  }\n\n  // Backfill with `en`\n  self._strings = assign({}, translations.en);\n  if (self._merchantConfiguration.locale) {\n    localizedStrings = translations[self._merchantConfiguration.locale] || translations[self._merchantConfiguration.locale.split('_')[0]];\n    // Fill `strings` with `localizedStrings` that may exist\n    self._strings = assign(self._strings, localizedStrings);\n  }\n\n  if (!isUtf8()) {\n    // non-utf-8 encodings often don't support the bullet character\n    self._strings.endingIn = self._strings.endingIn.replace(/•/g, '*');\n  }\n\n  if (self._merchantConfiguration.translations) {\n    Object.keys(self._merchantConfiguration.translations).forEach(function (key) {\n      self._strings[key] = sanitizeHtml(self._merchantConfiguration.translations[key]);\n    });\n  }\n\n  localizedHTML = Object.keys(self._strings).reduce(function (result, stringKey) {\n    var stringValue = self._strings[stringKey];\n\n    return result.replace(RegExp('{{' + stringKey + '}}', 'g'), stringValue);\n  }, mainHTML);\n\n  self._dropinWrapper.innerHTML = svgHTML + localizedHTML;\n  container.appendChild(self._dropinWrapper);\n\n  self._model = new DropinModel({\n    client: self._client,\n    container: container,\n    componentID: self._componentID,\n    merchantConfiguration: self._merchantConfiguration\n  });\n\n  self._injectStylesheet();\n\n  self._model.initialize().then(function () {\n    self._model.on('cancelInitialization', function (err) {\n      self._dropinWrapper.innerHTML = '';\n      analytics.sendEvent(self._client, 'load-error');\n      callback(err);\n    });\n\n    self._model.on('asyncDependenciesReady', function () {\n      if (self._model.hasAtLeastOneAvailablePaymentOption()) {\n        analytics.sendEvent(self._client, 'appeared');\n        self._disableErroredPaymentMethods();\n\n        self._handleAppSwitch();\n\n        self._model.confirmDropinReady();\n\n        callback(null, self);\n      } else {\n        self._model.cancelInitialization(new DropinError('All payment options failed to load.'));\n      }\n    });\n\n    PASS_THROUGH_EVENTS.forEach(function (eventName) {\n      self._model.on(eventName, function (event) {\n        self._emit(eventName, event);\n      });\n    });\n\n    return self._setUpDependenciesAndViews();\n  }).catch(function (err) {\n    self.teardown().then(function () {\n      callback(err);\n    });\n  });\n};\n\n/**\n * Modify your configuration initially set in {@link module:braintree-web-drop-in|`dropin.create`}.\n *\n * If `updateConfiguration` is called after a user completes the PayPal authorization flow, any PayPal accounts not stored in the Vault record will be removed.\n * @public\n * @param {string} property The top-level property to update. Either `paypal`, `paypalCredit`, `applePay`, or `googlePay`.\n * @param {string} key The key of the property to update, such as `amount` or `currency`.\n * @param {any} value The value of the property to update. Must be the type of the property specified in {@link module:braintree-web-drop-in|`dropin.create`}.\n * @returns {void}\n * @example\n * dropinInstance.updateConfiguration('paypal', 'amount', '10.00');\n */\nDropin.prototype.updateConfiguration = function (property, key, value) {\n  var view;\n\n  if (UPDATABLE_CONFIGURATION_OPTIONS.indexOf(property) === -1) {\n    return;\n  }\n\n  if (property === 'threeDSecure') {\n    if (this._threeDSecure) {\n      this._threeDSecure.updateConfiguration(key, value);\n    }\n\n    return;\n  }\n\n  view = this._mainView.getView(property);\n\n  if (!view) {\n    return;\n  }\n\n  view.updateConfiguration(key, value);\n\n  if (UPDATABLE_CONFIGURATION_OPTIONS_THAT_REQUIRE_UNVAULTED_PAYMENT_METHODS_TO_BE_REMOVED.indexOf(property) === -1) {\n    return;\n  }\n\n  this._removeUnvaultedPaymentMethods(function (paymentMethod) {\n    return paymentMethod.type === constants.paymentMethodTypes[property];\n  });\n  this._navigateToInitialView();\n};\n\n/**\n * Get a list of the available payment methods presented to the user. This is useful for knowing if a paricular payment option was presented to a customer that is browser dependant such as Apple Pay, Google Pay and Venmo. Returns an array of strings. Possible values:\n * * `applePay`\n * * `card`\n * * `googlePay`\n * * `paypalCredit`\n * * `paypal`\n * * `venmo`\n *\n * @public\n * @returns {string[]} An array of possible payment options.\n * @example\n * var paymentOptions = dropinInstance.getAvailablePaymentOptions(); // ['card', 'venmo', 'paypal']\n *\n * if (paymentOptions.includes('venmo')) {\n *   // special logic for when venmo is displayed\n * }\n */\nDropin.prototype.getAvailablePaymentOptions = function () {\n  return this._model.supportedPaymentOptions;\n};\n\n/**\n * Removes the currently selected payment method and returns the customer to the payment options view. Does not remove vaulted payment methods.\n * @public\n * @returns {void}\n * @example\n * dropinInstance.requestPaymentMethod(function (requestPaymentMethodError, payload) {\n *   if (requestPaymentMethodError) {\n *     // handle errors\n *     return;\n *   }\n *\n *   functionToSendNonceToServer(payload.nonce, function (transactionError, response) {\n *     if (transactionError) {\n *       // transaction sale with selected payment method failed\n *       // clear the selected payment method and add a message\n *       // to the checkout page about the failure\n *       dropinInstance.clearSelectedPaymentMethod();\n *       divForErrorMessages.textContent = 'my error message about entering a different payment method.';\n *     } else {\n *       // redirect to success page\n *     }\n *   });\n * });\n */\nDropin.prototype.clearSelectedPaymentMethod = function () {\n  this._removeUnvaultedPaymentMethods();\n  this._model.removeActivePaymentMethod();\n\n  if (this._model.getPaymentMethods().length === 0) {\n    this._navigateToInitialView();\n\n    return;\n  }\n\n  this._mainView.showLoadingIndicator();\n\n  this._model.refreshPaymentMethods().then(function () {\n    this._navigateToInitialView();\n    this._mainView.hideLoadingIndicator();\n  }.bind(this));\n};\n\nDropin.prototype._setUpDataCollector = function () {\n  var self = this;\n  var config = assign({}, self._merchantConfiguration.dataCollector, {client: self._client});\n\n  this._dataCollector = new DataCollector(config);\n\n  this._dataCollector.initialize().then(function () {\n    self._model.asyncDependencyReady('dataCollector');\n  }).catch(function (err) {\n    self._model.cancelInitialization(new DropinError({\n      message: 'Data Collector failed to set up.',\n      braintreeWebError: err\n    }));\n  });\n};\n\nDropin.prototype._setUpThreeDSecure = function () {\n  var self = this;\n\n  this._threeDSecure = new ThreeDSecure(this._client, this._model);\n\n  this._threeDSecure.initialize().then(function () {\n    self._model.asyncDependencyReady('threeDSecure');\n  }).catch(function (err) {\n    self._model.cancelInitialization(new DropinError({\n      message: '3D Secure failed to set up.',\n      braintreeWebError: err\n    }));\n  });\n};\n\nDropin.prototype._setUpDependenciesAndViews = function () {\n  if (this._merchantConfiguration.dataCollector) {\n    this._setUpDataCollector();\n  }\n\n  if (this._merchantConfiguration.threeDSecure) {\n    this._setUpThreeDSecure();\n  }\n\n  this._mainView = new MainView({\n    client: this._client,\n    element: this._dropinWrapper,\n    model: this._model,\n    strings: this._strings\n  });\n};\n\nDropin.prototype._removeUnvaultedPaymentMethods = function (filter) {\n  filter = filter || function () { return true; };\n\n  this._model.getPaymentMethods().forEach(function (paymentMethod) {\n    if (filter(paymentMethod) && !paymentMethod.vaulted) {\n      this._model.removePaymentMethod(paymentMethod);\n    }\n  }.bind(this));\n};\n\nDropin.prototype._navigateToInitialView = function () {\n  var initViewId = this._model.getInitialViewId();\n  var isOnInitView = this._mainView.primaryView.ID === initViewId;\n\n  if (isOnInitView) {\n    return;\n  }\n\n  if (this._model.hasPaymentMethods()) {\n    return;\n  }\n\n  this._mainView.setPrimaryView(initViewId);\n};\n\nDropin.prototype._supportsPaymentOption = function (paymentOption) {\n  return this._model.supportedPaymentOptions.indexOf(paymentOption) !== -1;\n};\n\nDropin.prototype._disableErroredPaymentMethods = function () {\n  var paymentMethodOptionsElements;\n  var failedDependencies = Object.keys(this._model.failedDependencies);\n\n  if (failedDependencies.length === 0) {\n    return;\n  }\n\n  paymentMethodOptionsElements = this._mainView.getOptionsElements();\n\n  failedDependencies.forEach(function (paymentMethodId) {\n    var element = paymentMethodOptionsElements[paymentMethodId];\n    var div = element.div;\n    var clickHandler = element.clickHandler;\n    var error = this._model.failedDependencies[paymentMethodId];\n    var errorMessageDiv = div.querySelector('.braintree-option__disabled-message');\n\n    div.classList.add('braintree-disabled');\n    div.removeEventListener('click', clickHandler);\n    errorMessageDiv.innerHTML = constants.errors.DEVELOPER_MISCONFIGURATION_MESSAGE;\n    console.error(error); // eslint-disable-line no-console\n  }.bind(this));\n};\n\nDropin.prototype._sendVaultedPaymentMethodAppearAnalyticsEvents = function () {\n  var i, type;\n  var typesThatSentAnEvent = {};\n  var paymentMethods = this._model._paymentMethods;\n\n  for (i = 0; i < paymentMethods.length; i++) {\n    type = paymentMethods[i].type;\n\n    if (type in typesThatSentAnEvent) {\n      // prevents us from sending the analytic multiple times\n      // for the same payment method type\n      continue;\n    }\n\n    typesThatSentAnEvent[type] = true;\n\n    analytics.sendEvent(this._client, 'vaulted-' + constants.analyticsKinds[type] + '.appear');\n  }\n};\n\nDropin.prototype._handleAppSwitch = function () {\n  if (this._model.appSwitchError) {\n    this._mainView.setPrimaryView(this._model.appSwitchError.id);\n    this._model.reportError(this._model.appSwitchError.error);\n  } else if (this._model.appSwitchPayload) {\n    this._model.addPaymentMethod(this._model.appSwitchPayload);\n  } else {\n    this._sendVaultedPaymentMethodAppearAnalyticsEvents();\n  }\n};\n\n/**\n * Requests a payment method object which includes the payment method nonce used by by the [Braintree Server SDKs](https://developer.paypal.com/braintree/docs/start/hello-server).\n *\n * If a payment method is not available, an error will appear in the UI. When a callback is used, an error will be passed to it. If no callback is used, the returned Promise will be rejected with an error.\n * @public\n * @param {object} [options] All options for requesting a payment method.\n * @param {object} [options.threeDSecure] Any of the options in the [Braintree 3D Secure client reference](https://braintree.github.io/braintree-web/3.99.0/ThreeDSecure.html#verifyCard) except for `nonce`, `bin`, and `onLookupComplete`. If `amount` is provided, it will override the value of `amount` in the [3D Secure create options](module-braintree-web-drop-in.html#~threeDSecureOptions). The more options provided, the more likely the customer will not need to answer a 3DS challenge. When 3DS is enabled, both credit cards and non-network tokenized Google Pay cards will perform verfication. The recommended fields for achieving a 3DS v2 verification are:\n * * `email`\n * * `mobilePhoneNumber`\n * * `billingAddress`\n *\n * For an example of verifying 3D Secure within Drop-in, [check out this codepen](https://codepen.io/braintree/pen/KjWqGx).\n * @param {callback} [callback] May be used as the only parameter in requestPaymentMethod if no `options` are provided. The first argument will be an error if no payment method is available and will otherwise be null. The second argument will be an object containing a payment method nonce; either a {@link Dropin~cardPaymentMethodPayload|cardPaymentMethodPayload}, a {@link Dropin~paypalPaymentMethodPayload|paypalPaymentMethodPayload}, a {@link Dropin~venmoPaymentMethodPayload|venmoPaymentMethodPayload}, a {@link Dropin~googlePayPaymentMethodPayload|googlePayPaymentMethodPayload} or an {@link Dropin~applePayPaymentMethodPayload|applePayPaymentMethodPayload}. If no callback is provided, `requestPaymentMethod` will return a promise.\n * @returns {(void|Promise)} Returns a promise if no callback is provided.\n * @example <caption>Requesting a payment method</caption>\n * var form = document.querySelector('#my-form');\n * var hiddenNonceInput = document.querySelector('#my-nonce-input');\n *\n * form.addEventListener('submit', function (event) {\n *  event.preventDefault();\n *\n *  dropinInstance.requestPaymentMethod(function (err, payload) {\n *    if (err) {\n *      // handle error\n *      return;\n *    }\n *    hiddenNonceInput.value = payload.nonce;\n *    form.submit();\n *  });\n * });\n * @example <caption>Requesting a payment method with data collector</caption>\n * var form = document.querySelector('#my-form');\n * var hiddenNonceInput = document.querySelector('#my-nonce-input');\n * var hiddenDeviceDataInput = document.querySelector('#my-device-data-input');\n *\n * form.addEventListener('submit', function (event) {\n *  event.preventDefault();\n *\n *  dropinInstance.requestPaymentMethod(function (err, payload) {\n *    if (err) {\n *      // handle error\n *      return;\n *    }\n *    hiddenNonceInput.value = payload.nonce;\n *    hiddenDeviceDataInput.value = payload.deviceData;\n *    form.submit();\n *  });\n * });\n *\n * @example <caption>Requesting a payment method with 3D Secure</caption>\n * var form = document.querySelector('#my-form');\n * var hiddenNonceInput = document.querySelector('#my-nonce-input');\n *\n * form.addEventListener('submit', function (event) {\n *  event.preventDefault();\n *\n *  dropinInstance.requestPaymentMethod(function (err, payload) {\n *    if (err) {\n *      // Handle error\n *      return;\n *    }\n *\n *    if (payload.liabilityShifted || (payload.type !== 'CreditCard' && payload.type !== 'AndroidPayCard')) {\n *      hiddenNonceInput.value = payload.nonce;\n *      form.submit();\n *    } else {\n *      // Decide if you will force the user to enter a different payment method\n *      // if liability was not shifted\n *      dropinInstance.clearSelectedPaymentMethod();\n *    }\n *  });\n * });\n */\nDropin.prototype.requestPaymentMethod = function (options) {\n  // NEXT_MAJOR_VERSION\n  // what should happen when this method is called while a payment\n  // method is already being requested? Should it error? Should\n  // they both resolve with the payload from the original request?\n  // this is only important because when doing 3ds, multiple\n  // requests in quick succession can get you into a state\n  // where it errors because the 3ds verification is called twice\n  var self = this;\n\n  options = options || {};\n\n  return this._mainView.requestPaymentMethod().then(function (payload) {\n    if (self._shouldPerformThreeDSecureVerification(payload)) {\n      self._mainView.showLoadingIndicator();\n\n      return self._threeDSecure.verify(payload, options.threeDSecure).then(function (newPayload) {\n        self._model.shouldWaitForVerifyCard = false;\n        payload.nonce = newPayload.nonce;\n        payload.liabilityShifted = newPayload.liabilityShifted;\n        payload.liabilityShiftPossible = newPayload.liabilityShiftPossible;\n        payload.threeDSecureInfo = newPayload.threeDSecureInfo;\n        self._model.setPaymentMethodRequestable({\n          isRequestable: Boolean(newPayload),\n          type: newPayload.type,\n          selectedPaymentMethod: payload\n        });\n\n        self._mainView.hideLoadingIndicator();\n\n        return payload;\n      }).catch(function (err) {\n        self.clearSelectedPaymentMethod();\n\n        return self._model.refreshPaymentMethods().then(function () {\n          self._mainView.hideLoadingIndicator();\n\n          return Promise.reject(new DropinError({\n            message: 'Something went wrong during 3D Secure authentication. Please try again.',\n            braintreeWebError: err\n          }));\n        });\n      });\n    }\n\n    return payload;\n  }).then(function (payload) {\n    if (self._dataCollector) {\n      payload.deviceData = self._dataCollector.getDeviceData();\n    }\n\n    return payload;\n  }).then(function (payload) {\n    return formatPaymentMethodPayload(payload);\n  });\n};\n\nDropin.prototype._shouldPerformThreeDSecureVerification = function (payload) {\n  if (!this._threeDSecure) {\n    return false;\n  }\n\n  if (payload.liabilityShifted != null) {\n    return false;\n  }\n\n  if (payload.type === constants.paymentMethodTypes.card) {\n    return true;\n  }\n\n  if (payload.type === constants.paymentMethodTypes.googlePay && payload.details.isNetworkTokenized === false) {\n    return true;\n  }\n\n  return false;\n};\n\nDropin.prototype._removeStylesheet = function () {\n  var stylesheet = document.getElementById(constants.STYLESHEET_ID);\n\n  if (stylesheet) {\n    stylesheet.parentNode.removeChild(stylesheet);\n  }\n};\n\nDropin.prototype._injectStylesheet = function () {\n  var assetsUrl;\n  var loadStylesheetOptions = {\n    id: constants.STYLESHEET_ID\n  };\n\n  if (document.getElementById(constants.STYLESHEET_ID)) { return; }\n\n  assetsUrl = this._client.getConfiguration().gatewayConfiguration.assetsUrl;\n  loadStylesheetOptions.href = assetsUrl + '/web/dropin/' + VERSION + '/css/dropin.css';\n\n  if (this._model.isInShadowDom) {\n    // if Drop-in is in the shadow DOM, put the\n    // style sheet in the shadow DOM node instead of\n    // in the head of the document\n    loadStylesheetOptions.container = this._model.rootNode;\n  }\n\n  assets.loadStylesheet(loadStylesheetOptions);\n};\n\n/**\n * Cleanly remove anything set up by {@link module:braintree-web-drop-in|dropin.create}. This may be be useful in a single-page app.\n * @public\n * @param {callback} [callback] Called on completion, containing an error if one occurred. No data is returned if teardown completes successfully. If no callback is provided, `teardown` will return a promise.\n * @returns {(void|Promise)} Returns a promise if no callback is provided.\n */\nDropin.prototype.teardown = function () {\n  var teardownError;\n  var promise = Promise.resolve();\n  var self = this;\n\n  this._removeStylesheet();\n\n  if (this._mainView) {\n    promise.then(function () {\n      return self._mainView.teardown().catch(function (err) {\n        teardownError = err;\n      });\n    });\n  }\n\n  if (this._dataCollector) {\n    promise.then(function () {\n      return this._dataCollector.teardown().catch(function (error) {\n        teardownError = new DropinError({\n          message: 'Drop-in errored tearing down Data Collector.',\n          braintreeWebError: error\n        });\n      });\n    }.bind(this));\n  }\n\n  if (this._threeDSecure) {\n    promise.then(function () {\n      return this._threeDSecure.teardown().catch(function (error) {\n        teardownError = new DropinError({\n          message: 'Drop-in errored tearing down 3D Secure.',\n          braintreeWebError: error\n        });\n      });\n    }.bind(this));\n  }\n\n  return promise.then(function () {\n    return self._removeDropinWrapper();\n  }).then(function () {\n    if (teardownError) {\n      return Promise.reject(teardownError);\n    }\n\n    return Promise.resolve();\n  });\n};\n\n/**\n * Returns a boolean indicating if a payment method is available through {@link Dropin#requestPaymentMethod|requestPaymentMethod}. Particularly useful for detecting if using a client token with a customer ID to show vaulted payment methods.\n * @public\n * @returns {Boolean} True if a payment method is available, otherwise false.\n */\nDropin.prototype.isPaymentMethodRequestable = function () {\n  return this._model.isPaymentMethodRequestable();\n};\n\nDropin.prototype._removeDropinWrapper = function () {\n  this._dropinWrapper.parentNode.removeChild(this._dropinWrapper);\n\n  return Promise.resolve();\n};\n\nfunction formatPaymentMethodPayload(paymentMethod) {\n  var formattedPaymentMethod = {\n    nonce: paymentMethod.nonce,\n    details: paymentMethod.details,\n    type: paymentMethod.type\n  };\n\n  if (paymentMethod.vaulted != null) {\n    formattedPaymentMethod.vaulted = paymentMethod.vaulted;\n  }\n\n  if (paymentMethod.type === constants.paymentMethodTypes.card) {\n    formattedPaymentMethod.description = paymentMethod.description;\n  }\n\n  if (paymentMethod.type in HAS_RAW_PAYMENT_DATA) {\n    formattedPaymentMethod.details.rawPaymentData = paymentMethod.rawPaymentData;\n  }\n\n  if (typeof paymentMethod.liabilityShiftPossible === 'boolean') {\n    formattedPaymentMethod.liabilityShifted = paymentMethod.liabilityShifted;\n    formattedPaymentMethod.liabilityShiftPossible = paymentMethod.liabilityShiftPossible;\n  }\n\n  if (paymentMethod.threeDSecureInfo) {\n    formattedPaymentMethod.threeDSecureInfo = paymentMethod.threeDSecureInfo;\n  }\n\n  if (paymentMethod.deviceData) {\n    formattedPaymentMethod.deviceData = paymentMethod.deviceData;\n  }\n\n  if (paymentMethod.binData) {\n    formattedPaymentMethod.binData = paymentMethod.binData;\n  }\n\n  return formattedPaymentMethod;\n}\n\nmodule.exports = wrapPrototype(Dropin);\n\n},{\"./constants\":189,\"./dropin-model\":190,\"./lib/analytics\":194,\"./lib/assign\":195,\"./lib/data-collector\":198,\"./lib/dropin-error\":199,\"./lib/is-utf-8\":203,\"./lib/sanitize-html\":206,\"./lib/three-d-secure\":208,\"./translations\":229,\"./views/main-view\":248,\"@braintree/asset-loader\":1,\"@braintree/event-emitter\":37,\"@braintree/uuid\":43,\"@braintree/wrap-promise\":47}],192:[function(require,module,exports){\n'use strict';\n/**\n * @module braintree-web-drop-in\n * @description There are two ways to integrate Drop-in into your page: a script tag integration and a JavaScript integration using [`dropin.create`](#.create).\n *\n * The script tag integration is the fastest way to integrate. All you need to do is add the Drop-in script inside your form element where you want Drop-in to appear and include a `data-braintree-dropin-authorization` property with your [tokenization key](https://developer.paypal.com/braintree/docs/guides/authorization/tokenization-key/javascript/v3) or [client token](https://developer.paypal.com/braintree/docs/guides/authorization/client-token).\n *\n * When your form is submitted, Drop-in will intercept the form submission and attempt to tokenize the payment method. If the tokenization is successful, it will insert the payment method nonce into a hidden input with the name `payment_method_nonce` and then submit your form. If the tokenization is unsuccessful, a relevant error will be shown in the UI.\n *\n * If you have data collector enabled, the device data will be injected into a hidden input with the name `device_data` before form submission.\n *\n * Specify creation options as data attributes in your script tag, as shown in the examples below. The following configuration properties may be set:\n *\n * * `data-locale`\n * * `data-card.cardholder-name.required`\n * * `data-payment-option-priority`\n * * `data-data-collector.kount`\n * * `data-data-collector.paypal`\n * * `data-paypal.amount`\n * * `data-paypal.currency`\n * * `data-paypal.flow`\n * * `data-paypal-credit.amount`\n * * `data-paypal-credit.currency`\n * * `data-paypal-credit.flow`\n *\n * For more control and customization, use [`dropin.create` instead](#.create).\n *\n * See our [demo app](../../script-tag-integration.html) for an example of using our script tag integration.\n *\n * @example\n * <caption>A full example accepting only cards</caption>\n * <!DOCTYPE html>\n * <html lang=\"en\">\n *   <head>\n *     <meta charset=\"utf-8\">\n *     <title>Checkout</title>\n *   </head>\n *   <body>\n *     <form id=\"payment-form\" action=\"/\" method=\"post\">\n *       <script src=\"https://js.braintreegateway.com/web/dropin/1.42.0/js/dropin.min.js\"\n *        data-braintree-dropin-authorization=\"CLIENT_AUTHORIZATION\"\n *       ></script>\n *       <input type=\"submit\" value=\"Purchase\"></input>\n *     </form>\n *   </body>\n * </html>\n *\n * @example\n * <caption>A full example accepting cards, PayPal, and PayPal credit</caption>\n * <!DOCTYPE html>\n * <html lang=\"en\">\n *   <head>\n *     <meta charset=\"utf-8\">\n *     <title>Checkout</title>\n *   </head>\n *   <body>\n *     <form id=\"payment-form\" action=\"/\" method=\"post\">\n *       <script src=\"https://js.braintreegateway.com/web/dropin/1.42.0/js/dropin.min.js\"\n *        data-braintree-dropin-authorization=\"CLIENT_AUTHORIZATION\"\n *        data-paypal.flow=\"checkout\"\n *        data-paypal.amount=\"10.00\"\n *        data-paypal.currency=\"USD\"\n *        data-paypal-credit.flow=\"vault\"\n *       ></script>\n *       <input type=\"submit\" value=\"Purchase\"></input>\n *     </form>\n *   </body>\n * </html>\n *\n * @example\n * <caption>Specifying a locale and payment option priority</caption>\n * <form id=\"payment-form\" action=\"/\" method=\"post\">\n *   <script src=\"https://js.braintreegateway.com/web/dropin/1.42.0/js/dropin.min.js\"\n *    data-braintree-dropin-authorization=\"CLIENT_AUTHORIZATION\"\n *    data-locale=\"de_DE\"\n *    data-payment-option-priority='[\"paypal\",\"card\", \"paypalCredit\"]'\n *    data-paypal.flow=\"checkout\"\n *    data-paypal.amount=\"10.00\"\n *    data-paypal.currency=\"USD\"\n *    data-paypal-credit.flow=\"vault\"\n *   ></script>\n *   <input type=\"submit\" value=\"Purchase\"></input>\n * </form>\n *\n * @example\n * <caption>Including an optional cardholder name field in card form</caption>\n * <form id=\"payment-form\" action=\"/\" method=\"post\">\n *   <script src=\"https://js.braintreegateway.com/web/dropin/1.42.0/js/dropin.min.js\"\n *    data-braintree-dropin-authorization=\"CLIENT_AUTHORIZATION\"\n *    data-card.cardholder-name.required=\"false\"\n *   ></script>\n *   <input type=\"submit\" value=\"Purchase\"></input>\n * </form>\n *\n * @example\n * <caption>Including a required cardholder name field in card form</caption>\n * <form id=\"payment-form\" action=\"/\" method=\"post\">\n *   <script src=\"https://js.braintreegateway.com/web/dropin/1.42.0/js/dropin.min.js\"\n *    data-braintree-dropin-authorization=\"CLIENT_AUTHORIZATION\"\n *    data-card.cardholder-name.required=\"true\"\n *   ></script>\n *   <input type=\"submit\" value=\"Purchase\"></input>\n * </form>\n */\n\nvar Dropin = require('./dropin');\nvar client = require('braintree-web/client');\nvar createFromScriptTag = require('./lib/create-from-script-tag');\nvar constants = require('./constants');\nvar analytics = require('./lib/analytics');\nvar DropinError = require('./lib/dropin-error');\nvar wrapPromise = require('@braintree/wrap-promise');\n\nvar VERSION = '1.42.0';\n\n/**\n * @typedef {object} cardCreateOptions The configuration options for cards. Internally, Drop-in uses [Hosted Fields](http://braintree.github.io/braintree-web/3.99.0/module-braintree-web_hosted-fields.html) to render the card form. The `overrides.fields` and `overrides.styles` allow the Hosted Fields to be customized.\n *\n * @param {(boolean|object)} [cardholderName] Will enable a cardholder name field above the card number field. If set to an object, you can specify whether or not the field is required. If set to a `true`, it will default the field to being present, but not required.\n * @param {boolean} [cardholderName.required=false] When true, the cardholder name field will be required to request the payment method nonce.\n * @param {object} [overrides.fields] The Hosted Fields [`fields` options](http://braintree.github.io/braintree-web/3.99.0/module-braintree-web_hosted-fields.html#~fieldOptions). Only `number`, `cvv`, `expirationDate` and `postalCode` can be configured. Each is a [Hosted Fields `field` object](http://braintree.github.io/braintree-web/3.99.0/module-braintree-web_hosted-fields.html#~field). `selector` cannot be modified.\n * @param {object} [overrides.styles] The Hosted Fields [`styles` options](http://braintree.github.io/braintree-web/3.99.0/module-braintree-web_hosted-fields.html#~styleOptions). These can be used to add custom styles to the Hosted Fields iframes. To style the rest of Drop-in, [review the documentation for customizing Drop-in](https://developer.paypal.com/braintree/docs/guides/drop-in/customization/javascript/v3#customize-your-ui).\n * @param {boolean} [clearFieldsAfterTokenization=true] When false, the card form will not clear the card data when the customer returns to the card view after a successful tokenization.\n * @param {object} [vault] Configuration for vaulting credit cards. Only applies when using a [client token with a customer id](https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#customer_id).\n * @param {boolean} [vault.allowVaultCardOverride=false] When true, the card form will include an option to let the customer decide not to vault the credit card they enter.\n * @param {boolean} [vault.vaultCard=true] Whether or not to vault the card upon tokenization. When set to `false` with `allowVaultCardOverride` set to `false`, then cards will not be vaulted.\n */\n\n/**\n * @typedef {object} dataCollectorOptions The configuration options for Data Collector. Requires [advanced fraud protection](https://developer.paypal.com/braintree/docs/guides/premium-fraud-management-tools/client-side/javascript/v3) to be enabled in the Braintree gateway. If using Kount, contact our [support team](https://developer.paypal.com/braintree/help) to configure your Kount ID. The device data will be included on the {@link Dropin#requestPaymentMethod|requestPaymentMethod payload}.\n *\n * @param {boolean} [kount] If true, Kount fraud data collection is enabled.\n */\n\n/**\n * @typedef {object} threeDSecureOptions Configuration options to pass when creating the 3D Secure module used in Drop-in. `amount` for 3D Secure verification can be passed here, but it's recomended that it and all other 3D Secure verification options be passed to the {@link Dropin#requestPaymentMethod|requestPaymentMethod options} instead. Any `cardinalSDKConfig` options must be passed here when creating Drop-in.\n *\n * @param {options} cardinalSDKConfig A configuration object to adjust the configuration for the underlying Cardinal SDK (Braintree's 3D Secure provider). See [`cardinalSDKConfig` options](http://braintree.github.io/braintree-web/3.99.0/module-braintree-web_three-d-secure.html#.create) for all options.\n * @param {string} amount __Deprecated__ The amount to verify with 3D Secure. Set amount in the {@link Dropin#requestPaymentMethod|requestPaymentMethod options} instead.\n */\n\n/** @typedef {object} paypalCreateOptions The configuration options for PayPal and PayPalCredit. For a full list of options see the [PayPal Checkout client reference options](http://braintree.github.io/braintree-web/3.99.0/PayPalCheckout.html#createPayment).\n *\n * @param {string} flow Either `checkout` for a one-time [Checkout with PayPal](https://developer.paypal.com/braintree/docs/guides/paypal/checkout-with-paypal/javascript/v3) flow or `vault` for a [Vault flow](https://developer.paypal.com/braintree/docs/guides/paypal/vault/javascript/v3). Required when using PayPal or PayPal Credit.\n * @param {(string|number)} [amount] The amount of the transaction. Required when using the Checkout flow.\n * @param {string} [currency] The currency code of the amount, such as `USD`. Required when using the Checkout flow.\n * @param {object} [buttonStyle] The style object to apply to the PayPal button. Button customization includes color, shape, size, and label. The options [found here](https://developer.paypal.com/docs/integration/direct/express-checkout/integration-jsv4/customize-button/#button-styles) are available.\n * @param {boolean} [commit] The user action to show on the PayPal review page. If true, a `Pay Now` button will be shown. If false, a `Continue` button will be shown.\n * @param {object} [vault] Configuration for vaulting PayPal accounts. Only applies when using a [client token with a customer id](https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#customer_id).\n * @param {boolean} [vault.vaultPayPal=true] Whether or not to vault the PayPal account upon tokenization.\n */\n\n/** @typedef {object} applePayCreateOptions The configuration options for Apple Pay.\n *\n * @param {string} [buttonStyle=black] Configures the Apple Pay button style. Valid values are `black`, `white`, `white-outline`.\n * @param {string} displayName The canonical name for your store. Use a non-localized name. This parameter should be a utf-8 string that is a maximum of 128 characters. The system may display this name to the user.\n * @param {number} [applePaySessionVersion=2] The [version of the `ApplePaySession`](https://developer.apple.com/documentation/apple_pay_on_the_web/apple_pay_on_the_web_version_history) to use. It's recommended to use the lowest version that contains all the features you need for your checkout to maximize compatibility.\n * @param {external:ApplePayPaymentRequest} paymentRequest The payment request details to apply on top of those from Braintree.\n */\n\n/** @typedef {object} googlePayCreateOptions The configuration options for Google Pay. Additional options from the few listed here are available, many have default values applied based on the settings found in the Braintree Gateway. For more information, see [Google's Documentation](https://developers.google.com/pay/api/web/object-reference#request-objects).\n *\n * @param {string} merchantId The ID provided by Google for processing transactions in production. Not necessary for testing in sandbox.\n * @param {string} [googlePayVersion=1] The version of the Google Pay API to use. Defaults to 1, but 2 can be passed in.\n * @param {external:GooglePayTransactionInfo} transactionInfo The transaction details necessary for processing the payment.\n * @param {external:GooglePayButtonOptions} [button] The button options for configuring the look of the Google Pay button. The `onClick` property cannot be overwritten.\n */\n\n/**\n * @typedef {object} ApplePayPaymentRequest An [Apple Pay Payment Request object](https://developer.apple.com/reference/applepayjs/1916082-applepay_js_data_types/paymentrequest).\n * @external ApplePayPaymentRequest\n * @see {@link https://developer.apple.com/reference/applepayjs/1916082-applepay_js_data_types/paymentrequest PaymentRequest}\n */\n\n/**\n * @typedef {object} GooglePayTransactionInfo A [Google Pay TransactionInfo object](https://developers.google.com/pay/api/web/object-reference#TransactionInfo).\n * @external GooglePayTransactionInfo\n * @see {@link https://developers.google.com/pay/api/web/object-reference#TransactionInfo TransactionInfo}\n */\n\n/**\n * @typedef {object} GooglePayButtonOptions A [Google Pay ButtonOptions object](https://developers.google.com/pay/api/web/reference/object#ButtonOptions).\n * @external GooglePayButtonOptions\n * @see {@link https://developers.google.com/pay/api/web/reference/object#ButtonOptions ButtonOptions}\n */\n\n/** @typedef {(object|boolean)} venmoCreateOptions The configuration options for Venmo. If `true` is passed instead of a configuration object, the default settings listed will be used.\n *\n * @param {boolean} [allowNewBrowserTab=true] If false, it restricts supported browsers to those that can app switch to the Venmo app without opening a new tab.\n */\n\n/**\n * @static\n * @function create\n * @description This function is the entry point for `braintree.dropin`. It is used for creating {@link Dropin} instances.\n * @param {object} options Object containing all {@link Dropin} options:\n * @param {string} options.authorization A [tokenization key](https://developer.paypal.com/braintree/docs/guides/authorization/tokenization-key/javascript/v3) or a [client token](https://developer.paypal.com/braintree/docs/guides/authorization/client-token). If authorization is a client token created with a [customer ID](https://developer.paypal.com/braintree/docs/guides/drop-in/customization/javascript/v3#display-a-saved-payment-method), Drop-in will render saved payment methods and automatically store any newly-added payment methods in their Vault record.\n * @param {(string|HTMLElement)} options.container A reference to an empty element, such as a `<div>`, where Drop-in will be included on your page or the selector for the empty element. e.g. `#dropin-container`.\n * @param {string} options.selector Deprecated: Now an alias for `options.container`.\n * @param {string} [options.locale=`en_US`] Use this option to change the language, links, and terminology used throughout Drop-in. Supported locales include:\n * `ar_EG`,\n * `cs_CZ`,\n * `da_DK`,\n * `de_DE`,\n * `el_GR`,\n * `en_AU`,\n * `en_GB`,\n * `en_IN`,\n * `en_US`,\n * `es_ES`,\n * `es_XC`,\n * `fi_FI`,\n * `fr_CA`,\n * `fr_FR`,\n * `fr_XC`,\n * `he_IL`,\n * `hu_HU`,\n * `id_ID`,\n * `it_IT`,\n * `ja_JP`,\n * `ko_KR`,\n * `nl_NL`,\n * `no_NO`,\n * `pl_PL`,\n * `pt_BR`,\n * `pt_PT`,\n * `ru_RU`,\n * `sk_SK`,\n * `sv_SE`,\n * `th_TH`,\n * `zh_CN`,\n * `zh_HK`,\n * `zh_TW`,\n * `zh_XC`.\n *\n * @param {object} [options.translations] To use your own translations, pass an object with the strings you wish to replace. This object must use the same structure as the object used internally for supported translations, which can be found [here](https://github.com/braintree/braintree-web-drop-in/blob/main/src/translations/en_US.js). Any strings that are not included will be those from the provided `locale` or `en_US` if no `locale` is provided. See below for an example of creating Drop-in with custom translations.\n * @param {string[]} [options.paymentOptionPriority] Use this option to indicate the order in which enabled payment options should appear when multiple payment options are enabled. By default, payment options will appear in this order: `['card', 'paypal', 'paypalCredit', 'venmo', 'applePay', 'googlePay']`. Payment options omitted from this array will not be offered to the customer.\n * @param {string[]} [options.hiddenVaultedPaymentMethodTypes] Use this option to hide certain types of vaulted payment methods from being displayed to the customer. Apple Pay, Google Pay and Venmo are always hidden (as those payment methods are only availabe as vaulted payment methods for existing subscriptions, new transactions or subscriptions must be newly authorized). Available options:\n * * `'card'`\n * * `'paypal'`\n * * `'paypalCredit'` (same as PayPal)\n *\n * @param {(boolean|object)} [options.card] The configuration options for cards. See [`cardCreateOptions`](#~cardCreateOptions) for all `card` options. If this option is omitted, cards will still appear as a payment option. To remove cards, pass `false` for the value.\n * @param {object} [options.paypal] The configuration options for PayPal. To include a PayPal option in your Drop-in integration, include the `paypal` parameter and [enable PayPal in the Braintree Control Panel](https://developer.paypal.com/braintree/docs/guides/paypal/testing-go-live#go-live). To test in Sandbox, you will need to [link a PayPal sandbox test account to your Braintree sandbox account](https://developer.paypal.com/braintree/docs/guides/paypal/testing-go-live#linked-paypal-testing).\n *\n * Some of the PayPal configuration options are listed [here](#~paypalCreateOptions), but for a full list see the [PayPal Checkout client reference options](http://braintree.github.io/braintree-web/3.99.0/PayPalCheckout.html#createPayment).\n *\n * @param {object} [options.paypalCredit] The configuration options for PayPal Credit. To include a PayPal Credit option in your Drop-in integration, include the `paypalCredit` parameter and [enable PayPal in the Braintree Control Panel](https://developer.paypal.com/braintree/docs/guides/paypal/testing-go-live#go-live).\n *\n * Some of the PayPal Credit configuration options are listed [here](#~paypalCreateOptions), but for a full list see the [PayPal Checkout client reference options](http://braintree.github.io/braintree-web/3.99.0/PayPalCheckout.html#createPayment). For more information on PayPal Credit, see the [Braintree Developer Docs](https://developer.paypal.com/braintree/docs/guides/paypal/paypal-credit/javascript/v3).\n *\n * @param {(object|boolean)} [options.venmo] The configuration options for Pay with Venmo. To include a Venmo option in your Drop-in integration, include the `venmo` parameter and [follow the documentation for setting up Venmo in the Braintree control panel](https://articles.braintreepayments.com/guides/payment-methods/venmo#setup). If a user's browser does not support Venmo, the Venmo option will not be rendered.\n *\n * See [`venmoCreateOptions`](#~venmoCreateOptions) for `venmo` options.\n *\n * @param {object} [options.applePay] The configuration options for Apple Pay. To include an Apple Pay option in your Drop-in integration, include the `applePay` parameter and [enable Apple Pay in the Braintree Control Panel](https://developer.paypal.com/braintree/docs/guides/apple-pay/configuration/javascript/v3). If a user's browser does not support Apple Pay, the Apple Pay option will not be rendered. See [Apple's documentation](https://support.apple.com/en-us/HT201469) for browser and device support.\n *\n * See [`applePayCreateOptions`](#~applePayCreateOptions) for `applePay` options.\n *\n * @param {object} [options.googlePay] The configuration options for Google Pay. To include a Google Pay option in your Drop-in integration, include the `googlePay` parameter and [enable Google Pay in the Braintree Control Panel](https://developer.paypal.com/braintree/docs/guides/google-pay/configuration/javascript/v3). If a user's browser does not support Google Pay, the Google Pay option will not be rendered. See [Google's documentation](https://developers.google.com/pay/api/web/test-and-deploy) for browser and device support.\n *\n * See [`googlePayCreateOptions`](#~googlePayCreateOptions) for `googlePay` options.\n *\n * @param {object|boolean} [options.dataCollector] If `true` is passed, Drop-in will be configured to collect data for use with Advanced Fraud Protection. If collecting data via Kount, pass a [`dataCollectorOptions` object](#~dataCollectorOptions) with `kount: true` instead. If Data Collector is configured and fails to load, Drop-in creation will fail.\n *\n * @param {(boolean|object)} [options.threeDSecure] When `true` is passed, the 3D Secure module will be created with a default configuration. See [`threeDSecureOptions`](#~threeDSecureOptions) for additional create options. If 3D Secure is configured and fails to load, Drop-in creation will fail.\n *\n * @param {boolean} [options.vaultManager=false] Whether or not to allow a customer to delete saved payment methods when used with a [client token with a customer id](https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#customer_id). *Note:* Deleting a payment method from Drop-in will permanently delete the payment method, so this option is not recommended for merchants using Braintree's recurring billing system.\n *\n * @param {boolean} [options.preselectVaultedPaymentMethod=true] Whether or not to initialize Drop-in with a vaulted payment method pre-selected. Only applicable when using a [client token with a customer id](https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#customer_id) and a customer with saved payment methods.\n *\n * @param {boolean} [options.showDefaultPaymentMethodFirst=true] When `true` or left out, the customer's default payment method will be displayed first in the list of vaulted payment methods. When `false`, the order of the displayed payment methods is not guaranteed. Only applicable when using a [client token with a customer id](https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#customer_id) and a customer with saved payment methods.\n *\n * @param {function} [callback] The second argument, `data`, is the {@link Dropin} instance. Returns a promise if no callback is provided.\n * @returns {(void|Promise)} Returns a promise if no callback is provided.\n * @example\n * <caption>A full example of accepting credit cards with callback API</caption>\n * <!DOCTYPE html>\n * <html lang=\"en\">\n *   <head>\n *     <meta charset=\"utf-8\">\n *     <title>Checkout</title>\n *   </head>\n *   <body>\n *     <div id=\"dropin-container\"></div>\n *     <button id=\"submit-button\">Purchase</button>\n *\n *     <script src=\"https://js.braintreegateway.com/web/dropin/1.42.0/js/dropin.min.js\"></script>\n *\n *     <script>\n *       var submitButton = document.querySelector('#submit-button');\n *\n *       braintree.dropin.create({\n *         authorization: 'CLIENT_AUTHORIZATION',\n *         container: '#dropin-container'\n *       }, function (err, dropinInstance) {\n *         if (err) {\n *           // Handle any errors that might've occurred when creating Drop-in\n *           console.error(err);\n *           return;\n *         }\n *         submitButton.addEventListener('click', function () {\n *           dropinInstance.requestPaymentMethod(function (err, payload) {\n *             if (err) {\n *               // Handle errors in requesting payment method\n *             }\n *\n *             // Send payload.nonce to your server\n *           });\n *         });\n *       });\n *     </script>\n *   </body>\n * </html>\n * @example\n * <caption>A full example of accepting credit cards with promise API</caption>\n * <!DOCTYPE html>\n * <html lang=\"en\">\n *   <head>\n *     <meta charset=\"utf-8\">\n *     <title>Checkout</title>\n *   </head>\n *   <body>\n *     <div id=\"dropin-container\"></div>\n *     <button id=\"submit-button\">Purchase</button>\n *\n *     <script src=\"https://js.braintreegateway.com/web/dropin/1.42.0/js/dropin.min.js\"></script>\n *\n *     <script>\n *       var submitButton = document.querySelector('#submit-button');\n *\n *       braintree.dropin.create({\n *         authorization: 'CLIENT_AUTHORIZATION',\n *         container: '#dropin-container'\n *       }).then(function (dropinInstance) {\n *         submitButton.addEventListener('click', function () {\n *           dropinInstance.requestPaymentMethod().then(function (payload) {\n *             // Send payload.nonce to your server\n *           }).catch(function (err) {\n *             // Handle errors in requesting payment method\n *           });\n *         });\n *       }).catch(function (err) {\n *         // Handle any errors that might've occurred when creating Drop-in\n *         console.error(err);\n *       });\n *     </script>\n *   </body>\n * </html>\n * @example\n * <caption>Setting up a Drop-in instance to accept credit cards, PayPal, PayPal Credit, Venmo, and Apple Pay</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   applePay: {\n *     displayName: 'Merchant Name',\n *     paymentRequest: {\n *       total: {\n *         label: 'Localized Name',\n *         amount: '10.00'\n *       }\n *     }\n *   },\n *   paypal: {\n *     flow: 'checkout',\n *     amount: '10.00',\n *     currency: 'USD'\n *   },\n *  paypalCredit: {\n *    flow: 'checkout',\n *    amount: '10.00',\n *    currency: 'USD'\n *   },\n *   venmo: true\n * }, function (err, dropinInstance) {\n *   // Set up a handler to request a payment method and\n *   // submit the payment method nonce to your server\n * });\n * @example\n * <caption>Setting up a Drop-in instance to accept Venmo with restricted browser support</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   venmo: {\n *     allowNewBrowserTab: false\n *   }\n * }, function (err, dropinInstance) {\n *   // Set up a handler to request a payment method and\n *   // submit the payment method nonce to your server\n * });\n *\n * @example\n * <caption>Submitting the payment method nonce to the server using a form</caption>\n * <!DOCTYPE html>\n * <html lang=\"en\">\n *   <head>\n *     <meta charset=\"utf-8\">\n *     <title>Checkout</title>\n *   </head>\n *   <body>\n *     <form id=\"payment-form\" action=\"/\" method=\"post\">\n *       <div id=\"dropin-container\"></div>\n *       <input type=\"submit\" value=\"Purchase\"></input>\n *       <input type=\"hidden\" id=\"nonce\" name=\"payment_method_nonce\"></input>\n *     </form>\n *\n *     <script src=\"https://js.braintreegateway.com/web/dropin/1.42.0/js/dropin.min.js\"></script>\n *\n *     <script>\n *       var form = document.querySelector('#payment-form');\n *       var nonceInput = document.querySelector('#nonce');\n *\n *       braintree.dropin.create({\n *         authorization: 'CLIENT_AUTHORIZATION',\n *         container: '#dropin-container'\n *       }, function (err, dropinInstance) {\n *         if (err) {\n *           // Handle any errors that might've occurred when creating Drop-in\n *           console.error(err);\n *           return;\n *         }\n *         form.addEventListener('submit', function (event) {\n *           event.preventDefault();\n *\n *           dropinInstance.requestPaymentMethod(function (err, payload) {\n *             if (err) {\n *               // Handle errors in requesting payment method\n *               return;\n *             }\n *\n *             // Send payload.nonce to your server\n *             nonceInput.value = payload.nonce;\n *             form.submit();\n *           });\n *         });\n *       });\n *     </script>\n *   </body>\n * </html>\n *\n * @example\n * <caption>Use your own translations</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   translations: {\n *     payingWith: 'You are paying with {{paymentSource}}',\n *     chooseAnotherWayToPay: 'My custom chooseAnotherWayToPay string',\n *     // Any other custom translation strings\n *   }\n * }, callback);\n *\n * @example\n * <caption>Customizing Drop-in with card form overrides</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   card: {\n *     overrides: {\n *       fields: {\n *         number: {\n *           placeholder: '1111 1111 1111 1111' // Update the number field placeholder\n *         },\n *         postalCode: {\n *           minlength: 5 // Set the minimum length of the postal code field\n *         },\n *         cvv: null // Remove the CVV field from your form\n *       },\n *       styles: {\n *         input: {\n *           'font-size': '18px' // Change the font size for all inputs\n *         },\n *         ':focus': {\n *           color: 'red' // Change the focus color to red for all inputs\n *         }\n *       }\n *     }\n *   }\n * }, callback);\n *\n * @example\n * <caption>Mask Card Inputs</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   card: {\n *     overrides: {\n *       fields: {\n *         number: {\n *           maskInput: {\n *             showLastFour: true\n *           }\n *         },\n *         cvv: {\n *           maskInput: true\n *         }\n *       }\n *     }\n *   }\n * }, callback);\n *\n * @example\n * <caption>Including a cardholder name field</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   card: {\n *     cardholderName: true\n *   }\n * }, callback);\n *\n * @example\n * <caption>Including a required cardholder name field</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   card: {\n *     cardholderName: {\n *       required: true\n *     }\n *   }\n * }, callback);\n *\n * @example\n * <caption>Enabling 3D Secure</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   threeDSecure: true\n * }, function (err, dropinInstance) {\n *   // setup payment button\n *   btn.addEventListener('click', function (e) {\n *     e.preventDefault();\n *\n *     dropinInstance.requestPaymentMethod(|\n *       threeDSecure: {\n *         amount: '100.00',\n *         billingAddress: {\n *           givenName: 'Jill', // ASCII-printable characters required, else will throw a validation error\n *           surname: 'Doe', // ASCII-printable characters required, else will throw a validation error\n *           phoneNumber: '8101234567',\n *           streetAddress: '555 Smith St.',\n *           extendedAddress: '#5',\n *           locality: 'Oakland',\n *           region: 'CA',\n *           postalCode: '12345',\n *           countryCodeAlpha2: 'US'\n *         },\n *         // additional 3ds params\n *       }\n *     }, function (err, payload) {\n *       // inspect payload.liablityShifted\n *       // send payload.nonce to server\n *     });\n *   });\n * });\n *\n * @example\n * <caption>Enabled Vault Manager</caption>\n * braintree.dropin.create({\n *   authorization: 'CLIENT_AUTHORIZATION',\n *   container: '#dropin-container',\n *   vaultManager: true\n * }, callback);\n */\n\nfunction create(options) {\n  if (!options.authorization) {\n    return Promise.reject(new DropinError('options.authorization is required.'));\n  }\n\n  return client.create({\n    authorization: options.authorization\n  }).catch(function (err) {\n    return Promise.reject(new DropinError({\n      message: 'There was an error creating Drop-in.',\n      braintreeWebError: err\n    }));\n  }).then(function (clientInstance) {\n    clientInstance = setAnalyticsIntegration(clientInstance);\n\n    if (clientInstance.getConfiguration().authorizationType === 'TOKENIZATION_KEY') {\n      analytics.sendEvent(clientInstance, 'started.tokenization-key');\n    } else {\n      analytics.sendEvent(clientInstance, 'started.client-token');\n    }\n\n    return new Promise(function (resolve, reject) {\n      new Dropin({\n        merchantConfiguration: options,\n        client: clientInstance\n      })._initialize(function (err, instance) {\n        if (err) {\n          reject(err);\n\n          return;\n        }\n\n        resolve(instance);\n      });\n    });\n  });\n}\n\nfunction setAnalyticsIntegration(clientInstance) {\n  var configuration = clientInstance.getConfiguration();\n\n  configuration.analyticsMetadata.integration = constants.INTEGRATION;\n  configuration.analyticsMetadata.integrationType = constants.INTEGRATION;\n  configuration.analyticsMetadata.dropinVersion = VERSION;\n\n  clientInstance.getConfiguration = function () {\n    return configuration;\n  };\n\n  return clientInstance;\n}\n\n// we check for document's existence to support server side rendering\ncreateFromScriptTag(create, typeof document !== 'undefined' && document.querySelector('script[data-braintree-dropin-authorization]'));\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of Drop-in, i.e. `1.42.0`.\n   * @type {string}\n   */\n  VERSION: VERSION\n};\n\n},{\"./constants\":189,\"./dropin\":191,\"./lib/analytics\":194,\"./lib/create-from-script-tag\":197,\"./lib/dropin-error\":199,\"@braintree/wrap-promise\":47,\"braintree-web/client\":55}],193:[function(require,module,exports){\n'use strict';\n\nfunction addSelectionEventHandler(element, func) {\n  element.addEventListener('click', func);\n  element.addEventListener('keyup', function (event) {\n    if (event.keyCode === 13) {\n      func();\n    }\n  });\n}\n\nmodule.exports = addSelectionEventHandler;\n\n},{}],194:[function(require,module,exports){\n'use strict';\n\nvar atob = require('./polyfill').atob;\nvar constants = require('../constants');\nvar braintreeClientVersion = require('braintree-web/client').VERSION;\n\nfunction _millisToSeconds(millis) {\n  return Math.floor(millis / 1000);\n}\n\nfunction sendAnalyticsEvent(client, kind, callback) {\n  var configuration = client.getConfiguration();\n  var analyticsRequest = client._request;\n  var timestamp = _millisToSeconds(Date.now());\n  var url = configuration.gatewayConfiguration.analytics.url;\n  var data = {\n    analytics: [{\n      kind: constants.ANALYTICS_PREFIX + kind,\n      timestamp: timestamp\n    }],\n    _meta: configuration.analyticsMetadata,\n    braintreeLibraryVersion: braintreeClientVersion\n  };\n\n  if (configuration.authorizationType === 'TOKENIZATION_KEY') {\n    data.tokenizationKey = configuration.authorization;\n  } else {\n    data.authorizationFingerprint = JSON.parse(atob(configuration.authorization)).authorizationFingerprint;\n  }\n\n  analyticsRequest({\n    url: url,\n    method: 'post',\n    data: data,\n    timeout: constants.ANALYTICS_REQUEST_TIMEOUT_MS\n  }, callback);\n}\n\nmodule.exports = {\n  sendEvent: sendAnalyticsEvent\n};\n\n},{\"../constants\":189,\"./polyfill\":205,\"braintree-web/client\":55}],195:[function(require,module,exports){\n'use strict';\n\nvar assignNormalized = typeof Object.assign === 'function' ? Object.assign : assignPolyfill;\n\nfunction assignPolyfill(destination) {\n  var i, source, key;\n\n  for (i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      if (source.hasOwnProperty(key)) {\n        destination[key] = source[key];\n      }\n    }\n  }\n\n  return destination;\n}\n\nmodule.exports = {\n  assign: assignNormalized,\n  _assign: assignPolyfill\n};\n\n},{}],196:[function(require,module,exports){\n'use strict';\n\nvar isIe9 = require('@braintree/browser-detection/is-ie9');\nvar isIe10 = require('@braintree/browser-detection/is-ie10');\n\nmodule.exports = {\n  isIe9: isIe9,\n  isIe10: isIe10\n};\n\n},{\"@braintree/browser-detection/is-ie10\":29,\"@braintree/browser-detection/is-ie9\":30}],197:[function(require,module,exports){\n'use strict';\n\nvar analytics = require('./analytics');\nvar find = require('./find-parent-form');\nvar uuid = require('@braintree/uuid');\nvar DropinError = require('./dropin-error');\nvar kebabCaseToCamelCase = require('./kebab-case-to-camel-case');\nvar WHITELISTED_DATA_ATTRIBUTES = [\n  'locale',\n  'payment-option-priority',\n\n  'data-collector.kount',\n  'data-collector.paypal',\n\n  // camelcase version was accidentally used initially.\n  // we add the kebab case version to match the docs, but\n  // we retain the camelcase version for backwards compatibility\n  'card.cardholderName',\n  'card.cardholderName.required',\n  'card.cardholder-name',\n  'card.cardholder-name.required',\n\n  'paypal.amount',\n  'paypal.currency',\n  'paypal.flow',\n  'paypal.landing-page-type',\n\n  'paypal-credit.amount',\n  'paypal-credit.currency',\n  'paypal-credit.flow',\n  'paypal-credit.landing-page-type'\n];\n\nfunction injectHiddenInput(name, value, form) {\n  var input = form.querySelector('[name=\"' + name + '\"]');\n\n  if (!input) {\n    input = document.createElement('input');\n    input.type = 'hidden';\n    input.name = name;\n    form.appendChild(input);\n  }\n\n  input.value = value;\n}\n\nfunction addCompositeKeyValuePairToObject(obj, key, value) {\n  var decomposedKeys = key.split('.');\n  var topLevelKey = kebabCaseToCamelCase(decomposedKeys[0]);\n\n  if (decomposedKeys.length === 1) {\n    obj[topLevelKey] = deserialize(value);\n  } else {\n    obj[topLevelKey] = obj[topLevelKey] || {};\n    addCompositeKeyValuePairToObject(obj[topLevelKey], decomposedKeys.slice(1).join('.'), value);\n  }\n}\n\nfunction deserialize(value) {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n}\n\nfunction createFromScriptTag(createFunction, scriptTag) {\n  var authorization, container, createOptions, form;\n\n  if (!scriptTag) {\n    return;\n  }\n\n  authorization = scriptTag.getAttribute('data-braintree-dropin-authorization');\n\n  if (!authorization) {\n    throw new DropinError('Authorization not found in data-braintree-dropin-authorization attribute');\n  }\n\n  container = document.createElement('div');\n  container.id = 'braintree-dropin-' + uuid();\n\n  form = find.findParentForm(scriptTag);\n\n  if (!form) {\n    throw new DropinError('No form found for script tag integration.');\n  }\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n  });\n\n  scriptTag.parentNode.insertBefore(container, scriptTag);\n\n  createOptions = {\n    authorization: authorization,\n    container: container\n  };\n\n  WHITELISTED_DATA_ATTRIBUTES.forEach(function (compositeKey) {\n    var value = scriptTag.getAttribute('data-' + compositeKey);\n\n    if (value == null) {\n      return;\n    }\n\n    addCompositeKeyValuePairToObject(createOptions, compositeKey, value);\n  });\n\n  createFunction(createOptions).then(function (instance) {\n    analytics.sendEvent(instance._client, 'integration-type.script-tag');\n    form.addEventListener('submit', function () {\n      instance.requestPaymentMethod(function (requestPaymentError, payload) {\n        if (requestPaymentError) {\n          return;\n        }\n\n        injectHiddenInput('payment_method_nonce', payload.nonce, form);\n\n        if (payload.deviceData) {\n          injectHiddenInput('device_data', payload.deviceData, form);\n        }\n\n        form.submit();\n      });\n    });\n  });\n}\n\nmodule.exports = createFromScriptTag;\n\n},{\"./analytics\":194,\"./dropin-error\":199,\"./find-parent-form\":200,\"./kebab-case-to-camel-case\":204,\"@braintree/uuid\":43}],198:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nvar constants = require('../constants');\nvar analytics = require('./analytics');\nvar assets = require('@braintree/asset-loader');\n\nfunction DataCollector(config) {\n  this._config = config;\n}\n\nDataCollector.prototype.initialize = function () {\n  var self = this;\n\n  return Promise.resolve().then(function () {\n    var braintreeWebVersion;\n\n    if (global.braintree && global.braintree.dataCollector) {\n      return Promise.resolve();\n    }\n\n    braintreeWebVersion = self._config.client.getVersion();\n\n    return assets.loadScript({\n      src: 'https://js.braintreegateway.com/web/' + braintreeWebVersion + '/js/data-collector.min.js',\n      id: constants.DATA_COLLECTOR_SCRIPT_ID\n    });\n  }).then(function () {\n    return global.braintree.dataCollector.create(self._config);\n  }).then(function (instance) {\n    self._instance = instance;\n  }).catch(function (err) {\n    analytics.sendEvent(self._config.client, 'data-collector.setup-failed');\n    // log the Data Collector setup error\n    // but do not prevent Drop-in from loading\n    self.log(err);\n  });\n};\n\nDataCollector.prototype.log = function (message) {\n  console.log(message); // eslint-disable-line no-console\n};\n\nDataCollector.prototype.getDeviceData = function () {\n  if (!this._instance) {\n    return '';\n  }\n\n  return this._instance.deviceData;\n};\n\nDataCollector.prototype.teardown = function () {\n  if (!this._instance) {\n    return Promise.resolve();\n  }\n\n  return this._instance.teardown();\n};\n\nmodule.exports = DataCollector;\n\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../constants\":189,\"./analytics\":194,\"@braintree/asset-loader\":1}],199:[function(require,module,exports){\n'use strict';\n\nfunction isBraintreeWebError(err) {\n  return err.name === 'BraintreeError';\n}\n\nfunction DropinError(err) {\n  this.name = 'DropinError';\n\n  if (typeof err === 'string') {\n    this.message = err;\n  } else {\n    this.message = err.message;\n  }\n\n  if (isBraintreeWebError(err)) {\n    this._braintreeWebError = err;\n  } else {\n    this._braintreeWebError = err.braintreeWebError;\n  }\n}\n\nDropinError.prototype = Object.create(Error.prototype);\nDropinError.prototype.constructor = DropinError;\n\nmodule.exports = DropinError;\n\n},{}],200:[function(require,module,exports){\n'use strict';\n\nfunction findParentForm(element) {\n  var parentNode = element.parentNode;\n\n  if (!parentNode || parentNode.nodeName === 'FORM') {\n    return parentNode;\n  }\n\n  return findParentForm(parentNode);\n}\n\nmodule.exports = {\n  findParentForm: findParentForm\n};\n\n},{}],201:[function(require,module,exports){\n'use strict';\n\nvar atob = require('./polyfill').atob;\n\nmodule.exports = function (client) {\n  var authorizationFingerprint;\n  var configuration = client.getConfiguration();\n\n  if (configuration.authorizationType !== 'TOKENIZATION_KEY') {\n    authorizationFingerprint = JSON.parse(atob(configuration.authorization)).authorizationFingerprint;\n\n    return !authorizationFingerprint || authorizationFingerprint.indexOf('customer_id=') === -1;\n  }\n\n  return true;\n};\n\n},{\"./polyfill\":205}],202:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nfunction isHTTPS() {\n  return global.location.protocol === 'https:';\n}\n\nmodule.exports = {\n  isHTTPS: isHTTPS\n};\n\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],203:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nmodule.exports = function (win) {\n  win = win || global;\n\n  return Boolean(win.document.characterSet && win.document.characterSet.toLowerCase() === 'utf-8');\n};\n\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],204:[function(require,module,exports){\n'use strict';\n\nfunction kebabCaseToCamelCase(kebab) {\n  var parts = kebab.split('-');\n  var first = parts.shift();\n  var capitalizedParts = parts.map(function (part) {\n    return part.charAt(0).toUpperCase() + part.substring(1);\n  });\n\n  return [first].concat(capitalizedParts).join('');\n}\n\nmodule.exports = kebabCaseToCamelCase;\n\n},{}],205:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n/* eslint-disable no-mixed-operators */\n\nvar atobNormalized = typeof global.atob === 'function' ? global.atob : atob;\n\nfunction atob(base64String) {\n  var a, b, c, b1, b2, b3, b4, i;\n  var base64Matcher = new RegExp('^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})([=]{1,2})?$');\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var result = '';\n\n  if (!base64Matcher.test(base64String)) {\n    throw new Error('Non base64 encoded input passed to window.atob polyfill');\n  }\n\n  i = 0;\n  do {\n    b1 = characters.indexOf(base64String.charAt(i++));\n    b2 = characters.indexOf(base64String.charAt(i++));\n    b3 = characters.indexOf(base64String.charAt(i++));\n    b4 = characters.indexOf(base64String.charAt(i++));\n\n    a = (b1 & 0x3F) << 2 | b2 >> 4 & 0x3;\n    b = (b2 & 0xF) << 4 | b3 >> 2 & 0xF;\n    c = (b3 & 0x3) << 6 | b4 & 0x3F;\n\n    result += String.fromCharCode(a) + (b ? String.fromCharCode(b) : '') + (c ? String.fromCharCode(c) : '');\n  } while (i < base64String.length);\n\n  return result;\n}\n\nmodule.exports = {\n  atob: function (base64String) {\n    return atobNormalized.call(global, base64String);\n  },\n  _atob: atob\n};\n\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],206:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function (string) {\n  if (typeof string !== 'string') {\n    return '';\n  }\n\n  return string\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n};\n\n},{}],207:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function () {\n  var el = document.createElement('div');\n  var prop = 'flex-basis: 1px';\n  var prefixes = [\n    '-webkit-',\n    '-moz-',\n    '-ms-',\n    '-o-',\n    ''\n  ];\n\n  prefixes.forEach(function (prefix) {\n    el.style.cssText += prefix + prop;\n  });\n\n  return Boolean(el.style.length);\n};\n\n},{}],208:[function(require,module,exports){\n'use strict';\n\nvar assign = require('./assign').assign;\nvar threeDSecure = require('braintree-web/three-d-secure');\n\nvar DEFAULT_ACS_WINDOW_SIZE = '03';\nvar PASSTHROUGH_EVENTS = [\n  'customer-canceled',\n  'authentication-modal-render',\n  'authentication-modal-close'\n];\n\nfunction ThreeDSecure(client, model) {\n  this._client = client;\n  this._model = model;\n  this._config = assign({}, model.merchantConfiguration.threeDSecure);\n}\n\nThreeDSecure.prototype.initialize = function () {\n  var self = this;\n  var options = {\n    client: this._client,\n    version: 2\n  };\n\n  if (this._config.cardinalSDKConfig) {\n    options.cardinalSDKConfig = this._config.cardinalSDKConfig;\n  }\n\n  return threeDSecure.create(options).then(function (instance) {\n    self._instance = instance;\n\n    PASSTHROUGH_EVENTS.forEach(function (eventName) {\n      self._instance.on(eventName, function (event) {\n        self._model._emit('3ds:' + eventName, event);\n      });\n    });\n  });\n};\n\nThreeDSecure.prototype.verify = function (payload, merchantProvidedData) {\n  var verifyOptions = assign({\n    amount: this._config.amount\n  }, merchantProvidedData, {\n    nonce: payload.nonce,\n    bin: payload.details.bin,\n    // TODO in the future, we will allow\n    // merchants to pass in a custom\n    // onLookupComplete hook\n    onLookupComplete: function (data, next) {\n      next();\n    }\n  });\n\n  verifyOptions.additionalInformation = verifyOptions.additionalInformation || {};\n  verifyOptions.additionalInformation.acsWindowSize = verifyOptions.additionalInformation.acsWindowSize || DEFAULT_ACS_WINDOW_SIZE;\n  this._model.shouldWaitForVerifyCard = true;\n\n  return this._instance.verifyCard(verifyOptions);\n};\n\nThreeDSecure.prototype.updateConfiguration = function (key, value) {\n  this._config[key] = value;\n};\n\nThreeDSecure.prototype.teardown = function () {\n  return this._instance.teardown();\n};\n\nmodule.exports = ThreeDSecure;\n\n},{\"./assign\":195,\"braintree-web/three-d-secure\":140}],209:[function(require,module,exports){\n'use strict';\n\nvar browserDetection = require('./browser-detection');\n\nfunction isHidden(element) {\n  if (!element) { // no parentNode, so nothing containing the element is hidden\n    return false;\n  }\n\n  if (element.style.display === 'none') {\n    return true;\n  }\n\n  return isHidden(element.parentNode);\n}\n\nfunction onTransitionEnd(element, propertyName, callback) {\n  if (browserDetection.isIe9() || isHidden(element)) {\n    callback();\n\n    return;\n  }\n\n  function transitionEventListener(event) {\n    if (event.propertyName === propertyName) {\n      element.removeEventListener('transitionend', transitionEventListener);\n      callback();\n    }\n  }\n\n  element.addEventListener('transitionend', transitionEventListener);\n}\n\nmodule.exports = {\n  onTransitionEnd: onTransitionEnd\n};\n\n},{\"./browser-detection\":196}],210:[function(require,module,exports){\n'use strict';\n\nfunction delay(time) {\n  time = time || 0;\n\n  return new Promise(function (resolve) {\n    window.setTimeout(resolve, time);\n  });\n}\n\nmodule.exports = {\n  delay: delay\n};\n\n},{}],211:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"الدفع بواسطة {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"اختر طريقة دفع أخرى\",\n  \"chooseAWayToPay\" : \"اختر طريقة الدفع\",\n  \"otherWaysToPay\" : \"طرق أخرى للدفع\",\n  \"edit\" : \"تحرير\",\n  \"doneEditing\" : \"تم\",\n  \"editPaymentMethods\" : \"تحرير طرق الدفع\",\n  \"CreditCardDeleteConfirmationMessage\" : \"هل تريد حذف بطاقة {{secondaryIdentifier}} التي تنتهي بالأرقام {{identifier}}؟\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"هل تريد حذف {{identifier}}الحساب PayPal؟\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"هل تريد فعلاً حذف حساب Venmo الذي يحمل اسم المستخدم {{identifier}}؟\",\n  \"genericDeleteConfirmationMessage\" : \"هل تريد بالفعل حذف طريقة الدفع؟\",\n  \"deleteCancelButton\" : \"إلغاء\",\n  \"deleteConfirmationButton\" : \"حذف\",\n  \"fieldEmptyForCvv\" : \"يرجى إدخال رمز حماية البطاقة.\",\n  \"fieldEmptyForExpirationDate\" : \"يرجى إدخال تاريخ انتهاء الصلاحية.\",\n  \"fieldEmptyForCardholderName\" : \"يرجى إدخال اسم صاحب البطاقة.\",\n  \"fieldTooLongForCardholderName\" : \"يجب أن يقل اسم صاحب البطاقة عن 256 حرفاً.\",\n  \"fieldEmptyForNumber\" : \"يرجى إدخال رقم.\",\n  \"fieldEmptyForPostalCode\" : \"يرجى إدخال الرمز البريدي.\",\n  \"fieldInvalidForCardholderName\" : \"اسم حامل البطاقة غير صحيح.\",\n  \"fieldInvalidForCvv\" : \"رمز الحماية غير صحيح.\",\n  \"fieldInvalidForExpirationDate\" : \"تاريخ انتهاء الصلاحية غير صحيح.\",\n  \"fieldInvalidForNumber\" : \"رقم البطاقة غير صحيح.\",\n  \"fieldInvalidForPostalCode\" : \"الرمز البريدي غير صحيح.\",\n  \"noticeOfCollection\" : \"عندما أدفع ببطاقتي، فأنا أوافق على \\\"بيان الخصوصية لدى PayPal\\\".\",\n  \"genericError\" : \"حدث خطأ ما من جانبنا.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"هذه البطاقة الائتمانية محفوظة كطريقة دفع حالياً.\",\n  \"hostedFieldsFailedTokenizationError\" : \"يرجى مراجعة معلوماتك وإعادة المحاولة.\",\n  \"hostedFieldsFieldsInvalidError\" : \"يرجى مراجعة معلوماتك وإعادة المحاولة.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"خطأ في الشبكة. يرجى المحاولة مجدداً.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"فشلت مصادقة بطاقة الائتمان. يرجى مراجعة معلوماتك وإعادة المحاولة.\",\n  \"paypalButtonMustBeUsed\" : \"استخدم زر PayPal لاستئناف الدفع.\",\n  \"venmoButtonMustBeUsed\": \"استخدِم زر Venmo لمتابعة إجراء دفعتك\",\n  \"applePayButtonMustBeUsed\":\" استخدِم زر Apple Pay لمتابعة عملية الدفع التي تُجريها.\",\n  \"paypalAccountTokenizationFailedError\" : \"وقع خطأ أثناء إضافة حساب PayPal. يرجى إعادة المحاولة.\",\n  \"paypalFlowFailedError\" : \"وقع خطأ أثناء الاتصال بـ PayPal. يرجى إعادة المحاولة.\",\n  \"paypalTokenizationRequestActiveError\" : \"تفويض الدفع عبر PayPal قيد التنفيذ.\",\n  \"venmoCanceledError\" : \"وقع خطأ. تأكد أن أحدث إصدار من تطبيق Venmo مثبت في جهازك وأن متصفحك يدعم التبديل إلى Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"فشل حذف طريقة الدفع. أعد المحاولة.\",\n  \"venmoAppFailedError\" : \"تطبيق Venmo غير موجود في جهازك.\",\n  \"unsupportedCardTypeError\" : \"نوع البطاقة غير مدعوم. يرجى تجربة بطاقة أخرى.\",\n  \"applePayTokenizationError\" : \"وقع خطأ في الشبكة أثناء معالجة الدفع عبر Apple Pay. يرجى إعادة المحاولة.\",\n  \"applePayActiveCardError\" : \"إضافة بطاقة مدعومة إلى محفظة Apple Pay.\",\n  \"cardholderNameLabel\" : \"اسم صاحب البطاقة\",\n  \"cardNumberLabel\" : \"رقم البطاقة\",\n  \"cvvLabel\" : \"رمز CVV‏\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 أرقام)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 أرقام)\",\n  \"cardholderNamePlaceholder\" : \"اسم صاحب البطاقة\",\n  \"expirationDateLabel\" : \"تاريخ انتهاء الصلاحية\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"الشهر/ السنة\",\n  \"postalCodeLabel\" : \"الرمز البريدي\",\n  \"saveCardLabel\" : \"حفظ البطاقة\",\n  \"payWithCard\" : \"الدفع ببطاقة سحب أو ائتمان\",\n  \"endingIn\" : \"تنتهي بتاريخ {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo‏\",\n  \"Card\" : \"البطاقة\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express‏\",\n  \"Discover\" : \"Discover‏\",\n  \"Diners Club\" : \"Diners Club‏\",\n  \"Elo\" : \"Elo‏\",\n  \"Hiper\" : \"Hiper‏\",\n  \"Hipercard\" : \"Hipercard‏\",\n  \"MasterCard\" : \"Mastercard‏\",\n  \"Visa\" : \"Visa‏\",\n  \"JCB\" : \"JCB‏\",\n  \"Maestro\" : \"Maestro‏\",\n  \"UnionPay\" : \"UnionPay‏\"\n}\n;\n\n},{}],212:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Forma úhrady: {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Vybrat jiný způsob platby\",\n  \"chooseAWayToPay\" : \"Vybrat způsob platby\",\n  \"otherWaysToPay\" : \"Jiné způsoby platby\",\n  \"edit\" : \"Upravit\",\n  \"doneEditing\" : \"Hotovo\",\n  \"editPaymentMethods\" : \"Upravit způsoby platby\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Chcete kartu {{secondaryIdentifier}} s koncovým číslem {{identifier}}odstranit?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Chcete {{identifier}}účtu PayPal odstranit?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Opravdu chcete účet Venmo s uživatelským jménem {{identifier}} odstranit?\",\n  \"genericDeleteConfirmationMessage\" : \"Opravdu chcete tento způsob platby odstranit?\",\n  \"deleteCancelButton\" : \"Zrušit\",\n  \"deleteConfirmationButton\" : \"Odstranit\",\n  \"fieldEmptyForCvv\" : \"Vyplňte kód CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Vyplňte datum vypršení platnosti.\",\n  \"fieldEmptyForCardholderName\" : \"Vyplňte jméno držitele karty.\",\n  \"fieldTooLongForCardholderName\" : \"Jméno držitele karty musí obsahovat méně než 256 znaků.\",\n  \"fieldEmptyForNumber\" : \"Vyplňte číslo.\",\n  \"fieldEmptyForPostalCode\" : \"Vyplňte poštovní směrovací číslo.\",\n  \"fieldInvalidForCardholderName\" : \"Toto jméno držitele karty není platné.\",\n  \"fieldInvalidForCvv\" : \"Tento bezpečnostní kód není platný.\",\n  \"fieldInvalidForExpirationDate\" : \"Toto datum vypršení platnosti není platné.\",\n  \"fieldInvalidForNumber\" : \"Toto číslo karty není platné.\",\n  \"fieldInvalidForPostalCode\" : \"Toto poštovní směrovací číslo není platné.\",\n  \"noticeOfCollection\" : \"Zaplacením kartou vyjadřuji souhlas s prohlášením o ochraně osobních údajů společnosti PayPal.\",\n  \"genericError\" : \"Došlo k chybě na naší straně.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Tato kreditní karta je již jako způsob platby uložena.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Zkontrolujte zadané informace a zkuste to znovu.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Zkontrolujte zadané informace a zkuste to znovu.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Došlo k chybě sítě. Zkuste to znovu.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Ověření kreditní karty se nezdařilo. Zkontrolujte zadané informace a zkuste to znovu.\",\n  \"paypalButtonMustBeUsed\" : \"Chcete-li přejít k platbě, použijte tlačítko PayPal.\",\n  \"venmoButtonMustBeUsed\": \"Chcete-li pokračovat v placení, použijte tlačítko Venmo.\",\n  \"applePayButtonMustBeUsed\": \"Chcete-li přejít k platbě, použijte tlačítko Apple Pay.\",\n  \"paypalAccountTokenizationFailedError\" : \"Při přidávání účtu PayPal došlo k chybě. Zkuste to znovu.\",\n  \"paypalFlowFailedError\" : \"Při připojování ke službě PayPal došlo k chybě. Zkuste to znovu.\",\n  \"paypalTokenizationRequestActiveError\" : \"Autorizace platby přes PayPal již probíhá.\",\n  \"venmoCanceledError\" : \"Došlo k chybě. Zkontrolujte, zda máte v zařízení nainstalovanou nejnovější verzi aplikace Venmo a zda prohlížeč přechod na aplikaci Venmo podporuje.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Způsob platby se nepodařilo odstranit. Zkuste to znovu.\",\n  \"venmoAppFailedError\" : \"Aplikaci Venmo se ve vašem zařízení nepodařilo najít.\",\n  \"unsupportedCardTypeError\" : \"Tento typ karty není podporován. Vyzkoušejte jinou kartu.\",\n  \"applePayTokenizationError\" : \"Při zpracování platby přes Apple Pay došlo k chybě sítě. Zkuste to znovu.\",\n  \"applePayActiveCardError\" : \"Přidejte si podporovanou kartu do peněženky Apple Pay.\",\n  \"cardholderNameLabel\" : \"Jméno držitele karty\",\n  \"cardNumberLabel\" : \"Číslo karty\",\n  \"cvvLabel\" : \"Kód CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 číslice)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 číslice)\",\n  \"cardholderNamePlaceholder\" : \"Jméno držitele karty\",\n  \"expirationDateLabel\" : \"Datum vypršení platnosti\",\n  \"expirationDateLabelSubheading\" : \"(MM/RR)\",\n  \"expirationDatePlaceholder\" : \"MM/RR\",\n  \"postalCodeLabel\" : \"Poštovní směrovací číslo\",\n  \"saveCardLabel\" : \"Uložit kartu\",\n  \"payWithCard\" : \"Zaplatit kartou\",\n  \"endingIn\" : \"Koncové číslo {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Karta\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],213:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Betaling med {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Vælg en anden betalingsmetode\",\n  \"chooseAWayToPay\" : \"Vælg, hvordan du vil betale\",\n  \"otherWaysToPay\" : \"Andre måder at betale på\",\n  \"edit\" : \"Rediger\",\n  \"doneEditing\" : \"Udført\",\n  \"editPaymentMethods\" : \"Rediger betalingsmetode\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Vil du slette dit {{secondaryIdentifier}}-kort, der slutter på {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Vil du slette PayPal-kontoen for {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Er du sikker på, at du vil slette Venmo-konto med brugernavnet {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Er du sikker på, at du vil slette denne betalingsmetode?\",\n  \"deleteCancelButton\" : \"Annuller\",\n  \"deleteConfirmationButton\" : \"Slet\",\n  \"fieldEmptyForCvv\" : \"Du skal indtaste kontrolcifrene.\",\n  \"fieldEmptyForExpirationDate\" : \"Du skal indtaste en udløbsdato.\",\n  \"fieldEmptyForCardholderName\" : \"Du skal indtaste kortholderens navn.\",\n  \"fieldTooLongForCardholderName\" : \"Kortholders navn skal være mindre end 256 tegn.\",\n  \"fieldEmptyForNumber\" : \"Du skal indtaste et nummer.\",\n  \"fieldEmptyForPostalCode\" : \"Du skal indtaste et postnummer.\",\n  \"fieldInvalidForCardholderName\" : \"Kortindehaverens navn er ugyldigt.\",\n  \"fieldInvalidForCvv\" : \"Denne sikkerhedskode er ugyldig.\",\n  \"fieldInvalidForExpirationDate\" : \"Denne udløbsdato er ugyldig.\",\n  \"fieldInvalidForNumber\" : \"Dette kortnummer er ikke gyldigt.\",\n  \"fieldInvalidForPostalCode\" : \"Dette postnummer er ikke gyldigt.\",\n  \"noticeOfCollection\" : \"Når jeg betaler med mit kort, accepterer jeg PayPals erklæring om personlige oplysninger.\",\n  \"genericError\" : \"Der opstod en fejl.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Dette betalingskort findes allerede som en gemt betalingsmetode.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Tjek oplysningerne, og prøv igen.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Tjek oplysningerne, og prøv igen.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Netværksfejl. Prøv igen.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Bekræftelse af betalingskort mislykkedes. Tjek oplysningerne, og prøv igen.\",\n  \"paypalButtonMustBeUsed\" : \"Brug PayPal-knappen til at fortsætte med din betaling.\",\n  \"venmoButtonMustBeUsed\": \"Brug Venmo-knappen til at fortsætte med din betaling.\",\n  \"applePayButtonMustBeUsed\": \"Brug Apple Pay-knappen til at fortsætte med din betaling.\",\n  \"paypalAccountTokenizationFailedError\" : \"Der opstod en fejl under tilføjelsen af PayPal-kontoen. Prøv igen.\",\n  \"paypalFlowFailedError\" : \"Det lykkedes ikke at oprette forbindelse til PayPal. Prøv igen.\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPals betalingsautorisation er allerede i gang.\",\n  \"venmoCanceledError\" : \"Der opstod et problem. Sørg for, at den nyeste version af Venmo-appen er installeret på din enhed, og at din browser understøtter skift til Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Betalingsmetoden kunne ikke slettes. Prøv igen.\",\n  \"venmoAppFailedError\" : \"Venmo-appen blev ikke fundet på din enhed.\",\n  \"unsupportedCardTypeError\" : \"Korttypen understøttes ikke. Prøv et andet kort.\",\n  \"applePayTokenizationError\" : \"Der opstod en netværksfejl under behandling af Apple Pay-betalingen. Prøv igen.\",\n  \"applePayActiveCardError\" : \"Føj et understøttet kort til din Apple Pay-e-pung.\",\n  \"cardholderNameLabel\" : \"Kortindehaverens navn\",\n  \"cardNumberLabel\" : \"Kortnummer\",\n  \"cvvLabel\" : \"Kontrolcifre\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 cifre)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 cifre)\",\n  \"cardholderNamePlaceholder\" : \"Kortindehaverens navn\",\n  \"expirationDateLabel\" : \"Udløbsdato\",\n  \"expirationDateLabelSubheading\" : \"(MM/ÅÅ)\",\n  \"expirationDatePlaceholder\" : \"MM/ÅÅ\",\n  \"postalCodeLabel\" : \"Postnummer\",\n  \"saveCardLabel\" : \"Gem kort\",\n  \"payWithCard\" : \"Betal med betalingskort\",\n  \"endingIn\" : \"Slutter på {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Kort\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],214:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Zahlen mit {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Wählen Sie eine andere Zahlungsquelle\",\n  \"chooseAWayToPay\" : \"Wählen Sie eine Zahlungsquelle\",\n  \"otherWaysToPay\" : \"Sonstige Zahlungsquellen\",\n  \"edit\" : \"Ändern\",\n  \"doneEditing\" : \"Fertig\",\n  \"editPaymentMethods\" : \"Zahlungsquellen bearbeiten\",\n  \"CreditCardDeleteConfirmationMessage\" : \"{{secondaryIdentifier}}-Karte mit den Endziffern {{identifier}} löschen?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"PayPal-Konto {{identifier}} löschen?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Wollen Sie das Venmo-Konto mit dem Benutzernamen {{identifier}} wirklich löschen?\",\n  \"genericDeleteConfirmationMessage\" : \"Möchten Sie diese Zahlungsquelle wirklich löschen?\",\n  \"deleteCancelButton\" : \"Abbrechen\",\n  \"deleteConfirmationButton\" : \"Löschen\",\n  \"fieldEmptyForCvv\" : \"Geben Sie die Kartenprüfnummer (CVV) ein.\",\n  \"fieldEmptyForExpirationDate\" : \"Geben Sie das Ablaufdatum ein.\",\n  \"fieldEmptyForCardholderName\" : \"Geben Sie den Namen des Karteninhabers ein.\",\n  \"fieldTooLongForCardholderName\" : \"Der Name des Karteninhabers darf nicht länger als 256 Zeichen sein.\",\n  \"fieldEmptyForNumber\" : \"Geben Sie eine Nummer ein.\",\n  \"fieldEmptyForPostalCode\" : \"Geben Sie eine Postleitzahl ein.\",\n  \"fieldInvalidForCardholderName\" : \"Der Name des Karteninhabers ist nicht gültig.\",\n  \"fieldInvalidForCvv\" : \"Diese Kartenprüfnummer ist ungültig.\",\n  \"fieldInvalidForExpirationDate\" : \"Dieses Ablaufdatum ist ungültig.\",\n  \"fieldInvalidForNumber\" : \"Diese Kartennummer ist ungültig.\",\n  \"fieldInvalidForPostalCode\" : \"Diese Postleitzahl ist ungültig.\",\n  \"noticeOfCollection\" : \"Indem ich mit meiner Karte bezahle, stimme ich der PayPal-Datenschutzerklärung zu.\",\n  \"genericError\" : \"Bei uns ist ein Fehler aufgetreten.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Diese Kreditkarte ist bereits als gespeicherte Zahlungsquelle vorhanden.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Bitte prüfen Sie die Informationen und versuchen Sie es erneut.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Bitte prüfen Sie die Informationen und versuchen Sie es erneut.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Netzwerkfehler. Versuchen Sie es bitte erneut.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Die Kreditkartenverifizierung ist fehlgeschlagen. Bitte prüfen Sie die Informationen und versuchen Sie es erneut.\",\n  \"paypalButtonMustBeUsed\" : \"Verwenden Sie den PayPal-Button, um mit der Zahlung fortzufahren.\",\n  \"venmoButtonMustBeUsed\": \"Verwenden Sie den Venmo-Button, um mit Ihrer Zahlung fortzufahren.\",\n  \"applePayButtonMustBeUsed\": \"Verwenden Sie den Apple Pay-Button, um mit der Zahlung fortzufahren.\",\n  \"paypalAccountTokenizationFailedError\" : \"Beim Hinzufügen des PayPal-Kontos ist ein Fehler aufgetreten. Versuchen Sie es bitte erneut.\",\n  \"paypalFlowFailedError\" : \"Bei der Verbindung mit PayPal ist ein Fehler aufgetreten. Versuchen Sie es bitte erneut.\",\n  \"paypalTokenizationRequestActiveError\" : \"Die PayPal-Zahlungsautorisierung wird bereits vorgenommen.\",\n  \"venmoCanceledError\" : \"Etwas ist schief gelaufen. Vergewissern Sie sich, dass Sie die neueste Version der Venmo-App auf Ihrem Gerät installiert haben und Ihr Browser den Wechsel zu Venmo unterstützt.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Die Zahlungsquelle konnte nicht gelöscht werden. Versuchen Sie es erneut.\",\n  \"venmoAppFailedError\" : \"Die Venmo-App wurde nicht auf Ihrem Gerät gefunden.\",\n  \"unsupportedCardTypeError\" : \"Dieser Kartentyp wird nicht unterstützt. Versuchen Sie es mit einer anderen Karte.\",\n  \"applePayTokenizationError\" : \"Bei der Verarbeitung der Apple Pay-Zahlung ist ein Netzwerkfehler aufgetreten. Versuchen Sie es bitte erneut.\",\n  \"applePayActiveCardError\" : \"Fügen Sie Ihrem Apple Pay-Wallet eine unterstützte Karte hinzu.\",\n  \"cardholderNameLabel\" : \"Name des Karteninhabers\",\n  \"cardNumberLabel\" : \"Kartennummer\",\n  \"cvvLabel\" : \"Kartenprüfnummer\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3-stellig)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4-stellig)\",\n  \"cardholderNamePlaceholder\" : \"Name des Karteninhabers\",\n  \"expirationDateLabel\" : \"Gültig bis\",\n  \"expirationDateLabelSubheading\" : \"(MM/JJ)\",\n  \"expirationDatePlaceholder\" : \"MM/JJ\",\n  \"postalCodeLabel\" : \"Postleitzahl\",\n  \"saveCardLabel\" : \"Karte speichern\",\n  \"payWithCard\" : \"Mit Karte zahlen\",\n  \"endingIn\" : \"Mit den Endziffern {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Karte\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],215:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Πληρωμή με {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Επιλογή ενός άλλου τρόπου πληρωμής\",\n  \"chooseAWayToPay\" : \"Επιλογή τρόπου πληρωμής\",\n  \"otherWaysToPay\" : \"Άλλοι τρόποι πληρωμής\",\n  \"edit\" : \"Επεξεργασία\",\n  \"doneEditing\" : \"Τέλος\",\n  \"editPaymentMethods\" : \"Επεξεργασία μεθόδων πληρωμής\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Διαγραφή της κάρτας {{secondaryIdentifier}} που λήγει σε {{identifier}};\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Διαγραφή {{identifier}}λογαριασμού PayPal;\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Θέλετε σίγουρα να διαγράψετε τον λογαριασμό Venmo με το όνομα χρήστη {{identifier}};\",\n  \"genericDeleteConfirmationMessage\" : \"Θέλετε σίγουρα να διαγράψετε αυτήν τη μέθοδο πληρωμής;\",\n  \"deleteCancelButton\" : \"Ακύρωση\",\n  \"deleteConfirmationButton\" : \"Διαγραφή\",\n  \"fieldEmptyForCvv\" : \"Συμπληρώστε έναν κωδικό ασφαλείας (CVV).\",\n  \"fieldEmptyForExpirationDate\" : \"Συμπληρώστε ημερομηνία λήξης.\",\n  \"fieldEmptyForCardholderName\" : \"Συμπληρώστε το όνομα ενός κατόχου κάρτας.\",\n  \"fieldTooLongForCardholderName\" : \"Το όνομα του κατόχου της κάρτας πρέπει να περιέχει λιγότερους από 256 χαρακτήρες.\",\n  \"fieldEmptyForNumber\" : \"Συμπληρώστε έναν αριθμό.\",\n  \"fieldEmptyForPostalCode\" : \"Συμπληρώστε έναν ταχυδρομικό κώδικα.\",\n  \"fieldInvalidForCardholderName\" : \"Αυτό το όνομα κατόχου κάρτας δεν είναι έγκυρο.\",\n  \"fieldInvalidForCvv\" : \"Αυτός ο κωδικός ασφαλείας δεν είναι έγκυρος.\",\n  \"fieldInvalidForExpirationDate\" : \"Αυτή η ημερομηνία λήξης δεν είναι έγκυρη.\",\n  \"fieldInvalidForNumber\" : \"Αυτός ο αριθμός κάρτας δεν είναι έγκυρος.\",\n  \"fieldInvalidForPostalCode\" : \"Αυτός ο ταχυδρομικός κώδικας δεν είναι έγκυρος.\",\n  \"noticeOfCollection\" : \"Πληρώνοντας με την κάρτα μου, αποδέχομαι τη Δήλωση απορρήτου της PayPal.\",\n  \"genericError\" : \"Προέκυψε πρόβλημα στο σύστημά μας.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Αυτή η πιστωτική κάρτα υπάρχει ήδη ως αποθηκευμένη μέθοδος πληρωμής.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Ελέγξτε τα στοιχεία σας και δοκιμάστε ξανά.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Ελέγξτε τα στοιχεία σας και δοκιμάστε ξανά.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Σφάλμα δικτύου. Δοκιμάστε ξανά.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Η επαλήθευση της πιστωτικής κάρτας απέτυχε. Ελέγξτε τα στοιχεία σας και δοκιμάστε ξανά.\",\n  \"paypalButtonMustBeUsed\" : \"Χρησιμοποιήστε το κουμπί PayPal για να συνεχίσετε με την πληρωμή.\",\n  \"venmoButtonMustBeUsed\": \"Χρησιμοποιήστε το κουμπί Venmo για να συνεχίσετε με την πληρωμή σας.\",\n  \"applePayButtonMustBeUsed\": \"Χρησιμοποιήστε το κουμπί Apple Pay για να συνεχίσετε με την πληρωμή.\",\n  \"paypalAccountTokenizationFailedError\" : \"Προέκυψε κάποιο πρόβλημα με την προσθήκη του λογαριασμού PayPal. Δοκιμάστε ξανά.\",\n  \"paypalFlowFailedError\" : \"Προέκυψε κάποιο πρόβλημα με τη σύνδεση στην PayPal. Δοκιμάστε ξανά.\",\n  \"paypalTokenizationRequestActiveError\" : \"Η εξουσιοδότηση πληρωμής μέσω PayPal βρίσκεται ήδη σε εξέλιξη.\",\n  \"venmoCanceledError\" : \"Προέκυψε πρόβλημα. Βεβαιωθείτε ότι έχετε την πιο πρόσφατη έκδοση της εφαρμογής Venmo εγκατεστημένη στη συσκευή σας και ότι το πρόγραμμα περιήγησής σας υποστηρίζει τη μετάβαση στη Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Η διαγραφή της μεθόδου πληρωμής είναι αδύνατη, δοκιμάστε ξανά.\",\n  \"venmoAppFailedError\" : \"Η εφαρμογή Venmo δεν βρέθηκε στη συσκευή σας.\",\n  \"unsupportedCardTypeError\" : \"Αυτός ο τύπος κάρτας δεν υποστηρίζεται. Δοκιμάστε μια άλλη κάρτα.\",\n  \"applePayTokenizationError\" : \"Προέκυψε σφάλμα δικτύου κατά την επεξεργασία της πληρωμής μέσω Apple Pay. Δοκιμάστε ξανά.\",\n  \"applePayActiveCardError\" : \"Προσθέστε μια υποστηριζόμενη κάρτα στο ψηφιακό πορτοφόλι Apple Pay.\",\n  \"cardholderNameLabel\" : \"Όνομα κατόχου κάρτας\",\n  \"cardNumberLabel\" : \"Αριθμός κάρτας\",\n  \"cvvLabel\" : \"Κωδικός ασφαλείας (CVV)\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 ψηφία)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 ψηφία)\",\n  \"cardholderNamePlaceholder\" : \"Όνομα κατόχου κάρτας\",\n  \"expirationDateLabel\" : \"Ημερομηνία λήξης\",\n  \"expirationDateLabelSubheading\" : \"(ΜΜ/ΕΕ)\",\n  \"expirationDatePlaceholder\" : \"ΜΜ/ΕΕ\",\n  \"postalCodeLabel\" : \"Ταχυδρομικός κώδικας\",\n  \"saveCardLabel\" : \"Αποθήκευση κάρτας\",\n  \"payWithCard\" : \"Πληρωμή με κάρτα\",\n  \"endingIn\" : \"Που λήγει σε {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Κάρτα\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],216:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Paying with {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Choose another way to pay\",\n  \"chooseAWayToPay\" : \"Choose a way to pay\",\n  \"otherWaysToPay\" : \"Other ways to pay\",\n  \"edit\" : \"Edit\",\n  \"doneEditing\" : \"Done\",\n  \"editPaymentMethods\" : \"Edit payment methods\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Delete {{secondaryIdentifier}} card ending in {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Delete PayPal account {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Are you sure you want to delete Venmo account with username {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Are you sure you want to delete this payment method?\",\n  \"deleteCancelButton\" : \"Cancel\",\n  \"deleteConfirmationButton\" : \"Delete\",\n  \"fieldEmptyForCvv\" : \"Please enter a CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Please enter an expiry date.\",\n  \"fieldEmptyForCardholderName\" : \"Please enter a cardholder name.\",\n  \"fieldTooLongForCardholderName\" : \"Cardholder name must be less than 256 characters.\",\n  \"fieldEmptyForNumber\" : \"Please enter a number.\",\n  \"fieldEmptyForPostalCode\" : \"Please enter a postcode.\",\n  \"fieldInvalidForCardholderName\" : \"This cardholder name isn't valid.\",\n  \"fieldInvalidForCvv\" : \"This CVV isn't valid.\",\n  \"fieldInvalidForExpirationDate\" : \"This expiry date isn't valid.\",\n  \"fieldInvalidForNumber\" : \"This card number isn't valid.\",\n  \"fieldInvalidForPostalCode\" : \"This postcode isn't valid.\",\n  \"noticeOfCollection\" : \"By paying with my card, I agree to the PayPal Privacy Statement.\",\n  \"genericError\" : \"We're sorry, something seems to have gone wrong.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"This card already exists as a saved payment method.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Please check your entries and try again.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Please check your entries and try again.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Network error. Please try again.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Card verification failed. Please check your entries and try again.\",\n  \"paypalButtonMustBeUsed\" : \"Use the PayPal button to continue with your payment.\",\n  \"venmoButtonMustBeUsed\": \"Use the Venmo button to continue with your payment.\",\n  \"applePayButtonMustBeUsed\": \"Use the Apple Pay button to continue with your payment.\",\n  \"paypalAccountTokenizationFailedError\" : \"Something went wrong adding the PayPal account. Please try again.\",\n  \"paypalFlowFailedError\" : \"Something went wrong connecting to PayPal. Please try again.\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal payment authorisation is already in progress.\",\n  \"venmoCanceledError\" : \"We're sorry, something seems to have gone wrong. Please make sure you have the most recent version of the Venmo app installed on your device and that your browser supports switching to Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Unable to delete payment method. Please try again.\",\n  \"venmoAppFailedError\" : \"The Venmo app couldn't be found on your device.\",\n  \"unsupportedCardTypeError\" : \"This card type isn't supported. Please try another card.\",\n  \"applePayTokenizationError\" : \"A network error occurred while processing the Apple Pay payment. Please try again.\",\n  \"applePayActiveCardError\" : \"Add a supported card to your Apple Pay wallet.\",\n  \"cardholderNameLabel\" : \"Cardholder name\",\n  \"cardNumberLabel\" : \"Card number\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 digits)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 digits)\",\n  \"cardholderNamePlaceholder\" : \"Cardholder name\",\n  \"expirationDateLabel\" : \"Expiry date\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"MM/YY\",\n  \"postalCodeLabel\" : \"Postcode\",\n  \"saveCardLabel\" : \"Save card\",\n  \"payWithCard\" : \"Pay with card\",\n  \"endingIn\" : \"Ending in {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Card\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],217:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Paying with {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Choose another way to pay\",\n  \"chooseAWayToPay\" : \"Choose a way to pay\",\n  \"otherWaysToPay\" : \"Other ways to pay\",\n  \"edit\" : \"Edit\",\n  \"doneEditing\" : \"Done\",\n  \"editPaymentMethods\" : \"Edit funding sources\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Delete {{secondaryIdentifier}} card ending in {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Delete PayPal account {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Are you sure you want to delete Venmo account with username {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Are you sure you want to delete this funding source?\",\n  \"deleteCancelButton\" : \"Cancel\",\n  \"deleteConfirmationButton\" : \"Delete\",\n  \"fieldEmptyForCvv\" : \"Please enter a security code.\",\n  \"fieldEmptyForExpirationDate\" : \"Please enter an expiry date.\",\n  \"fieldEmptyForCardholderName\" : \"Please enter a cardholder name.\",\n  \"fieldTooLongForCardholderName\" : \"Cardholder name must be less than 256 characters.\",\n  \"fieldEmptyForNumber\" : \"Please enter a number.\",\n  \"fieldEmptyForPostalCode\" : \"Please enter a postcode.\",\n  \"fieldInvalidForCardholderName\" : \"This cardholder name isn't valid.\",\n  \"fieldInvalidForCvv\" : \"This security code isn't valid.\",\n  \"fieldInvalidForExpirationDate\" : \"This expiry date isn't valid.\",\n  \"fieldInvalidForNumber\" : \"This card number isn't valid.\",\n  \"fieldInvalidForPostalCode\" : \"This postcode isn't valid.\",\n  \"noticeOfCollection\" : \"By paying with my card, I agree to the PayPal Privacy Statement.\",\n  \"genericError\" : \"Something went wrong on our end.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"This credit card already exists as a saved funding source.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Please check your information and try again.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Please check your information and try again.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Network error. Please try again.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Credit card verification failed. Please check your information and try again.\",\n  \"paypalButtonMustBeUsed\" : \"Use the PayPal button to continue with your payment.\",\n  \"venmoButtonMustBeUsed\": \"Use the Venmo button to continue with your payment.\",\n  \"applePayButtonMustBeUsed\": \"Use the Apple Pay button to continue with your payment.\",\n  \"paypalAccountTokenizationFailedError\" : \"Something went wrong adding the PayPal account. Please try again.\",\n  \"paypalFlowFailedError\" : \"Something went wrong connecting to PayPal. Please try again.\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal payment authorisation is already in progress.\",\n  \"venmoCanceledError\" : \"Something went wrong. Ensure you have the most recent version of the Venmo app installed on your device and your browser supports switching to Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"We were unable to delete the funding source. Please try again.\",\n  \"venmoAppFailedError\" : \"The Venmo app couldn't be found on your device.\",\n  \"unsupportedCardTypeError\" : \"This card type isn't supported. Please try another card.\",\n  \"applePayTokenizationError\" : \"A network error occurred while processing the Apple Pay payment. Please try again.\",\n  \"applePayActiveCardError\" : \"Add a supported card to your Apple Pay wallet.\",\n  \"cardholderNameLabel\" : \"Cardholder name\",\n  \"cardNumberLabel\" : \"Card number\",\n  \"cvvLabel\" : \"Security code\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 digits)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 digits)\",\n  \"cardholderNamePlaceholder\" : \"Cardholder name\",\n  \"expirationDateLabel\" : \"Expiry date\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"MM/YY\",\n  \"postalCodeLabel\" : \"Postcode\",\n  \"saveCardLabel\" : \"Save card\",\n  \"payWithCard\" : \"Pay with card\",\n  \"endingIn\" : \"Ending in {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Card\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],218:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Paying with {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Choose another way to pay\",\n  \"chooseAWayToPay\" : \"Choose a way to pay\",\n  \"otherWaysToPay\" : \"Other ways to pay\",\n  \"edit\" : \"Edit\",\n  \"doneEditing\" : \"Done\",\n  \"editPaymentMethods\" : \"Edit payment methods\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Delete {{secondaryIdentifier}} card ending in {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Delete PayPal account {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Are you sure you want to delete Venmo account with username {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Are you sure you want to delete this payment method?\",\n  \"deleteCancelButton\" : \"Cancel\",\n  \"deleteConfirmationButton\" : \"Delete\",\n  \"fieldEmptyForCvv\" : \"Please enter a CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Please enter an expiry date.\",\n  \"fieldEmptyForCardholderName\" : \"Please enter a cardholder name.\",\n  \"fieldTooLongForCardholderName\" : \"Cardholder name must be less than 256 characters.\",\n  \"fieldEmptyForNumber\" : \"Please enter a number.\",\n  \"fieldEmptyForPostalCode\" : \"Please enter a PIN code.\",\n  \"fieldInvalidForCardholderName\" : \"This cardholder name isn't valid.\",\n  \"fieldInvalidForCvv\" : \"This CVV isn't valid.\",\n  \"fieldInvalidForExpirationDate\" : \"This expiry date isn't valid.\",\n  \"fieldInvalidForNumber\" : \"This card number isn't valid.\",\n  \"fieldInvalidForPostalCode\" : \"This PIN code isn't valid.\",\n  \"noticeOfCollection\" : \"By paying with my card, I agree to the PayPal Privacy Statement.\",\n  \"genericError\" : \"We're sorry, something seems to have gone wrong.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"This card already exists as a saved payment method.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Please check your information and try again.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Please check your information and try again.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Network error. Please try again.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Card verification failed. Please check your information and try again.\",\n  \"paypalButtonMustBeUsed\" : \"Use the PayPal button to continue with your payment.\",\n  \"venmoButtonMustBeUsed\": \"Use the Venmo button to continue with your payment.\",\n  \"applePayButtonMustBeUsed\": \"Use the Apple Pay button to continue with your payment.\",\n  \"paypalAccountTokenizationFailedError\" : \"Something went wrong adding the PayPal account. Please try again.\",\n  \"paypalFlowFailedError\" : \"Something went wrong connecting to PayPal. Please try again.\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal payment authorisation is already in progress.\",\n  \"venmoCanceledError\" : \"We're sorry, something seems to have gone wrong. Ensure you have the most recent version of the Venmo app installed on your device and your browser supports switching to Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Unable to delete payment method. Please try again.\",\n  \"venmoAppFailedError\" : \"The Venmo app couldn't be found on your device.\",\n  \"unsupportedCardTypeError\" : \"This card type isn't supported. Please try another card.\",\n  \"applePayTokenizationError\" : \"A network error occurred while processing the Apple Pay payment. Please try again.\",\n  \"applePayActiveCardError\" : \"Add a supported card to your Apple Pay digital wallet.\",\n  \"cardholderNameLabel\" : \"Cardholder name\",\n  \"cardNumberLabel\" : \"Card number\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 digits)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 digits)\",\n  \"cardholderNamePlaceholder\" : \"Cardholder name\",\n  \"expirationDateLabel\" : \"Expiry date\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"MM/YY\",\n  \"postalCodeLabel\" : \"PIN code\",\n  \"saveCardLabel\" : \"Save card\",\n  \"payWithCard\" : \"Pay with card\",\n  \"endingIn\" : \"Ending in {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Card\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],219:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  payingWith: 'Paying with {{paymentSource}}',\n  chooseAnotherWayToPay: 'Choose another way to pay',\n  chooseAWayToPay: 'Choose a way to pay',\n  otherWaysToPay: 'Other ways to pay',\n  edit: 'Edit',\n  doneEditing: 'Done',\n  editPaymentMethods: 'Edit payment methods',\n  CreditCardDeleteConfirmationMessage: 'Delete {{secondaryIdentifier}} card ending in {{identifier}}?',\n  PayPalAccountDeleteConfirmationMessage: 'Delete PayPal account {{identifier}}?',\n  VenmoAccountDeleteConfirmationMessage: 'Are you sure you want to delete Venmo account with username {{identifier}}?',\n  genericDeleteConfirmationMessage: 'Are you sure you want to delete this payment method?',\n  deleteCancelButton: 'Cancel',\n  deleteConfirmationButton: 'Delete',\n  // Errors\n  fieldEmptyForCvv: 'Please fill out a CVV.',\n  fieldEmptyForExpirationDate: 'Please fill out an expiration date.',\n  fieldEmptyForCardholderName: 'Please fill out a cardholder name.',\n  fieldEmptyForNumber: 'Please fill out a card number.',\n  fieldEmptyForPostalCode: 'Please fill out a postal code.',\n  fieldInvalidForCardholderName: 'This cardholder name is not valid.',\n  fieldInvalidForCvv: 'This security code is not valid.',\n  fieldInvalidForExpirationDate: 'This expiration date is not valid.',\n  fieldInvalidForNumber: 'This card number is not valid.',\n  fieldInvalidForPostalCode: 'This postal code is not valid.',\n  fieldTooLongForCardholderName: 'Cardholder name must be less than 256 characters.',\n  noticeOfCollection : 'By paying with my card, I agree to the PayPal Privacy Statement.',\n  genericError: 'Something went wrong on our end.',\n  hostedFieldsTokenizationFailOnDuplicateError: 'This credit card already exists as a saved payment method.',\n  hostedFieldsFailedTokenizationError: 'Please check your information and try again.',\n  hostedFieldsTokenizationCvvVerificationFailedError: 'Credit card verification failed. Please check your information and try again.',\n  hostedFieldsTokenizationNetworkErrorError: 'Network error. Please try again.',\n  hostedFieldsFieldsInvalidError: 'Please check your information and try again.',\n  paypalButtonMustBeUsed: 'Use the PayPal button to continue with your payment.',\n  venmoButtonMustBeUsed: 'Use the Venmo button to continue with your payment.',\n  applePayButtonMustBeUsed: 'Use the Apple Pay button to continue with your payment.',\n  paypalAccountTokenizationFailedError: 'Something went wrong adding the PayPal account. Please try again.',\n  paypalFlowFailedError: 'Something went wrong connecting to PayPal. Please try again.',\n  paypalTokenizationRequestActiveError: 'PayPal payment authorization is already in progress.',\n  applePayTokenizationError: 'A network error occurred while processing the Apple Pay payment. Please try again.',\n  applePayActiveCardError: 'Add a supported card to your Apple Pay wallet.',\n  vaultManagerPaymentMethodDeletionError: 'Unable to delete payment method, try again.',\n  venmoCanceledError: 'Something went wrong. Ensure you have the most recent version of the Venmo app installed on your device and your browser supports switching to Venmo.',\n  venmoAppFailedError: 'The Venmo app could not be found on your device.',\n  unsupportedCardTypeError: 'This card type is not supported. Please try another card.',\n  // Card form\n  cardholderNameLabel: 'Cardholder Name',\n  cardNumberLabel: 'Card Number',\n  cvvLabel: 'CVV',\n  cvvThreeDigitLabelSubheading: '(3 digits)',\n  cvvFourDigitLabelSubheading: '(4 digits)',\n  expirationDateLabel: 'Expiration Date',\n  expirationDateLabelSubheading: '(MM/YY)',\n  cardholderNamePlaceholder: 'Cardholder Name',\n  expirationDatePlaceholder: 'MM/YY',\n  postalCodeLabel: 'Postal Code',\n  saveCardLabel: 'Save card',\n  payWithCard: 'Pay with card',\n  // Payment Method descriptions\n  endingIn: 'Ending in {{lastFourCardDigits}}',\n  Card: 'Card',\n  PayPal: 'PayPal',\n  'PayPal Credit': 'PayPal Credit',\n  'Apple Pay': 'Apple Pay',\n  'Google Pay': 'Google Pay',\n  'Venmo': 'Venmo',\n  'American Express': 'American Express',\n  Discover: 'Discover',\n  'Diners Club': 'Diners Club',\n  Elo: 'Elo',\n  Hiper: 'Hiper',\n  Hipercard: 'Hipercard',\n  MasterCard: 'Mastercard',\n  Visa: 'Visa',\n  JCB: 'JCB',\n  Maestro: 'Maestro',\n  UnionPay: 'UnionPay'\n};\n\n},{}],220:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Pagar con {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Seleccionar otra forma de pago\",\n  \"chooseAWayToPay\" : \"Seleccionar forma de pago\",\n  \"otherWaysToPay\" : \"Otras formas de pago\",\n  \"edit\" : \"Editar\",\n  \"doneEditing\" : \"Hecho\",\n  \"editPaymentMethods\" : \"Editar formas de pago\",\n  \"CreditCardDeleteConfirmationMessage\" : \"¿Eliminar la tarjeta {{secondaryIdentifier}} terminada en {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"¿Eliminar la cuenta PayPal {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"¿Seguro que deseas eliminar la cuenta de Venmo con el nombre de usuario {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"¿Seguro que deseas eliminar esta forma de pago?\",\n  \"deleteCancelButton\" : \"Cancelar\",\n  \"deleteConfirmationButton\" : \"Eliminar\",\n  \"fieldEmptyForCvv\" : \"Introduce el CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Introduce una fecha de vencimiento.\",\n  \"fieldEmptyForCardholderName\" : \"Introduce el nombre del titular de la tarjeta.\",\n  \"fieldTooLongForCardholderName\" : \"El nombre del titular de la tarjeta debe tener menos de 256 caracteres.\",\n  \"fieldEmptyForNumber\" : \"Introduce un número.\",\n  \"fieldEmptyForPostalCode\" : \"Introduce un código postal.\",\n  \"fieldInvalidForCardholderName\" : \"El nombre del titular de la tarjeta no es válido.\",\n  \"fieldInvalidForCvv\" : \"El código de seguridad no es válido.\",\n  \"fieldInvalidForExpirationDate\" : \"La fecha de vencimiento no es válida.\",\n  \"fieldInvalidForNumber\" : \"El número de tarjeta no es válido.\",\n  \"fieldInvalidForPostalCode\" : \"El código postal no es válido.\",\n  \"noticeOfCollection\" : \"Al pagar con mi tarjeta, acepto la Declaración de privacidad de PayPal.\",\n  \"genericError\" : \"Ha habido un problema.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Esta tarjeta de crédito ya existe como forma de pago guardada.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Comprueba la información e inténtalo de nuevo.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Comprueba la información e inténtalo de nuevo.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Error de red. Inténtalo de nuevo.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Error al verificar la tarjeta de crédito. Comprueba la información e inténtalo de nuevo.\",\n  \"paypalButtonMustBeUsed\" : \"Utiliza el botón de PayPal para continuar con el pago.\",\n  \"venmoButtonMustBeUsed\": \"Pulsa el botón de Venmo para continuar con el pago.\",\n  \"applePayButtonMustBeUsed\": \"Utiliza el botón de Apple Pay para continuar con el pago.\",\n  \"paypalAccountTokenizationFailedError\" : \"Se ha producido un error al añadir la cuenta PayPal. Inténtalo de nuevo.\",\n  \"paypalFlowFailedError\" : \"Se ha producido un error al conectar con PayPal. Inténtalo de nuevo.\",\n  \"paypalTokenizationRequestActiveError\" : \"La autorización del pago de PayPal ya está en curso.\",\n  \"venmoCanceledError\" : \"Ha habido un error. Asegúrate de tener la versión más reciente de la aplicación de Venmo instalada en el dispositivo y de que el navegador admita el cambio a Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"No se puede eliminar la forma de pago. Inténtalo de nuevo.\",\n  \"venmoAppFailedError\" : \"No se ha podido encontrar la aplicación de Venmo en tu dispositivo.\",\n  \"unsupportedCardTypeError\" : \"No se admite este tipo de tarjeta. Prueba con otra tarjeta.\",\n  \"applePayTokenizationError\" : \"Se ha producido un error de red al procesar el pago de Apple Pay. Inténtalo de nuevo.\",\n  \"applePayActiveCardError\" : \"Añade una tarjeta compatible a tu cartera de Apple Pay.\",\n  \"cardholderNameLabel\" : \"Nombre del titular de la tarjeta\",\n  \"cardNumberLabel\" : \"Número de tarjeta\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 dígitos)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 dígitos)\",\n  \"cardholderNamePlaceholder\" : \"Nombre del titular de la tarjeta\",\n  \"expirationDateLabel\" : \"Fecha de vencimiento\",\n  \"expirationDateLabelSubheading\" : \"(MM/AA)\",\n  \"expirationDatePlaceholder\" : \"MM/AA\",\n  \"postalCodeLabel\" : \"Código postal\",\n  \"saveCardLabel\" : \"Guardar tarjeta\",\n  \"payWithCard\" : \"Pagar con tarjeta\",\n  \"endingIn\" : \"Terminada en {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Tarjeta\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],221:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Pagar con {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Elija otra forma de pago\",\n  \"chooseAWayToPay\" : \"Seleccione una forma de pago\",\n  \"otherWaysToPay\" : \"Otras formas de pago\",\n  \"edit\" : \"Editar\",\n  \"doneEditing\" : \"Listo\",\n  \"editPaymentMethods\" : \"Editar métodos de pago\",\n  \"CreditCardDeleteConfirmationMessage\" : \"¿Eliminar tarjeta {{secondaryIdentifier}} con terminación {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"¿Desea eliminar la cuenta de PayPal {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"¿Seguro que desea eliminar la cuenta de Venmo con el nombre de usuario {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"¿Seguro que desea eliminar esta forma de pago?\",\n  \"deleteCancelButton\" : \"Cancelar\",\n  \"deleteConfirmationButton\" : \"Eliminar\",\n  \"fieldEmptyForCvv\" : \"Ingrese un CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Ingrese una fecha de vencimiento.\",\n  \"fieldEmptyForCardholderName\" : \"Ingrese un nombre de titular de tarjeta.\",\n  \"fieldTooLongForCardholderName\" : \"El nombre del titular de la tarjeta debe tener menos de 256 caracteres.\",\n  \"fieldEmptyForNumber\" : \"Ingrese un número.\",\n  \"fieldEmptyForPostalCode\" : \"Ingrese un código postal.\",\n  \"fieldInvalidForCardholderName\" : \"El nombre del titular de la tarjeta no es válido.\",\n  \"fieldInvalidForCvv\" : \"Este código de seguridad no es válido.\",\n  \"fieldInvalidForExpirationDate\" : \"Esta fecha de vencimiento no es válida.\",\n  \"fieldInvalidForNumber\" : \"Este número de tarjeta no es válido.\",\n  \"fieldInvalidForPostalCode\" : \"Este código postal no es válido.\",\n  \"noticeOfCollection\" : \"Al pagar con mi tarjeta, acepto el Aviso de Privacidad de PayPal.\",\n  \"genericError\" : \"Se ha producido un error.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Esta tarjeta de crédito ya existe como forma de pago guardada.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Revise la información e inténtelo de nuevo.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Revise la información e inténtelo de nuevo.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Error de red. Inténtelo de nuevo.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"La verificación de la tarjeta de crédito falló. Revise la información e inténtelo de nuevo.\",\n  \"paypalButtonMustBeUsed\" : \"Utilice el botón de PayPal para continuar con su pago.\",\n  \"venmoButtonMustBeUsed\": \"Use el botón Venmo para continuar con el pago.\",\n  \"applePayButtonMustBeUsed\": \"Utilice el botón de Apple Pay para continuar con su pago.\",\n  \"paypalAccountTokenizationFailedError\" : \"Se ha producido un error al agregar la cuenta de PayPal. Inténtelo de nuevo.\",\n  \"paypalFlowFailedError\" : \"Se ha producido un error al conectar con PayPal. Inténtelo de nuevo.\",\n  \"paypalTokenizationRequestActiveError\" : \"La autorización de pago de PayPal ya está en curso.\",\n  \"venmoCanceledError\" : \"Se ha producido un error. Asegúrese de que tiene la versión más reciente de la aplicación de Venmo instalada en su dispositivo y que su navegador admita el sitio web Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"No se pudo eliminar la forma de pago, inténtelo de nuevo.\",\n  \"venmoAppFailedError\" : \"No se pudo encontrar la aplicación de Venmo en su dispositivo.\",\n  \"unsupportedCardTypeError\" : \"Este tipo de tarjeta no es compatible. Inténtelo con otra tarjeta.\",\n  \"applePayTokenizationError\" : \"Se ha producido un error de red al procesar el pago de Apple Pay. Inténtelo de nuevo.\",\n  \"applePayActiveCardError\" : \"Agregue una tarjeta compatible a su cartera de Apple Pay.\",\n  \"cardholderNameLabel\" : \"Nombre del titular de la tarjeta\",\n  \"cardNumberLabel\" : \"Número de tarjeta\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 dígitos)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 dígitos)\",\n  \"cardholderNamePlaceholder\" : \"Nombre del titular de la tarjeta\",\n  \"expirationDateLabel\" : \"Fecha de vencimiento\",\n  \"expirationDateLabelSubheading\" : \"(MM/AA)\",\n  \"expirationDatePlaceholder\" : \"MM/AA\",\n  \"postalCodeLabel\" : \"Código postal\",\n  \"saveCardLabel\" : \"Guardar tarjeta\",\n  \"payWithCard\" : \"Pagar con tarjeta\",\n  \"endingIn\" : \"Con terminación {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Tarjeta\",\n  \"PayPal\" : \"Paypal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],222:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Maksuväline: {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Valitse toinen maksutapa\",\n  \"chooseAWayToPay\" : \"Valitse maksutapa\",\n  \"otherWaysToPay\" : \"Muita maksutapoja\",\n  \"edit\" : \"Muokkaa\",\n  \"doneEditing\" : \"Valmis\",\n  \"editPaymentMethods\" : \"Muokkaa maksutapoja\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Haluatko poistaa {{secondaryIdentifier}}} -kortin, joka päättyy {{identifier}}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Haluatko poistaa PayPal-tilin {{identifier}}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Haluatko varmasti poistaa Venmo-tilin, jonka käyttäjätunnus on {{identifier}}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Haluatko varmasti poistaa tämän maksutavan?\",\n  \"deleteCancelButton\" : \"Peruuta\",\n  \"deleteConfirmationButton\" : \"Poista\",\n  \"fieldEmptyForCvv\" : \"Anna turvakoodi.\",\n  \"fieldEmptyForExpirationDate\" : \"Anna voimassaolon päättymispäivämäärä.\",\n  \"fieldEmptyForCardholderName\" : \"Anna kortinhaltijan nimi.\",\n  \"fieldTooLongForCardholderName\" : \"Kortinhaltijan nimen on oltava alle 256 merkkiä.\",\n  \"fieldEmptyForNumber\" : \"Anna numero.\",\n  \"fieldEmptyForPostalCode\" : \"Anna postinumero.\",\n  \"fieldInvalidForCardholderName\" : \"Kortinhaltijan nimi ei ole kelvollinen.\",\n  \"fieldInvalidForCvv\" : \"Turvakoodi ei ole kelvollinen.\",\n  \"fieldInvalidForExpirationDate\" : \"Päättymispäivämäärä ei ole kelvollinen.\",\n  \"fieldInvalidForNumber\" : \"Kortin numero ei ole kelvollinen.\",\n  \"fieldInvalidForPostalCode\" : \"Postinumero ei ole kelvollinen.\",\n  \"noticeOfCollection\" : \"Maksamalla kortillani hyväksyn PayPal tietosuojaselosteen.\",\n  \"genericError\" : \"Jokin meni pieleen tässä päässä.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Tämä luottokortti on jo tallennettu maksutavaksi.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Tarkista tiedot ja yritä uudelleen.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Tarkista tiedot ja yritä uudelleen.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Verkkovirhe. Yritä uudelleen.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Luottokortin varmennus epäonnistui. Tarkista tiedot ja yritä uudelleen.\",\n  \"paypalButtonMustBeUsed\" : \"Jatka maksua PayPal-painikkeen avulla.\",\n  \"venmoButtonMustBeUsed\": \"Jatka maksua Venmo-painikkeella.\",\n  \"applePayButtonMustBeUsed\": \"Jatka maksua Apple Pay-painikkeen avulla.\",\n  \"paypalAccountTokenizationFailedError\" : \"Jotain meni pieleen PayPal-tiliä lisätessä. Yritä uudelleen.\",\n  \"paypalFlowFailedError\" : \"Jotain meni pieleen muodostettaessa yhteyttä PayPaliin. Yritä uudelleen.\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal-maksun valtuutus on jo meneillään.\",\n  \"venmoCanceledError\" : \"Jokin meni pieleen. Varmista, että laitteeseesi on asennettu Venmo-sovelluksen viimeisin versio, ja että selain tukee vaihtamista Venmoon.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Maksutavan poistaminen ei onnistu, yritä uudelleen.\",\n  \"venmoAppFailedError\" : \"Venmo-sovellusta ei löytynyt laitteesta.\",\n  \"unsupportedCardTypeError\" : \"Tätä korttityyppiä ei tueta. Kokeile toista korttia.\",\n  \"applePayTokenizationError\" : \"Tapahtui verkkovirhe Apple Pay -maksun käsittelyssä. Yritä uudelleen.\",\n  \"applePayActiveCardError\" : \"Lisää tuettu kortti Apple Pay -lompakkoon.\",\n  \"cardholderNameLabel\" : \"Kortinhaltijan nimi\",\n  \"cardNumberLabel\" : \"Kortin numero\",\n  \"cvvLabel\" : \"Kortin turvakoodi\",\n  \"cvvThreeDigitLabelSubheading\" : \"(kolme numeroa)\",\n  \"cvvFourDigitLabelSubheading\" : \"(neljä numeroa)\",\n  \"cardholderNamePlaceholder\" : \"Kortinhaltijan nimi\",\n  \"expirationDateLabel\" : \"Päättymispäivämäärä\",\n  \"expirationDateLabelSubheading\" : \"(KK/VV)\",\n  \"expirationDatePlaceholder\" : \"KK/VV\",\n  \"postalCodeLabel\" : \"Postinumero\",\n  \"saveCardLabel\" : \"Tallenna kortti\",\n  \"payWithCard\" : \"Maksa kortilla\",\n  \"endingIn\" : \"Päättyy {{lastFourCardDigits}}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Kortti\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],223:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Payer avec {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Choisir un autre mode de paiement\",\n  \"chooseAWayToPay\" : \"Choisir un mode de paiement\",\n  \"otherWaysToPay\" : \"Autres modes de paiement\",\n  \"edit\" : \"Modifier\",\n  \"doneEditing\" : \"Terminé\",\n  \"editPaymentMethods\" : \"Modifier les modes de paiement\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Supprimer la carte {{secondaryIdentifier}} se terminant par {{identifier}} ?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Supprimer le compte PayPal {{identifier}} ?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Souhaitez-vous vraiment supprimer le compte Venmo dont le nom d'utilisateur est {{identifier}} ?\",\n  \"genericDeleteConfirmationMessage\" : \"Voulez-vous vraiment supprimer ce mode paiement ?\",\n  \"deleteCancelButton\" : \"Annuler\",\n  \"deleteConfirmationButton\" : \"Supprimer\",\n  \"fieldEmptyForCvv\" : \"Saisissez un CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Saisissez une date d'expiration.\",\n  \"fieldEmptyForCardholderName\" : \"Saisissez le nom du titulaire de la carte.\",\n  \"fieldTooLongForCardholderName\" : \"Le nom du titulaire de la carte doit contenir moins de 256 caractères.\",\n  \"fieldEmptyForNumber\" : \"Saisissez un numéro.\",\n  \"fieldEmptyForPostalCode\" : \"Saisissez un code postal.\",\n  \"fieldInvalidForCardholderName\" : \"Le nom de ce titulaire de la carte n'est pas valide.\",\n  \"fieldInvalidForCvv\" : \"Ce cryptogramme visuel n'est pas valide.\",\n  \"fieldInvalidForExpirationDate\" : \"Cette date d'expiration n'est pas valide.\",\n  \"fieldInvalidForNumber\" : \"Ce numéro de carte n'est pas valide.\",\n  \"fieldInvalidForPostalCode\" : \"Ce code postal n'est pas valide.\",\n  \"noticeOfCollection\" : \"En payant avec ma carte, j’accepte la Politique de confidentialité de PayPal.\",\n  \"genericError\" : \"Une erreur s'est produite de notre côté.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Cette carte de crédit est déjà enregistrée en tant que mode de paiement.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Veuillez vérifier vos informations, puis réessayer.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Veuillez vérifier vos informations, puis réessayer.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Erreur de réseau. Réessayez.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Échec de vérification de la carte de crédit. Veuillez vérifier vos informations, puis réessayer.\",\n  \"paypalButtonMustBeUsed\" : \"Utilisez le bouton PayPal pour poursuivre votre paiement.\",\n  \"venmoButtonMustBeUsed\": \"Utilisez le bouton Venmo pour continuer votre paiement.\",\n  \"applePayButtonMustBeUsed\": \"Utilisez le bouton Apple Pay pour poursuivre votre paiement.\",\n  \"paypalAccountTokenizationFailedError\" : \"Une erreur s'est produite lors de l'ajout du compte PayPal. Veuillez réessayer.\",\n  \"paypalFlowFailedError\" : \"Une erreur s'est produite lors de la connexion à PayPal. Veuillez réessayer.\",\n  \"paypalTokenizationRequestActiveError\" : \"L'autorisation de paiement PayPal est déjà en cours.\",\n  \"venmoCanceledError\" : \"Une erreur s'est produite. Assurez-vous que la version la plus récente de l'application Venmo est installée sur votre appareil et que votre navigateur prend en charge la redirection vers Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Impossible de supprimer le mode de paiement. Réessayez.\",\n  \"venmoAppFailedError\" : \"L'application Venmo n'est pas présente sur votre appareil.\",\n  \"unsupportedCardTypeError\" : \"Ce type de carte n'est pas pris en charge. Veuillez essayer une autre carte.\",\n  \"applePayTokenizationError\" : \"Une erreur de réseau s'est produite lors du traitement du paiement Apple Pay. Veuillez réessayer.\",\n  \"applePayActiveCardError\" : \"Ajoutez une carte prise en charge à votre portefeuille Apple Pay.\",\n  \"cardholderNameLabel\" : \"Nom du titulaire de la carte\",\n  \"cardNumberLabel\" : \"Numéro de carte\",\n  \"cvvLabel\" : \"Cryptogramme visuel\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 chiffres)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 chiffres)\",\n  \"cardholderNamePlaceholder\" : \"Nom du titulaire de la carte\",\n  \"expirationDateLabel\" : \"Date d'expiration\",\n  \"expirationDateLabelSubheading\" : \"(MM/AA)\",\n  \"expirationDatePlaceholder\" : \"MM/AA\",\n  \"postalCodeLabel\" : \"Code postal\",\n  \"saveCardLabel\" : \"Enregistrer la carte\",\n  \"payWithCard\" : \"Payer par carte\",\n  \"endingIn\" : \"Se terminant par {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Carte\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],224:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Payer avec : {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Choisir un autre mode de paiement\",\n  \"chooseAWayToPay\" : \"Choisir un mode de paiement\",\n  \"otherWaysToPay\" : \"Autres modes de paiement\",\n  \"edit\" : \"Modifier\",\n  \"doneEditing\" : \"Terminé\",\n  \"editPaymentMethods\" : \"Modifier les modes de paiement\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Supprimer la carte {{secondaryIdentifier}} se terminant par {{identifier}} ?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Supprimer le compte PayPal {{identifier}} ?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Souhaitez-vous vraiment supprimer le compte Venmo associé au nom d'utilisateur {{identifier}} ?\",\n  \"genericDeleteConfirmationMessage\" : \"Souhaitez-vous vraiment supprimer ce mode de paiement ?\",\n  \"deleteCancelButton\" : \"Annuler\",\n  \"deleteConfirmationButton\" : \"Supprimer\",\n  \"fieldEmptyForCvv\" : \"Renseignez un cryptogramme visuel.\",\n  \"fieldEmptyForExpirationDate\" : \"Renseignez une date d'expiration.\",\n  \"fieldEmptyForCardholderName\" : \"Renseignez le nom du titulaire de la carte.\",\n  \"fieldTooLongForCardholderName\" : \"Le nom du titulaire de la carte doit comporter moins de 256 caractères.\",\n  \"fieldEmptyForNumber\" : \"Renseignez un numéro.\",\n  \"fieldEmptyForPostalCode\" : \"Renseignez un code postal.\",\n  \"fieldInvalidForCardholderName\" : \"Le nom de ce titulaire de la carte est incorrect.\",\n  \"fieldInvalidForCvv\" : \"Ce cryptogramme visuel est incorrect.\",\n  \"fieldInvalidForExpirationDate\" : \"Cette date d'expiration est incorrecte.\",\n  \"fieldInvalidForNumber\" : \"Ce numéro de carte est incorrect.\",\n  \"fieldInvalidForPostalCode\" : \"Ce code postal est incorrect.\",\n  \"noticeOfCollection\" : \"En payant avec ma carte, j'accepte la Politique de confidentialité de PayPal.\",\n  \"genericError\" : \"Une erreur est survenue.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Cette carte bancaire existe déjà en tant que mode de paiement enregistré.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Vérifiez vos informations et réessayez.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Vérifiez vos informations et réessayez.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Erreur réseau. Réessayez.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Échec de la vérification de carte bancaire. Vérifiez vos informations et réessayez.\",\n  \"paypalButtonMustBeUsed\" : \"Utilisez le bouton PayPal pour poursuivre le paiement.\",\n  \"venmoButtonMustBeUsed\": \"Utilisez le bouton Venmo pour poursuivre le paiement.\",\n  \"applePayButtonMustBeUsed\": \"Utilisez le bouton Apple Pay pour poursuivre le paiement.\",\n  \"paypalAccountTokenizationFailedError\" : \"Une erreur est survenue lors de l'ajout du compte PayPal. Réessayez.\",\n  \"paypalFlowFailedError\" : \"Une erreur est survenue lors de la connexion à PayPal. Réessayez.\",\n  \"paypalTokenizationRequestActiveError\" : \"L'autorisation de paiement PayPal est déjà en cours.\",\n  \"venmoCanceledError\" : \"Une erreur est survenue. Vérifiez que la dernière version de l'application Venmo est installée sur votre appareil et que votre navigateur prend en charge la redirection vers Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Impossible de supprimer le mode de paiement, réessayez.\",\n  \"venmoAppFailedError\" : \"Nous n'avons pas trouvé l'application Venmo sur votre appareil.\",\n  \"unsupportedCardTypeError\" : \"Ce type de carte n'est pas pris en charge. Essayez une autre carte.\",\n  \"applePayTokenizationError\" : \"Une erreur réseau est survenue lors du traitement du paiement Apple Pay. Réessayez.\",\n  \"applePayActiveCardError\" : \"Enregistrez une carte prise en charge sur votre portefeuille Apple Pay.\",\n  \"cardholderNameLabel\" : \"Nom du titulaire de la carte\",\n  \"cardNumberLabel\" : \"Numéro de carte\",\n  \"cvvLabel\" : \"Crypto.\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 chiffres)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 chiffres)\",\n  \"cardholderNamePlaceholder\" : \"Nom du titulaire de la carte\",\n  \"expirationDateLabel\" : \"Date d'expiration\",\n  \"expirationDateLabelSubheading\" : \"(MM/AA)\",\n  \"expirationDatePlaceholder\" : \"MM/AA\",\n  \"postalCodeLabel\" : \"Code postal\",\n  \"saveCardLabel\" : \"Enregistrer la carte\",\n  \"payWithCard\" : \"Payer par carte\",\n  \"endingIn\" : \"Se terminant par {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Carte\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],225:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Payer avec {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Choisir un autre mode de paiement\",\n  \"chooseAWayToPay\" : \"Choisir un mode de paiement\",\n  \"otherWaysToPay\" : \"Autres modes de paiement\",\n  \"edit\" : \"Modifier\",\n  \"doneEditing\" : \"Terminé\",\n  \"editPaymentMethods\" : \"Modifier les modes de paiement\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Supprimer la carte {{secondaryIdentifier}}} se terminant par {{identifier}}} ?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Supprimer le compte PayPal {{identifier}}} ?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Souhaitez-vous vraiment supprimer le compte Venmo associé au nom d'utilisateur {{identifier}}} ?\",\n  \"genericDeleteConfirmationMessage\" : \"Souhaitez-vous vraiment supprimer ce mode de paiement ?\",\n  \"deleteCancelButton\" : \"Annuler\",\n  \"deleteConfirmationButton\" : \"Supprimer\",\n  \"fieldEmptyForCvv\" : \"Renseignez un cryptogramme visuel.\",\n  \"fieldEmptyForExpirationDate\" : \"Renseignez une date d'expiration.\",\n  \"fieldEmptyForCardholderName\" : \"Renseignez le nom du titulaire de la carte.\",\n  \"fieldTooLongForCardholderName\" : \"Le nom du titulaire de la carte doit comporter moins de 256 caractères.\",\n  \"fieldEmptyForNumber\" : \"Renseignez un numéro.\",\n  \"fieldEmptyForPostalCode\" : \"Renseignez un code postal.\",\n  \"fieldInvalidForCardholderName\" : \"Le nom de ce titulaire de la carte est incorrect.\",\n  \"fieldInvalidForCvv\" : \"Ce cryptogramme visuel est incorrect.\",\n  \"fieldInvalidForExpirationDate\" : \"Cette date d'expiration est incorrecte.\",\n  \"fieldInvalidForNumber\" : \"Ce numéro de carte est incorrect.\",\n  \"fieldInvalidForPostalCode\" : \"Ce code postal est incorrect.\",\n  \"noticeOfCollection\" : \"En payant avec ma carte, j'accepte la Politique de confidentialité de PayPal.\",\n  \"genericError\" : \"Une erreur est survenue.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Cette carte bancaire existe déjà en tant que mode de paiement enregistré.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Vérifiez vos informations et réessayez.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Vérifiez vos informations et réessayez.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Erreur réseau. Réessayez.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Échec de la vérification de carte bancaire. Vérifiez vos informations et réessayez.\",\n  \"paypalButtonMustBeUsed\" : \"Utilisez le bouton PayPal pour poursuivre le paiement.\",\n  \"venmoButtonMustBeUsed\": \"Utilisez le bouton Venmo pour poursuivre le paiement.\",\n  \"applePayButtonMustBeUsed\": \"Utilisez le bouton Apple Pay pour poursuivre le paiement.\",\n  \"paypalAccountTokenizationFailedError\" : \"Une erreur est survenue lors de l'ajout du compte PayPal. Réessayez.\",\n  \"paypalFlowFailedError\" : \"Une erreur est survenue lors de la connexion à PayPal. Réessayez.\",\n  \"paypalTokenizationRequestActiveError\" : \"L'autorisation de paiement PayPal est déjà en cours.\",\n  \"venmoCanceledError\" : \"Une erreur est survenue. Vérifiez que la dernière version de l'application Venmo est installée sur votre appareil et que votre navigateur prend en charge la redirection vers Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Impossible de supprimer le mode de paiement, réessayez.\",\n  \"venmoAppFailedError\" : \"Nous n'avons pas trouvé l'application Venmo sur votre appareil.\",\n  \"unsupportedCardTypeError\" : \"Ce type de carte n'est pas pris en charge. Essayez une autre carte.\",\n  \"applePayTokenizationError\" : \"Une erreur réseau est survenue lors du traitement du paiement Apple Pay. Réessayez.\",\n  \"applePayActiveCardError\" : \"Enregistrez une carte prise en charge sur votre portefeuille Apple Pay.\",\n  \"cardholderNameLabel\" : \"Nom du titulaire de la carte\",\n  \"cardNumberLabel\" : \"Numéro de carte\",\n  \"cvvLabel\" : \"Crypto.\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 chiffres)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 chiffres)\",\n  \"cardholderNamePlaceholder\" : \"Nom du titulaire de la carte\",\n  \"expirationDateLabel\" : \"Date d'expiration\",\n  \"expirationDateLabelSubheading\" : \"(MM/AA)\",\n  \"expirationDatePlaceholder\" : \"MM/AA\",\n  \"postalCodeLabel\" : \"Code postal\",\n  \"saveCardLabel\" : \"Enregistrer la carte\",\n  \"payWithCard\" : \"Payer par carte\",\n  \"endingIn\" : \"Se termine le {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Carte\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],226:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"תשלום באמצעות {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"עליך לבחור שיטת תשלום אחרת\",\n  \"chooseAWayToPay\" : \"כיצד ברצונך לשלם?\",\n  \"otherWaysToPay\" : \"שיטות תשלום אחרות\",\n  \"edit\" : \"עריכה\",\n  \"doneEditing\" : \"בוצע\",\n  \"editPaymentMethods\" : \"עריכת שיטות תשלום\",\n  \"CreditCardDeleteConfirmationMessage\" : \"למחוק {{secondaryIdentifier}} הכרטיס המסתיים {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"למחוק PayPal החשבון {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"האם אתה בטוח שברצונך למחוק את חשבון Venmo הרשום תחת שם המשתמש {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"האם אתה בטוח שברצונך למחוק שיטת תשלום זו?\",\n  \"deleteCancelButton\" : \"ביטול\",\n  \"deleteConfirmationButton\" : \"מחיקה\",\n  \"fieldEmptyForCvv\" : \"עליך למלא את מספר האבטחה של כרטיס האשראי.\",\n  \"fieldEmptyForExpirationDate\" : \"עליך למלא את תאריך פקיעת התוקף.\",\n  \"fieldEmptyForCardholderName\" : \"עליך למלא את שם בעל הכרטיס.\",\n  \"fieldTooLongForCardholderName\" : \"שם בעל הכרטיס יכול להכיל 256 תווים לכל היותר.\",\n  \"fieldEmptyForNumber\" : \"עליך למלא את המספר.\",\n  \"fieldEmptyForPostalCode\" : \"עליך למלא את המיקוד.\",\n  \"fieldInvalidForCardholderName\" : \"שם בעל הכרטיס אינו חוקי.\",\n  \"fieldInvalidForCvv\" : \"קוד אבטחה אינו חוקי.\",\n  \"fieldInvalidForExpirationDate\" : \"תאריך פקיעת התוקף אינו חוקי.\",\n  \"fieldInvalidForNumber\" : \"מספר כרטיס האשראי אינו חוקי.\",\n  \"fieldInvalidForPostalCode\" : \"המיקוד אינו חוקי.\",\n  \"noticeOfCollection\" : \"בכך שאני משלם/ת באמצעות כרטיס האשראי שלי, אני מסכים/ה להצהרת הפרטיות של PayPal.\",\n  \"genericError\" : \"נראה שמשהו השתבש בצד שלנו.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"כרטיס אשראי זה כבר שמור כשיטת תשלום.\",\n  \"hostedFieldsFailedTokenizationError\" : \"עליך לבדוק את הפרטים שלך ולנסות שוב.\",\n  \"hostedFieldsFieldsInvalidError\" : \"עליך לבדוק את הפרטים שלך ולנסות שוב.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"שגיאת רשת. עליך לנסות שוב.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"אימות כרטיס האשראי נכשל. עליך לבדוק את הפרטים שלך ולנסות שוב.\",\n  \"paypalButtonMustBeUsed\" : \"להשתמש בלחצן PayPal כדי להמשיך בביצוע התשלום שלך.\",\n  \"venmoButtonMustBeUsed\": \"השתמשו בלחצן Venmo כדי להמשיך בתשלום שלכם.\",\n  \"applePayButtonMustBeUsed\": \"השתמשו בלחצן Apple Pay כדי להמשיך בביצוע התשלום שלכם.\",\n  \"paypalAccountTokenizationFailedError\" : \"משהו השתבש בעת הוספת חשבון PayPal. עליך לנסות שוב.\",\n  \"paypalFlowFailedError\" : \"משהו השתבש בהתחברות ל-PayPal. עליך לנסות שוב.\",\n  \"paypalTokenizationRequestActiveError\" : \"אישור התשלום של PayPal כבר מתבצע.\",\n  \"venmoCanceledError\" : \"נראה שמשהו השתבש. עליך לוודא שהגרסה העדכנית ביותר של אפליקציית Venmo מותקנת במכשיר שלך, ושהדפדפן שלך תומך במעבר ל-Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"לא הצלחנו למחוק את שיטת התשלום, עליך לנסות שוב.\",\n  \"venmoAppFailedError\" : \"לא מצאנו למצוא את אפליקציית Venmo במכשיר שלך.\",\n  \"unsupportedCardTypeError\" : \"סוג כרטיס זה אינו נתמך. עליך לנסות כרטיס אחר.\",\n  \"applePayTokenizationError\" : \"אירעה שגיאת רשת בעת עיבוד תשלום התשלומים של Apple Pay. עליך לנסות שוב.\",\n  \"applePayActiveCardError\" : \"הוספת כרטיס נתמך לארנק Apple Pay שלך.\",\n  \"cardholderNameLabel\" : \"שם בעל הכרטיס\",\n  \"cardNumberLabel\" : \"מספר כרטיס\",\n  \"cvvLabel\" : \"קוד אבטחת כרטיס (CVV)\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 ספרות)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 ספרות)\",\n  \"cardholderNamePlaceholder\" : \"שם בעל הכרטיס\",\n  \"expirationDateLabel\" : \"תאריך פקיעת תוקף\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"MM/YY‏\",\n  \"postalCodeLabel\" : \"מיקוד\",\n  \"saveCardLabel\" : \"שמירת כרטיס אשראי\",\n  \"payWithCard\" : \"לשלם באמצעות כרטיס אשראי\",\n  \"endingIn\" : \"מסתיים בתאריך {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"כרטיס\",\n  \"PayPal\" : \"PayPal‏\",\n  \"PayPal Credit\" : \"PayPal Credit‏\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"אמריקן אקספרס\",\n  \"Discover\" : \"Discover‏\",\n  \"Diners Club\" : \"דיינרס קלאב\",\n  \"Elo\" : \"Elo‏\",\n  \"Hiper\" : \"Hiper‏\",\n  \"Hipercard\" : \"HiperCard‏\",\n  \"MasterCard\" : \"מאסטרקארד\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB‏\",\n  \"Maestro\" : \"Maestro‏\",\n  \"UnionPay\" : \"UnionPay‏\"\n}\n;\n\n},{}],227:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Fizetés ezzel: {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Válasszon másik fizetési módot\",\n  \"chooseAWayToPay\" : \"Válasszon fizetési módot\",\n  \"otherWaysToPay\" : \"Egyéb fizetési módok\",\n  \"edit\" : \"Szerkesztés\",\n  \"doneEditing\" : \"Kész\",\n  \"editPaymentMethods\" : \"Fizetési módok szerkesztése\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Törli a(z) {{identifier}}} végű {{secondaryIdentifier}}} kártyát?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Törli a(z) {{identifier}} PayPal-számlát?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Biztosan törli a(z) {{identifier}} felhasználónévhez tartozó Venmo-számlát?\",\n  \"genericDeleteConfirmationMessage\" : \"Biztosan törli ezt a fizetési módot?\",\n  \"deleteCancelButton\" : \"Mégse\",\n  \"deleteConfirmationButton\" : \"Törlés\",\n  \"fieldEmptyForCvv\" : \"Kérjük, töltse ki a CVV-számot.\",\n  \"fieldEmptyForExpirationDate\" : \"Töltse ki a lejárati dátumot.\",\n  \"fieldEmptyForCardholderName\" : \"Töltse ki a kártyabirtokos nevét.\",\n  \"fieldTooLongForCardholderName\" : \"A kártyatulajdonos neve nem lehet hosszabb mint 256 karakter.\",\n  \"fieldEmptyForNumber\" : \"Töltse ki a számot.\",\n  \"fieldEmptyForPostalCode\" : \"Töltse ki az irányítószámot.\",\n  \"fieldInvalidForCardholderName\" : \"Ez a kártyabirtokos neve nem érvényes.\",\n  \"fieldInvalidForCvv\" : \"Ez a biztonsági kód nem érvényes.\",\n  \"fieldInvalidForExpirationDate\" : \"Ez a lejárati dátum érvénytelen.\",\n  \"fieldInvalidForNumber\" : \"Ez a kártyaszám nem érvényes.\",\n  \"fieldInvalidForPostalCode\" : \"Ez az irányítószám nem érvényes.\",\n  \"noticeOfCollection\" : \"A kártyámmal történő fizetés révén elfogadom a PayPal Adatvédelmi nyilatkozatát.\",\n  \"genericError\" : \"Hiba történt a mi oldalunkon.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Ez a hitelkártya már szerepel mentett fizetési módként.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Ellenőrizze az adatait, majd próbálja újra.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Ellenőrizze az adatait, majd próbálja újra.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Hálózati hiba. Próbálja újra.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"A hitelkártya hitelesítése sikertelen. Ellenőrizze az adatait, majd próbálja újra.\",\n  \"paypalButtonMustBeUsed\" : \"A fizetés folytatásához használja a PayPal-gombot.\",\n  \"venmoButtonMustBeUsed\": \"Használja a Venmo-gombot a fizetés folytatásához.\",\n  \"applePayButtonMustBeUsed\": \"A fizetés folytatásához használja az Apple Pay-gombot.\",\n  \"paypalAccountTokenizationFailedError\" : \"Hiba történt a PayPal-számla hozzáadása közben. Próbálja újra.\",\n  \"paypalFlowFailedError\" : \"Hiba történt a PayPalhoz való kapcsolódás közben. Próbálja újra.\",\n  \"paypalTokenizationRequestActiveError\" : \"A PayPal-fizetés engedélyezése már folyamatban van.\",\n  \"venmoCanceledError\" : \"Hiba történt. Ellenőrizze, hogy eszközére a Venmo-alkalmazás legfrissebb verziója van-e telepítve, és hogy a böngészője támogatja-e a Venmo-ra történő átváltást.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Nem sikerült törölni a fizetési módot, próbálja újra.\",\n  \"venmoAppFailedError\" : \"A Venmo alkalmazást nem találja a rendszer az eszközön.\",\n  \"unsupportedCardTypeError\" : \"Ez a kártyatípus nem támogatott. Próbáljon meg egy másik kártyát.\",\n  \"applePayTokenizationError\" : \"Hálózati hiba történt az Apple Pay-kifizetés közben. Próbálja újra.\",\n  \"applePayActiveCardError\" : \"Adjon egy támogatott kártyát az Apple Pay pénztárcához.\",\n  \"cardholderNameLabel\" : \"Kártyabirtokos neve\",\n  \"cardNumberLabel\" : \"Kártyaszám\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 számjegy)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 számjegy)\",\n  \"cardholderNamePlaceholder\" : \"Kártyabirtokos neve\",\n  \"expirationDateLabel\" : \"Lejárati dátum\",\n  \"expirationDateLabelSubheading\" : \"(HH/ÉÉ)\",\n  \"expirationDatePlaceholder\" : \"HH/ÉÉ\",\n  \"postalCodeLabel\" : \"Irányítószám\",\n  \"saveCardLabel\" : \"Kártya mentése\",\n  \"payWithCard\" : \"Fizetés bankkártyával vagy hitelkártyával\",\n  \"endingIn\" : \"{{lastFourCardDigits}}} végű\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Kártya\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],228:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Membayar dengan {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Pilih metode pembayaran lain\",\n  \"chooseAWayToPay\" : \"Pilih cara pembayaran\",\n  \"otherWaysToPay\" : \"Cara lain untuk membayar\",\n  \"edit\" : \"Edit\",\n  \"doneEditing\" : \"Selesai\",\n  \"editPaymentMethods\" : \"Edit metode pembayaran\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Hapus kartu {{secondaryIdentifier}} yang berakhiran dengan {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Hapus rekening PayPal {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Yakin ingin menghapus rekening Venmo dengan nama pengguna {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Yakin ingin menghapus metode pembayaran ini?\",\n  \"deleteCancelButton\" : \"Batalkan\",\n  \"deleteConfirmationButton\" : \"Hapus\",\n  \"fieldEmptyForCvv\" : \"Mohon mengisi CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Silakan mengisi tanggal kedaluwarsa.\",\n  \"fieldEmptyForCardholderName\" : \"Silakan mengisi nama pemilik kartu.\",\n  \"fieldTooLongForCardholderName\" : \"Nama pemilik kartu harus kurang dari 256 karakter.\",\n  \"fieldEmptyForNumber\" : \"Mohon mengisi angkanya.\",\n  \"fieldEmptyForPostalCode\" : \"Mohon mengisi kode pos.\",\n  \"fieldInvalidForCardholderName\" : \"Nama pemilik kartu ini tidak valid.\",\n  \"fieldInvalidForCvv\" : \"Kode keamanan ini tidak valid.\",\n  \"fieldInvalidForExpirationDate\" : \"Tanggal kedaluwarsa ini tidak valid.\",\n  \"fieldInvalidForNumber\" : \"Nomor kartu ini tidak valid.\",\n  \"fieldInvalidForPostalCode\" : \"Kode pos ini tidak valid.\",\n  \"noticeOfCollection\" : \"Dengan membayar menggunakan kartu, saya menyetujui Pernyataan Privasi PayPal.\",\n  \"genericError\" : \"Ada yang salah pada sistem kami.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Kartu kredit ini telah ada sebelumnya sebagai metode pembayaran tersimpan.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Mohon periksa informasi Anda dan coba lagi.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Mohon periksa informasi Anda dan coba lagi.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Kesalahan jaringan. Mohon coba lagi.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Verifikasi kartu kredit gagal. Mohon periksa informasi Anda dan coba lagi.\",\n  \"paypalButtonMustBeUsed\" : \"Gunakan tombol PayPal untuk melanjutkan pembayaran.\",\n  \"venmoButtonMustBeUsed\": \"Gunakan tombol Venmo untuk melanjutkan pembayaran Anda.\",\n  \"applePayButtonMustBeUsed\": \"Gunakan tombol Apple Pay untuk melanjutkan pembayaran.\",\n  \"paypalAccountTokenizationFailedError\" : \"Terjadi kesalahan saat menambahkan rekening PayPal. Mohon coba lagi.\",\n  \"paypalFlowFailedError\" : \"Terjadi kesalahan ketika menghubungkan ke PayPal. Mohon coba lagi.\",\n  \"paypalTokenizationRequestActiveError\" : \"Otorisasi pembayaran PayPal sedang diproses.\",\n  \"venmoCanceledError\" : \"Terjadi kesalahan. Pastikan Anda memiliki aplikasi Venmo versi terbaru di perangkat dan peramban Anda mendukung peralihan ke Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Tidak dapat menghapus metode pembayaran, coba lagi.\",\n  \"venmoAppFailedError\" : \"Aplikasi Venmo tidak dapat ditemukan di perangkat Anda.\",\n  \"unsupportedCardTypeError\" : \"Jenis kartu ini tidak didukung. Mohon coba kartu lainnya.\",\n  \"applePayTokenizationError\" : \"Terjadi kesalahan pada jaringan saat memproses pembayaran Apple Pay. Mohon coba lagi.\",\n  \"applePayActiveCardError\" : \"Tambahkan kartu yang didukung oleh wallet Apple Pay Anda.\",\n  \"cardholderNameLabel\" : \"Nama Pemilik Kartu\",\n  \"cardNumberLabel\" : \"Nomor Kartu\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 angka)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 angka)\",\n  \"cardholderNamePlaceholder\" : \"Nama Pemilik Kartu\",\n  \"expirationDateLabel\" : \"Tanggal Kedaluwarsa\",\n  \"expirationDateLabelSubheading\" : \"(BB/TT)\",\n  \"expirationDatePlaceholder\" : \"BB/TT\",\n  \"postalCodeLabel\" : \"Kode Pos\",\n  \"saveCardLabel\" : \"Simpan kartu\",\n  \"payWithCard\" : \"Bayar dengan kartu\",\n  \"endingIn\" : \"Berakhiran dengan {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Kartu\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Jelajahi\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],229:[function(require,module,exports){\n/* eslint-disable camelcase */\n'use strict';\n\nvar assign = require('../lib/assign').assign;\n\nvar fiveCharacterLocales = {\n  ar_EG: require('./ar_EG'),\n  cs_CZ: require('./cs_CZ'),\n  da_DK: require('./da_DK'),\n  de_DE: require('./de_DE'),\n  el_GR: require('./el_GR'),\n  en_AU: require('./en_AU'),\n  en_GB: require('./en_GB'),\n  en_IN: require('./en_IN'),\n  en_US: require('./en_US'),\n  es_ES: require('./es_ES'),\n  es_XC: require('./es_XC'),\n  fi_FI: require('./fi_FI'),\n  fr_CA: require('./fr_CA'),\n  fr_FR: require('./fr_FR'),\n  fr_XC: require('./fr_XC'),\n  he_IL: require('./he_IL'),\n  hu_HU: require('./hu_HU'),\n  id_ID: require('./id_ID'),\n  it_IT: require('./it_IT'),\n  ja_JP: require('./ja_JP'),\n  ko_KR: require('./ko_KR'),\n  nl_NL: require('./nl_NL'),\n  no_NO: require('./no_NO'),\n  pl_PL: require('./pl_PL'),\n  pt_BR: require('./pt_BR'),\n  pt_PT: require('./pt_PT'),\n  ru_RU: require('./ru_RU'),\n  sk_SK: require('./sk_SK'),\n  sv_SE: require('./sv_SE'),\n  th_TH: require('./th_TH'),\n  zh_CN: require('./zh_CN'),\n  zh_HK: require('./zh_HK'),\n  zh_TW: require('./zh_TW'),\n  zh_XC: require('./zh_XC')\n};\n\nvar twoCharacterLocaleAliases = {\n  ar: fiveCharacterLocales.ar_EG,\n  cs: fiveCharacterLocales.cs_CZ,\n  da: fiveCharacterLocales.da_DK,\n  de: fiveCharacterLocales.de_DE,\n  el: fiveCharacterLocales.el_GR,\n  en: fiveCharacterLocales.en_US,\n  es: fiveCharacterLocales.es_ES,\n  fi: fiveCharacterLocales.fi_FI,\n  fr: fiveCharacterLocales.fr_FR,\n  id: fiveCharacterLocales.id_ID,\n  it: fiveCharacterLocales.it_IT,\n  hu: fiveCharacterLocales.hu_HU,\n  ja: fiveCharacterLocales.ja_JP,\n  ko: fiveCharacterLocales.ko_KR,\n  nl: fiveCharacterLocales.nl_NL,\n  no: fiveCharacterLocales.no_NO,\n  pl: fiveCharacterLocales.pl_PL,\n  pt: fiveCharacterLocales.pt_PT,\n  ru: fiveCharacterLocales.ru_RU,\n  sk: fiveCharacterLocales.sk_SK,\n  sv: fiveCharacterLocales.sv_SE,\n  th: fiveCharacterLocales.th_TH,\n  zh: fiveCharacterLocales.zh_CN\n};\n\nmodule.exports = {\n  twoCharacterLocaleAliases: twoCharacterLocaleAliases,\n  fiveCharacterLocales: fiveCharacterLocales,\n  translations: assign({}, twoCharacterLocaleAliases, fiveCharacterLocales)\n};\n/* eslint-enable camelcase */\n\n},{\"../lib/assign\":195,\"./ar_EG\":211,\"./cs_CZ\":212,\"./da_DK\":213,\"./de_DE\":214,\"./el_GR\":215,\"./en_AU\":216,\"./en_GB\":217,\"./en_IN\":218,\"./en_US\":219,\"./es_ES\":220,\"./es_XC\":221,\"./fi_FI\":222,\"./fr_CA\":223,\"./fr_FR\":224,\"./fr_XC\":225,\"./he_IL\":226,\"./hu_HU\":227,\"./id_ID\":228,\"./it_IT\":230,\"./ja_JP\":231,\"./ko_KR\":232,\"./nl_NL\":233,\"./no_NO\":234,\"./pl_PL\":235,\"./pt_BR\":236,\"./pt_PT\":237,\"./ru_RU\":238,\"./sk_SK\":239,\"./sv_SE\":240,\"./th_TH\":241,\"./zh_CN\":242,\"./zh_HK\":243,\"./zh_TW\":244,\"./zh_XC\":245}],230:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Metodo di pagamento: {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Scegli un altro metodo di pagamento\",\n  \"chooseAWayToPay\" : \"Scegli un metodo di pagamento\",\n  \"otherWaysToPay\" : \"Altri metodi di pagamento\",\n  \"edit\" : \"Modifica\",\n  \"doneEditing\" : \"Fine\",\n  \"editPaymentMethods\" : \"Modifica metodi di pagamento\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Eliminare la carta {{secondaryIdentifier}} le cui ultime cifre sono {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Eliminare il conto PayPal {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Vuoi davvero eliminare il conto Venmo con il nome utente {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Vuoi davvero eliminare questo metodo di pagamento?\",\n  \"deleteCancelButton\" : \"Annulla\",\n  \"deleteConfirmationButton\" : \"Rimuovi\",\n  \"fieldEmptyForCvv\" : \"Compila un CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Compila una data di scadenza.\",\n  \"fieldEmptyForCardholderName\" : \"Compila un nome del titolare.\",\n  \"fieldTooLongForCardholderName\" : \"Il nome del titolare della carta non può contenere più di 256 caratteri.\",\n  \"fieldEmptyForNumber\" : \"Compila un numero.\",\n  \"fieldEmptyForPostalCode\" : \"Compila un CAP.\",\n  \"fieldInvalidForCardholderName\" : \"Il nome del titolare non è valido.\",\n  \"fieldInvalidForCvv\" : \"Il codice di sicurezza non è valido.\",\n  \"fieldInvalidForExpirationDate\" : \"La data di scadenza non è valida.\",\n  \"fieldInvalidForNumber\" : \"Il numero di carta non è valido.\",\n  \"fieldInvalidForPostalCode\" : \"Il CAP non è valido.\",\n  \"noticeOfCollection\" : \"Pagando con la carta, accetto la Dichiarazione sulla privacy di PayPal.\",\n  \"genericError\" : \"Si è verificato un errore nei nostri sistemi.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Questa carta di credito esiste già come metodo di pagamento salvato.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Controlla i tuoi dati e riprova.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Controlla i tuoi dati e riprova.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Errore di rete. Riprova.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Verifica della carta di credito non riuscita. Controlla i tuoi dati e riprova.\",\n  \"paypalButtonMustBeUsed\" : \"Usa il pulsante PayPal per continuare con il pagamento.\",\n  \"venmoButtonMustBeUsed\": \"Usa il pulsante Venmo per continuare il pagamento.\",\n  \"applePayButtonMustBeUsed\": \"Usa il pulsante Apple Pay per continuare con il pagamento.\",\n  \"paypalAccountTokenizationFailedError\" : \"Si è verificato un errore durante l'aggiunta del conto PayPal. Riprova.\",\n  \"paypalFlowFailedError\" : \"Si è verificato un errore durante la connessione a PayPal. Riprova.\",\n  \"paypalTokenizationRequestActiveError\" : \"Autorizzazione di pagamento PayPal già in corso.\",\n  \"venmoCanceledError\" : \"Si è verificato un errore. Assicurati di avere installato la versione più recente dell'app Venmo sul tuo dispositivo e che il tuo browser supporti il passaggio a Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Impossibile eliminare il metodo di pagamento, riprova.\",\n  \"venmoAppFailedError\" : \"Impossibile trovare l'app Venmo sul tuo dispositivo.\",\n  \"unsupportedCardTypeError\" : \"Questo tipo di carta non è supportato. Prova con un'altra carta.\",\n  \"applePayTokenizationError\" : \"Si è verificato un errore di rete durante l'elaborazione del pagamento Apple Pay. Riprova.\",\n  \"applePayActiveCardError\" : \"Aggiungi una carta supportata al tuo wallet Apple Pay.\",\n  \"cardholderNameLabel\" : \"Nome del titolare\",\n  \"cardNumberLabel\" : \"Numero di carta\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 cifre)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 cifre)\",\n  \"cardholderNamePlaceholder\" : \"Nome del titolare\",\n  \"expirationDateLabel\" : \"Data di scadenza\",\n  \"expirationDateLabelSubheading\" : \"(MM/AA)\",\n  \"expirationDatePlaceholder\" : \"MM/AA\",\n  \"postalCodeLabel\" : \"CAP\",\n  \"saveCardLabel\" : \"Salva carta\",\n  \"payWithCard\" : \"Paga con una carta\",\n  \"endingIn\" : \"Le ultime cifre sono {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Carta\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],231:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"{{paymentSource}}でのお支払い\",\n  \"chooseAnotherWayToPay\" : \"別の支払方法を選択してください\",\n  \"chooseAWayToPay\" : \"支払方法を選択してください\",\n  \"otherWaysToPay\" : \"その他の支払方法\",\n  \"edit\" : \"編集\",\n  \"doneEditing\" : \"完了\",\n  \"editPaymentMethods\" : \"支払方法の編集\",\n  \"CreditCardDeleteConfirmationMessage\" : \"{{secondaryIdentifier}}カード(末尾番号: {{identifier}})を削除しますか?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"PayPalアカウント{{identifier}}を削除しますか?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"ユーザー名{{identifier}}のVenmoアカウントを削除してよろしいですか?\",\n  \"genericDeleteConfirmationMessage\" : \"この支払方法を削除しますか?\",\n  \"deleteCancelButton\" : \"キャンセル\",\n  \"deleteConfirmationButton\" : \"削除\",\n  \"fieldEmptyForCvv\" : \"CVVを入力してください。\",\n  \"fieldEmptyForExpirationDate\" : \"有効期限を入力してください。\",\n  \"fieldEmptyForCardholderName\" : \"カード保有者の名前を入力してください。\",\n  \"fieldTooLongForCardholderName\" : \"カード保有者の名前は256文字未満にしてください。\",\n  \"fieldEmptyForNumber\" : \"番号を入力してください。\",\n  \"fieldEmptyForPostalCode\" : \"郵便番号を入力してください。\",\n  \"fieldInvalidForCardholderName\" : \"このカード保有者の名前は無効です。\",\n  \"fieldInvalidForCvv\" : \"このセキュリティコードは無効です。\",\n  \"fieldInvalidForExpirationDate\" : \"この有効期限は無効です。\",\n  \"fieldInvalidForNumber\" : \"このカード番号は無効です。\",\n  \"fieldInvalidForPostalCode\" : \"この郵便番号は無効です。\",\n  \"noticeOfCollection\" : \"カードで支払うことにより、PayPalプライバシーステートメントに同意したものとみなされます。\",\n  \"genericError\" : \"弊社側で問題が発生しました。\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"このクレジットカードは、保存済みの支払方法としてすでに存在します。\",\n  \"hostedFieldsFailedTokenizationError\" : \"情報を確認してもう一度お試しください。\",\n  \"hostedFieldsFieldsInvalidError\" : \"情報を確認してもう一度お試しください。\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"ネットワークエラーです。再度お試しください。\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"クレジットカードの認証に失敗しました。情報を確認してもう一度お試しください。\",\n  \"paypalButtonMustBeUsed\" : \"支払いを続行するには、PayPalボタンを使用します。\",\n  \"venmoButtonMustBeUsed\": \"お支払いを続行するには、Venmoボタンを使用してください。\",\n  \"applePayButtonMustBeUsed\": \"Apple Payボタンを使用してお支払いを続行してください。\",\n  \"paypalAccountTokenizationFailedError\" : \"PayPalアカウントの追加中に問題が発生しました。再度お試しください。\",\n  \"paypalFlowFailedError\" : \"PayPalへの接続に問題が発生しました。再度お試しください。\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPalの支払い承認はすでに処理中です。\",\n  \"venmoCanceledError\" : \"問題が発生しました。お使いの端末にVenmoアプリの最新バージョンがインストールされており、お使いのブラウザがVenmoへの切り替えをサポートしていることをご確認ください。\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"支払方法を削除できない場合は、もう一度お試しください。\",\n  \"venmoAppFailedError\" : \"お客さまの端末でVenmoアプリを見つけることができませんでした。\",\n  \"unsupportedCardTypeError\" : \"このカードのタイプはサポートされていません。別のカードをご使用ください。\",\n  \"applePayTokenizationError\" : \"Apple Payの支払いの処理中にネットワークエラーが発生しました。再度お試しください。\",\n  \"applePayActiveCardError\" : \"Apple Payウォレットに対応しているカードを追加してください。\",\n  \"cardholderNameLabel\" : \"カード保有者の名前\",\n  \"cardNumberLabel\" : \"カード番号\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3桁)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4桁)\",\n  \"cardholderNamePlaceholder\" : \"カード保有者の名前\",\n  \"expirationDateLabel\" : \"有効期限\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"MM/YY\",\n  \"postalCodeLabel\" : \"郵便番号\",\n  \"saveCardLabel\" : \"カードを保存\",\n  \"payWithCard\" : \"カードで支払う\",\n  \"endingIn\" : \"末尾番号: {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"カード\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"銀聯(UnionPay)\"\n}\n;\n\n},{}],232:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"결제수단: {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"다른 결제수단을 선택해 주세요.\",\n  \"chooseAWayToPay\" : \"결제수단 선택\",\n  \"otherWaysToPay\" : \"다른 결제수단\",\n  \"edit\" : \"편집\",\n  \"doneEditing\" : \"완료\",\n  \"editPaymentMethods\" : \"결제수단 편집\",\n  \"CreditCardDeleteConfirmationMessage\" : \"{{identifier}}(으)로 끝나는 {{secondaryIdentifier}} 카드를 삭제하시겠습니까?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"PayPal 계정 {{identifier}}을(를) 삭제하시겠습니까?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"사용자 이름 {{identifier}}의 Venmo 계정을 정말 삭제하시겠습니까?\",\n  \"genericDeleteConfirmationMessage\" : \"이 결제수단을 삭제하시겠습니까?\",\n  \"deleteCancelButton\" : \"취소\",\n  \"deleteConfirmationButton\" : \"삭제\",\n  \"fieldEmptyForCvv\" : \"CVV를 입력하세요.\",\n  \"fieldEmptyForExpirationDate\" : \"만료일을 입력하세요.\",\n  \"fieldEmptyForCardholderName\" : \"카드 소유자 이름을 입력하세요.\",\n  \"fieldTooLongForCardholderName\" : \"카드 소유자 이름은 256자 미만이어야 합니다.\",\n  \"fieldEmptyForNumber\" : \"번호를 입력하세요.\",\n  \"fieldEmptyForPostalCode\" : \"우편번호를 입력하세요.\",\n  \"fieldInvalidForCardholderName\" : \"이 카드 소유자 이름은 유효하지 않습니다.\",\n  \"fieldInvalidForCvv\" : \"이 보안 코드는 유효하지 않습니다.\",\n  \"fieldInvalidForExpirationDate\" : \"이 만료일은 유효하지 않습니다.\",\n  \"fieldInvalidForNumber\" : \"이 카드 번호는 유효하지 않습니다.\",\n  \"fieldInvalidForPostalCode\" : \"이 우편번호는 유효하지 않습니다.\",\n  \"noticeOfCollection\" : \"자신의 카드로 결제함으로써 사용자는 PayPal 개인정보 취급방침에 동의합니다.\",\n  \"genericError\" : \"저희 쪽에 문제가 발생했습니다.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"이 신용카드는 이미 저장된 결제수단으로 설정되어 있습니다.\",\n  \"hostedFieldsFailedTokenizationError\" : \"정보를 확인하고 다시 시도해 주세요.\",\n  \"hostedFieldsFieldsInvalidError\" : \"정보를 확인하고 다시 시도해 주세요.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"네트워크 오류입니다. 다시 시도해 주세요.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"신용카드 인증에 실패했습니다. 정보를 확인하고 다시 시도해 주세요.\",\n  \"paypalButtonMustBeUsed\" : \"PayPal 버튼을 사용하여 결제를 계속 진행하세요.\",\n  \"venmoButtonMustBeUsed\": \"결제를 계속하려면 Venmo 버튼을 사용하세요.\",\n  \"applePayButtonMustBeUsed\": \"Apple Pay 버튼을 사용하여 결제를 계속 진행하세요.\",\n  \"paypalAccountTokenizationFailedError\" : \"PayPal 계정을 추가하는 중에 문제가 발생했습니다. 다시 시도해 주세요.\",\n  \"paypalFlowFailedError\" : \"PayPal에 연결하는 데 문제가 발생했습니다. 다시 시도해 주세요.\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal 결제 승인이 이미 진행 중입니다.\",\n  \"venmoCanceledError\" : \"오류가 발생했습니다. 기기에 최신 버전의 Venmo 앱이 설치되어 있고 브라우저가 Venmo로의 전환을 지원하는지 확인하세요.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"결제수단을 삭제할 수 없습니다. 다시 시도해 주세요.\",\n  \"venmoAppFailedError\" : \"기기에서 Venmo 앱을 찾을 수 없습니다.\",\n  \"unsupportedCardTypeError\" : \"이 카드 유형은 지원되지 않습니다. 다른 카드로 시도해 주세요.\",\n  \"applePayTokenizationError\" : \"Apple Pay 결제를 처리하는 동안 네트워크 오류가 발생했습니다. 다시 시도해 주세요.\",\n  \"applePayActiveCardError\" : \"Apple Pay 전자지갑에 지원되는 카드를 추가하세요.\",\n  \"cardholderNameLabel\" : \"카드 소유자 이름\",\n  \"cardNumberLabel\" : \"카드 번호\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3자리)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4자리)\",\n  \"cardholderNamePlaceholder\" : \"카드 소유자 이름\",\n  \"expirationDateLabel\" : \"만료일\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"MM/YY\",\n  \"postalCodeLabel\" : \"우편번호\",\n  \"saveCardLabel\" : \"카드 저장\",\n  \"payWithCard\" : \"카드로 결제\",\n  \"endingIn\" : \"다음으로 끝남: {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"카드\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],233:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Betalen met {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Kies een andere betaalmethode\",\n  \"chooseAWayToPay\" : \"Kies een betaalmethode\",\n  \"otherWaysToPay\" : \"Andere betaalmethoden\",\n  \"edit\" : \"Bewerken\",\n  \"doneEditing\" : \"Klaar\",\n  \"editPaymentMethods\" : \"Betaalmethoden bewerken\",\n  \"CreditCardDeleteConfirmationMessage\" : \"{{secondaryIdentifier}}-kaart eindigend op {{identifier}} verwijderen?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"PayPal-rekening {{identifier}} verwijderen?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Weet je zeker dat je de Venmo-rekening met gebruikersnaam {{identifier}} wilt verwijderen?\",\n  \"genericDeleteConfirmationMessage\" : \"Weet je zeker dat je deze betaalmethode wilt verwijderen?\",\n  \"deleteCancelButton\" : \"Annuleren\",\n  \"deleteConfirmationButton\" : \"Verwijderen\",\n  \"fieldEmptyForCvv\" : \"Vul een CVV in.\",\n  \"fieldEmptyForExpirationDate\" : \"Vul een vervaldatum in.\",\n  \"fieldEmptyForCardholderName\" : \"Vul de naam van de kaarthouder in.\",\n  \"fieldTooLongForCardholderName\" : \"Naam kaarthouder moet minder dan 256 tekens bevatten.\",\n  \"fieldEmptyForNumber\" : \"Vul een nummer in.\",\n  \"fieldEmptyForPostalCode\" : \"Vul een postcode in.\",\n  \"fieldInvalidForCardholderName\" : \"Naam kaarthouder is ongeldig.\",\n  \"fieldInvalidForCvv\" : \"Deze beveiligingscode is ongeldig.\",\n  \"fieldInvalidForExpirationDate\" : \"Deze vervaldatum is ongeldig.\",\n  \"fieldInvalidForNumber\" : \"Dit kaartnummer is ongeldig.\",\n  \"fieldInvalidForPostalCode\" : \"Deze postcode is ongeldig.\",\n  \"noticeOfCollection\" : \"Door met mijn kaart te betalen, ga ik akkoord met de PayPal Privacyverklaring.\",\n  \"genericError\" : \"Er is aan onze kant iets fout gegaan.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Deze creditcard bestaat al als opgeslagen betaalmethode.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Controleer je gegevens en probeer het opnieuw.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Controleer je gegevens en probeer het opnieuw.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Netwerkfout. Probeer het opnieuw.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Verificatie van creditcard is mislukt. Controleer je gegevens en probeer het opnieuw.\",\n  \"paypalButtonMustBeUsed\" : \"Gebruik de PayPal-knop om door te gaan met je betaling.\",\n  \"venmoButtonMustBeUsed\": \"Gebruik de Venmo-knop om door te gaan met je betaling.\",\n  \"applePayButtonMustBeUsed\": \"Gebruik de knop Apple Pay om door te gaan met je betaling.\",\n  \"paypalAccountTokenizationFailedError\" : \"Er is iets fout gegaan bij het toevoegen van de PayPal-rekening. Probeer het opnieuw.\",\n  \"paypalFlowFailedError\" : \"Er is iets fout gegaan bij het verbinden met PayPal. Probeer het opnieuw.\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal-betaalautorisatie is al in voortgang.\",\n  \"venmoCanceledError\" : \"Er is iets fout gegaan. Zorg ervoor dat je de recentste versie van de Venmo-app op je apparaat geïnstalleerd hebt en dat je browser ondersteuning biedt voor overschakelen naar Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Kan betaalmethode niet verwijderen. Probeer het opnieuw.\",\n  \"venmoAppFailedError\" : \"De Venmo-app is niet gevonden op je apparaat.\",\n  \"unsupportedCardTypeError\" : \"Dit kaarttype wordt niet ondersteund. Gebruik een andere kaart.\",\n  \"applePayTokenizationError\" : \"Er is een netwerkfout opgetreden bij het verwerken van de Apple Pay-betaling. Probeer het opnieuw.\",\n  \"applePayActiveCardError\" : \"Voeg een ondersteunde kaart toe aan je Apple Pay-wallet.\",\n  \"cardholderNameLabel\" : \"Naam kaarthouder\",\n  \"cardNumberLabel\" : \"Kaartnummer\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 cijfers)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 cijfers)\",\n  \"cardholderNamePlaceholder\" : \"Naam kaarthouder\",\n  \"expirationDateLabel\" : \"Vervaldatum\",\n  \"expirationDateLabelSubheading\" : \"(mm/jj)\",\n  \"expirationDatePlaceholder\" : \"mm/jj\",\n  \"postalCodeLabel\" : \"Postcode\",\n  \"saveCardLabel\" : \"Kaart opslaan\",\n  \"payWithCard\" : \"Betalen met kaart\",\n  \"endingIn\" : \"Eindigend op {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Kaart\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],234:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Betaler med {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Velg en annen betalingsmåte\",\n  \"chooseAWayToPay\" : \"Velg betalingsmåte\",\n  \"otherWaysToPay\" : \"Andre betalingsmåter\",\n  \"edit\" : \"Endre\",\n  \"doneEditing\" : \"Ferdig\",\n  \"editPaymentMethods\" : \"Rediger betalingsmetode\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Vil du slette {{secondaryIdentifier}}-kortet som slutter på {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Vil du slette PayPal-konto {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Er du sikker på at du vil slette Venmo-kontoen med brukernavnet {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Er du sikker på at du vil slette denne betalingsmetoden?\",\n  \"deleteCancelButton\" : \"Avbryt\",\n  \"deleteConfirmationButton\" : \"Slett\",\n  \"fieldEmptyForCvv\" : \"Fyll ut sikkerhetskode (CVV).\",\n  \"fieldEmptyForExpirationDate\" : \"Fyll ut utløpsdato.\",\n  \"fieldEmptyForCardholderName\" : \"Fyll ut kortinnehavers navn.\",\n  \"fieldTooLongForCardholderName\" : \"Kortinnehaverens må ha mindre enn 256 tegn.\",\n  \"fieldEmptyForNumber\" : \"Fyll ut nummer.\",\n  \"fieldEmptyForPostalCode\" : \"Fyll ut postnummer.\",\n  \"fieldInvalidForCardholderName\" : \"Denne kortinnehaverens navn er ikke gyldig.\",\n  \"fieldInvalidForCvv\" : \"Denne sikkerhetskoden er ikke gyldig.\",\n  \"fieldInvalidForExpirationDate\" : \"Denne utløpsdatoen er ikke gyldig.\",\n  \"fieldInvalidForNumber\" : \"Dette kortnummeret er ikke gyldig.\",\n  \"fieldInvalidForPostalCode\" : \"Dette postnummeret er ikke gyldig.\",\n  \"noticeOfCollection\" : \"Ved å betale med kortet godtar jeg PayPals personvernerklæring.\",\n  \"genericError\" : \"Noe gikk galt hos oss.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Dette betalingskortet finnes allerede som en lagret betalingsmetode.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Kontroller informasjonen, og prøv på nytt.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Kontroller informasjonen, og prøv på nytt.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Nettverksfeil. Prøv på nytt.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Kontroll av betalingskort mislyktes. Kontroller informasjonen, og prøv på nytt.\",\n  \"paypalButtonMustBeUsed\" : \"Bruk PayPal-knappen for å fortsette med betalingen.\",\n  \"venmoButtonMustBeUsed\": \"Bruk Venmo-knappen for å fortsette med betalingen.\",\n  \"applePayButtonMustBeUsed\": \"Bruk Apple Pay-knappen for å fortsette med betalingen.\",\n  \"paypalAccountTokenizationFailedError\" : \"Kan ikke legge til PayPal-kontoen. Prøv på nytt.\",\n  \"paypalFlowFailedError\" : \"Kan ikke koble til PayPal. Prøv på nytt.\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPals prosess for betalingsgodkjenning har allerede startet.\",\n  \"venmoCanceledError\" : \"Noe gikk galt. Kontroller at den nyeste versjonen av Venmo-appen er installert på enheten din, og at nettleseren din støtter bruk av Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Kan ikke slette betalingsmetoden. Prøv på nytt.\",\n  \"venmoAppFailedError\" : \"Finner ikke Venmo-appen på enheten.\",\n  \"unsupportedCardTypeError\" : \"Denne korttypen støttes ikke. Prøv et annet kort.\",\n  \"applePayTokenizationError\" : \"Nettverksfeil under behandling av Apple Pay-betalingen. Prøv på nytt.\",\n  \"applePayActiveCardError\" : \"Legg til et støttet kort i e-lommeboken for Apple Pay.\",\n  \"cardholderNameLabel\" : \"Kortinnehavers navn\",\n  \"cardNumberLabel\" : \"Kortnummer\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 sifre)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 sifre)\",\n  \"cardholderNamePlaceholder\" : \"Kortinnehavers navn\",\n  \"expirationDateLabel\" : \"Utløpsdato\",\n  \"expirationDateLabelSubheading\" : \"(MM/ÅÅ)\",\n  \"expirationDatePlaceholder\" : \"MM/ÅÅ\",\n  \"postalCodeLabel\" : \"Postnummer\",\n  \"saveCardLabel\" : \"Lagre kort\",\n  \"payWithCard\" : \"Betal med kort\",\n  \"endingIn\" : \"Slutter på {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Kort\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],235:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Źródło finansowania płatności: {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Wybierz inny sposób płatności.\",\n  \"chooseAWayToPay\" : \"Wybierz sposób płatności\",\n  \"otherWaysToPay\" : \"Inne sposoby płatności\",\n  \"edit\" : \"Edytuj\",\n  \"doneEditing\" : \"Gotowe\",\n  \"editPaymentMethods\" : \"Edytuj formy płatności\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Usunąć kartę {{secondaryIdentifier}} o numerze zakończonym cyframi {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Usunąć {{identifier}}konta PayPal?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Czy na pewno chcesz usunąć konto Venmo o nazwie użytkownika {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Na pewno chcesz usunąć tę formę płatności?\",\n  \"deleteCancelButton\" : \"Anuluj\",\n  \"deleteConfirmationButton\" : \"Usuń\",\n  \"fieldEmptyForCvv\" : \"Wpisz kod CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Wpisz datę ważności.\",\n  \"fieldEmptyForCardholderName\" : \"Podaj imię i nazwisko posiadacza karty.\",\n  \"fieldTooLongForCardholderName\" : \"Imię i nazwisko posiadacza karty musi mieć mniej niż 256 znaków.\",\n  \"fieldEmptyForNumber\" : \"Podaj numer.\",\n  \"fieldEmptyForPostalCode\" : \"Podaj kod pocztowy.\",\n  \"fieldInvalidForCardholderName\" : \"To imię i nazwisko posiadacza karty jest nieprawidłowe.\",\n  \"fieldInvalidForCvv\" : \"Ten kod bezpieczeństwa jest nieprawidłowy.\",\n  \"fieldInvalidForExpirationDate\" : \"Ta data ważności jest nieprawidłowa.\",\n  \"fieldInvalidForNumber\" : \"Numer karty jest nieprawidłowy.\",\n  \"fieldInvalidForPostalCode\" : \"Kod pocztowy jest nieprawidłowy.\",\n  \"noticeOfCollection\" : \"Dokonując płatności kartą, akceptuję Informacje dotyczące zasad ochrony danych firmy PayPal.\",\n  \"genericError\" : \"Wystąpił błąd po naszej stronie.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Ta karta kredytowa istnieje jako zapisana forma płatności.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Sprawdź swoje informacje i spróbuj ponownie.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Sprawdź swoje informacje i spróbuj ponownie.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Błąd sieci. Spróbuj ponownie.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Weryfikacja karty kredytowej nie powiodła się. Sprawdź swoje informacje i spróbuj ponownie.\",\n  \"paypalButtonMustBeUsed\" : \"Aby kontynuować płatność, użyj przycisku PayPal.\",\n  \"venmoButtonMustBeUsed\": \"Użyj przycisku Venmo, aby kontynuować płatność\",\n  \"applePayButtonMustBeUsed\": \"Aby kontynuować płatność, użyj przycisku Apple Pay.\",\n  \"paypalAccountTokenizationFailedError\" : \"Coś poszło nie tak przy dodawaniu konta PayPal. Spróbuj ponownie.\",\n  \"paypalFlowFailedError\" : \"Wystąpił problem przy nawiązywaniu połączenia z PayPal. Spróbuj ponownie.\",\n  \"paypalTokenizationRequestActiveError\" : \"Autoryzacja płatności PayPal jest w trakcie realizacji.\",\n  \"venmoCanceledError\" : \"Coś poszło nie tak. Upewnij się, że na Twoim urządzeniu jest zainstalowana najnowsza wersja aplikacji Venmo, a Twoja przeglądarka obsługuje przełączanie na Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Nie można usunąć formy płatności, spróbuj ponownie.\",\n  \"venmoAppFailedError\" : \"Aplikacja Venmo nie została odnaleziona na Twoim urządzeniu.\",\n  \"unsupportedCardTypeError\" : \"Ten typ karty nie jest obsługiwany. Spróbuj użyć innej karty.\",\n  \"applePayTokenizationError\" : \"Wystąpił błąd sieciowy podczas przetwarzania płatności Apple Pay. Spróbuj ponownie.\",\n  \"applePayActiveCardError\" : \"Dodaj obsługiwaną kartę do portfela Apple Pay.\",\n  \"cardholderNameLabel\" : \"Imię i nazwisko posiadacza karty\",\n  \"cardNumberLabel\" : \"Numer karty\",\n  \"cvvLabel\" : \"Kod CVV/CVC2\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 cyfry)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 cyfry)\",\n  \"cardholderNamePlaceholder\" : \"Imię i nazwisko posiadacza karty\",\n  \"expirationDateLabel\" : \"Data ważności\",\n  \"expirationDateLabelSubheading\" : \"(MM/RR)\",\n  \"expirationDatePlaceholder\" : \"MM/RR\",\n  \"postalCodeLabel\" : \"Kod pocztowy\",\n  \"saveCardLabel\" : \"Zapisz kartę\",\n  \"payWithCard\" : \"Zapłać kartą\",\n  \"endingIn\" : \"Numer zakończonym cyframi {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Karta\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],236:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Pagando com {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Escolha outro meio de pagamento\",\n  \"chooseAWayToPay\" : \"Escolha um meio de pagamento\",\n  \"otherWaysToPay\" : \"Outras formas de pagar\",\n  \"edit\" : \"Editar\",\n  \"doneEditing\" : \"Concluído\",\n  \"editPaymentMethods\" : \"Editar meios de pagamento\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Excluir cartão {{secondaryIdentifier}} de final {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Excluir conta do PayPal {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Tem certeza de que deseja excluir a conta do Venmo com nome de usuário {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Tem certeza que deseja excluir este meio de pagamento?\",\n  \"deleteCancelButton\" : \"Cancelar\",\n  \"deleteConfirmationButton\" : \"Excluir\",\n  \"fieldEmptyForCvv\" : \"Preencha um CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Preencha uma data de vencimento.\",\n  \"fieldEmptyForCardholderName\" : \"Preencha um nome para o titular do cartão.\",\n  \"fieldTooLongForCardholderName\" : \"O nome do titular do cartão deve ter menos de 256 caracteres.\",\n  \"fieldEmptyForNumber\" : \"Preencha um número.\",\n  \"fieldEmptyForPostalCode\" : \"Preencha um código postal.\",\n  \"fieldInvalidForCardholderName\" : \"O nome do titular do cartão é inválido.\",\n  \"fieldInvalidForCvv\" : \"Este código de segurança é inválido.\",\n  \"fieldInvalidForExpirationDate\" : \"Esta data de vencimento é inválida.\",\n  \"fieldInvalidForNumber\" : \"O número do cartão é inválido.\",\n  \"fieldInvalidForPostalCode\" : \"Este código postal é inválido.\",\n  \"noticeOfCollection\" : \"Ao pagar com o meu cartão, aceito a Declaração de Privacidade da PayPal.\",\n  \"genericError\" : \"Ocorreu um erro.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Este cartão de crédito já existe como um meio de pagamento salvo.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Verifique as informações e tente novamente.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Verifique as informações e tente novamente.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Erro de rede. Tente novamente.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Falha na verificação do cartão de crédito. Verifique as informações e tente novamente.\",\n  \"paypalButtonMustBeUsed\" : \"Use o botão do PayPal para prosseguir com o pagamento.\",\n  \"venmoButtonMustBeUsed\": \"Utilize o botão Venmo para continuar o seu pagamento.\",\n  \"applePayButtonMustBeUsed\": \"Use o botão Apple Pay para prosseguir com o pagamento.\",\n  \"paypalAccountTokenizationFailedError\" : \"Ocorreu um erro ao adicionar a conta do PayPal. Tente novamente.\",\n  \"paypalFlowFailedError\" : \"Ocorreu um erro na conexão com o PayPal. Tente novamente.\",\n  \"paypalTokenizationRequestActiveError\" : \"A autorização de pagamento do PayPal já está em andamento.\",\n  \"venmoCanceledError\" : \"Ocorreu um erro. Certifique-se de que você tenha a versão mais recente do aplicativo Venmo instalada no seu dispositivo, e que seu navegador aceite a mudança para o Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Não é possível excluir o meio de pagamento, tente novamente.\",\n  \"venmoAppFailedError\" : \"O aplicativo Venmo não foi encontrado no seu dispositivo.\",\n  \"unsupportedCardTypeError\" : \"Este tipo de cartão não é aceito. Tente outro cartão.\",\n  \"applePayTokenizationError\" : \"Ocorreu um erro de rede ao processar o pagamento do Apple Pay. Tente novamente.\",\n  \"applePayActiveCardError\" : \"Adicione um cartão compatível à sua carteira Apple Pay.\",\n  \"cardholderNameLabel\" : \"Nome do titular do cartão\",\n  \"cardNumberLabel\" : \"Número do cartão\",\n  \"cvvLabel\" : \"CSC\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 dígitos)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 dígitos)\",\n  \"cardholderNamePlaceholder\" : \"Nome do titular do cartão\",\n  \"expirationDateLabel\" : \"Data de vencimento\",\n  \"expirationDateLabelSubheading\" : \"(MM/AA)\",\n  \"expirationDatePlaceholder\" : \"MM/AA\",\n  \"postalCodeLabel\" : \"CEP\",\n  \"saveCardLabel\" : \"Salvar cartão\",\n  \"payWithCard\" : \"Pague com seu cartão de crédito\",\n  \"endingIn\" : \"De final {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Cartão\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"Crédito do PayPal\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Descobrir\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],237:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Pagamento com {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Escolher outra forma de pagamento\",\n  \"chooseAWayToPay\" : \"Escolher forma de pagamento\",\n  \"otherWaysToPay\" : \"Outras formas de pagamento\",\n  \"edit\" : \"Editar\",\n  \"doneEditing\" : \"Concluído\",\n  \"editPaymentMethods\" : \"Editar meios de pagamento\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Eliminar cartão {{secondaryIdentifier}} terminado em {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Eliminar conta PayPal {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Quer mesmo eliminar a conta Venmo com o nome de utilizador {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Quer mesmo eliminar este meio de pagamento?\",\n  \"deleteCancelButton\" : \"Cancelar\",\n  \"deleteConfirmationButton\" : \"Eliminar\",\n  \"fieldEmptyForCvv\" : \"Introduza um CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Introduza uma data de validade.\",\n  \"fieldEmptyForCardholderName\" : \"Introduza um nome do titular do cartão.\",\n  \"fieldTooLongForCardholderName\" : \"O Nome do titular do cartão deve ter menos de 256 carateres.\",\n  \"fieldEmptyForNumber\" : \"Introduza um número.\",\n  \"fieldEmptyForPostalCode\" : \"Introduza um código postal.\",\n  \"fieldInvalidForCardholderName\" : \"Este nome do titular do cartão não é válido.\",\n  \"fieldInvalidForCvv\" : \"Este código de segurança não é válido.\",\n  \"fieldInvalidForExpirationDate\" : \"Esta data de validade não é válida.\",\n  \"fieldInvalidForNumber\" : \"Este número de cartão não é válido.\",\n  \"fieldInvalidForPostalCode\" : \"Este código postal não é válido.\",\n  \"noticeOfCollection\" : \"Ao pagar com o meu cartão, aceito a Declaração de Privacidade da PayPal.\",\n  \"genericError\" : \"Tudo indica que houve um problema.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Este cartão de crédito já existe como meio de pagamento guardado.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Verifique as suas informações e tente novamente.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Verifique as suas informações e tente novamente.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Erro de rede. Tente novamente.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"A verificação do cartão de crédito falhou. Verifique as suas informações e tente novamente.\",\n  \"paypalButtonMustBeUsed\" : \"Use o botão PayPal para continuar o seu pagamento.\",\n  \"venmoButtonMustBeUsed\": \"Utilize o botão Venmo para continuar o seu pagamento.\",\n  \"applePayButtonMustBeUsed\": \"Utilize o botão Apple Pay para continuar o seu pagamento.\",\n  \"paypalAccountTokenizationFailedError\" : \"Ocorreu um erro ao adicionar a conta PayPal. Tente novamente.\",\n  \"paypalFlowFailedError\" : \"Ocorreu um erro ao ligar ao PayPal. Tente novamente.\",\n  \"paypalTokenizationRequestActiveError\" : \"A autorização de pagamento com PayPal já está em curso.\",\n  \"venmoCanceledError\" : \"Ocorreu um erro. Certifique-se de que tem a versão mais recente da aplicação Venmo instalada no seu dispositivo e que o seu navegador suporta a mudança para Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Não é possível eliminar o meio de pagamento; tente novamente.\",\n  \"venmoAppFailedError\" : \"A aplicação Venmo não foi encontrada no seu dispositivo.\",\n  \"unsupportedCardTypeError\" : \"Este tipo de cartão não é suportado. Tente com outro cartão.\",\n  \"applePayTokenizationError\" : \"Ocorreu um erro de rede ao processar o pagamento com Apple Pay. Tente novamente.\",\n  \"applePayActiveCardError\" : \"Adicione um cartão suportado à sua carteira Apple Pay.\",\n  \"cardholderNameLabel\" : \"Nome do titular do cartão\",\n  \"cardNumberLabel\" : \"Número do cartão\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 dígitos)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 dígitos)\",\n  \"cardholderNamePlaceholder\" : \"Nome do titular do cartão\",\n  \"expirationDateLabel\" : \"Data de validade\",\n  \"expirationDateLabelSubheading\" : \"(MM/AA)\",\n  \"expirationDatePlaceholder\" : \"MM/AA\",\n  \"postalCodeLabel\" : \"Código postal\",\n  \"saveCardLabel\" : \"Guardar cartão\",\n  \"payWithCard\" : \"Pagar com cartão\",\n  \"endingIn\" : \"Termina em {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Cartão\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],238:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Оплата с помощью {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Выберите другой способ оплаты\",\n  \"chooseAWayToPay\" : \"Выберите способ оплаты\",\n  \"otherWaysToPay\" : \"Другие способы оплаты\",\n  \"edit\" : \"Изменить\",\n  \"doneEditing\" : \"Готово\",\n  \"editPaymentMethods\" : \"Изменить способы оплаты\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Удалить карту {{secondaryIdentifier}} с номером, заканчивающимся на {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Удалить счет PayPal {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Вы действительно хотите удалить счет Venmo с именем пользователя {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Вы действительно хотите удалить этот способ оплаты?\",\n  \"deleteCancelButton\" : \"Отмена\",\n  \"deleteConfirmationButton\" : \"Удалить\",\n  \"fieldEmptyForCvv\" : \"Укажите код безопасности.\",\n  \"fieldEmptyForExpirationDate\" : \"Укажите дату окончания срока действия.\",\n  \"fieldEmptyForCardholderName\" : \"Укажите имя владельца карты.\",\n  \"fieldTooLongForCardholderName\" : \"Имя владельца карты должно содержать не более 256 символов.\",\n  \"fieldEmptyForNumber\" : \"Укажите номер.\",\n  \"fieldEmptyForPostalCode\" : \"Укажите почтовый индекс.\",\n  \"fieldInvalidForCardholderName\" : \"Недопустимое имя владельца карты.\",\n  \"fieldInvalidForCvv\" : \"Недопустимый код безопасности.\",\n  \"fieldInvalidForExpirationDate\" : \"Недопустимая дата истечения срока действия.\",\n  \"fieldInvalidForNumber\" : \"Недопустимый номер карты.\",\n  \"fieldInvalidForPostalCode\" : \"Недопустимый почтовый индекс.\",\n  \"noticeOfCollection\" : \"Выполняя оплату с помощью карты, я соглашаюсь с условиями Положения о конфиденциальности PayPal.\",\n  \"genericError\" : \"Возникла проблема с нашей стороны.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Данная кредитная карта уже существует как сохраненный способ оплаты.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Проверьте правильность ввода данных и повторите попытку.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Проверьте правильность ввода данных и повторите попытку.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Сбой сети. Повторите попытку.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Сбой при проверке кредитной карты. Проверьте правильность ввода данных и повторите попытку.\",\n  \"paypalButtonMustBeUsed\" : \"Используйте кнопку PayPal, чтобы продолжить оплату.\",\n  \"venmoButtonMustBeUsed\": \"Используйте кнопку Venmo, чтобы продолжить оплату.\",\n  \"applePayButtonMustBeUsed\": \"Нажмите кнопку Apple Pay, чтобы продолжить оплату.\",\n  \"paypalAccountTokenizationFailedError\" : \"Возникла ошибка при добавлении счета PayPal. Повторите попытку.\",\n  \"paypalFlowFailedError\" : \"Возникла ошибка при подключении к PayPal. Повторите попытку.\",\n  \"paypalTokenizationRequestActiveError\" : \"Авторизация платежа через PayPal уже выполняется.\",\n  \"venmoCanceledError\" : \"Возникла ошибка. Убедитесь, что на вашем устройстве установлена самая последняя версия приложения Venmo и браузер поддерживает переход на Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Не удалось удалить способ оплаты, повторите попытку.\",\n  \"venmoAppFailedError\" : \"Приложение Venmo не удается обнаружить на вашем устройстве.\",\n  \"unsupportedCardTypeError\" : \"Данный тип карты не поддерживается. Попробуйте воспользоваться другой картой.\",\n  \"applePayTokenizationError\" : \"Возникла ошибка сети при обработке платежа Apple Pay. Повторите попытку.\",\n  \"applePayActiveCardError\" : \"Добавьте поддерживаемую карту в ваш счет Apple Pay.\",\n  \"cardholderNameLabel\" : \"Имя владельца карты\",\n  \"cardNumberLabel\" : \"Номер карты\",\n  \"cvvLabel\" : \"Код безопасности карты CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 цифры)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 цифры)\",\n  \"cardholderNamePlaceholder\" : \"Имя владельца карты\",\n  \"expirationDateLabel\" : \"Дата окончания срока действия\",\n  \"expirationDateLabelSubheading\" : \"(ММ/ГГ)\",\n  \"expirationDatePlaceholder\" : \"ММ/ГГ\",\n  \"postalCodeLabel\" : \"Индекс\",\n  \"saveCardLabel\" : \"Сохранить карту\",\n  \"payWithCard\" : \"Оплатить банковской картой\",\n  \"endingIn\" : \"Заканчивается на {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Карта\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Полезное\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],239:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Spôsob platby: {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Vyberte iný spôsob platby\",\n  \"chooseAWayToPay\" : \"Zvoľte spôsob platby\",\n  \"otherWaysToPay\" : \"Iné spôsoby platby\",\n  \"edit\" : \"Upraviť\",\n  \"doneEditing\" : \"Hotovo\",\n  \"editPaymentMethods\" : \"Upraviť spôsoby platby\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Chcete odstrániť kartu {{secondaryIdentifier}} končiacu sa na {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Chcete odstrániť {{identifier}}účtu PayPal?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Naozaj chcete odstrániť účet Venmo s menom používateľa {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Ste si istí, že chcete tento spôsob platby odstrániť?\",\n  \"deleteCancelButton\" : \"Zrušiť\",\n  \"deleteConfirmationButton\" : \"Odstrániť\",\n  \"fieldEmptyForCvv\" : \"Vyplňte kód CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Zadajte dátum skončenia platnosti.\",\n  \"fieldEmptyForCardholderName\" : \"Zadajte meno majiteľa karty.\",\n  \"fieldTooLongForCardholderName\" : \"Meno majiteľa karty musí obsahovať menej ako 256 znakov.\",\n  \"fieldEmptyForNumber\" : \"Zadajte číslo.\",\n  \"fieldEmptyForPostalCode\" : \"Zadajte PSČ.\",\n  \"fieldInvalidForCardholderName\" : \"Toto meno majiteľa karty je neplatné.\",\n  \"fieldInvalidForCvv\" : \"Tento bezpečnostný kód je neplatný.\",\n  \"fieldInvalidForExpirationDate\" : \"Tento dátum skončenia platnosti je neplatný.\",\n  \"fieldInvalidForNumber\" : \"Toto číslo karty je neplatné.\",\n  \"fieldInvalidForPostalCode\" : \"Toto PSČ je neplatné.\",\n  \"noticeOfCollection\" : \"Zaplatením kartou vyjadrujem súhlas s Vyhlásením spoločnosti PayPal o ochrane osobných údajov.\",\n  \"genericError\" : \"Vyskytla sa chyba na našej strane.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Táto kreditná karta už existuje ako uložený spôsob platby.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Skontrolujte údaje a skúste to znova.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Skontrolujte údaje a skúste to znova.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Chyba v sieti. Skúste to znova.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Overenie kreditnej karty nebolo úspešné. Skontrolujte údaje a skúste to znova.\",\n  \"paypalButtonMustBeUsed\" : \"Ak chcete pokračovať v platbe, použite tlačidlo PayPal.\",\n  \"venmoButtonMustBeUsed\": \"Ak chcete pokračovať v platbe, použite tlačidlo Venmo.\",\n  \"applePayButtonMustBeUsed\": \"Ak chcete pokračovať v platbe, použite tlačidlo Apple Pay.\",\n  \"paypalAccountTokenizationFailedError\" : \"Vyskytla sa chyba pri pridávaní účtu PayPal. Skúste to znova.\",\n  \"paypalFlowFailedError\" : \"Vyskytla sa chyba pri pripájaní do účtu PayPal. Skúste to znova.\",\n  \"paypalTokenizationRequestActiveError\" : \"Autorizácia platby PayPal už prebieha.\",\n  \"venmoCanceledError\" : \"Vyskytla sa chyba. Skontrolujte, či máte v zariadení nainštalovanú najnovšiu verziu aplikácie Venmo a či prehliadač podporuje prechod na aplikáciu Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Nebolo možné odstrániť spôsob platby, skúste to znova.\",\n  \"venmoAppFailedError\" : \"Aplikáciu Venmo sa vo vašom zariadení nepodarilo nájsť.\",\n  \"unsupportedCardTypeError\" : \"Tento typ karty nie je podporovaný. Prosím skúste inú kartu.\",\n  \"applePayTokenizationError\" : \"Počas spracúvania platby cez Apple Pay došlo k chybe siete. Skúste to znova.\",\n  \"applePayActiveCardError\" : \"Pridajte si podporovanú kartu do peňaženky Apple Pay.\",\n  \"cardholderNameLabel\" : \"Meno majiteľa karty\",\n  \"cardNumberLabel\" : \"Číslo karty\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 číslice)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 číslice)\",\n  \"cardholderNamePlaceholder\" : \"Meno majiteľa karty\",\n  \"expirationDateLabel\" : \"Dátum skončenia platnosti\",\n  \"expirationDateLabelSubheading\" : \"(MM/RR)\",\n  \"expirationDatePlaceholder\" : \"MM/RR\",\n  \"postalCodeLabel\" : \"PSČ\",\n  \"saveCardLabel\" : \"Uložiť kartu\",\n  \"payWithCard\" : \"Zaplatiť kartou\",\n  \"endingIn\" : \"Končí {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Karta\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],240:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"Betalar med {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"Välj ett annat sätt att betala\",\n  \"chooseAWayToPay\" : \"Välj ett sätt att betala\",\n  \"otherWaysToPay\" : \"Andra sätt att betala\",\n  \"edit\" : \"Ändra\",\n  \"doneEditing\" : \"Klart\",\n  \"editPaymentMethods\" : \"Ändra betalningsmetoder\",\n  \"CreditCardDeleteConfirmationMessage\" : \"Ta bort {{secondaryIdentifier}}-kortet som slutar på {{identifier}}?\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"Ta bort PayPal-konto {{identifier}}?\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"Är du säker på att du vill ta bort Venmo-kontot med användarnamnet {{identifier}}?\",\n  \"genericDeleteConfirmationMessage\" : \"Är du säker på att du vill ta bort den här betalningsmetoden?\",\n  \"deleteCancelButton\" : \"Avbryt\",\n  \"deleteConfirmationButton\" : \"Ta bort\",\n  \"fieldEmptyForCvv\" : \"Fyll i ett CVV.\",\n  \"fieldEmptyForExpirationDate\" : \"Fyll i ett utgångsdatum.\",\n  \"fieldEmptyForCardholderName\" : \"Fyll i kortinnehavarens namn.\",\n  \"fieldTooLongForCardholderName\" : \"Namnet på kortinnehavaren måste vara kortare än 256 tecken.\",\n  \"fieldEmptyForNumber\" : \"Fyll i ett nummer.\",\n  \"fieldEmptyForPostalCode\" : \"Fyll i ett postnummer.\",\n  \"fieldInvalidForCardholderName\" : \"Namnet på kortinnehavaren är ogiltigt.\",\n  \"fieldInvalidForCvv\" : \"Den här säkerhetskoden är inte giltig.\",\n  \"fieldInvalidForExpirationDate\" : \"Utgångsdatumet är ogiltigt.\",\n  \"fieldInvalidForNumber\" : \"Det här kortnumret är ogiltigt.\",\n  \"fieldInvalidForPostalCode\" : \"Postnumret är ogiltigt.\",\n  \"noticeOfCollection\" : \"Genom att betala med mitt kort godkänner jag PayPals sekretessmeddelande.\",\n  \"genericError\" : \"Ett fel uppstod.\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"Det här kreditkortet finns redan som en sparad betalningsmetod.\",\n  \"hostedFieldsFailedTokenizationError\" : \"Kontrollera uppgifterna och försök igen.\",\n  \"hostedFieldsFieldsInvalidError\" : \"Kontrollera uppgifterna och försök igen.\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"Nätverksfel. Försök igen.\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"Verifiering av kreditkortet misslyckades. Kontrollera uppgifterna och försök igen.\",\n  \"paypalButtonMustBeUsed\" : \"Använd PayPal-knappen för att fortsätta med din betalning.\",\n  \"venmoButtonMustBeUsed\": \"Använd Venmo-knappen för att fortsätta med din betalning.\",\n  \"applePayButtonMustBeUsed\": \"Använd PayPal-knappen för att fortsätta med din betalning.\",\n  \"paypalAccountTokenizationFailedError\" : \"Något gick fel när du lade till PayPal-kontot. Försök igen.\",\n  \"paypalFlowFailedError\" : \"Något gick fel med att ansluta till PayPal. Försök igen.\",\n  \"paypalTokenizationRequestActiveError\" : \"Godkännande av PayPal-betalning pågår redan.\",\n  \"venmoCanceledError\" : \"Något gick fel. Se till att du har den senaste versionen av Venmo-appen installerad på din enhet och att din webbläsare stöder byte till Venmo.\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"Kan inte ta bort betalningsmetoden, försök igen.\",\n  \"venmoAppFailedError\" : \"Det gick inte att hitta Venmo-appen på din enhet.\",\n  \"unsupportedCardTypeError\" : \"Den här korttypen stöds inte. Prova med ett annat kort.\",\n  \"applePayTokenizationError\" : \"Ett nätverksfel uppstod när Apple Pay-betalningen behandlades. Försök igen.\",\n  \"applePayActiveCardError\" : \"Lägg till ett kort som stöds i din Apple Pay e-plånbok.\",\n  \"cardholderNameLabel\" : \"Kortinnehavarens namn\",\n  \"cardNumberLabel\" : \"Kortnummer\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 siffror)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 siffror)\",\n  \"cardholderNamePlaceholder\" : \"Kortinnehavarens namn\",\n  \"expirationDateLabel\" : \"Utgångsdatum\",\n  \"expirationDateLabelSubheading\" : \"(MM/ÅÅ)\",\n  \"expirationDatePlaceholder\" : \"MM/ÅÅ\",\n  \"postalCodeLabel\" : \"Postnummer\",\n  \"saveCardLabel\" : \"Spara kort\",\n  \"payWithCard\" : \"Betala med kort\",\n  \"endingIn\" : \"Slutar på {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"Kort\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],241:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"ชำระเงินด้วย {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"เลือกวิธีการชำระเงินอื่น\",\n  \"chooseAWayToPay\" : \"โปรดเลือกวิธีชำระเงิน\",\n  \"otherWaysToPay\" : \"วิธีอื่นในการชำระเงิน\",\n  \"edit\" : \"แก้ไข\",\n  \"doneEditing\" : \"เสร็จแล้ว\",\n  \"editPaymentMethods\" : \"แก้ไขวิธีการชำระเงิน\",\n  \"CreditCardDeleteConfirmationMessage\" : \"ลบบัตร {{secondaryIdentifier}} ที่ลงท้ายด้วย {{identifier}} หรือไม่\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"คุณต้องการลบบัญชี PayPal {{identifier}} หรือไม่\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"คุณแน่ใจหรือไม่ว่าต้องการลบบัญชี Venmo ที่มีชื่อผู้ใช้ {{identifier}}\",\n  \"genericDeleteConfirmationMessage\" : \"คุณแน่ใจหรือไม่ว่าต้องการลบการชำระเงินรายการนี้ออก\",\n  \"deleteCancelButton\" : \"ยกเลิก\",\n  \"deleteConfirmationButton\" : \"ลบ\",\n  \"fieldEmptyForCvv\" : \"โปรดกรอกข้อมูลในบัตร CVV\",\n  \"fieldEmptyForExpirationDate\" : \"โปรดกรอกข้อมูลวันที่หมดอายุ\",\n  \"fieldEmptyForCardholderName\" : \"โปรดกรอกชื่อผู้ถือบัตร\",\n  \"fieldTooLongForCardholderName\" : \"ชื่อผู้ถือบัตรต้องไม่เกิน 256 อักขระ\",\n  \"fieldEmptyForNumber\" : \"โปรดกรอกหมายเลข\",\n  \"fieldEmptyForPostalCode\" : \"โปรดกรอกข้อมูลในรหัสไปรษณีย์\",\n  \"fieldInvalidForCardholderName\" : \"ชื่อผู้ถือบัตรนี้ไม่ถูกต้อง\",\n  \"fieldInvalidForCvv\" : \"รหัสความปลอดภัยนี้ไม่ถูกต้อง\",\n  \"fieldInvalidForExpirationDate\" : \"วันที่หมดอายุนี้ไม่ถูกต้อง\",\n  \"fieldInvalidForNumber\" : \"หมายเลขบัตรนี้ไม่ถูกต้อง\",\n  \"fieldInvalidForPostalCode\" : \"รหัสไปรษณีย์นี้ไม่ถูกต้อง\",\n  \"noticeOfCollection\" : \"การชําระเงินด้วยบัตรนี้ถือว่าข้าพเจ้ายอมรับนโยบายความเป็นส่วนตัวของ PayPal\",\n  \"genericError\" : \"เกิดข้อผิดพลาดขึ้นในระบบของเรา\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"บัตรเครดิตนี้เป็นวิธีการชำระเงินที่บันทึกไว้แล้ว\",\n  \"hostedFieldsFailedTokenizationError\" : \"โปรดตรวจสอบข้อมูลของคุณ แล้วลองใหม่อีกครั้ง\",\n  \"hostedFieldsFieldsInvalidError\" : \"โปรดตรวจสอบข้อมูลของคุณ แล้วลองใหม่อีกครั้ง\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"ข้อผิดพลาดของเครือข่าย โปรดลองอีกครั้ง\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"การตรวจสอบยืนยันบัตรเครดิตไม่สำเร็จ โปรดตรวจสอบข้อมูลของคุณ แล้วลองใหม่อีกครั้ง\",\n  \"paypalButtonMustBeUsed\" : \"ใช้ปุ่ม PayPal เพื่อดำเนินการชำระเงินต่อไป\",\n  \"venmoButtonMustBeUsed\": \"ใช้ปุ่ม Venmo เพื่อดําเนินการชําระเงินต่อไป\",\n  \"applePayButtonMustBeUsed\": \"ใช้ปุ่ม Apple Pay เพื่อดำเนินการชำระเงินต่อไป.\",\n  \"paypalAccountTokenizationFailedError\" : \"เกิดข้อผิดพลาดบางอย่างในการเพิ่มบัญชี PayPal โปรดลองอีกครั้ง\",\n  \"paypalFlowFailedError\" : \"เกิดข้อผิดพลาดในการเชื่อมต่อกับ PayPal โปรดลองอีกครั้ง\",\n  \"paypalTokenizationRequestActiveError\" : \"การอนุมัติการชำระเงิน PayPal อยู่ในระหว่างดำเนินการแล้ว\",\n  \"venmoCanceledError\" : \"เกิดข้อผิดพลาดบางประการ ตรวจสอบให้แน่ใจว่าคุณมีแอปพลิเคชัน Venmo เวอร์ชันล่าสุดที่ติดตั้งไว้ในอุปกรณ์ของคุณและเบราว์เซอร์ของคุณรองรับการเปลี่ยนเป็น Venmo\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"ไม่สามารถลบวิธีการชำระเงินได้โปรดลองอีกครั้ง\",\n  \"venmoAppFailedError\" : \"ไม่พบแอป Venmo ในอุปกรณ์ของคุณ\",\n  \"unsupportedCardTypeError\" : \"ไม่รองรับบัตรประเภทนี้ โปรดลองใช้บัตรใบอื่น\",\n  \"applePayTokenizationError\" : \"เกิดข้อผิดพลาดในเครือข่ายขณะประมวลผลการชำระเงินของ Apple Pay โปรดลองอีกครั้ง\",\n  \"applePayActiveCardError\" : \"เพิ่มบัตรที่รองรับไปยังกระเป๋าสตางค์ Apple Pay ของคุณ\",\n  \"cardholderNameLabel\" : \"ชื่อของผู้ถือบัตร\",\n  \"cardNumberLabel\" : \"หมายเลขบัตร\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"(3 หลัก)\",\n  \"cvvFourDigitLabelSubheading\" : \"(4 หลัก)\",\n  \"cardholderNamePlaceholder\" : \"ชื่อของผู้ถือบัตร\",\n  \"expirationDateLabel\" : \"วันหมดอายุ\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"MM/YY\",\n  \"postalCodeLabel\" : \"รหัสไปรษณีย์\",\n  \"saveCardLabel\" : \"บันทึกบัตร\",\n  \"payWithCard\" : \"ชำระด้วยบัตรเดบิตหรือบัตรเครดิต\",\n  \"endingIn\" : \"ลงท้ายด้วย {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"บัตร\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],242:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"使用{{paymentSource}}付款\",\n  \"chooseAnotherWayToPay\" : \"请选择其它付款方式。\",\n  \"chooseAWayToPay\" : \"选择付款方式\",\n  \"otherWaysToPay\" : \"其他付款方式\",\n  \"edit\" : \"编辑\",\n  \"doneEditing\" : \"完成\",\n  \"editPaymentMethods\" : \"编辑付款方式\",\n  \"CreditCardDeleteConfirmationMessage\" : \"删除尾号为{{identifier}}的{{secondaryIdentifier}}卡？\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"删除PayPal账户{{identifier}}？\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"您确定要删除用户名为{{identifier}}的Venmo账户吗？\",\n  \"genericDeleteConfirmationMessage\" : \"确定要删除此付款方式吗？\",\n  \"deleteCancelButton\" : \"取消\",\n  \"deleteConfirmationButton\" : \"删除\",\n  \"fieldEmptyForCvv\" : \"请填写CVV。\",\n  \"fieldEmptyForExpirationDate\" : \"请填写有效期限。\",\n  \"fieldEmptyForCardholderName\" : \"请填写持卡人姓名。\",\n  \"fieldTooLongForCardholderName\" : \"持卡人姓名必须少于256个字符。\",\n  \"fieldEmptyForNumber\" : \"请填写一个号码。\",\n  \"fieldEmptyForPostalCode\" : \"请填写邮政编码。\",\n  \"fieldInvalidForCardholderName\" : \"此持卡人姓名无效。\",\n  \"fieldInvalidForCvv\" : \"此安全码无效。\",\n  \"fieldInvalidForExpirationDate\" : \"此有效期限无效。\",\n  \"fieldInvalidForNumber\" : \"此卡号无效。\",\n  \"fieldInvalidForPostalCode\" : \"此邮政编码无效。\",\n  \"noticeOfCollection\" : \"使用我的卡付款即表示我同意PayPal隐私声明。\",\n  \"genericError\" : \"我们遇到了一些问题。\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"此信用卡已存在于已保存的付款方式。\",\n  \"hostedFieldsFailedTokenizationError\" : \"请检查您的信息，然后重试。\",\n  \"hostedFieldsFieldsInvalidError\" : \"请检查您的信息，然后重试。\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"网络错误。请重试。\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"信用卡验证失败。请检查您的信息，然后重试。\",\n  \"paypalButtonMustBeUsed\" : \"使用PayPal按钮继续付款。\",\n  \"venmoButtonMustBeUsed\": \"使用Venmo按钮继续付款。\",\n  \"applePayButtonMustBeUsed\": \"使用Apple Pay按钮以便继续进行您的付款。\",\n  \"paypalAccountTokenizationFailedError\" : \"添加PayPal账户时遇到了一些问题。请重试。\",\n  \"paypalFlowFailedError\" : \"连接到PayPal遇到了一些问题。请重试。\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal付款授权已在处理中。\",\n  \"venmoCanceledError\" : \"遇到了一些问题。请确保您的设备上安装了最新版本的Venmo应用，并且您的浏览器支持切换到Venmo。\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"无法删除付款方式，请重试。\",\n  \"venmoAppFailedError\" : \"在您的设备上找不到Venmo应用程序。\",\n  \"unsupportedCardTypeError\" : \"不支持该卡类型。请尝试其他卡。\",\n  \"applePayTokenizationError\" : \"处理Apple Pay付款时发生了网络错误。请重试。\",\n  \"applePayActiveCardError\" : \"在您的Apple Pay钱包中添加一张受支持的卡。\",\n  \"cardholderNameLabel\" : \"持卡人姓名\",\n  \"cardNumberLabel\" : \"卡号\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"（3位数）\",\n  \"cvvFourDigitLabelSubheading\" : \"（4位数）\",\n  \"cardholderNamePlaceholder\" : \"持卡人姓名\",\n  \"expirationDateLabel\" : \"有效期限\",\n  \"expirationDateLabelSubheading\" : \"（月/年）\",\n  \"expirationDatePlaceholder\" : \"月/年\",\n  \"postalCodeLabel\" : \"邮政编码\",\n  \"saveCardLabel\" : \"保存此卡\",\n  \"payWithCard\" : \"使用卡支付\",\n  \"endingIn\" : \"尾号为{{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"卡\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"发现\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"银联\"\n}\n;\n\n},{}],243:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"付款方式為 {{paymentSource}}\",\n  \"chooseAnotherWayToPay\" : \"請選擇其他付款方式\",\n  \"chooseAWayToPay\" : \"選擇付款方式\",\n  \"otherWaysToPay\" : \"其他付款方式\",\n  \"edit\" : \"編輯\",\n  \"doneEditing\" : \"完成\",\n  \"editPaymentMethods\" : \"編輯付款方式\",\n  \"CreditCardDeleteConfirmationMessage\" : \"刪除最後數字為 {{identifier}} 的 {{secondaryIdentifier}} 卡嗎？\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"刪除 {{identifier}} PayPal 帳戶嗎？\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"確定要刪除用戶名稱為 {{identifier}} 的 Venmo 帳戶嗎？\",\n  \"genericDeleteConfirmationMessage\" : \"確定要刪除此付款方式嗎？\",\n  \"deleteCancelButton\" : \"取消\",\n  \"deleteConfirmationButton\" : \"刪除\",\n  \"fieldEmptyForCvv\" : \"請填寫信用卡認證碼（CVV）。\",\n  \"fieldEmptyForExpirationDate\" : \"請填寫到期日。\",\n  \"fieldEmptyForCardholderName\" : \"請填寫持卡人姓名。\",\n  \"fieldTooLongForCardholderName\" : \"持卡人姓名必須少於 256 個字元。\",\n  \"fieldEmptyForNumber\" : \"請填寫數字。\",\n  \"fieldEmptyForPostalCode\" : \"請填寫郵遞區號。\",\n  \"fieldInvalidForCardholderName\" : \"持卡人姓名無效。\",\n  \"fieldInvalidForCvv\" : \"此安全代碼無效。\",\n  \"fieldInvalidForExpirationDate\" : \"此到期日無效。\",\n  \"fieldInvalidForNumber\" : \"此卡號無效。\",\n  \"fieldInvalidForPostalCode\" : \"郵遞區號無效。\",\n  \"noticeOfCollection\" : \"一經使用信用卡付款，即表示我同意 PayPal 的《私隱權聲明》。\",\n  \"genericError\" : \"系統發生錯誤。\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"此信用卡為已儲存的付款方式。\",\n  \"hostedFieldsFailedTokenizationError\" : \"請檢查你的資料，然後重試。\",\n  \"hostedFieldsFieldsInvalidError\" : \"請檢查你的資料，然後重試。\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"網絡錯誤。請再試一次。\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"信用卡認證失敗。請檢查你的資料，然後重試。\",\n  \"paypalButtonMustBeUsed\" : \"使用「PayPal 按鈕」繼續付款。\",\n  \"venmoButtonMustBeUsed\": \"使用 Venmo 按鈕以繼續付款。\",\n  \"applePayButtonMustBeUsed\": \"使用 Apple Pay 按鈕繼續付款。\",\n  \"paypalAccountTokenizationFailedError\" : \"新增 PayPal 帳戶出現問題，請再試一次。\",\n  \"paypalFlowFailedError\" : \"連接至 PayPal 出現問題，請再試一次。\",\n  \"paypalTokenizationRequestActiveError\" : \"正在處理 PayPal 授權付款。\",\n  \"venmoCanceledError\" : \"系統出現錯誤，請確保裝置已安裝最新版本的 Venmo 應用程式，及瀏覽器支援切換至 Venmo。\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"無法刪除付款方式，請再試一次。\",\n  \"venmoAppFailedError\" : \"無法在裝置上找到 Venmo 應用程式。\",\n  \"unsupportedCardTypeError\" : \"不支援此卡類型。請改用其他信用卡。\",\n  \"applePayTokenizationError\" : \"處理 Apple Pay 付款時網路發生錯誤。請再試一次。\",\n  \"applePayActiveCardError\" : \"新增可用的信用卡到 Apple Pay 錢包。\",\n  \"cardholderNameLabel\" : \"持卡人姓名\",\n  \"cardNumberLabel\" : \"卡號\",\n  \"cvvLabel\" : \"CVV\",\n  \"cvvThreeDigitLabelSubheading\" : \"（3 位數）\",\n  \"cvvFourDigitLabelSubheading\" : \"（4 位數）\",\n  \"cardholderNamePlaceholder\" : \"持卡人姓名\",\n  \"expirationDateLabel\" : \"到期日\",\n  \"expirationDateLabelSubheading\" : \"(MM/YY)\",\n  \"expirationDatePlaceholder\" : \"MM/YY\",\n  \"postalCodeLabel\" : \"郵遞區號\",\n  \"saveCardLabel\" : \"儲存卡\",\n  \"payWithCard\" : \"使用扣帳卡或信用卡付款\",\n  \"endingIn\" : \"最後數字為 {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"信用卡\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"Discover\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"UnionPay\"\n}\n;\n\n},{}],244:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"使用 {{paymentSource}} 付款\",\n  \"chooseAnotherWayToPay\" : \"選擇其他付款方式\",\n  \"chooseAWayToPay\" : \"選擇付款方式\",\n  \"otherWaysToPay\" : \"其他付款方式\",\n  \"edit\" : \"編輯\",\n  \"doneEditing\" : \"完成\",\n  \"editPaymentMethods\" : \"編輯付款方式\",\n  \"CreditCardDeleteConfirmationMessage\" : \"刪除末碼為 {{identifier}} 的 {{secondaryIdentifier}} 卡片？\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"刪除 {{identifier}} 的 PayPal 帳戶？\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"確定要刪除用戶名稱為 {{identifier}} 的 Venmo 帳戶？\",\n  \"genericDeleteConfirmationMessage\" : \"確定要刪除此付款方式？\",\n  \"deleteCancelButton\" : \"取消\",\n  \"deleteConfirmationButton\" : \"刪除\",\n  \"fieldEmptyForCvv\" : \"填寫信用卡驗證碼。\",\n  \"fieldEmptyForExpirationDate\" : \"填寫到期日。\",\n  \"fieldEmptyForCardholderName\" : \"填寫持卡人姓名。\",\n  \"fieldTooLongForCardholderName\" : \"持卡人姓名必須少於 256 個字元。\",\n  \"fieldEmptyForNumber\" : \"填寫數字。\",\n  \"fieldEmptyForPostalCode\" : \"填寫郵遞區號。\",\n  \"fieldInvalidForCardholderName\" : \"此持卡人姓名無效。\",\n  \"fieldInvalidForCvv\" : \"此安全代碼無效。\",\n  \"fieldInvalidForExpirationDate\" : \"此到期日無效。\",\n  \"fieldInvalidForNumber\" : \"此卡號無效。\",\n  \"fieldInvalidForPostalCode\" : \"此郵遞區號無效。\",\n  \"noticeOfCollection\" : \"使用我的卡片付款，即表示我同意「PayPal 隱私權聲明」。\",\n  \"genericError\" : \"我們的系統發生問題。\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"此信用卡已經是儲存的付款方式。\",\n  \"hostedFieldsFailedTokenizationError\" : \"請檢查你的資料並重試。\",\n  \"hostedFieldsFieldsInvalidError\" : \"請檢查你的資料並重試。\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"網路錯誤。請重試。\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"信用卡認證失敗。請檢查你的資料並重試。\",\n  \"paypalButtonMustBeUsed\" : \"使用 PayPal 按鈕繼續付款。\",\n  \"venmoButtonMustBeUsed\": \"使用 Venmo 按鈕繼續付款。\",\n  \"applePayButtonMustBeUsed\": \"使用 PayPal 按鈕繼續付款。\",\n  \"paypalAccountTokenizationFailedError\" : \"新增 PayPal 帳戶時發生錯誤。請重試。\",\n  \"paypalFlowFailedError\" : \"連結至 PayPal 時發生錯誤。請重試。\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal 付款授權已在進行中。\",\n  \"venmoCanceledError\" : \"系統發生錯誤。確保你在裝置上安裝了最新版本的 Venmo 應用程式，且瀏覽器支援轉換至 Venmo。\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"無法刪除付款方式，請重試。\",\n  \"venmoAppFailedError\" : \"你的裝置上找不到 Venmo 應用程式。\",\n  \"unsupportedCardTypeError\" : \"不支援此卡片類型，請改用其他卡片。\",\n  \"applePayTokenizationError\" : \"處理 Apple Pay 付款時發生網路連線錯誤。請重試。\",\n  \"applePayActiveCardError\" : \"將支援卡片新增至你的 Apple Pay 錢包。\",\n  \"cardholderNameLabel\" : \"持卡人姓名\",\n  \"cardNumberLabel\" : \"卡號\",\n  \"cvvLabel\" : \"信用卡驗證碼\",\n  \"cvvThreeDigitLabelSubheading\" : \"（3 位數）\",\n  \"cvvFourDigitLabelSubheading\" : \"（4 位數）\",\n  \"cardholderNamePlaceholder\" : \"持卡人姓名\",\n  \"expirationDateLabel\" : \"到期日\",\n  \"expirationDateLabelSubheading\" : \"（月 / 年）\",\n  \"expirationDatePlaceholder\" : \"月 / 年\",\n  \"postalCodeLabel\" : \"郵遞區號\",\n  \"saveCardLabel\" : \"儲存卡片\",\n  \"payWithCard\" : \"使用卡片付款\",\n  \"endingIn\" : \"末碼為 {{lastFourCardDigits}}\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"卡片\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"美國運通\",\n  \"Discover\" : \"發現卡\",\n  \"Diners Club\" : \"大來卡\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"銀聯\"\n}\n;\n\n},{}],245:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  \"payingWith\" : \"使用{{paymentSource}}付款\",\n  \"chooseAnotherWayToPay\" : \"选择其他付款方式\",\n  \"chooseAWayToPay\" : \"选择付款方式\",\n  \"otherWaysToPay\" : \"其他付款方式\",\n  \"edit\" : \"编辑\",\n  \"doneEditing\" : \"完成\",\n  \"editPaymentMethods\" : \"编辑付款方式\",\n  \"CreditCardDeleteConfirmationMessage\" : \"删除以{{identifier}}}结尾的{{secondaryIdentifier}}}卡？\",\n  \"PayPalAccountDeleteConfirmationMessage\" : \"删除PayPal账户{{identifier}}}？\",\n  \"VenmoAccountDeleteConfirmationMessage\" : \"确定要删除用户名为{{identifier}}}的Venmo账户吗？\",\n  \"genericDeleteConfirmationMessage\" : \"确定要删除此付款方式吗？\",\n  \"deleteCancelButton\" : \"取消\",\n  \"deleteConfirmationButton\" : \"删除\",\n  \"fieldEmptyForCvv\" : \"请填写卡校验值。\",\n  \"fieldEmptyForExpirationDate\" : \"请填写有效期限。\",\n  \"fieldEmptyForCardholderName\" : \"请填写持卡人姓名。\",\n  \"fieldTooLongForCardholderName\" : \"持卡人姓名必须少于256个字符。\",\n  \"fieldEmptyForNumber\" : \"请填写号码。\",\n  \"fieldEmptyForPostalCode\" : \"请填写邮政编码。\",\n  \"fieldInvalidForCardholderName\" : \"此持卡人姓名无效。\",\n  \"fieldInvalidForCvv\" : \"此验证码无效。\",\n  \"fieldInvalidForExpirationDate\" : \"此有效期限无效。\",\n  \"fieldInvalidForNumber\" : \"此卡号无效。\",\n  \"fieldInvalidForPostalCode\" : \"此邮政编码无效。\",\n  \"noticeOfCollection\" : \"使用我的卡付款即表示我同意PayPal隐私声明。\",\n  \"genericError\" : \"我们遇到了一些问题。\",\n  \"hostedFieldsTokenizationFailOnDuplicateError\" : \"此信用卡已存在于已保存的付款方式中。\",\n  \"hostedFieldsFailedTokenizationError\" : \"请检查您的信息，然后重试。\",\n  \"hostedFieldsFieldsInvalidError\" : \"请检查您的信息，然后重试。\",\n  \"hostedFieldsTokenizationNetworkErrorError\" : \"网络错误。请重试。\",\n  \"hostedFieldsTokenizationCvvVerificationFailedError\" : \"信用卡认证失败。请检查您的信息，然后重试。\",\n  \"paypalButtonMustBeUsed\" : \"使用PayPal按钮以便继续进行您的付款。\",\n  \"venmoButtonMustBeUsed\": \"使用Venmo按钮继续付款。\",\n  \"applePayButtonMustBeUsed\": \"使用Apple Pay按钮以便继续进行您的付款。\",\n  \"paypalAccountTokenizationFailedError\" : \"添加PayPal账户时遇到了问题。请重试。\",\n  \"paypalFlowFailedError\" : \"连接到PayPal时遇到了问题。请重试。\",\n  \"paypalTokenizationRequestActiveError\" : \"PayPal付款授权正在处理中。\",\n  \"venmoCanceledError\" : \"遇到了一些问题。请确保您的设备上安装了最新版本的Venmo应用，并且您的浏览器支持切换到Venmo。\",\n  \"vaultManagerPaymentMethodDeletionError\" : \"无法删除付款方式，请重试。\",\n  \"venmoAppFailedError\" : \"未能在您的设备上找到Venmo应用。\",\n  \"unsupportedCardTypeError\" : \"不支持该卡类型。请尝试其它卡。\",\n  \"applePayTokenizationError\" : \"处理Apple Pay付款时出现了网络错误。请重试。\",\n  \"applePayActiveCardError\" : \"在您的Apple Pay钱包中添加一张受支持的卡。\",\n  \"cardholderNameLabel\" : \"持卡人姓名\",\n  \"cardNumberLabel\" : \"卡号\",\n  \"cvvLabel\" : \"卡校验值\",\n  \"cvvThreeDigitLabelSubheading\" : \"（3位数）\",\n  \"cvvFourDigitLabelSubheading\" : \"（4位数）\",\n  \"cardholderNamePlaceholder\" : \"持卡人姓名\",\n  \"expirationDateLabel\" : \"有效期限\",\n  \"expirationDateLabelSubheading\" : \"（月/年）\",\n  \"expirationDatePlaceholder\" : \"月/年\",\n  \"postalCodeLabel\" : \"邮政编码\",\n  \"saveCardLabel\" : \"保存卡\",\n  \"payWithCard\" : \"使用卡支付\",\n  \"endingIn\" : \"以{{lastFourCardDigits}}}结尾\",\n  \"Apple Pay\" : \"Apple Pay\",\n  \"Venmo\" : \"Venmo\",\n  \"Card\" : \"卡\",\n  \"PayPal\" : \"PayPal\",\n  \"PayPal Credit\" : \"PayPal Credit\",\n  \"Google Pay\" : \"Google Pay\",\n  \"American Express\" : \"American Express\",\n  \"Discover\" : \"发现\",\n  \"Diners Club\" : \"Diners Club\",\n  \"Elo\" : \"Elo\",\n  \"Hiper\" : \"Hiper\",\n  \"Hipercard\" : \"Hipercard\",\n  \"MasterCard\" : \"Mastercard\",\n  \"Visa\" : \"Visa\",\n  \"JCB\" : \"JCB\",\n  \"Maestro\" : \"Maestro\",\n  \"UnionPay\" : \"银联\"\n}\n;\n\n},{}],246:[function(require,module,exports){\n'use strict';\n\nvar assign = require('../lib/assign').assign;\nvar DropinError = require('../lib/dropin-error');\nvar errors = require('../constants').errors;\n\nfunction BaseView(options) {\n  options = options || {};\n\n  assign(this, options);\n}\n\nBaseView.prototype.getElementById = function (id) {\n  if (!this.element) { return null; }\n\n  return this.element.querySelector('[data-braintree-id=\"' + id + '\"]');\n};\n\nBaseView.prototype.requestPaymentMethod = function () {\n  return Promise.reject(new DropinError(errors.NO_PAYMENT_METHOD_ERROR));\n};\n\nBaseView.prototype.getPaymentMethod = function () {\n  return this.activeMethodView && this.activeMethodView.paymentMethod;\n};\n\nBaseView.prototype.onSelection = function () {};\n\nBaseView.prototype.teardown = function () {\n  return Promise.resolve();\n};\n\nBaseView.prototype.preventUserAction = function () {\n  if (this.element) {\n    this.element.classList.add('braintree-sheet--loading');\n  }\n\n  this.model.preventUserAction();\n};\n\nBaseView.prototype.allowUserAction = function () {\n  if (this.element) {\n    this.element.classList.remove('braintree-sheet--loading');\n  }\n\n  this.model.allowUserAction();\n};\n\nmodule.exports = BaseView;\n\n},{\"../constants\":189,\"../lib/assign\":195,\"../lib/dropin-error\":199}],247:[function(require,module,exports){\n'use strict';\n\nvar BaseView = require('./base-view');\nvar addSelectionEventHandler = require('../lib/add-selection-event-handler');\nvar paymentMethodTypes = require('../constants').paymentMethodTypes;\n\nfunction DeleteConfirmationView() {\n  BaseView.apply(this, arguments);\n\n  this._initialize();\n}\n\nDeleteConfirmationView.prototype = Object.create(BaseView.prototype);\nDeleteConfirmationView.prototype.constructor = DeleteConfirmationView;\nDeleteConfirmationView.ID = DeleteConfirmationView.prototype.ID = 'delete-confirmation';\n\nDeleteConfirmationView.prototype._initialize = function () {\n  this._yesButton = this.getElementById('delete-confirmation__yes');\n  this._noButton = this.getElementById('delete-confirmation__no');\n  this._messageBox = this.getElementById('delete-confirmation__message');\n\n  addSelectionEventHandler(this._yesButton, function () {\n    this.model.deleteVaultedPaymentMethod();\n  }.bind(this));\n  addSelectionEventHandler(this._noButton, function () {\n    this.model.cancelDeleteVaultedPaymentMethod();\n  }.bind(this));\n};\n\nDeleteConfirmationView.prototype.applyPaymentMethod = function (paymentMethod) {\n  var identifier, secondaryIdentifier;\n  var messageText = this.strings[paymentMethod.type + 'DeleteConfirmationMessage'];\n\n  if (messageText) {\n    switch (paymentMethod.type) {\n      case paymentMethodTypes.card:\n        identifier = paymentMethod.details.lastFour;\n        secondaryIdentifier = paymentMethod.details.cardType;\n        secondaryIdentifier = this.strings[secondaryIdentifier] || secondaryIdentifier;\n        break;\n      case paymentMethodTypes.paypal:\n        identifier = paymentMethod.details.email;\n        break;\n      case paymentMethodTypes.venmo:\n        identifier = paymentMethod.details.username;\n        break;\n      default:\n        break;\n    }\n\n    messageText = messageText.replace('{{identifier}}', identifier);\n    if (secondaryIdentifier) {\n      messageText = messageText.replace('{{secondaryIdentifier}}', secondaryIdentifier);\n    }\n  } else {\n    messageText = this.strings.genericDeleteConfirmationMessage;\n  }\n  this._messageBox.innerText = messageText;\n};\n\nDeleteConfirmationView.prototype.onSelection = function () {\n  window.requestAnimationFrame(function () {\n    this._yesButton.focus();\n  }.bind(this));\n};\n\nmodule.exports = DeleteConfirmationView;\n\n},{\"../constants\":189,\"../lib/add-selection-event-handler\":193,\"./base-view\":246}],248:[function(require,module,exports){\n'use strict';\n\nvar analytics = require('../lib/analytics');\nvar analyticsKinds = require('../constants').analyticsKinds;\nvar BaseView = require('./base-view');\nvar sheetViews = require('./payment-sheet-views');\nvar PaymentMethodsView = require('./payment-methods-view');\nvar PaymentOptionsView = require('./payment-options-view');\nvar DeleteConfirmationView = require('./delete-confirmation-view');\nvar addSelectionEventHandler = require('../lib/add-selection-event-handler');\nvar wait = require('../lib/wait');\nvar supportsFlexbox = require('../lib/supports-flexbox');\n\nvar CHANGE_ACTIVE_PAYMENT_METHOD_TIMEOUT = require('../constants').CHANGE_ACTIVE_PAYMENT_METHOD_TIMEOUT;\nvar DEVELOPER_MISCONFIGURATION_MESSAGE = require('../constants').errors.DEVELOPER_MISCONFIGURATION_MESSAGE;\n\nfunction MainView() {\n  BaseView.apply(this, arguments);\n\n  this.dependenciesInitializing = 0;\n\n  this._initialize();\n}\n\nMainView.prototype = Object.create(BaseView.prototype);\nMainView.prototype.constructor = MainView;\n\nMainView.prototype._initialize = function () {\n  var paymentOptionsView;\n\n  this._hasMultiplePaymentOptions = this.model.supportedPaymentOptions.length > 1;\n\n  this._views = {};\n\n  this.sheetContainer = this.getElementById('sheet-container');\n  this.sheetErrorText = this.getElementById('sheet-error-text');\n\n  this.toggle = this.getElementById('toggle');\n  this.disableWrapper = this.getElementById('disable-wrapper');\n  this.lowerContainer = this.getElementById('lower-container');\n\n  this.loadingContainer = this.getElementById('loading-container');\n  this.dropinContainer = this.element.querySelector('.braintree-dropin');\n\n  this.supportsFlexbox = supportsFlexbox();\n\n  this.model.on('asyncDependenciesReady', this.hideLoadingIndicator.bind(this));\n\n  this.model.on('errorOccurred', this.showSheetError.bind(this));\n  this.model.on('errorCleared', this.hideSheetError.bind(this));\n  this.model.on('preventUserAction', this.preventUserAction.bind(this));\n  this.model.on('allowUserAction', this.allowUserAction.bind(this));\n\n  this.paymentSheetViewIDs = Object.keys(sheetViews).reduce(function (ids, sheetViewKey) {\n    var PaymentSheetView, paymentSheetView;\n\n    if (this.model.supportedPaymentOptions.indexOf(sheetViewKey) !== -1) {\n      PaymentSheetView = sheetViews[sheetViewKey];\n\n      paymentSheetView = new PaymentSheetView({\n        element: this.getElementById(PaymentSheetView.ID),\n        mainView: this,\n        model: this.model,\n        client: this.client,\n        strings: this.strings\n      });\n      paymentSheetView.initialize();\n\n      this.addView(paymentSheetView);\n      ids.push(paymentSheetView.ID);\n    }\n\n    return ids;\n  }.bind(this), []);\n\n  this.paymentMethodsViews = new PaymentMethodsView({\n    element: this.element,\n    model: this.model,\n    client: this.client,\n    strings: this.strings\n  });\n  this.addView(this.paymentMethodsViews);\n\n  this.deleteConfirmationView = new DeleteConfirmationView({\n    element: this.getElementById('delete-confirmation'),\n    model: this.model,\n    strings: this.strings\n  });\n  this.addView(this.deleteConfirmationView);\n\n  addSelectionEventHandler(this.toggle, this.toggleAdditionalOptions.bind(this));\n\n  this.model.on('changeActivePaymentMethod', function () {\n    wait.delay(CHANGE_ACTIVE_PAYMENT_METHOD_TIMEOUT).then(function () {\n      var id = PaymentMethodsView.ID;\n\n      // if Drop-in gets into the state where it's told to go to the methods\n      // view, but there are no saved payment methods, it should instead\n      // redirect to the view it started on\n      if (!this.model.hasPaymentMethods()) {\n        id = this.model.getInitialViewId();\n      }\n\n      this.setPrimaryView(id);\n    }.bind(this));\n  }.bind(this));\n\n  this.model.on('changeActiveView', this._onChangeActiveView.bind(this));\n\n  this.model.on('removeActivePaymentMethod', function () {\n    var activePaymentView = this.getView(this.model.getActivePaymentViewId());\n\n    if (activePaymentView && typeof activePaymentView.removeActivePaymentMethod === 'function') {\n      activePaymentView.removeActivePaymentMethod();\n    }\n  }.bind(this));\n\n  this.model.on('enableEditMode', this.enableEditMode.bind(this));\n\n  this.model.on('disableEditMode', this.disableEditMode.bind(this));\n\n  this.model.on('confirmPaymentMethodDeletion', this.openConfirmPaymentMethodDeletionDialog.bind(this));\n  this.model.on('cancelVaultedPaymentMethodDeletion', this.cancelVaultedPaymentMethodDeletion.bind(this));\n  this.model.on('startVaultedPaymentMethodDeletion', this.startVaultedPaymentMethodDeletion.bind(this));\n  this.model.on('finishVaultedPaymentMethodDeletion', this.finishVaultedPaymentMethodDeletion.bind(this));\n\n  if (this._hasMultiplePaymentOptions) {\n    paymentOptionsView = new PaymentOptionsView({\n      client: this.client,\n      element: this.getElementById(PaymentOptionsView.ID),\n      mainView: this,\n      model: this.model,\n      strings: this.strings\n    });\n\n    this.addView(paymentOptionsView);\n  }\n\n  this._sendToDefaultView();\n};\n\nMainView.prototype._onChangeActiveView = function (data) {\n  var id = data.newViewId;\n  var activePaymentView = this.getView(id);\n\n  if (id === PaymentMethodsView.ID) {\n    this.paymentMethodsViews.container.classList.add('braintree-methods--active');\n    this.sheetContainer.classList.remove('braintree-sheet--active');\n  } else {\n    wait.delay(0).then(function () {\n      this.sheetContainer.classList.add('braintree-sheet--active');\n    }.bind(this));\n    this.paymentMethodsViews.container.classList.remove('braintree-methods--active');\n    if (!this.getView(id).getPaymentMethod()) {\n      this.model.setPaymentMethodRequestable({\n        isRequestable: false\n      });\n    }\n  }\n\n  activePaymentView.onSelection();\n};\n\nMainView.prototype.addView = function (view) {\n  this._views[view.ID] = view;\n};\n\nMainView.prototype.getView = function (id) {\n  return this._views[id];\n};\n\nMainView.prototype.setPrimaryView = function (id, secondaryViewId) {\n  var paymentMethod;\n\n  wait.delay(0).then(function () {\n    this.element.className = prefixShowClass(id);\n    if (secondaryViewId) {\n      this.element.classList.add(prefixShowClass(secondaryViewId));\n    }\n  }.bind(this));\n\n  this.primaryView = this.getView(id);\n  this.model.changeActiveView(id);\n\n  if (this.paymentSheetViewIDs.indexOf(id) !== -1) {\n    if (this.model.getPaymentMethods().length > 0 || this.getView(PaymentOptionsView.ID)) {\n      this.showToggle();\n    } else {\n      this.hideToggle();\n    }\n  } else if (id === PaymentMethodsView.ID) {\n    this.showToggle();\n    // Move options below the upper-container\n    this.getElementById('lower-container').appendChild(this.getElementById('options'));\n  } else if (id === PaymentOptionsView.ID) {\n    this.hideToggle();\n  }\n\n  if (!this.supportsFlexbox) {\n    this.element.setAttribute('data-braintree-no-flexbox', true);\n  }\n\n  paymentMethod = this.primaryView.getPaymentMethod();\n\n  this.model.setPaymentMethodRequestable({\n    isRequestable: Boolean(paymentMethod && !this.model.isInEditMode()),\n    type: paymentMethod && paymentMethod.type,\n    selectedPaymentMethod: paymentMethod\n  });\n\n  this.model.clearError();\n};\n\nMainView.prototype.requestPaymentMethod = function () {\n  var activePaymentView = this.getView(this.model.getActivePaymentViewId());\n\n  return activePaymentView.requestPaymentMethod().then(function (payload) {\n    analytics.sendEvent(this.client, 'request-payment-method.' + analyticsKinds[payload.type]);\n\n    return payload;\n  }.bind(this)).catch(function (err) {\n    analytics.sendEvent(this.client, 'request-payment-method.error');\n\n    return Promise.reject(err);\n  }.bind(this));\n};\n\nMainView.prototype.hideLoadingIndicator = function () {\n  this.dropinContainer.classList.remove('braintree-loading');\n  this.dropinContainer.classList.add('braintree-loaded');\n  this.loadingContainer.classList.add('braintree-hidden');\n};\n\nMainView.prototype.showLoadingIndicator = function () {\n  this.dropinContainer.classList.add('braintree-loading');\n  this.dropinContainer.classList.remove('braintree-loaded');\n  this.loadingContainer.classList.remove('braintree-hidden');\n};\n\nMainView.prototype.toggleAdditionalOptions = function () {\n  var sheetViewID;\n  var isPaymentSheetView = this.paymentSheetViewIDs.indexOf(this.primaryView.ID) !== -1;\n\n  this.hideToggle();\n\n  if (!this._hasMultiplePaymentOptions) {\n    sheetViewID = this.paymentSheetViewIDs[0];\n\n    this.element.classList.add(prefixShowClass(sheetViewID));\n    this.model.changeActiveView(sheetViewID);\n  } else if (isPaymentSheetView) {\n    if (this.model.getPaymentMethods().length === 0) {\n      this.setPrimaryView(PaymentOptionsView.ID);\n    } else {\n      this.setPrimaryView(PaymentMethodsView.ID, PaymentOptionsView.ID);\n      this.hideToggle();\n    }\n  } else {\n    this.element.classList.add(prefixShowClass(PaymentOptionsView.ID));\n  }\n};\n\nMainView.prototype.showToggle = function () {\n  if (this.model.isInEditMode()) {\n    return;\n  }\n  this.toggle.classList.remove('braintree-hidden');\n  this.lowerContainer.classList.add('braintree-hidden');\n};\n\nMainView.prototype.hideToggle = function () {\n  this.toggle.classList.add('braintree-hidden');\n  this.lowerContainer.classList.remove('braintree-hidden');\n};\n\nMainView.prototype.showSheetError = function (error) {\n  var errorMessage;\n  var genericErrorMessage = this.strings.genericError;\n\n  if (this.strings.hasOwnProperty(error)) {\n    errorMessage = this.strings[error];\n  } else if (error && typeof error.code === 'string') {\n    errorMessage = this.strings[snakeCaseToCamelCase(error.code) + 'Error'] || genericErrorMessage;\n  } else if (error === 'developerError') {\n    errorMessage = DEVELOPER_MISCONFIGURATION_MESSAGE;\n  } else {\n    errorMessage = genericErrorMessage;\n  }\n\n  this.dropinContainer.classList.add('braintree-sheet--has-error');\n  this.sheetErrorText.innerHTML = errorMessage;\n};\n\nMainView.prototype.hideSheetError = function () {\n  this.dropinContainer.classList.remove('braintree-sheet--has-error');\n};\n\nMainView.prototype.getOptionsElements = function () {\n  return this._views.options.elements;\n};\n\nMainView.prototype.preventUserAction = function () {\n  this.disableWrapper.classList.remove('braintree-hidden');\n};\n\nMainView.prototype.allowUserAction = function () {\n  this.disableWrapper.classList.add('braintree-hidden');\n};\n\nMainView.prototype.teardown = function () {\n  var error;\n  var viewNames = Object.keys(this._views);\n  var teardownPromises = viewNames.map(function (view) {\n    return this._views[view].teardown().catch(function (err) {\n      error = err;\n    });\n  }.bind(this));\n\n  return Promise.all(teardownPromises).then(function () {\n    if (error) {\n      return Promise.reject(error);\n    }\n\n    return Promise.resolve();\n  });\n};\n\nMainView.prototype.enableEditMode = function () {\n  this.setPrimaryView(this.paymentMethodsViews.ID);\n  this.paymentMethodsViews.enableEditMode();\n  this.hideToggle();\n\n  this.model.setPaymentMethodRequestable({\n    isRequestable: false\n  });\n};\n\nMainView.prototype.disableEditMode = function () {\n  var paymentMethod;\n\n  this.hideSheetError();\n  this.paymentMethodsViews.disableEditMode();\n  this.showToggle();\n\n  paymentMethod = this.primaryView.getPaymentMethod();\n\n  this.model.setPaymentMethodRequestable({\n    isRequestable: Boolean(paymentMethod),\n    type: paymentMethod && paymentMethod.type,\n    selectedPaymentMethod: paymentMethod\n  });\n};\n\nMainView.prototype.openConfirmPaymentMethodDeletionDialog = function (paymentMethod) {\n  this.deleteConfirmationView.applyPaymentMethod(paymentMethod);\n  this.setPrimaryView(this.deleteConfirmationView.ID);\n};\n\nMainView.prototype.cancelVaultedPaymentMethodDeletion = function () {\n  this.setPrimaryView(this.paymentMethodsViews.ID);\n};\n\nMainView.prototype.startVaultedPaymentMethodDeletion = function () {\n  this.element.className = '';\n  this.showLoadingIndicator();\n};\n\nMainView.prototype.finishVaultedPaymentMethodDeletion = function (error) {\n  var self = this;\n\n  this.paymentMethodsViews.refreshPaymentMethods();\n\n  if (error && this.model.getPaymentMethods().length > 0) {\n    this.model.enableEditMode();\n    this.showSheetError('vaultManagerPaymentMethodDeletionError');\n  } else {\n    this._sendToDefaultView();\n  }\n\n  return new Promise(function (resolve) {\n    wait.delay(500).then(function () {\n      // allow all the views to reset before hiding the loading indicator\n      self.hideLoadingIndicator();\n      resolve();\n    });\n  });\n};\n\nMainView.prototype._sendToDefaultView = function () {\n  var paymentMethods = this.model.getPaymentMethods();\n  var preselectVaultedPaymentMethod = this.model.merchantConfiguration.preselectVaultedPaymentMethod !== false;\n\n  if (paymentMethods.length > 0) {\n    if (preselectVaultedPaymentMethod) {\n      analytics.sendEvent(this.client, 'vaulted-card.preselect');\n\n      this.model.changeActivePaymentMethod(paymentMethods[0]);\n    } else {\n      this.setPrimaryView(this.paymentMethodsViews.ID);\n    }\n  } else if (this._hasMultiplePaymentOptions) {\n    this.setPrimaryView(PaymentOptionsView.ID);\n  } else {\n    this.setPrimaryView(this.paymentSheetViewIDs[0]);\n  }\n};\nfunction snakeCaseToCamelCase(s) {\n  return s.toLowerCase().replace(/(\\_\\w)/g, function (m) {\n    return m[1].toUpperCase();\n  });\n}\n\nfunction prefixShowClass(classname) {\n  return 'braintree-show-' + classname;\n}\n\nmodule.exports = MainView;\n\n},{\"../constants\":189,\"../lib/add-selection-event-handler\":193,\"../lib/analytics\":194,\"../lib/supports-flexbox\":207,\"../lib/wait\":210,\"./base-view\":246,\"./delete-confirmation-view\":247,\"./payment-methods-view\":250,\"./payment-options-view\":251,\"./payment-sheet-views\":256}],249:[function(require,module,exports){\n'use strict';\n\nvar analytics = require('../lib/analytics');\nvar BaseView = require('./base-view');\nvar constants = require('../constants');\n\nvar addSelectionEventHandler = require('../lib/add-selection-event-handler');\n\nvar paymentMethodHTML = \"<div class=\\\"braintree-method__icon-container braintree-method__delete-container\\\">\\n  <div class=\\\"braintree-method__icon braintree-method__delete\\\">\\n    <svg width=\\\"48\\\" height=\\\"29\\\">\\n      <use xlink:href=\\\"#iconX\\\"></use>\\n    </svg>\\n  </div>\\n</div>\\n\\n<div class=\\\"braintree-method__logo\\\">\\n  <svg width=\\\"40\\\" height=\\\"24\\\" class=\\\"@CLASSNAME\\\">\\n    <use xlink:href=\\\"#@ICON\\\"></use>\\n  </svg>\\n</div>\\n\\n<div class=\\\"braintree-method__label\\\">@TITLE<br><div class=\\\"braintree-method__label--small\\\">@SUBTITLE</div></div>\\n\\n<div class=\\\"braintree-method__icon-container braintree-method__check-container\\\">\\n  <div class=\\\"braintree-method__icon braintree-method__check\\\">\\n    <svg height=\\\"100%\\\" width=\\\"100%\\\">\\n      <use xlink:href=\\\"#iconCheck\\\"></use>\\n    </svg>\\n  </div>\\n</div>\\n\";\n\nfunction PaymentMethodView() {\n  BaseView.apply(this, arguments);\n\n  this._initialize();\n}\n\nPaymentMethodView.prototype = Object.create(BaseView.prototype);\nPaymentMethodView.prototype.constructor = PaymentMethodView;\n\nPaymentMethodView.prototype._initialize = function () {\n  var endingInText;\n  var html = paymentMethodHTML;\n  var paymentMethodCardTypes = constants.paymentMethodCardTypes;\n  var paymentMethodTypes = constants.paymentMethodTypes;\n\n  this.element = document.createElement('div');\n  this.element.className = 'braintree-method';\n  this.element.setAttribute('tabindex', '0');\n  this.element.setAttribute('role', 'button');\n\n  addSelectionEventHandler(this.element, function () {\n    if (this.model.isInEditMode()) {\n      this._selectDelete();\n    } else {\n      this._choosePaymentMethod();\n    }\n  }.bind(this));\n\n  switch (this.paymentMethod.type) {\n    case paymentMethodTypes.applePay:\n      html = html.replace(/@ICON/g, 'logoApplePay')\n        .replace(/@CLASSNAME/g, '')\n        .replace(/@TITLE/g, this.strings['Apple Pay'])\n        .replace(/@SUBTITLE/g, '');\n      break;\n    case paymentMethodTypes.card:\n      endingInText = this.strings.endingIn.replace('{{lastFourCardDigits}}', this.paymentMethod.details.lastFour);\n      html = html.replace(/@ICON/g, 'icon-' + paymentMethodCardTypes[this.paymentMethod.details.cardType])\n        .replace(/@CLASSNAME/g, ' braintree-icon--bordered')\n        .replace(/@TITLE/g, endingInText)\n        .replace(/@SUBTITLE/g, this.strings[this.paymentMethod.details.cardType]);\n      break;\n    case paymentMethodTypes.googlePay:\n      html = html.replace(/@ICON/g, 'logoGooglePay')\n        .replace(/@CLASSNAME/g, '')\n        .replace(/@TITLE/g, this.strings['Google Pay'])\n        .replace(/@SUBTITLE/g, '');\n      break;\n    case paymentMethodTypes.paypal:\n      html = html.replace(/@ICON/g, 'logoPayPal')\n        .replace(/@CLASSNAME/g, '')\n        .replace(/@TITLE/g, this.paymentMethod.details.email)\n        .replace(/@SUBTITLE/g, this.strings.PayPal);\n      break;\n    case paymentMethodTypes.venmo:\n      html = html.replace(/@ICON/g, 'logoVenmo')\n        .replace(/@CLASSNAME/g, '')\n        .replace(/@TITLE/g, this.paymentMethod.details.username)\n        .replace(/@SUBTITLE/g, this.strings.Venmo);\n      break;\n    default:\n      break;\n  }\n\n  this.element.innerHTML = html;\n  this.checkMark = this.element.querySelector('.braintree-method__check-container');\n};\n\nPaymentMethodView.prototype.setActive = function (isActive) {\n  // setTimeout required to animate addition of new payment methods\n  setTimeout(function () {\n    this.element.classList.toggle('braintree-method--active', isActive);\n  }.bind(this), 0);\n};\n\nPaymentMethodView.prototype.enableEditMode = function () {\n  this.checkMark.classList.add('braintree-hidden');\n  if (this.paymentMethod.hasSubscription) {\n    this.element.classList.add('braintree-method--disabled');\n  }\n};\n\nPaymentMethodView.prototype.disableEditMode = function () {\n  this.checkMark.classList.remove('braintree-hidden');\n  this.element.classList.remove('braintree-method--disabled');\n};\n\nPaymentMethodView.prototype.teardown = function () {\n  if (this.element.parentNode) {\n    this.element.parentNode.removeChild(this.element);\n  }\n};\n\nPaymentMethodView.prototype._choosePaymentMethod = function () {\n  if (this.paymentMethod.vaulted) {\n    analytics.sendEvent(this.client, 'vaulted-' + constants.analyticsKinds[this.paymentMethod.type] + '.select');\n  }\n\n  this.model.changeActivePaymentMethod(this.paymentMethod);\n};\n\nPaymentMethodView.prototype._selectDelete = function () {\n  this.model.confirmPaymentMethodDeletion(this.paymentMethod);\n};\n\nmodule.exports = PaymentMethodView;\n\n},{\"../constants\":189,\"../lib/add-selection-event-handler\":193,\"../lib/analytics\":194,\"./base-view\":246}],250:[function(require,module,exports){\n'use strict';\n\nvar BaseView = require('./base-view');\nvar PaymentMethodView = require('./payment-method-view');\nvar DropinError = require('../lib/dropin-error');\nvar errors = require('../constants').errors;\nvar addSelectionEventHandler = require('../lib/add-selection-event-handler');\n\nvar PAYMENT_METHOD_TYPE_TO_TRANSLATION_STRING = {\n  CreditCard: 'Card',\n  PayPalAccount: 'PayPal',\n  ApplePayCard: 'Apple Pay',\n  AndroidPayCard: 'Google Pay',\n  VenmoAccount: 'Venmo'\n};\n\nfunction PaymentMethodsView() {\n  BaseView.apply(this, arguments);\n\n  this._initialize();\n}\n\nPaymentMethodsView.prototype = Object.create(BaseView.prototype);\nPaymentMethodsView.prototype.constructor = PaymentMethodsView;\nPaymentMethodsView.ID = PaymentMethodsView.prototype.ID = 'methods';\n\nPaymentMethodsView.prototype._initialize = function () {\n  this.views = [];\n  this.container = this.getElementById('methods-container');\n  this._headingLabel = this.getElementById('methods-label');\n  this._editButton = this.getElementById('methods-edit');\n\n  this.model.on('addPaymentMethod', this._addPaymentMethod.bind(this));\n  this.model.on('changeActivePaymentMethod', this._changeActivePaymentMethodView.bind(this));\n  this.model.on('refreshPaymentMethods', this.refreshPaymentMethods.bind(this));\n\n  this.refreshPaymentMethods();\n\n  if (this.model.merchantConfiguration.vaultManager) {\n    this.model.on('removePaymentMethod', this._removePaymentMethod.bind(this));\n\n    addSelectionEventHandler(this._editButton, function () {\n      if (this.model.isInEditMode()) {\n        this.model.disableEditMode();\n      } else {\n        this.model.enableEditMode();\n      }\n    }.bind(this));\n\n    this._editButton.classList.remove('braintree-hidden');\n  }\n};\n\nPaymentMethodsView.prototype.removeActivePaymentMethod = function () {\n  if (!this.activeMethodView) {\n    return;\n  }\n  this.activeMethodView.setActive(false);\n  this.activeMethodView = null;\n  this._headingLabel.classList.add('braintree-no-payment-method-selected');\n};\n\nPaymentMethodsView.prototype._getPaymentMethodString = function () {\n  var stringKey, paymentMethodTypeString;\n\n  if (!this.activeMethodView) {\n    return '';\n  }\n\n  stringKey = PAYMENT_METHOD_TYPE_TO_TRANSLATION_STRING[this.activeMethodView.paymentMethod.type];\n  paymentMethodTypeString = this.strings[stringKey];\n\n  return this.strings.payingWith.replace('{{paymentSource}}', paymentMethodTypeString);\n};\n\nPaymentMethodsView.prototype.enableEditMode = function () {\n  this.container.classList.add('braintree-methods--edit');\n\n  this._editButton.innerHTML = this.strings.deleteCancelButton;\n  this._headingLabel.innerHTML = this.strings.editPaymentMethods;\n\n  this.views.forEach(function (view) {\n    view.enableEditMode();\n  });\n};\n\nPaymentMethodsView.prototype.disableEditMode = function () {\n  this.container.classList.remove('braintree-methods--edit');\n\n  this._editButton.innerHTML = this.strings.edit;\n  this._headingLabel.innerHTML = this._getPaymentMethodString();\n\n  this.views.forEach(function (view) {\n    view.disableEditMode();\n  });\n};\n\nPaymentMethodsView.prototype._addPaymentMethod = function (paymentMethod) {\n  var paymentMethodView = new PaymentMethodView({\n    model: this.model,\n    paymentMethod: paymentMethod,\n    client: this.client,\n    strings: this.strings\n  });\n\n  if (this.model.isGuestCheckout && this.container.firstChild) {\n    this.views[0].teardown();\n    this.views.pop();\n  }\n\n  if (this.container.firstChild) {\n    this.container.insertBefore(paymentMethodView.element, this.container.firstChild);\n  } else {\n    this.container.appendChild(paymentMethodView.element);\n  }\n\n  this.views.push(paymentMethodView);\n};\n\nPaymentMethodsView.prototype._removePaymentMethod = function (paymentMethod) {\n  var i;\n\n  for (i = 0; i < this.views.length; i++) {\n    if (this.views[i].paymentMethod === paymentMethod) {\n      this.views[i].teardown();\n      this._headingLabel.innerHTML = '&nbsp;';\n      this.views.splice(i, 1);\n      break;\n    }\n  }\n};\n\nPaymentMethodsView.prototype._changeActivePaymentMethodView = function (paymentMethod) {\n  var i;\n  var previousActiveMethodView = this.activeMethodView;\n\n  for (i = 0; i < this.views.length; i++) {\n    if (this.views[i].paymentMethod === paymentMethod) {\n      this.activeMethodView = this.views[i];\n      this._headingLabel.innerHTML = this._getPaymentMethodString();\n      break;\n    }\n  }\n\n  if (previousActiveMethodView) {\n    previousActiveMethodView.setActive(false);\n  }\n  this.activeMethodView.setActive(true);\n  this._headingLabel.classList.remove('braintree-no-payment-method-selected');\n};\n\nPaymentMethodsView.prototype.requestPaymentMethod = function () {\n  if (!this.activeMethodView || this.model.isInEditMode()) {\n    return Promise.reject(new DropinError(errors.NO_PAYMENT_METHOD_ERROR));\n  }\n\n  return Promise.resolve(this.activeMethodView.paymentMethod);\n};\n\nPaymentMethodsView.prototype.refreshPaymentMethods = function () {\n  var i;\n  var paymentMethods = this.model.getPaymentMethods();\n\n  this.views.forEach(function (view) {\n    view.teardown();\n  });\n\n  this.views = [];\n\n  for (i = paymentMethods.length - 1; i >= 0; i--) {\n    this._addPaymentMethod(paymentMethods[i]);\n  }\n};\n\nmodule.exports = PaymentMethodsView;\n\n},{\"../constants\":189,\"../lib/add-selection-event-handler\":193,\"../lib/dropin-error\":199,\"./base-view\":246,\"./payment-method-view\":249}],251:[function(require,module,exports){\n'use strict';\n\nvar analytics = require('../lib/analytics');\nvar addSelectionEventHandler = require('../lib/add-selection-event-handler');\nvar BaseView = require('./base-view');\n\nvar paymentOptionIDs = require('../constants').paymentOptionIDs;\n\nvar paymentMethodOptionHTML = \"<div class=\\\"braintree-option__logo\\\">\\n  <svg width=\\\"48\\\" height=\\\"29\\\" class=\\\"@CLASSNAME\\\">\\n    <use xlink:href=\\\"#@ICON\\\"></use>\\n  </svg>\\n</div>\\n\\n<div class=\\\"braintree-option__label\\\" aria-label=\\\"@OPTION_LABEL\\\">\\n  @OPTION_TITLE\\n  <div class=\\\"braintree-option__disabled-message\\\"></div>\\n</div>\\n\";\n\nfunction PaymentOptionsView() {\n  BaseView.apply(this, arguments);\n\n  this._initialize();\n}\n\nPaymentOptionsView.prototype = Object.create(BaseView.prototype);\nPaymentOptionsView.prototype.constructor = PaymentOptionsView;\nPaymentOptionsView.ID = PaymentOptionsView.prototype.ID = 'options';\n\nPaymentOptionsView.prototype._initialize = function () {\n  this.container = this.getElementById('payment-options-container');\n  this.elements = {};\n\n  this.model.supportedPaymentOptions.forEach(function (paymentOptionID) {\n    this._addPaymentOption(paymentOptionID);\n  }.bind(this));\n};\n\nPaymentOptionsView.prototype._addPaymentOption = function (paymentOptionID) {\n  var paymentSource;\n  var div = document.createElement('div');\n  var html = paymentMethodOptionHTML;\n  var clickHandler = function clickHandler() {\n    this.mainView.setPrimaryView(paymentOptionID);\n    this.model.selectPaymentOption(paymentOptionID);\n    analytics.sendEvent(this.client, 'selected.' + paymentOptionIDs[paymentOptionID]);\n  }.bind(this);\n\n  div.className = 'braintree-option braintree-option__' + paymentOptionID;\n  div.setAttribute('tabindex', '0');\n  div.setAttribute('role', 'button');\n\n  switch (paymentOptionID) {\n    case paymentOptionIDs.applePay:\n      paymentSource = this.strings['Apple Pay'];\n      html = html.replace(/@ICON/g, 'logoApplePay');\n      break;\n    case paymentOptionIDs.card:\n      paymentSource = this.strings.Card;\n      html = html.replace(/@ICON/g, 'iconCardFront');\n      html = html.replace(/@CLASSNAME/g, 'braintree-icon--bordered');\n      break;\n    case paymentOptionIDs.googlePay:\n      paymentSource = this.strings['Google Pay'];\n      html = html.replace(/@ICON/g, 'logoGooglePay');\n      break;\n    case paymentOptionIDs.paypal:\n      paymentSource = this.strings.PayPal;\n      html = html.replace(/@ICON/g, 'logoPayPal');\n      break;\n    case paymentOptionIDs.paypalCredit:\n      paymentSource = this.strings['PayPal Credit'];\n      html = html.replace(/@ICON/g, 'logoPayPalCredit');\n      break;\n    case paymentOptionIDs.venmo:\n      paymentSource = this.strings.Venmo;\n      html = html.replace(/@ICON/g, 'logoVenmo');\n      break;\n    default:\n      break;\n  }\n\n  html = html.replace(/@OPTION_LABEL/g, this._generateOptionLabel(paymentSource));\n  html = html.replace(/@OPTION_TITLE/g, paymentSource);\n  html = html.replace(/@CLASSNAME/g, '');\n\n  div.innerHTML = html;\n\n  addSelectionEventHandler(div, clickHandler);\n\n  this.container.appendChild(div);\n  this.elements[paymentOptionID] = {\n    div: div,\n    clickHandler: clickHandler\n  };\n};\n\nPaymentOptionsView.prototype._generateOptionLabel = function (paymentSourceString) {\n  return this.strings.payingWith.replace('{{paymentSource}}', paymentSourceString);\n};\n\nmodule.exports = PaymentOptionsView;\n\n},{\"../constants\":189,\"../lib/add-selection-event-handler\":193,\"../lib/analytics\":194,\"./base-view\":246}],252:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nvar assign = require('../../lib/assign').assign;\nvar BaseView = require('../base-view');\nvar btApplePay = require('braintree-web/apple-pay');\nvar DropinError = require('../../lib/dropin-error');\nvar isHTTPS = require('../../lib/is-https');\nvar paymentOptionIDs = require('../../constants').paymentOptionIDs;\n\nvar DEFAULT_APPLE_PAY_SESSION_VERSION = 2;\n\nfunction ApplePayView() {\n  BaseView.apply(this, arguments);\n}\n\nApplePayView.prototype = Object.create(BaseView.prototype);\nApplePayView.prototype.constructor = ApplePayView;\nApplePayView.ID = ApplePayView.prototype.ID = paymentOptionIDs.applePay;\n\nApplePayView.prototype.initialize = function () {\n  var self = this;\n\n  self.applePayConfiguration = assign({}, self.model.merchantConfiguration.applePay);\n  self.applePaySessionVersion = self.applePayConfiguration.applePaySessionVersion || DEFAULT_APPLE_PAY_SESSION_VERSION;\n\n  delete self.applePayConfiguration.applePaySessionVersion;\n\n  return btApplePay.create({client: this.client}).then(function (applePayInstance) {\n    self.buttonDiv = self.getElementById('apple-pay-button');\n\n    self.applePayInstance = applePayInstance;\n\n    self.buttonDiv.onclick = self._showPaymentSheet.bind(self);\n    self.buttonDiv.style['-apple-pay-button-style'] = self.model.merchantConfiguration.applePay.buttonStyle || 'black';\n\n    self.model.asyncDependencyReady(ApplePayView.ID);\n  }).catch(function (err) {\n    self.model.asyncDependencyFailed({\n      view: self.ID,\n      error: new DropinError(err)\n    });\n  });\n};\n\nApplePayView.prototype.requestPaymentMethod = function () {\n  this.model.reportError('applePayButtonMustBeUsed');\n\n  return BaseView.prototype.requestPaymentMethod.call(this);\n};\n\nApplePayView.prototype._showPaymentSheet = function () {\n  var self = this;\n  var request, session;\n\n  if (this._sessionInProgress) {\n    return false;\n  }\n\n  this._sessionInProgress = true;\n\n  request = this.applePayInstance.createPaymentRequest(this.applePayConfiguration.paymentRequest);\n  session = new global.ApplePaySession(self.applePaySessionVersion, request);\n\n  session.onvalidatemerchant = function (event) {\n    self.applePayInstance.performValidation({\n      validationURL: event.validationURL,\n      displayName: self.applePayConfiguration.displayName\n    }).then(function (validationData) {\n      session.completeMerchantValidation(validationData);\n    }).catch(function (validationErr) {\n      self.model.reportError(validationErr);\n      self._sessionInProgress = false;\n      session.abort();\n    });\n  };\n\n  session.onpaymentauthorized = function (event) {\n    self.applePayInstance.tokenize({\n      token: event.payment.token\n    }).then(function (payload) {\n      self._sessionInProgress = false;\n      session.completePayment(global.ApplePaySession.STATUS_SUCCESS);\n      payload.rawPaymentData = event.payment;\n      self.model.addPaymentMethod(payload);\n    }).catch(function (tokenizeErr) {\n      self.model.reportError(tokenizeErr);\n      self._sessionInProgress = false;\n      session.completePayment(global.ApplePaySession.STATUS_FAILURE);\n    });\n  };\n\n  session.oncancel = function () {\n    self._sessionInProgress = false;\n  };\n\n  session.begin();\n\n  return false;\n};\n\nApplePayView.prototype.updateConfiguration = function (key, value) {\n  this.applePayConfiguration[key] = value;\n};\n\nApplePayView.isEnabled = function (options) {\n  var gatewayConfiguration = options.client.getConfiguration().gatewayConfiguration;\n  var applePayEnabled = gatewayConfiguration.applePayWeb && Boolean(options.merchantConfiguration.applePay);\n  var applePaySessionVersion = options.merchantConfiguration.applePay && options.merchantConfiguration.applePay.applePaySessionVersion;\n  var applePayBrowserSupported;\n\n  applePaySessionVersion = applePaySessionVersion || DEFAULT_APPLE_PAY_SESSION_VERSION;\n\n  if (!applePayEnabled) {\n    return Promise.resolve(false);\n  }\n\n  applePayBrowserSupported = global.ApplePaySession && isHTTPS.isHTTPS();\n\n  if (!applePayBrowserSupported) {\n    return Promise.resolve(false);\n  }\n\n  if (!global.ApplePaySession.supportsVersion(applePaySessionVersion)) {\n    return Promise.resolve(false);\n  }\n\n  return Promise.resolve(Boolean(global.ApplePaySession.canMakePayments()));\n};\n\nmodule.exports = ApplePayView;\n\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../constants\":189,\"../../lib/assign\":195,\"../../lib/dropin-error\":199,\"../../lib/is-https\":202,\"../base-view\":246,\"braintree-web/apple-pay\":50}],253:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nvar analytics = require('../../lib/analytics');\nvar assign = require('../../lib/assign').assign;\nvar browserDetection = require('../../lib/browser-detection');\nvar BaseView = require('../base-view');\nvar btPaypal = require('braintree-web/paypal-checkout');\nvar DropinError = require('../../lib/dropin-error');\nvar constants = require('../../constants');\nvar assets = require('@braintree/asset-loader');\nvar translations = require('../../translations').fiveCharacterLocales;\n\nvar ASYNC_DEPENDENCY_TIMEOUT = 30000;\nvar READ_ONLY_CONFIGURATION_OPTIONS = ['offerCredit', 'locale'];\nvar DEFAULT_CHECKOUTJS_LOG_LEVEL = 'warn';\n\nvar paypalScriptLoadInProgressPromise;\n\nfunction BasePayPalView() {\n  BaseView.apply(this, arguments);\n}\n\nBasePayPalView.prototype = Object.create(BaseView.prototype);\n\nBasePayPalView.prototype.initialize = function () {\n  var asyncDependencyTimeoutHandler;\n  var isCredit = Boolean(this._isPayPalCredit);\n  var setupComplete = false;\n  var self = this;\n  var paypalType = isCredit ? 'paypalCredit' : 'paypal';\n  var paypalConfiguration = this.model.merchantConfiguration[paypalType];\n  var dropinWrapperId = '#braintree--dropin__' + this.model.componentID;\n\n  this.paypalConfiguration = assign({}, paypalConfiguration);\n\n  asyncDependencyTimeoutHandler = setTimeout(function () {\n    self.model.asyncDependencyFailed({\n      view: self.ID,\n      error: new DropinError('There was an error connecting to PayPal.')\n    });\n  }, ASYNC_DEPENDENCY_TIMEOUT);\n\n  return btPaypal.create({client: this.client}).then(function (paypalInstance) {\n    var checkoutJSConfiguration;\n    var buttonSelector = '[data-braintree-id=\"paypal-button\"]';\n    var environment = self.client.getConfiguration().gatewayConfiguration.environment === 'production' ? 'production' : 'sandbox';\n    var locale = self.model.merchantConfiguration.locale;\n\n    self.paypalInstance = paypalInstance;\n\n    self.paypalConfiguration.offerCredit = Boolean(isCredit);\n    checkoutJSConfiguration = {\n      env: environment,\n      style: self.paypalConfiguration.buttonStyle || {},\n      commit: self.paypalConfiguration.commit,\n      payment: function () {\n        return paypalInstance.createPayment(self.paypalConfiguration).catch(reportError);\n      },\n      onAuthorize: function (data) {\n        // NEXT_MAJOR_VERSION change out this vaultPayPal property\n        // to something more generic, such as vaultOnTokenization so\n        // all the vault objects can have the same shape (instead\n        // of being specific to PayPal accounts here)\n        var shouldNotVault = self.paypalConfiguration.vault && self.paypalConfiguration.vault.vaultPayPal === false;\n\n        if (shouldNotVault) {\n          data.vault = false;\n        }\n\n        return paypalInstance.tokenizePayment(data).then(function (tokenizePayload) {\n          if (!shouldNotVault && self.paypalConfiguration.flow === 'vault' && !self.model.isGuestCheckout) {\n            tokenizePayload.vaulted = true;\n          }\n          self.model.addPaymentMethod(tokenizePayload);\n        }).catch(reportError);\n      },\n      onError: reportError\n    };\n\n    if (locale && locale in translations) {\n      self.paypalConfiguration.locale = locale;\n      checkoutJSConfiguration.locale = locale;\n    }\n    checkoutJSConfiguration.funding = {\n      disallowed: []\n    };\n\n    Object.keys(global.paypal.FUNDING).forEach(function (key) {\n      if (key === 'PAYPAL' || key === 'CREDIT') {\n        return;\n      }\n      checkoutJSConfiguration.funding.disallowed.push(global.paypal.FUNDING[key]);\n    });\n\n    if (isCredit) {\n      buttonSelector = '[data-braintree-id=\"paypal-credit-button\"]';\n      checkoutJSConfiguration.style.label = 'credit';\n    } else {\n      checkoutJSConfiguration.funding.disallowed.push(global.paypal.FUNDING.CREDIT);\n    }\n\n    buttonSelector = dropinWrapperId + ' ' + buttonSelector;\n\n    return global.paypal.Button.render(checkoutJSConfiguration, buttonSelector).then(function () {\n      self.model.asyncDependencyReady(paypalType);\n      setupComplete = true;\n      clearTimeout(asyncDependencyTimeoutHandler);\n    });\n  }).catch(reportError);\n\n  function reportError(err) {\n    if (setupComplete) {\n      self.model.reportError(err);\n    } else {\n      self.model.asyncDependencyFailed({\n        view: self.ID,\n        error: err\n      });\n      clearTimeout(asyncDependencyTimeoutHandler);\n    }\n  }\n};\n\nBasePayPalView.prototype.requestPaymentMethod = function () {\n  this.model.reportError('paypalButtonMustBeUsed');\n\n  return BaseView.prototype.requestPaymentMethod.call(this);\n};\n\nBasePayPalView.prototype.updateConfiguration = function (key, value) {\n  if (READ_ONLY_CONFIGURATION_OPTIONS.indexOf(key) === -1) {\n    this.paypalConfiguration[key] = value;\n  }\n};\n\nBasePayPalView.isEnabled = function (options) {\n  var gatewayConfiguration = options.client.getConfiguration().gatewayConfiguration;\n  var merchantPayPalConfig = options.merchantConfiguration.paypal || options.merchantConfiguration.paypalCredit;\n\n  if (!gatewayConfiguration.paypalEnabled) {\n    return Promise.resolve(false);\n  }\n\n  if (browserDetection.isIe9() || browserDetection.isIe10()) {\n    analytics.sendEvent(options.client, options.viewID + '.checkout.js-browser-not-supported');\n\n    return Promise.resolve(false);\n  }\n\n  if (global.paypal && global.paypal.Button) {\n    return Promise.resolve(true);\n  }\n\n  if (paypalScriptLoadInProgressPromise) {\n    return paypalScriptLoadInProgressPromise;\n  }\n\n  paypalScriptLoadInProgressPromise = assets.loadScript({\n    src: constants.CHECKOUT_JS_SOURCE,\n    id: constants.PAYPAL_CHECKOUT_SCRIPT_ID,\n    dataAttributes: {\n      'log-level': merchantPayPalConfig.logLevel || DEFAULT_CHECKOUTJS_LOG_LEVEL\n    }\n  }).then(function () {\n    return Promise.resolve(true);\n  }).catch(function () {\n    return Promise.resolve(false);\n  }).then(function (result) {\n    paypalScriptLoadInProgressPromise = null;\n\n    return Promise.resolve(result);\n  });\n\n  return paypalScriptLoadInProgressPromise;\n};\n\nmodule.exports = BasePayPalView;\n\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../constants\":189,\"../../lib/analytics\":194,\"../../lib/assign\":195,\"../../lib/browser-detection\":196,\"../../lib/dropin-error\":199,\"../../translations\":229,\"../base-view\":246,\"@braintree/asset-loader\":1,\"braintree-web/paypal-checkout\":129}],254:[function(require,module,exports){\n'use strict';\n\nvar assign = require('../../lib/assign').assign;\n\nvar BaseView = require('../base-view');\nvar constants = require('../../constants');\nvar DropinError = require('../../lib/dropin-error');\nvar hostedFields = require('braintree-web/hosted-fields');\nvar isUtf8 = require('../../lib/is-utf-8');\nvar transitionHelper = require('../../lib/transition-helper');\n\nvar cardIconHTML = \"<div data-braintree-id=\\\"visa-card-icon\\\" class=\\\"braintree-sheet__card-icon\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-visa\\\"></use>\\n    </svg>\\n</div>\\n<div data-braintree-id=\\\"master-card-card-icon\\\" class=\\\"braintree-sheet__card-icon\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-master-card\\\"></use>\\n    </svg>\\n</div>\\n<div data-braintree-id=\\\"unionpay-card-icon\\\" class=\\\"braintree-sheet__card-icon\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-unionpay\\\"></use>\\n    </svg>\\n</div>\\n<div data-braintree-id=\\\"american-express-card-icon\\\" class=\\\"braintree-sheet__card-icon\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-american-express\\\"></use>\\n    </svg>\\n</div>\\n<div data-braintree-id=\\\"jcb-card-icon\\\" class=\\\"braintree-sheet__card-icon\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-jcb\\\"></use>\\n    </svg>\\n</div>\\n<!--Elo, Hiper, and Hipercard currently use the generic icon.\\nThe  braintree-hidden class should be removed here once we get icons for these cards-->\\n<div data-braintree-id=\\\"elo-card-icon\\\" class=\\\"braintree-sheet__card-icon braintree-hidden\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-elo\\\"></use>\\n    </svg>\\n</div>\\n<div data-braintree-id=\\\"hiper-card-icon\\\" class=\\\"braintree-sheet__card-icon braintree-hidden\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-hiper\\\"></use>\\n    </svg>\\n</div>\\n<div data-braintree-id=\\\"hipercard-card-icon\\\" class=\\\"braintree-sheet__card-icon braintree-hidden\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-hipercard\\\"></use>\\n    </svg>\\n</div>\\n<!-- Remove braintree-hidden class when supportedCardType accurately indicates Diners Club support -->\\n<div data-braintree-id=\\\"diners-club-card-icon\\\" class=\\\"braintree-sheet__card-icon braintree-hidden\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-diners-club\\\"></use>\\n    </svg>\\n</div>\\n<div data-braintree-id=\\\"discover-card-icon\\\" class=\\\"braintree-sheet__card-icon\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-discover\\\"></use>\\n    </svg>\\n</div>\\n<div data-braintree-id=\\\"maestro-card-icon\\\" class=\\\"braintree-sheet__card-icon\\\">\\n    <svg width=\\\"40\\\" height=\\\"24\\\">\\n        <use xlink:href=\\\"#icon-maestro\\\"></use>\\n    </svg>\\n</div>\\n\";\n\nvar PASSTHROUGH_EVENTS = [\n  'empty',\n  // TODO should intercept this event and call tokenize\n  'inputSubmitRequest',\n  'binAvailable'\n];\n\nvar HOSTED_FIELDS = [\n  'number',\n  'expirationDate',\n  'cvv',\n  'postalCode',\n  'cardholderName'\n];\n\nfunction CardView() {\n  BaseView.apply(this, arguments);\n}\n\nCardView.prototype = Object.create(BaseView.prototype);\nCardView.prototype.constructor = CardView;\nCardView.ID = CardView.prototype.ID = constants.paymentOptionIDs.card;\n\nCardView.prototype.initialize = function () {\n  var cvvFieldGroup, postalCodeFieldGroup, hfOptions;\n  var cardholderNameGroup = this.getElementById('cardholder-name-field-group');\n\n  // If merchant explicty passes a value of `true` for card configuration,\n  // we need to treat it as if no card configuration was passed, and provide\n  // the default configuration\n  if (this.model.merchantConfiguration.card && this.model.merchantConfiguration.card !== true) {\n    this.merchantConfiguration = this.model.merchantConfiguration.card;\n  } else {\n    this.merchantConfiguration = {};\n  }\n  this.merchantConfiguration.vault = this.merchantConfiguration.vault || {};\n  this.hasCardholderName = Boolean(this.merchantConfiguration.cardholderName);\n  this.cardholderNameRequired = this.hasCardholderName && this.merchantConfiguration.cardholderName.required === true;\n  hfOptions = this._generateHostedFieldsOptions();\n\n  this._renderCardIcons();\n  this._hideUnsupportedCardIcons();\n\n  this.hasCVV = hfOptions.fields.cvv;\n  this.saveCardInput = this.getElementById('save-card-input');\n  this.cardNumberIcon = this.getElementById('card-number-icon');\n  this.cardNumberIconSvg = this.getElementById('card-number-icon-svg');\n  this.cvvIcon = this.getElementById('cvv-icon');\n  this.cvvIconSvg = this.getElementById('cvv-icon-svg');\n  this.cvvLabelDescriptor = this.getElementById('cvv-label-descriptor');\n  this.fieldErrors = {};\n\n  if (!this.hasCardholderName) {\n    cardholderNameGroup.parentNode.removeChild(cardholderNameGroup);\n    HOSTED_FIELDS = HOSTED_FIELDS.filter(function (field) {\n      return field !== 'cardholderName';\n    });\n  }\n\n  if (!this.hasCVV) {\n    cvvFieldGroup = this.getElementById('cvv-field-group');\n    cvvFieldGroup.parentNode.removeChild(cvvFieldGroup);\n    HOSTED_FIELDS = HOSTED_FIELDS.filter(function (field) {\n      return field !== 'cvv';\n    });\n  }\n\n  if (!hfOptions.fields.postalCode) {\n    postalCodeFieldGroup = this.getElementById('postal-code-field-group');\n    postalCodeFieldGroup.parentNode.removeChild(postalCodeFieldGroup);\n    HOSTED_FIELDS = HOSTED_FIELDS.filter(function (field) {\n      return field !== 'postalCode';\n    });\n  }\n\n  if (!this.model.isGuestCheckout && this.merchantConfiguration.vault.allowVaultCardOverride === true) {\n    this.getElementById('save-card-field-group').classList.remove('braintree-hidden');\n  }\n\n  // NEXT_MAJOR_VERSION change out this vaultCard property\n  // to something more generic, such as vaultOnTokenization so\n  // all the vault objects can have the same shape (instead\n  // of being specific to cards here)\n  if (this.merchantConfiguration.vault.vaultCard === false) {\n    this.saveCardInput.checked = false;\n  }\n\n  return hostedFields.create(hfOptions).then(function (hostedFieldsInstance) {\n    this.hostedFieldsInstance = hostedFieldsInstance;\n    this.hostedFieldsInstance.on('blur', this._onBlurEvent.bind(this));\n    this.hostedFieldsInstance.on('cardTypeChange', this._onCardTypeChangeEvent.bind(this));\n    this.hostedFieldsInstance.on('focus', this._onFocusEvent.bind(this));\n    this.hostedFieldsInstance.on('notEmpty', this._onNotEmptyEvent.bind(this));\n    this.hostedFieldsInstance.on('validityChange', this._onValidityChangeEvent.bind(this));\n    HOSTED_FIELDS.forEach(function (hostedField) {\n      this.hostedFieldsInstance.setAttribute({\n        field: hostedField, attribute: 'aria-required', value: true\n      });\n    }.bind(this));\n\n    PASSTHROUGH_EVENTS.forEach(function (eventName) {\n      this.hostedFieldsInstance.on(eventName, function (event) {\n        this.model._emit('card:' + eventName, event);\n      }.bind(this));\n    }.bind(this));\n\n    this.model.asyncDependencyReady(CardView.ID);\n  }.bind(this)).catch(function (err) {\n    this.model.asyncDependencyFailed({\n      view: this.ID,\n      error: err\n    });\n  }.bind(this));\n};\n\nCardView.prototype._sendRequestableEvent = function () {\n  if (!this._isTokenizing) {\n    this.model.setPaymentMethodRequestable({\n      isRequestable: this._validateForm(),\n      type: constants.paymentMethodTypes.card\n    });\n  }\n};\n\nCardView.prototype._renderCardIcons = function () {\n  var overrides = this.merchantConfiguration.overrides;\n  var cardIcons = this.getElementById('card-view-icons');\n  var supportedCardBrands = overrides && overrides.fields && overrides.fields.number && overrides.fields.number.supportedCardBrands;\n\n  cardIcons.innerHTML = cardIconHTML;\n\n  if (supportedCardBrands) {\n    Object.keys(supportedCardBrands).forEach(function (cardBrand) {\n      var value = supportedCardBrands[cardBrand];\n      var selector, iconDiv;\n\n      if (value === false) {\n        selector = 'div[data-braintree-id=\"' + constants.cardTypeIcons[cardBrand] + '-card-icon\"]';\n        iconDiv = document.querySelector(selector);\n        hideCardIcon(iconDiv);\n      }\n    });\n  }\n};\n\nCardView.prototype._generateHostedFieldsOptions = function () {\n  var challenges = this.client.getConfiguration().gatewayConfiguration.challenges;\n  var hasCVVChallenge = challenges.indexOf('cvv') !== -1;\n  var hasPostalCodeChallenge = challenges.indexOf('postal_code') !== -1;\n  var overrides = this.merchantConfiguration.overrides;\n  var options = {\n    client: this.client,\n    fields: {\n      cardholderName: {\n        container: this._getFieldContainer('cardholder-name'),\n        placeholder: this.strings.cardholderNamePlaceholder\n      },\n      number: {\n        container: this._getFieldContainer('number'),\n        placeholder: generateCardNumberPlaceholder()\n      },\n      expirationDate: {\n        container: this._getFieldContainer('expiration'),\n        placeholder: this.strings.expirationDatePlaceholder\n      },\n      cvv: {\n        container: this._getFieldContainer('cvv'),\n        placeholder: addBullets(3)\n      },\n      postalCode: {\n        container: this._getFieldContainer('postal-code')\n      }\n    },\n    styles: {\n      input: {\n        'font-size': '16px',\n        'font-family': '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n        color: '#000'\n      },\n      ':focus': {\n        color: 'black'\n      },\n      '::-webkit-input-placeholder': {\n        color: '#6a6a6a'\n      },\n      ':-moz-placeholder': {\n        color: '#6a6a6a'\n      },\n      '::-moz-placeholder': {\n        color: '#6a6a6a'\n      },\n      ':-ms-input-placeholder ': {\n        color: '#6a6a6a'\n      },\n      'input::-ms-clear': {\n        color: 'transparent'\n      }\n    }\n  };\n\n  if (!this.hasCardholderName) {\n    delete options.fields.cardholderName;\n  }\n\n  if (!hasCVVChallenge) {\n    delete options.fields.cvv;\n  }\n\n  if (!hasPostalCodeChallenge) {\n    delete options.fields.postalCode;\n  }\n\n  if (!overrides) { return options; }\n\n  if (overrides.fields) {\n    if (overrides.fields.cvv && typeof overrides.fields.cvv.placeholder !== 'undefined') {\n      this._hasCustomCVVPlaceholder = true;\n    }\n\n    Object.keys(overrides.fields).forEach(function (field) {\n      if ((field === 'cvv' || field === 'postalCode') && overrides.fields[field] === null) {\n        delete options.fields[field];\n\n        return;\n      }\n\n      if (!options.fields[field]) {\n        return;\n      }\n\n      assign(options.fields[field], overrides.fields[field], {\n        selector: options.fields[field].selector\n      });\n    });\n  }\n\n  if (overrides.styles) {\n    Object.keys(overrides.styles).forEach(function (style) {\n      if (overrides.styles[style] === null) {\n        delete options.styles[style];\n\n        return;\n      } else if (typeof overrides.styles[style] === 'string') {\n        // it's a class name, and should override the configured styles entirely\n        options.styles[style] = overrides.styles[style];\n\n        return;\n      }\n\n      normalizeStyles(overrides.styles[style]);\n      options.styles[style] = options.styles[style] || {};\n\n      assign(options.styles[style], overrides.styles[style]);\n    });\n  }\n\n  return options;\n};\n\nCardView.prototype._validateForm = function (showFieldErrors) {\n  var card, cardType, cardTypeSupported, state;\n  var isValid = true;\n  var supportedCardTypes = this.client.getConfiguration().gatewayConfiguration.creditCards.supportedCardTypes;\n\n  if (!this.hostedFieldsInstance) {\n    return false;\n  }\n\n  state = this.hostedFieldsInstance.getState();\n\n  Object.keys(state.fields).forEach(function (key) {\n    var field = state.fields[key];\n\n    if (!showFieldErrors && !isValid) {\n      // return early if form is already invalid\n      // and we don't need to display all field errors\n      return;\n    }\n\n    if (field.isEmpty) {\n      if (!this.cardholderNameRequired && key === 'cardholderName') {\n        isValid = true;\n      } else {\n        isValid = false;\n\n        if (showFieldErrors) {\n          this.showFieldError(key, this.strings['fieldEmptyFor' + capitalize(key)]);\n        }\n      }\n    } else if (!field.isValid) {\n      isValid = false;\n\n      if (showFieldErrors) {\n        this.showFieldError(key, this.strings['fieldInvalidFor' + capitalize(key)]);\n      }\n    }\n  }.bind(this));\n\n  if (state.fields.number.isValid) {\n    card = state.cards[0];\n    cardType = card && constants.configurationCardTypes[card.type];\n    cardTypeSupported = cardType && supportedCardTypes.indexOf(cardType) !== -1;\n\n    if (!cardTypeSupported) {\n      isValid = false;\n\n      if (showFieldErrors) {\n        this.showFieldError('number', this.strings.unsupportedCardTypeError);\n      }\n    }\n  }\n\n  return isValid;\n};\n\nCardView.prototype.getPaymentMethod = function () { // eslint-disable-line consistent-return\n  var formIsValid = this._validateForm();\n\n  if (formIsValid) {\n    return {\n      type: constants.paymentMethodTypes.card\n    };\n  }\n};\n\nCardView.prototype.tokenize = function () {\n  var transitionCallback;\n  var self = this;\n  var state = self.hostedFieldsInstance.getState();\n  var tokenizeOptions = {\n    vault: this._shouldVault()\n  };\n\n  this.model.clearError();\n\n  if (!this._validateForm(true)) {\n    self.model.reportError('hostedFieldsFieldsInvalidError');\n    self.allowUserAction();\n\n    return Promise.reject(new DropinError(constants.errors.NO_PAYMENT_METHOD_ERROR));\n  }\n\n  if (!this.cardholderNameRequired && state.fields.cardholderName && state.fields.cardholderName.isEmpty) {\n    tokenizeOptions.fieldsToTokenize = Object.keys(state.fields).filter(function (field) {\n      return field !== 'cardholderName';\n    });\n  }\n\n  self._isTokenizing = true;\n\n  return self.hostedFieldsInstance.tokenize(tokenizeOptions).then(function (payload) {\n    var retainCardFields = self.merchantConfiguration.clearFieldsAfterTokenization === false;\n\n    if (!retainCardFields) {\n      Object.keys(state.fields).forEach(function (field) {\n        self.hostedFieldsInstance.clear(field);\n      });\n    }\n\n    if (self._shouldVault()) {\n      payload.vaulted = true;\n    }\n\n    return new Promise(function (resolve) {\n      transitionCallback = function () {\n        // Wait for braintree-sheet--tokenized class to be added in IE 9\n        // before attempting to remove it\n        setTimeout(function () {\n          self.model.addPaymentMethod(payload);\n          resolve(payload);\n          self.element.classList.remove('braintree-sheet--tokenized');\n        }, 0);\n      };\n\n      transitionHelper.onTransitionEnd(self.element, 'max-height', transitionCallback);\n\n      setTimeout(function () {\n        self.allowUserAction();\n        self._isTokenizing = false;\n      }, constants.CHANGE_ACTIVE_PAYMENT_METHOD_TIMEOUT);\n\n      self.element.classList.add('braintree-sheet--tokenized');\n    });\n  }).catch(function (err) {\n    self._isTokenizing = false;\n    // this is a little magical, but if the code property exists\n    // in the translations with the word Error appended to the end,\n    // then reportError will automatically print that translation.\n    // See https://github.com/braintree/braintree-web-drop-in/blob/6ecba73f2f16e8b7ae2119702ac162a1a985908e/src/views/main-view.js#L255-L256\n    self.model.reportError(err);\n    self.allowUserAction();\n\n    return Promise.reject(new DropinError({\n      message: constants.errors.NO_PAYMENT_METHOD_ERROR,\n      braintreeWebError: err\n    }));\n  });\n};\n\nCardView.prototype.showFieldError = function (field, errorMessage) {\n  var fieldError;\n  var fieldGroup = this.getElementById(camelCaseToKebabCase(field) + '-field-group');\n  var input = fieldGroup.querySelector('input');\n\n  if (!this.fieldErrors.hasOwnProperty(field)) {\n    this.fieldErrors[field] = this.getElementById(camelCaseToKebabCase(field) + '-field-error');\n  }\n\n  fieldGroup.classList.add('braintree-form__field-group--has-error');\n\n  fieldError = this.fieldErrors[field];\n  fieldError.innerHTML = errorMessage;\n\n  if (input) {\n    input.setAttribute('aria-invalid', true);\n  } else {\n    this.hostedFieldsInstance.setAttribute({\n      field: field,\n      attribute: 'aria-invalid',\n      value: true\n    });\n    this.hostedFieldsInstance.setMessage({\n      field: field,\n      message: errorMessage\n    });\n  }\n};\n\nCardView.prototype.hideFieldError = function (field) {\n  var fieldGroup = this.getElementById(camelCaseToKebabCase(field) + '-field-group');\n  var input = fieldGroup.querySelector('input');\n\n  if (!this.fieldErrors.hasOwnProperty(field)) {\n    this.fieldErrors[field] = this.getElementById(camelCaseToKebabCase(field) + '-field-error');\n  }\n\n  fieldGroup.classList.remove('braintree-form__field-group--has-error');\n\n  if (input) {\n    input.removeAttribute('aria-invalid');\n  } else {\n    this.hostedFieldsInstance.removeAttribute({\n      field: field,\n      attribute: 'aria-invalid'\n    });\n    this.hostedFieldsInstance.setMessage({\n      field: field,\n      message: ''\n    });\n  }\n};\n\nCardView.prototype.teardown = function () {\n  return this.hostedFieldsInstance.teardown();\n};\n\nCardView.prototype._shouldVault = function () {\n  return !this.model.isGuestCheckout && this.saveCardInput.checked;\n};\n\nCardView.prototype._getFieldContainer = function (field) {\n  // we committed to not changing the data-braintree-id fields\n  // so we need to convert this field to the id used in the HTML\n  if (field === 'expiration') {\n    field = 'expiration-date';\n  }\n\n  return this.getElementById(field + '-field-group').querySelector('.braintree-form__hosted-field');\n};\n\nCardView.prototype._onBlurEvent = function (event) {\n  var field = event.fields[event.emittedBy];\n  var fieldGroup = this.getElementById(camelCaseToKebabCase(event.emittedBy) + '-field-group');\n\n  fieldGroup.classList.remove('braintree-form__field-group--is-focused');\n\n  if (field.isPotentiallyValid) {\n    this.hideFieldError(event.emittedBy);\n  }\n\n  if (this._shouldApplyFieldEmptyError(event.emittedBy, field)) {\n    this.showFieldError(event.emittedBy, this.strings['fieldEmptyFor' + capitalize(event.emittedBy)]);\n  } else if (!field.isEmpty && !field.isValid) {\n    this.showFieldError(event.emittedBy, this.strings['fieldInvalidFor' + capitalize(event.emittedBy)]);\n  } else if (event.emittedBy === 'number' && !this._isCardTypeSupported(event.cards[0])) {\n    this.showFieldError('number', this.strings.unsupportedCardTypeError);\n  }\n\n  this.model._emit('card:blur', event);\n\n  setTimeout(function () {\n    // when focusing on a field by clicking the label,\n    // we need to wait a bit for the iframe to be\n    // focused properly before applying validations\n    if (this._shouldApplyFieldEmptyError(event.emittedBy, field)) {\n      this.showFieldError(event.emittedBy, this.strings['fieldEmptyFor' + capitalize(event.emittedBy)]);\n    }\n  }.bind(this), 150);\n};\n\nCardView.prototype._onCardTypeChangeEvent = function (event) {\n  var cardType;\n  var cardNumberHrefLink = '#iconCardFront';\n  var cvvHrefLink = '#iconCVVBack';\n  var cvvDescriptor = this.strings.cvvThreeDigitLabelSubheading;\n  var cvvPlaceholder = addBullets(3);\n  var numberFieldGroup = this.getElementById('number-field-group');\n\n  if (event.cards.length === 1) {\n    cardType = event.cards[0].type;\n    cardNumberHrefLink = '#icon-' + cardType;\n    if (cardType === 'american-express') {\n      cvvHrefLink = '#iconCVVFront';\n      cvvDescriptor = this.strings.cvvFourDigitLabelSubheading;\n      cvvPlaceholder = addBullets(4);\n    }\n    // Keep icon visible when field is not focused\n    numberFieldGroup.classList.add('braintree-form__field-group--card-type-known');\n  } else {\n    numberFieldGroup.classList.remove('braintree-form__field-group--card-type-known');\n  }\n\n  // if the number field emitted the card change event fires\n  // and the card type is supported, we need to clear out the errors\n  // field in case that there was a \"card type is unsupported\" error\n  if (event.emittedBy === 'number' && this._isCardTypeSupported(event.cards[0])) {\n    this.hideFieldError(event.emittedBy);\n  }\n\n  this.cardNumberIconSvg.setAttribute('xlink:href', cardNumberHrefLink);\n\n  if (this.hasCVV) {\n    this.cvvIconSvg.setAttribute('xlink:href', cvvHrefLink);\n    this.cvvLabelDescriptor.innerHTML = cvvDescriptor;\n\n    if (!this._hasCustomCVVPlaceholder) {\n      this.hostedFieldsInstance.setAttribute({\n        field: 'cvv',\n        attribute: 'placeholder',\n        value: cvvPlaceholder\n      });\n    }\n  }\n\n  this.model._emit('card:cardTypeChange', event);\n};\n\nCardView.prototype._onFocusEvent = function (event) {\n  var fieldGroup = this.getElementById(camelCaseToKebabCase(event.emittedBy) + '-field-group');\n\n  fieldGroup.classList.add('braintree-form__field-group--is-focused');\n\n  this.model._emit('card:focus', event);\n};\n\nCardView.prototype._onNotEmptyEvent = function (event) {\n  this.hideFieldError(event.emittedBy);\n\n  this.model._emit('card:notEmpty', event);\n};\n\nCardView.prototype._onValidityChangeEvent = function (event) {\n  var isValid;\n  var field = event.fields[event.emittedBy];\n\n  if (event.emittedBy === 'number' && event.cards[0]) {\n    isValid = field.isValid && this._isCardTypeSupported(event.cards[0]);\n  } else {\n    isValid = field.isValid;\n  }\n\n  field.container.classList.toggle('braintree-form__field--valid', isValid);\n\n  if (field.isPotentiallyValid) {\n    this.hideFieldError(event.emittedBy);\n  }\n\n  this._sendRequestableEvent();\n\n  this.model._emit('card:validityChange', event);\n};\n\nCardView.prototype.requestPaymentMethod = function () {\n  this.preventUserAction();\n\n  return this.tokenize();\n};\n\nCardView.prototype.onSelection = function () {\n  if (!this.hostedFieldsInstance) {\n    return;\n  }\n\n  setTimeout(function () {\n    if (this.hasCardholderName) {\n      this.hostedFieldsInstance.focus('cardholderName');\n    } else {\n      this.hostedFieldsInstance.focus('number');\n    }\n  }.bind(this), 50);\n\n  this._sendRequestableEvent();\n};\n\nCardView.prototype._hideUnsupportedCardIcons = function () {\n  var supportedCardTypes = this.client.getConfiguration().gatewayConfiguration.creditCards.supportedCardTypes;\n\n  Object.keys(constants.configurationCardTypes).forEach(function (paymentMethodCardType) {\n    var cardIcon;\n    var configurationCardType = constants.configurationCardTypes[paymentMethodCardType];\n\n    if (supportedCardTypes.indexOf(configurationCardType) === -1) {\n      cardIcon = this.getElementById(paymentMethodCardType + '-card-icon');\n      cardIcon.classList.add('braintree-hidden');\n    }\n  }.bind(this));\n};\n\nCardView.prototype._isCardTypeSupported = function (card) {\n  var cardType = card && card.type;\n  var configurationCardType = constants.configurationCardTypes[cardType];\n  var supportedCardTypes = this.client.getConfiguration().gatewayConfiguration.creditCards.supportedCardTypes;\n\n  return supportedCardTypes.indexOf(configurationCardType) !== -1;\n};\n\nCardView.isEnabled = function (options) {\n  var gatewayConfiguration = options.client.getConfiguration().gatewayConfiguration;\n  var disabledByMerchant = options.merchantConfiguration.card === false;\n\n  return Promise.resolve(!disabledByMerchant && gatewayConfiguration.creditCards.supportedCardTypes.length > 0);\n};\n\nCardView.prototype._shouldApplyFieldEmptyError = function (fieldId, field) {\n  if (!field.isEmpty) {\n    return false;\n  }\n\n  if (fieldId === 'cardholderName' && !this.cardholderNameRequired) {\n    return false;\n  }\n\n  return isCardViewElement();\n};\n\nfunction hideCardIcon(icon) {\n  if (icon) {\n    icon.classList.add('braintree-hidden');\n  }\n}\n\nfunction isCardViewElement() {\n  var activeId = document.activeElement && document.activeElement.id;\n  var isHostedFieldsElement = document.activeElement instanceof HTMLIFrameElement && activeId.indexOf('braintree-hosted-field') !== -1;\n\n  return isHostedFieldsElement;\n}\n\nfunction camelCaseToKebabCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nfunction capitalize(string) {\n  return string[0].toUpperCase() + string.substr(1);\n}\n\nfunction normalizeStyles(styles) {\n  Object.keys(styles).forEach(function (style) {\n    var transformedKeyName = camelCaseToKebabCase(style);\n\n    styles[transformedKeyName] = styles[style];\n  });\n}\n\nfunction addBullets(number) {\n  var bulletCharacter = isUtf8() ? '•' : '*';\n\n  return Array(number + 1).join(bulletCharacter);\n}\n\nfunction generateCardNumberPlaceholder() {\n  var four = addBullets(4);\n\n  return [four, four, four, four].join(' ');\n}\n\nmodule.exports = CardView;\n\n},{\"../../constants\":189,\"../../lib/assign\":195,\"../../lib/dropin-error\":199,\"../../lib/is-utf-8\":203,\"../../lib/transition-helper\":209,\"../base-view\":246,\"braintree-web/hosted-fields\":78}],255:[function(require,module,exports){\n(function (global){(function (){\n'use strict';\n\nvar assign = require('../../lib/assign').assign;\nvar BaseView = require('../base-view');\nvar btGooglePay = require('braintree-web/google-payment');\nvar DropinError = require('../../lib/dropin-error');\nvar constants = require('../../constants');\nvar assets = require('@braintree/asset-loader');\nvar analytics = require('../../lib/analytics');\n\nfunction GooglePayView() {\n  BaseView.apply(this, arguments);\n}\n\nGooglePayView.prototype = Object.create(BaseView.prototype);\nGooglePayView.prototype.constructor = GooglePayView;\nGooglePayView.ID = GooglePayView.prototype.ID = constants.paymentOptionIDs.googlePay;\n\nGooglePayView.prototype.initialize = function () {\n  var self = this;\n  var buttonOptions, googlePayVersion, merchantId;\n\n  self.googlePayConfiguration = assign({}, self.model.merchantConfiguration.googlePay);\n  googlePayVersion = self.googlePayConfiguration.googlePayVersion;\n  merchantId = self.googlePayConfiguration.merchantId;\n\n  buttonOptions = assign({\n    buttonType: 'short'\n  }, self.googlePayConfiguration.button, {\n    onClick: function (event) {\n      event.preventDefault();\n\n      self.preventUserAction();\n\n      self.tokenize().then(function () {\n        self.allowUserAction();\n      });\n    }\n  });\n\n  delete self.googlePayConfiguration.googlePayVersion;\n  delete self.googlePayConfiguration.merchantId;\n  delete self.googlePayConfiguration.button;\n\n  return btGooglePay.create({\n    client: self.client,\n    googlePayVersion: googlePayVersion,\n    googleMerchantId: merchantId\n  }).then(function (googlePayInstance) {\n    self.googlePayInstance = googlePayInstance;\n    self.paymentsClient = createPaymentsClient(self.client);\n  }).then(function () {\n    var buttonContainer = self.getElementById('google-pay-button');\n\n    buttonContainer.appendChild(self.paymentsClient.createButton(buttonOptions));\n\n    self.model.asyncDependencyReady(GooglePayView.ID);\n  }).catch(function (err) {\n    self.model.asyncDependencyFailed({\n      view: self.ID,\n      error: new DropinError(err)\n    });\n  });\n};\n\nGooglePayView.prototype.tokenize = function () {\n  var self = this;\n  var paymentDataRequest = self.googlePayInstance.createPaymentDataRequest(self.googlePayConfiguration);\n  var rawPaymentData;\n\n  return self.paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\n    rawPaymentData = paymentData;\n\n    return self.googlePayInstance.parseResponse(paymentData);\n  }).then(function (tokenizePayload) {\n    tokenizePayload.rawPaymentData = rawPaymentData;\n    self.model.addPaymentMethod(tokenizePayload);\n  }).catch(function (err) {\n    var reportedError = err;\n\n    if (err.statusCode === 'DEVELOPER_ERROR') {\n      console.error(err); // eslint-disable-line no-console\n      reportedError = 'developerError';\n    } else if (err.statusCode === 'CANCELED') {\n      analytics.sendEvent(self.client, 'googlepay.loadPaymentData.canceled');\n\n      return;\n    } else if (err.statusCode) {\n      analytics.sendEvent(self.client, 'googlepay.loadPaymentData.failed');\n    }\n\n    self.model.reportError(reportedError);\n  });\n};\n\nGooglePayView.prototype.updateConfiguration = function (key, value) {\n  this.googlePayConfiguration[key] = value;\n};\n\nGooglePayView.isEnabled = function (options) {\n  var gatewayConfiguration = options.client.getConfiguration().gatewayConfiguration;\n\n  if (!(gatewayConfiguration.androidPay && Boolean(options.merchantConfiguration.googlePay))) {\n    return Promise.resolve(false);\n  }\n\n  return Promise.resolve().then(function () {\n    if (!(global.google && global.google.payments && global.google.payments.api && global.google.payments.api.PaymentsClient)) {\n      return assets.loadScript({\n        id: constants.GOOGLE_PAYMENT_SCRIPT_ID,\n        src: constants.GOOGLE_PAYMENT_SOURCE\n      });\n    }\n\n    return Promise.resolve();\n  }).then(function () {\n    var paymentsClient = createPaymentsClient(options.client);\n\n    return paymentsClient.isReadyToPay({\n      allowedPaymentMethods: ['CARD', 'TOKENIZED_CARD']\n    });\n  }).then(function (response) {\n    return Boolean(response.result);\n  });\n};\n\nfunction createPaymentsClient(client) {\n  return new global.google.payments.api.PaymentsClient({\n    environment: client.getConfiguration().gatewayConfiguration.environment === 'production' ? 'PRODUCTION' : 'TEST'\n  });\n}\n\nmodule.exports = GooglePayView;\n\n}).call(this)}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../../constants\":189,\"../../lib/analytics\":194,\"../../lib/assign\":195,\"../../lib/dropin-error\":199,\"../base-view\":246,\"@braintree/asset-loader\":1,\"braintree-web/google-payment\":71}],256:[function(require,module,exports){\n'use strict';\n\nvar paymentOptionIDs = require('../../constants').paymentOptionIDs;\n\nvar result = {};\n\nresult[paymentOptionIDs.applePay] = require('./apple-pay-view');\nresult[paymentOptionIDs.card] = require('./card-view');\nresult[paymentOptionIDs.googlePay] = require('./google-pay-view');\nresult[paymentOptionIDs.paypal] = require('./paypal-view');\nresult[paymentOptionIDs.paypalCredit] = require('./paypal-credit-view');\nresult[paymentOptionIDs.venmo] = require('./venmo-view');\n\nmodule.exports = result;\n\n},{\"../../constants\":189,\"./apple-pay-view\":252,\"./card-view\":254,\"./google-pay-view\":255,\"./paypal-credit-view\":257,\"./paypal-view\":258,\"./venmo-view\":259}],257:[function(require,module,exports){\n'use strict';\n\nvar assign = require('../../lib/assign').assign;\nvar paymentOptionIDs = require('../../constants').paymentOptionIDs;\nvar BasePayPalView = require('./base-paypal-view');\n\nfunction PayPalCreditView() {\n  BasePayPalView.apply(this, arguments);\n\n  this._isPayPalCredit = true;\n}\n\nPayPalCreditView.prototype = Object.create(BasePayPalView.prototype);\nPayPalCreditView.prototype.constructor = PayPalCreditView;\nPayPalCreditView.ID = PayPalCreditView.prototype.ID = paymentOptionIDs.paypalCredit;\n\nPayPalCreditView.isEnabled = function (options) {\n  if (!options.merchantConfiguration.paypalCredit) {\n    return Promise.resolve(false);\n  }\n\n  return BasePayPalView.isEnabled(assign({\n    viewID: PayPalCreditView.ID\n  }, options));\n};\nmodule.exports = PayPalCreditView;\n\n},{\"../../constants\":189,\"../../lib/assign\":195,\"./base-paypal-view\":253}],258:[function(require,module,exports){\n'use strict';\n\nvar assign = require('../../lib/assign').assign;\nvar paymentOptionIDs = require('../../constants').paymentOptionIDs;\nvar BasePayPalView = require('./base-paypal-view');\n\nfunction PayPalView() {\n  BasePayPalView.apply(this, arguments);\n}\n\nPayPalView.prototype = Object.create(BasePayPalView.prototype);\nPayPalView.prototype.constructor = PayPalView;\nPayPalView.ID = PayPalView.prototype.ID = paymentOptionIDs.paypal;\n\nPayPalView.isEnabled = function (options) {\n  if (!options.merchantConfiguration.paypal) {\n    return Promise.resolve(false);\n  }\n\n  return BasePayPalView.isEnabled(assign({\n    viewID: PayPalView.ID\n  }, options));\n};\n\nmodule.exports = PayPalView;\n\n},{\"../../constants\":189,\"../../lib/assign\":195,\"./base-paypal-view\":253}],259:[function(require,module,exports){\n'use strict';\n\nvar assign = require('../../lib/assign').assign;\nvar BaseView = require('../base-view');\nvar btVenmo = require('braintree-web/venmo');\nvar DropinError = require('../../lib/dropin-error');\nvar paymentOptionIDs = require('../../constants').paymentOptionIDs;\n\nfunction VenmoView() {\n  BaseView.apply(this, arguments);\n}\n\nVenmoView.prototype = Object.create(BaseView.prototype);\nVenmoView.prototype.constructor = VenmoView;\nVenmoView.ID = VenmoView.prototype.ID = paymentOptionIDs.venmo;\n\nVenmoView.prototype.initialize = function () {\n  var self = this;\n  var venmoConfiguration = assign({}, self.model.merchantConfiguration.venmo, {client: this.client});\n\n  return btVenmo.create(venmoConfiguration).then(function (venmoInstance) {\n    self.venmoInstance = venmoInstance;\n\n    if (!self.venmoInstance.hasTokenizationResult()) {\n      return Promise.resolve();\n    }\n\n    return self.venmoInstance.tokenize().then(function (payload) {\n      self.model.reportAppSwitchPayload(payload);\n    }).catch(function (err) {\n      if (self._isIgnorableError(err)) {\n        return;\n      }\n      self.model.reportAppSwitchError(paymentOptionIDs.venmo, err);\n    });\n  }).then(function () {\n    var button = self.getElementById('venmo-button');\n\n    button.addEventListener('click', function (event) {\n      event.preventDefault();\n\n      self.preventUserAction();\n\n      return self.venmoInstance.tokenize().then(function (payload) {\n        self.model.addPaymentMethod(payload);\n      }).catch(function (tokenizeErr) {\n        if (self._isIgnorableError(tokenizeErr)) {\n          return;\n        }\n\n        self.model.reportError(tokenizeErr);\n      }).then(function () {\n        self.allowUserAction();\n      });\n    });\n\n    self.model.asyncDependencyReady(VenmoView.ID);\n  }).catch(function (err) {\n    self.model.asyncDependencyFailed({\n      view: self.ID,\n      error: new DropinError(err)\n    });\n  });\n};\n\nVenmoView.prototype.requestPaymentMethod = function () {\n  this.model.reportError('venmoButtonMustBeUsed');\n\n  return BaseView.prototype.requestPaymentMethod.call(this);\n};\n\nVenmoView.prototype._isIgnorableError = function (error) {\n  // customer cancels the flow in the app\n  // we don't emit an error because the customer\n  // initiated that action\n  return error.code === 'VENMO_APP_CANCELED' || error.code === 'VENMO_DESKTOP_CANCELED';\n};\n\nVenmoView.isEnabled = function (options) {\n  var gatewayConfiguration = options.client.getConfiguration().gatewayConfiguration;\n  var venmoEnabled = gatewayConfiguration.payWithVenmo && Boolean(options.merchantConfiguration.venmo);\n\n  if (!venmoEnabled) {\n    return Promise.resolve(false);\n  }\n\n  return Promise.resolve(btVenmo.isBrowserSupported(options.merchantConfiguration.venmo));\n};\n\nmodule.exports = VenmoView;\n\n},{\"../../constants\":189,\"../../lib/assign\":195,\"../../lib/dropin-error\":199,\"../base-view\":246,\"braintree-web/venmo\":150}]},{},[192])(192)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/braintree-web-drop-in/dist/browser/dropin.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/object-assign.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar assign = Object.assign.bind(Object);\nmodule.exports = assign;\nmodule.exports[\"default\"] = module.exports;\n\n//# sourceMappingURL=object-assign.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvcG9seWZpbGxzL29iamVjdC1hc3NpZ24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EseUJBQXNCOztBQUV0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9vYmplY3QtYXNzaWduLmpzPzAxOTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgYXNzaWduID0gT2JqZWN0LmFzc2lnbi5iaW5kKE9iamVjdCk7XG5tb2R1bGUuZXhwb3J0cyA9IGFzc2lnbjtcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBtb2R1bGUuZXhwb3J0cztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LWFzc2lnbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/Modal/Modal.css":
/*!****************************************!*\
  !*** ./app/components/Modal/Modal.css ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"8d05157c749a\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL01vZGFsL01vZGFsLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbXBvbmVudHMvTW9kYWwvTW9kYWwuY3NzP2ZhMmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI4ZDA1MTU3Yzc0OWFcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Modal/Modal.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/Navbar/MotdePasse/style.css":
/*!****************************************************!*\
  !*** ./app/components/Navbar/MotdePasse/style.css ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"70233e2ad615\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL05hdmJhci9Nb3RkZVBhc3NlL3N0eWxlLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbXBvbmVudHMvTmF2YmFyL01vdGRlUGFzc2Uvc3R5bGUuY3NzPzVlYjgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI3MDIzM2UyYWQ2MTVcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Navbar/MotdePasse/style.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"0302579777e7\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzPzljY2IiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIwMzAyNTc5Nzc3ZTdcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tailwindcss/tailwind.css":
/*!***********************************************!*\
  !*** ./node_modules/tailwindcss/tailwind.css ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"c13af0c18916\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90YWlsd2luZGNzcy90YWlsd2luZC5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90YWlsd2luZGNzcy90YWlsd2luZC5jc3M/ZjVmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImMxM2FmMGMxODkxNlwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tailwindcss/tailwind.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./public/image/moto.png":
/*!*******************************!*\
  !*** ./public/image/moto.png ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/moto.7eac6f54.png\",\"height\":512,\"width\":512,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fmoto.7eac6f54.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3B1YmxpYy9pbWFnZS9tb3RvLnBuZyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyw0TEFBNEwiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcHVibGljL2ltYWdlL21vdG8ucG5nP2M5ODYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1wic3JjXCI6XCIvX25leHQvc3RhdGljL21lZGlhL21vdG8uN2VhYzZmNTQucG5nXCIsXCJoZWlnaHRcIjo1MTIsXCJ3aWR0aFwiOjUxMixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZtb3RvLjdlYWM2ZjU0LnBuZyZ3PTgmcT03MFwiLFwiYmx1cldpZHRoXCI6OCxcImJsdXJIZWlnaHRcIjo4fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./public/image/moto.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./public/image/panierrepas.png":
/*!**************************************!*\
  !*** ./public/image/panierrepas.png ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/panierrepas.a4adddc8.png\",\"height\":512,\"width\":512,\"blurDataURL\":\"/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fpanierrepas.a4adddc8.png&w=8&q=70\",\"blurWidth\":8,\"blurHeight\":8});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3B1YmxpYy9pbWFnZS9wYW5pZXJyZXBhcy5wbmciLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLENBQUMsME1BQTBNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3B1YmxpYy9pbWFnZS9wYW5pZXJyZXBhcy5wbmc/OGY0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvcGFuaWVycmVwYXMuYTRhZGRkYzgucG5nXCIsXCJoZWlnaHRcIjo1MTIsXCJ3aWR0aFwiOjUxMixcImJsdXJEYXRhVVJMXCI6XCIvX25leHQvaW1hZ2U/dXJsPSUyRl9uZXh0JTJGc3RhdGljJTJGbWVkaWElMkZwYW5pZXJyZXBhcy5hNGFkZGRjOC5wbmcmdz04JnE9NzBcIixcImJsdXJXaWR0aFwiOjgsXCJibHVySGVpZ2h0XCI6OH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./public/image/panierrepas.png\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/Modal/Modal.tsx":
/*!****************************************!*\
  !*** ./app/components/Modal/Modal.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _public_image_moto_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../public/image/moto.png */ \"(app-pages-browser)/./public/image/moto.png\");\n/* harmony import */ var _public_image_panierrepas_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../public/image/panierrepas.png */ \"(app-pages-browser)/./public/image/panierrepas.png\");\n/* harmony import */ var _barrel_optimize_names_Dialog_Transition_headlessui_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=Dialog,Transition!=!@headlessui/react */ \"(app-pages-browser)/./node_modules/@headlessui/react/dist/components/transitions/transition.js\");\n/* harmony import */ var _barrel_optimize_names_Dialog_Transition_headlessui_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=Dialog,Transition!=!@headlessui/react */ \"(app-pages-browser)/./node_modules/@headlessui/react/dist/components/dialog/dialog.js\");\n/* harmony import */ var _Modal_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Modal.css */ \"(app-pages-browser)/./app/components/Modal/Modal.css\");\n/* harmony import */ var _Navbar_MonCompte_Profile_Cartes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Navbar/MonCompte/Profile/Cartes */ \"(app-pages-browser)/./app/components/Navbar/MonCompte/Profile/Cartes.tsx\");\n// \"use client\"\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import Image from \"next/image\";\n// import moto from \"../../../public/image/moto.png\";\n// import panierrepas from \"../../../public/image/panierrepas.png\";\n// import { Dialog, Transition } from \"@headlessui/react\";\n// import \"./Modal.css\";\n// import Cartes from \"../Navbar/MonCompte/Profile/Cartes\";\n// const ModalCategorie = ({ setShowModal }: any) => {\n//     const [chosenOption, setChosenOption] = useState(\"\");\n//     const [selectedTime, setSelectedTime] = useState(\"\");\n//     const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n//     const [paymentOption, setPaymentOption] = useState(\"\");\n//     const handleClose = () => {\n//         setShowModal(false);\n//     };\n//         const userId = localStorage.getItem(\"userId\");\n//     const handleValidateClick = async ({  etat }: any) => {\n//                 if(userId===null){\n//                      handleClose()\n//                     // setIsSignInOpen(true)\n//                 }\n//                 else{ const Panier = panierSnapshot.Panier;\n//                     let DataCartItem: any = [];\n//                     let TPrix: any = 0;\n//                     for (let item of Panier) {\n//                       TPrix += item.prix;\n//                       DataCartItem.push({ ...item });\n//                     }\n//                     let body = {\n//                       cartItem: { ...DataCartItem },\n//                       id_user: Number(userId),\n//                       etat: etat,\n//                       prix: TPrix,\n//                       ModeRetrait: {\n//                         Mode: chosenOption,\n//                         time: selectedTime,\n//                       },\n//                       address: deliveryAddress,\n//                     };\n//                     let response = await fetch(\n//                       \"http://localhost:8000/backend/panier/AddPanier\",\n//                       {\n//                         method: \"POST\",\n//                         headers: { \"Content-Type\": \"application/json\" },\n//                         body: JSON.stringify(body),\n//                       }\n//                     );\n//                     if (selectedTime === \"\") {\n//                       alert(\"insert time\");\n//                     } else if (chosenOption === \"emporter\") {\n//                     //   router.push(\"/components//Navbar/MonCompte/Commande\");\n//                     } else if (chosenOption === \"livraison\" && deliveryAddress === \"\") {\n//                       alert(\"insert address\");\n//                     } else {\n//                     //   router.push(\"/components/Navbar/MonCompte/Commande\");\n//                     }\n//                     handleClose()}\n//               };\n//     const handleOptionClick = (option: any) => {\n//         setChosenOption(option);\n//     };\n//     const handleTimeChange = (event: any) => {\n//         setSelectedTime(event.target.value);\n//     };\n//     const handleAddressChange = (event: any) => {\n//         setDeliveryAddress(event.target.value);\n//     };\n//     const handlePaymentOptionClick = (option: any) => {\n//         if (option === \"espece\") {\n//             // Redirect to the Commande page\n//             // You might need to use a router here if you have one, like:\n//             // router.push('/commande');\n//             handleClose(); // For now, we'll just close the modal\n//         } else {\n//             setPaymentOption(option);\n//         }\n//     };\n//     useEffect(() => {\n//         setSelectedTime(new Date().toLocaleTimeString('en-US', { hour12: false }));\n//     }, []);\n//     return (\n//         <Transition appear show={true} as={Fragment}>\n//             <Dialog as=\"div\" className=\"relative z-10\" onClose={handleClose}>\n//                 <Transition.Child\n//                     as={Fragment}\n//                     enter=\"ease-out duration-300\"\n//                     enterFrom=\"opacity-0\"\n//                     enterTo=\"opacity-100\"\n//                     leave=\"ease-in duration-200\"\n//                     leaveFrom=\"opacity-100\"\n//                     leaveTo=\"opacity-0\"\n//                 >\n//                     <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n//                 </Transition.Child>\n//                 <div className=\"fixed inset-0 overflow-y-auto\">\n//                     <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//                         <Transition.Child\n//                             as={Fragment}\n//                             enter=\"ease-out duration-300\"\n//                             enterFrom=\"opacity-0 scale-95\"\n//                             enterTo=\"opacity-100 scale-100\"\n//                             leave=\"ease-in duration-200\"\n//                             leaveFrom=\"opacity-100 scale-100\"\n//                             leaveTo=\"opacity-0 scale-95\"\n//                         >\n//                             <Dialog.Panel className=\"w-full max-w-lg transform overflow-hidden rounded-lg bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                                 <div className=\"flex justify-between items-center border-b pb-3 mb-4\">\n//                                     <h5 className=\"text-xl font-bold text-gray-800\">Modes de retrait</h5>\n//                                     <button className=\"text-gray-500 hover:text-gray-800\" onClick={handleClose}>\n//                                         ✕\n//                                     </button>\n//                                 </div>\n//                                 {paymentOption !== \"carte\" ? (\n//                                     <>\n//                                         <div className=\"grid grid-cols-2 gap-4 mb-4\">\n//                                             <div className=\"text-center\">\n//                                                 <button\n//                                                     style={{\n//                                                         backgroundColor: chosenOption === \"emporter\" ? \"green\" : \"\",\n//                                                         borderRadius: \"100%\",\n//                                                     }}\n//                                                     onClick={() => handleOptionClick(\"emporter\")}>\n//                                                     <Image src={panierrepas} alt=\"Emporter\" width={60} height={60} />\n//                                                 </button>\n//                                                 <p className=\"mt-2\">A emporter</p>\n//                                             </div>\n//                                             <div className=\"text-center\">\n//                                                 <button\n//                                                     style={{\n//                                                         backgroundColor: chosenOption === \"livraison\" ? \"green\" : \"\",\n//                                                         borderRadius: \"100%\",\n//                                                     }}\n//                                                     onClick={() => handleOptionClick(\"livraison\")}>\n//                                                     <Image src={moto} alt=\"Livraison\" width={60} height={60} />\n//                                                 </button>\n//                                                 <p className=\"mt-2\">Livraison</p>\n//                                             </div>\n//                                         </div>\n//                                         <div className=\"text-center mb-4\">\n//                                             <p>Aujourd'hui</p>\n//                                             <input type=\"time\" className=\"mt-1 px-4 py-2 border rounded-lg\" value={selectedTime} onChange={handleTimeChange} />\n//                                         </div>\n//                                         {chosenOption === \"livraison\" && (\n//                                             <div className=\"mb-4\">\n//                                                 <label htmlFor=\"deliveryAddress\" className=\"block text-sm font-medium text-gray-700\">Adresse de livraison:</label>\n//                                                 <input type=\"text\" id=\"deliveryAddress\" value={deliveryAddress} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" onChange={handleAddressChange} placeholder=\"Entrez votre adresse\" />\n//                                             </div>\n//                                         )}\n//                                         <div className=\"grid grid-cols-2 gap-4 mb-4\">\n//                                             <button className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-700 focus:ring-offset-2\" onClick={() => handlePaymentOptionClick(\"espece\")}>\n//                                                 Espece\n//                                             </button>\n//                                             <button className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\" onClick={() => handlePaymentOptionClick(\"carte\")}>\n//                                                 Par Carte\n//                                             </button>\n//                                         </div>\n//                                         <button className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\" onClick={handleValidateClick}>\n//                                             Valider\n//                                         </button>\n//                                     </>\n//                                 ) : (\n//                                     <Cartes />\n//                                 )}\n//                             </Dialog.Panel>\n//                         </Transition.Child>\n//                     </div>\n//                 </div>\n//             </Dialog>\n//         </Transition>\n//     );\n// };\n// export default ModalCategorie;\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import Image from \"next/image\";\n// import moto from \"../../../public/image/moto.png\";\n// import panierrepas from \"../../../public/image/panierrepas.png\";\n// import { Dialog, Transition } from \"@headlessui/react\";\n// import \"./Modal.css\"\n// import { useSnapshot } from \"valtio\";\n// import store from \"../store/store\";\n// import { useRouter } from \"next/navigation\";\n// const ModalCategorie = ({ setShowModal,setIsSignInOpen }:any) => {\n//     const panierSnapshot = useSnapshot(store);\n//     const userId = localStorage.getItem(\"userId\");\n//     const { selectedCategorie } = useSnapshot(store);\n//     console.log({ selectedCategorie });\n//     const router = useRouter();\n//     const Panier = panierSnapshot.Panier;\n//     let totalQuantity :any =0\n//     Panier.forEach(item => {\n//         totalQuantity += item.qte;\n//     });\n//     let currentDate = new Date();\n//     let timeInMinutes =15 * totalQuantity\n//     let newDate = new Date(currentDate.getTime() + timeInMinutes * 60000); \n//     let currentTime = newDate.toLocaleTimeString();\n//     const [chosenOption, setChosenOption] = useState(\"\");\n//     const [selectedTime, setSelectedTime] = useState(currentTime);\n//     const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n//     const handleClose = () => {\n//         setShowModal(false);\n//     };\n//     const handleOptionClick = (option:any) => {\n//         setChosenOption(option);\n//     };\n//     const handleTimeChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n//         if( currentTime <= event.target.value ){\n//             setSelectedTime(event.target.value);\n//         }\n//     };\n//     const handleAddressChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//         setDeliveryAddress(event.target.value);\n//     };\n//     const handleValidateClick = async ({  etat }: any) => {\n//         if(currentTime <= selectedTime ){\n//         if(userId===null){\n//             handleClose()\n//             setIsSignInOpen(true)\n//         }\n//         else{ const Panier = panierSnapshot.Panier;\n//             let DataCartItem: any = [];\n//             let TPrix: any = 0;\n//             for (let item of Panier) {\n//               TPrix += item.prix;\n//               DataCartItem.push({ ...item });\n//             }\n//             let body = {\n//               cartItem: { ...DataCartItem },\n//               id_user: Number(userId),\n//               etat: etat,\n//               prix: TPrix,\n//               ModeRetrait: {\n//                 Mode: chosenOption,\n//                 time: selectedTime,\n//               },\n//               address: deliveryAddress,\n//             };\n//             let response = await fetch(\n//               \"http://localhost:8000/backend/panier/AddPanier\",\n//               {\n//                 method: \"POST\",\n//                 headers: { \"Content-Type\": \"application/json\" },\n//                 body: JSON.stringify(body),\n//               }\n//             );\n//             if (selectedTime === \"\") {\n//               alert(\"insert time\");\n//             } else if (chosenOption === \"emporter\") {\n//               router.push(\"/components//Navbar/MonCompte/Commande\");\n//             } else if (chosenOption === \"livraison\" && deliveryAddress === \"\") {\n//               alert(\"insert address\");\n//             } else {\n//               router.push(\"/components/Navbar/MonCompte/Commande\");\n//             }\n//             handleClose()}\n//         }\n//       };\n//     useEffect(() => {\n//         const currentTime = new Date().toLocaleTimeString('en-US', { hour12: false });\n//         setSelectedTime(currentTime);\n//     }, []);\n//     return (\n//         <Transition appear show={true} as={Fragment}>\n//             <Dialog as=\"div\" className=\"relative z-10\" onClose={handleClose}>\n//                 <Transition.Child\n//                     as={Fragment}\n//                     enter=\"ease-out duration-300\"\n//                     enterFrom=\"opacity-0\"\n//                     enterTo=\"opacity-100\"\n//                     leave=\"ease-in duration-200\"\n//                     leaveFrom=\"opacity-100\"\n//                     leaveTo=\"opacity-0\"\n//                 >\n//                     <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n//                 </Transition.Child>\n//                 <div className=\"fixed inset-0 overflow-y-auto\">\n//                     <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//                         <Transition.Child\n//                             as={Fragment}\n//                             enter=\"ease-out duration-300\"\n//                             enterFrom=\"opacity-0 scale-95\"\n//                             enterTo=\"opacity-100 scale-100\"\n//                             leave=\"ease-in duration-200\"\n//                             leaveFrom=\"opacity-100 scale-100\"\n//                             leaveTo=\"opacity-0 scale-95\"\n//                         >\n//                             <Dialog.Panel className=\"w-full max-w-lg transform overflow-hidden rounded-lg bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                                 <div className=\"flex justify-between items-center border-b pb-3 mb-4\">\n//                                     <h5 className=\"text-xl font-bold text-gray-800\">Modes de retrait</h5>\n//                                     <button className=\"text-gray-500 hover:text-gray-800\" onClick={handleClose}>\n//                                         ✕\n//                                     </button>\n//                                 </div>\n//                                 <div className=\"grid grid-cols-2 gap-4 mb-4\">\n//                                     <div className=\"text-center\">\n//                                         <button\n//                                           style={{\n//                                             backgroundColor: chosenOption === \"emporter\" ? \"green\" : \"\",\n//                                             borderRadius: \"100%\",\n//                                           }}\n//                                          onClick={() => handleOptionClick(\"emporter\")}>\n//                                             <Image src={panierrepas} alt=\"Emporter\" width={60} height={60} />\n//                                         </button>\n//                                         <p className=\"mt-2\">A emporter</p>\n//                                     </div>\n//                                     <div className=\"text-center\">\n//                                         <button \n//                                          style={{\n//                                           backgroundColor: chosenOption === \"livraison\" ? \"green\" : \"\",\n//                                           borderRadius: \"100%\",\n//                                         }}\n//                                          onClick={() => handleOptionClick(\"livraison\")}>\n//                                             <Image src={moto} alt=\"Livraison\" width={60} height={60} />\n//                                         </button>\n//                                         <p className=\"mt-2\">Livraison</p>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"text-center mb-4\">\n//                                     <input  \n//                                       type=\"time\"\n//                                       id=\"appt\" \n//                                       name=\"appt\"\n//                                       className=\"mt-1 px-4 py-2 border rounded-lg\"\n//                                       value={selectedTime} \n//                                       onChange={handleTimeChange}\n//                                        />\n//                                     <p className=\"text-red-500\"> Minimum time is  {currentTime }</p>\n//                                 </div>\n//                                 {chosenOption === \"livraison\" && (\n//                                     <div className=\"mb-4\">\n//                                         <label htmlFor=\"deliveryAddress\" className=\"block text-sm font-medium text-gray-700\">Adresse de livraison:</label>\n//                                         <input type=\"text\" id=\"deliveryAddress\" value={deliveryAddress} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" onChange={handleAddressChange} placeholder=\"Entrez votre adresse\" />\n//                                     </div>\n//                                 )}\n//                                 <button className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\" onClick={()=>handleValidateClick(chosenOption)}>\n//                                     Valider\n//                                 </button>\n//                             </Dialog.Panel>\n//                         </Transition.Child>\n//                     </div>\n//                 </div>\n//             </Dialog>\n//         </Transition>\n//     );\n// };\n// export default ModalCategorie;\n// \"use client\"\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import Image from \"next/image\";\n// import moto from \"../../../public/image/moto.png\";\n// import panierrepas from \"../../../public/image/panierrepas.png\";\n// import { Dialog, Transition } from \"@headlessui/react\";\n// import \"./Modal.css\";\n// import { useSnapshot } from \"valtio\";\n// import store from \"../store/store\";\n// import { useRouter } from \"next/navigation\";\n// const ModalCategorie = ({ setShowModal, setIsSignInOpen }:any) => {\n//   const panierSnapshot = useSnapshot(store);\n//   const userId = localStorage.getItem(\"userId\");\n//   const { selectedCategorie } = useSnapshot(store);\n//   const router = useRouter();\n//   const Panier = panierSnapshot.Panier;\n//   let totalQuantity = 0;\n//   Panier.forEach((item) => {\n//     totalQuantity += item.qte;\n//   });\n//   let currentDate = new Date();\n//   let timeInMinutes = 15 * totalQuantity;\n//   let newDate = new Date(currentDate.getTime() + timeInMinutes * 60000);\n//   let currentTime = newDate.toLocaleTimeString();\n//   const [chosenOption, setChosenOption] = useState(\"\");\n//   const [selectedTime, setSelectedTime] = useState(currentTime);\n//   const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n//   const [showPaymentOptions, setShowPaymentOptions] = useState(false);\n//   const [paymentMethod, setPaymentMethod] = useState(\"\");\n//   const handleClose = () => {\n//     setShowModal(false);\n//   };\n//   const handleOptionClick = (option:any) => {\n//     setChosenOption(option);\n//   };\n//   const handleTimeChange = (event:any) => {\n//     if (currentTime <= event.target.value) {\n//       setSelectedTime(event.target.value);\n//     }\n//   };\n//   const handleAddressChange = (event:any) => {\n//     setDeliveryAddress(event.target.value);\n//   };\n//   const handleValidateClick = async () => {\n//     if (currentTime <= selectedTime) {\n//       if (userId === null) {\n//         setShowPaymentOptions(true);\n//         // handleClose();\n//         // setIsSignInOpen(true);\n//       } else {\n//         setShowPaymentOptions(true);\n//       }\n//     }\n//   };\n//   const handlePaymentClick = async (paymentMethod:any) => {\n//     const Panier = panierSnapshot.Panier;\n//     let DataCartItem = [];\n//     let TPrix = 0;\n//     for (let item of Panier) {\n//      // TPrix += item.prix;\n//       DataCartItem.push({ ...item });\n//     }\n//     let body = {\n//       cartItem: { ...DataCartItem },\n//       id_user: Number(userId),\n//       etat: \"en attente\",\n//       prix: TPrix,\n//       ModeRetrait: {\n//         Mode: chosenOption,\n//         time: selectedTime,\n//       },\n//       paymentMethod: paymentMethod,\n//       address: deliveryAddress,\n//     };\n//     let response = await fetch(\"http://localhost:8000/backend/panier/AddPanier\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(body),\n//     });\n//     if (selectedTime === \"\") {\n//       alert(\"insert time\");\n//     } else if (chosenOption === \"emporter\") {\n//       router.push(\"/components/Navbar/MonCompte/Commande\");\n//     } else if (chosenOption === \"livraison\" && deliveryAddress === \"\") {\n//       alert(\"insert address\");\n//     } else {\n//     //   router.push(\"/components/Navbar/MonCompte/Commande\");\n//     }\n//     handleClose();\n//   };\n//   useEffect(() => {\n//     const currentTime = new Date().toLocaleTimeString(\"en-US\", { hour12: false });\n//     setSelectedTime(currentTime);\n//   }, []);\n//   return (\n//     <Transition appear show={true} as={Fragment}>\n//       <Dialog as=\"div\" className=\"relative z-10\" onClose={handleClose}>\n//         <Transition.Child\n//           as={Fragment}\n//           enter=\"ease-out duration-300\"\n//           enterFrom=\"opacity-0\"\n//           enterTo=\"opacity-100\"\n//           leave=\"ease-in duration-200\"\n//           leaveFrom=\"opacity-100\"\n//           leaveTo=\"opacity-0\"\n//         >\n//           <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n//         </Transition.Child>\n//         <div className=\"fixed inset-0 overflow-y-auto\">\n//           <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//             <Transition.Child\n//               as={Fragment}\n//               enter=\"ease-out duration-300\"\n//               enterFrom=\"opacity-0 scale-95\"\n//               enterTo=\"opacity-100 scale-100\"\n//               leave=\"ease-in duration-200\"\n//               leaveFrom=\"opacity-100 scale-100\"\n//               leaveTo=\"opacity-0 scale-95\"\n//             >\n//               <Dialog.Panel className=\"w-full max-w-lg transform overflow-hidden rounded-lg bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                 <div className=\"flex justify-between items-center border-b pb-3 mb-4\">\n//                   <h5 className=\"text-xl font-bold text-gray-800\">Modes de retrait</h5>\n//                   <button className=\"text-gray-500 hover:text-gray-800\" onClick={handleClose}>\n//                     ✕\n//                   </button>\n//                 </div>\n//                 <div className=\"grid grid-cols-2 gap-4 mb-4\">\n//                   <div className=\"text-center\">\n//                     <button\n//                       style={{\n//                         backgroundColor: chosenOption === \"emporter\" ? \"green\" : \"\",\n//                         borderRadius: \"100%\",\n//                       }}\n//                       onClick={() => handleOptionClick(\"emporter\")}\n//                     >\n//                       <Image src={panierrepas} alt=\"Emporter\" width={60} height={60} />\n//                     </button>\n//                     <p className=\"mt-2\">A emporter</p>\n//                   </div>\n//                   <div className=\"text-center\">\n//                     <button\n//                       style={{\n//                         backgroundColor: chosenOption === \"livraison\" ? \"green\" : \"\",\n//                         borderRadius: \"100%\",\n//                       }}\n//                       onClick={() => handleOptionClick(\"livraison\")}\n//                     >\n//                       <Image src={moto} alt=\"Livraison\" width={60} height={60} />\n//                     </button>\n//                     <p className=\"mt-2\">Livraison</p>\n//                   </div>\n//                 </div>\n//                 <div className=\"text-center mb-4\">\n//                   <input\n//                     type=\"time\"\n//                     id=\"appt\"\n//                     name=\"appt\"\n//                     className=\"mt-1 px-4 py-2 border rounded-lg\"\n//                     value={selectedTime}\n//                     onChange={handleTimeChange}\n//                   />\n//                   <p className=\"text-red-500\">Minimum time is {currentTime}</p>\n//                 </div>\n//                 {chosenOption === \"livraison\" && (\n//                   <div className=\"mb-4\">\n//                     <label htmlFor=\"deliveryAddress\" className=\"block text-sm font-medium text-gray-700\">\n//                       Adresse de livraison:\n//                     </label>\n//                     <input\n//                       type=\"text\"\n//                       id=\"deliveryAddress\"\n//                       value={deliveryAddress}\n//                       className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n//                       onChange={handleAddressChange}\n//                       placeholder=\"Entrez votre adresse\"\n//                     />\n//                   </div>\n//                 )}\n//                 {showPaymentOptions && (\n//                   <div className=\"mb-4 text-center\">\n//                     <h5 className=\"text-xl font-bold text-gray-800 mb-4\">Modes de paiement</h5>\n//                     <button\n//                       className=\"w-full mb-2 bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-700 focus:ring-offset-2\"\n//                       onClick={() => handlePaymentClick(\"carte\")}\n//                     >\n//                       Paiement avec carte\n//                     </button>\n//                     <button\n//                       className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-700 focus:ring-offset-2\"\n//                       onClick={() => handlePaymentClick(\"espace\")}\n//                     >\n//                       Paiement avec espace\n//                     </button>\n//                   </div>\n//                 )}\n//                 {!showPaymentOptions && (\n//                   <button\n//                     className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\"\n//                     onClick={handleValidateClick}\n//                   >\n//                     Valider\n//                   </button>\n//                 )}\n//               </Dialog.Panel>\n//             </Transition.Child>\n//           </div>\n//         </div>\n//       </Dialog>\n//     </Transition>\n//   );\n// };\n// export default ModalCategorie;\n// \"use client\"\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import Image from \"next/image\";\n// import moto from \"../../../public/image/moto.png\";\n// import panierrepas from \"../../../public/image/panierrepas.png\";\n// import { Dialog, Transition } from \"@headlessui/react\";\n// import \"./Modal.css\";\n// import Cartes from \"../Navbar/MonCompte/Profile/Cartes\";\n// const ModalCategorie = ({ setShowModal }: any) => {\n//     const [chosenOption, setChosenOption] = useState(\"\");\n//     const [selectedTime, setSelectedTime] = useState(\"\");\n//     const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n//     const [paymentOption, setPaymentOption] = useState(\"\");\n//     const handleClose = () => {\n//         setShowModal(false);\n//     };\n//         const userId = localStorage.getItem(\"userId\");\n//     const handleValidateClick = (option: any) => { \n//   if (selectedTime === \"\") {\n//     alert(\"insert time\");\n//   } else if (chosenOption === \"\") {\n//     alert(\"choose sale mode\");\n//   } else if (chosenOption === \"emporter\") {\n//     setPaymentOption(option);\n//   }else if (chosenOption === \"livraison\") {\n//     setPaymentOption(option);\n//   }\n//  };\n//     const handleOptionClick = (option: any) => {\n//         setChosenOption(option);\n//     };\n//     const handleTimeChange = (event: any) => {\n//         setSelectedTime(event.target.value);\n//     };\n//     const handleAddressChange = (event: any) => {\n//         setDeliveryAddress(event.target.value);\n//     };\n//     const handlePaymentOptionClick = (option: any) => {\n//         if (option === \"espece\") {\n//             // Redirect to the Commande page\n//             // You might need to use a router here if you have one, like:\n//             // router.push('/commande');\n//             handleClose(); // For now, we'll just close the modal\n//         } else {\n//             setPaymentOption(option);\n//         }\n//     };\n//     useEffect(() => {\n//         setSelectedTime(new Date().toLocaleTimeString('en-US', { hour12: false }));\n//     }, []);\n//     return (\n//         <Transition appear show={true} as={Fragment}>\n//             <Dialog as=\"div\" className=\"relative z-10\" onClose={handleClose}>\n//                 <Transition.Child\n//                     as={Fragment}\n//                     enter=\"ease-out duration-300\"\n//                     enterFrom=\"opacity-0\"\n//                     enterTo=\"opacity-100\"\n//                     leave=\"ease-in duration-200\"\n//                     leaveFrom=\"opacity-100\"\n//                     leaveTo=\"opacity-0\"\n//                 >\n//                     <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n//                 </Transition.Child>\n//                 <div className=\"fixed inset-0 overflow-y-auto\">\n//                     <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//                         <Transition.Child\n//                             as={Fragment}\n//                             enter=\"ease-out duration-300\"\n//                             enterFrom=\"opacity-0 scale-95\"\n//                             enterTo=\"opacity-100 scale-100\"\n//                             leave=\"ease-in duration-200\"\n//                             leaveFrom=\"opacity-100 scale-100\"\n//                             leaveTo=\"opacity-0 scale-95\"\n//                         >\n//                             <Dialog.Panel className=\"w-full max-w-lg transform overflow-hidden rounded-lg bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                                 <div className=\"flex justify-between items-center border-b pb-3 mb-4\">\n//                                     <h5 className=\"text-xl font-bold text-gray-800\">Modes de retrait</h5>\n//                                     <button className=\"text-gray-500 hover:text-gray-800\" onClick={handleClose}>\n//                                         ✕\n//                                     </button>\n//                                 </div>\n//                                 {paymentOption !== \"paye\" ? (\n//                                     <>\n//                                         <div className=\"grid grid-cols-2 gap-4 mb-4\">\n//                                             <div className=\"text-center\">\n//                                                 <button\n//                                                     style={{\n//                                                         backgroundColor: chosenOption === \"emporter\" ? \"green\" : \"\",\n//                                                         borderRadius: \"100%\",\n//                                                     }}\n//                                                     onClick={() => handleOptionClick(\"emporter\")}>\n//                                                     <Image src={panierrepas} alt=\"Emporter\" width={60} height={60} />\n//                                                 </button>\n//                                                 <p className=\"mt-2\">A emporter</p>\n//                                             </div>\n//                                             <div className=\"text-center\">\n//                                                 <button\n//                                                     style={{\n//                                                         backgroundColor: chosenOption === \"livraison\" ? \"green\" : \"\",\n//                                                         borderRadius: \"100%\",\n//                                                     }}\n//                                                     onClick={() => handleOptionClick(\"livraison\")}>\n//                                                     <Image src={moto} alt=\"Livraison\" width={60} height={60} />\n//                                                 </button>\n//                                                 <p className=\"mt-2\">Livraison</p>\n//                                             </div>\n//                                         </div>\n//                                         <div className=\"text-center mb-4\">\n//                                             <p>Aujourd'hui</p>\n//                                             <input type=\"time\" className=\"mt-1 px-4 py-2 border rounded-lg\" value={selectedTime} onChange={handleTimeChange} />\n//                                         </div>\n//                                         {chosenOption === \"livraison\" && (\n//                                             <div className=\"mb-4\">\n//                                                 <label htmlFor=\"deliveryAddress\" className=\"block text-sm font-medium text-gray-700\">Adresse de livraison:</label>\n//                                                 <input type=\"text\" id=\"deliveryAddress\" value={deliveryAddress} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" onChange={handleAddressChange} placeholder=\"Entrez votre adresse\" />\n//                                             </div>\n//                                         )}\n//                                         <button className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\" onClick={() => handleValidateClick(\"paye\")}>\n//                                             Valider\n//                                         </button>\n//                                     </>\n//                                 ) : (\n//                                       <div className=\"grid grid-cols-2 gap-4 mb-4\">\n//                                             <button className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-700 focus:ring-offset-2\" onClick={() => handlePaymentOptionClick(\"espece\")}>\n//                                                 Espece\n//                                             </button>\n//                                             <button className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\" onClick={() => handleValidateClick(\"carte\")}>\n//                                                 Par Carte\n//                                             </button>\n//                                         </div>\n//                                 )}\n//                             </Dialog.Panel>\n//                         </Transition.Child>\n//                     </div>\n//                 </div>\n//             </Dialog>\n//         </Transition>\n//     );\n// };\n// export default ModalCategorie;\n// import React, { Fragment, useEffect, useState } from \"react\";\n// import Image from \"next/image\";\n// import moto from \"../../../public/image/moto.png\";\n// import panierrepas from \"../../../public/image/panierrepas.png\";\n// import { Dialog, Transition } from \"@headlessui/react\";\n// import \"./Modal.css\"\n// import { useSnapshot } from \"valtio\";\n// import store from \"../store/store\";\n// import { useRouter } from \"next/navigation\";\n// const ModalCategorie = ({ setShowModal,setIsSignInOpen }:any) => {\n//     const panierSnapshot = useSnapshot(store);\n//     const userId = localStorage.getItem(\"userId\");\n//     const { selectedCategorie } = useSnapshot(store);\n//     console.log({ selectedCategorie });\n//     const router = useRouter();\n//     const Panier = panierSnapshot.Panier;\n//     let totalQuantity :any =0\n//     Panier.forEach(item => {\n//         totalQuantity += item.qte;\n//     });\n//     let currentDate = new Date();\n//     let timeInMinutes =15 * totalQuantity\n//     let newDate = new Date(currentDate.getTime() + timeInMinutes * 60000); \n//     let currentTime = newDate.toLocaleTimeString();\n//     const [paymentOption, setPaymentOption] = useState(\"\");\n//     const [chosenOption, setChosenOption] = useState(\"\");\n//     const [selectedTime, setSelectedTime] = useState(currentTime);\n//     const [deliveryAddress, setDeliveryAddress] = useState(\"\");\n//     const handleClose = () => {\n//         setShowModal(false);\n//     };\n//     const handleOptionClick = (option:any) => {\n//         setChosenOption(option);\n//     };\n//     const handleTimeChange = (event:React.ChangeEvent<HTMLInputElement>) => {\n//         if( currentTime <= event.target.value ){\n//             setSelectedTime(event.target.value);\n//         }\n//     };\n//     const handleAddressChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n//         setDeliveryAddress(event.target.value);\n//     };\n//     const handleValidateClick = async (option: any) => {\n//         if(currentTime <= selectedTime ){\n//             if (selectedTime === \"\" ) {\n//                 alert(\"insert time\");\n//               } else if (chosenOption === \"\") {\n//                 alert(\"choose sale mode\");\n//               } else if (chosenOption === \"emporter\") {\n//                 setPaymentOption(option);\n//               }else if (chosenOption === \"livraison\") {\n//                 setPaymentOption(option);\n//               }\n//         }\n//         }\n//     useEffect(() => {\n//         const currentTime = new Date().toLocaleTimeString('en-US', { hour12: false });\n//         setSelectedTime(currentTime);\n//     }, []);\n//     const handlePaymentOptionClick = (option: any) => {\n//         if (option === \"espece\") {\n//             // Redirect to the Commande page\n//             // You might need to use a router here if you have one, like:\n//             // router.push('/commande');\n//             handleClose(); // For now, we'll just close the modal\n//         } else {\n//             setPaymentOption(option);\n//         }\n//     };\n//     return (\n//         <Transition appear show={true} as={Fragment}>\n//             <Dialog as=\"div\" className=\"relative z-10\" onClose={handleClose}>\n//                 <Transition.Child\n//                     as={Fragment}\n//                     enter=\"ease-out duration-300\"\n//                     enterFrom=\"opacity-0\"\n//                     enterTo=\"opacity-100\"\n//                     leave=\"ease-in duration-200\"\n//                     leaveFrom=\"opacity-100\"\n//                     leaveTo=\"opacity-0\"\n//                 >\n//                     <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n//                 </Transition.Child>\n//                 <div className=\"fixed inset-0 overflow-y-auto\">\n//                     <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\n//                         <Transition.Child\n//                             as={Fragment}\n//                             enter=\"ease-out duration-300\"\n//                             enterFrom=\"opacity-0 scale-95\"\n//                             enterTo=\"opacity-100 scale-100\"\n//                             leave=\"ease-in duration-200\"\n//                             leaveFrom=\"opacity-100 scale-100\"\n//                             leaveTo=\"opacity-0 scale-95\"\n//                         >\n//                             <Dialog.Panel className=\"w-full max-w-lg transform overflow-hidden rounded-lg bg-white p-6 text-left align-middle shadow-xl transition-all\">\n//                                 <div className=\"flex justify-between items-center border-b pb-3 mb-4\">\n//                                     <h5 className=\"text-xl font-bold text-gray-800\">Modes de retrait</h5>\n//                                     <button className=\"text-gray-500 hover:text-gray-800\" onClick={handleClose}>\n//                                         ✕\n//                                     </button>\n//                                 </div>\n//                                 {paymentOption !== \"paye\" ? (\n//                                     <>\n//                                 <div className=\"grid grid-cols-2 gap-4 mb-4\">\n//                                     <div className=\"text-center\">\n//                                         <button\n//                                           style={{\n//                                             backgroundColor: chosenOption === \"emporter\" ? \"green\" : \"\",\n//                                             borderRadius: \"100%\",\n//                                           }}\n//                                          onClick={() => handleOptionClick(\"emporter\")}>\n//                                             <Image src={panierrepas} alt=\"Emporter\" width={60} height={60} />\n//                                         </button>\n//                                         <p className=\"mt-2\">A emporter</p>\n//                                     </div>\n//                                     <div className=\"text-center\">\n//                                         <button \n//                                          style={{\n//                                           backgroundColor: chosenOption === \"livraison\" ? \"green\" : \"\",\n//                                           borderRadius: \"100%\",\n//                                         }}\n//                                          onClick={() => handleOptionClick(\"livraison\")}>\n//                                             <Image src={moto} alt=\"Livraison\" width={60} height={60} />\n//                                         </button>\n//                                         <p className=\"mt-2\">Livraison</p>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"text-center mb-4\">\n//                                     <input  \n//                                       type=\"time\"\n//                                       id=\"appt\" \n//                                       name=\"appt\"\n//                                       className=\"mt-1 px-4 py-2 border rounded-lg\"\n//                                       value={selectedTime} \n//                                       onChange={handleTimeChange}\n//                                        />\n//                                     <p className=\"text-red-500\"> Minimum time is  {currentTime }</p>\n//                                 </div>\n//                                 {chosenOption === \"livraison\" && (\n//                                     <div className=\"mb-4\">\n//                                         <label htmlFor=\"deliveryAddress\" className=\"block text-sm font-medium text-gray-700\">Adresse de livraison:</label>\n//                                         <input type=\"text\" id=\"deliveryAddress\" value={deliveryAddress} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" onChange={handleAddressChange} placeholder=\"Entrez votre adresse\" />\n//                                     </div>\n//                                 )}\n//                                 <button className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\" onClick={() => handleValidateClick(\"paye\")}>\n//                                     Valider\n//                                 </button>\n//                                 </>\n//                                 ) : (\n//                                       <div className=\"grid grid-cols-2 gap-4 mb-4\">\n//                                             <button className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-700 focus:ring-offset-2\" onClick={() => handlePaymentOptionClick(\"espece\")}>\n//                                                 Espece\n//                                             </button>\n//                                             <button className=\"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\" onClick={() => handleValidateClick(\"carte\")}>\n//                                                 Par Carte\n//                                             </button>\n//                                         </div>\n//                                 )}\n//                             </Dialog.Panel>\n//                         </Transition.Child>\n//                     </div>\n//                 </div>\n//             </Dialog>\n//         </Transition>\n//     );\n// };\n// export default ModalCategorie;\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst ModalCategorie = (param)=>{\n    let { setShowModal } = param;\n    _s();\n    const [chosenOption, setChosenOption] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [selectedTime, setSelectedTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [deliveryAddress, setDeliveryAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [paymentOption, setPaymentOption] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [showCartes, setShowCartes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // New state for displaying Cartes component\n    const handleClose = ()=>{\n        setShowModal(false);\n        setShowCartes(false); // Reset on close\n    };\n    const handleValidateClick = (option)=>{\n        if (selectedTime === \"\") {\n            alert(\"Please insert a time.\");\n        } else if (chosenOption === \"\") {\n            alert(\"Please choose a sale mode.\");\n        } else if (option === \"carte\") {\n            setShowCartes(true); // Set to true to display Cartes component\n        } else {\n            setPaymentOption(option);\n        }\n    };\n    const handleOptionClick = (option)=>{\n        setChosenOption(option);\n        setShowCartes(false); // Ensure Cartes is not shown when changing options\n    };\n    const handleTimeChange = (event)=>{\n        setSelectedTime(event.target.value);\n    };\n    const handleAddressChange = (event)=>{\n        setDeliveryAddress(event.target.value);\n    };\n    const handlePaymentOptionClick = (option)=>{\n        if (option === \"espece\") {\n            handleClose();\n        } else {\n            setPaymentOption(option);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setSelectedTime(new Date().toLocaleTimeString(\"en-US\", {\n            hour12: false\n        }));\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Dialog_Transition_headlessui_react__WEBPACK_IMPORTED_MODULE_7__.Transition, {\n        appear: true,\n        show: true,\n        as: react__WEBPACK_IMPORTED_MODULE_1__.Fragment,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Dialog_Transition_headlessui_react__WEBPACK_IMPORTED_MODULE_8__.Dialog, {\n            as: \"div\",\n            className: \"relative z-10\",\n            onClose: handleClose,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Dialog_Transition_headlessui_react__WEBPACK_IMPORTED_MODULE_7__.Transition.Child, {\n                    as: react__WEBPACK_IMPORTED_MODULE_1__.Fragment,\n                    enter: \"ease-out duration-300\",\n                    enterFrom: \"opacity-0\",\n                    enterTo: \"opacity-100\",\n                    leave: \"ease-in duration-200\",\n                    leaveFrom: \"opacity-100\",\n                    leaveTo: \"opacity-0\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"fixed inset-0 bg-black bg-opacity-25\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                        lineNumber: 1042,\n                        columnNumber: 21\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                    lineNumber: 1033,\n                    columnNumber: 17\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"fixed inset-0 overflow-y-auto\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex min-h-full items-center justify-center p-4 text-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Dialog_Transition_headlessui_react__WEBPACK_IMPORTED_MODULE_7__.Transition.Child, {\n                            as: react__WEBPACK_IMPORTED_MODULE_1__.Fragment,\n                            enter: \"ease-out duration-300\",\n                            enterFrom: \"opacity-0 scale-95\",\n                            enterTo: \"opacity-100 scale-100\",\n                            leave: \"ease-in duration-200\",\n                            leaveFrom: \"opacity-100 scale-100\",\n                            leaveTo: \"opacity-0 scale-95\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Dialog_Transition_headlessui_react__WEBPACK_IMPORTED_MODULE_8__.Dialog.Panel, {\n                                className: \"w-full max-w-lg transform overflow-hidden rounded-lg bg-white p-6 text-left align-middle shadow-xl transition-all\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex justify-between items-center border-b pb-3 mb-4\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                                                className: \"text-xl font-bold text-gray-800\",\n                                                children: \"Modes de retrait\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                lineNumber: 1057,\n                                                columnNumber: 37\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                className: \"text-gray-500 hover:text-gray-800\",\n                                                onClick: handleClose,\n                                                children: \"✕\"\n                                            }, void 0, false, {\n                                                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                lineNumber: 1058,\n                                                columnNumber: 37\n                                            }, undefined)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                        lineNumber: 1056,\n                                        columnNumber: 33\n                                    }, undefined),\n                                    !showCartes && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: paymentOption !== \"paye\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"grid grid-cols-2 gap-4 mb-4\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: \"text-center\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                                    style: {\n                                                                        backgroundColor: chosenOption === \"emporter\" ? \"green\" : \"\",\n                                                                        borderRadius: \"100%\"\n                                                                    },\n                                                                    onClick: ()=>handleOptionClick(\"emporter\"),\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                        src: _public_image_panierrepas_png__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n                                                                        alt: \"Emporter\",\n                                                                        width: 60,\n                                                                        height: 60\n                                                                    }, void 0, false, {\n                                                                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                                        lineNumber: 1074,\n                                                                        columnNumber: 61\n                                                                    }, undefined)\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                                    lineNumber: 1068,\n                                                                    columnNumber: 57\n                                                                }, undefined),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                                    className: \"mt-2\",\n                                                                    children: \"A emporter\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                                    lineNumber: 1076,\n                                                                    columnNumber: 57\n                                                                }, undefined)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                            lineNumber: 1067,\n                                                            columnNumber: 53\n                                                        }, undefined),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            className: \"text-center\",\n                                                            children: [\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                                    style: {\n                                                                        backgroundColor: chosenOption === \"livraison\" ? \"green\" : \"\",\n                                                                        borderRadius: \"100%\"\n                                                                    },\n                                                                    onClick: ()=>handleOptionClick(\"livraison\"),\n                                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                                                        src: _public_image_moto_png__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                                                                        alt: \"Livraison\",\n                                                                        width: 60,\n                                                                        height: 60\n                                                                    }, void 0, false, {\n                                                                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                                        lineNumber: 1085,\n                                                                        columnNumber: 61\n                                                                    }, undefined)\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                                    lineNumber: 1079,\n                                                                    columnNumber: 57\n                                                                }, undefined),\n                                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                                    className: \"mt-2\",\n                                                                    children: \"Livraison\"\n                                                                }, void 0, false, {\n                                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                                    lineNumber: 1087,\n                                                                    columnNumber: 57\n                                                                }, undefined)\n                                                            ]\n                                                        }, void 0, true, {\n                                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                            lineNumber: 1078,\n                                                            columnNumber: 53\n                                                        }, undefined)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                    lineNumber: 1066,\n                                                    columnNumber: 49\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-center mb-4\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                            children: \"Aujourd'hui\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                            lineNumber: 1091,\n                                                            columnNumber: 53\n                                                        }, undefined),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                            type: \"time\",\n                                                            className: \"mt-1 px-4 py-2 border rounded-lg\",\n                                                            value: selectedTime,\n                                                            onChange: handleTimeChange\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                            lineNumber: 1092,\n                                                            columnNumber: 53\n                                                        }, undefined)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                    lineNumber: 1090,\n                                                    columnNumber: 49\n                                                }, undefined),\n                                                chosenOption === \"livraison\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"mb-4\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                            htmlFor: \"deliveryAddress\",\n                                                            className: \"block text-sm font-medium text-gray-700\",\n                                                            children: \"Adresse de livraison:\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                            lineNumber: 1096,\n                                                            columnNumber: 57\n                                                        }, undefined),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                                            type: \"text\",\n                                                            id: \"deliveryAddress\",\n                                                            value: deliveryAddress,\n                                                            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\",\n                                                            onChange: handleAddressChange,\n                                                            placeholder: \"Enter your address\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                            lineNumber: 1097,\n                                                            columnNumber: 57\n                                                        }, undefined)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                    lineNumber: 1095,\n                                                    columnNumber: 53\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\",\n                                                    onClick: ()=>handleValidateClick(\"paye\"),\n                                                    children: \"Valider\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                    lineNumber: 1100,\n                                                    columnNumber: 49\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"grid grid-cols-2 gap-4 mb-4\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-700 focus:ring-offset-2\",\n                                                    onClick: ()=>handlePaymentOptionClick(\"espece\"),\n                                                    children: \"Cash\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                    lineNumber: 1106,\n                                                    columnNumber: 53\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2\",\n                                                    onClick: ()=>handleValidateClick(\"carte\"),\n                                                    children: \"By Card\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                                    lineNumber: 1109,\n                                                    columnNumber: 53\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                            lineNumber: 1105,\n                                            columnNumber: 47\n                                        }, undefined)\n                                    }, void 0, false),\n                                    showCartes && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Navbar_MonCompte_Profile_Cartes__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                        lineNumber: 1116,\n                                        columnNumber: 48\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                                lineNumber: 1055,\n                                columnNumber: 29\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                            lineNumber: 1046,\n                            columnNumber: 25\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                        lineNumber: 1045,\n                        columnNumber: 21\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n                    lineNumber: 1044,\n                    columnNumber: 17\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n            lineNumber: 1032,\n            columnNumber: 13\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Modal\\\\Modal.tsx\",\n        lineNumber: 1031,\n        columnNumber: 9\n    }, undefined);\n};\n_s(ModalCategorie, \"xjn6AZFwIqM33W0vUeRIh4VMDu0=\");\n_c = ModalCategorie;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ModalCategorie);\nvar _c;\n$RefreshReg$(_c, \"ModalCategorie\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Modal/Modal.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/Navbar/MonCompte/Profile/Braintree.tsx":
/*!***************************************************************!*\
  !*** ./app/components/Navbar/MonCompte/Profile/Braintree.tsx ***!
  \***************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var braintree_web_drop_in_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! braintree-web-drop-in-react */ \"(app-pages-browser)/./node_modules/braintree-web-drop-in-react/lib/index.js\");\n/* harmony import */ var react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-bootstrap/Button */ \"(app-pages-browser)/./node_modules/react-bootstrap/esm/Button.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst Subscriptions = ()=>{\n    _s();\n    const [purchaseComplete, setPurchaseComplete] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    let instance;\n    const buy = async ()=>{\n        // const userId=localStorage.getItem(\"userId\")\n        const panier = localStorage.getItem(\"panier\");\n        try {\n            const { nonce } = await instance.requestPaymentMethod();\n            const res = await fetch(\"http://localhost:8000/backend/user/checkout\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    paymentMethodNonce: nonce,\n                    user_id: \"1234\"\n                })\n            });\n            const result = await res.json();\n            if (result.result.result === \"success\") {\n                try {\n                    const response = await fetch(\"http://localhost:8000/backend/panier/\".concat(panier), {\n                        method: \"PUT\"\n                    });\n                    if (!response.ok) {\n                        throw new Error(\"Failed to update shopping cart\");\n                    }\n                    setPurchaseComplete(true);\n                } catch (error) {\n                    console.error(\"Error updating shopping cart:\", error);\n                }\n            } else {}\n        } catch (error) {\n            console.error(\"Error during checkout:\", error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: purchaseComplete ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Completed.\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Braintree.tsx\",\n                lineNumber: 44,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Braintree.tsx\",\n            lineNumber: 43,\n            columnNumber: 9\n        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(braintree_web_drop_in_react__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    options: {\n                        authorization: \"sandbox_jydk65fg_29b46ndbxsvgxwmg\"\n                    },\n                    onInstance: (inst)=>instance = inst\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Braintree.tsx\",\n                    lineNumber: 48,\n                    columnNumber: 11\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_bootstrap_Button__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    type: \"submit\",\n                    onClick: buy,\n                    children: \"confirme\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Braintree.tsx\",\n                    lineNumber: 52,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Braintree.tsx\",\n            lineNumber: 47,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Braintree.tsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Subscriptions, \"Zi02UmtNONNH9abT6mL20l48Mi0=\");\n_c = Subscriptions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Subscriptions);\nvar _c;\n$RefreshReg$(_c, \"Subscriptions\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL05hdmJhci9Nb25Db21wdGUvUHJvZmlsZS9CcmFpbnRyZWUudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1EO0FBQ0Y7QUFDUjtBQUV6QyxNQUFNSSxnQkFBZ0I7O0lBQ3BCLE1BQU0sQ0FBQ0Msa0JBQWtCQyxvQkFBb0IsR0FBR0wsK0NBQVFBLENBQUM7SUFDekQsSUFBSU07SUFDSixNQUFNQyxNQUFNO1FBQ1YsOENBQThDO1FBQzlDLE1BQU1DLFNBQVFDLGFBQWFDLE9BQU8sQ0FBQztRQUNuQyxJQUFJO1lBQ0YsTUFBTSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNTCxTQUFTTSxvQkFBb0I7WUFDckQsTUFBTUMsTUFBTSxNQUFNQyxNQUFNLCtDQUErQztnQkFDckVDLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsZ0JBQWdCO2dCQUNsQjtnQkFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO29CQUFFQyxvQkFBb0JUO29CQUFPVSxTQUFTO2dCQUFPO1lBQ3BFO1lBQ0EsTUFBTUMsU0FBUyxNQUFNVCxJQUFJVSxJQUFJO1lBQzdCLElBQUlELE9BQU9BLE1BQU0sQ0FBQ0EsTUFBTSxLQUFLLFdBQVc7Z0JBQ3RDLElBQUk7b0JBQ0YsTUFBTUUsV0FBVyxNQUFNVixNQUFNLHdDQUErQyxPQUFQTixTQUFVO3dCQUM3RU8sUUFBUTtvQkFDVjtvQkFDQSxJQUFJLENBQUNTLFNBQVNDLEVBQUUsRUFBRTt3QkFDaEIsTUFBTSxJQUFJQyxNQUFNO29CQUNsQjtvQkFDQXJCLG9CQUFvQjtnQkFDdEIsRUFBRSxPQUFPc0IsT0FBTztvQkFDZEMsUUFBUUQsS0FBSyxDQUFDLGlDQUFpQ0E7Z0JBQ2pEO1lBQ0YsT0FBTyxDQUNQO1FBQ0YsRUFBRSxPQUFPQSxPQUFPO1lBQ2RDLFFBQVFELEtBQUssQ0FBQywwQkFBMEJBO1FBQzFDO0lBQ0Y7SUFFQSxxQkFDRSw4REFBQ0U7a0JBQ0V6QixpQ0FDQyw4REFBQ3lCO3NCQUNDLDRFQUFDQzswQkFBRzs7Ozs7Ozs7OztzQ0FHTiw4REFBQ0Q7OzhCQUNDLDhEQUFDNUIsbUVBQU1BO29CQUNMOEIsU0FBUzt3QkFBRUMsZUFBZTtvQkFBb0M7b0JBQzlEQyxZQUFZLENBQUNDLE9BQVU1QixXQUFXNEI7Ozs7Ozs4QkFFcEMsOERBQUNoQyw4REFBTUE7b0JBQUNpQyxNQUFLO29CQUFTQyxTQUFTN0I7OEJBQU07Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSy9DO0dBcERNSjtLQUFBQTtBQXNETiwrREFBZUEsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29tcG9uZW50cy9OYXZiYXIvTW9uQ29tcHRlL1Byb2ZpbGUvQnJhaW50cmVlLnRzeD81ZDExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCBEcm9wSW4gZnJvbSBcImJyYWludHJlZS13ZWItZHJvcC1pbi1yZWFjdFwiO1xyXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwicmVhY3QtYm9vdHN0cmFwXCI7XHJcblxyXG5jb25zdCBTdWJzY3JpcHRpb25zID0gKCkgPT4ge1xyXG4gIGNvbnN0IFtwdXJjaGFzZUNvbXBsZXRlLCBzZXRQdXJjaGFzZUNvbXBsZXRlXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBsZXQgaW5zdGFuY2U6IGFueTtcclxuICBjb25zdCBidXkgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAvLyBjb25zdCB1c2VySWQ9bG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJ1c2VySWRcIilcclxuICAgIGNvbnN0IHBhbmllcj0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJwYW5pZXJcIilcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHsgbm9uY2UgfSA9IGF3YWl0IGluc3RhbmNlLnJlcXVlc3RQYXltZW50TWV0aG9kKCk7XHJcbiAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDAwL2JhY2tlbmQvdXNlci9jaGVja291dFwiLCB7XHJcbiAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICB9LFxyXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgcGF5bWVudE1ldGhvZE5vbmNlOiBub25jZSwgdXNlcl9pZDogJzEyMzQnIH0pLFxyXG4gICAgICB9KTtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzLmpzb24oKTtcclxuICAgICAgaWYgKHJlc3VsdC5yZXN1bHQucmVzdWx0ID09PSBcInN1Y2Nlc3NcIikge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vbG9jYWxob3N0OjgwMDAvYmFja2VuZC9wYW5pZXIvJHtwYW5pZXJ9YCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBzaG9wcGluZyBjYXJ0XCIpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgc2V0UHVyY2hhc2VDb21wbGV0ZSh0cnVlKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHVwZGF0aW5nIHNob3BwaW5nIGNhcnQ6XCIsIGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBkdXJpbmcgY2hlY2tvdXQ6XCIsIGVycm9yKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAge3B1cmNoYXNlQ29tcGxldGUgPyAoXHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxoMT5Db21wbGV0ZWQuPC9oMT5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgKSA6IChcclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPERyb3BJblxyXG4gICAgICAgICAgICBvcHRpb25zPXt7IGF1dGhvcml6YXRpb246IFwic2FuZGJveF9qeWRrNjVmZ18yOWI0Nm5kYnhzdmd4d21nXCIgfX1cclxuICAgICAgICAgICAgb25JbnN0YW5jZT17KGluc3QpID0+IChpbnN0YW5jZSA9IGluc3QpfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxCdXR0b24gdHlwZT1cInN1Ym1pdFwiIG9uQ2xpY2s9e2J1eX0gPmNvbmZpcm1lPC9CdXR0b24+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICl9XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgU3Vic2NyaXB0aW9ucztcclxuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJEcm9wSW4iLCJCdXR0b24iLCJTdWJzY3JpcHRpb25zIiwicHVyY2hhc2VDb21wbGV0ZSIsInNldFB1cmNoYXNlQ29tcGxldGUiLCJpbnN0YW5jZSIsImJ1eSIsInBhbmllciIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJub25jZSIsInJlcXVlc3RQYXltZW50TWV0aG9kIiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJwYXltZW50TWV0aG9kTm9uY2UiLCJ1c2VyX2lkIiwicmVzdWx0IiwianNvbiIsInJlc3BvbnNlIiwib2siLCJFcnJvciIsImVycm9yIiwiY29uc29sZSIsImRpdiIsImgxIiwib3B0aW9ucyIsImF1dGhvcml6YXRpb24iLCJvbkluc3RhbmNlIiwiaW5zdCIsInR5cGUiLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Navbar/MonCompte/Profile/Braintree.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/Navbar/MonCompte/Profile/Cartes.tsx":
/*!************************************************************!*\
  !*** ./app/components/Navbar/MonCompte/Profile/Cartes.tsx ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_CiCreditCard1_react_icons_ci__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=CiCreditCard1!=!react-icons/ci */ \"(app-pages-browser)/./node_modules/react-icons/ci/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_RiArrowDropDownLine_RiArrowDropUpLine_react_icons_ri__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=RiArrowDropDownLine,RiArrowDropUpLine!=!react-icons/ri */ \"(app-pages-browser)/./node_modules/react-icons/ri/index.mjs\");\n/* harmony import */ var _Braintree__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Braintree */ \"(app-pages-browser)/./app/components/Navbar/MonCompte/Profile/Braintree.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\nconst Cartes = ()=>{\n    _s();\n    const [clicked, setClicked] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const addPaypalScript = ()=>{\n        const script = document.createElement(\"script\");\n        script.src = \"https://js.braintreegateway.com/web/3.100.0/js/paypal-checkout.min.js\";\n        script.type = \"text/javascript\";\n        script.async = true;\n        document.body.appendChild(script);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        addPaypalScript();\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \" relative justify-content border-[1.2px] border-slate-200 bg-white shadow-md  rounded-2xl m-4 \",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex p-1 justify-between\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex  p-2 gap-1\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_CiCreditCard1_react_icons_ci__WEBPACK_IMPORTED_MODULE_3__.CiCreditCard1, {\n                                size: 25\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n                                lineNumber: 22,\n                                columnNumber: 17\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"\",\n                                children: \"Mes cartes\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n                                lineNumber: 23,\n                                columnNumber: 17\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n                        lineNumber: 21,\n                        columnNumber: 13\n                    }, undefined),\n                    clicked ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_RiArrowDropDownLine_RiArrowDropUpLine_react_icons_ri__WEBPACK_IMPORTED_MODULE_4__.RiArrowDropUpLine, {\n                        size: 50,\n                        onClick: ()=>setClicked(!clicked)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n                        lineNumber: 26,\n                        columnNumber: 13\n                    }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_RiArrowDropDownLine_RiArrowDropUpLine_react_icons_ri__WEBPACK_IMPORTED_MODULE_4__.RiArrowDropDownLine, {\n                        size: 50,\n                        onClick: ()=>setClicked(!clicked)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n                        lineNumber: 27,\n                        columnNumber: 15\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n                lineNumber: 20,\n                columnNumber: 9\n            }, undefined),\n            clicked ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"grid grid-row p-2 gap-2 \",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Braintree__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n                    lineNumber: 32,\n                    columnNumber: 13\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n                lineNumber: 30,\n                columnNumber: 9\n            }, undefined) : \"\"\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\Navbar\\\\MonCompte\\\\Profile\\\\Cartes.tsx\",\n        lineNumber: 19,\n        columnNumber: 5\n    }, undefined);\n};\n_s(Cartes, \"5XbqcjdsRwGQXDk8h52Vo/7G4oE=\");\n_c = Cartes;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Cartes);\nvar _c;\n$RefreshReg$(_c, \"Cartes\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL05hdmJhci9Nb25Db21wdGUvUHJvZmlsZS9DYXJ0ZXMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0QztBQUNHO0FBQ3lCO0FBQ2hDO0FBRXhDLE1BQU1NLFNBQVM7O0lBQ1gsTUFBTSxDQUFDQyxTQUFRQyxXQUFXLEdBQUNQLCtDQUFRQSxDQUFDO0lBQ3BDLE1BQU1RLGtCQUFnQjtRQUNsQixNQUFNQyxTQUFRQyxTQUFTQyxhQUFhLENBQUM7UUFDckNGLE9BQU9HLEdBQUcsR0FBRTtRQUNaSCxPQUFPSSxJQUFJLEdBQUU7UUFDYkosT0FBT0ssS0FBSyxHQUFFO1FBQ2RKLFNBQVNLLElBQUksQ0FBQ0MsV0FBVyxDQUFDUDtJQUM5QjtJQUNBVixnREFBU0EsQ0FBQztRQUNOUztJQUNKLEdBQUUsRUFBRTtJQUNKLHFCQUNBLDhEQUFDUztRQUFJQyxXQUFVOzswQkFDWCw4REFBQ0Q7Z0JBQUlDLFdBQVU7O2tDQUNYLDhEQUFDRDt3QkFBSUMsV0FBVTs7MENBQ1gsOERBQUNqQiw4RkFBYUE7Z0NBQUVrQixNQUFNOzs7Ozs7MENBQ3RCLDhEQUFDQztnQ0FBRUYsV0FBVTswQ0FBRzs7Ozs7Ozs7Ozs7O29CQUVuQlosd0JBQ0QsOERBQUNILDBIQUFpQkE7d0JBQUNnQixNQUFNO3dCQUFJRSxTQUFTLElBQUlkLFdBQVcsQ0FBQ0Q7Ozs7O2tEQUNwRCw4REFBQ0osNEhBQW1CQTt3QkFBQ2lCLE1BQU07d0JBQUlFLFNBQVMsSUFBSWQsV0FBVyxDQUFDRDs7Ozs7Ozs7Ozs7O1lBRTdEQSx3QkFDRCw4REFBQ1c7Z0JBQUlDLFdBQVU7MEJBRVgsNEVBQUNkLGtEQUFhQTs7Ozs7Ozs7OzRCQUVqQjs7Ozs7OztBQUdUO0dBL0JNQztLQUFBQTtBQWlDTiwrREFBZUEsTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvY29tcG9uZW50cy9OYXZiYXIvTW9uQ29tcHRlL1Byb2ZpbGUvQ2FydGVzLnRzeD84M2EyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgQ2lDcmVkaXRDYXJkMSB9IGZyb20gXCJyZWFjdC1pY29ucy9jaVwiO1xyXG5pbXBvcnQgeyBSaUFycm93RHJvcERvd25MaW5lLCBSaUFycm93RHJvcFVwTGluZSB9IGZyb20gXCJyZWFjdC1pY29ucy9yaVwiO1xyXG5pbXBvcnQgU3Vic2NyaXB0aW9ucyBmcm9tIFwiLi9CcmFpbnRyZWVcIjtcclxuXHJcbmNvbnN0IENhcnRlcyA9ICgpID0+IHtcclxuICAgIGNvbnN0IFtjbGlja2VkLHNldENsaWNrZWRdPXVzZVN0YXRlKGZhbHNlKVxyXG4gICAgY29uc3QgYWRkUGF5cGFsU2NyaXB0PSgpPT57XHJcbiAgICAgICAgY29uc3Qgc2NyaXB0ID1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpXHJcbiAgICAgICAgc2NyaXB0LnNyYyA9XCJodHRwczovL2pzLmJyYWludHJlZWdhdGV3YXkuY29tL3dlYi8zLjEwMC4wL2pzL3BheXBhbC1jaGVja291dC5taW4uanNcIlxyXG4gICAgICAgIHNjcmlwdC50eXBlID1cInRleHQvamF2YXNjcmlwdFwiXHJcbiAgICAgICAgc2NyaXB0LmFzeW5jID10cnVlO1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KVxyXG4gICAgfVxyXG4gICAgdXNlRWZmZWN0KCgpPT57XHJcbiAgICAgICAgYWRkUGF5cGFsU2NyaXB0KClcclxuICAgIH0sW10pXHJcbiAgICByZXR1cm4gKCBcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiIHJlbGF0aXZlIGp1c3RpZnktY29udGVudCBib3JkZXItWzEuMnB4XSBib3JkZXItc2xhdGUtMjAwIGJnLXdoaXRlIHNoYWRvdy1tZCAgcm91bmRlZC0yeGwgbS00IFwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBwLTEganVzdGlmeS1iZXR3ZWVuXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCAgcC0yIGdhcC0xXCI+XHJcbiAgICAgICAgICAgICAgICA8Q2lDcmVkaXRDYXJkMSAgc2l6ZT17MjV9IC8+XHJcbiAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJcIj5NZXMgY2FydGVzPC9wPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAge2NsaWNrZWQ/XHJcbiAgICAgICAgICAgIDxSaUFycm93RHJvcFVwTGluZSBzaXplPXs1MH0gb25DbGljaz17KCk9PnNldENsaWNrZWQoIWNsaWNrZWQpfSAgLz5cclxuICAgICAgICAgICAgOiA8UmlBcnJvd0Ryb3BEb3duTGluZSBzaXplPXs1MH0gb25DbGljaz17KCk9PnNldENsaWNrZWQoIWNsaWNrZWQpfSAvPiAgICAgICAgICAgIH1cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICB7Y2xpY2tlZD9cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1yb3cgcC0yIGdhcC0yIFwiPlxyXG4gICAgICAgICAgIFxyXG4gICAgICAgICAgICA8U3Vic2NyaXB0aW9ucyAvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDpcIlwifVxyXG4gICAgPC9kaXY+IFxyXG4gICAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FydGVzOyJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsIkNpQ3JlZGl0Q2FyZDEiLCJSaUFycm93RHJvcERvd25MaW5lIiwiUmlBcnJvd0Ryb3BVcExpbmUiLCJTdWJzY3JpcHRpb25zIiwiQ2FydGVzIiwiY2xpY2tlZCIsInNldENsaWNrZWQiLCJhZGRQYXlwYWxTY3JpcHQiLCJzY3JpcHQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzcmMiLCJ0eXBlIiwiYXN5bmMiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJkaXYiLCJjbGFzc05hbWUiLCJzaXplIiwicCIsIm9uQ2xpY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Navbar/MonCompte/Profile/Cartes.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/components/categories/painner.tsx":
/*!***********************************************!*\
  !*** ./app/components/categories/painner.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var valtio__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! valtio */ \"(app-pages-browser)/./node_modules/valtio/esm/react.mjs\");\n/* harmony import */ var tailwindcss_tailwind_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tailwindcss/tailwind.css */ \"(app-pages-browser)/./node_modules/tailwindcss/tailwind.css\");\n/* harmony import */ var _barrel_optimize_names_FaTrashAlt_react_icons_fa__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=FaTrashAlt!=!react-icons/fa */ \"(app-pages-browser)/./node_modules/react-icons/fa/index.mjs\");\n/* harmony import */ var _store_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../store/store */ \"(app-pages-browser)/./app/components/store/store.ts\");\n/* harmony import */ var _Modal_Modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Modal/Modal */ \"(app-pages-browser)/./app/components/Modal/Modal.tsx\");\n// \"use client\";\n// import React, { useEffect, useState } from \"react\";\n// import { useSnapshot } from \"valtio\";\n// import \"tailwindcss/tailwind.css\";\n// import { FaTrashAlt } from \"react-icons/fa\";\n// import store, { addToCart } from \"../store/store\";\n// import ModalCategorie from \"../Modal/Modal\";\n// function Painner({setIsSignInOpen}:any) {\n//   const panierSnapshot = useSnapshot(store);\n//   const Panier = panierSnapshot.Panier;\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [showModal, setShowModal] = useState(false);\n//   const [Somme, SetSomme] = useState(0);\n//   const [quantity, SetQuantity] = useState(0);\n//   const handleCommandeClick = () => {\n//     setShowModal(true);\n//     setIsOpen(false);\n//   };\n//   const increaseQuantity = (itemId: number) => {\n//     console.log(\"increaseQuantity called\", itemId);\n//     let copPanier = [...Panier];\n//     let itemIndex = copPanier.findIndex((item) => item.uiiditem === itemId);\n//     if (itemIndex !== -1) {\n//       let mutableItem = { ...copPanier[itemIndex] };\n//       mutableItem.qte += 1;\n//       mutableItem.prix = (\n//         mutableItem.qte * parseFloat(mutableItem.prixuniter)\n//       ).toFixed(2);\n//       copPanier[itemIndex] = mutableItem;\n//     }\n//     addToCart(copPanier);\n//   };\n//   const decreaseQuantity = (itemId: number) => {\n//     console.log(\"decreaseQuantit called\", itemId);\n//     let copPanier = [...Panier];\n//     let itemIndex = copPanier.findIndex((item) => item.uiiditem === itemId);\n//     if (itemIndex !== -1) {\n//       let mutableItem = { ...copPanier[itemIndex] };\n//       mutableItem.qte -= 1;\n//       if (mutableItem.qte > 0) {\n//         mutableItem.prix = (\n//           mutableItem.qte * parseFloat(mutableItem.prixuniter)\n//         ).toFixed(2);\n//         copPanier[itemIndex] = mutableItem;\n//       } else {\n//         copPanier.splice(itemIndex, 1);\n//       }\n//     }\n//     addToCart(copPanier);\n//   };\n//   const removeItem = (itemId: number) => {\n//     console.log(\"removeItem called\", itemId);\n//     let copPanier = [...Panier];\n//     copPanier = copPanier.filter((p) => p.uiiditem !== itemId);\n//     addToCart(copPanier);\n//   };\n//   useEffect(() => {\n//     let s = 0;\n//     let q = 0;\n//     for (let item of Panier) {\n//       s += parseFloat(item.prix);\n//       q += item.qte;\n//     }\n//     SetSomme(s);\n//     SetQuantity(q);\n//   }, [Panier]);\n// console.log({Panier});\n//   return (\n//     <>\n//       <div className=\"relative\">\n//         <svg\n//           className=\"w-10 h-10 cursor-pointer\"\n//           fill=\"currentColor\"\n//           viewBox=\"0 0 24 24\"\n//           onClick={() => setIsOpen(!isOpen)}\n//         >\n//           <path d=\"M3 3h2l.4 2M7 13h10l4-8H5.4L4 5H2M7 13l1 5h8l1-5M5 21h2a2 2 0 0 0 2-2H5a2 2 0 0 0-2 2zm10 0h2a2 2 0 0 0 2-2h-4a2 2 0 0 0 0 2z\" />\n//         </svg>\n//         <span className=\"circle absolute top-0 right-0  h-5 w-5 flex items-center justify-center\">\n//           {quantity}\n//         </span>\n//       </div>\n//       {isOpen && (\n//         <div\n//           className=\"fixed inset-0 bg-gray-800 bg-opacity-50 z-20\"\n//           onClick={() => setIsOpen(false)}\n//         >\n//           <div\n//             className=\"fixed right-0 top-0 bg-white w-80 h-full shadow-lg p-4 z-30\"\n//             onClick={(e) => e.stopPropagation()}\n//           >\n//             <div className=\"flex justify-between items-center border-b pb-2\">\n//               <h5 className=\"text-xl font-bold\">Panier</h5>\n//               <button\n//                 className=\"text-gray-500\"\n//                 onClick={() => setIsOpen(false)}\n//               >\n//                 ✕\n//               </button>\n//             </div>\n//             <div className=\"mt-4\">\n//               {Panier.length === 0 ? (\n//                 <div className=\"text-center text-gray-500\">\n//                   Votre panier est vide\n//                 </div>\n//               ) : (\n//                 <div className=\"space-y-4\">\n//                   {JSON.parse(JSON.stringify(Panier)).map((item:any, index:number) => (\n//                     <div className=\"flex items-center space-x-4\" key={index}>\n//                       <img\n//                         src={item.image}\n//                         alt={item.title}\n//                         className=\"w-16 h-16 object-cover\"\n//                       />\n//                       <div className=\"flex-grow\">\n//                         <h5 className=\"text-lg font-bold\">{item.title}</h5>\n//                         <p className=\"text-sm text-gray-500\">{item.prix} €</p>\n//                       </div>\n//                       <div className=\"flex items-center space-x-2\">\n//                         <button\n//                           className=\"px-2 py-1 bg-gray-200 text-gray-600 rounded\"\n//                           onClick={() => decreaseQuantity(item.uiiditem)}\n//                         >\n//                           -\n//                         </button>\n//                         <span>{item.qte}</span>\n//                         <button\n//                           className=\"px-2 py-1 bg-gray-200 text-gray-600 rounded\"\n//                           onClick={() => increaseQuantity(item.uiiditem)}\n//                         >\n//                           +\n//                         </button>\n//                         <button\n//                           className=\"text-red-500\"\n//                           onClick={() => removeItem(item.uiiditem)}\n//                         >\n//                           <FaTrashAlt />\n//                         </button>\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               )}\n//             </div>\n//             <div className=\"border-t pt-4 mt-4\">\n//               <div className=\"flex justify-between items-center text-lg font-bold\">\n//                 <span>Total:</span>\n//                 <span>{Somme.toFixed(2)} €</span>\n//               </div>\n//               <button\n//                 className={`w-full mt-4 py-2 rounded ${\n//                   Somme === 0 ? \"bg-gray-400\" : \"bg-blue-600\"\n//                 }`}\n//                 disabled={Somme === 0}\n//                 onClick={() => handleCommandeClick()}\n//               >\n//                 Commander\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       {showModal && <ModalCategorie setShowModal={setShowModal} setIsSignInOpen={setIsSignInOpen}/>}\n//     </>\n//   );\n// }\n// export default Painner;\n// \"use client\";\n// import React, { useEffect, useState } from \"react\";\n// import { useSnapshot } from \"valtio\";\n// import \"tailwindcss/tailwind.css\";\n// import { FaTrashAlt } from \"react-icons/fa\";\n// import store, { addToCart } from \"../store/store\";\n// import ModalCategorie from \"../Modal/Modal\";\n// function Painner({setIsSignInOpen}:any) {\n//   const panierSnapshot = useSnapshot(store);\n//   const Panier = panierSnapshot.Panier;\n//   const [isOpen, setIsOpen] = useState(false);\n//   const [showModal, setShowModal] = useState(false);\n//   const [Somme, SetSomme] = useState(0);\n//   const [quantity, SetQuantity] = useState(0);\n//   const handleCommandeClick = () => {\n//     setShowModal(true);\n//     setIsOpen(false);\n//   };\n//  const increaseQuantity = (itemId: any) => {\n//     let copPanier: any = [...Panier];\n//     for (let item of copPanier) {\n//       if (item.uiiditem === itemId) {\n//         let mutableItem = { ...item };\n//         mutableItem.qte += 1;\n//         mutableItem.prix = parseFloat(\n//           (mutableItem.qte * mutableItem.prixuniter).toFixed(2)\n//         );\n//         copPanier[copPanier.indexOf(item)] = mutableItem;\n//         addToCart(copPanier);\n//         return;\n//       }\n//     }\n//   };\n//   const decreaseQuantity = (itemId: any) => {\n//     let copPanier: any = [...Panier];\n//     for (let item of copPanier) {\n//       if (item.uiiditem === itemId) {\n//         let mutableItem = { ...item };\n//         mutableItem.qte -= 1;\n//         if (mutableItem.qte > 0) {\n//           mutableItem.prix = parseFloat(\n//             (mutableItem.qte * mutableItem.prixuniter).toFixed(2)\n//           );\n//           copPanier[copPanier.indexOf(item)] = mutableItem;\n//         } else {\n//           // Supprimer l'élément du panier\n//           copPanier.splice(copPanier.indexOf(item), 1);\n//         }\n//         break; // Sortir de la boucle après avoir trouvé l'élément\n//       }\n//     }\n//     addToCart(copPanier);\n//   };\n//   const removeItem = (itemId: number) => {\n//     console.log(\"removeItem called\", itemId);\n//     let copPanier = [...Panier];\n//     copPanier = copPanier.filter((p) => p.uiiditem !== itemId);\n//     addToCart(copPanier);\n//   };\n//   useEffect(() => {\n//     let s = 0;\n//     let q = 0;\n//     for (let item of Panier) {\n//       s += parseFloat(item.prix);\n//       q += item.qte;\n//     }\n//     SetSomme(s);\n//     SetQuantity(q);\n//   }, [Panier]);\n// console.log({Panier});\n//   return (\n//     <>\n//       <div className=\"relative\">\n//         <svg\n//           className=\"w-10 h-10 cursor-pointer\"\n//           fill=\"currentColor\"\n//           viewBox=\"0 0 24 24\"\n//           onClick={() => setIsOpen(!isOpen)}\n//         >\n//           <path d=\"M3 3h2l.4 2M7 13h10l4-8H5.4L4 5H2M7 13l1 5h8l1-5M5 21h2a2 2 0 0 0 2-2H5a2 2 0 0 0-2 2zm10 0h2a2 2 0 0 0 2-2h-4a2 2 0 0 0 0 2z\" />\n//         </svg>\n//         <span className=\"circle absolute top-0 right-0  h-5 w-5 flex items-center justify-center\">\n//           {quantity}\n//         </span>\n//       </div>\n//       {isOpen && (\n//         <div\n//           className=\"fixed inset-0 bg-gray-800 bg-opacity-50 z-20\"\n//           onClick={() => setIsOpen(false)}\n//         >\n//           <div\n//             className=\"fixed right-0 top-0 bg-white w-80 h-full shadow-lg p-4 z-30\"\n//             onClick={(e) => e.stopPropagation()}\n//           >\n//             <div className=\"flex justify-between items-center border-b pb-2\">\n//               <h5 className=\"text-xl font-bold\">Panier</h5>\n//               <button\n//                 className=\"text-gray-500\"\n//                 onClick={() => setIsOpen(false)}\n//               >\n//                 ✕\n//               </button>\n//             </div>\n//             <div className=\"mt-4\">\n//               {Panier.length === 0 ? (\n//                 <div className=\"text-center text-gray-500\">\n//                   Votre panier est vide\n//                 </div>\n//               ) : (\n//                 <div className=\"space-y-4\">\n//                   {JSON.parse(JSON.stringify(Panier)).map((item:any, index:number) => (\n//                     <div className=\"flex items-center space-x-4\" key={index}>\n//                       <img\n//                         src={item.image}\n//                         alt={item.title}\n//                         className=\"w-16 h-16 object-cover\"\n//                       />\n//                       <div className=\"flex-grow\">\n//                         <h5 className=\"text-lg font-bold\">{item.title}</h5>\n//                         <p className=\"text-sm text-gray-500\">{item.prix} €</p>\n//                       </div>\n//                       <div className=\"flex items-center space-x-2\">\n//                         <button\n//                           className=\"px-2 py-1 bg-gray-200 text-gray-600 rounded\"\n//                           onClick={() => decreaseQuantity(item.uiiditem)}\n//                         >\n//                           -\n//                         </button>\n//                         <span>{item.qte}</span>\n//                         <button\n//                           className=\"px-2 py-1 bg-gray-200 text-gray-600 rounded\"\n//                           onClick={() => increaseQuantity(item.uiiditem)}\n//                         >\n//                           +\n//                         </button>\n//                         <button\n//                           className=\"text-red-500\"\n//                           onClick={() => removeItem(item.uiiditem)}\n//                         >\n//                           <FaTrashAlt />\n//                         </button>\n//                       </div>\n//                     </div>\n//                   ))}\n//                 </div>\n//               )}\n//             </div>\n//             <div className=\"border-t pt-4 mt-4\">\n//               <div className=\"flex justify-between items-center text-lg font-bold\">\n//                 <span>Total:</span>\n//                 <span>{Somme.toFixed(2)} €</span>\n//               </div>\n//               <button\n//                 className={`w-full mt-4 py-2 rounded ${\n//                   Somme === 0 ? \"bg-gray-400\" : \"bg-blue-600\"\n//                 }`}\n//                 disabled={Somme === 0}\n//                 onClick={() => handleCommandeClick()}\n//               >\n//                 Commander\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       {showModal && <ModalCategorie setShowModal={setShowModal} setIsSignInOpen={setIsSignInOpen}/>}\n//     </>\n//   );\n// }\n// export default Painner;\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Painner(param) {\n    let { setIsSignInOpen } = param;\n    _s();\n    const panierSnapshot = (0,valtio__WEBPACK_IMPORTED_MODULE_5__.useSnapshot)(_store_store__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n    const Panier = panierSnapshot.Panier;\n    if (Panier && Panier.length > 0) {\n        const panierJSON = JSON.stringify(Panier);\n        console.log(\"entre\");\n        localStorage.setItem(\"Panier\", panierJSON);\n    }\n    const [isOpen, setIsOpen] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showModal, setShowModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [Somme, SetSomme] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [quantity, SetQuantity] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const handleCommandeClick = ()=>{\n        setShowModal(true);\n        setIsOpen(false);\n    };\n    const increaseQuantity = (itemId)=>{\n        console.log(\"increaseQuantity called\", itemId);\n        let copPanier = [\n            ...Panier\n        ];\n        let itemIndex = copPanier.findIndex((item)=>item.uiiditem === itemId);\n        if (itemIndex !== -1) {\n            let mutableItem = {\n                ...copPanier[itemIndex]\n            };\n            mutableItem.qte += 1;\n            mutableItem.prix = (mutableItem.qte * parseFloat(mutableItem.prixuniter)).toFixed(2);\n            copPanier[itemIndex] = mutableItem;\n            (0,_store_store__WEBPACK_IMPORTED_MODULE_3__.addToCart)(copPanier); // Assurez-vous que cette fonction actualise l'état du store\n        }\n    };\n    const decreaseQuantity = (itemId)=>{\n        console.log(\"decreaseQuantity called\", itemId);\n        let copPanier = [\n            ...Panier\n        ];\n        let itemIndex = copPanier.findIndex((item)=>item.uiiditem === itemId);\n        if (itemIndex !== -1) {\n            let mutableItem = {\n                ...copPanier[itemIndex]\n            };\n            if (mutableItem.qte > 1) {\n                mutableItem.qte -= 1;\n                mutableItem.prix = (mutableItem.qte * parseFloat(mutableItem.prixuniter)).toFixed(2);\n                copPanier[itemIndex] = mutableItem;\n            } // Si qte est 1, ne rien faire pour éviter d'aller en dessous de 1\n            (0,_store_store__WEBPACK_IMPORTED_MODULE_3__.addToCart)(copPanier);\n        }\n    };\n    const removeItem = (itemId)=>{\n        console.log(\"removeItem called\", itemId);\n        let copPanier = [\n            ...Panier\n        ];\n        copPanier = copPanier.filter((p)=>p.uiiditem !== itemId);\n        (0,_store_store__WEBPACK_IMPORTED_MODULE_3__.addToCart)(copPanier);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let s = 0;\n        let q = 0;\n        for (let item of Panier){\n            s += parseFloat(item.prix);\n            q += item.qte;\n        }\n        SetSomme(s);\n        SetQuantity(q);\n    }, [\n        Panier\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        className: \"w-10 h-10 cursor-pointer\",\n                        fill: \"currentColor\",\n                        viewBox: \"0 0 24 24\",\n                        onClick: ()=>setIsOpen(!isOpen),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M3 3h2l.4 2M7 13h10l4-8H5.4L4 5H2M7 13l1 5h8l1-5M5 21h2a2 2 0 0 0 2-2H5a2 2 0 0 0-2 2zm10 0h2a2 2 0 0 0 2-2h-4a2 2 0 0 0 0 2z\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                            lineNumber: 455,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                        lineNumber: 449,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"circle absolute top-0 right-0  h-5 w-5 flex items-center justify-center\",\n                        children: quantity\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                        lineNumber: 458,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                lineNumber: 448,\n                columnNumber: 7\n            }, this),\n            isOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed inset-0 bg-gray-800 bg-opacity-50 z-20\",\n                onClick: ()=>setIsOpen(false),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"fixed right-0 top-0 bg-white w-80 h-full shadow-lg p-4 z-30\",\n                    onClick: (e)=>e.stopPropagation(),\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex justify-between items-center border-b pb-2\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                                    className: \"text-xl font-bold\",\n                                    children: \"Panier\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                    lineNumber: 473,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"text-gray-500\",\n                                    onClick: ()=>setIsOpen(false),\n                                    children: \"✕\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                    lineNumber: 474,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                            lineNumber: 472,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"mt-4\",\n                            children: Panier.length === 0 ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"text-center text-gray-500\",\n                                children: \"Votre panier est vide\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                lineNumber: 483,\n                                columnNumber: 17\n                            }, this) : Panier.map((item, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center space-x-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex-grow\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h5\", {\n                                                    className: \"text-lg font-bold\",\n                                                    children: item.title\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                                    lineNumber: 495,\n                                                    columnNumber: 23\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"text-sm text-gray-500\",\n                                                    children: [\n                                                        item.prix,\n                                                        \" €\"\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                                    lineNumber: 496,\n                                                    columnNumber: 23\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                            lineNumber: 494,\n                                            columnNumber: 21\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-center space-x-2\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"px-2 py-1 bg-gray-200 text-gray-600 rounded\",\n                                                    onClick: ()=>decreaseQuantity(item.uiiditem),\n                                                    disabled: item.qte <= 1,\n                                                    children: \"-\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                                    lineNumber: 499,\n                                                    columnNumber: 23\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                    children: item.qte\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                                    lineNumber: 506,\n                                                    columnNumber: 23\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"px-2 py-1 bg-gray-200 text-gray-600 rounded\",\n                                                    onClick: ()=>increaseQuantity(item.uiiditem),\n                                                    children: \"+\"\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                                    lineNumber: 507,\n                                                    columnNumber: 23\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                                    className: \"text-red-500\",\n                                                    onClick: ()=>removeItem(item.uiiditem),\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaTrashAlt_react_icons_fa__WEBPACK_IMPORTED_MODULE_6__.FaTrashAlt, {}, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                                        lineNumber: 517,\n                                                        columnNumber: 25\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                                    lineNumber: 513,\n                                                    columnNumber: 23\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                            lineNumber: 498,\n                                            columnNumber: 21\n                                        }, this)\n                                    ]\n                                }, index, true, {\n                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                    lineNumber: 488,\n                                    columnNumber: 19\n                                }, this))\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                            lineNumber: 481,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"border-t pt-4 mt-4\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex justify-between items-center text-lg font-bold\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"Total:\"\n                                        }, void 0, false, {\n                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                            lineNumber: 527,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: [\n                                                Somme.toFixed(2),\n                                                \" €\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                            lineNumber: 528,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                    lineNumber: 526,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    className: \"w-full mt-4 py-2 rounded \".concat(Somme === 0 ? \"bg-gray-400\" : \"bg-blue-600\"),\n                                    disabled: Somme === 0,\n                                    onClick: ()=>handleCommandeClick(),\n                                    children: \"Commander\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                                    lineNumber: 530,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                            lineNumber: 525,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                    lineNumber: 468,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                lineNumber: 464,\n                columnNumber: 9\n            }, this),\n            showModal && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Modal_Modal__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                setShowModal: setShowModal,\n                setIsSignInOpen: setIsSignInOpen\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\restaurant-tailwind-nextjs-free-main\\\\app\\\\components\\\\categories\\\\painner.tsx\",\n                lineNumber: 544,\n                columnNumber: 21\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(Painner, \"YyKKy+d6WDPHQVSpss4UDeY0l+Q=\", false, function() {\n    return [\n        valtio__WEBPACK_IMPORTED_MODULE_5__.useSnapshot\n    ];\n});\n_c = Painner;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Painner);\nvar _c;\n$RefreshReg$(_c, \"Painner\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/categories/painner.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_SERVER_CONTEXT_TYPE = Symbol.for('react.server_context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      case REACT_SERVER_CONTEXT_TYPE:\n        {\n          var context2 = type;\n          return (context2.displayName || context2._globalName) + '.Provider';\n        }\n\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe[prop-missing]\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      } // TODO(luna): This will currently only throw if the function component\n      // tries to access React/ReactDOM/props. We should probably make this throw\n      // in simple components too\n\n\n      var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n      // component, which we don't yet support. Attach a noop catch handler to\n      // silence the error.\n      // TODO: Implement component stacks for async client components?\n\n      if (maybePromise && typeof maybePromise.catch === 'function') {\n        maybePromise.catch(function () {});\n      }\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement$1(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement$1(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement$1(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (hasOwnProperty.call(props, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(props).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx = jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs = jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-runtime.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLHNMQUFrRTtBQUNwRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1ydW50aW1lLmpzP2RiNTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar printWarning = function() {};\n\nif (true) {\n  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"(app-pages-browser)/./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n  var loggedTypeFailures = {};\n  var has = __webpack_require__(/*! ./lib/has */ \"(app-pages-browser)/./node_modules/prop-types/lib/has.js\");\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2NoZWNrUHJvcFR5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYjs7QUFFQSxJQUFJLElBQXFDO0FBQ3pDLDZCQUE2QixtQkFBTyxDQUFDLDZHQUE0QjtBQUNqRTtBQUNBLFlBQVksbUJBQU8sQ0FBQywyRUFBVzs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLFlBQVk7QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFdBQVc7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsTUFBTSxJQUFxQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkdBQTZHO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQ7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLElBQXFDO0FBQzNDO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9jaGVja1Byb3BUeXBlcy5qcz9kZmFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24oKSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcbiAgdmFyIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xuICB2YXIgaGFzID0gcmVxdWlyZSgnLi9saWIvaGFzJyk7XG5cbiAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgIHZhciBtZXNzYWdlID0gJ1dhcm5pbmc6ICcgKyB0ZXh0O1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHsgLyoqLyB9XG4gIH07XG59XG5cbi8qKlxuICogQXNzZXJ0IHRoYXQgdGhlIHZhbHVlcyBtYXRjaCB3aXRoIHRoZSB0eXBlIHNwZWNzLlxuICogRXJyb3IgbWVzc2FnZXMgYXJlIG1lbW9yaXplZCBhbmQgd2lsbCBvbmx5IGJlIHNob3duIG9uY2UuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IHR5cGVTcGVjcyBNYXAgb2YgbmFtZSB0byBhIFJlYWN0UHJvcFR5cGVcbiAqIEBwYXJhbSB7b2JqZWN0fSB2YWx1ZXMgUnVudGltZSB2YWx1ZXMgdGhhdCBuZWVkIHRvIGJlIHR5cGUtY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGxvY2F0aW9uIGUuZy4gXCJwcm9wXCIsIFwiY29udGV4dFwiLCBcImNoaWxkIGNvbnRleHRcIlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbXBvbmVudE5hbWUgTmFtZSBvZiB0aGUgY29tcG9uZW50IGZvciBlcnJvciBtZXNzYWdlcy5cbiAqIEBwYXJhbSB7P0Z1bmN0aW9ufSBnZXRTdGFjayBSZXR1cm5zIHRoZSBjb21wb25lbnQgc3RhY2suXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgZm9yICh2YXIgdHlwZVNwZWNOYW1lIGluIHR5cGVTcGVjcykge1xuICAgICAgaWYgKGhhcyh0eXBlU3BlY3MsIHR5cGVTcGVjTmFtZSkpIHtcbiAgICAgICAgdmFyIGVycm9yO1xuICAgICAgICAvLyBQcm9wIHR5cGUgdmFsaWRhdGlvbiBtYXkgdGhyb3cuIEluIGNhc2UgdGhleSBkbywgd2UgZG9uJ3Qgd2FudCB0b1xuICAgICAgICAvLyBmYWlsIHRoZSByZW5kZXIgcGhhc2Ugd2hlcmUgaXQgZGlkbid0IGZhaWwgYmVmb3JlLiBTbyB3ZSBsb2cgaXQuXG4gICAgICAgIC8vIEFmdGVyIHRoZXNlIGhhdmUgYmVlbiBjbGVhbmVkIHVwLCB3ZSdsbCBsZXQgdGhlbSB0aHJvdy5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGludGVudGlvbmFsbHkgYW4gaW52YXJpYW50IHRoYXQgZ2V0cyBjYXVnaHQuIEl0J3MgdGhlIHNhbWVcbiAgICAgICAgICAvLyBiZWhhdmlvciBhcyB3aXRob3V0IHRoaXMgc3RhdGVtZW50IGV4Y2VwdCB3aXRoIGEgYmV0dGVyIG1lc3NhZ2UuXG4gICAgICAgICAgaWYgKHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKFxuICAgICAgICAgICAgICAoY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnKSArICc6ICcgKyBsb2NhdGlvbiArICcgdHlwZSBgJyArIHR5cGVTcGVjTmFtZSArICdgIGlzIGludmFsaWQ7ICcgK1xuICAgICAgICAgICAgICAnaXQgbXVzdCBiZSBhIGZ1bmN0aW9uLCB1c3VhbGx5IGZyb20gdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLCBidXQgcmVjZWl2ZWQgYCcgKyB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0gKyAnYC4nICtcbiAgICAgICAgICAgICAgJ1RoaXMgb2Z0ZW4gaGFwcGVucyBiZWNhdXNlIG9mIHR5cG9zIHN1Y2ggYXMgYFByb3BUeXBlcy5mdW5jdGlvbmAgaW5zdGVhZCBvZiBgUHJvcFR5cGVzLmZ1bmNgLidcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICB9XG4gICAgICAgICAgZXJyb3IgPSB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSh2YWx1ZXMsIHR5cGVTcGVjTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIG51bGwsIFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtcbiAgICAgICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgICBlcnJvciA9IGV4O1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvciAmJiAhKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpKSB7XG4gICAgICAgICAgcHJpbnRXYXJuaW5nKFxuICAgICAgICAgICAgKGNvbXBvbmVudE5hbWUgfHwgJ1JlYWN0IGNsYXNzJykgKyAnOiB0eXBlIHNwZWNpZmljYXRpb24gb2YgJyArXG4gICAgICAgICAgICBsb2NhdGlvbiArICcgYCcgKyB0eXBlU3BlY05hbWUgKyAnYCBpcyBpbnZhbGlkOyB0aGUgdHlwZSBjaGVja2VyICcgK1xuICAgICAgICAgICAgJ2Z1bmN0aW9uIG11c3QgcmV0dXJuIGBudWxsYCBvciBhbiBgRXJyb3JgIGJ1dCByZXR1cm5lZCBhICcgKyB0eXBlb2YgZXJyb3IgKyAnLiAnICtcbiAgICAgICAgICAgICdZb3UgbWF5IGhhdmUgZm9yZ290dGVuIHRvIHBhc3MgYW4gYXJndW1lbnQgdG8gdGhlIHR5cGUgY2hlY2tlciAnICtcbiAgICAgICAgICAgICdjcmVhdG9yIChhcnJheU9mLCBpbnN0YW5jZU9mLCBvYmplY3RPZiwgb25lT2YsIG9uZU9mVHlwZSwgYW5kICcgK1xuICAgICAgICAgICAgJ3NoYXBlIGFsbCByZXF1aXJlIGFuIGFyZ3VtZW50KS4nXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciAmJiAhKGVycm9yLm1lc3NhZ2UgaW4gbG9nZ2VkVHlwZUZhaWx1cmVzKSkge1xuICAgICAgICAgIC8vIE9ubHkgbW9uaXRvciB0aGlzIGZhaWx1cmUgb25jZSBiZWNhdXNlIHRoZXJlIHRlbmRzIHRvIGJlIGEgbG90IG9mIHRoZVxuICAgICAgICAgIC8vIHNhbWUgZXJyb3IuXG4gICAgICAgICAgbG9nZ2VkVHlwZUZhaWx1cmVzW2Vycm9yLm1lc3NhZ2VdID0gdHJ1ZTtcblxuICAgICAgICAgIHZhciBzdGFjayA9IGdldFN0YWNrID8gZ2V0U3RhY2soKSA6ICcnO1xuXG4gICAgICAgICAgcHJpbnRXYXJuaW5nKFxuICAgICAgICAgICAgJ0ZhaWxlZCAnICsgbG9jYXRpb24gKyAnIHR5cGU6ICcgKyBlcnJvci5tZXNzYWdlICsgKHN0YWNrICE9IG51bGwgPyBzdGFjayA6ICcnKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBSZXNldHMgd2FybmluZyBjYWNoZSB3aGVuIHRlc3RpbmcuXG4gKlxuICogQHByaXZhdGVcbiAqL1xuY2hlY2tQcm9wVHlwZXMucmVzZXRXYXJuaW5nQ2FjaGUgPSBmdW5jdGlvbigpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBsb2dnZWRUeXBlRmFpbHVyZXMgPSB7fTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNoZWNrUHJvcFR5cGVzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/checkPropTypes.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactIs = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-is/index.js\");\nvar assign = __webpack_require__(/*! object-assign */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/object-assign.js\");\n\nvar ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ \"(app-pages-browser)/./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\nvar has = __webpack_require__(/*! ./lib/has */ \"(app-pages-browser)/./node_modules/prop-types/lib/has.js\");\nvar checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ \"(app-pages-browser)/./node_modules/prop-types/checkPropTypes.js\");\n\nvar printWarning = function() {};\n\nif (true) {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if ( true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/factoryWithTypeCheckers.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (true) {\n  var ReactIs = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-is/index.js\");\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ \"(app-pages-browser)/./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLElBQXFDO0FBQ3pDLGdCQUFnQixtQkFBTyxDQUFDLHNFQUFVOztBQUVsQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQywyR0FBMkI7QUFDdEQsRUFBRSxLQUFLLEVBSU4iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanM/YmE3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzP2Y1NDMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/lib/ReactPropTypesSecret.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/prop-types/lib/has.js":
/*!********************************************!*\
  !*** ./node_modules/prop-types/lib/has.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9oYXMuanMiLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL2hhcy5qcz80ZWY3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gRnVuY3Rpb24uY2FsbC5iaW5kKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/prop-types/lib/has.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-bootstrap/esm/Button.js":
/*!****************************************************!*\
  !*** ./node_modules/react-bootstrap/esm/Button.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! classnames */ \"(app-pages-browser)/./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _restart_ui_Button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @restart/ui/Button */ \"(app-pages-browser)/./node_modules/@restart/ui/esm/Button.js\");\n/* harmony import */ var _ThemeProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ThemeProvider */ \"(app-pages-browser)/./node_modules/react-bootstrap/esm/ThemeProvider.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n\"use client\";\n\n\n\n\n\n\nconst Button = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = (0,_ThemeProvider__WEBPACK_IMPORTED_MODULE_3__.useBootstrapPrefix)(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = (0,_restart_ui_Button__WEBPACK_IMPORTED_MODULE_4__.useButtonProps)({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\n/* harmony default export */ __webpack_exports__[\"default\"] = (Button);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXNtL0J1dHRvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOztBQUVvQztBQUNMO0FBQ3FCO0FBQ0M7QUFDTDtBQUNoRCw0QkFBNEIsNkNBQWdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsaUJBQWlCLGtFQUFrQjtBQUNuQztBQUNBO0FBQ0EsR0FBRyxJQUFJLGtFQUFjO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLHNCQUFzQixzREFBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaURBQVUsc0RBQXNELE9BQU8sR0FBRyxRQUFRLGNBQWMsT0FBTyxHQUFHLEtBQUs7QUFDOUgsR0FBRztBQUNILENBQUM7QUFDRDtBQUNBLCtEQUFlLE1BQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lc20vQnV0dG9uLmpzPzRlODEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlQnV0dG9uUHJvcHMgfSBmcm9tICdAcmVzdGFydC91aS9CdXR0b24nO1xuaW1wb3J0IHsgdXNlQm9vdHN0cmFwUHJlZml4IH0gZnJvbSAnLi9UaGVtZVByb3ZpZGVyJztcbmltcG9ydCB7IGpzeCBhcyBfanN4IH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5jb25zdCBCdXR0b24gPSAvKiNfX1BVUkVfXyovUmVhY3QuZm9yd2FyZFJlZigoe1xuICBhcyxcbiAgYnNQcmVmaXgsXG4gIHZhcmlhbnQgPSAncHJpbWFyeScsXG4gIHNpemUsXG4gIGFjdGl2ZSA9IGZhbHNlLFxuICBkaXNhYmxlZCA9IGZhbHNlLFxuICBjbGFzc05hbWUsXG4gIC4uLnByb3BzXG59LCByZWYpID0+IHtcbiAgY29uc3QgcHJlZml4ID0gdXNlQm9vdHN0cmFwUHJlZml4KGJzUHJlZml4LCAnYnRuJyk7XG4gIGNvbnN0IFtidXR0b25Qcm9wcywge1xuICAgIHRhZ05hbWVcbiAgfV0gPSB1c2VCdXR0b25Qcm9wcyh7XG4gICAgdGFnTmFtZTogYXMsXG4gICAgZGlzYWJsZWQsXG4gICAgLi4ucHJvcHNcbiAgfSk7XG4gIGNvbnN0IENvbXBvbmVudCA9IHRhZ05hbWU7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovX2pzeChDb21wb25lbnQsIHtcbiAgICAuLi5idXR0b25Qcm9wcyxcbiAgICAuLi5wcm9wcyxcbiAgICByZWY6IHJlZixcbiAgICBkaXNhYmxlZDogZGlzYWJsZWQsXG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgcHJlZml4LCBhY3RpdmUgJiYgJ2FjdGl2ZScsIHZhcmlhbnQgJiYgYCR7cHJlZml4fS0ke3ZhcmlhbnR9YCwgc2l6ZSAmJiBgJHtwcmVmaXh9LSR7c2l6ZX1gLCBwcm9wcy5ocmVmICYmIGRpc2FibGVkICYmICdkaXNhYmxlZCcpXG4gIH0pO1xufSk7XG5CdXR0b24uZGlzcGxheU5hbWUgPSAnQnV0dG9uJztcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-bootstrap/esm/Button.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-bootstrap/esm/ThemeProvider.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-bootstrap/esm/ThemeProvider.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_BREAKPOINTS: function() { return /* binding */ DEFAULT_BREAKPOINTS; },\n/* harmony export */   DEFAULT_MIN_BREAKPOINT: function() { return /* binding */ DEFAULT_MIN_BREAKPOINT; },\n/* harmony export */   ThemeConsumer: function() { return /* binding */ Consumer; },\n/* harmony export */   createBootstrapComponent: function() { return /* binding */ createBootstrapComponent; },\n/* harmony export */   useBootstrapBreakpoints: function() { return /* binding */ useBootstrapBreakpoints; },\n/* harmony export */   useBootstrapMinBreakpoint: function() { return /* binding */ useBootstrapMinBreakpoint; },\n/* harmony export */   useBootstrapPrefix: function() { return /* binding */ useBootstrapPrefix; },\n/* harmony export */   useIsRTL: function() { return /* binding */ useIsRTL; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n\"use client\";\n\n\n\n\nconst DEFAULT_BREAKPOINTS = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst DEFAULT_MIN_BREAKPOINT = 'xs';\nconst ThemeContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  prefixes: {},\n  breakpoints: DEFAULT_BREAKPOINTS,\n  minBreakpoint: DEFAULT_MIN_BREAKPOINT\n});\nconst {\n  Consumer,\n  Provider\n} = ThemeContext;\nfunction ThemeProvider({\n  prefixes = {},\n  breakpoints = DEFAULT_BREAKPOINTS,\n  minBreakpoint = DEFAULT_MIN_BREAKPOINT,\n  dir,\n  children\n}) {\n  const contextValue = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(() => ({\n    prefixes: {\n      ...prefixes\n    },\n    breakpoints,\n    minBreakpoint,\n    dir\n  }), [prefixes, breakpoints, minBreakpoint, dir]);\n  return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Provider, {\n    value: contextValue,\n    children: children\n  });\n}\nfunction useBootstrapPrefix(prefix, defaultPrefix) {\n  const {\n    prefixes\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nfunction useBootstrapBreakpoints() {\n  const {\n    breakpoints\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThemeContext);\n  return breakpoints;\n}\nfunction useBootstrapMinBreakpoint() {\n  const {\n    minBreakpoint\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThemeContext);\n  return minBreakpoint;\n}\nfunction useIsRTL() {\n  const {\n    dir\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ThemeContext);\n  return dir === 'rtl';\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  const isClassy = Component.prototype && Component.prototype.isReactComponent;\n  // If it's a functional component make sure we don't break it with a ref\n  const {\n    prefix,\n    forwardRefAs = isClassy ? 'ref' : 'innerRef'\n  } = opts;\n  const Wrapped = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(({\n    ...props\n  }, ref) => {\n    props[forwardRefAs] = ref;\n    const bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(Component, {\n      ...props,\n      bsPrefix: bsPrefix\n    });\n  });\n  Wrapped.displayName = `Bootstrap(${Component.displayName || Component.name})`;\n  return Wrapped;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ThemeProvider);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXNtL1RoZW1lUHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFK0I7QUFDYTtBQUNJO0FBQ3pDO0FBQ0E7QUFDUCxrQ0FBa0MsZ0RBQW1CO0FBQ3JELGNBQWM7QUFDZDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx1QkFBdUIsOENBQU87QUFDOUI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsc0JBQXNCLHNEQUFJO0FBQzFCO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDTztBQUNQO0FBQ0E7QUFDQSxJQUFJLEVBQUUsaURBQVU7QUFDaEI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLElBQUksRUFBRSxpREFBVTtBQUNoQjtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsSUFBSSxFQUFFLGlEQUFVO0FBQ2hCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxJQUFJLEVBQUUsaURBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiwrQkFBK0IsNkNBQWdCO0FBQy9DO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSx3QkFBd0Isc0RBQUk7QUFDNUI7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0gscUNBQXFDLHdDQUF3QztBQUM3RTtBQUNBO0FBQytEO0FBQy9ELCtEQUFlLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lc20vVGhlbWVQcm92aWRlci5qcz80ZmY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VDb250ZXh0LCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0JSRUFLUE9JTlRTID0gWyd4eGwnLCAneGwnLCAnbGcnLCAnbWQnLCAnc20nLCAneHMnXTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX01JTl9CUkVBS1BPSU5UID0gJ3hzJztcbmNvbnN0IFRoZW1lQ29udGV4dCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVDb250ZXh0KHtcbiAgcHJlZml4ZXM6IHt9LFxuICBicmVha3BvaW50czogREVGQVVMVF9CUkVBS1BPSU5UUyxcbiAgbWluQnJlYWtwb2ludDogREVGQVVMVF9NSU5fQlJFQUtQT0lOVFxufSk7XG5jb25zdCB7XG4gIENvbnN1bWVyLFxuICBQcm92aWRlclxufSA9IFRoZW1lQ29udGV4dDtcbmZ1bmN0aW9uIFRoZW1lUHJvdmlkZXIoe1xuICBwcmVmaXhlcyA9IHt9LFxuICBicmVha3BvaW50cyA9IERFRkFVTFRfQlJFQUtQT0lOVFMsXG4gIG1pbkJyZWFrcG9pbnQgPSBERUZBVUxUX01JTl9CUkVBS1BPSU5ULFxuICBkaXIsXG4gIGNoaWxkcmVuXG59KSB7XG4gIGNvbnN0IGNvbnRleHRWYWx1ZSA9IHVzZU1lbW8oKCkgPT4gKHtcbiAgICBwcmVmaXhlczoge1xuICAgICAgLi4ucHJlZml4ZXNcbiAgICB9LFxuICAgIGJyZWFrcG9pbnRzLFxuICAgIG1pbkJyZWFrcG9pbnQsXG4gICAgZGlyXG4gIH0pLCBbcHJlZml4ZXMsIGJyZWFrcG9pbnRzLCBtaW5CcmVha3BvaW50LCBkaXJdKTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fanN4KFByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGNvbnRleHRWYWx1ZSxcbiAgICBjaGlsZHJlbjogY2hpbGRyZW5cbiAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlQm9vdHN0cmFwUHJlZml4KHByZWZpeCwgZGVmYXVsdFByZWZpeCkge1xuICBjb25zdCB7XG4gICAgcHJlZml4ZXNcbiAgfSA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbiAgcmV0dXJuIHByZWZpeCB8fCBwcmVmaXhlc1tkZWZhdWx0UHJlZml4XSB8fCBkZWZhdWx0UHJlZml4O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZUJvb3RzdHJhcEJyZWFrcG9pbnRzKCkge1xuICBjb25zdCB7XG4gICAgYnJlYWtwb2ludHNcbiAgfSA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbiAgcmV0dXJuIGJyZWFrcG9pbnRzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZUJvb3RzdHJhcE1pbkJyZWFrcG9pbnQoKSB7XG4gIGNvbnN0IHtcbiAgICBtaW5CcmVha3BvaW50XG4gIH0gPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gIHJldHVybiBtaW5CcmVha3BvaW50O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZUlzUlRMKCkge1xuICBjb25zdCB7XG4gICAgZGlyXG4gIH0gPSB1c2VDb250ZXh0KFRoZW1lQ29udGV4dCk7XG4gIHJldHVybiBkaXIgPT09ICdydGwnO1xufVxuZnVuY3Rpb24gY3JlYXRlQm9vdHN0cmFwQ29tcG9uZW50KENvbXBvbmVudCwgb3B0cykge1xuICBpZiAodHlwZW9mIG9wdHMgPT09ICdzdHJpbmcnKSBvcHRzID0ge1xuICAgIHByZWZpeDogb3B0c1xuICB9O1xuICBjb25zdCBpc0NsYXNzeSA9IENvbXBvbmVudC5wcm90b3R5cGUgJiYgQ29tcG9uZW50LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50O1xuICAvLyBJZiBpdCdzIGEgZnVuY3Rpb25hbCBjb21wb25lbnQgbWFrZSBzdXJlIHdlIGRvbid0IGJyZWFrIGl0IHdpdGggYSByZWZcbiAgY29uc3Qge1xuICAgIHByZWZpeCxcbiAgICBmb3J3YXJkUmVmQXMgPSBpc0NsYXNzeSA/ICdyZWYnIDogJ2lubmVyUmVmJ1xuICB9ID0gb3B0cztcbiAgY29uc3QgV3JhcHBlZCA9IC8qI19fUFVSRV9fKi9SZWFjdC5mb3J3YXJkUmVmKCh7XG4gICAgLi4ucHJvcHNcbiAgfSwgcmVmKSA9PiB7XG4gICAgcHJvcHNbZm9yd2FyZFJlZkFzXSA9IHJlZjtcbiAgICBjb25zdCBic1ByZWZpeCA9IHVzZUJvb3RzdHJhcFByZWZpeChwcm9wcy5ic1ByZWZpeCwgcHJlZml4KTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL19qc3goQ29tcG9uZW50LCB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIGJzUHJlZml4OiBic1ByZWZpeFxuICAgIH0pO1xuICB9KTtcbiAgV3JhcHBlZC5kaXNwbGF5TmFtZSA9IGBCb290c3RyYXAoJHtDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgQ29tcG9uZW50Lm5hbWV9KWA7XG4gIHJldHVybiBXcmFwcGVkO1xufVxuZXhwb3J0IHsgY3JlYXRlQm9vdHN0cmFwQ29tcG9uZW50LCBDb25zdW1lciBhcyBUaGVtZUNvbnN1bWVyIH07XG5leHBvcnQgZGVmYXVsdCBUaGVtZVByb3ZpZGVyOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-bootstrap/esm/ThemeProvider.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"(app-pages-browser)/./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLEtBQXFDLEVBQUUsRUFFMUMsQ0FBQztBQUNGLEVBQUUsb0pBQXlEO0FBQzNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pcy9pbmRleC5qcz85OWMyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-is/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("function _assertThisInitialized(e) {\n  if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return e;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx5QkFBeUIsU0FBUyx5QkFBeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzPzc4OTkiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2Fzc2VydFRoaXNJbml0aWFsaXplZChlKSB7XG4gIGlmICh2b2lkIDAgPT09IGUpIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgcmV0dXJuIGU7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FzeW5jVG9HZW5lcmF0b3IuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esb0NBQW9DLHlCQUF5QixTQUFTLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzPzEyNGMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXN5bmNHZW5lcmF0b3JTdGVwKG4sIHQsIGUsIHIsIG8sIGEsIGMpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaSA9IG5bYV0oYyksXG4gICAgICB1ID0gaS52YWx1ZTtcbiAgfSBjYXRjaCAobikge1xuICAgIHJldHVybiB2b2lkIGUobik7XG4gIH1cbiAgaS5kb25lID8gdCh1KSA6IFByb21pc2UucmVzb2x2ZSh1KS50aGVuKHIsIG8pO1xufVxuZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3Iobikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciB0ID0gdGhpcyxcbiAgICAgIGUgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyLCBvKSB7XG4gICAgICB2YXIgYSA9IG4uYXBwbHkodCwgZSk7XG4gICAgICBmdW5jdGlvbiBfbmV4dChuKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChhLCByLCBvLCBfbmV4dCwgX3Rocm93LCBcIm5leHRcIiwgbik7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBfdGhyb3cobikge1xuICAgICAgICBhc3luY0dlbmVyYXRvclN0ZXAoYSwgciwgbywgX25leHQsIF90aHJvdywgXCJ0aHJvd1wiLCBuKTtcbiAgICAgIH1cbiAgICAgIF9uZXh0KHZvaWQgMCk7XG4gICAgfSk7XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9hc3luY1RvR2VuZXJhdG9yLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx5QkFBeUIsU0FBUyx5QkFBeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanM/YjA2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soYSwgbikge1xuICBpZiAoIShhIGluc3RhbmNlb2YgbikpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0NhbGxDaGVjaywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/classCallCheck.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\");\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixtQkFBTyxDQUFDLHNHQUFvQjtBQUNoRDtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsK0JBQStCLHlCQUF5QixTQUFTLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcz84MjEyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB0b1Byb3BlcnR5S2V5ID0gcmVxdWlyZShcIi4vdG9Qcm9wZXJ0eUtleS5qc1wiKTtcbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKGUsIHIpIHtcbiAgZm9yICh2YXIgdCA9IDA7IHQgPCByLmxlbmd0aDsgdCsrKSB7XG4gICAgdmFyIG8gPSByW3RdO1xuICAgIG8uZW51bWVyYWJsZSA9IG8uZW51bWVyYWJsZSB8fCAhMSwgby5jb25maWd1cmFibGUgPSAhMCwgXCJ2YWx1ZVwiIGluIG8gJiYgKG8ud3JpdGFibGUgPSAhMCksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCB0b1Byb3BlcnR5S2V5KG8ua2V5KSwgbyk7XG4gIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhlLCByLCB0KSB7XG4gIHJldHVybiByICYmIF9kZWZpbmVQcm9wZXJ0aWVzKGUucHJvdG90eXBlLCByKSwgdCAmJiBfZGVmaW5lUHJvcGVydGllcyhlLCB0KSwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogITFcbiAgfSksIGU7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9jcmVhdGVDbGFzcywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/createClass.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5LmpzIiwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQixtQkFBTyxDQUFDLHNHQUFvQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxrQ0FBa0MseUJBQXlCLFNBQVMseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5LmpzPzkyNDIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvUHJvcGVydHlLZXkgPSByZXF1aXJlKFwiLi90b1Byb3BlcnR5S2V5LmpzXCIpO1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KGUsIHIsIHQpIHtcbiAgcmV0dXJuIChyID0gdG9Qcm9wZXJ0eUtleShyKSkgaW4gZSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCB7XG4gICAgdmFsdWU6IHQsXG4gICAgZW51bWVyYWJsZTogITAsXG4gICAgY29uZmlndXJhYmxlOiAhMCxcbiAgICB3cml0YWJsZTogITBcbiAgfSkgOiBlW3JdID0gdCwgZTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2RlZmluZVByb3BlcnR5LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/defineProperty.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("function _getPrototypeOf(t) {\n  return (module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _getPrototypeOf(t);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsRUFBRSx5QkFBeUIsU0FBUyx5QkFBeUI7QUFDaEU7QUFDQSxrQ0FBa0MseUJBQXlCLFNBQVMseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mLmpzPzdiZjEiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKHQpIHtcbiAgcmV0dXJuIChtb2R1bGUuZXhwb3J0cyA9IF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCkge1xuICAgIHJldHVybiB0Ll9fcHJvdG9fXyB8fCBPYmplY3QuZ2V0UHJvdG90eXBlT2YodCk7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cyksIF9nZXRQcm90b3R5cGVPZih0KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2dldFByb3RvdHlwZU9mLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\nfunction _inherits(t, e) {\n  if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n  t.prototype = Object.create(e && e.prototype, {\n    constructor: {\n      value: t,\n      writable: !0,\n      configurable: !0\n    }\n  }), Object.defineProperty(t, \"prototype\", {\n    writable: !1\n  }), e && setPrototypeOf(t, e);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHFCQUFxQixtQkFBTyxDQUFDLHdHQUFxQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIO0FBQ0EsNEJBQTRCLHlCQUF5QixTQUFTLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcz82NGIwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL3NldFByb3RvdHlwZU9mLmpzXCIpO1xuZnVuY3Rpb24gX2luaGVyaXRzKHQsIGUpIHtcbiAgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgZSAmJiBudWxsICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gIHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShlICYmIGUucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiB0LFxuICAgICAgd3JpdGFibGU6ICEwLFxuICAgICAgY29uZmlndXJhYmxlOiAhMFxuICAgIH1cbiAgfSksIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBcInByb3RvdHlwZVwiLCB7XG4gICAgd3JpdGFibGU6ICExXG4gIH0pLCBlICYmIHNldFByb3RvdHlwZU9mKHQsIGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfaW5oZXJpdHMsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/inherits.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("function _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    \"default\": e\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLHlCQUF5QixTQUFTLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanM/OTk5ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGUpIHtcbiAgcmV0dXJuIGUgJiYgZS5fX2VzTW9kdWxlID8gZSA6IHtcbiAgICBcImRlZmF1bHRcIjogZVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var _typeof = (__webpack_require__(/*! ./typeof.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nvar assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\");\nfunction _possibleConstructorReturn(t, e) {\n  if (e && (\"object\" == _typeof(e) || \"function\" == typeof e)) return e;\n  if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n  return assertThisInitialized(t);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanMiLCJtYXBwaW5ncyI6IkFBQUEsY0FBYywwSEFBaUM7QUFDL0MsNEJBQTRCLG1CQUFPLENBQUMsc0hBQTRCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMseUJBQXlCLFNBQVMseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanM/OTUzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX3R5cGVvZiA9IHJlcXVpcmUoXCIuL3R5cGVvZi5qc1wiKVtcImRlZmF1bHRcIl07XG52YXIgYXNzZXJ0VGhpc0luaXRpYWxpemVkID0gcmVxdWlyZShcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkLmpzXCIpO1xuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odCwgZSkge1xuICBpZiAoZSAmJiAoXCJvYmplY3RcIiA9PSBfdHlwZW9mKGUpIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgZSkpIHJldHVybiBlO1xuICBpZiAodm9pZCAwICE9PSBlKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7XG4gIHJldHVybiBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQodCk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var _typeof = (__webpack_require__(/*! ./typeof.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("function _setPrototypeOf(t, e) {\n  return (module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _setPrototypeOf(t, e);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3NldFByb3RvdHlwZU9mLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBLEdBQUcsRUFBRSx5QkFBeUIsU0FBUyx5QkFBeUI7QUFDaEU7QUFDQSxrQ0FBa0MseUJBQXlCLFNBQVMseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3NldFByb3RvdHlwZU9mLmpzPzZmYWMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKHQsIGUpIHtcbiAgcmV0dXJuIChtb2R1bGUuZXhwb3J0cyA9IF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5zZXRQcm90b3R5cGVPZi5iaW5kKCkgOiBmdW5jdGlvbiAodCwgZSkge1xuICAgIHJldHVybiB0Ll9fcHJvdG9fXyA9IGUsIHQ7XG4gIH0sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0cyksIF9zZXRQcm90b3R5cGVPZih0LCBlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/toPrimitive.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var _typeof = (__webpack_require__(/*! ./typeof.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvUHJpbWl0aXZlLmpzIiwibWFwcGluZ3MiOiJBQUFBLGNBQWMsMEhBQWlDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlCQUF5QixTQUFTLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b1ByaW1pdGl2ZS5qcz83N2U3Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfdHlwZW9mID0gcmVxdWlyZShcIi4vdHlwZW9mLmpzXCIpW1wiZGVmYXVsdFwiXTtcbmZ1bmN0aW9uIHRvUHJpbWl0aXZlKHQsIHIpIHtcbiAgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZih0KSB8fCAhdCkgcmV0dXJuIHQ7XG4gIHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdO1xuICBpZiAodm9pZCAwICE9PSBlKSB7XG4gICAgdmFyIGkgPSBlLmNhbGwodCwgciB8fCBcImRlZmF1bHRcIik7XG4gICAgaWYgKFwib2JqZWN0XCIgIT0gX3R5cGVvZihpKSkgcmV0dXJuIGk7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpO1xuICB9XG4gIHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IHRvUHJpbWl0aXZlLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/toPrimitive.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/toPropertyKey.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var _typeof = (__webpack_require__(/*! ./typeof.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nvar toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvUHJvcGVydHlLZXkuanMiLCJtYXBwaW5ncyI6IkFBQUEsY0FBYywwSEFBaUM7QUFDL0Msa0JBQWtCLG1CQUFPLENBQUMsa0dBQWtCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHlCQUF5QixTQUFTLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b1Byb3BlcnR5S2V5LmpzP2E2MDUiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF90eXBlb2YgPSByZXF1aXJlKFwiLi90eXBlb2YuanNcIilbXCJkZWZhdWx0XCJdO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZShcIi4vdG9QcmltaXRpdmUuanNcIik7XG5mdW5jdGlvbiB0b1Byb3BlcnR5S2V5KHQpIHtcbiAgdmFyIGkgPSB0b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTtcbiAgcmV0dXJuIFwic3ltYm9sXCIgPT0gX3R5cGVvZihpKSA/IGkgOiBpICsgXCJcIjtcbn1cbm1vZHVsZS5leHBvcnRzID0gdG9Qcm9wZXJ0eUtleSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3R5cGVvZi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxHQUFHLEVBQUUseUJBQXlCLFNBQVMseUJBQXlCO0FBQ2hFO0FBQ0EsMEJBQTBCLHlCQUF5QixTQUFTLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/YmE3MiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG8pIHtcbiAgXCJAYmFiZWwvaGVscGVycyAtIHR5cGVvZlwiO1xuXG4gIHJldHVybiAobW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgXCJzeW1ib2xcIiA9PSB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID8gZnVuY3Rpb24gKG8pIHtcbiAgICByZXR1cm4gdHlwZW9mIG87XG4gIH0gOiBmdW5jdGlvbiAobykge1xuICAgIHJldHVybiBvICYmIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgU3ltYm9sICYmIG8uY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvO1xuICB9LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHMpLCBfdHlwZW9mKG8pO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/helpers/typeof.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(/*! ../helpers/regeneratorRuntime */ \"(app-pages-browser)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxjQUFjLG1CQUFPLENBQUMsc0hBQStCO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanM/MjIzNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPKEJhYmVsIDgpOiBSZW1vdmUgdGhpcyBmaWxlLlxuXG52YXIgcnVudGltZSA9IHJlcXVpcmUoXCIuLi9oZWxwZXJzL3JlZ2VuZXJhdG9yUnVudGltZVwiKSgpO1xubW9kdWxlLmV4cG9ydHMgPSBydW50aW1lO1xuXG4vLyBDb3BpZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvYmxvYi9tYWluL3BhY2thZ2VzL3J1bnRpbWUvcnVudGltZS5qcyNMNzM2PVxudHJ5IHtcbiAgcmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbn0gY2F0Y2ggKGFjY2lkZW50YWxTdHJpY3RNb2RlKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gXCJvYmplY3RcIikge1xuICAgIGdsb2JhbFRoaXMucmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbiAgfSBlbHNlIHtcbiAgICBGdW5jdGlvbihcInJcIiwgXCJyZWdlbmVyYXRvclJ1bnRpbWUgPSByXCIpKHJ1bnRpbWUpO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@babel/runtime/regenerator/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGdCQUFnQjs7QUFFaEI7QUFDQTs7QUFFQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxLQUFLLEtBQTZCO0FBQ2xDO0FBQ0E7QUFDQSxHQUFHLFNBQVMsSUFBNEU7QUFDeEY7QUFDQSxFQUFFLGlDQUFxQixFQUFFLG1DQUFFO0FBQzNCO0FBQ0EsR0FBRztBQUFBLGtHQUFDO0FBQ0osR0FBRyxLQUFLLEVBRU47QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzPzkyYWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXG5cdGZ1bmN0aW9uIGNsYXNzTmFtZXMgKCkge1xuXHRcdHZhciBjbGFzc2VzID0gJyc7XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmIChhcmcpIHtcblx0XHRcdFx0Y2xhc3NlcyA9IGFwcGVuZENsYXNzKGNsYXNzZXMsIHBhcnNlVmFsdWUoYXJnKSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXM7XG5cdH1cblxuXHRmdW5jdGlvbiBwYXJzZVZhbHVlIChhcmcpIHtcblx0XHRpZiAodHlwZW9mIGFyZyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicpIHtcblx0XHRcdHJldHVybiBhcmc7XG5cdFx0fVxuXG5cdFx0aWYgKHR5cGVvZiBhcmcgIT09ICdvYmplY3QnKSB7XG5cdFx0XHRyZXR1cm4gJyc7XG5cdFx0fVxuXG5cdFx0aWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHR9XG5cblx0XHRpZiAoYXJnLnRvU3RyaW5nICE9PSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nICYmICFhcmcudG9TdHJpbmcudG9TdHJpbmcoKS5pbmNsdWRlcygnW25hdGl2ZSBjb2RlXScpKSB7XG5cdFx0XHRyZXR1cm4gYXJnLnRvU3RyaW5nKCk7XG5cdFx0fVxuXG5cdFx0dmFyIGNsYXNzZXMgPSAnJztcblxuXHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0Y2xhc3NlcyA9IGFwcGVuZENsYXNzKGNsYXNzZXMsIGtleSk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXM7XG5cdH1cblxuXHRmdW5jdGlvbiBhcHBlbmRDbGFzcyAodmFsdWUsIG5ld0NsYXNzKSB7XG5cdFx0aWYgKCFuZXdDbGFzcykge1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblx0XG5cdFx0aWYgKHZhbHVlKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgKyAnICcgKyBuZXdDbGFzcztcblx0XHR9XG5cdFxuXHRcdHJldHVybiB2YWx1ZSArIG5ld0NsYXNzO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0Y2xhc3NOYW1lcy5kZWZhdWx0ID0gY2xhc3NOYW1lcztcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XG5cdH0gZWxzZSBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZGVmaW5lLmFtZCA9PT0gJ29iamVjdCcgJiYgZGVmaW5lLmFtZCkge1xuXHRcdC8vIHJlZ2lzdGVyIGFzICdjbGFzc25hbWVzJywgY29uc2lzdGVudCB3aXRoIG5wbSBwYWNrYWdlIG5hbWVcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xuXHRcdFx0cmV0dXJuIGNsYXNzTmFtZXM7XG5cdFx0fSk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmNsYXNzTmFtZXMgPSBjbGFzc05hbWVzO1xuXHR9XG59KCkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/classnames/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-icons/ci/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/react-icons/ci/index.mjs ***!
  \***********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CiAirportSign1: function() { return /* binding */ CiAirportSign1; },\n/* harmony export */   CiAlarmOff: function() { return /* binding */ CiAlarmOff; },\n/* harmony export */   CiAlarmOn: function() { return /* binding */ CiAlarmOn; },\n/* harmony export */   CiAlignBottom: function() { return /* binding */ CiAlignBottom; },\n/* harmony export */   CiAlignCenterH: function() { return /* binding */ CiAlignCenterH; },\n/* harmony export */   CiAlignCenterV: function() { return /* binding */ CiAlignCenterV; },\n/* harmony export */   CiAlignLeft: function() { return /* binding */ CiAlignLeft; },\n/* harmony export */   CiAlignRight: function() { return /* binding */ CiAlignRight; },\n/* harmony export */   CiAlignTop: function() { return /* binding */ CiAlignTop; },\n/* harmony export */   CiApple: function() { return /* binding */ CiApple; },\n/* harmony export */   CiAt: function() { return /* binding */ CiAt; },\n/* harmony export */   CiAvocado: function() { return /* binding */ CiAvocado; },\n/* harmony export */   CiBacon: function() { return /* binding */ CiBacon; },\n/* harmony export */   CiBadgeDollar: function() { return /* binding */ CiBadgeDollar; },\n/* harmony export */   CiBag1: function() { return /* binding */ CiBag1; },\n/* harmony export */   CiBandage: function() { return /* binding */ CiBandage; },\n/* harmony export */   CiBank: function() { return /* binding */ CiBank; },\n/* harmony export */   CiBarcode: function() { return /* binding */ CiBarcode; },\n/* harmony export */   CiBaseball: function() { return /* binding */ CiBaseball; },\n/* harmony export */   CiBasketball: function() { return /* binding */ CiBasketball; },\n/* harmony export */   CiBatteryCharging: function() { return /* binding */ CiBatteryCharging; },\n/* harmony export */   CiBatteryEmpty: function() { return /* binding */ CiBatteryEmpty; },\n/* harmony export */   CiBatteryFull: function() { return /* binding */ CiBatteryFull; },\n/* harmony export */   CiBeaker1: function() { return /* binding */ CiBeaker1; },\n/* harmony export */   CiBeerMugFull: function() { return /* binding */ CiBeerMugFull; },\n/* harmony export */   CiBellOff: function() { return /* binding */ CiBellOff; },\n/* harmony export */   CiBellOn: function() { return /* binding */ CiBellOn; },\n/* harmony export */   CiBezier: function() { return /* binding */ CiBezier; },\n/* harmony export */   CiBitcoin: function() { return /* binding */ CiBitcoin; },\n/* harmony export */   CiBluetooth: function() { return /* binding */ CiBluetooth; },\n/* harmony export */   CiBookmark: function() { return /* binding */ CiBookmark; },\n/* harmony export */   CiBookmarkCheck: function() { return /* binding */ CiBookmarkCheck; },\n/* harmony export */   CiBookmarkMinus: function() { return /* binding */ CiBookmarkMinus; },\n/* harmony export */   CiBookmarkPlus: function() { return /* binding */ CiBookmarkPlus; },\n/* harmony export */   CiBookmarkRemove: function() { return /* binding */ CiBookmarkRemove; },\n/* harmony export */   CiBowlNoodles: function() { return /* binding */ CiBowlNoodles; },\n/* harmony export */   CiBoxList: function() { return /* binding */ CiBoxList; },\n/* harmony export */   CiBoxes: function() { return /* binding */ CiBoxes; },\n/* harmony export */   CiBrightnessDown: function() { return /* binding */ CiBrightnessDown; },\n/* harmony export */   CiBrightnessUp: function() { return /* binding */ CiBrightnessUp; },\n/* harmony export */   CiBullhorn: function() { return /* binding */ CiBullhorn; },\n/* harmony export */   CiBurger: function() { return /* binding */ CiBurger; },\n/* harmony export */   CiCalculator1: function() { return /* binding */ CiCalculator1; },\n/* harmony export */   CiCalculator2: function() { return /* binding */ CiCalculator2; },\n/* harmony export */   CiCalendar: function() { return /* binding */ CiCalendar; },\n/* harmony export */   CiCalendarDate: function() { return /* binding */ CiCalendarDate; },\n/* harmony export */   CiCamera: function() { return /* binding */ CiCamera; },\n/* harmony export */   CiChat1: function() { return /* binding */ CiChat1; },\n/* harmony export */   CiChat2: function() { return /* binding */ CiChat2; },\n/* harmony export */   CiCircleAlert: function() { return /* binding */ CiCircleAlert; },\n/* harmony export */   CiCircleCheck: function() { return /* binding */ CiCircleCheck; },\n/* harmony export */   CiCircleChevDown: function() { return /* binding */ CiCircleChevDown; },\n/* harmony export */   CiCircleChevLeft: function() { return /* binding */ CiCircleChevLeft; },\n/* harmony export */   CiCircleChevRight: function() { return /* binding */ CiCircleChevRight; },\n/* harmony export */   CiCircleChevUp: function() { return /* binding */ CiCircleChevUp; },\n/* harmony export */   CiCircleInfo: function() { return /* binding */ CiCircleInfo; },\n/* harmony export */   CiCircleList: function() { return /* binding */ CiCircleList; },\n/* harmony export */   CiCircleMinus: function() { return /* binding */ CiCircleMinus; },\n/* harmony export */   CiCircleMore: function() { return /* binding */ CiCircleMore; },\n/* harmony export */   CiCirclePlus: function() { return /* binding */ CiCirclePlus; },\n/* harmony export */   CiCircleQuestion: function() { return /* binding */ CiCircleQuestion; },\n/* harmony export */   CiCircleRemove: function() { return /* binding */ CiCircleRemove; },\n/* harmony export */   CiClock1: function() { return /* binding */ CiClock1; },\n/* harmony export */   CiClock2: function() { return /* binding */ CiClock2; },\n/* harmony export */   CiCloud: function() { return /* binding */ CiCloud; },\n/* harmony export */   CiCloudDrizzle: function() { return /* binding */ CiCloudDrizzle; },\n/* harmony export */   CiCloudMoon: function() { return /* binding */ CiCloudMoon; },\n/* harmony export */   CiCloudOff: function() { return /* binding */ CiCloudOff; },\n/* harmony export */   CiCloudOn: function() { return /* binding */ CiCloudOn; },\n/* harmony export */   CiCloudRainbow: function() { return /* binding */ CiCloudRainbow; },\n/* harmony export */   CiCloudSun: function() { return /* binding */ CiCloudSun; },\n/* harmony export */   CiCoffeeBean: function() { return /* binding */ CiCoffeeBean; },\n/* harmony export */   CiCoffeeCup: function() { return /* binding */ CiCoffeeCup; },\n/* harmony export */   CiCoinInsert: function() { return /* binding */ CiCoinInsert; },\n/* harmony export */   CiCoins1: function() { return /* binding */ CiCoins1; },\n/* harmony export */   CiCompass1: function() { return /* binding */ CiCompass1; },\n/* harmony export */   CiCreditCard1: function() { return /* binding */ CiCreditCard1; },\n/* harmony export */   CiCreditCard2: function() { return /* binding */ CiCreditCard2; },\n/* harmony export */   CiCreditCardOff: function() { return /* binding */ CiCreditCardOff; },\n/* harmony export */   CiCrop: function() { return /* binding */ CiCrop; },\n/* harmony export */   CiDark: function() { return /* binding */ CiDark; },\n/* harmony export */   CiDatabase: function() { return /* binding */ CiDatabase; },\n/* harmony export */   CiDeliveryTruck: function() { return /* binding */ CiDeliveryTruck; },\n/* harmony export */   CiDesktop: function() { return /* binding */ CiDesktop; },\n/* harmony export */   CiDesktopMouse1: function() { return /* binding */ CiDesktopMouse1; },\n/* harmony export */   CiDesktopMouse2: function() { return /* binding */ CiDesktopMouse2; },\n/* harmony export */   CiDiscount1: function() { return /* binding */ CiDiscount1; },\n/* harmony export */   CiDollar: function() { return /* binding */ CiDollar; },\n/* harmony export */   CiDroplet: function() { return /* binding */ CiDroplet; },\n/* harmony export */   CiDumbbell: function() { return /* binding */ CiDumbbell; },\n/* harmony export */   CiEdit: function() { return /* binding */ CiEdit; },\n/* harmony export */   CiEraser: function() { return /* binding */ CiEraser; },\n/* harmony export */   CiExport: function() { return /* binding */ CiExport; },\n/* harmony export */   CiFaceFrown: function() { return /* binding */ CiFaceFrown; },\n/* harmony export */   CiFaceMeh: function() { return /* binding */ CiFaceMeh; },\n/* harmony export */   CiFaceSmile: function() { return /* binding */ CiFaceSmile; },\n/* harmony export */   CiFacebook: function() { return /* binding */ CiFacebook; },\n/* harmony export */   CiFileOff: function() { return /* binding */ CiFileOff; },\n/* harmony export */   CiFileOn: function() { return /* binding */ CiFileOn; },\n/* harmony export */   CiFilter: function() { return /* binding */ CiFilter; },\n/* harmony export */   CiFlag1: function() { return /* binding */ CiFlag1; },\n/* harmony export */   CiFloppyDisk: function() { return /* binding */ CiFloppyDisk; },\n/* harmony export */   CiFolderOff: function() { return /* binding */ CiFolderOff; },\n/* harmony export */   CiFolderOn: function() { return /* binding */ CiFolderOn; },\n/* harmony export */   CiFootball: function() { return /* binding */ CiFootball; },\n/* harmony export */   CiForkAndKnife: function() { return /* binding */ CiForkAndKnife; },\n/* harmony export */   CiFries: function() { return /* binding */ CiFries; },\n/* harmony export */   CiGift: function() { return /* binding */ CiGift; },\n/* harmony export */   CiGlass: function() { return /* binding */ CiGlass; },\n/* harmony export */   CiGlobe: function() { return /* binding */ CiGlobe; },\n/* harmony export */   CiGps: function() { return /* binding */ CiGps; },\n/* harmony export */   CiGrid2H: function() { return /* binding */ CiGrid2H; },\n/* harmony export */   CiGrid2V: function() { return /* binding */ CiGrid2V; },\n/* harmony export */   CiGrid31: function() { return /* binding */ CiGrid31; },\n/* harmony export */   CiGrid32: function() { return /* binding */ CiGrid32; },\n/* harmony export */   CiGrid41: function() { return /* binding */ CiGrid41; },\n/* harmony export */   CiGrid42: function() { return /* binding */ CiGrid42; },\n/* harmony export */   CiHardDrive: function() { return /* binding */ CiHardDrive; },\n/* harmony export */   CiHashtag: function() { return /* binding */ CiHashtag; },\n/* harmony export */   CiHeadphones: function() { return /* binding */ CiHeadphones; },\n/* harmony export */   CiHeart: function() { return /* binding */ CiHeart; },\n/* harmony export */   CiHome: function() { return /* binding */ CiHome; },\n/* harmony export */   CiHospital1: function() { return /* binding */ CiHospital1; },\n/* harmony export */   CiHotdog: function() { return /* binding */ CiHotdog; },\n/* harmony export */   CiIceCream: function() { return /* binding */ CiIceCream; },\n/* harmony export */   CiImageOff: function() { return /* binding */ CiImageOff; },\n/* harmony export */   CiImageOn: function() { return /* binding */ CiImageOn; },\n/* harmony export */   CiImport: function() { return /* binding */ CiImport; },\n/* harmony export */   CiInboxIn: function() { return /* binding */ CiInboxIn; },\n/* harmony export */   CiInboxOut: function() { return /* binding */ CiInboxOut; },\n/* harmony export */   CiIndent: function() { return /* binding */ CiIndent; },\n/* harmony export */   CiInstagram: function() { return /* binding */ CiInstagram; },\n/* harmony export */   CiKeyboard: function() { return /* binding */ CiKeyboard; },\n/* harmony export */   CiLaptop: function() { return /* binding */ CiLaptop; },\n/* harmony export */   CiLemon: function() { return /* binding */ CiLemon; },\n/* harmony export */   CiLight: function() { return /* binding */ CiLight; },\n/* harmony export */   CiLineHeight: function() { return /* binding */ CiLineHeight; },\n/* harmony export */   CiLink: function() { return /* binding */ CiLink; },\n/* harmony export */   CiLinkedin: function() { return /* binding */ CiLinkedin; },\n/* harmony export */   CiLocationArrow1: function() { return /* binding */ CiLocationArrow1; },\n/* harmony export */   CiLocationOff: function() { return /* binding */ CiLocationOff; },\n/* harmony export */   CiLocationOn: function() { return /* binding */ CiLocationOn; },\n/* harmony export */   CiLock: function() { return /* binding */ CiLock; },\n/* harmony export */   CiLogin: function() { return /* binding */ CiLogin; },\n/* harmony export */   CiLogout: function() { return /* binding */ CiLogout; },\n/* harmony export */   CiLollipop: function() { return /* binding */ CiLollipop; },\n/* harmony export */   CiMail: function() { return /* binding */ CiMail; },\n/* harmony export */   CiMap: function() { return /* binding */ CiMap; },\n/* harmony export */   CiMapPin: function() { return /* binding */ CiMapPin; },\n/* harmony export */   CiMaximize1: function() { return /* binding */ CiMaximize1; },\n/* harmony export */   CiMaximize2: function() { return /* binding */ CiMaximize2; },\n/* harmony export */   CiMedal: function() { return /* binding */ CiMedal; },\n/* harmony export */   CiMedicalCase: function() { return /* binding */ CiMedicalCase; },\n/* harmony export */   CiMedicalClipboard: function() { return /* binding */ CiMedicalClipboard; },\n/* harmony export */   CiMedicalCross: function() { return /* binding */ CiMedicalCross; },\n/* harmony export */   CiMedicalMask: function() { return /* binding */ CiMedicalMask; },\n/* harmony export */   CiMemoPad: function() { return /* binding */ CiMemoPad; },\n/* harmony export */   CiMenuBurger: function() { return /* binding */ CiMenuBurger; },\n/* harmony export */   CiMenuFries: function() { return /* binding */ CiMenuFries; },\n/* harmony export */   CiMenuKebab: function() { return /* binding */ CiMenuKebab; },\n/* harmony export */   CiMicrochip: function() { return /* binding */ CiMicrochip; },\n/* harmony export */   CiMicrophoneOff: function() { return /* binding */ CiMicrophoneOff; },\n/* harmony export */   CiMicrophoneOn: function() { return /* binding */ CiMicrophoneOn; },\n/* harmony export */   CiMinimize1: function() { return /* binding */ CiMinimize1; },\n/* harmony export */   CiMinimize2: function() { return /* binding */ CiMinimize2; },\n/* harmony export */   CiMobile1: function() { return /* binding */ CiMobile1; },\n/* harmony export */   CiMobile2: function() { return /* binding */ CiMobile2; },\n/* harmony export */   CiMobile3: function() { return /* binding */ CiMobile3; },\n/* harmony export */   CiMobile4: function() { return /* binding */ CiMobile4; },\n/* harmony export */   CiMoneyBill: function() { return /* binding */ CiMoneyBill; },\n/* harmony export */   CiMoneyCheck1: function() { return /* binding */ CiMoneyCheck1; },\n/* harmony export */   CiMonitor: function() { return /* binding */ CiMonitor; },\n/* harmony export */   CiMountain1: function() { return /* binding */ CiMountain1; },\n/* harmony export */   CiMug1: function() { return /* binding */ CiMug1; },\n/* harmony export */   CiMusicNote1: function() { return /* binding */ CiMusicNote1; },\n/* harmony export */   CiNoWaitingSign: function() { return /* binding */ CiNoWaitingSign; },\n/* harmony export */   CiPalette: function() { return /* binding */ CiPalette; },\n/* harmony export */   CiPaperplane: function() { return /* binding */ CiPaperplane; },\n/* harmony export */   CiParking1: function() { return /* binding */ CiParking1; },\n/* harmony export */   CiPassport1: function() { return /* binding */ CiPassport1; },\n/* harmony export */   CiPause1: function() { return /* binding */ CiPause1; },\n/* harmony export */   CiPen: function() { return /* binding */ CiPen; },\n/* harmony export */   CiPenpot: function() { return /* binding */ CiPenpot; },\n/* harmony export */   CiPercent: function() { return /* binding */ CiPercent; },\n/* harmony export */   CiPhone: function() { return /* binding */ CiPhone; },\n/* harmony export */   CiPickerEmpty: function() { return /* binding */ CiPickerEmpty; },\n/* harmony export */   CiPickerHalf: function() { return /* binding */ CiPickerHalf; },\n/* harmony export */   CiPill: function() { return /* binding */ CiPill; },\n/* harmony export */   CiPillsBottle1: function() { return /* binding */ CiPillsBottle1; },\n/* harmony export */   CiPizza: function() { return /* binding */ CiPizza; },\n/* harmony export */   CiPlane: function() { return /* binding */ CiPlane; },\n/* harmony export */   CiPlay1: function() { return /* binding */ CiPlay1; },\n/* harmony export */   CiPlug1: function() { return /* binding */ CiPlug1; },\n/* harmony export */   CiPower: function() { return /* binding */ CiPower; },\n/* harmony export */   CiRainbow: function() { return /* binding */ CiRainbow; },\n/* harmony export */   CiRead: function() { return /* binding */ CiRead; },\n/* harmony export */   CiReceipt: function() { return /* binding */ CiReceipt; },\n/* harmony export */   CiRedo: function() { return /* binding */ CiRedo; },\n/* harmony export */   CiRepeat: function() { return /* binding */ CiRepeat; },\n/* harmony export */   CiRollingSuitcase: function() { return /* binding */ CiRollingSuitcase; },\n/* harmony export */   CiRoute: function() { return /* binding */ CiRoute; },\n/* harmony export */   CiRouter: function() { return /* binding */ CiRouter; },\n/* harmony export */   CiRuler: function() { return /* binding */ CiRuler; },\n/* harmony export */   CiSatellite1: function() { return /* binding */ CiSatellite1; },\n/* harmony export */   CiSaveDown1: function() { return /* binding */ CiSaveDown1; },\n/* harmony export */   CiSaveDown2: function() { return /* binding */ CiSaveDown2; },\n/* harmony export */   CiSaveUp1: function() { return /* binding */ CiSaveUp1; },\n/* harmony export */   CiSaveUp2: function() { return /* binding */ CiSaveUp2; },\n/* harmony export */   CiSearch: function() { return /* binding */ CiSearch; },\n/* harmony export */   CiServer: function() { return /* binding */ CiServer; },\n/* harmony export */   CiSettings: function() { return /* binding */ CiSettings; },\n/* harmony export */   CiShare1: function() { return /* binding */ CiShare1; },\n/* harmony export */   CiShare2: function() { return /* binding */ CiShare2; },\n/* harmony export */   CiShirt: function() { return /* binding */ CiShirt; },\n/* harmony export */   CiShop: function() { return /* binding */ CiShop; },\n/* harmony export */   CiShoppingBasket: function() { return /* binding */ CiShoppingBasket; },\n/* harmony export */   CiShoppingCart: function() { return /* binding */ CiShoppingCart; },\n/* harmony export */   CiShoppingTag: function() { return /* binding */ CiShoppingTag; },\n/* harmony export */   CiShuffle: function() { return /* binding */ CiShuffle; },\n/* harmony export */   CiSignpostDuo1: function() { return /* binding */ CiSignpostDuo1; },\n/* harmony export */   CiSignpostL1: function() { return /* binding */ CiSignpostL1; },\n/* harmony export */   CiSignpostR1: function() { return /* binding */ CiSignpostR1; },\n/* harmony export */   CiSliderHorizontal: function() { return /* binding */ CiSliderHorizontal; },\n/* harmony export */   CiSliderVertical: function() { return /* binding */ CiSliderVertical; },\n/* harmony export */   CiSpeaker: function() { return /* binding */ CiSpeaker; },\n/* harmony export */   CiSquareAlert: function() { return /* binding */ CiSquareAlert; },\n/* harmony export */   CiSquareCheck: function() { return /* binding */ CiSquareCheck; },\n/* harmony export */   CiSquareChevDown: function() { return /* binding */ CiSquareChevDown; },\n/* harmony export */   CiSquareChevLeft: function() { return /* binding */ CiSquareChevLeft; },\n/* harmony export */   CiSquareChevRight: function() { return /* binding */ CiSquareChevRight; },\n/* harmony export */   CiSquareChevUp: function() { return /* binding */ CiSquareChevUp; },\n/* harmony export */   CiSquareInfo: function() { return /* binding */ CiSquareInfo; },\n/* harmony export */   CiSquareMinus: function() { return /* binding */ CiSquareMinus; },\n/* harmony export */   CiSquareMore: function() { return /* binding */ CiSquareMore; },\n/* harmony export */   CiSquarePlus: function() { return /* binding */ CiSquarePlus; },\n/* harmony export */   CiSquareQuestion: function() { return /* binding */ CiSquareQuestion; },\n/* harmony export */   CiSquareRemove: function() { return /* binding */ CiSquareRemove; },\n/* harmony export */   CiStar: function() { return /* binding */ CiStar; },\n/* harmony export */   CiStethoscope: function() { return /* binding */ CiStethoscope; },\n/* harmony export */   CiStickyNote: function() { return /* binding */ CiStickyNote; },\n/* harmony export */   CiStop1: function() { return /* binding */ CiStop1; },\n/* harmony export */   CiStopSign1: function() { return /* binding */ CiStopSign1; },\n/* harmony export */   CiStopwatch: function() { return /* binding */ CiStopwatch; },\n/* harmony export */   CiStreamOff: function() { return /* binding */ CiStreamOff; },\n/* harmony export */   CiStreamOn: function() { return /* binding */ CiStreamOn; },\n/* harmony export */   CiSun: function() { return /* binding */ CiSun; },\n/* harmony export */   CiTablets1: function() { return /* binding */ CiTablets1; },\n/* harmony export */   CiTempHigh: function() { return /* binding */ CiTempHigh; },\n/* harmony export */   CiText: function() { return /* binding */ CiText; },\n/* harmony export */   CiTextAlignCenter: function() { return /* binding */ CiTextAlignCenter; },\n/* harmony export */   CiTextAlignJustify: function() { return /* binding */ CiTextAlignJustify; },\n/* harmony export */   CiTextAlignLeft: function() { return /* binding */ CiTextAlignLeft; },\n/* harmony export */   CiTextAlignRight: function() { return /* binding */ CiTextAlignRight; },\n/* harmony export */   CiTimer: function() { return /* binding */ CiTimer; },\n/* harmony export */   CiTrash: function() { return /* binding */ CiTrash; },\n/* harmony export */   CiTrophy: function() { return /* binding */ CiTrophy; },\n/* harmony export */   CiTurnL1: function() { return /* binding */ CiTurnL1; },\n/* harmony export */   CiTurnR1: function() { return /* binding */ CiTurnR1; },\n/* harmony export */   CiTwitter: function() { return /* binding */ CiTwitter; },\n/* harmony export */   CiUmbrella: function() { return /* binding */ CiUmbrella; },\n/* harmony export */   CiUndo: function() { return /* binding */ CiUndo; },\n/* harmony export */   CiUnlock: function() { return /* binding */ CiUnlock; },\n/* harmony export */   CiUnread: function() { return /* binding */ CiUnread; },\n/* harmony export */   CiUsb: function() { return /* binding */ CiUsb; },\n/* harmony export */   CiUser: function() { return /* binding */ CiUser; },\n/* harmony export */   CiVault: function() { return /* binding */ CiVault; },\n/* harmony export */   CiVial: function() { return /* binding */ CiVial; },\n/* harmony export */   CiVideoOff: function() { return /* binding */ CiVideoOff; },\n/* harmony export */   CiVideoOn: function() { return /* binding */ CiVideoOn; },\n/* harmony export */   CiViewBoard: function() { return /* binding */ CiViewBoard; },\n/* harmony export */   CiViewColumn: function() { return /* binding */ CiViewColumn; },\n/* harmony export */   CiViewList: function() { return /* binding */ CiViewList; },\n/* harmony export */   CiViewTable: function() { return /* binding */ CiViewTable; },\n/* harmony export */   CiViewTimeline: function() { return /* binding */ CiViewTimeline; },\n/* harmony export */   CiVirus: function() { return /* binding */ CiVirus; },\n/* harmony export */   CiVoicemail: function() { return /* binding */ CiVoicemail; },\n/* harmony export */   CiVolume: function() { return /* binding */ CiVolume; },\n/* harmony export */   CiVolumeHigh: function() { return /* binding */ CiVolumeHigh; },\n/* harmony export */   CiVolumeMute: function() { return /* binding */ CiVolumeMute; },\n/* harmony export */   CiWallet: function() { return /* binding */ CiWallet; },\n/* harmony export */   CiWarning: function() { return /* binding */ CiWarning; },\n/* harmony export */   CiWavePulse1: function() { return /* binding */ CiWavePulse1; },\n/* harmony export */   CiWheat: function() { return /* binding */ CiWheat; },\n/* harmony export */   CiWifiOff: function() { return /* binding */ CiWifiOff; },\n/* harmony export */   CiWifiOn: function() { return /* binding */ CiWifiOn; },\n/* harmony export */   CiYoutube: function() { return /* binding */ CiYoutube; },\n/* harmony export */   CiZoomIn: function() { return /* binding */ CiZoomIn; },\n/* harmony export */   CiZoomOut: function() { return /* binding */ CiZoomOut; }\n/* harmony export */ });\n/* harmony import */ var _lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/index.mjs */ \"(app-pages-browser)/./node_modules/react-icons/lib/index.mjs\");\n// THIS FILE IS AUTO GENERATED\n\nfunction CiAirportSign1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Airport_Sign_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.105,12.609v2.279a.119.119,0,0,0,.061.105l.622.355a.49.49,0,0,1,.242.365l.049.413a.243.243,0,0,1-.307.263l-1.641-.459a.486.486,0,0,0-.262,0l-1.641.459a.244.244,0,0,1-.308-.263l.05-.413a.487.487,0,0,1,.242-.365l.621-.355a.12.12,0,0,0,.062-.105V12.609a.122.122,0,0,0-.137-.121l-3.485.435A.242.242,0,0,1,7,12.682v-.624a.486.486,0,0,1,.316-.455l3.5-1.313a.122.122,0,0,0,.079-.114V9.435a4.756,4.756,0,0,1,.1-.981h0a1.015,1.015,0,0,1,1.2-.833,1.063,1.063,0,0,1,.819.9l.015.094a6.3,6.3,0,0,1,.077.976v.587a.121.121,0,0,0,.079.114l3.5,1.313a.486.486,0,0,1,.316.455v.624a.243.243,0,0,1-.274.241l-3.484-.435A.121.121,0,0,0,13.105,12.609Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.933A9.933,9.933,0,1,1,21.933,12,9.944,9.944,0,0,1,12,21.933ZM12,3.067A8.933,8.933,0,1,0,20.933,12,8.943,8.943,0,0,0,12,3.067Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiAlarmOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Alarm_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4.564,3.856a.5.5,0,0,0-.7.71l.29.29-.5.5a2.019,2.019,0,0,0-.01,2.85l.65.67a8.273,8.273,0,0,0-.71,3.39A8.427,8.427,0,0,0,12,20.686a8.275,8.275,0,0,0,5.72-2.26c.57.57,1.14,1.15,1.71,1.71a.5.5,0,0,0,.71-.7Zm-.21,2.21.51-.5c.32.33.65.65.98.98a6.38,6.38,0,0,0-1.06,1.4l-.43-.44A1.032,1.032,0,0,1,4.354,6.066ZM12,19.686a7.43,7.43,0,0,1-7.42-7.42,7.312,7.312,0,0,1,1.96-5.02l2.59,2.59q3.945,3.945,7.88,7.88A7.27,7.27,0,0,1,12,19.686Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.354,8.216a2.04,2.04,0,0,0,0-2.86l-1.46-1.45a2.01,2.01,0,0,0-2.85,0l-.68.67a8.528,8.528,0,0,0-6.38-.17c-.6.23-.34,1.19.27.97a7.419,7.419,0,0,1,9.64,9.64c-.22.6.74.86.97.26a8.506,8.506,0,0,0-.17-6.39Zm-2.4-1.9a8.068,8.068,0,0,0-1.65-1.27l.44-.43a1.026,1.026,0,0,1,1.45,0l1.45,1.45a1.014,1.014,0,0,1,0,1.44l-.43.44A8.262,8.262,0,0,0,17.954,6.316Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiAlarmOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Alarm_On\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.352,8.213a2.017,2.017,0,0,0,0-2.851L18.9,3.9a2.038,2.038,0,0,0-2.86,0l-.67.659A8.238,8.238,0,0,0,12,3.852a8.332,8.332,0,0,0-3.39.71L7.962,3.9a2.038,2.038,0,0,0-2.86,0L3.652,5.362a2.02,2.02,0,0,0-.01,2.851l.65.67a8.419,8.419,0,1,0,16.13,3.39,8.4,8.4,0,0,0-.72-3.411ZM4.362,6.062l1.45-1.45a1.016,1.016,0,0,1,1.44,0l.44.43a8.427,8.427,0,0,0-2.91,2.9l-.42-.43A1.027,1.027,0,0,1,4.362,6.062ZM12,19.682a7.415,7.415,0,1,1,7.42-7.409A7.421,7.421,0,0,1,12,19.682Zm7.22-11.75a8.578,8.578,0,0,0-2.91-2.89l.44-.43a1.016,1.016,0,0,1,1.44,0l1.45,1.45a1.027,1.027,0,0,1,0,1.451Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.042,12.763H12a.455.455,0,0,1-.27-.081c-.03-.02-.05-.039-.07-.049a.442.442,0,0,1-.16-.36V7.232a.5.5,0,0,1,1,0v4.531h4.54A.5.5,0,0,1,17.042,12.763Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiAlignBottom (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Align_Bottom\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.548,20.922h16.9a.5.5,0,0,0,0-1H3.548a.5.5,0,0,0,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9,18.919H6.565a2.5,2.5,0,0,1-2.5-2.5V5.578a2.5,2.5,0,0,1,2.5-2.5H9a2.5,2.5,0,0,1,2.5,2.5V16.419A2.5,2.5,0,0,1,9,18.919ZM6.565,4.078a1.5,1.5,0,0,0-1.5,1.5V16.419a1.5,1.5,0,0,0,1.5,1.5H9a1.5,1.5,0,0,0,1.5-1.5V5.578A1.5,1.5,0,0,0,9,4.078Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.437,18.919H15a2.5,2.5,0,0,1-2.5-2.5V10.55A2.5,2.5,0,0,1,15,8.05h2.434a2.5,2.5,0,0,1,2.5,2.5v5.869A2.5,2.5,0,0,1,17.437,18.919ZM15,9.05a1.5,1.5,0,0,0-1.5,1.5v5.869a1.5,1.5,0,0,0,1.5,1.5h2.434a1.5,1.5,0,0,0,1.5-1.5V10.55a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiAlignCenterH (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Align_Center-H\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.42,4.062H12.5v-.51a.5.5,0,0,0-1,0v.51H6.58a2.507,2.507,0,0,0-2.5,2.5V9a2.5,2.5,0,0,0,2.5,2.5H11.5v1H9.06A2.507,2.507,0,0,0,6.56,15v2.44a2.507,2.507,0,0,0,2.5,2.5H11.5v.51a.5.5,0,0,0,1,0v-.51h2.43a2.5,2.5,0,0,0,2.5-2.5V15a2.5,2.5,0,0,0-2.5-2.5H12.5v-1h4.92A2.5,2.5,0,0,0,19.92,9V6.562A2.507,2.507,0,0,0,17.42,4.062ZM11.5,18.942H9.06a1.511,1.511,0,0,1-1.5-1.5V15a1.5,1.5,0,0,1,1.5-1.5H11.5Zm0-8.44H6.58A1.5,1.5,0,0,1,5.08,9V6.562a1.5,1.5,0,0,1,1.5-1.5H11.5Zm3.43,3a1.5,1.5,0,0,1,1.5,1.5v2.44a1.5,1.5,0,0,1-1.5,1.5H12.5V13.5ZM18.92,9a1.5,1.5,0,0,1-1.5,1.5H12.5V5.062h4.92a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiAlignCenterV (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Align_Center-V\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.446,11.5h-.51V9.07a2.5,2.5,0,0,0-2.5-2.5h-2.43a2.5,2.5,0,0,0-2.5,2.5V11.5H11.5V6.58A2.5,2.5,0,0,0,9,4.08H6.566a2.5,2.5,0,0,0-2.5,2.5V11.5h-.52a.5.5,0,0,0,0,1h.52v4.92a2.5,2.5,0,0,0,2.5,2.5H9a2.5,2.5,0,0,0,2.5-2.5V12.5h1.01v2.43a2.5,2.5,0,0,0,2.5,2.5h2.43a2.5,2.5,0,0,0,2.5-2.5V12.5h.51A.5.5,0,0,0,20.446,11.5ZM10.5,17.42A1.5,1.5,0,0,1,9,18.92H6.566a1.5,1.5,0,0,1-1.5-1.5V12.5H10.5Zm0-5.92H5.066V6.58a1.5,1.5,0,0,1,1.5-1.5H9a1.5,1.5,0,0,1,1.5,1.5Zm8.44,3.43a1.5,1.5,0,0,1-1.5,1.5h-2.43a1.5,1.5,0,0,1-1.5-1.5V12.5h5.43Zm0-3.43h-5.43V9.07a1.5,1.5,0,0,1,1.5-1.5h2.43a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiAlignLeft (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Align_Left\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.078,3.548v16.9a.5.5,0,0,0,1,0V3.548a.5.5,0,0,0-1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.422,11.5H7.582A2.5,2.5,0,0,1,5.082,9V6.565a2.5,2.5,0,0,1,2.5-2.5h10.84a2.5,2.5,0,0,1,2.5,2.5V9A2.5,2.5,0,0,1,18.422,11.5ZM7.582,5.065a1.5,1.5,0,0,0-1.5,1.5V9a1.5,1.5,0,0,0,1.5,1.5h10.84a1.5,1.5,0,0,0,1.5-1.5V6.565a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.451,19.938H7.582a2.5,2.5,0,0,1-2.5-2.5V15a2.5,2.5,0,0,1,2.5-2.5h5.869a2.5,2.5,0,0,1,2.5,2.5v2.436A2.5,2.5,0,0,1,13.451,19.938ZM7.582,13.5a1.5,1.5,0,0,0-1.5,1.5v2.436a1.5,1.5,0,0,0,1.5,1.5h5.869a1.5,1.5,0,0,0,1.5-1.5V15a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiAlignRight (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Align_Right\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.922,3.548v16.9a.5.5,0,0,0,1,0V3.548a.5.5,0,0,0-1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.419,11.5H5.578A2.5,2.5,0,0,1,3.078,9V6.565a2.5,2.5,0,0,1,2.5-2.5H16.419a2.5,2.5,0,0,1,2.5,2.5V9A2.5,2.5,0,0,1,16.419,11.5ZM5.578,5.065a1.5,1.5,0,0,0-1.5,1.5V9a1.5,1.5,0,0,0,1.5,1.5H16.419a1.5,1.5,0,0,0,1.5-1.5V6.565a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.419,19.938H10.55a2.5,2.5,0,0,1-2.5-2.5V15a2.5,2.5,0,0,1,2.5-2.5h5.869a2.5,2.5,0,0,1,2.5,2.5v2.436A2.5,2.5,0,0,1,16.419,19.938ZM10.55,13.5A1.5,1.5,0,0,0,9.05,15v2.436a1.5,1.5,0,0,0,1.5,1.5h5.869a1.5,1.5,0,0,0,1.5-1.5V15a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiAlignTop (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Align_Top\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.548,4.078h16.9a.5.5,0,0,0,0-1H3.548a.5.5,0,0,0,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9,20.922H6.565a2.5,2.5,0,0,1-2.5-2.5V7.582a2.5,2.5,0,0,1,2.5-2.5H9a2.5,2.5,0,0,1,2.5,2.5v10.84A2.5,2.5,0,0,1,9,20.922ZM6.565,6.082a1.5,1.5,0,0,0-1.5,1.5v10.84a1.5,1.5,0,0,0,1.5,1.5H9a1.5,1.5,0,0,0,1.5-1.5V7.582A1.5,1.5,0,0,0,9,6.082Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.438,15.951H15a2.5,2.5,0,0,1-2.5-2.5V7.582a2.5,2.5,0,0,1,2.5-2.5h2.435a2.5,2.5,0,0,1,2.5,2.5v5.869A2.5,2.5,0,0,1,17.438,15.951ZM15,6.082a1.5,1.5,0,0,0-1.5,1.5v5.869a1.5,1.5,0,0,0,1.5,1.5h2.435a1.5,1.5,0,0,0,1.5-1.5V7.582a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiApple (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Apple\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.875,6.612l.05-.05a3.229,3.229,0,0,0,.95-2.58.976.976,0,0,0-.9-.9,3.229,3.229,0,0,0-2.58.95,3.279,3.279,0,0,0-.85,1.46,4.661,4.661,0,0,0-2.69-1.75.5.5,0,1,0-.22.98,3.664,3.664,0,0,1,2.59,2.2,5.577,5.577,0,0,0-1.9-.32,5.847,5.847,0,0,0-5.84,5.84c0,2.98,2.41,8.49,5.84,8.49a5.821,5.821,0,0,0,2.4-.52.683.683,0,0,1,.56,0,5.73,5.73,0,0,0,2.38.52c3.44,0,5.85-5.51,5.85-8.49A5.838,5.838,0,0,0,14.875,6.612Zm-1.77-1.87a2.3,2.3,0,0,1,1.78-.68c0,.06.01.12.01.17a2.326,2.326,0,0,1-.67,1.63,2.359,2.359,0,0,1-1.79.66A2.247,2.247,0,0,1,13.105,4.742Zm1.56,15.19a4.787,4.787,0,0,1-1.97-.43,1.718,1.718,0,0,0-.69-.15,1.649,1.649,0,0,0-.69.15,4.879,4.879,0,0,1-1.99.43c-2.58,0-4.84-4.67-4.84-7.49a4.855,4.855,0,0,1,6.83-4.42,1.56,1.56,0,0,0,.67.15h.02a1.683,1.683,0,0,0,.69-.15,4.777,4.777,0,0,1,1.97-.42,4.852,4.852,0,0,1,4.85,4.84C19.515,15.262,17.245,19.932,14.665,19.932Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiAt (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"At\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.09,21.925a9.846,9.846,0,0,1-3.838-.747A9.673,9.673,0,0,1,3.005,15.93,10.034,10.034,0,0,1,2.244,12a10.425,10.425,0,0,1,.695-3.8,9.606,9.606,0,0,1,2-3.169A9.269,9.269,0,0,1,8.1,2.862a10.605,10.605,0,0,1,4.175-.787,10.516,10.516,0,0,1,4.334.827A8.437,8.437,0,0,1,19.64,5.119a8.622,8.622,0,0,1,1.707,3.1,9.263,9.263,0,0,1,.377,3.487,5.809,5.809,0,0,1-1.3,3.6A3.6,3.6,0,0,1,17.7,16.473a3.628,3.628,0,0,1-2.162-.609,2.82,2.82,0,0,1-1.119-1.694l.5.106a2.582,2.582,0,0,1-1.3,1.3A4.37,4.37,0,0,1,11.746,16,3.681,3.681,0,0,1,9.88,15.54a3.2,3.2,0,0,1-1.237-1.271A3.843,3.843,0,0,1,8.2,12.4a3.88,3.88,0,0,1,.456-1.926A3.191,3.191,0,0,1,9.919,9.214a3.792,3.792,0,0,1,1.853-.443,4.716,4.716,0,0,1,1.767.364,2.622,2.622,0,0,1,1.383,1.3l-.5.5V9.461a.4.4,0,0,1,.4-.4h.232a.4.4,0,0,1,.4.4v3.518a2.723,2.723,0,0,0,.529,1.674,2.173,2.173,0,0,0,1.853.708,2.281,2.281,0,0,0,1.323-.41,2.938,2.938,0,0,0,.967-1.178,4.947,4.947,0,0,0,.437-1.852,9.439,9.439,0,0,0-.417-3.574A7.285,7.285,0,0,0,18.5,5.588a7.424,7.424,0,0,0-2.679-1.78,9.605,9.605,0,0,0-3.547-.622,9.041,9.041,0,0,0-3.758.741,8.252,8.252,0,0,0-2.773,2,8.8,8.8,0,0,0-1.72,2.838,9.27,9.27,0,0,0-.589,3.262,8.568,8.568,0,0,0,.682,3.408A8.951,8.951,0,0,0,6,18.24a8.707,8.707,0,0,0,2.785,1.892,8.515,8.515,0,0,0,3.389.682,9.851,9.851,0,0,0,2.679-.378,8.451,8.451,0,0,0,2-.831.4.4,0,0,1,.553.158l.1.192a.4.4,0,0,1-.141.526,9.832,9.832,0,0,1-2.391,1.04A10.5,10.5,0,0,1,12.09,21.925ZM11.8,14.859a2.469,2.469,0,0,0,1.786-.649,2.427,2.427,0,0,0,.675-1.839,2.414,2.414,0,0,0-.7-1.886A2.532,2.532,0,0,0,11.8,9.856a2.482,2.482,0,0,0-1.839.649,2.523,2.523,0,0,0-.65,1.866,2.4,2.4,0,0,0,.682,1.865A2.574,2.574,0,0,0,11.8,14.859Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiAvocado (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Avocado\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.982,21.939a7.759,7.759,0,0,1-.818-.044A7.58,7.58,0,0,1,6.1,9.6a3.578,3.578,0,0,0,.684-2.271,5.128,5.128,0,0,1,3.8-5.085,5.266,5.266,0,0,1,4.6.892,5.185,5.185,0,0,1,2.039,4.14A3.6,3.6,0,0,0,17.9,9.61a7.574,7.574,0,0,1-5.918,12.329Zm.009-18.877a4.538,4.538,0,0,0-1.158.152,4.126,4.126,0,0,0-3.055,4.07,4.532,4.532,0,0,1-.9,2.947,6.555,6.555,0,0,0-1.366,5.231A6.643,6.643,0,0,0,11.271,20.9a6.575,6.575,0,0,0,5.851-10.662,4.453,4.453,0,0,1-.9-2.9,4.214,4.214,0,0,0-4.228-4.273Z\"},\"child\":[]},{\"tag\":\"ellipse\",\"attr\":{\"cx\":\"11.999\",\"cy\":\"14.856\",\"rx\":\"2.5\",\"ry\":\"3\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBacon (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bacon\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.605,7.455l-3.49-3.49a.8.8,0,0,0-1.08-.04,1.833,1.833,0,0,1-.93.37,3.787,3.787,0,0,0-2.21,1.12,3.918,3.918,0,0,0-1.13,2.22,1.681,1.681,0,0,1-.53,1.1,1.753,1.753,0,0,1-1.1.53,4.026,4.026,0,0,0-3.35,3.35,1.677,1.677,0,0,1-.53,1.1,1.721,1.721,0,0,1-1.11.53,4.041,4.041,0,0,0-1.62.63,1.1,1.1,0,0,0-.14,1.66l3.5,3.5a.781.781,0,0,0,.55.23.822.822,0,0,0,.53-.19,1.759,1.759,0,0,1,.93-.38,3.8,3.8,0,0,0,2.21-1.12,3.948,3.948,0,0,0,1.14-2.22,1.71,1.71,0,0,1,.52-1.1,1.776,1.776,0,0,1,1.11-.53,4.03,4.03,0,0,0,3.34-3.35,1.66,1.66,0,0,1,.53-1.1,1.721,1.721,0,0,1,1.11-.53,4.018,4.018,0,0,0,1.61-.62,1.091,1.091,0,0,0,.14-1.67ZM4.1,15.7a3.15,3.15,0,0,1,1.24-.47,2.635,2.635,0,0,0,1.63-.81,2.587,2.587,0,0,0,.8-1.61,2.852,2.852,0,0,1,.86-1.7,2.9,2.9,0,0,1,1.7-.86,2.745,2.745,0,0,0,1.62-.8,2.687,2.687,0,0,0,.8-1.62,2.9,2.9,0,0,1,.86-1.7,2.814,2.814,0,0,1,1.69-.85,2.819,2.819,0,0,0,1.24-.48l1.3,1.3a2.362,2.362,0,0,1-.98.35,3.515,3.515,0,0,0-2.95,2.95,2.136,2.136,0,0,1-.67,1.36,2.159,2.159,0,0,1-1.36.67,3.44,3.44,0,0,0-1.96.99,3.351,3.351,0,0,0-.98,1.96,2.355,2.355,0,0,1-2.03,2.03,3.242,3.242,0,0,0-1.58.66L4.1,15.835ZM19.9,8.3a3.059,3.059,0,0,1-1.23.47,2.659,2.659,0,0,0-1.63.81,2.587,2.587,0,0,0-.8,1.61,2.852,2.852,0,0,1-.86,1.7,2.883,2.883,0,0,1-1.69.86,2.812,2.812,0,0,0-2.43,2.42,2.878,2.878,0,0,1-.86,1.7,2.8,2.8,0,0,1-1.68.85,2.808,2.808,0,0,0-1.25.48l-1.3-1.29a2.423,2.423,0,0,1,.97-.35,3.377,3.377,0,0,0,1.96-.99,3.44,3.44,0,0,0,.99-1.96,2.217,2.217,0,0,1,.66-1.36,2.292,2.292,0,0,1,1.36-.67,3.317,3.317,0,0,0,1.96-.99,3.351,3.351,0,0,0,.99-1.96,2.355,2.355,0,0,1,2.03-2.03,3.479,3.479,0,0,0,1.59-.66l1.23,1.23Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBadgeDollar (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Badge_Dollar\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.953c-.895,0-1.545-.743-2.118-1.4a3.671,3.671,0,0,0-1.033-.946,3.8,3.8,0,0,0-1.466-.077,3.012,3.012,0,0,1-2.421-.494,3.014,3.014,0,0,1-.494-2.421,3.82,3.82,0,0,0-.077-1.466,3.671,3.671,0,0,0-.946-1.033c-.655-.573-1.4-1.222-1.4-2.118s.743-1.545,1.4-2.118a3.66,3.66,0,0,0,.946-1.034,3.815,3.815,0,0,0,.077-1.465,3.012,3.012,0,0,1,.494-2.421,3.015,3.015,0,0,1,2.422-.5A3.794,3.794,0,0,0,8.849,4.39a3.666,3.666,0,0,0,1.033-.945c.573-.655,1.223-1.4,2.118-1.4s1.545.742,2.118,1.4a3.66,3.66,0,0,0,1.034.946,3.807,3.807,0,0,0,1.464.077,3.018,3.018,0,0,1,2.422.5,3.012,3.012,0,0,1,.5,2.422,3.81,3.81,0,0,0,.077,1.464,3.66,3.66,0,0,0,.946,1.034c.655.573,1.4,1.223,1.4,2.118s-.743,1.545-1.4,2.118a3.666,3.666,0,0,0-.945,1.033,3.815,3.815,0,0,0-.077,1.465,3.012,3.012,0,0,1-.5,2.422,3.018,3.018,0,0,1-2.421.494,3.818,3.818,0,0,0-1.465.077,3.673,3.673,0,0,0-1.034.946C13.545,21.21,12.9,21.953,12,21.953ZM8.093,18.5a2.952,2.952,0,0,1,1.138.183,4.233,4.233,0,0,1,1.4,1.21c.454.52.924,1.057,1.365,1.057s.911-.537,1.366-1.057a4.225,4.225,0,0,1,1.4-1.21,4.365,4.365,0,0,1,1.908-.152c.672.041,1.366.085,1.653-.2s.245-.982.2-1.653a4.387,4.387,0,0,1,.152-1.909,4.241,4.241,0,0,1,1.209-1.4c.52-.454,1.057-.924,1.057-1.365s-.537-.911-1.057-1.365a4.234,4.234,0,0,1-1.209-1.4,4.381,4.381,0,0,1-.152-1.908c.041-.671.084-1.365-.2-1.653s-.982-.246-1.653-.2a4.384,4.384,0,0,1-1.908-.152,4.234,4.234,0,0,1-1.4-1.209c-.454-.52-.924-1.057-1.365-1.057s-.911.537-1.365,1.057a4.241,4.241,0,0,1-1.4,1.209,4.417,4.417,0,0,1-1.909.152c-.67-.041-1.364-.084-1.653.2s-.244.981-.2,1.652A4.37,4.37,0,0,1,5.314,9.23a4.226,4.226,0,0,1-1.21,1.4c-.52.454-1.057.925-1.057,1.365s.537.911,1.057,1.366a4.238,4.238,0,0,1,1.21,1.4,4.378,4.378,0,0,1,.152,1.91c-.041.672-.084,1.366.2,1.653s.98.245,1.653.2C7.578,18.519,7.838,18.5,8.093,18.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,13.5a2.006,2.006,0,0,1-2,2v1.01A.5.5,0,0,1,12,17a.492.492,0,0,1-.5-.49V15.5h-1.25a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5H12.5a1,1,0,1,0,0-2h-1a2,2,0,0,1,0-4V7.453A.473.473,0,0,1,12,7a.48.48,0,0,1,.5.45V8.5h1.25a.5.5,0,0,1,.5.5.508.508,0,0,1-.5.5H11.5a1,1,0,0,0,0,2h1A2,2,0,0,1,14.5,13.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBag1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bag_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.37,17.65a16.777,16.777,0,0,0-2.01-5.54,17.037,17.037,0,0,0-3.74-4.55l-.1-.08a.121.121,0,0,1-.02-.15l1.49-2.59a1.12,1.12,0,0,0,0-1.12,1.092,1.092,0,0,0-.97-.55H8.98a1.1,1.1,0,0,0-.97.55,1.12,1.12,0,0,0,0,1.12l1.5,2.59a.124.124,0,0,1-.03.15l-.09.08A17.327,17.327,0,0,0,3.63,17.65a4.051,4.051,0,0,0-.04.48,2.8,2.8,0,0,0,2.8,2.8H17.62a2.782,2.782,0,0,0,2.13-.99A2.834,2.834,0,0,0,20.37,17.65ZM8.88,4.24a.1.1,0,0,1,0-.12.106.106,0,0,1,.1-.05h6.04a.143.143,0,0,1,.11.05.163.163,0,0,1,0,.12l-1.59,2.8H10.46Zm5.09,4.08a16.436,16.436,0,0,1,5.42,9.5,1.817,1.817,0,0,1-.4,1.47,1.786,1.786,0,0,1-1.37.64H6.39a1.805,1.805,0,0,1-1.8-1.8,1.628,1.628,0,0,1,.03-.31,16.286,16.286,0,0,1,5.42-9.5l.32-.28h3.28Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBandage (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bandage\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.435,7.5H6.565a4.5,4.5,0,0,0,0,9h10.87a4.5,4.5,0,0,0,0-9Zm-9.93,8h-.94a3.5,3.5,0,0,1,0-7h.94Zm8,0h-7v-7h7Zm1.93,0h-.93v-7h.93a3.5,3.5,0,0,1,0,7Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"10.252\",\"cy\":\"10.501\",\"r\":\"0.625\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"10.252\",\"cy\":\"13.501\",\"r\":\"0.625\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"13.752\",\"cy\":\"10.5\",\"r\":\"0.625\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"13.752\",\"cy\":\"13.5\",\"r\":\"0.625\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBank (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bank\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.505,17.943V10.362a1.491,1.491,0,0,0,1.39-1.12,1.468,1.468,0,0,0-.7-1.68l-7.45-4.3a1.521,1.521,0,0,0-1.49,0l-7.45,4.3a1.468,1.468,0,0,0-.7,1.68,1.487,1.487,0,0,0,1.45,1.12h.13v7.57h-.12a1.5,1.5,0,0,0,0,3h14.87a1.5,1.5,0,0,0,.07-2.989ZM4.555,9.362a.505.505,0,0,1-.25-.94l7.45-4.289a.474.474,0,0,1,.49,0L19.7,8.422a.5.5,0,0,1-.25.94Zm13.95,1v7.57H14.9v-7.57Zm-4.61,0v7.57h-3.61v-7.57Zm-4.61,0v7.57h-3.6v-7.57Zm10.15,9.57H4.565a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5h14.87a.5.5,0,0,1,.5.5A.5.5,0,0,1,19.435,19.932Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBarcode (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Barcode\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8.066,4.065H3.648a1.732,1.732,0,0,0-.963.189A1.368,1.368,0,0,0,2.066,5.48v4.585a.5.5,0,0,0,1,0V5.785a1.794,1.794,0,0,1,.014-.518c.077-.236.319-.2.514-.2H8.066a.5.5,0,0,0,0-1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M2.063,13.937v4.418a1.733,1.733,0,0,0,.189.963,1.369,1.369,0,0,0,1.227.619H8.063a.5.5,0,0,0,0-1H3.783a1.831,1.831,0,0,1-.518-.014c-.236-.077-.2-.319-.2-.514V13.937a.5.5,0,0,0-1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.934,19.935h4.418a1.732,1.732,0,0,0,.963-.189,1.368,1.368,0,0,0,.619-1.226V13.935a.5.5,0,0,0-1,0v4.28a1.794,1.794,0,0,1-.014.518c-.077.236-.319.2-.514.2H15.934a.5.5,0,0,0,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21.937,10.063V5.645a1.733,1.733,0,0,0-.189-.963,1.369,1.369,0,0,0-1.227-.619H15.937a.5.5,0,0,0,0,1h4.28a1.831,1.831,0,0,1,.518.014c.236.077.2.319.2.514v4.472a.5.5,0,0,0,1,0Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"rect\",\"attr\":{\"x\":\"10.999\",\"y\":\"7.643\",\"width\":\"1\",\"height\":\"8.709\",\"rx\":\"0.5\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"14.249\",\"y\":\"7.643\",\"width\":\"1\",\"height\":\"8.709\",\"rx\":\"0.5\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"16.499\",\"y\":\"7.643\",\"width\":\"1\",\"height\":\"8.709\",\"rx\":\"0.5\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"6.499\",\"y\":\"7.643\",\"width\":\"1\",\"height\":\"8.709\",\"rx\":\"0.5\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"8.499\",\"y\":\"7.643\",\"width\":\"1.5\",\"height\":\"8.709\",\"rx\":\"0.75\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiBaseball (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Baseball_Ball\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.02,4.976A9.927,9.927,0,1,0,15.74,21.2,9.908,9.908,0,0,0,21.93,12,9.856,9.856,0,0,0,19.02,4.976Zm-13.34.71a8.9,8.9,0,0,1,6.04-2.61,8.461,8.461,0,0,1-.34,2.26l-.34-.19a.5.5,0,0,0-.5.86l.5.29a9.227,9.227,0,0,1-1.57,2.47l-.35-.35a.5.5,0,0,0-.7,0,.5.5,0,0,0,0,.71l.34.34a8.875,8.875,0,0,1-2.47,1.58L6,10.536a.5.5,0,0,0-.68-.19.505.505,0,0,0-.18.69l.2.34a8.2,8.2,0,0,1-2.26.35A8.827,8.827,0,0,1,5.68,5.686ZM11.74,17a.5.5,0,1,0-.5.87l.49.29a10.008,10.008,0,0,0-.45,2.74,8.9,8.9,0,0,1-8.18-8.17,9.378,9.378,0,0,0,2.75-.46l.29.5a.5.5,0,0,0,.43.25.475.475,0,0,0,.25-.07.493.493,0,0,0,.18-.68l-.21-.36a9.461,9.461,0,0,0,2.68-1.73l.36.36a.5.5,0,0,0,.35.15.508.508,0,0,0,.36-.15.513.513,0,0,0,0-.71l-.36-.36A9.665,9.665,0,0,0,11.9,6.8l.37.21a.475.475,0,0,0,.25.07.511.511,0,0,0,.44-.25.494.494,0,0,0-.19-.68l-.51-.29a9.789,9.789,0,0,0,.46-2.76,8.924,8.924,0,0,1,8.18,8.18,10.08,10.08,0,0,0-2.74.46l-.28-.49a.505.505,0,0,0-.69-.18.491.491,0,0,0-.18.68l.2.35a9.684,9.684,0,0,0-2.68,1.73l-.35-.35a.5.5,0,0,0-.71,0,.5.5,0,0,0,0,.7l.36.36a9.2,9.2,0,0,0-1.73,2.67Zm6.58,1.32a8.851,8.851,0,0,1-6.04,2.6,8.388,8.388,0,0,1,.34-2.25l.35.2a.451.451,0,0,0,.25.07.5.5,0,0,0,.43-.25.505.505,0,0,0-.18-.69l-.51-.29a8.7,8.7,0,0,1,1.57-2.47l.36.36a.5.5,0,0,0,.7-.71l-.36-.36a9.124,9.124,0,0,1,2.48-1.57l.3.52a.5.5,0,0,0,.43.25.451.451,0,0,0,.25-.07.505.505,0,0,0,.19-.68l-.21-.36a8.449,8.449,0,0,1,2.25-.34,8.992,8.992,0,0,1-.66,3.14A9.172,9.172,0,0,1,18.32,18.316Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBasketball (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Basketball\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.02,4.971a9.941,9.941,0,1,0,0,14.05A9.941,9.941,0,0,0,19.02,4.971Zm-13.34.71a8.894,8.894,0,0,1,6.05-2.6,8.812,8.812,0,0,1-2.61,6.04,8.75,8.75,0,0,1-6.04,2.61A8.875,8.875,0,0,1,5.68,5.681ZM3.1,12.731a9.772,9.772,0,0,0,6.73-2.9,9.8,9.8,0,0,0,2.9-6.73,8.908,8.908,0,0,1,5.23,2.24L5.34,17.951A8.881,8.881,0,0,1,3.1,12.731Zm8.18,8.17a8.872,8.872,0,0,1-5.23-2.24L18.66,6.041a8.91,8.91,0,0,1,2.24,5.24,9.86,9.86,0,0,0-9.62,9.62Zm7.04-2.59a8.856,8.856,0,0,1-6.04,2.61,8.851,8.851,0,0,1,8.64-8.64A8.847,8.847,0,0,1,18.32,18.311Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBatteryCharging (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Battery_Charging\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.505,18.5H4.065a2,2,0,0,1-2-2v-9a2,2,0,0,1,2-2h13.44a2,2,0,0,1,2,2v1h.93a1.5,1.5,0,0,1,1.5,1.5v4a1.5,1.5,0,0,1-1.5,1.5h-.93v1A2,2,0,0,1,17.505,18.5ZM4.065,6.5a1,1,0,0,0-1,1v9a1,1,0,0,0,1,1h13.44a1,1,0,0,0,1-1V15.25a.752.752,0,0,1,.75-.75h1.18a.5.5,0,0,0,.5-.5V10a.5.5,0,0,0-.5-.5h-1.18a.752.752,0,0,1-.75-.75V7.5a1,1,0,0,0-1-1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.174,11.191H11.891a.11.11,0,0,1-.1-.15l.655-1.669a.251.251,0,0,0-.233-.342H9.274a.248.248,0,0,0-.231.157L8.292,11.04a.11.11,0,0,0,.1.151H9.829a.11.11,0,0,1,.1.144l-.776,3.53a.085.085,0,0,0,.139.081l3.947-3.561A.109.109,0,0,0,13.174,11.191Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBatteryEmpty (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Battery_Empty\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.505,18.5H4.065a2,2,0,0,1-2-2v-9a2,2,0,0,1,2-2h13.44a2,2,0,0,1,2,2v1h.93a1.5,1.5,0,0,1,1.5,1.5v4a1.5,1.5,0,0,1-1.5,1.5h-.93v1A2,2,0,0,1,17.505,18.5ZM4.065,6.5a1,1,0,0,0-1,1v9a1,1,0,0,0,1,1h13.44a1,1,0,0,0,1-1V15.25a.752.752,0,0,1,.75-.75h1.18a.5.5,0,0,0,.5-.5V10a.5.5,0,0,0-.5-.5h-1.18a.752.752,0,0,1-.75-.75V7.5a1,1,0,0,0-1-1Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBatteryFull (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Battery_Full\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.505,18.5H4.065a2,2,0,0,1-2-2v-9a2,2,0,0,1,2-2h13.44a2,2,0,0,1,2,2v1h.93a1.5,1.5,0,0,1,1.5,1.5v4a1.5,1.5,0,0,1-1.5,1.5h-.93v1A2,2,0,0,1,17.505,18.5ZM4.065,6.5a1,1,0,0,0-1,1v9a1,1,0,0,0,1,1h13.44a1,1,0,0,0,1-1V15.25a.751.751,0,0,1,.75-.75h1.18a.5.5,0,0,0,.5-.5V10a.5.5,0,0,0-.5-.5h-1.18a.751.751,0,0,1-.75-.75V7.5a1,1,0,0,0-1-1Z\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"4.063\",\"y\":\"7.499\",\"width\":\"13.437\",\"height\":\"8.998\",\"rx\":\"1\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBeaker1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Beaker_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.447,18.645l-.51-1.52a17.9,17.9,0,0,0-4.02-6.66,1.493,1.493,0,0,1-.42-1.04V3.065H15a.5.5,0,0,0,0-1H9a.5.5,0,0,0,0,1h.5v6.36a1.484,1.484,0,0,1-.41,1.04,17.9,17.9,0,0,0-4.02,6.66l-.52,1.52a2.5,2.5,0,0,0,2.37,3.29h10.16a2.5,2.5,0,0,0,2.37-3.29Zm-9.64-7.49a2.477,2.477,0,0,0,.69-1.73V3.065h3v6.36a2.486,2.486,0,0,0,.7,1.73,16.907,16.907,0,0,1,3.01,4.38H6.787A16.943,16.943,0,0,1,9.807,11.155Zm8.49,9.16a1.507,1.507,0,0,1-1.22.62H6.917a1.5,1.5,0,0,1-1.42-1.98l.51-1.52q.15-.45.33-.9h11.32q.18.45.33.9l.51,1.52A1.5,1.5,0,0,1,18.3,20.315Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBeerMugFull (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Beer_Mug_Full\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.356,9.63h-.97V7.99a2.938,2.938,0,0,0,.5-1.65,1.77,1.77,0,0,0-.01-.23,2.905,2.905,0,0,0-1.64-2.38,2.956,2.956,0,0,0-2.4-.07,3.278,3.278,0,0,0-5.62,0,2.9,2.9,0,0,0-1.68-.17,2.866,2.866,0,0,0-2.16,1.75,2.948,2.948,0,0,0,.3,2.77V19.43a2.5,2.5,0,0,0,2.5,2.5h7.71a2.5,2.5,0,0,0,2.5-2.5v-.99l.91-.36a2.433,2.433,0,0,0,1.54-2.27V11.1A1.481,1.481,0,0,0,18.356,9.63Zm-1.97,9.8a1.5,1.5,0,0,1-1.5,1.5H7.176a1.5,1.5,0,0,1-1.5-1.5V11.34a2.858,2.858,0,0,0,1.93.74c.13,0,.25-.01.37-.02V18.4a.5.5,0,0,0,.5.5.5.5,0,0,0,.5-.5V11.82a.17.17,0,0,0-.01-.07,2.939,2.939,0,0,0,1.57-2.46h4.42a2.86,2.86,0,0,0,1.43-.38Zm-.01-11.77a1.949,1.949,0,0,1-1.42.63h-4.61a.8.8,0,0,0-.79.61,1.231,1.231,0,0,0-.02.2,1.975,1.975,0,0,1-1.05,1.78,1.934,1.934,0,0,1-2.8-1.72,1.808,1.808,0,0,1,.17-.77.6.6,0,0,0-.13-.68,1.939,1.939,0,0,1-.41-2.11,1.868,1.868,0,0,1,1.4-1.13,2.531,2.531,0,0,1,.38-.03,1.909,1.909,0,0,1,.86.2.766.766,0,0,0,.59.06A.8.8,0,0,0,9,4.32a2.273,2.273,0,0,1,4.06,0,.751.751,0,0,0,.44.38.8.8,0,0,0,.59-.05,1.917,1.917,0,0,1,2.79,1.54A1.886,1.886,0,0,1,16.376,7.66Zm2.46,8.15a1.428,1.428,0,0,1-.92,1.34l-.52.22V10.63h.96a.478.478,0,0,1,.48.47Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.577,18.9a.5.5,0,0,1-.5-.5V11.82a.5.5,0,0,1,1,0V18.4A.5.5,0,0,1,13.577,18.9Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBellOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bell_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9.624,5.2c-.571.3-.079,1.124.5.864.509-.227,1.068-.287,1.115-.95.028-.41.014-.81.476-.993a.776.776,0,0,1,1.035.71c.048.461.035.821.548,1.024a4.811,4.811,0,0,1,2.812,2.432,5.63,5.63,0,0,1,.414,2.467v2.02a.5.5,0,0,0,1,0c0-1.646.185-3.394-.521-4.929a5.542,5.542,0,0,0-3.019-2.808c-.034-.013-.155-.069-.227-.092,0-.021,0-.044,0-.059a2.009,2.009,0,0,0-.257-.945,1.739,1.739,0,0,0-3.1.172,1.992,1.992,0,0,0-.153.792c0,.012,0,.033,0,.052C10.24,4.959,9.808,5.107,9.624,5.2Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4.57,3.86c-.46-.46-1.17.25-.71.7C4.92,5.62,5.98,6.69,7.04,7.75a5.535,5.535,0,0,0-.57,2.44v4.54a2.122,2.122,0,0,0-1.88,2.11v.53a2.121,2.121,0,0,0,2.12,2.12H10.3a1.725,1.725,0,0,0,3.4,0h3.59a2.12,2.12,0,0,0,1.15-.34l.99.99a.5.5,0,0,0,.71-.71ZM17.7,18.41a1.15,1.15,0,0,1-.41.08H6.71a1.118,1.118,0,0,1-1.12-1.12v-.53a1.118,1.118,0,0,1,1.12-1.12.762.762,0,0,0,.76-.77V10.19A4.375,4.375,0,0,1,7.8,8.51Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBellOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bell_On\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.79,15.34a2.087,2.087,0,0,0-1.26-.61V10.19a5.5,5.5,0,0,0-1.62-3.91,5.826,5.826,0,0,0-2.15-1.33V4.89a1.8,1.8,0,0,0-1.61-1.81,1.749,1.749,0,0,0-1.91,1.75v.12a5.547,5.547,0,0,0-3.77,5.24v4.54a2.122,2.122,0,0,0-1.88,2.11v.53a2.121,2.121,0,0,0,2.12,2.12H10.3a1.725,1.725,0,0,0,3.4,0h3.59a2.121,2.121,0,0,0,2.12-2.12v-.53A2.1,2.1,0,0,0,18.79,15.34Zm-.38,2.03a1.118,1.118,0,0,1-1.12,1.12H6.71a1.118,1.118,0,0,1-1.12-1.12v-.53a1.118,1.118,0,0,1,1.12-1.12.762.762,0,0,0,.76-.77V10.19a4.555,4.555,0,0,1,3.24-4.34.729.729,0,0,0,.53-.71V4.83a.735.735,0,0,1,.25-.56.744.744,0,0,1,.51-.2h.07a.807.807,0,0,1,.69.82v.25a.729.729,0,0,0,.53.71A4.668,4.668,0,0,1,15.2,6.99a4.468,4.468,0,0,1,1.33,3.2v4.76a.8.8,0,0,0,.22.55.773.773,0,0,0,.54.22,1.127,1.127,0,0,1,1.12,1.12Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBezier (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bezier\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.435,8.005a1.5,1.5,0,1,0-1.41-2H13.5v-.25a.749.749,0,0,0-.75-.75h-1.5a.755.755,0,0,0-.75.75v.25H4.975a1.5,1.5,0,0,0-2.91.5,1.5,1.5,0,0,0,2.91.5h3.79c-2.5,1.61-4.23,5-4.47,8.99h-.28a.749.749,0,0,0-.75.75v1.5a.749.749,0,0,0,.75.75h1.5a.755.755,0,0,0,.75-.75v-1.5a.755.755,0,0,0-.75-.75h-.21c.27-4.22,2.38-7.78,5.19-8.73a.747.747,0,0,0,.75.74h1.5a.741.741,0,0,0,.75-.74c2.81.95,4.93,4.51,5.21,8.73h-.22a.749.749,0,0,0-.75.75v1.5a.749.749,0,0,0,.75.75h1.5a.755.755,0,0,0,.75-.75v-1.5a.755.755,0,0,0-.75-.75H19.7c-.24-3.99-1.97-7.38-4.46-8.99h3.78A1.5,1.5,0,0,0,20.435,8.005Zm0-2a.508.508,0,0,1,.5.5.5.5,0,0,1-.5.5.5.5,0,0,1-.5-.5A.5.5,0,0,1,20.435,6.005Zm-16.87,1a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5.508.508,0,0,1,.5.5A.5.5,0,0,1,3.565,7.005ZM5.265,18h-1V17h1ZM12.5,7.005h-1v-1h1ZM18.735,17h1v1h-1Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBitcoin (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bitcoin\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.934A9.934,9.934,0,1,1,21.934,12,9.945,9.945,0,0,1,12,21.934ZM12,3.066A8.934,8.934,0,1,0,20.934,12,8.944,8.944,0,0,0,12,3.066Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.28,11.78A1.994,1.994,0,0,0,12.75,8.5H12.5V7.47A.489.489,0,0,0,12,7a.483.483,0,0,0-.5.47V8.5H10.25a1,1,0,0,0-1,1v5a1,1,0,0,0,1,1H11.5v1.03A.483.483,0,0,0,12,17a.489.489,0,0,0,.5-.47V15.5h.75a2.006,2.006,0,0,0,2-2A2.033,2.033,0,0,0,14.28,11.78ZM10.25,9.5h2.5a1,1,0,0,1,0,2h-2.5Zm3,5h-3v-2h3a1,1,0,0,1,0,2Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBluetooth (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bluetooth\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.649,15.938,11.829,12l6.82-3.94a.984.984,0,0,0,.5-.87.968.968,0,0,0-.5-.861L12.029,2.5a.989.989,0,0,0-1,0,1,1,0,0,0-.5.87v7.769q-2.1-1.23-4.22-2.44c-.24-.139-.47-.279-.71-.409a.5.5,0,0,0-.51.86L10.039,12c-1.41.81-2.83,1.62-4.23,2.44-.24.129-.48.27-.72.41a.5.5,0,0,0,.51.86c1.65-.951,3.28-1.891,4.93-2.85v7.769a.993.993,0,0,0,.5.871.969.969,0,0,0,1,0l6.62-3.82a1.007,1.007,0,0,0,0-1.74Zm-7.12-12.57,6.62,3.82-6.62,3.83Zm0,17.259V12.988l6.62,3.82Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBookmarkCheck (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bookmark_Check\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.6,21.938a1.482,1.482,0,0,1-1.011-.4l-4.251-3.9a.5.5,0,0,0-.678,0L7.41,21.538a1.5,1.5,0,0,1-2.517-1.1V4.563a2.5,2.5,0,0,1,2.5-2.5h9.214a2.5,2.5,0,0,1,2.5,2.5V20.435a1.483,1.483,0,0,1-.9,1.375A1.526,1.526,0,0,1,17.6,21.938ZM12,16.5a1.5,1.5,0,0,1,1.018.395L17.269,20.8a.5.5,0,0,0,.838-.368V4.563a1.5,1.5,0,0,0-1.5-1.5H7.393a1.5,1.5,0,0,0-1.5,1.5V20.435a.5.5,0,0,0,.839.368L10.983,16.9A1.5,1.5,0,0,1,12,16.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.85,9.08c-.11.12-.23.23-.35.35-.83.83-1.65,1.65-2.47,2.48a.513.513,0,0,1-.71,0c-.47-.48-.94-.95-1.42-1.42a.5.5,0,0,1,.71-.71c.35.36.7.71,1.06,1.06.83-.82,1.65-1.65,2.48-2.47C14.6,7.91,15.31,8.62,14.85,9.08Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBookmarkMinus (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bookmark_Minus\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.6,21.938a1.482,1.482,0,0,1-1.011-.4l-4.251-3.9a.5.5,0,0,0-.678,0L7.41,21.538a1.5,1.5,0,0,1-2.517-1.1V4.563a2.5,2.5,0,0,1,2.5-2.5h9.214a2.5,2.5,0,0,1,2.5,2.5V20.435a1.483,1.483,0,0,1-.9,1.375A1.526,1.526,0,0,1,17.6,21.938ZM12,16.5a1.5,1.5,0,0,1,1.018.395L17.269,20.8a.5.5,0,0,0,.838-.368V4.563a1.5,1.5,0,0,0-1.5-1.5H7.393a1.5,1.5,0,0,0-1.5,1.5V20.435a.5.5,0,0,0,.839.368L10.983,16.9A1.5,1.5,0,0,1,12,16.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10,10.277a.5.5,0,0,1,0-1h4a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBookmarkPlus (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bookmark_Plus\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.6,21.938a1.482,1.482,0,0,1-1.011-.4l-4.251-3.9a.5.5,0,0,0-.678,0L7.41,21.538a1.5,1.5,0,0,1-2.517-1.1V4.563a2.5,2.5,0,0,1,2.5-2.5h9.214a2.5,2.5,0,0,1,2.5,2.5V20.435a1.483,1.483,0,0,1-.9,1.375A1.526,1.526,0,0,1,17.6,21.938ZM12,16.5a1.5,1.5,0,0,1,1.018.395L17.269,20.8a.5.5,0,0,0,.838-.368V4.563a1.5,1.5,0,0,0-1.5-1.5H7.393a1.5,1.5,0,0,0-1.5,1.5V20.435a.5.5,0,0,0,.839.368L10.983,16.9A1.5,1.5,0,0,1,12,16.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14,10.28H12.5v1.5a.5.5,0,0,1-1,0v-1.5H10a.5.5,0,0,1,0-1h1.5V7.78a.5.5,0,0,1,1,0v1.5H14A.5.5,0,0,1,14,10.28Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBookmarkRemove (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bookmark_Remove\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.6,21.938a1.482,1.482,0,0,1-1.011-.4l-4.251-3.9a.5.5,0,0,0-.678,0L7.41,21.538a1.5,1.5,0,0,1-2.517-1.1V4.563a2.5,2.5,0,0,1,2.5-2.5h9.214a2.5,2.5,0,0,1,2.5,2.5V20.435a1.483,1.483,0,0,1-.9,1.375A1.526,1.526,0,0,1,17.6,21.938ZM12,16.5a1.5,1.5,0,0,1,1.018.395L17.269,20.8a.5.5,0,0,0,.838-.368V4.563a1.5,1.5,0,0,0-1.5-1.5H7.393a1.5,1.5,0,0,0-1.5,1.5V20.435a.5.5,0,0,0,.839.368L10.983,16.9A1.5,1.5,0,0,1,12,16.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10.23,10.84a.5.5,0,0,0,.71.71L12,10.491,13.06,11.55a.523.523,0,0,0,.71,0,.513.513,0,0,0,0-.71L12.709,9.779,13.77,8.72a.5.5,0,0,0-.71-.71c-.35.35-.7.71-1.06,1.06L10.94,8.01a.5.5,0,0,0-.71,0,.524.524,0,0,0,0,.71c.35.35.71.7,1.06,1.06Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBookmark (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bookmark\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.6,21.945a1.483,1.483,0,0,1-1.01-.4l-4.251-3.9a.5.5,0,0,0-.68,0L7.409,21.545a1.5,1.5,0,0,1-2.516-1.1V4.57a2.5,2.5,0,0,1,2.5-2.5h9.214a2.5,2.5,0,0,1,2.5,2.5V20.442a1.481,1.481,0,0,1-.9,1.374A1.507,1.507,0,0,1,17.6,21.945ZM12,16.51a1.5,1.5,0,0,1,1.018.395l4.251,3.9a.5.5,0,0,0,.839-.368V4.57a1.5,1.5,0,0,0-1.5-1.5H7.393a1.5,1.5,0,0,0-1.5,1.5V20.442a.5.5,0,0,0,.839.368L10.983,16.9A1.5,1.5,0,0,1,12,16.51Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBowlNoodles (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bowl_Noodles\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.5,10.705a.948.948,0,0,0-.92-.67h-5.07V8.355l4.75.17h.02a.734.734,0,0,0,.73-.73.718.718,0,0,0-.75-.72l-4.75.17V5.405l4.78-.67a.723.723,0,0,0,.62-.72.487.487,0,0,0-.01-.12.716.716,0,0,0-.87-.58l-4.6.98a1.5,1.5,0,0,0-2.92.47v.15l-1.14.24a1.494,1.494,0,0,0-2.86.61v.01l-1.2.25a.267.267,0,0,0-.2.26v.04a.257.257,0,0,0,.29.21l1.11-.15V7.5l-1.25.04a.263.263,0,0,0-.25.26.256.256,0,0,0,.25.26l1.25.04v1.94H5.425a.963.963,0,0,0-.92.68,10.119,10.119,0,0,0,1.19,8.53l.61.92a1.233,1.233,0,0,0,1.05.57h9.3a1.228,1.228,0,0,0,1.04-.57l.61-.92A10.136,10.136,0,0,0,19.5,10.705Zm-7.99-5.94a.5.5,0,0,1,.5-.5.5.5,0,0,1,.5.5v5.24h-1Zm-2,1.2,1-.14v1.53l-1,.03Zm0,2.25,1,.03v1.79h-1Zm-2-2.45a.5.5,0,0,1,.5-.5.5.5,0,0,1,.5.5v4.24h-1Zm9.96,12.93-.6.93a.261.261,0,0,1-.21.11h-9.3a.236.236,0,0,1-.21-.11l-.61-.93a9.229,9.229,0,0,1-1.11-7.66l13.12-.03A9.122,9.122,0,0,1,17.465,18.7Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBoxList (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Box_List\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6.562,8.062h-2a1.5,1.5,0,0,1-1.5-1.5v-2a1.5,1.5,0,0,1,1.5-1.5h2a1.5,1.5,0,0,1,1.5,1.5v2A1.5,1.5,0,0,1,6.562,8.062Zm-2-4a.5.5,0,0,0-.5.5v2a.5.5,0,0,0,.5.5h2a.5.5,0,0,0,.5-.5v-2a.5.5,0,0,0-.5-.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.562,20.938h-2a1.5,1.5,0,0,1-1.5-1.5v-2a1.5,1.5,0,0,1,1.5-1.5h2a1.5,1.5,0,0,1,1.5,1.5v2A1.5,1.5,0,0,1,6.562,20.938Zm-2-4a.5.5,0,0,0-.5.5v2a.5.5,0,0,0,.5.5h2a.5.5,0,0,0,.5-.5v-2a.5.5,0,0,0-.5-.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.562,14.5h-2a1.5,1.5,0,0,1-1.5-1.5V11a1.5,1.5,0,0,1,1.5-1.5h2a1.5,1.5,0,0,1,1.5,1.5v2A1.5,1.5,0,0,1,6.562,14.5Zm-2-4a.5.5,0,0,0-.5.5v2a.5.5,0,0,0,.5.5h2a.5.5,0,0,0,.5-.5V11a.5.5,0,0,0-.5-.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.438,6.062h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.438,12.5h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.438,18.935h-9a.5.5,0,1,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBoxes (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Boxes\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.435,11.5h-2.72V4.56a1.5,1.5,0,0,0-1.5-1.5H8.785a1.5,1.5,0,0,0-1.5,1.5V11.5H4.565a1.5,1.5,0,0,0-1.5,1.5v6.44a1.5,1.5,0,0,0,1.5,1.5H11a1.468,1.468,0,0,0,1-.39,1.487,1.487,0,0,0,1,.39h6.44a1.5,1.5,0,0,0,1.5-1.5V13A1.5,1.5,0,0,0,19.435,11.5ZM11.5,19.44a.5.5,0,0,1-.5.5H4.565a.5.5,0,0,1-.5-.5V13a.5.5,0,0,1,.5-.5h1.97v2a.5.5,0,0,0,.5.5h1.5a.508.508,0,0,0,.5-.5v-2H11.5ZM8.285,11.5V4.56a.5.5,0,0,1,.5-.5h1.96v2a.5.5,0,0,0,.5.5h1.5a.5.5,0,0,0,.5-.5v-2h1.97a.5.5,0,0,1,.5.5V11.5Zm11.65,7.94a.508.508,0,0,1-.5.5H13a.508.508,0,0,1-.5-.5V12.5h2.47v2a.5.5,0,0,0,.5.5h1.5a.5.5,0,0,0,.5-.5v-2h1.97a.5.5,0,0,1,.5.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBrightnessDown (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Brightness_Down\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,17.5A5.5,5.5,0,1,1,17.5,12,5.506,5.506,0,0,1,12,17.5Zm0-10A4.5,4.5,0,1,0,16.5,12,4.505,4.505,0,0,0,12,7.5Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"2.813\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"21.187\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"21.187\",\"cy\":\"12\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"2.813\",\"cy\":\"12\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.496\",\"cy\":\"5.504\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.504\",\"cy\":\"18.496\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.496\",\"cy\":\"18.496\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.504\",\"cy\":\"5.504\",\"r\":\"0.75\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBrightnessUp (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Brightness_Up\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,17.5A5.5,5.5,0,1,1,17.5,12,5.506,5.506,0,0,1,12,17.5Zm0-10A4.5,4.5,0,1,0,16.5,12,4.505,4.505,0,0,0,12,7.5Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"3.063\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"20.937\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"20.937\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"3.063\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.319\",\"cy\":\"5.681\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.681\",\"cy\":\"18.319\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.319\",\"cy\":\"18.319\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.681\",\"cy\":\"5.681\",\"r\":\"1\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiBullhorn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Bullhorn\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4.5,16.474c-0.849,-0.4 -1.436,-1.263 -1.436,-2.264l-0,-4.419c-0,-1.38 1.118,-2.5 2.5,-2.5l4.343,0c0.793,0 1.581,-0.132 2.33,-0.392c1.859,-0.705 3.792,-1.727 5.24,-2.922l0.869,-0.718c0.015,-0.013 0.032,-0.025 0.049,-0.036c0.666,-0.424 1.538,0.054 1.538,0.844l0,6.717c0.572,0.11 1.004,0.613 1.004,1.217c-0,0.604 -0.432,1.106 -1.004,1.216l-0,6.718c-0,0.787 -0.872,1.267 -1.538,0.843c-0.017,-0.011 -0.034,-0.023 -0.05,-0.036l-0.868,-0.718c-1.446,-1.195 -3.364,-2.214 -5.226,-2.891c-0.748,-0.261 -1.536,-0.394 -2.328,-0.394c-0.609,-0.029 -1.265,-0.029 -1.265,-0.029l0,2.147c0,1.148 -0.931,2.079 -2.079,2.079c-1.148,-0 -2.079,-0.931 -2.079,-2.079l0,-2.383Zm1,0.236l0,2.147c0,0.596 0.483,1.079 1.079,1.079c0.596,-0 1.079,-0.483 1.079,-1.079c0,-0 0,-2.147 0,-2.147l-2.094,-0c-0.031,-0 -0.053,-0 -0.064,-0Zm6,-0.882l0.142,0.04c2.37,0.664 4.575,1.817 6.473,3.385l0.818,0.677l-0,-15.859l-0.82,0.677c-1.897,1.566 -4.1,2.717 -6.468,3.379l-0.145,0.041l-0,7.66Zm-2.842,-0.118l1.842,0l-0,-7.419l-4.936,0c-0.829,0 -1.5,0.672 -1.5,1.5l-0,4.419c-0,0.829 0.671,1.5 1.499,1.5l3.095,0Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiBurger (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Burger\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.325,11.015a7.344,7.344,0,0,0-14.66,0,2.014,2.014,0,0,0-1.6,1.96v.16a2.016,2.016,0,0,0,1.64,1.97l.27,2.45a2.593,2.593,0,0,0,2.59,2.32h8.87a2.593,2.593,0,0,0,2.59-2.32l.27-2.45a2.016,2.016,0,0,0,1.64-1.97v-.16A2,2,0,0,0,19.325,11.015ZM12,5.125a6.365,6.365,0,0,1,6.34,5.85H5.665A6.362,6.362,0,0,1,12,5.125Zm6.04,12.32a1.6,1.6,0,0,1-1.6,1.43H7.565a1.6,1.6,0,0,1-1.6-1.43l-.26-2.31H18.3Zm1.9-4.31a1,1,0,0,1-1,1H5.065a1,1,0,0,1-1-1v-.16a1,1,0,0,1,1-1h13.87a1,1,0,0,1,1,1Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"6.622\",\"r\":\"0.5\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.323\",\"cy\":\"8.323\",\"r\":\"0.5\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"15.676\",\"cy\":\"8.323\",\"r\":\"0.5\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCalculator1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Calculator_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.5,21.937h-9a2.5,2.5,0,0,1-2.5-2.5V4.563a2.5,2.5,0,0,1,2.5-2.5h9a2.5,2.5,0,0,1,2.5,2.5V19.437A2.5,2.5,0,0,1,16.5,21.937ZM7.5,3.063A1.5,1.5,0,0,0,6,4.563V19.437a1.5,1.5,0,0,0,1.5,1.5h9a1.5,1.5,0,0,0,1.5-1.5V4.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,9.757h-5A1.5,1.5,0,0,1,8,8.257V6.563a1.5,1.5,0,0,1,1.5-1.5h5a1.5,1.5,0,0,1,1.5,1.5V8.257A1.5,1.5,0,0,1,14.5,9.757Zm-5-3.694a.5.5,0,0,0-.5.5V8.257a.5.5,0,0,0,.5.5h5a.5.5,0,0,0,.5-.5V6.563a.5.5,0,0,0-.5-.5Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"11.508\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"15.25\",\"cy\":\"11.508\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.75\",\"cy\":\"11.508\",\"r\":\"0.75\"},\"child\":[]}]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"14.848\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"15.25\",\"cy\":\"14.848\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.75\",\"cy\":\"14.848\",\"r\":\"0.75\"},\"child\":[]}]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"15.25\",\"cy\":\"18.187\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.248,18.687H8.5a.5.5,0,0,1,0-1h3.744a.5.5,0,1,1,0,1Z\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiCalculator2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Calculator_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.45,7.83h-2.8v2.81a.5.5,0,0,1-1,0V7.83H13.84a.5.5,0,0,1,0-1h2.81V4.02a.5.5,0,0,1,1,0V6.83h2.8A.5.5,0,0,1,20.45,7.83Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.545,7.83a.5.5,0,0,1,0-1h6.619a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.836,16.05a.5.5,0,0,1,0-1h6.619a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.836,20.191a.5.5,0,0,1,0-1h6.619a.5.5,0,0,1,0,1Z\"},\"child\":[]}]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9.55,19.61a.5.5,0,0,1-.71.7L6.86,18.33c-.66.65-1.33,1.32-1.99,1.98a.5.5,0,0,1-.71-.7l1.99-1.99L4.16,15.63a.5.5,0,0,1,.71-.7l.58.58,1.4,1.4c.67-.66,1.33-1.32,1.99-1.98a.5.5,0,0,1,.71.7L7.56,17.62Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCalendarDate (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Calendar_Date\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,4.955h-1.94v-1.41c0-0.26-0.23-0.51-0.5-0.5c-0.27,0.01-0.5,0.22-0.5,0.5v1.41h-7v-1.41\\n            c0-0.26-0.23-0.51-0.5-0.5c-0.27,0.01-0.5,0.22-0.5,0.5v1.41h-1.93c-1.38,0-2.5,1.12-2.5,2.5v11c0,1.38,1.12,2.5,2.5,2.5h12.87\\n            c1.38,0,2.5-1.12,2.5-2.5v-11C20.935,6.075,19.815,4.955,18.435,4.955z M19.935,18.455c0,0.83-0.67,1.5-1.5,1.5H5.565\\n            c-0.83,0-1.5-0.67-1.5-1.5v-8.42h15.87V18.455z M19.935,9.035H4.065v-1.58c0-0.83,0.67-1.5,1.5-1.5h1.93v0.59\\n            c0,0.26,0.23,0.51,0.5,0.5c0.27-0.01,0.5-0.22,0.5-0.5v-0.59h7v0.59c0,0.26,0.23,0.51,0.5,0.5c0.27-0.01,0.5-0.22,0.5-0.5v-0.59\\n            h1.94c0.83,0,1.5,0.67,1.5,1.5V9.035z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.492,17.173v-3.46c0-0.059-0.064-0.095-0.114-0.064l-0.638,0.392\\n            c-0.1,0.061-0.228-0.01-0.228-0.128v-0.651c0-0.105,0.055-0.203,0.146-0.257l0.764-0.457c0.047-0.028,0.1-0.043,0.154-0.043h0.626\\n            c0.166,0,0.3,0.134,0.3,0.3v4.367c0,0.166-0.134,0.3-0.3,0.3h-0.409C11.626,17.473,11.492,17.339,11.492,17.173z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCalendar (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Calendar\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.438,4.954H16.5c0-0.346,0-0.691,0-1.036c0-0.124,0-0.248,0-0.372c0-0.262-0.23-0.512-0.5-0.5\\n            c-0.271,0.012-0.5,0.22-0.5,0.5c0,0.469,0,0.939,0,1.408h-7c0-0.346,0-0.691,0-1.036c0-0.124,0-0.248,0-0.372\\n            c0-0.262-0.23-0.512-0.5-0.5c-0.271,0.012-0.5,0.22-0.5,0.5c0,0.469,0,0.939,0,1.408H5.562c-1.378,0-2.5,1.122-2.5,2.5v11\\n            c0,1.379,1.122,2.5,2.5,2.5h12.875c1.379,0,2.5-1.121,2.5-2.5v-11C20.938,6.076,19.816,4.954,18.438,4.954z M5.562,5.954H7.5\\n            c0,0.073,0,0.147,0,0.22c0,0.124,0,0.248,0,0.372c0,0.262,0.23,0.512,0.5,0.5c0.271-0.012,0.5-0.22,0.5-0.5c0-0.197,0-0.394,0-0.592\\n            h7c0,0.073,0,0.147,0,0.22c0,0.124,0,0.248,0,0.372c0,0.262,0.23,0.512,0.5,0.5c0.271-0.012,0.5-0.22,0.5-0.5\\n            c0-0.197,0-0.394,0-0.592h1.937c0.827,0,1.5,0.673,1.5,1.5v1.584H4.062V7.454C4.062,6.627,4.735,5.954,5.562,5.954z M18.438,19.954\\n            H5.562c-0.827,0-1.5-0.673-1.5-1.5v-8.416h15.875v8.416C19.938,19.281,19.265,19.954,18.438,19.954z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCamera (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Camera\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.435,19.925H3.565a1.5,1.5,0,0,1-1.5-1.5V9.285a1.5,1.5,0,0,1,1.5-1.5H6.223a.5.5,0,0,0,.5-.454l.166-1.8a1.49,1.49,0,0,1,1.5-1.454h7.23a1.5,1.5,0,0,1,1.5,1.5l.164,1.756a.5.5,0,0,0,.5.454h2.658a1.5,1.5,0,0,1,1.5,1.5v9.14A1.5,1.5,0,0,1,20.435,19.925ZM3.565,8.785a.5.5,0,0,0-.5.5v9.14a.5.5,0,0,0,.5.5h16.87a.5.5,0,0,0,.5-.5V9.285a.5.5,0,0,0-.5-.5H17.777a1.5,1.5,0,0,1-1.494-1.362l-.166-1.8a.515.515,0,0,0-.5-.546H8.385a.5.5,0,0,0-.5.5L7.717,7.423A1.5,1.5,0,0,1,6.223,8.785Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,17.282a4,4,0,1,1,4-4A4,4,0,0,1,12,17.282Zm0-7a3,3,0,1,0,3,3A3,3,0,0,0,12,10.282Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiChat1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Chat_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.316,19.937A1.251,1.251,0,0,1,2.065,18.69l0-1.716L2.068,6.56a2.5,2.5,0,0,1,2.5-2.5H19.44a2.5,2.5,0,0,1,2.5,2.5v8.41a2.5,2.5,0,0,1-2.5,2.5H6.918a1.49,1.49,0,0,0-1.06.439L4.2,19.57A1.246,1.246,0,0,1,3.316,19.937ZM4.568,5.062a1.5,1.5,0,0,0-1.5,1.5L3.06,16.973l0,1.714a.25.25,0,0,0,.427.176L5.151,17.2a2.482,2.482,0,0,1,1.767-.732H19.44a1.5,1.5,0,0,0,1.5-1.5V6.562a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiChat2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Chat_2\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,19.937a1.243,1.243,0,0,1-.833-.319L9.281,17.932a1.531,1.531,0,0,0-1.08-.458H4.561a2.5,2.5,0,0,1-2.5-2.5l.006-8.41a2.5,2.5,0,0,1,2.5-2.5H19.439a2.5,2.5,0,0,1,2.5,2.5v8.411a2.5,2.5,0,0,1-2.5,2.5H15.79a1.483,1.483,0,0,0-1.062.441l-1.895,1.7A1.243,1.243,0,0,1,12,19.937ZM4.567,5.063a1.5,1.5,0,0,0-1.5,1.5l-.006,8.411a1.5,1.5,0,0,0,1.5,1.5H8.2a2.483,2.483,0,0,1,1.767.732l1.864,1.667a.248.248,0,0,0,.333,0l1.874-1.682a2.5,2.5,0,0,1,1.751-.716h3.649a1.5,1.5,0,0,0,1.5-1.5V6.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCircleAlert (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Alert\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.5,9a.5.5,0,0,0-1,0h0V13.02a.5.5,0,0,0,1,0Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"15.001\",\"r\":\"0.5\"},\"child\":[]}]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.935A9.933,9.933,0,1,1,21.934,12,9.945,9.945,0,0,1,12,21.935ZM12,3.069A8.933,8.933,0,1,0,20.934,12,8.944,8.944,0,0,0,12,3.069Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleCheck (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Check\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15.81,10.4a.5.5,0,0,0-.71-.71l-3.56,3.56L9.81,11.52a.5.5,0,0,0-.71.71l2.08,2.08a.513.513,0,0,0,.71,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.934A9.934,9.934,0,1,1,21.933,12,9.945,9.945,0,0,1,12,21.934ZM12,3.067A8.934,8.934,0,1,0,20.933,12,8.944,8.944,0,0,0,12,3.067Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleChevDown (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Chev_Down\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.35,13.85a.492.492,0,0,1-.7,0l-3-3a.495.495,0,0,1,.7-.7L12,12.79l2.65-2.64a.495.495,0,0,1,.7.7Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21.933,12A9.933,9.933,0,1,1,12,2.067,9.944,9.944,0,0,1,21.933,12ZM3.067,12A8.933,8.933,0,1,0,12,3.067,8.943,8.943,0,0,0,3.067,12Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleChevLeft (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Chev_Left\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.15,12.35a.492.492,0,0,1,0-.7l3-3a.495.495,0,0,1,.7.7L11.21,12l2.64,2.65a.495.495,0,0,1-.7.7Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.933A9.933,9.933,0,1,1,21.933,12,9.944,9.944,0,0,1,12,21.933ZM12,3.067A8.933,8.933,0,1,0,20.933,12,8.943,8.943,0,0,0,12,3.067Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleChevRight (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Chev_Right\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.85,11.65a.492.492,0,0,1,0,.7l-3,3a.495.495,0,0,1-.7-.7L12.79,12,10.15,9.35a.495.495,0,0,1,.7-.7Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,2.067A9.933,9.933,0,1,1,2.067,12,9.944,9.944,0,0,1,12,2.067Zm0,18.866A8.933,8.933,0,1,0,3.067,12,8.943,8.943,0,0,0,12,20.933Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleChevUp (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Chev_Up\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.65,10.15a.492.492,0,0,1,.7,0l3,3a.495.495,0,0,1-.7.7L12,11.21,9.35,13.85a.495.495,0,0,1-.7-.7Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M2.067,12A9.933,9.933,0,1,1,12,21.934,9.944,9.944,0,0,1,2.067,12Zm18.866,0A8.933,8.933,0,1,0,12,20.934,8.943,8.943,0,0,0,20.933,12Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleInfo (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Info\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.5,15a.5.5,0,0,0,1,0h0V10.981a.5.5,0,0,0-1,0Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"8.999\",\"r\":\"0.5\"},\"child\":[]}]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,2.065A9.934,9.934,0,1,1,2.066,12,9.945,9.945,0,0,1,12,2.065Zm0,18.867A8.934,8.934,0,1,0,3.066,12,8.944,8.944,0,0,0,12,20.932Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleList (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_List\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.438,6.062h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.438,12.5h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.438,18.935h-9a.5.5,0,1,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.562,8.062a2.5,2.5,0,1,1,2.5-2.5A2.5,2.5,0,0,1,5.562,8.062Zm0-4a1.5,1.5,0,1,0,1.5,1.5A1.5,1.5,0,0,0,5.562,4.062Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.562,14.5a2.5,2.5,0,1,1,2.5-2.5A2.5,2.5,0,0,1,5.562,14.5Zm0-4a1.5,1.5,0,1,0,1.5,1.5A1.5,1.5,0,0,0,5.562,10.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.562,20.938a2.5,2.5,0,1,1,2.5-2.5A2.5,2.5,0,0,1,5.562,20.938Zm0-4a1.5,1.5,0,1,0,1.5,1.5A1.5,1.5,0,0,0,5.562,16.938Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleMinus (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Minus\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15,11.5h0a.5.5,0,0,1,0,1H9a.5.5,0,0,1,0-1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.934A9.933,9.933,0,1,1,21.932,12,9.945,9.945,0,0,1,12,21.934ZM12,3.068A8.933,8.933,0,1,0,20.932,12,8.944,8.944,0,0,0,12,3.068Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleMore (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_More\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12.001\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"16.001\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.001\",\"cy\":\"12\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.932A9.934,9.934,0,1,1,21.934,12,9.944,9.944,0,0,1,12,21.932ZM12,3.065A8.934,8.934,0,1,0,20.934,12,8.944,8.944,0,0,0,12,3.065Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCirclePlus (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Plus\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15,12.5H12.5V15a.5.5,0,0,1-1,0V12.5H9a.5.5,0,0,1,0-1h2.5V9a.5.5,0,0,1,1,0v2.5H15A.5.5,0,0,1,15,12.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.932A9.934,9.934,0,1,1,21.932,12,9.944,9.944,0,0,1,12,21.932ZM12,3.065A8.934,8.934,0,1,0,20.932,12,8.944,8.944,0,0,0,12,3.065Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleQuestion (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Question\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.411,12.459a1.547,1.547,0,0,1,.341-.6,2.644,2.644,0,0,1,.535-.417,2.2,2.2,0,0,0,.363-.286,1.2,1.2,0,0,0,.256-.363A1.084,1.084,0,0,0,13,10.341a.923.923,0,0,0-.142-.517.938.938,0,0,0-.374-.338,1.123,1.123,0,0,0-.519-.119,1.173,1.173,0,0,0-.495.107.934.934,0,0,0-.389.335.884.884,0,0,0-.111.224.516.516,0,0,1-.483.359h0a.506.506,0,0,1-.479-.675,1.661,1.661,0,0,1,.178-.349,1.8,1.8,0,0,1,.748-.634,2.437,2.437,0,0,1,1.031-.215,2.4,2.4,0,0,1,1.082.231,1.737,1.737,0,0,1,.721.641,1.772,1.772,0,0,1,.257.96,1.841,1.841,0,0,1-.118.678,1.685,1.685,0,0,1-.334.536,2.289,2.289,0,0,1-.52.417,2.277,2.277,0,0,0-.462.369,1.113,1.113,0,0,0-.256.455,2.344,2.344,0,0,0-.045.283.487.487,0,0,1-.483.429h0a.484.484,0,0,1-.483-.531A2.931,2.931,0,0,1,11.411,12.459Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"11.793\",\"cy\":\"14.891\",\"r\":\"0.587\"},\"child\":[]}]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.931A9.934,9.934,0,1,1,21.934,12,9.945,9.945,0,0,1,12,21.931ZM12,3.064A8.934,8.934,0,1,0,20.934,12,8.943,8.943,0,0,0,12,3.064Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCircleRemove (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Circle_Remove\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9.525,13.765a.5.5,0,0,0,.71.71c.59-.59,1.175-1.18,1.765-1.76l1.765,1.76a.5.5,0,0,0,.71-.71c-.59-.58-1.18-1.175-1.76-1.765.41-.42.82-.825,1.23-1.235.18-.18.35-.36.53-.53a.5.5,0,0,0-.71-.71L12,11.293,10.235,9.525a.5.5,0,0,0-.71.71L11.293,12Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.933A9.933,9.933,0,1,1,21.934,12,9.945,9.945,0,0,1,12,21.933ZM12,3.067A8.933,8.933,0,1,0,20.934,12,8.944,8.944,0,0,0,12,3.067Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiClock1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Clock_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.933A9.933,9.933,0,1,1,21.933,12,9.944,9.944,0,0,1,12,21.933ZM12,3.067A8.933,8.933,0,1,0,20.933,12,8.943,8.943,0,0,0,12,3.067Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.5,6a.5.5,0,0,1,1,0v4.8c1.13-1.13,2.26-2.27,3.39-3.4a.5.5,0,0,1,.71.71l-4.26,4.25a.463.463,0,0,1-.58.07c-.01-.02-.02-.02-.03-.02a.425.425,0,0,1-.22-.33Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiClock2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Clock_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.933A9.933,9.933,0,1,1,21.933,12,9.944,9.944,0,0,1,12,21.933ZM12,3.067A8.933,8.933,0,1,0,20.933,12,8.943,8.943,0,0,0,12,3.067Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18,12.5H12a.429.429,0,0,1-.34-.14c-.01,0-.01-.01-.02-.02A.429.429,0,0,1,11.5,12V6a.5.5,0,0,1,1,0v5.5H18A.5.5,0,0,1,18,12.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCloudDrizzle (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Cloud_Drizzle\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.605,16.787v1.018a.5.5,0,0,0,1,0V16.787a.516.516,0,0,0-.146-.354.5.5,0,0,0-.854.354Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.5,16.787v1.018a.516.516,0,0,0,.146.353.5.5,0,0,0,.854-.353V16.787a.521.521,0,0,0-.146-.354.5.5,0,0,0-.854.354Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.552,20.343v1.018a.5.5,0,0,0,1,0V20.343a.516.516,0,0,0-.146-.354.5.5,0,0,0-.854.354Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.446,20.343v1.018a.5.5,0,0,0,1,0V20.343a.521.521,0,0,0-.146-.354.5.5,0,0,0-.854.354Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.393,16.787v1.018a.5.5,0,0,0,1,0V16.787a.521.521,0,0,0-.146-.354.5.5,0,0,0-.854.354Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.1,14.228h-5.99A6.116,6.116,0,0,1,3.916,8.474h0A6.044,6.044,0,0,1,9.953,2.139a6.07,6.07,0,0,1,5.8,4.366,3.919,3.919,0,0,1,3.288,1.2,3.85,3.85,0,0,1,1.038,2.908A3.946,3.946,0,0,1,16.1,14.228ZM4.915,8.427a5.117,5.117,0,0,0,5.194,4.8H16.1a2.944,2.944,0,0,0,2.986-2.682,2.873,2.873,0,0,0-3.494-3l-.2.046-.25-.124a.592.592,0,0,1-.262-.377A5.061,5.061,0,0,0,9.953,3.139,5.043,5.043,0,0,0,4.915,8.427Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCloudMoon (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Cloud_Moon\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.36,11.54a.71.71,0,0,0-.73-.29,5.278,5.278,0,0,1-6.34-4.78,5.379,5.379,0,0,1,.37-2.42.729.729,0,0,0-.15-.78.7.7,0,0,0-.76-.16A6.317,6.317,0,0,0,9.77,8.99a5.494,5.494,0,0,0-1.22-.13A6.039,6.039,0,0,0,2.5,14.89c0,.1.01.2.01.3A6.114,6.114,0,0,0,8.7,20.94h5.99a3.941,3.941,0,0,0,3.98-3.61,3.755,3.755,0,0,0-.63-2.38A6.283,6.283,0,0,0,21.4,12.3.682.682,0,0,0,21.36,11.54Zm-6.67,8.4H8.7a5.121,5.121,0,0,1-5.19-4.8A5.042,5.042,0,0,1,8.55,9.86a5.059,5.059,0,0,1,4.92,3.95.548.548,0,0,0,.26.37l.25.13.2-.05a2.873,2.873,0,0,1,3.49,3A2.931,2.931,0,0,1,14.69,19.94Zm2.61-5.83a3.917,3.917,0,0,0-2.95-.89A6.043,6.043,0,0,0,10.78,9.3a5.338,5.338,0,0,1,2.73-4.98,6.325,6.325,0,0,0,4.51,7.85,6.642,6.642,0,0,0,2.12.17A5.2,5.2,0,0,1,17.3,14.11Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCloudOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Cloud_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.8,16.577c-.41.49-1.12-.22-.7-.71a3.585,3.585,0,0,0,.37-4.04A3.266,3.266,0,0,0,16.6,10.3a.5.5,0,0,1-.56-.23,5.391,5.391,0,0,0-5.3-3.1c-.64.04-.64-.96,0-1a6.346,6.346,0,0,1,5.99,3.26,4.255,4.255,0,0,1,4.6,2.1A4.579,4.579,0,0,1,20.8,16.577Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4.941,4.237a.5.5,0,0,0-.7.7l2.69,2.69a6.273,6.273,0,0,0-1.94,3.78,3.342,3.342,0,0,0-2.65,4.6,3.518,3.518,0,0,0,3.48,2.05h11.53c.58.57,1.14,1.14,1.71,1.71a.5.5,0,0,0,.71-.71Zm.3,12.81a2.352,2.352,0,0,1-2.16-2.25,2.309,2.309,0,0,1,2.35-2.42.515.515,0,0,0,.5-.5,5.377,5.377,0,0,1,1.71-3.54q4.35,4.365,8.71,8.72Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCloudOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Cloud_On\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.917,13.484a4.381,4.381,0,0,0-5.19-4.26,6.281,6.281,0,0,0-11.75,2.19,3.237,3.237,0,0,0-2.66,2,3.433,3.433,0,0,0,.82,3.74c1.12,1.03,2.54.89,3.94.89h10.15a4.514,4.514,0,0,0,4.69-4.32Zm-4.65,3.56c-1.19.01-2.38,0-3.56,0-2.75,0-5.49.06-8.23,0a2.383,2.383,0,0,1-2.33-1.73,2.333,2.333,0,0,1,2.28-2.94.515.515,0,0,0,.5-.5,5.3,5.3,0,0,1,10.11-1.81.5.5,0,0,0,.56.23,3.366,3.366,0,0,1,4.33,3.32A3.489,3.489,0,0,1,17.267,17.044Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCloudRainbow (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Cloud_Rainbow\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.8,6.648a8.6,8.6,0,0,0-12.78.82,6.329,6.329,0,0,0-.761-.05,6.212,6.212,0,0,0-6.2,6.2c0,.1.01.2.01.3a6.277,6.277,0,0,0,6.351,5.89h6.159a4.04,4.04,0,0,0,4.081-3.7,3.916,3.916,0,0,0-1.07-2.97,3.98,3.98,0,0,0-3.37-1.23,5.582,5.582,0,0,0-.38-.97,2.617,2.617,0,0,1,3.75-.08c.46.45,1.169-.26.71-.71a3.66,3.66,0,0,0-2.77-1.05,3.594,3.594,0,0,0-2.2.96,6.746,6.746,0,0,0-1.02-1.12,5.131,5.131,0,0,1,7.031.17c.46.45,1.169-.26.71-.71a6.134,6.134,0,0,0-4.51-1.77,5.982,5.982,0,0,0-4.031,1.73,5.632,5.632,0,0,0-1.409-.65,7.615,7.615,0,0,1,10.99-.35C21.546,7.808,22.255,7.1,21.8,6.648Zm-10.56,2.71a.712.712,0,0,0,.11.08,5.238,5.238,0,0,1,1.979,3.06.6.6,0,0,0,.271.37l.25.13.2-.05a2.977,2.977,0,0,1,3.61,3.1,3.037,3.037,0,0,1-3.081,2.76H8.416a5.27,5.27,0,0,1-5.351-4.94,5.2,5.2,0,0,1,8.171-4.51Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCloudSun (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Cloud_Sun\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.465,9.47l-1.9-1.05.58-2.16a.968.968,0,0,0-.25-.93.957.957,0,0,0-.93-.24l-2.09.6-1.13-1.94a.988.988,0,0,0-.83-.47.967.967,0,0,0-.82.48l-1.06,1.91-2.16-.58a.951.951,0,0,0-.92.24.962.962,0,0,0-.25.93l.6,2.1-.77.44A6.3,6.3,0,0,0,8.1,8.63a6.039,6.039,0,0,0-6.04,6.03c0,.1.01.2.01.3a6.115,6.115,0,0,0,6.19,5.76h5.98a3.952,3.952,0,0,0,3.99-3.62,3.876,3.876,0,0,0-.35-1.88l1.1.3a1.007,1.007,0,0,0,.25.03.907.907,0,0,0,.67-.28.95.95,0,0,0,.25-.92l-.6-2.1,1.93-1.12a.956.956,0,0,0,.47-.83A.945.945,0,0,0,21.465,9.47Zm-7.73,4.57a2.873,2.873,0,0,1,3.49,3,2.947,2.947,0,0,1-2.99,2.68H8.255a5.307,5.307,0,0,1-3.6-1.39,4.935,4.935,0,0,1-1.6-3.41A5.043,5.043,0,0,1,8.1,9.63a5.109,5.109,0,0,1,4.09,2.09,5.932,5.932,0,0,1,.4.65,4.974,4.974,0,0,1,.43,1.21A.64.64,0,0,0,13.735,14.04Zm-.92-3.73a2.106,2.106,0,0,1,4.133-.578,2.114,2.114,0,0,1-2.033,2.688A2.241,2.241,0,0,1,12.815,10.31Zm4.12,3.64a3.9,3.9,0,0,0-1.08-.67,3.11,3.11,0,1,0-4.01-3.34,6.475,6.475,0,0,0-1.09-.69l.06-.03a.978.978,0,0,0,.44-1.07l-.64-2.1,2.17.58a.981.981,0,0,0,1.07-.44l1.03-1.93,1.12,1.92a.952.952,0,0,0,1.08.45L19.175,6l-.57,2.14a.922.922,0,0,0,.44,1.09l1.92,1.04-1.92,1.11a.941.941,0,0,0-.45,1.08l.63,2.09Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCloud (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Cloud\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.1,19.4H9.646a7.492,7.492,0,0,1-7.588-7.046h0A7.4,7.4,0,0,1,9.452,4.6a7.434,7.434,0,0,1,7.136,5.447,4.731,4.731,0,0,1,4.092,1.441,4.664,4.664,0,0,1,1.26,3.529A4.789,4.789,0,0,1,17.1,19.4ZM3.057,12.309A6.493,6.493,0,0,0,9.646,18.4H17.1a3.787,3.787,0,0,0,3.839-3.453,3.7,3.7,0,0,0-4.5-3.86l-.2.046-.269-.127a.617.617,0,0,1-.273-.392A6.422,6.422,0,0,0,9.452,5.6a6.4,6.4,0,0,0-6.395,6.711Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCoffeeBean (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Coffee_Bean\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.151,4.868a6.744,6.744,0,0,0-5.96-1.69,12.009,12.009,0,0,0-6.54,3.47,11.988,11.988,0,0,0-3.48,6.55,6.744,6.744,0,0,0,1.69,5.95,6.406,6.406,0,0,0,4.63,1.78,11.511,11.511,0,0,0,7.87-3.56C21.3,13.428,22.1,7.818,19.151,4.868Zm-14.99,8.48a11.041,11.041,0,0,1,3.19-5.99,10.976,10.976,0,0,1,5.99-3.19,8.016,8.016,0,0,1,1.18-.09,5.412,5.412,0,0,1,3.92,1.49.689.689,0,0,1,.11.13,6.542,6.542,0,0,1-2.12,1.23,7.666,7.666,0,0,0-2.96,1.93,7.666,7.666,0,0,0-1.93,2.96,6.589,6.589,0,0,1-1.71,2.63,6.7,6.7,0,0,1-2.63,1.71,7.478,7.478,0,0,0-2.35,1.36A6.18,6.18,0,0,1,4.161,13.348Zm12.49,3.31c-3.55,3.55-8.52,4.35-11.08,1.79a1.538,1.538,0,0,1-.12-.13,6.677,6.677,0,0,1,2.13-1.23,7.862,7.862,0,0,0,2.96-1.93,7.738,7.738,0,0,0,1.93-2.96,6.589,6.589,0,0,1,1.71-2.63,6.589,6.589,0,0,1,2.63-1.71,7.6,7.6,0,0,0,2.34-1.37C20.791,9.2,19.821,13.488,16.651,16.658Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCoffeeCup (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Coffee_Cup\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.79,5.67a1.5,1.5,0,0,0-1.16-1.46l-.38-1.38a1.081,1.081,0,0,0-1.05-.76H7.79a1.06,1.06,0,0,0-1.04.76L6.37,4.21A1.537,1.537,0,0,0,5.21,5.76,1.476,1.476,0,0,0,6.27,7.18l.1,2.77a.75.75,0,0,0-.42.22.768.768,0,0,0-.21.56l.24,5.76a.759.759,0,0,0,.65.72l.08,2.22a2.579,2.579,0,0,0,2.59,2.5h5.39a2.581,2.581,0,0,0,2.6-2.5l.08-2.22a.76.76,0,0,0,.64-.72l.24-5.76a.768.768,0,0,0-.21-.56.72.72,0,0,0-.41-.22l.1-2.77A1.534,1.534,0,0,0,18.79,5.67Zm-11-2.6,8.49.03.3,1.07H7.44Zm8.5,16.33a1.578,1.578,0,0,1-1.6,1.53H9.3A1.575,1.575,0,0,1,7.71,19.4l-.08-2.18h8.74ZM9.9,13.58a2.1,2.1,0,1,1,2.1,2.1A2.1,2.1,0,0,1,9.9,13.58Zm6.73-3.65H7.37l-.1-2.67h9.45Zm.66-3.67H6.71a.522.522,0,0,1-.5-.59.5.5,0,0,1,.5-.5H17.29a.528.528,0,0,1,.5.59A.5.5,0,0,1,17.29,6.26Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCoinInsert (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Coin_Insert\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.44,17.7H17.77a7.484,7.484,0,0,0,1.78-4.86A7.55,7.55,0,1,0,6.23,17.7H2.56a.508.508,0,0,0-.5.5.5.5,0,0,0,.5.5H21.44a.5.5,0,0,0,.5-.5A.508.508,0,0,0,21.44,17.7Zm-5.03,0H7.62a6.546,6.546,0,1,1,8.78-.01Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14,13.965a1.616,1.616,0,0,1-1.5,1.61v.65a.485.485,0,0,1-.5.48.491.491,0,0,1-.5-.48v-.64h-.81a.5.5,0,0,1-.5-.5.508.508,0,0,1,.5-.5h1.69a.617.617,0,0,0,.62-.62.623.623,0,0,0-.62-.62h-.75a1.618,1.618,0,0,1-.13-3.23v-.65a.491.491,0,0,1,.5-.48.485.485,0,0,1,.5.48v.64h.81a.5.5,0,0,1,0,1H11.63a.62.62,0,0,0,0,1.24h.75A1.626,1.626,0,0,1,14,13.965Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCoins1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Coins_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.46,10.905a3.469,3.469,0,0,0-2.47,1.04,2.3,2.3,0,0,0-.86-1.73,2.257,2.257,0,0,0,.86-1.78,2.288,2.288,0,0,0-2.28-2.29H4.35a2.284,2.284,0,0,0-1.43,4.07,2.282,2.282,0,0,0,0,3.57,2.277,2.277,0,0,0,1.43,4.06h9.36a2.29,2.29,0,0,0,2.06-1.29,3.434,3.434,0,0,0,2.69,1.3,3.475,3.475,0,1,0,0-6.95Zm-4.75,5.94H4.35a1.28,1.28,0,1,1,0-2.56h9.36a1.28,1.28,0,1,1,0,2.56Zm0-3.56H4.35a1.285,1.285,0,1,1,0-2.57h9.36a1.285,1.285,0,0,1,0,2.57Zm0-3.57H4.35a1.285,1.285,0,1,1,0-2.57h9.36a1.285,1.285,0,0,1,0,2.57Zm4.75,7.14a2.475,2.475,0,1,1,2.48-2.48A2.477,2.477,0,0,1,18.46,16.855Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiCompass1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Compass_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4.661,20.937a1.589,1.589,0,0,1-1.117-.48,1.534,1.534,0,0,1-.4-1.59L6.58,8.937A3.8,3.8,0,0,1,8.938,6.58l9.93-3.439a1.537,1.537,0,0,1,1.589.4,1.532,1.532,0,0,1,.4,1.588L17.42,15.061a3.8,3.8,0,0,1-2.358,2.358l-9.93,3.439A1.442,1.442,0,0,1,4.661,20.937ZM19.337,4.062a.424.424,0,0,0-.142.024L9.267,7.525A2.8,2.8,0,0,0,7.525,9.266L4.087,19.2a.6.6,0,0,0,.717.718l9.93-3.439a2.8,2.8,0,0,0,1.741-1.741L19.913,4.8a.551.551,0,0,0-.163-.553A.609.609,0,0,0,19.337,4.062Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"1.563\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCreditCard1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Credit_Card_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.44,5.14H4.56a2.5,2.5,0,0,0-2.5,2.5v8.72a2.5,2.5,0,0,0,2.5,2.5H19.44a2.5,2.5,0,0,0,2.5-2.5V7.64A2.5,2.5,0,0,0,19.44,5.14ZM3.06,7.64a1.5,1.5,0,0,1,1.5-1.5H19.44a1.5,1.5,0,0,1,1.5,1.5v.5H3.06Zm17.88,8.72a1.5,1.5,0,0,1-1.5,1.5H4.56a1.5,1.5,0,0,1-1.5-1.5V9.64H20.94Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.063,14.247h-3a.5.5,0,1,1,0-1h3a.5.5,0,1,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.934,14.25h-6.5a.5.5,0,1,1,0-1h6.5a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCreditCard2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Credit_Card_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.437,18.859H4.563a2.5,2.5,0,0,1-2.5-2.5V7.641a2.5,2.5,0,0,1,2.5-2.5H19.437a2.5,2.5,0,0,1,2.5,2.5v8.718A2.5,2.5,0,0,1,19.437,18.859ZM4.563,6.141a1.5,1.5,0,0,0-1.5,1.5v8.718a1.5,1.5,0,0,0,1.5,1.5H19.437a1.5,1.5,0,0,0,1.5-1.5V7.641a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.063,14.247h-3a.5.5,0,1,1,0-1h3a.5.5,0,1,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.934,14.249h-6.5a.5.5,0,0,1,0-1h6.5a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"16.434\",\"y\":\"7.14\",\"width\":\"2\",\"height\":\"4\",\"rx\":\"0.5\",\"transform\":\"translate(8.293 26.574) rotate(-90)\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCreditCardOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Credit_Card_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.94,7.64v9.3a.5.5,0,0,1-.5.5.5.5,0,0,1-.5-.5V9.64H13.49a.75.75,0,0,1,0-1.5h7.45v-.5a1.5,1.5,0,0,0-1.5-1.5H9.89a.5.5,0,0,1,0-1h9.55A2.5,2.5,0,0,1,21.94,7.64Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.064,14.246h-3a.5.5,0,0,1,0-1h3a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.935,14.248h-.944a.5.5,0,0,1,0-1h.944a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.76,18.05,4.01,3.3c-.46-.46-1.17.25-.71.7L4.44,5.14a2.5,2.5,0,0,0-2.38,2.5v8.72a2.5,2.5,0,0,0,2.5,2.5h13.6L20,20.7c.45.46,1.16-.25.7-.71ZM3.06,7.64a1.5,1.5,0,0,1,1.5-1.5h.88c.66.67,1.33,1.34,2,2H3.06Zm9.49,5.61h-.12a.5.5,0,0,0-.5.5.508.508,0,0,0,.5.5h1.12l3.61,3.61H4.56a1.5,1.5,0,0,1-1.5-1.5V9.64H8.94Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiCrop (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Crop\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5.624,6.623l-2.075,-0c-0.276,-0 -0.5,-0.224 -0.5,-0.5c-0,-0.276 0.224,-0.5 0.5,-0.5l2.075,-0l0,-2.073c0,-0.276 0.224,-0.5 0.5,-0.5c0.276,0 0.5,0.224 0.5,0.5l0,2.073l9.191,-0c1.414,-0 2.561,1.147 2.561,2.561l-0,9.193l2.075,0c0.276,0 0.5,0.224 0.5,0.5c0,0.276 -0.224,0.5 -0.5,0.5l-2.075,0l-0,2.073c-0,0.276 -0.224,0.5 -0.5,0.5c-0.276,-0 -0.5,-0.224 -0.5,-0.5l-0,-2.073l-9.191,0c-1.414,0 -2.561,-1.147 -2.561,-2.561l0,-9.193Zm11.752,10.754l-0,-9.193c-0,-0.862 -0.699,-1.561 -1.561,-1.561l-9.191,-0l0,9.193c0,0.862 0.699,1.561 1.561,1.561l9.191,0Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiDark (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Dark\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.741,20.917a9.389,9.389,0,0,1-1.395-.105,9.141,9.141,0,0,1-1.465-17.7,1.177,1.177,0,0,1,1.21.281,1.273,1.273,0,0,1,.325,1.293,8.112,8.112,0,0,0-.353,2.68,8.266,8.266,0,0,0,4.366,6.857,7.628,7.628,0,0,0,3.711.993,1.242,1.242,0,0,1,.994,1.963h0A9.148,9.148,0,0,1,12.741,20.917ZM10.261,4.05a.211.211,0,0,0-.065.011,8.137,8.137,0,1,0,9.131,12.526h0a.224.224,0,0,0,.013-.235.232.232,0,0,0-.206-.136A8.619,8.619,0,0,1,14.946,15.1a9.274,9.274,0,0,1-4.883-7.7,9.123,9.123,0,0,1,.4-3.008.286.286,0,0,0-.069-.285A.184.184,0,0,0,10.261,4.05Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiDatabase (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Database\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,2.06c-3.53,0-6.18,1.23-6.18,2.86V19.08c0,1.63,2.65,2.86,6.18,2.86s6.18-1.23,6.18-2.86V4.92C18.18,3.29,15.52,2.06,12,2.06Zm5.18,17.02c0,.78-1.97,1.86-5.18,1.86s-5.18-1.08-5.18-1.86V15.96A9.349,9.349,0,0,0,12,17.22a9.373,9.373,0,0,0,5.18-1.26Zm0-4.72c0,.78-1.97,1.86-5.18,1.86s-5.18-1.08-5.18-1.86V11.24A9.349,9.349,0,0,0,12,12.5a9.373,9.373,0,0,0,5.18-1.26Zm0-4.72c0,.78-1.97,1.86-5.18,1.86S6.82,10.42,6.82,9.64V6.52A9.349,9.349,0,0,0,12,7.78a9.373,9.373,0,0,0,5.18-1.26ZM12,6.78c-3.21,0-5.18-1.08-5.18-1.86S8.79,3.06,12,3.06s5.18,1.08,5.18,1.86S15.21,6.78,12,6.78Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiDeliveryTruck (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Delivery_Truck\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.47,11.185l-1.03-1.43a2.5,2.5,0,0,0-2.03-1.05H14.03V6.565a2.5,2.5,0,0,0-2.5-2.5H4.56a2.507,2.507,0,0,0-2.5,2.5v9.94a1.5,1.5,0,0,0,1.5,1.5H4.78a2.242,2.242,0,0,0,4.44,0h5.56a2.242,2.242,0,0,0,4.44,0h1.22a1.5,1.5,0,0,0,1.5-1.5v-3.87A2.508,2.508,0,0,0,21.47,11.185ZM7,18.935a1.25,1.25,0,1,1,1.25-1.25A1.25,1.25,0,0,1,7,18.935Zm6.03-1.93H9.15a2.257,2.257,0,0,0-4.3,0H3.56a.5.5,0,0,1-.5-.5V6.565a1.5,1.5,0,0,1,1.5-1.5h6.97a1.5,1.5,0,0,1,1.5,1.5ZM17,18.935a1.25,1.25,0,1,1,1.25-1.25A1.25,1.25,0,0,1,17,18.935Zm3.94-2.43a.5.5,0,0,1-.5.5H19.15a2.257,2.257,0,0,0-4.3,0h-.82v-7.3h4.38a1.516,1.516,0,0,1,1.22.63l1.03,1.43a1.527,1.527,0,0,1,.28.87Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.029,12.205h-2a.5.5,0,0,1,0-1h2a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiDesktopMouse1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Desktop_Mouse_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.435,2.065h-2.87a6.5,6.5,0,0,0-6.5,6.5v6.87a6.5,6.5,0,0,0,6.5,6.5h2.87a6.5,6.5,0,0,0,6.5-6.5V8.565A6.5,6.5,0,0,0,13.435,2.065Zm-8.37,6.5a5.51,5.51,0,0,1,5.5-5.5h.94v6.44H5.065Zm13.87,6.87a5.5,5.5,0,0,1-5.5,5.5h-2.87a5.5,5.5,0,0,1-5.5-5.5v-4.93h13.87Zm0-5.93h-6.43V3.065h.93a5.5,5.5,0,0,1,5.5,5.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiDesktopMouse2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Desktop_Mouse_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.437,21.938H10.563a6.508,6.508,0,0,1-6.5-6.5V8.562a6.508,6.508,0,0,1,6.5-6.5h2.874a6.508,6.508,0,0,1,6.5,6.5v6.876A6.508,6.508,0,0,1,13.437,21.938ZM10.563,3.062a5.506,5.506,0,0,0-5.5,5.5v6.876a5.506,5.506,0,0,0,5.5,5.5h2.874a5.506,5.506,0,0,0,5.5-5.5V8.562a5.506,5.506,0,0,0-5.5-5.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.5,6.541v4a.5.5,0,0,0,1,0v-4a.5.5,0,0,0-1,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiDesktop (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Desktop\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,3.065H5.565a2.5,2.5,0,0,0-2.5,2.5v8.87a2.5,2.5,0,0,0,2.5,2.5h2.91l-.37,3H7a.5.5,0,0,0,0,1h10.01a.5.5,0,0,0,0-1H15.9l-.37-3h2.91a2.5,2.5,0,0,0,2.5-2.5V5.565A2.5,2.5,0,0,0,18.435,3.065Zm-9.33,16.87.38-3h5.03l.37,3Zm10.83-5.5a1.5,1.5,0,0,1-1.5,1.5H5.565a1.5,1.5,0,0,1-1.5-1.5v-.5h15.87Zm0-1.5H4.065V5.565a1.5,1.5,0,0,1,1.5-1.5h12.87a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiDiscount1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Discount_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.953,12c0,0.591 -0.346,1.124 -0.839,1.61c-0.295,0.29 -0.639,0.568 -0.942,0.85c-0.242,0.225 -0.46,0.446 -0.562,0.692c-0.107,0.257 -0.114,0.576 -0.105,0.913c0.011,0.416 0.056,0.855 0.059,1.265c0.006,0.691 -0.123,1.304 -0.526,1.708c-0.404,0.403 -1.017,0.532 -1.708,0.526c-0.41,-0.004 -0.849,-0.048 -1.264,-0.059c-0.337,-0.009 -0.657,-0.002 -0.914,0.105c-0.246,0.102 -0.467,0.32 -0.692,0.562c-0.282,0.303 -0.56,0.647 -0.85,0.941c-0.486,0.494 -1.019,0.84 -1.61,0.84c-0.591,-0 -1.124,-0.346 -1.61,-0.84c-0.29,-0.294 -0.568,-0.638 -0.85,-0.941c-0.225,-0.242 -0.447,-0.46 -0.692,-0.562c-0.257,-0.107 -0.577,-0.114 -0.913,-0.105c-0.416,0.011 -0.855,0.055 -1.265,0.059c-0.691,0.006 -1.305,-0.123 -1.708,-0.526c-0.404,-0.404 -0.532,-1.017 -0.526,-1.708c0.003,-0.41 0.048,-0.849 0.059,-1.265c0.009,-0.337 0.002,-0.656 -0.105,-0.914c-0.102,-0.245 -0.32,-0.466 -0.562,-0.691c-0.302,-0.282 -0.646,-0.56 -0.941,-0.85c-0.493,-0.486 -0.84,-1.019 -0.84,-1.61c0,-0.591 0.347,-1.124 0.84,-1.61c0.295,-0.29 0.639,-0.568 0.941,-0.85c0.242,-0.225 0.46,-0.446 0.562,-0.691c0.107,-0.258 0.114,-0.577 0.105,-0.914c-0.011,-0.416 -0.056,-0.855 -0.059,-1.265c-0.006,-0.691 0.122,-1.304 0.526,-1.708c0.403,-0.403 1.017,-0.532 1.708,-0.526c0.41,0.004 0.849,0.048 1.265,0.059c0.336,0.009 0.656,0.002 0.913,-0.105c0.245,-0.102 0.467,-0.32 0.692,-0.562c0.282,-0.303 0.56,-0.647 0.85,-0.941c0.486,-0.494 1.019,-0.84 1.61,-0.84c0.591,0 1.124,0.346 1.61,0.84c0.29,0.294 0.568,0.638 0.85,0.941c0.225,0.242 0.446,0.46 0.692,0.562c0.257,0.107 0.577,0.114 0.914,0.105c0.415,-0.011 0.854,-0.055 1.264,-0.059c0.691,-0.006 1.304,0.123 1.708,0.526c0.403,0.404 0.532,1.017 0.526,1.708c-0.003,0.41 -0.048,0.849 -0.059,1.265c-0.009,0.337 -0.002,0.656 0.105,0.913c0.102,0.246 0.32,0.467 0.562,0.692c0.303,0.282 0.647,0.56 0.942,0.85c0.493,0.486 0.839,1.019 0.839,1.61Zm-1,0c0,-0.188 -0.088,-0.355 -0.206,-0.518c-0.164,-0.226 -0.388,-0.437 -0.622,-0.646c-0.583,-0.521 -1.205,-1.04 -1.439,-1.604c-0.242,-0.585 -0.177,-1.399 -0.136,-2.178c0.017,-0.315 0.027,-0.622 -0.015,-0.895c-0.029,-0.191 -0.08,-0.365 -0.204,-0.489c-0.125,-0.125 -0.299,-0.176 -0.49,-0.205c-0.273,-0.042 -0.58,-0.032 -0.895,-0.015c-0.779,0.041 -1.593,0.106 -2.177,-0.136c-0.565,-0.234 -1.084,-0.855 -1.605,-1.439c-0.209,-0.234 -0.42,-0.458 -0.646,-0.622c-0.163,-0.118 -0.33,-0.206 -0.518,-0.206c-0.187,0 -0.355,0.088 -0.518,0.206c-0.226,0.164 -0.437,0.388 -0.646,0.622c-0.521,0.584 -1.04,1.205 -1.605,1.439c-0.584,0.242 -1.398,0.177 -2.177,0.136c-0.315,-0.017 -0.622,-0.027 -0.895,0.015c-0.192,0.029 -0.365,0.08 -0.49,0.205c-0.125,0.124 -0.175,0.298 -0.204,0.489c-0.042,0.273 -0.032,0.58 -0.016,0.895c0.042,0.779 0.107,1.593 -0.135,2.177c-0.234,0.565 -0.855,1.084 -1.439,1.605c-0.234,0.209 -0.458,0.42 -0.622,0.646c-0.118,0.163 -0.206,0.33 -0.206,0.518c0,0.188 0.088,0.355 0.206,0.518c0.164,0.226 0.388,0.437 0.622,0.646c0.584,0.521 1.205,1.04 1.439,1.605c0.242,0.584 0.177,1.398 0.135,2.177c-0.016,0.315 -0.026,0.622 0.016,0.895c0.029,0.191 0.079,0.365 0.204,0.489c0.125,0.125 0.298,0.176 0.49,0.205c0.273,0.042 0.58,0.032 0.895,0.015c0.779,-0.041 1.593,-0.106 2.177,0.136c0.565,0.234 1.084,0.855 1.605,1.439c0.209,0.234 0.42,0.458 0.646,0.622c0.163,0.118 0.331,0.206 0.518,0.206c0.188,-0 0.355,-0.088 0.518,-0.206c0.226,-0.164 0.437,-0.388 0.646,-0.622c0.521,-0.584 1.04,-1.205 1.605,-1.439c0.584,-0.242 1.398,-0.177 2.177,-0.136c0.315,0.017 0.622,0.027 0.895,-0.015c0.191,-0.029 0.365,-0.08 0.49,-0.205c0.124,-0.124 0.175,-0.298 0.204,-0.489c0.042,-0.273 0.032,-0.58 0.015,-0.895c-0.041,-0.779 -0.106,-1.593 0.136,-2.178c0.234,-0.564 0.856,-1.083 1.439,-1.604c0.234,-0.209 0.458,-0.42 0.622,-0.646c0.118,-0.163 0.206,-0.33 0.206,-0.518Zm-10.531,-1.762c-0.396,0.396 -1.039,0.396 -1.435,-0c-0.396,-0.396 -0.396,-1.04 -0,-1.436c0.396,-0.396 1.039,-0.396 1.435,0c0.396,0.396 0.396,1.04 0,1.436Zm4.471,-1.838c0.195,-0.195 0.512,-0.195 0.707,0c0.195,0.195 0.195,0.512 -0,0.707l-6.493,6.493c-0.195,0.195 -0.512,0.195 -0.707,0c-0.195,-0.195 -0.195,-0.512 -0,-0.707l6.493,-6.493Zm-1.315,5.363c0.396,-0.396 1.039,-0.396 1.435,0c0.396,0.396 0.396,1.04 0,1.436c-0.396,0.396 -1.039,0.396 -1.435,-0c-0.397,-0.396 -0.397,-1.04 -0,-1.436Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiDollar (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Dollar\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.934A9.934,9.934,0,1,1,21.934,12,9.945,9.945,0,0,1,12,21.934ZM12,3.066A8.934,8.934,0,1,0,20.934,12,8.944,8.944,0,0,0,12,3.066Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,13.5a2.006,2.006,0,0,1-2,2v1.01a.5.5,0,0,1-1,0V15.5H10.25a.5.5,0,0,1,0-1H12.5a1,1,0,0,0,0-2h-1a2,2,0,0,1,0-4V7.49a.5.5,0,0,1,1,0V8.5h1.25a.5.5,0,0,1,0,1H11.5a1,1,0,0,0,0,2h1A2.006,2.006,0,0,1,14.5,13.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiDroplet (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Droplet\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.936A7.27,7.27,0,0,1,7.656,20.5c-2.332-1.724-3.187-5.6-1.868-8.46l4.875-9.173A1.515,1.515,0,0,1,12,2.064h0a1.512,1.512,0,0,1,1.337.805L18.2,12.017c1.331,2.888.475,6.762-1.856,8.485A7.274,7.274,0,0,1,12,21.936ZM12,3.064a.51.51,0,0,0-.456.274L6.683,12.485c-1.1,2.4-.376,5.777,1.568,7.212a6.4,6.4,0,0,0,7.5,0c1.942-1.435,2.668-4.817,1.554-7.237l-4.85-9.122A.507.507,0,0,0,12,3.064Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiDumbbell (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Dumbbell\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.435,11.5h-.38V8.12a1.626,1.626,0,0,0-1.62-1.62h-.63V6.12a1.625,1.625,0,0,0-3.25,0V11.5H8.445V6.12a1.625,1.625,0,0,0-3.25,0V6.5h-.63a1.62,1.62,0,0,0-1.62,1.62V11.5h-.38a.5.5,0,1,0,0,1h.38v3.37a1.622,1.622,0,0,0,1.62,1.63H5.2v.37a1.625,1.625,0,1,0,3.25,0V12.5h7.11v5.37a1.625,1.625,0,1,0,3.25,0V17.5h.63a1.628,1.628,0,0,0,1.62-1.63V12.5h.38a.5.5,0,1,0,0-1ZM5.2,16.5h-.63a.625.625,0,0,1-.62-.63V8.12a.623.623,0,0,1,.62-.62H5.2Zm2.25,1.37a.634.634,0,0,1-.63.63.625.625,0,0,1-.62-.63V6.12a.623.623,0,0,1,.62-.62.632.632,0,0,1,.63.62Zm10.36,0a.625.625,0,1,1-1.25,0V6.12a.625.625,0,0,1,1.25,0Zm2.25-2a.625.625,0,0,1-.62.63h-.63v-9h.63a.623.623,0,0,1,.62.62Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiEdit (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Edit\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.548,20.938h16.9a.5.5,0,0,0,0-1H3.548a.5.5,0,0,0,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9.71,17.18a2.587,2.587,0,0,0,1.12-.65l9.54-9.54a1.75,1.75,0,0,0,0-2.47l-.94-.93a1.788,1.788,0,0,0-2.47,0L7.42,13.12a2.473,2.473,0,0,0-.64,1.12L6.04,17a.737.737,0,0,0,.19.72.767.767,0,0,0,.53.22Zm.41-1.36a1.468,1.468,0,0,1-.67.39l-.97.26-1-1,.26-.97a1.521,1.521,0,0,1,.39-.67l.38-.37,1.99,1.99Zm1.09-1.08L9.22,12.75l6.73-6.73,1.99,1.99Zm8.45-8.45L18.65,7.3,16.66,5.31l1.01-1.02a.748.748,0,0,1,1.06,0l.93.94A.754.754,0,0,1,19.66,6.29Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiEraser (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Eraser\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.454,19.028h-7.01l6.62-6.63a2.935,2.935,0,0,0,.87-2.09,2.844,2.844,0,0,0-.87-2.05l-3.42-3.44a2.93,2.93,0,0,0-4.13.01L3.934,13.4a2.946,2.946,0,0,0,0,4.14l1.48,1.49H3.554a.5.5,0,0,0,0,1h16.9A.5.5,0,0,0,20.454,19.028Zm-7.24-13.5a1.956,1.956,0,0,1,2.73,0l3.42,3.44a1.868,1.868,0,0,1,.57,1.35,1.93,1.93,0,0,1-.57,1.37l-5.64,5.64-6.15-6.16Zm-1.19,13.5h-5.2l-2.18-2.2a1.931,1.931,0,0,1,0-2.72l2.23-2.23,6.15,6.15Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiExport (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Export\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5.552,20.968a2.577,2.577,0,0,1-2.5-2.73c-.012-2.153,0-4.306,0-6.459a.5.5,0,0,1,1,0c0,2.2-.032,4.4,0,6.6.016,1.107.848,1.589,1.838,1.589H18.353A1.546,1.546,0,0,0,19.825,19a3.023,3.023,0,0,0,.1-1.061V11.779h0a.5.5,0,0,1,1,0c0,2.224.085,4.465,0,6.687a2.567,2.567,0,0,1-2.67,2.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.337,3.176a.455.455,0,0,0-.311-.138c-.015,0-.028,0-.043-.006s-.027,0-.041.006a.457.457,0,0,0-.312.138L7.961,6.845a.5.5,0,0,0,.707.707l2.816-2.815V15.479a.5.5,0,0,0,1,0V4.737L15.3,7.552a.5.5,0,0,0,.707-.707Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiFaceFrown (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Face_Frown\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.942A9.942,9.942,0,1,1,21.942,12,9.953,9.953,0,0,1,12,21.942ZM12,3.058A8.942,8.942,0,1,0,20.942,12,8.952,8.952,0,0,0,12,3.058Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.206,16.481a6.033,6.033,0,0,0-10.412,0,.5.5,0,0,0,.863.5,5.033,5.033,0,0,1,8.685,0,.5.5,0,0,0,.864-.5Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"9\",\"cy\":\"9.011\",\"r\":\"1.25\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"15\",\"cy\":\"9.011\",\"r\":\"1.25\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiFaceMeh (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Face_Meh\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.942A9.942,9.942,0,1,1,21.942,12,9.953,9.953,0,0,1,12,21.942ZM12,3.058A8.942,8.942,0,1,0,20.942,12,8.952,8.952,0,0,0,12,3.058Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"9.001\",\"cy\":\"8.99\",\"r\":\"1.25\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"15.001\",\"cy\":\"8.99\",\"r\":\"1.25\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.438,15.939h7.125a.5.5,0,0,0,0-1H8.438a.5.5,0,0,0,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiFaceSmile (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Face_Smile\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.942A9.942,9.942,0,1,1,21.942,12,9.953,9.953,0,0,1,12,21.942ZM12,3.058A8.942,8.942,0,1,0,20.942,12,8.952,8.952,0,0,0,12,3.058Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.693,13.744a5.041,5.041,0,0,1-9.387,0c-.249-.59-1.111-.081-.863.505a6.026,6.026,0,0,0,11.114,0c.247-.586-.614-1.1-.864-.505Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"9\",\"cy\":\"9.011\",\"r\":\"1.25\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"15\",\"cy\":\"9.011\",\"r\":\"1.25\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiFacebook (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Facebook\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.02,4.975A9.93,9.93,0,0,0,2.07,12,9.935,9.935,0,0,0,12,21.935a9.98,9.98,0,0,0,3.8-.75,10.189,10.189,0,0,0,3.22-2.16,9.934,9.934,0,0,0,0-14.05Zm-.7,13.34A8.921,8.921,0,0,1,13,20.885v-6.56h1.88a1,1,0,0,0,0-2H13V9.585a1,1,0,0,1,1-1h1.2a1,1,0,0,0,0-2H13.5a2.5,2.5,0,0,0-2.5,2.5v3.24H9.13a1,1,0,1,0,0,2H11v6.56a8.919,8.919,0,1,1,9.26-5.47A9.061,9.061,0,0,1,18.32,18.315Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiFileOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"File_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4,3.308a.5.5,0,0,0-.7.71l.76.76v14.67a2.5,2.5,0,0,0,2.5,2.5H17.44a2.476,2.476,0,0,0,2.28-1.51l.28.28c.45.45,1.16-.26.7-.71Zm14.92,16.33a1.492,1.492,0,0,1-1.48,1.31H6.56a1.5,1.5,0,0,1-1.5-1.5V5.778Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.38,3.088v2.92a2.5,2.5,0,0,0,2.5,2.5h3.07l-.01,6.7a.5.5,0,0,0,1,0V8.538a2.057,2.057,0,0,0-.75-1.47c-1.3-1.26-2.59-2.53-3.89-3.8a3.924,3.924,0,0,0-1.41-1.13,6.523,6.523,0,0,0-1.71-.06H6.81a.5.5,0,0,0,0,1Zm4.83,4.42H15.88a1.5,1.5,0,0,1-1.5-1.5V3.768Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiFileOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"File_On\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.485,7.35l-4.97-4.86a1.466,1.466,0,0,0-1.05-.43h-6.9a2.5,2.5,0,0,0-2.5,2.5V19.44a2.507,2.507,0,0,0,2.5,2.5h10.87a2.507,2.507,0,0,0,2.5-2.5V8.42A1.49,1.49,0,0,0,19.485,7.35Zm-1.27.15h-2.34a1.5,1.5,0,0,1-1.5-1.5V3.75Zm.72,11.94a1.5,1.5,0,0,1-1.5,1.5H6.565a1.5,1.5,0,0,1-1.5-1.5V4.56a1.5,1.5,0,0,1,1.5-1.5h6.81V6a2.5,2.5,0,0,0,2.5,2.5h3.06Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiFilter (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Filter\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.037,20.937a1.015,1.015,0,0,1-.518-.145l-3.334-2a2.551,2.551,0,0,1-1.233-2.176V12.091a1.526,1.526,0,0,0-.284-.891L4.013,4.658a1.01,1.01,0,0,1,.822-1.6h14.33a1.009,1.009,0,0,1,.822,1.6h0L15.332,11.2a1.527,1.527,0,0,0-.285.891v7.834a1.013,1.013,0,0,1-1.01,1.012ZM4.835,4.063,9.482,10.62a2.515,2.515,0,0,1,.47,1.471v4.524a1.543,1.543,0,0,0,.747,1.318l3.334,2,.014-7.843a2.516,2.516,0,0,1,.471-1.471l4.654-6.542,0,0Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiFlag1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Flag_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.565,3.18a.809.809,0,0,0-.81-.02l-1.13.56c-1.63.87-3.82.83-6.5-.13a9.141,9.141,0,0,0-7.3.52l-.76.41V3.56a.5.5,0,0,0-1,0V20.44a.5.5,0,0,0,1,0V15.9a.836.836,0,0,0,.2-.08l1.03-.55a8.163,8.163,0,0,1,6.5-.46c2.95,1.06,5.41,1.08,7.3.07l1.44-.72a.759.759,0,0,0,.4-.66V3.82A.751.751,0,0,0,20.565,3.18Zm-.63,10.16-1.31.66c-1.63.87-3.82.83-6.5-.13a9.141,9.141,0,0,0-7.3.52l-.76.4V5.65L5.3,4.99a8.122,8.122,0,0,1,6.5-.46c2.95,1.06,5.41,1.08,7.29.08l.85-.43Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiFloppyDisk (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Floppy_Disk\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.015,7.015l-4.15-3.39a2.54,2.54,0,0,0-1.58-.56H4.565a1.5,1.5,0,0,0-1.5,1.5v14.87a1.5,1.5,0,0,0,1.5,1.5h14.87a1.5,1.5,0,0,0,1.5-1.5V8.955A2.507,2.507,0,0,0,20.015,7.015ZM6.565,4.065h5.75v1.37a.5.5,0,0,1-.5.5H7.065a.5.5,0,0,1-.5-.5Zm0,15.87v-5.93a1.5,1.5,0,0,1,1.5-1.5h7.87a1.5,1.5,0,0,1,1.5,1.5v5.93Zm13.37-.5a.5.5,0,0,1-.5.5h-1v-5.93a2.507,2.507,0,0,0-2.5-2.5H8.065a2.5,2.5,0,0,0-2.5,2.5v5.93h-1a.5.5,0,0,1-.5-.5V4.565a.5.5,0,0,1,.5-.5h1v1.37a1.5,1.5,0,0,0,1.5,1.5h4.75a1.5,1.5,0,0,0,1.5-1.5V4.065h.97a1.514,1.514,0,0,1,.95.34l4.14,3.38a1.483,1.483,0,0,1,.56,1.17Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiFolderOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Folder_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4.013,3.3a.5.5,0,0,0-.711.71l.25.25A2.438,2.438,0,0,0,2.062,6.5v11a2.453,2.453,0,0,0,2.451,2.44h14.72l.759.76c.461.46,1.171-.25.711-.7Zm.5,15.64A1.45,1.45,0,0,1,3.062,17.5V6.5a1.444,1.444,0,0,1,1.31-1.43C5.893,6.6,7.432,8.14,8.963,9.66q4.485,4.485,8.96,8.97l.31.31Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21.438,17.693a.5.5,0,0,1-.5-.5V9.175a1.445,1.445,0,0,0-1.445-1.444H12.827a1.5,1.5,0,0,1-1.474-1.225l-.05-.267a1.445,1.445,0,0,0-1.42-1.178H8.8a.5.5,0,0,1,0-1H9.883a2.446,2.446,0,0,1,2.4,1.994l.05.268a.5.5,0,0,0,.491.408h6.666a2.448,2.448,0,0,1,2.445,2.444v8.018A.5.5,0,0,1,21.438,17.693Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiFolderOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Folder_On\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.435,19.94H4.565a2.5,2.5,0,0,1-2.5-2.5V6.56a2.5,2.5,0,0,1,2.5-2.5h5.27A2.5,2.5,0,0,1,12.292,6.1l.042.222a.5.5,0,0,0,.491.408h6.61a2.5,2.5,0,0,1,2.5,2.5v8.21A2.5,2.5,0,0,1,19.435,19.94ZM4.565,5.06a1.5,1.5,0,0,0-1.5,1.5V17.44a1.5,1.5,0,0,0,1.5,1.5h14.87a1.5,1.5,0,0,0,1.5-1.5V9.23a1.5,1.5,0,0,0-1.5-1.5h-6.61a1.5,1.5,0,0,1-1.474-1.225l-.042-.221A1.5,1.5,0,0,0,9.835,5.06Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiFootball (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Football\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.278,4.757a1.64,1.64,0,0,0-1.03-1.04,12.248,12.248,0,0,0-15.53,15.53,1.64,1.64,0,0,0,1.04,1.03,12.306,12.306,0,0,0,3.95.66,12.262,12.262,0,0,0,11.57-16.18Zm-15.2,14.58a.725.725,0,0,1-.42-.42,11.379,11.379,0,0,1-.58-4.26l5.26,5.26A11.352,11.352,0,0,1,5.078,19.337Zm11.56-2.71a11.179,11.179,0,0,1-6.03,3.14l-6.38-6.38a11.083,11.083,0,0,1,3.14-6.02,11.193,11.193,0,0,1,6.03-3.15l6.38,6.38A11.245,11.245,0,0,1,16.638,16.627Zm3.29-7.3-5.26-5.26c.21,0,.41-.01.62-.01a11.154,11.154,0,0,1,3.63.61.682.682,0,0,1,.42.41A11.543,11.543,0,0,1,19.928,9.327Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10.4,15.257a.5.5,0,0,0,.35.15.508.508,0,0,0,.36-.15.5.5,0,0,0,0-.7l-.48-.48L12,12.707l.48.48a.518.518,0,0,0,.35.14.543.543,0,0,0,.36-.14.513.513,0,0,0,0-.71l-.48-.48,1.37-1.37.48.48a.5.5,0,0,0,.7-.71L13.6,8.737a.5.5,0,0,0-.71,0,.5.5,0,0,0,0,.7l.49.49L12,11.3l-.48-.48a.495.495,0,1,0-.7.7l.48.48-1.37,1.38-.49-.49a.5.5,0,0,0-.7,0,.5.5,0,0,0,0,.71Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiForkAndKnife (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Fork_Knife\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.83,2.25a6.469,6.469,0,0,0-4.37,6.12v3.15a1.784,1.784,0,0,0,1.78,1.78h2.7v8.14a.5.5,0,0,0,.5.5.508.508,0,0,0,.5-.5V2.56a.508.508,0,0,0-.5-.5.467.467,0,0,0-.17.03ZM16.24,12.3a.781.781,0,0,1-.78-.78V8.37a5.482,5.482,0,0,1,3.48-5.1V12.3Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.44,2.07a.5.5,0,0,0-.5.5V7.55H8.5V2.57a.5.5,0,0,0-.5-.5.5.5,0,0,0-.5.5V7.55H5.06V2.57a.5.5,0,0,0-.5-.5.5.5,0,0,0-.5.5V9.05a2.507,2.507,0,0,0,2.5,2.5H7.5v9.89a.508.508,0,0,0,.5.5.5.5,0,0,0,.5-.5V11.55h.94a2.5,2.5,0,0,0,2.5-2.5V2.57A.5.5,0,0,0,11.44,2.07Zm-.5,6.98a1.5,1.5,0,0,1-1.5,1.5H6.56a1.511,1.511,0,0,1-1.5-1.5v-.5h5.88Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiFries (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Fries\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.51,9.535a1.091,1.091,0,0,0-.81-.36H17.67a.5.5,0,0,0-.17.02V4.815a1.5,1.5,0,0,0-1.5-1.5h-.5a1.3,1.3,0,0,0-.52.1,1.474,1.474,0,0,0-1.48-1.35H13a1.5,1.5,0,0,0-1.5,1.5v1.59a1.386,1.386,0,0,0-.5-.09h-.5a1.348,1.348,0,0,0-.5.09v-.34a1.5,1.5,0,0,0-1.5-1.5H8a1.5,1.5,0,0,0-1.5,1.5V9.2a.5.5,0,0,0-.17-.02H5.3a1.1,1.1,0,0,0-1.08,1.2l.85,8.98a2.84,2.84,0,0,0,2.84,2.58h8.18a2.84,2.84,0,0,0,2.84-2.58l.85-8.98A1.112,1.112,0,0,0,19.51,9.535ZM15,4.815a.5.5,0,0,1,.5-.5H16a.5.5,0,0,1,.5.5v6.14h.01A2.915,2.915,0,0,1,15,13.015Zm-2.5,8.53V3.565a.5.5,0,0,1,.5-.5h.5a.5.5,0,0,1,.5.5v9.76Zm-2.5-.02V6.565a.5.5,0,0,1,.5-.5H11a.5.5,0,0,1,.5.5v6.78ZM7.5,4.815a.5.5,0,0,1,.5-.5h.5a.5.5,0,0,1,.5.5v8.2a2.877,2.877,0,0,1-1.5-2.06Zm11.29,5.391-.85,9.049a1.85,1.85,0,0,1-1.85,1.68H7.91a1.84,1.84,0,0,1-1.84-1.68l-.86-9.08H6.33a.1.1,0,0,1,.09.08l.05.56a3.891,3.891,0,0,0,3.88,3.53h3.3a3.884,3.884,0,0,0,3.88-3.53l.05-.56a.106.106,0,0,1,.09-.08Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiGift (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Gift\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.435,5.568h-2.38a1.979,1.979,0,0,0-.51-1.92,2.022,2.022,0,0,0-2.83,0L12,5.367l-1.71-1.719a2,2,0,0,0-2.83,0,1.979,1.979,0,0,0-.51,1.92H4.565a1.5,1.5,0,0,0-1.5,1.5v1A1.487,1.487,0,0,0,4,9.448v8.99a2.507,2.507,0,0,0,2.5,2.5h11a2.5,2.5,0,0,0,2.5-2.5V9.458a1.509,1.509,0,0,0,.94-1.39v-1A1.5,1.5,0,0,0,19.435,5.568ZM8.165,4.357a1,1,0,0,1,1.41,0l1.21,1.211H8.015A.989.989,0,0,1,8.165,4.357ZM11,19.938H6.5a1.5,1.5,0,0,1-1.5-1.5V9.568h6Zm0-11.37H4.565a.5.5,0,0,1-.5-.5v-1a.5.5,0,0,1,.5-.5H11Zm3.43-4.211A1,1,0,0,1,16,5.568h-2.78ZM19,18.438a1.5,1.5,0,0,1-1.5,1.5H13V9.568h6Zm.94-10.37a.5.5,0,0,1-.5.5H13v-2h6.44a.5.5,0,0,1,.5.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiGlass (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Glass\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.279,2.54a1.475,1.475,0,0,0-1.1-.48H6.819a1.47,1.47,0,0,0-1.09.48,1.5,1.5,0,0,0-.41,1.12L6.379,19.6a2.51,2.51,0,0,0,2.49,2.34h6.26a2.519,2.519,0,0,0,2.5-2.34l1.05-15.94A1.5,1.5,0,0,0,18.279,2.54Zm-1.65,16.99a1.508,1.508,0,0,1-1.5,1.41H8.869a1.506,1.506,0,0,1-1.49-1.41l-.64-9.62a2.981,2.981,0,0,0,1.17-.49,1.828,1.828,0,0,1,1.18-.39,1.858,1.858,0,0,1,1.19.39,3.025,3.025,0,0,0,3.45,0,1.879,1.879,0,0,1,1.19-.39,1.828,1.828,0,0,1,1.18.39,3,3,0,0,0,1.16.49Zm.7-10.62a2.317,2.317,0,0,1-.69-.33,2.98,2.98,0,0,0-3.45,0,1.885,1.885,0,0,1-1.18.38,1.939,1.939,0,0,1-1.19-.38,2.818,2.818,0,0,0-1.73-.55,2.809,2.809,0,0,0-1.72.55,2.374,2.374,0,0,1-.7.33l-.35-5.32a.468.468,0,0,1,.14-.37.484.484,0,0,1,.36-.16h10.36a.523.523,0,0,1,.37.16.46.46,0,0,1,.13.37Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiGlobe (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Globe\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.645,2.428a8.1,8.1,0,0,0-1.61-.3,9.332,9.332,0,0,0-3.6.28l-.07.02a9.928,9.928,0,0,0,.01,19.15,9.091,9.091,0,0,0,2.36.34,1.274,1.274,0,0,0,.27.02,9.65,9.65,0,0,0,2.63-.36,9.931,9.931,0,0,0,.01-19.15Zm-.27.96a8.943,8.943,0,0,1,5.84,5.11h-4.26a13.778,13.778,0,0,0-2.74-5.35A8.254,8.254,0,0,1,14.375,3.388Zm-2.37-.09a12.78,12.78,0,0,1,2.91,5.2H9.075A12.545,12.545,0,0,1,12.005,3.3Zm3.16,6.2a13.193,13.193,0,0,1,0,5.01H8.845a12.185,12.185,0,0,1-.25-2.5,12.353,12.353,0,0,1,.25-2.51Zm-5.6-6.09.07-.02a9.152,9.152,0,0,1,1.16-.23A13.618,13.618,0,0,0,8.045,8.5H3.8A9,9,0,0,1,9.565,3.408Zm-6.5,8.6a8.71,8.71,0,0,1,.37-2.51h4.39a13.95,13.95,0,0,0-.23,2.51,13.757,13.757,0,0,0,.23,2.5H3.435A8.591,8.591,0,0,1,3.065,12.008Zm6.57,8.61a8.9,8.9,0,0,1-5.84-5.11h4.24a13.632,13.632,0,0,0,2.77,5.35A8.1,8.1,0,0,1,9.635,20.618Zm-.56-5.11h5.84a12.638,12.638,0,0,1-2.91,5.21A12.872,12.872,0,0,1,9.075,15.508Zm5.3,5.11a11.551,11.551,0,0,1-1.17.24,13.8,13.8,0,0,0,2.75-5.35h4.26A8.924,8.924,0,0,1,14.375,20.618Zm1.8-6.11a13.611,13.611,0,0,0,0-5.01h4.39a8.379,8.379,0,0,1,.37,2.51,8.687,8.687,0,0,1-.36,2.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiGps (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"GPS\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,14.5A2.5,2.5,0,1,1,14.5,12,2.5,2.5,0,0,1,12,14.5Zm0-4A1.5,1.5,0,1,0,13.5,12,1.5,1.5,0,0,0,12,10.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21.435,11.505h-1.46a7.98,7.98,0,0,0-7.48-7.48V2.565a.508.508,0,0,0-.5-.5.515.515,0,0,0-.5.5v1.46a8,8,0,0,0-7.48,7.48H2.565a.5.5,0,1,0,0,1h1.45a8.012,8.012,0,0,0,7.48,7.48v1.45a.508.508,0,0,0,.5.5.5.5,0,0,0,.5-.5v-1.45a8,8,0,0,0,7.48-7.48h1.46a.5.5,0,0,0,0-1ZM12,19.005a7,7,0,1,1,7-7A7.021,7.021,0,0,1,12,19.005Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiGrid2H (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Grid__2-H\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,11H5.565a2.5,2.5,0,0,1-2.5-2.5V5.564a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V8.5A2.5,2.5,0,0,1,18.437,11ZM5.565,4.064a1.5,1.5,0,0,0-1.5,1.5V8.5a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.936H5.565a2.5,2.5,0,0,1-2.5-2.5V15.5a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5v2.934A2.5,2.5,0,0,1,18.437,20.936ZM5.565,14a1.5,1.5,0,0,0-1.5,1.5v2.934a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V15.5a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiGrid2V (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Grid_2-V\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.436,20.937H15.5a2.5,2.5,0,0,1-2.5-2.5V5.565a2.5,2.5,0,0,1,2.5-2.5h2.933a2.5,2.5,0,0,1,2.5,2.5V18.437A2.5,2.5,0,0,1,18.436,20.937ZM15.5,4.065a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5h2.933a1.5,1.5,0,0,0,1.5-1.5V5.565a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.5,20.937H5.564a2.5,2.5,0,0,1-2.5-2.5V5.565a2.5,2.5,0,0,1,2.5-2.5H8.5a2.5,2.5,0,0,1,2.5,2.5V18.437A2.5,2.5,0,0,1,8.5,20.937ZM5.564,4.065a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5H8.5a1.5,1.5,0,0,0,1.5-1.5V5.565a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiGrid31 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Grid_3-1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.434,20.936H5.563a2.5,2.5,0,0,1-2.5-2.5V15.5a2.5,2.5,0,0,1,2.5-2.5h5.871a2.5,2.5,0,0,1,2.5,2.5v2.933A2.5,2.5,0,0,1,11.434,20.936ZM5.563,14a1.5,1.5,0,0,0-1.5,1.5v2.933a1.5,1.5,0,0,0,1.5,1.5h5.871a1.5,1.5,0,0,0,1.5-1.5V15.5a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,20.936a2.5,2.5,0,0,1-2.5-2.5V15.5a2.5,2.5,0,0,1,5,0v2.934A2.5,2.5,0,0,1,18.435,20.936Zm0-6.934a1.5,1.5,0,0,0-1.5,1.5v2.934a1.5,1.5,0,0,0,3,0V15.5A1.5,1.5,0,0,0,18.435,14Z\"},\"child\":[]}]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,11H5.563a2.5,2.5,0,0,1-2.5-2.5V5.564a2.5,2.5,0,0,1,2.5-2.5H18.435a2.5,2.5,0,0,1,2.5,2.5V8.5A2.5,2.5,0,0,1,18.435,11ZM5.563,4.064a1.5,1.5,0,0,0-1.5,1.5V8.5a1.5,1.5,0,0,0,1.5,1.5H18.435a1.5,1.5,0,0,0,1.5-1.5V5.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiGrid32 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Grid_3-2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,11H12.566a2.5,2.5,0,0,1-2.5-2.5V5.564a2.5,2.5,0,0,1,2.5-2.5h5.871a2.5,2.5,0,0,1,2.5,2.5V8.5A2.5,2.5,0,0,1,18.437,11ZM12.566,4.064a1.5,1.5,0,0,0-1.5,1.5V8.5a1.5,1.5,0,0,0,1.5,1.5h5.871a1.5,1.5,0,0,0,1.5-1.5V5.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.565,11a2.5,2.5,0,0,1-2.5-2.5V5.564a2.5,2.5,0,1,1,5,0V8.5A2.5,2.5,0,0,1,5.565,11Zm0-6.934a1.5,1.5,0,0,0-1.5,1.5V8.5a1.5,1.5,0,0,0,3,0V5.564A1.5,1.5,0,0,0,5.565,4.064Z\"},\"child\":[]}]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.936H5.565a2.5,2.5,0,0,1-2.5-2.5V15.5a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5v2.934A2.5,2.5,0,0,1,18.437,20.936ZM5.565,14a1.5,1.5,0,0,0-1.5,1.5v2.934a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V15.5a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiGrid41 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Grid_4-1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8.5,11H5.563a2.5,2.5,0,0,1-2.5-2.5V5.564a2.5,2.5,0,0,1,2.5-2.5H8.5a2.5,2.5,0,0,1,2.5,2.5V8.5A2.5,2.5,0,0,1,8.5,11ZM5.563,4.064a1.5,1.5,0,0,0-1.5,1.5V8.5a1.5,1.5,0,0,0,1.5,1.5H8.5A1.5,1.5,0,0,0,10,8.5V5.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.436,11H15.5A2.5,2.5,0,0,1,13,8.5V5.564a2.5,2.5,0,0,1,2.5-2.5h2.934a2.5,2.5,0,0,1,2.5,2.5V8.5A2.5,2.5,0,0,1,18.436,11ZM15.5,4.064a1.5,1.5,0,0,0-1.5,1.5V8.5A1.5,1.5,0,0,0,15.5,10h2.934a1.5,1.5,0,0,0,1.5-1.5V5.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.5,20.936H5.564a2.5,2.5,0,0,1-2.5-2.5V15.5a2.5,2.5,0,0,1,2.5-2.5H8.5A2.5,2.5,0,0,1,11,15.5v2.936A2.5,2.5,0,0,1,8.5,20.936ZM5.564,14a1.5,1.5,0,0,0-1.5,1.5v2.936a1.5,1.5,0,0,0,1.5,1.5H8.5a1.5,1.5,0,0,0,1.5-1.5V15.5A1.5,1.5,0,0,0,8.5,14Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.436,20.936H15.5a2.5,2.5,0,0,1-2.5-2.5V15.5A2.5,2.5,0,0,1,15.5,13h2.934a2.5,2.5,0,0,1,2.5,2.5v2.936A2.5,2.5,0,0,1,18.436,20.936ZM15.5,14A1.5,1.5,0,0,0,14,15.5v2.936a1.5,1.5,0,0,0,1.5,1.5h2.934a1.5,1.5,0,0,0,1.5-1.5V15.5a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiGrid42 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Grid_4-2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8.5,13.933H5.563a2.5,2.5,0,0,1-2.5-2.5V5.563a2.5,2.5,0,0,1,2.5-2.5H8.5a2.5,2.5,0,0,1,2.5,2.5v5.87A2.5,2.5,0,0,1,8.5,13.933ZM5.563,4.063a1.5,1.5,0,0,0-1.5,1.5v5.87a1.5,1.5,0,0,0,1.5,1.5H8.5a1.5,1.5,0,0,0,1.5-1.5V5.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.5,20.935H5.564a2.5,2.5,0,0,1,0-5H8.5a2.5,2.5,0,1,1,0,5Zm-2.934-4a1.5,1.5,0,0,0,0,3H8.5a1.5,1.5,0,1,0,0-3Z\"},\"child\":[]}]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.436,20.935H15.5a2.5,2.5,0,0,1-2.5-2.5v-5.87a2.5,2.5,0,0,1,2.5-2.5h2.934a2.5,2.5,0,0,1,2.5,2.5v5.87A2.5,2.5,0,0,1,18.436,20.935ZM15.5,11.065a1.5,1.5,0,0,0-1.5,1.5v5.87a1.5,1.5,0,0,0,1.5,1.5h2.934a1.5,1.5,0,0,0,1.5-1.5v-5.87a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.436,8.063H15.5a2.5,2.5,0,0,1,0-5h2.934a2.5,2.5,0,0,1,0,5Zm-2.934-4a1.5,1.5,0,0,0,0,3h2.934a1.5,1.5,0,0,0,0-3Z\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiHardDrive (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Hard_Drive\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.905,14.325l-1.83-10.04a1.507,1.507,0,0,0-1.47-1.22H6.405A1.493,1.493,0,0,0,4.925,4.3l-1.84,10.03a2.452,2.452,0,0,0-.02.27v4.84a1.5,1.5,0,0,0,1.5,1.5h14.87a1.511,1.511,0,0,0,1.5-1.5V14.6A1.241,1.241,0,0,0,20.905,14.325Zm-15-9.85a.5.5,0,0,1,.5-.41h11.2a.511.511,0,0,1,.49.4l1.74,9.54H4.165Zm14.03,14.96a.5.5,0,0,1-.5.5H4.565a.5.5,0,0,1-.5-.5l.01-4.43h15.86Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.561\",\"cy\":\"17.47\",\"r\":\"0.5\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"7.561\",\"cy\":\"17.47\",\"r\":\"0.5\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.45,17.97a.5.5,0,0,0,0-1h-5a.5.5,0,0,0,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiHashtag (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Hashtag\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.435,15.506H16.2l.61-7h3.63a.5.5,0,0,0,.5-.5.5.5,0,0,0-.5-.5H16.9l.34-3.87a.509.509,0,0,0-.46-.54.5.5,0,0,0-.54.46l-.35,3.95H8.9l.34-3.87a.509.509,0,0,0-.46-.54.491.491,0,0,0-.54.46l-.35,3.95H3.565a.5.5,0,0,0-.5.5.5.5,0,0,0,.5.5h4.24l-.62,7H3.565a.5.5,0,0,0-.5.5.5.5,0,0,0,.5.5h3.54l-.34,3.86a.508.508,0,0,0,.45.54h.05a.516.516,0,0,0,.5-.46l.34-3.94h7l-.34,3.86a.508.508,0,0,0,.45.54h.05a.516.516,0,0,0,.5-.46l.34-3.94h4.33a.5.5,0,0,0,.5-.5A.5.5,0,0,0,20.435,15.506Zm-5.25,0H8.2l.61-7h7Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiHeadphones (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Headphones\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.23,3.065h-.46a8.211,8.211,0,0,0-8.2,8.2v6.25a3.385,3.385,0,0,0,.89,2.3,3.423,3.423,0,0,0,2.53,1.12h.53a1.225,1.225,0,0,0,1.22-1.22v-4.4A1.225,1.225,0,0,0,7.52,14.1H7.11a3.6,3.6,0,0,0-2.54,1.05v-3.88a7.208,7.208,0,0,1,7.2-7.2h.46a7.208,7.208,0,0,1,7.2,7.2v3.88a3.6,3.6,0,0,0-2.54-1.05h-.41a1.225,1.225,0,0,0-1.22,1.22v4.4a1.225,1.225,0,0,0,1.22,1.22h.53a3.423,3.423,0,0,0,2.53-1.12,3.385,3.385,0,0,0,.89-2.3v-6.25A8.211,8.211,0,0,0,12.23,3.065ZM4.58,17.275A2.511,2.511,0,0,1,7.11,15.1h.41a.222.222,0,0,1,.22.22v4.4a.222.222,0,0,1-.22.22H6.99a2.422,2.422,0,0,1-1.79-.79,2.322,2.322,0,0,1-.63-1.63A1.927,1.927,0,0,1,4.58,17.275Zm14.22,1.87a2.422,2.422,0,0,1-1.79.79h-.53a.222.222,0,0,1-.22-.22v-4.4a.222.222,0,0,1,.22-.22h.41a2.511,2.511,0,0,1,2.53,2.18,1.927,1.927,0,0,1,.01.24A2.322,2.322,0,0,1,18.8,19.145Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiHeart (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Heart\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,20.043a.977.977,0,0,1-.7-.288L4.63,13.08A5.343,5.343,0,0,1,6.053,4.513,5.266,5.266,0,0,1,12,5.371a5.272,5.272,0,0,1,5.947-.858A5.343,5.343,0,0,1,19.37,13.08l-6.676,6.675A.977.977,0,0,1,12,20.043ZM8.355,4.963A4.015,4.015,0,0,0,6.511,5.4,4.4,4.4,0,0,0,4.122,8.643a4.345,4.345,0,0,0,1.215,3.73l6.675,6.675,6.651-6.675a4.345,4.345,0,0,0,1.215-3.73A4.4,4.4,0,0,0,17.489,5.4a4.338,4.338,0,0,0-4.968.852h0a.744.744,0,0,1-1.042,0A4.474,4.474,0,0,0,8.355,4.963Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiHome (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Home\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.37,10.22l-6.2-7.6a1.5,1.5,0,0,0-2.33-.01L4.63,10.22a2.5,2.5,0,0,0-.57,1.59v7.63a2.507,2.507,0,0,0,2.5,2.5H17.44a2.507,2.507,0,0,0,2.5-2.5V11.81A2.5,2.5,0,0,0,19.37,10.22ZM10,20.94v-5.5a1.5,1.5,0,0,1,1.5-1.5h1a1.5,1.5,0,0,1,1.5,1.5v5.5Zm8.94-1.5a1.511,1.511,0,0,1-1.5,1.5H15v-5.5a2.5,2.5,0,0,0-2.5-2.5h-1A2.5,2.5,0,0,0,9,15.44v5.5H6.56a1.511,1.511,0,0,1-1.5-1.5V11.81a1.474,1.474,0,0,1,.34-.95l6.22-7.61A.474.474,0,0,1,12,3.06a.479.479,0,0,1,.39.19l6.21,7.61a1.474,1.474,0,0,1,.34.95Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiHospital1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Hospital_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,7.5h-1.93V5.56a2.5,2.5,0,0,0-2.5-2.5h-4a2.5,2.5,0,0,0-2.5,2.5V7.5H5.565a2.5,2.5,0,0,0-2.5,2.5v9.44a1.511,1.511,0,0,0,1.5,1.5h14.87a1.5,1.5,0,0,0,1.5-1.5V10A2.5,2.5,0,0,0,18.435,7.5ZM7.505,19.94H4.565a.508.508,0,0,1-.5-.5V10a1.5,1.5,0,0,1,1.5-1.5h1.94Zm8,0h-1.5v-2.5a2.038,2.038,0,0,0-.59-1.42,2,2,0,0,0-3.41,1.42v2.5h-1.5V5.56a1.5,1.5,0,0,1,1.5-1.5h4a1.5,1.5,0,0,1,1.5,1.5Zm4.43-.5a.5.5,0,0,1-.5.5h-2.93V8.5h1.93a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.505,8.56a.5.5,0,0,1-.5.5h-1.5v1.5a.5.5,0,0,1-.5.5.5.5,0,0,1-.5-.5V9.06h-1.5a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5h1.5V6.56a.5.5,0,0,1,.5-.5.508.508,0,0,1,.5.5v1.5h1.5A.508.508,0,0,1,14.505,8.56Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5.786,13.217a.5.5,0,0,1-.5-.5v-1.5a.5.5,0,0,1,1,0v1.5A.5.5,0,0,1,5.786,13.217Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.786,17.717a.5.5,0,0,1-.5-.5v-1.5a.5.5,0,0,1,1,0v1.5A.5.5,0,0,1,5.786,17.717Z\"},\"child\":[]}]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.221,13.217a.5.5,0,0,1-.5-.5v-1.5a.5.5,0,0,1,1,0v1.5A.5.5,0,0,1,18.221,13.217Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.221,17.717a.5.5,0,0,1-.5-.5v-1.5a.5.5,0,0,1,1,0v1.5A.5.5,0,0,1,18.221,17.717Z\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiHotdog (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Hotdog\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.1,9.349l-9.74,9.74.01.01,9.74-9.74Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.276,9.119l-.47-.47a3.157,3.157,0,0,0-.03-4.43,3.212,3.212,0,0,0-4.42-.03l-.48-.48a2.3,2.3,0,0,0-3.18,0l-7.98,7.98a2.263,2.263,0,0,0,0,3.18l.48.48a3.145,3.145,0,0,0,.03,4.42,3.089,3.089,0,0,0,2.23.92,3.126,3.126,0,0,0,2.2-.89l.47.47a2.245,2.245,0,0,0,3.18,0l7.97-7.97A2.245,2.245,0,0,0,20.276,9.119Zm-15.85,3.27,7.97-7.97a1.243,1.243,0,0,1,1.77,0l.47.47L4.9,14.629l-.47-.47A1.249,1.249,0,0,1,4.426,12.389Zm3.52,6.7a2.2,2.2,0,0,1-3.02-.03,2.149,2.149,0,0,1-.03-3.01l11.16-11.16a2.163,2.163,0,0,1,1.49-.6,2.155,2.155,0,0,1,1.55,3.65Zm11.63-7.49-7.98,7.97a1.275,1.275,0,0,1-1.76,0l-.47-.47-.01-.01,9.74-9.74.01.01.47.47A1.268,1.268,0,0,1,19.576,11.6Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.57,17.569a.5.5,0,0,1-.354-.854,4.533,4.533,0,0,1,1.357-.967,3.491,3.491,0,0,0,1.1-.778,3.514,3.514,0,0,0,.779-1.1,5.034,5.034,0,0,1,2.324-2.324,3.517,3.517,0,0,0,1.1-.78,3.536,3.536,0,0,0,.78-1.1,4.534,4.534,0,0,1,.97-1.359,4.54,4.54,0,0,1,1.359-.97,3.53,3.53,0,0,0,1.1-.78.5.5,0,1,1,.707.707,4.516,4.516,0,0,1-1.36.969,3.506,3.506,0,0,0-1.1.781,3.535,3.535,0,0,0-.781,1.1,4.516,4.516,0,0,1-.969,1.36,4.5,4.5,0,0,1-1.359.969,4.029,4.029,0,0,0-1.874,1.874,4.5,4.5,0,0,1-.967,1.357,4.524,4.524,0,0,1-1.358.968,3.51,3.51,0,0,0-1.1.777A.5.5,0,0,1,6.57,17.569Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiIceCream (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Ice_Cream\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.54,5.94a4.594,4.594,0,0,0-9.08,0,3.065,3.065,0,0,0-.76,5.85l3.92,9.25a1.5,1.5,0,0,0,2.76,0l3.92-9.26a3.058,3.058,0,0,0-.76-5.84ZM12.46,20.65a.5.5,0,0,1-.92,0L7.89,12.03h8.22Zm3.64-9.62H7.9a2.06,2.06,0,1,1,.01-4.12.5.5,0,0,0,.5-.48,3.6,3.6,0,0,1,7.18,0,.506.506,0,0,0,.51.48,2.06,2.06,0,0,1,0,4.12Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiImageOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Image_Off\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.937,14.218l0,-8.654c0,-0.829 -0.672,-1.5 -1.5,-1.5l-10.628,-0c-0.276,-0 -0.5,-0.225 -0.5,-0.5c0,-0.276 0.224,-0.5 0.5,-0.5l10.628,-0c1.38,-0 2.5,1.118 2.5,2.5l0,10.624c0,0.276 -0.224,0.5 -0.5,0.501c-0.276,-0 -0.5,-0.225 -0.5,-0.5l0,-0.556l-4.583,-4.584c-0.456,-0.456 0.251,-1.163 0.707,-0.707c0.162,0.162 2.37,2.37 3.876,3.876Zm-0.121,6.304c-0.395,0.262 -0.869,0.415 -1.379,0.415l-12.874,-0c-1.381,-0 -2.5,-1.119 -2.5,-2.5l0,-12.873c0,-0.51 0.153,-0.984 0.414,-1.38l-0.263,-0.263c-0.456,-0.456 0.251,-1.163 0.707,-0.707c0.088,0.088 0.176,0.176 0.263,0.263c0.245,0.245 16.095,16.094 16.339,16.338l0.263,0.263c0.455,0.456 -0.252,1.163 -0.707,0.707c-0.088,-0.087 -0.175,-0.175 -0.263,-0.263Zm-11.104,-11.103l-2.001,-2.001c-0.094,0.196 -0.146,0.415 -0.146,0.647c-0,0.829 0.672,1.5 1.5,1.5c0.232,-0 0.451,-0.052 0.647,-0.146Zm-2.733,-2.733l-1.77,-1.77c-0.093,0.196 -0.146,0.416 -0.146,0.648l0,10.717l1.926,-1.926c0.587,-0.586 1.536,-0.586 2.122,-0l0.555,0.554c0.195,0.196 0.511,0.196 0.706,0l2.415,-2.415l-2.343,-2.343c-0.395,0.262 -0.869,0.414 -1.379,0.414c-1.38,-0 -2.5,-1.119 -2.5,-2.5c-0,-0.509 0.152,-0.983 0.414,-1.379Zm-1.916,11.009l0,0.741c0,0.829 0.671,1.5 1.5,1.5l12.874,0c0.232,0 0.451,-0.052 0.647,-0.145c-0.165,-0.165 -3.264,-3.263 -6.59,-6.59l-2.414,2.415c-0.585,0.586 -1.537,0.586 -2.122,0l-0.554,-0.554c-0.195,-0.196 -0.512,-0.196 -0.708,0l-2.633,2.633Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiImageOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Image_On\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,3.06H5.565a2.5,2.5,0,0,0-2.5,2.5V18.44a2.507,2.507,0,0,0,2.5,2.5h12.87a2.507,2.507,0,0,0,2.5-2.5V5.56A2.5,2.5,0,0,0,18.435,3.06ZM4.065,5.56a1.5,1.5,0,0,1,1.5-1.5h12.87a1.5,1.5,0,0,1,1.5,1.5v8.66l-3.88-3.88a1.509,1.509,0,0,0-2.12,0l-4.56,4.57a.513.513,0,0,1-.71,0l-.56-.56a1.522,1.522,0,0,0-2.12,0l-1.92,1.92Zm15.87,12.88a1.5,1.5,0,0,1-1.5,1.5H5.565a1.5,1.5,0,0,1-1.5-1.5v-.75L6.7,15.06a.5.5,0,0,1,.35-.14.524.524,0,0,1,.36.14l.55.56a1.509,1.509,0,0,0,2.12,0l4.57-4.57a.5.5,0,0,1,.71,0l4.58,4.58Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.062,10.565a2.5,2.5,0,1,1,2.5-2.5A2.5,2.5,0,0,1,8.062,10.565Zm0-4a1.5,1.5,0,1,0,1.5,1.5A1.5,1.5,0,0,0,8.062,6.565Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiImport (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Import\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5.552,20.968a2.577,2.577,0,0,1-2.5-2.73c-.012-2.153,0-4.306,0-6.459a.5.5,0,0,1,1,0c0,2.2-.032,4.4,0,6.6.016,1.107.848,1.589,1.838,1.589H18.353A1.546,1.546,0,0,0,19.825,19a3.023,3.023,0,0,0,.1-1.061V11.779h0a.5.5,0,0,1,1,0c0,2.224.085,4.465,0,6.687a2.567,2.567,0,0,1-2.67,2.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.63,15.818a.459.459,0,0,0,.312.138c.014,0,.027.005.042.006s.027,0,.041-.006a.457.457,0,0,0,.312-.138l3.669-3.669a.5.5,0,0,0-.707-.707l-2.815,2.815V3.515a.5.5,0,0,0-1,0V14.257L8.668,11.442a.5.5,0,0,0-.707.707Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiInboxIn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Inbox_In\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.5,9.361V4.531a.5.5,0,0,1,1,0v4.82l1.27-1.27a.524.524,0,0,1,.71,0,.513.513,0,0,1,0,.71l-2.13,2.12a.492.492,0,0,1-.7,0l-2.12-2.12a.5.5,0,0,1,0-.71.511.511,0,0,1,.7,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.488,19.949H3.512A1.451,1.451,0,0,1,2.062,18.5V12.861a1.451,1.451,0,0,1,1.45-1.449h4.1a1.444,1.444,0,0,1,1.3.8l1.373,2.726a.449.449,0,0,0,.4.247h2.629a.448.448,0,0,0,.4-.248l1.373-2.724a1.442,1.442,0,0,1,1.3-.8h4.1a1.451,1.451,0,0,1,1.45,1.449V18.5A1.451,1.451,0,0,1,20.488,19.949ZM3.512,12.412a.45.45,0,0,0-.45.449V18.5a.45.45,0,0,0,.45.449H20.488a.45.45,0,0,0,.45-.449V12.861a.45.45,0,0,0-.45-.449h-4.1a.449.449,0,0,0-.4.247L14.61,15.384a1.445,1.445,0,0,1-1.295.8H10.686a1.442,1.442,0,0,1-1.295-.8L8.018,12.659a.449.449,0,0,0-.4-.247Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiInboxOut (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Inbox_Out\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.488,19.944H3.512a1.452,1.452,0,0,1-1.45-1.45V12.856a1.452,1.452,0,0,1,1.45-1.45h4.1a1.442,1.442,0,0,1,1.3.8l1.373,2.725a.449.449,0,0,0,.4.247h2.629a.448.448,0,0,0,.4-.248L15.09,12.2a1.442,1.442,0,0,1,1.3-.8h4.1a1.452,1.452,0,0,1,1.45,1.45v5.638A1.452,1.452,0,0,1,20.488,19.944ZM3.512,12.406a.451.451,0,0,0-.45.45v5.638a.45.45,0,0,0,.45.45H20.488a.45.45,0,0,0,.45-.45V12.856a.451.451,0,0,0-.45-.45h-4.1a.449.449,0,0,0-.4.247L14.61,15.378a1.445,1.445,0,0,1-1.295.8H10.686a1.444,1.444,0,0,1-1.295-.8L8.018,12.653a.449.449,0,0,0-.4-.247Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.5,5.753v4.83a.5.5,0,0,1-1,0V5.763l-1.27,1.27a.524.524,0,0,1-.71,0,.513.513,0,0,1,0-.71l2.13-2.12a.492.492,0,0,1,.7,0l2.12,2.12a.5.5,0,0,1,0,.71.511.511,0,0,1-.7,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiIndent (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Indent\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,4.064H3.563a.5.5,0,0,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,9.688h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,15.312h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,20.936H3.563a.5.5,0,1,1,0-1H20.437a.5.5,0,1,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M7.91,11.65a.492.492,0,0,1,0,.7l-2,2a.495.495,0,0,1-.7-.7L6.36,12.5H3.54a.5.5,0,0,1,0-1H6.35c-.38-.38-.76-.76-1.14-1.15a.495.495,0,0,1,.7-.7Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiInstagram (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Instagram\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.937H5.563a2.5,2.5,0,0,1-2.5-2.5V5.563a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.437A2.5,2.5,0,0,1,18.437,20.937ZM5.563,4.063a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,16.594A4.595,4.595,0,1,1,16.6,12,4.6,4.6,0,0,1,12,16.594ZM12,8.4A3.595,3.595,0,1,0,15.6,12,3.6,3.6,0,0,0,12,8.4Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"17.2\",\"cy\":\"6.83\",\"r\":\"1.075\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiKeyboard (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Keyboard\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.437,18.5H4.562a2.5,2.5,0,0,1-2.5-2.5V8a2.5,2.5,0,0,1,2.5-2.5H19.437a2.5,2.5,0,0,1,2.5,2.5v8A2.5,2.5,0,0,1,19.437,18.5ZM4.562,6.5A1.5,1.5,0,0,0,3.062,8v8a1.5,1.5,0,0,0,1.5,1.5H19.437a1.5,1.5,0,0,0,1.5-1.5V8a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.548,16.5h12.9a.5.5,0,0,0,0-1H5.548a.5.5,0,0,0,0,1Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.82\",\"cy\":\"9.248\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"9.94\",\"cy\":\"9.248\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"14.06\",\"cy\":\"9.248\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.18\",\"cy\":\"9.248\",\"r\":\"0.75\"},\"child\":[]}]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.82\",\"cy\":\"12.998\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"9.94\",\"cy\":\"12.998\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"14.06\",\"cy\":\"12.998\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"18.18\",\"cy\":\"12.998\",\"r\":\"0.75\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiLaptop (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Laptop\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.485,16.155a.992.992,0,0,0-.77-.36h-.33V6.565a2.5,2.5,0,0,0-2.5-2.5H6.115a2.5,2.5,0,0,0-2.5,2.5V15.8h-.34a1,1,0,0,0-.98,1.17l.3,1.73a1.5,1.5,0,0,0,1.48,1.24h15.85a1.5,1.5,0,0,0,1.48-1.24l.3-1.73A.986.986,0,0,0,21.485,16.155ZM4.615,6.565a1.5,1.5,0,0,1,1.5-1.5h11.77a1.5,1.5,0,0,1,1.5,1.5V15.8H4.615Zm15.8,11.96a.494.494,0,0,1-.49.41H4.075a.494.494,0,0,1-.49-.41l-.31-1.73h17.44Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiLemon (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Lemon\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6,20.924a2.172,2.172,0,0,1-1.545-.642l-.734-.733a2.207,2.207,0,0,1-.16-2.947,1.18,1.18,0,0,0,.272-1.117A9.105,9.105,0,0,1,6.205,6.208a9.1,9.1,0,0,1,9.277-2.371,1.149,1.149,0,0,0,1.062-.229l.055-.044a2.205,2.205,0,0,1,2.946.161l.734.733a2.207,2.207,0,0,1,.16,2.947,1.179,1.179,0,0,0-.272,1.116A9.11,9.11,0,0,1,17.8,17.8,9.109,9.109,0,0,1,8.518,20.17a1.14,1.14,0,0,0-1.062.229A2.324,2.324,0,0,1,6,20.924ZM12.812,4.4a8.427,8.427,0,0,0-5.9,2.519,8.1,8.1,0,0,0-2.133,8.246,2.149,2.149,0,0,1-.395,2.014,1.227,1.227,0,0,0,.044,1.667l.734.733a1.209,1.209,0,0,0,1.613.088,2.175,2.175,0,0,1,2.067-.438,8.1,8.1,0,0,0,8.246-2.133,8.1,8.1,0,0,0,2.133-8.246,2.144,2.144,0,0,1,.395-2.013,1.229,1.229,0,0,0-.044-1.668l-.734-.733a1.206,1.206,0,0,0-1.612-.089l-.052.042a2.148,2.148,0,0,1-2.016.4A7.213,7.213,0,0,0,12.812,4.4Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.457,12.286a.523.523,0,0,1-.178-.032.5.5,0,0,1-.29-.646,9.841,9.841,0,0,1,5.338-5.5.5.5,0,1,1,.386.921,8.845,8.845,0,0,0-4.789,4.939A.5.5,0,0,1,6.457,12.286Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLight (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Light\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,18.09A6.09,6.09,0,1,1,18.09,12,6.1,6.1,0,0,1,12,18.09ZM12,6.91A5.09,5.09,0,1,0,17.09,12,5.1,5.1,0,0,0,12,6.91Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.5,2.568v1.6a.5.5,0,1,0,1,0v-1.6a.5.5,0,1,0-1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.5,21.432v-1.6a.5.5,0,0,0-1,0v1.6a.5.5,0,1,0,1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21.432,11.5h-1.6a.5.5,0,0,0,0,1h1.6a.5.5,0,1,0,0-1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M2.568,12.5h1.6a.5.5,0,1,0,0-1h-1.6a.5.5,0,1,0,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.316,4.977l-.992.992-.141.141a.514.514,0,0,0-.146.353.508.508,0,0,0,.146.354.5.5,0,0,0,.354.146.515.515,0,0,0,.353-.146l.992-.992.141-.141a.515.515,0,0,0,.147-.354.508.508,0,0,0-.147-.353.5.5,0,0,0-.353-.147.522.522,0,0,0-.354.147Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.684,19.023l.992-.992.141-.141a.514.514,0,0,0,.146-.353.508.508,0,0,0-.146-.354.5.5,0,0,0-.354-.146.515.515,0,0,0-.353.146l-.992.992-.141.141a.515.515,0,0,0-.147.354.508.508,0,0,0,.147.353.5.5,0,0,0,.353.147.522.522,0,0,0,.354-.147Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19.023,18.316l-.992-.992-.141-.141a.514.514,0,0,0-.353-.146.508.508,0,0,0-.354.146.5.5,0,0,0-.146.354.515.515,0,0,0,.146.353l.992.992.141.141a.515.515,0,0,0,.354.147.508.508,0,0,0,.353-.147.5.5,0,0,0,.147-.353.522.522,0,0,0-.147-.354Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4.977,5.684l.992.992.141.141a.514.514,0,0,0,.353.146.508.508,0,0,0,.354-.146.5.5,0,0,0,.146-.354.515.515,0,0,0-.146-.353l-.992-.992-.141-.141A.515.515,0,0,0,5.33,4.83a.508.508,0,0,0-.353.147.5.5,0,0,0-.147.353.522.522,0,0,0,.147.354Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLineHeight (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Line_Height\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.439,4.062h-9a.5.5,0,1,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.439,9.686h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.439,15.31h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.439,20.934h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.208,18.8a.5.5,0,0,1,.71-.71l1.14,1.14V4.775l-1.14,1.14a.513.513,0,0,1-.71,0,.5.5,0,0,1,0-.71l2-2a.494.494,0,0,1,.34-.14.549.549,0,0,1,.37.14l2,2a.524.524,0,0,1,0,.71.5.5,0,0,1-.71,0l-1.15-1.15v14.47l1.15-1.15a.5.5,0,1,1,.71.71l-2,2a.513.513,0,0,1-.71,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLink (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Link\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.9,8a4.055,4.055,0,0,1,1.352.135,2.511,2.511,0,0,1-.7,4.863.5.5,0,0,0,0,1,3.508,3.508,0,0,0,2.944-5.2A3.557,3.557,0,0,0,11.434,7H5.59A3.5,3.5,0,0,0,5.4,14c.724.041,1.458,0,2.183,0a.5.5,0,0,0,0-1h0c-1.323,0-2.915.262-3.891-.843A2.522,2.522,0,0,1,5.59,8Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.41,17a3.5,3.5,0,0,0,.192-6.994c-.724-.041-1.458,0-2.183,0a.5.5,0,0,0,0,1h0c1.323,0,2.915-.262,3.891.843A2.522,2.522,0,0,1,18.41,16H13.1a4.055,4.055,0,0,1-1.352-.135,2.511,2.511,0,0,1,.7-4.863.5.5,0,0,0,0-1,3.508,3.508,0,0,0-2.944,5.2A3.557,3.557,0,0,0,12.566,17Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLinkedin (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"LinkedIn\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.44,3.06H5.56a2.507,2.507,0,0,0-2.5,2.5V18.44a2.507,2.507,0,0,0,2.5,2.5H18.44a2.5,2.5,0,0,0,2.5-2.5V5.56A2.5,2.5,0,0,0,18.44,3.06Zm1.5,15.38a1.511,1.511,0,0,1-1.5,1.5H5.56a1.511,1.511,0,0,1-1.5-1.5V5.56a1.511,1.511,0,0,1,1.5-1.5H18.44a1.511,1.511,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6.376,10.748a1,1,0,1,1,2,0v6.5h0a1,1,0,0,1-2,0Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"7.376\",\"cy\":\"6.744\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.62,13.37v3.88a1,1,0,1,1-2,0V13.37a1.615,1.615,0,1,0-3.23,0v3.88a1,1,0,0,1-2,0v-6.5a1.016,1.016,0,0,1,1-1,.94.94,0,0,1,.84.47,3.609,3.609,0,0,1,5.39,3.15Z\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiLocationArrow1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Location_Arrow_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.472,20.937a1.438,1.438,0,0,1-1.3-.812L10.3,14.343a1.418,1.418,0,0,0-.642-.641L3.874,10.831A1.462,1.462,0,0,1,4.06,8.136l14.952-5a1.46,1.46,0,0,1,1.849,1.847l-5,14.952a1.439,1.439,0,0,1-1.284.994C14.543,20.936,14.507,20.937,14.472,20.937ZM19.479,4.063a.488.488,0,0,0-.149.024h0l-14.952,5a.46.46,0,0,0-.058.849L10.1,12.805A2.444,2.444,0,0,1,11.2,13.9l2.87,5.782a.443.443,0,0,0,.445.255.45.45,0,0,0,.4-.312l5-14.953a.462.462,0,0,0-.433-.607Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiLocationOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Location_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.2,14.462a.5.5,0,0,1-.417-.775A6.791,6.791,0,0,0,18.831,9.06a6.909,6.909,0,0,0-6.022-5.946A6.834,6.834,0,0,0,8.252,4.175a.5.5,0,1,1-.545-.838,7.882,7.882,0,0,1,10.909,10.9A.5.5,0,0,1,18.2,14.462Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M4,3.3a.5.5,0,0,0-.7.7l1.92,1.92a7.784,7.784,0,0,0-1.11,4.03A7.879,7.879,0,0,0,5.55,14.5l5.06,6.74a1.724,1.724,0,0,0,1.39.69,1.705,1.705,0,0,0,1.38-.69l3.06-4.09c.5.49.99.99,1.48,1.48.7.69,1.39,1.38,2.08,2.07.45.46,1.16-.25.7-.71Zm8.58,17.34a.734.734,0,0,1-.58.29.754.754,0,0,1-.59-.29l-5.05-6.73a6.9,6.9,0,0,1-.41-7.26q1.5,1.515,3.01,3.01,3.39,3.39,6.77,6.78Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLocationOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Location_On\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.933a1.715,1.715,0,0,1-1.384-.691L5.555,14.5a7.894,7.894,0,1,1,12.885-.009L13.385,21.24A1.717,1.717,0,0,1,12,21.933ZM11.992,3.066A6.81,6.81,0,0,0,7.414,4.815a6.891,6.891,0,0,0-1.05,9.1l5.051,6.727a.725.725,0,0,0,.584.292h0a.732.732,0,0,0,.586-.292l5.044-6.734A6.874,6.874,0,0,0,12.81,3.113,7.277,7.277,0,0,0,11.992,3.066Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,12.5A2.5,2.5,0,1,1,14.5,10,2.5,2.5,0,0,1,12,12.5Zm0-4A1.5,1.5,0,1,0,13.5,10,1.5,1.5,0,0,0,12,8.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLock (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Lock\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.44,9.33h-1.1V6.4a4.34,4.34,0,0,0-8.68,0V9.33H6.56a2.5,2.5,0,0,0-2.5,2.5v7.61a2.507,2.507,0,0,0,2.5,2.5H17.44a2.507,2.507,0,0,0,2.5-2.5V11.83A2.5,2.5,0,0,0,17.44,9.33ZM8.66,6.4a3.34,3.34,0,0,1,6.68,0V9.33H8.66ZM18.94,19.44a1.511,1.511,0,0,1-1.5,1.5H6.56a1.511,1.511,0,0,1-1.5-1.5V11.83a1.5,1.5,0,0,1,1.5-1.5H17.44a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13,14.95a.984.984,0,0,1-.5.86v1.5a.5.5,0,0,1-1,0v-1.5a.984.984,0,0,1-.5-.86,1,1,0,0,1,2,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLogin (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Login\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.944,18.432a2.577,2.577,0,0,1-2.729,2.5c-2.153.012-4.307,0-6.46,0a.5.5,0,0,1,0-1c2.2,0,4.4.032,6.6,0,1.107-.016,1.589-.848,1.589-1.838V5.63a1.545,1.545,0,0,0-.969-1.471,3.027,3.027,0,0,0-1.061-.095H11.755a.5.5,0,0,1,0-1c2.225,0,4.465-.085,6.688,0a2.566,2.566,0,0,1,2.5,2.67Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.794,12.354a.459.459,0,0,0,.138-.312A.3.3,0,0,0,15.938,12a.29.29,0,0,0-.006-.041.455.455,0,0,0-.138-.313L12.125,7.978a.5.5,0,0,0-.707.707L14.234,11.5H3.492a.5.5,0,0,0,0,1H14.234l-2.816,2.815a.5.5,0,0,0,.707.707Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLogout (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Logout\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.968,18.448a2.577,2.577,0,0,1-2.73,2.5c-2.153.012-4.306,0-6.459,0a.5.5,0,0,1,0-1c2.2,0,4.4.032,6.6,0,1.107-.016,1.589-.848,1.589-1.838V5.647A1.546,1.546,0,0,0,19,4.175a3.023,3.023,0,0,0-1.061-.095H11.779a.5.5,0,0,1,0-1c2.224,0,4.465-.085,6.687,0a2.567,2.567,0,0,1,2.5,2.67Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.176,11.663a.455.455,0,0,0-.138.311c0,.015,0,.028-.006.043s0,.027.006.041a.457.457,0,0,0,.138.312l3.669,3.669a.5.5,0,0,0,.707-.707L4.737,12.516H15.479a.5.5,0,0,0,0-1H4.737L7.552,8.7a.5.5,0,0,0-.707-.707Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiLollipop (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Lollipop\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18,6.565h-.19a6,6,0,0,0-11.62,0H6a1.5,1.5,0,1,0,0,3h.19a5.992,5.992,0,0,0,5.31,4.48v7.39a.5.5,0,0,0,.5.5.5.5,0,0,0,.5-.5v-7.39a6.013,6.013,0,0,0,5.31-4.48H18a1.5,1.5,0,1,0,0-3Zm-6-3.5a4.991,4.991,0,0,1,4.77,3.5H7.23A4.991,4.991,0,0,1,12,3.065Zm0,10a4.991,4.991,0,0,1-4.77-3.5h9.54A4.991,4.991,0,0,1,12,13.065Zm6-4.5H6a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5H18a.5.5,0,0,1,.5.5A.508.508,0,0,1,18,8.565Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMail (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Mail\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.435,4.065H4.565a2.5,2.5,0,0,0-2.5,2.5v10.87a2.5,2.5,0,0,0,2.5,2.5h14.87a2.5,2.5,0,0,0,2.5-2.5V6.565A2.5,2.5,0,0,0,19.435,4.065Zm-14.87,1h14.87a1.489,1.489,0,0,1,1.49,1.39c-2.47,1.32-4.95,2.63-7.43,3.95a6.172,6.172,0,0,1-1.06.53,2.083,2.083,0,0,1-1.67-.39c-1.42-.75-2.84-1.51-4.25-2.26-1.14-.6-2.3-1.21-3.44-1.82A1.491,1.491,0,0,1,4.565,5.065Zm16.37,12.37a1.5,1.5,0,0,1-1.5,1.5H4.565a1.5,1.5,0,0,1-1.5-1.5V7.6c2.36,1.24,4.71,2.5,7.07,3.75a5.622,5.622,0,0,0,1.35.6,2.872,2.872,0,0,0,2-.41c1.45-.76,2.89-1.53,4.34-2.29,1.04-.56,2.07-1.1,3.11-1.65Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMapPin (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Map_Pin\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,2.06a5.5,5.5,0,0,0-.5,10.97v8.41a.5.5,0,0,0,.5.5.5.5,0,0,0,.5-.5V13.03A5.5,5.5,0,0,0,12,2.06Zm0,10a4.5,4.5,0,1,1,4.5-4.5A4.5,4.5,0,0,1,12,12.06Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMap (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Map\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.21,4.576a1.906,1.906,0,0,0-1.63-.35l-3.53.89a1.086,1.086,0,0,1-.44,0L9.63,3.876a2.041,2.041,0,0,0-.92,0L4.5,4.936a1.893,1.893,0,0,0-1.44,1.84v11.15a1.871,1.871,0,0,0,.73,1.5,1.906,1.906,0,0,0,1.63.35l3.53-.89a1.086,1.086,0,0,1,.44,0l4.98,1.24a2.315,2.315,0,0,0,.46.05,2.4,2.4,0,0,0,.46-.05l4.21-1.06a1.893,1.893,0,0,0,1.44-1.84V6.076A1.871,1.871,0,0,0,20.21,4.576ZM8.67,17.926l-3.49.87a.89.89,0,0,1-1.12-.87V6.776a.9.9,0,0,1,.68-.87l3.93-.99Zm5.66,1.16-4.66-1.16V4.916l4.66,1.16Zm5.61-1.86a.9.9,0,0,1-.68.87l-3.93.99V6.076l3.49-.87a.908.908,0,0,1,.78.16.886.886,0,0,1,.34.71Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMaximize1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Maximize_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.065,16.16a.5.5,0,0,1,1,0v3.07l.01-.01,6.07-6.07a.5.5,0,0,1,.71.71c-.29.29-.58.57-.87.86-1.74,1.74-3.47,3.48-5.21,5.22h3.07a.5.5,0,0,1,0,1H3.565a.429.429,0,0,1-.34-.14c-.01-.01-.02-.01-.02-.02a.384.384,0,0,1-.13-.26C3.066,20.442,3.065,16.16,3.065,16.16Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.935,3.56V7.84a.5.5,0,0,1-1,0V4.77l-.01.01q-3.045,3.03-6.07,6.07a.5.5,0,0,1-.71-.71c.29-.29.58-.57.86-.86,1.75-1.74,3.48-3.48,5.22-5.22h-3.07a.5.5,0,0,1,0-1h4.28a.429.429,0,0,1,.34.14c.01.01.02.01.02.02A.429.429,0,0,1,20.935,3.56Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMaximize2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Maximize_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.513,3.066H4.93a2.058,2.058,0,0,0-1.15.22,1.6,1.6,0,0,0-.717,1.437v5.793a.5.5,0,0,0,1,0V5.107a2.521,2.521,0,0,1,.022-.689c.115-.373.469-.352.777-.352h5.651a.5.5,0,0,0,0-1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.063,13.488v5.583a2.057,2.057,0,0,0,.221,1.15,1.6,1.6,0,0,0,1.436.717h5.793a.5.5,0,0,0,0-1H5.1a2.483,2.483,0,0,1-.689-.022c-.372-.115-.352-.469-.352-.777V13.488a.5.5,0,0,0-1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.487,20.934H19.07a2.058,2.058,0,0,0,1.15-.22,1.6,1.6,0,0,0,.717-1.437V13.484a.5.5,0,0,0-1,0v5.409a2.521,2.521,0,0,1-.022.689c-.115.373-.469.352-.777.352H13.487a.5.5,0,0,0,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.937,10.512V4.929a2.057,2.057,0,0,0-.221-1.15,1.6,1.6,0,0,0-1.436-.717H13.487a.5.5,0,0,0,0,1H18.9a2.483,2.483,0,0,1,.689.022c.372.115.352.469.352.777v5.651a.5.5,0,0,0,1,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMedal (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Medal\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.692,3.755a1.519,1.519,0,0,0-1.27-.69h-4.41a1.487,1.487,0,0,0-1.36.87L12,7.485l-1.66-3.55a1.487,1.487,0,0,0-1.36-.87H4.572a1.5,1.5,0,0,0-1.35,2.14l3.73,8.02a5.638,5.638,0,0,0-.46,2.21,5.5,5.5,0,0,0,11,0,5.419,5.419,0,0,0-.46-2.2l3.75-8.03A1.525,1.525,0,0,0,20.692,3.755ZM4.122,4.785a.527.527,0,0,1,.03-.49.494.494,0,0,1,.42-.23h4.41a.507.507,0,0,1,.46.29l2.61,5.58h-.06a5.505,5.505,0,0,0-4.43,2.25Zm7.87,15.15a4.5,4.5,0,1,1,4.5-4.5A4.5,4.5,0,0,1,11.992,19.935Zm7.89-15.15-3.46,7.4a5.454,5.454,0,0,0-3.21-2.11l-.66-1.42,2-4.3a.507.507,0,0,1,.46-.29h4.41a.482.482,0,0,1,.42.23A.505.505,0,0,1,19.882,4.785Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.077,16.88l1.024.538a.174.174,0,0,0,.253-.184l-.2-1.14a.174.174,0,0,1,.051-.154l.828-.807a.175.175,0,0,0-.1-.3L12.8,14.669a.177.177,0,0,1-.132-.1l-.512-1.037a.174.174,0,0,0-.313,0l-.512,1.037a.174.174,0,0,1-.131.1l-1.145.166a.175.175,0,0,0-.1.3l.828.807a.174.174,0,0,1,.05.154l-.2,1.14a.174.174,0,0,0,.253.184l1.024-.538A.172.172,0,0,1,12.077,16.88Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMedicalCase (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Medical_Case\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,6.465h-1.43v-.9a2.5,2.5,0,0,0-2.5-2.5h-5a2.5,2.5,0,0,0-2.5,2.5v.9H5.565a2.5,2.5,0,0,0-2.5,2.5v9.47a2.5,2.5,0,0,0,2.5,2.5h12.87a2.5,2.5,0,0,0,2.5-2.5V8.965A2.5,2.5,0,0,0,18.435,6.465Zm-10.43-.9a1.5,1.5,0,0,1,1.5-1.5h5a1.5,1.5,0,0,1,1.5,1.5v.9h-8Zm11.93,12.87a1.5,1.5,0,0,1-1.5,1.5H5.565a1.5,1.5,0,0,1-1.5-1.5V8.965a1.5,1.5,0,0,1,1.5-1.5h12.87a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.505,13.675a.5.5,0,0,1-.5.5h-1.5v1.5a.5.5,0,0,1-.5.5.5.5,0,0,1-.5-.5v-1.5h-1.5a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5h1.5v-1.5a.5.5,0,0,1,.5-.5.508.508,0,0,1,.5.5v1.5h1.5A.508.508,0,0,1,14.505,13.675Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMedicalClipboard (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Medical_Clipboard\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.44,3.5H15.75V2.97a.949.949,0,0,0-1-.91H9.25a.949.949,0,0,0-1,.91V3.5H6.56A2.5,2.5,0,0,0,4.06,6V19.44a2.5,2.5,0,0,0,2.5,2.5H17.44a2.5,2.5,0,0,0,2.5-2.5V6A2.5,2.5,0,0,0,17.44,3.5ZM9.25,3.06l5.5.01V4.19c0,.61-.69,1.12-1.5,1.12h-2.5c-.82,0-1.5-.51-1.5-1.12Zm9.69,16.38a1.511,1.511,0,0,1-1.5,1.5H6.56a1.5,1.5,0,0,1-1.5-1.5V6a1.5,1.5,0,0,1,1.5-1.5H8.28a2.4,2.4,0,0,0,2.47,1.81h2.5A2.4,2.4,0,0,0,15.72,4.5h1.72A1.5,1.5,0,0,1,18.94,6Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,12.71a.5.5,0,0,1-.5.5H12.5v1.5a.5.5,0,0,1-.5.5.5.5,0,0,1-.5-.5v-1.5H10a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5h1.5v-1.5a.5.5,0,0,1,.5-.5.508.508,0,0,1,.5.5v1.5H14A.508.508,0,0,1,14.5,12.71Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMedicalCross (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Medical_Cross\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.943,20.93H11.057a2.388,2.388,0,0,1-2.386-2.386V15.3l-3.215.029a2.39,2.39,0,0,1-2.387-2.386V11.057A2.39,2.39,0,0,1,5.456,8.67H8.7L8.671,5.456A2.388,2.388,0,0,1,11.057,3.07h1.886a2.388,2.388,0,0,1,2.386,2.386V8.7l3.215-.03a2.39,2.39,0,0,1,2.387,2.387v1.886a2.39,2.39,0,0,1-2.387,2.386H15.3l.028,3.215A2.388,2.388,0,0,1,12.943,20.93ZM5.456,9.67a1.388,1.388,0,0,0-1.387,1.387v1.886a1.388,1.388,0,0,0,1.387,1.386H8.7a.972.972,0,0,1,.972.971v3.244a1.388,1.388,0,0,0,1.386,1.386h1.886a1.388,1.388,0,0,0,1.386-1.386V15.3a.972.972,0,0,1,.972-.971h3.243a1.388,1.388,0,0,0,1.387-1.386V11.057A1.388,1.388,0,0,0,18.544,9.67H15.3a.972.972,0,0,1-.972-.97V5.456A1.388,1.388,0,0,0,12.943,4.07H11.057A1.388,1.388,0,0,0,9.671,5.456V8.7a.972.972,0,0,1-.972.97Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMedicalMask (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Medical_Mask\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.435,12.53H19.5V9.17h1.94a.5.5,0,0,0,.5-.5.5.5,0,0,0-.5-.5H19.5V7.23A2.5,2.5,0,0,0,17,4.73H7a2.507,2.507,0,0,0-2.5,2.5v.94H2.565a.5.5,0,0,0-.5.5.5.5,0,0,0,.5.5H4.5v3.36H2.565a.5.5,0,0,0-.5.5.5.5,0,0,0,.5.5H4.5v.33a4.283,4.283,0,0,0,2.43,3.84l1.74.82a7.79,7.79,0,0,0,6.67,0l1.73-.82h.01a4.274,4.274,0,0,0,2.42-3.84v-.33h1.94a.5.5,0,0,0,.5-.5A.5.5,0,0,0,21.435,12.53ZM18.5,13.86a3.238,3.238,0,0,1-1.85,2.93l-1.73.82a6.767,6.767,0,0,1-5.83,0l-1.73-.82A3.248,3.248,0,0,1,5.5,13.86V7.23A1.5,1.5,0,0,1,7,5.73H17a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,14.534h-5a.5.5,0,0,1,0-1h5a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16,10.168H8a.5.5,0,1,1,0-1h8a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMemoPad (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Memo_Pad\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.44,2.065H6.56a2.507,2.507,0,0,0-2.5,2.5v14.87a2.507,2.507,0,0,0,2.5,2.5H17.44a2.5,2.5,0,0,0,2.5-2.5V4.565A2.5,2.5,0,0,0,17.44,2.065Zm1.5,17.37a1.5,1.5,0,0,1-1.5,1.5H6.56a1.5,1.5,0,0,1-1.5-1.5V6.505H18.94Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M7.549,9.506h0a.5.5,0,0,1,0-1h8.909a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M7.549,12.506h0a.5.5,0,0,1,0-1h6.5a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M7.566,18.374h0a.5.5,0,1,1,0-1h3.251a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiMenuBurger (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Menu_Burger\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.563,4.063c-0.276,-0 -0.5,-0.224 -0.5,-0.5c-0,-0.276 0.224,-0.5 0.5,-0.5l16.874,-0.001c0.276,-0 0.5,0.224 0.5,0.5c0,0.276 -0.224,0.5 -0.5,0.5l-16.874,0.001Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.563,12.501c-0.276,-0 -0.5,-0.224 -0.5,-0.5c-0,-0.276 0.224,-0.5 0.5,-0.5l16.874,-0.002c0.276,0 0.5,0.224 0.5,0.5c0,0.276 -0.224,0.5 -0.5,0.5l-16.874,0.002Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.563,20.939c-0.276,-0 -0.5,-0.224 -0.5,-0.5c-0,-0.276 0.224,-0.5 0.5,-0.5l16.874,-0.002c0.276,0 0.5,0.224 0.5,0.5c0,0.276 -0.224,0.5 -0.5,0.5l-16.874,0.002Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMenuFries (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Menu_Fries\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,19.937c0.276,0 0.5,0.224 0.5,0.5c0,0.276 -0.224,0.5 -0.5,0.5l-16.874,0.002c-0.276,-0 -0.5,-0.224 -0.5,-0.5c-0,-0.276 0.224,-0.5 0.5,-0.5l16.874,-0.002Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,11.5c0.276,-0 0.5,0.224 0.5,0.5c0,0.276 -0.224,0.5 -0.5,0.5l-10,0.001c-0.276,-0 -0.5,-0.224 -0.5,-0.5c-0,-0.276 0.224,-0.5 0.5,-0.5l10,-0.001Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,3.062c0.276,-0 0.5,0.224 0.5,0.5c0,0.276 -0.224,0.5 -0.5,0.5l-16.874,0.001c-0.276,-0 -0.5,-0.224 -0.5,-0.5c-0,-0.276 0.224,-0.5 0.5,-0.5l16.874,-0.001Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMenuKebab (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Menu_Kebab\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,12c0,1.38 -1.12,2.5 -2.5,2.5c-1.38,-0 -2.5,-1.12 -2.5,-2.5c0,-1.38 1.12,-2.5 2.5,-2.5c1.38,-0 2.5,1.12 2.5,2.5Zm-1,-0c0,-0.828 -0.672,-1.5 -1.5,-1.5c-0.828,-0 -1.5,0.672 -1.5,1.5c0,0.828 0.672,1.5 1.5,1.5c0.828,-0 1.5,-0.672 1.5,-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,4.563c0,1.38 -1.12,2.5 -2.5,2.5c-1.38,-0 -2.5,-1.12 -2.5,-2.5c0,-1.38 1.12,-2.5 2.5,-2.5c1.38,-0 2.5,1.12 2.5,2.5Zm-1,-0c0,-0.828 -0.672,-1.5 -1.5,-1.5c-0.828,-0 -1.5,0.672 -1.5,1.5c0,0.828 0.672,1.5 1.5,1.5c0.828,-0 1.5,-0.672 1.5,-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,19.437c0,1.38 -1.12,2.5 -2.5,2.5c-1.38,0 -2.5,-1.12 -2.5,-2.5c0,-1.38 1.12,-2.5 2.5,-2.5c1.38,0 2.5,1.12 2.5,2.5Zm-1,0c0,-0.828 -0.672,-1.5 -1.5,-1.5c-0.828,0 -1.5,0.672 -1.5,1.5c0,0.828 0.672,1.5 1.5,1.5c0.828,0 1.5,-0.672 1.5,-1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMicrochip (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Microchip\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13,14.5H11A1.5,1.5,0,0,1,9.5,13V11A1.5,1.5,0,0,1,11,9.5h2A1.5,1.5,0,0,1,14.5,11v2A1.5,1.5,0,0,1,13,14.5Zm-2-4a.5.5,0,0,0-.5.5v2a.5.5,0,0,0,.5.5h2a.5.5,0,0,0,.5-.5V11a.5.5,0,0,0-.5-.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.435,14.5h-1.93v-5h1.93a.5.5,0,0,0,0-1h-1.93V8a2.507,2.507,0,0,0-2.5-2.5h-.5V3.565a.508.508,0,0,0-.5-.5.5.5,0,0,0-.5.5V5.5h-5V3.565a.508.508,0,0,0-.5-.5.5.5,0,0,0-.5.5V5.5h-.5A2.5,2.5,0,0,0,5.505,8v.5H3.565a.5.5,0,1,0,0,1h1.94v5H3.565a.5.5,0,1,0,0,1h1.94V16a2.5,2.5,0,0,0,2.5,2.5h.5v1.94a.5.5,0,0,0,1,0V18.5h5v1.94a.5.5,0,0,0,1,0V18.5h.5a2.507,2.507,0,0,0,2.5-2.5v-.5h1.93a.5.5,0,0,0,0-1ZM17.505,16a1.5,1.5,0,0,1-1.5,1.5h-8a1.5,1.5,0,0,1-1.5-1.5V8a1.5,1.5,0,0,1,1.5-1.5h8a1.511,1.511,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMicrophoneOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Microphone_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.5,7.046v4.72a.5.5,0,0,1-1,0V9.946H14a.5.5,0,0,1,0-1h1.5v-2H13.57a.5.5,0,0,1,0-1h1.87a3.23,3.23,0,0,0-.2-.72,3.533,3.533,0,0,0-6.16-.59c-.36.53-1.23.03-.87-.5a4.509,4.509,0,0,1,7.71.21A5.255,5.255,0,0,1,16.5,7.046Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.14,19.436q-2.625-2.64-5.27-5.28Q10.685,9.986,6.51,5.8c-.65-.64-1.3-1.29-1.94-1.94a.5.5,0,0,0-.71.71Q5.69,6.381,7.5,8.206v3.92a4.591,4.591,0,0,0,3.59,4.61,4.629,4.629,0,0,0,3.9-1.04c.24.24.48.47.71.71a5.252,5.252,0,0,1-6.62.67,5.2,5.2,0,0,1-2.05-2.76,7.608,7.608,0,0,1-.24-2.33v-2.2a.5.5,0,0,0-1,0,15.463,15.463,0,0,0,.34,4.99,6.276,6.276,0,0,0,5.37,4.17v1.99H8a.5.5,0,0,0,0,1h8a.5.5,0,0,0,0-1H12.5v-2a6.118,6.118,0,0,0,3.91-1.82l1.08,1.08c.65.65,1.3,1.3,1.95,1.94A.5.5,0,0,0,20.14,19.436Zm-11.2-5.42a3.991,3.991,0,0,1-.44-2.03V9.206l5.77,5.77A3.521,3.521,0,0,1,8.94,14.016Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMicrophoneOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Microphone_On\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.989,2.065a4.507,4.507,0,0,0-4.5,4.5v5.76a4.5,4.5,0,0,0,9,0V6.565A4.507,4.507,0,0,0,11.989,2.065Zm0,13.76a3.5,3.5,0,0,1-3.5-3.5V6.565a3.5,3.5,0,0,1,6.94-.62h-1.87a.5.5,0,0,0-.5.5.5.5,0,0,0,.5.5h1.93v2h-1.93a.5.5,0,0,0-.5.5.508.508,0,0,0,.5.5h1.93v2h-1.94a.508.508,0,0,0-.5.5.515.515,0,0,0,.5.5h1.88A3.492,3.492,0,0,1,11.989,15.825Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.489,18.925v2.01h3.5a.5.5,0,0,1,0,1h-8a.5.5,0,0,1,0-1h3.5v-1.99a6.055,6.055,0,0,1-2.74-.88,6.291,6.291,0,0,1-2.97-5.14c-.03-1.04,0-2.09,0-3.13a.5.5,0,0,1,1,0c0,1.04-.03,2.09,0,3.13A5.212,5.212,0,0,0,17.2,12.7c.01-.96,0-1.93,0-2.9a.5.5,0,0,1,1,0,26.322,26.322,0,0,1-.08,3.97A6.235,6.235,0,0,1,12.489,18.925Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMinimize1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Minimize_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11,17.78a.5.5,0,0,1-1,0V14.71L3.92,20.79a.5.5,0,0,1-.71-.71c.29-.29.58-.57.87-.86C5.82,17.48,7.55,15.74,9.3,14H6.22a.5.5,0,0,1,0-1H10.5a.429.429,0,0,1,.34.14c.01.01.02.01.02.02a.384.384,0,0,1,.13.26Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.7,10h3.08a.5.5,0,0,1,0,1H13.5a.429.429,0,0,1-.34-.14c-.01-.01-.02-.01-.02-.02a.384.384,0,0,1-.13-.26L13,6.22a.5.5,0,0,1,1,0V9.29l.01-.01,6.07-6.07a.5.5,0,0,1,.71.71Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMinimize2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Minimize_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.563,11.016H9.146A2.057,2.057,0,0,0,10.3,10.8a1.6,1.6,0,0,0,.717-1.436V3.566a.5.5,0,0,0-1,0V8.974a2.481,2.481,0,0,1-.022.689c-.115.373-.468.353-.777.353H3.563a.5.5,0,0,0,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.013,20.438V14.855a2.065,2.065,0,0,0-.22-1.15,1.6,1.6,0,0,0-1.437-.717H3.563a.5.5,0,0,0,0,1H8.972a2.482,2.482,0,0,1,.689.022c.373.115.352.469.352.777v5.651a.5.5,0,0,0,1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,12.984H14.854a2.057,2.057,0,0,0-1.15.221,1.6,1.6,0,0,0-.717,1.436v5.793a.5.5,0,0,0,1,0V15.026a2.481,2.481,0,0,1,.022-.689c.115-.373.468-.353.777-.353h5.651a.5.5,0,0,0,0-1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.987,3.562V9.145a2.065,2.065,0,0,0,.22,1.15,1.6,1.6,0,0,0,1.437.717h5.793a.5.5,0,0,0,0-1H15.028a2.482,2.482,0,0,1-.689-.022c-.373-.115-.352-.469-.352-.777V3.562a.5.5,0,0,0-1,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMobile1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Mobile_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10,18.933h4a.5.5,0,0,0,0-1H10a.5.5,0,0,0,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.727,21.937H7.273a2.384,2.384,0,0,1-2.239-2.5V4.563a2.384,2.384,0,0,1,2.239-2.5h9.454a2.384,2.384,0,0,1,2.239,2.5V19.437A2.384,2.384,0,0,1,16.727,21.937ZM7.273,3.063a1.39,1.39,0,0,0-1.239,1.5V19.437a1.39,1.39,0,0,0,1.239,1.5h9.454a1.39,1.39,0,0,0,1.239-1.5V4.563a1.39,1.39,0,0,0-1.239-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMobile2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Mobile_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"17.937\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.727,21.937H7.273a2.384,2.384,0,0,1-2.239-2.5V4.563a2.384,2.384,0,0,1,2.239-2.5h9.454a2.384,2.384,0,0,1,2.239,2.5V19.437A2.384,2.384,0,0,1,16.727,21.937ZM7.273,3.063a1.39,1.39,0,0,0-1.239,1.5V19.437a1.39,1.39,0,0,0,1.239,1.5h9.454a1.39,1.39,0,0,0,1.239-1.5V4.563a1.39,1.39,0,0,0-1.239-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMobile3 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Mobile_3\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.73,2.065H7.27a2.386,2.386,0,0,0-2.24,2.5v14.87a2.386,2.386,0,0,0,2.24,2.5h9.46a2.386,2.386,0,0,0,2.24-2.5V4.565A2.386,2.386,0,0,0,16.73,2.065Zm1.24,17.37a1.391,1.391,0,0,1-1.24,1.5H7.27a1.391,1.391,0,0,1-1.24-1.5V4.565a1.391,1.391,0,0,1,1.24-1.5H8.8v.51a1,1,0,0,0,1,1h4.4a1,1,0,0,0,1-1v-.51h1.53a1.391,1.391,0,0,1,1.24,1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10,18.934h4a.5.5,0,0,0,0-1H10a.5.5,0,0,0,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMobile4 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Mobile_4\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"circle\",\"attr\":{\"cx\":\"12.003\",\"cy\":\"18.937\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.725,2.065H7.275a2.386,2.386,0,0,0-2.24,2.5v14.87a2.386,2.386,0,0,0,2.24,2.5h9.45a2.379,2.379,0,0,0,2.24-2.5V4.565A2.379,2.379,0,0,0,16.725,2.065Zm1.24,17.37a1.384,1.384,0,0,1-1.24,1.5H7.275a1.391,1.391,0,0,1-1.24-1.5v-2.5h11.93Zm0-3.5H6.035V4.565a1.391,1.391,0,0,1,1.24-1.5h9.45a1.384,1.384,0,0,1,1.24,1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMoneyBill (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Money_Bill\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.44,5.78H4.56a2.507,2.507,0,0,0-2.5,2.5v7.44a2.514,2.514,0,0,0,2.5,2.5H19.44a2.507,2.507,0,0,0,2.5-2.5V8.28A2.5,2.5,0,0,0,19.44,5.78ZM3.06,8.28a1.5,1.5,0,0,1,1.5-1.5H6.04A3.521,3.521,0,0,1,3.06,9.76Zm1.5,8.94a1.511,1.511,0,0,1-1.5-1.5V14.24a3.521,3.521,0,0,1,2.98,2.98Zm16.38-1.5a1.5,1.5,0,0,1-1.5,1.5H17.96a3.521,3.521,0,0,1,2.98-2.98Zm0-2.49a4.528,4.528,0,0,0-3.99,3.99H7.05a4.528,4.528,0,0,0-3.99-3.99V10.77A4.528,4.528,0,0,0,7.05,6.78h9.9a4.528,4.528,0,0,0,3.99,3.99Zm0-3.47a3.521,3.521,0,0,1-2.98-2.98h1.48a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12.002\",\"cy\":\"11.998\",\"r\":\"2\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMoneyCheck1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Money_Check_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.437,18.218H4.563a2.5,2.5,0,0,1-2.5-2.5V8.282a2.5,2.5,0,0,1,2.5-2.5H19.437a2.5,2.5,0,0,1,2.5,2.5v7.436A2.5,2.5,0,0,1,19.437,18.218ZM4.563,6.782a1.5,1.5,0,0,0-1.5,1.5v7.436a1.5,1.5,0,0,0,1.5,1.5H19.437a1.5,1.5,0,0,0,1.5-1.5V8.282a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,12.786H5.064a.5.5,0,0,1,0-1H12a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14,15.714H5.064a.5.5,0,1,1,0-1H14a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"rect\",\"attr\":{\"x\":\"15.436\",\"y\":\"8.283\",\"width\":\"4\",\"height\":\"2\",\"rx\":\"0.5\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiMonitor (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Monitor\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,3.06H5.565a2.5,2.5,0,0,0-2.5,2.5v8.88a2.507,2.507,0,0,0,2.5,2.5h2.91l-.37,3H7a.5.5,0,0,0,0,1h10.01a.5.5,0,0,0,0-1H15.9l-.37-3h2.91a2.507,2.507,0,0,0,2.5-2.5V5.56A2.5,2.5,0,0,0,18.435,3.06ZM14.9,19.94H9.115l.37-3h5.03Zm5.04-5.5a1.5,1.5,0,0,1-1.5,1.5H5.565a1.5,1.5,0,0,1-1.5-1.5V5.56a1.5,1.5,0,0,1,1.5-1.5h12.87a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMountain1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Mountain_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.857,19.525l-6.57-14.96a2.5,2.5,0,0,0-4.58-.01l-6.56,14.96a1,1,0,0,0,.07.96.985.985,0,0,0,.84.46h15.89a1,1,0,0,0,.91-1.41ZM10.627,4.965a1.5,1.5,0,0,1,2.75,0l2.43,5.53-1.45,1.45a.5.5,0,0,1-.71,0l-2.04-2.03a1.5,1.5,0,0,0-1.06-.44h-1.9Zm-6.57,14.96,4.15-9.45h2.34a.491.491,0,0,1,.36.15l2.03,2.03A1.508,1.508,0,0,0,14,13.1a1.491,1.491,0,0,0,1.06-.44l1.18-1.17,3.71,8.45Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMug1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Mug_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.115,5.91V4.97a1.2,1.2,0,0,0-1.2-1.2H4.265a1.2,1.2,0,0,0-1.2,1.2v9.14a11.321,11.321,0,0,0,.8,4.17A3.3,3.3,0,0,0,7,20.23h7.19a3.312,3.312,0,0,0,3.14-1.95,10.989,10.989,0,0,0,.74-3.13l1.04-.52a3.319,3.319,0,0,0,1.83-2.97V9.19A3.326,3.326,0,0,0,18.115,5.91Zm-1.73,12.01a2.3,2.3,0,0,1-2.2,1.31H7a2.312,2.312,0,0,1-2.2-1.31,10.238,10.238,0,0,1-.73-3.81V4.97a.2.2,0,0,1,.2-.2h12.65a.2.2,0,0,1,.2.2v9.14A10.238,10.238,0,0,1,16.385,17.92Zm3.55-6.26a2.287,2.287,0,0,1-1.28,2.07l-.54.27V6.93a2.316,2.316,0,0,1,1.82,2.26Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiMusicNote1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Music_Note_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.05,3.657a2.487,2.487,0,0,0-2.03-.56l-7.88,1.33a2.483,2.483,0,0,0-2.08,2.46v8.82a3,3,0,1,0,1,2.23V9.387l10.88-1.83v6.22a2.936,2.936,0,0,0-2-.77,3,3,0,1,0,3,3V5.567A2.513,2.513,0,0,0,20.05,3.657ZM6.06,19.937a2,2,0,1,1,2-2A1.993,1.993,0,0,1,6.06,19.937Zm11.88-1.93a2,2,0,1,1,2-2A2,2,0,0,1,17.94,18.007Zm2-11.46L9.06,8.377V6.887a1.483,1.483,0,0,1,1.25-1.47l7.88-1.33a1.493,1.493,0,0,1,1.75,1.48Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiNoWaitingSign (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"No_Waiting_Sign\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,2.07a9.93,9.93,0,1,0,7.03,16.95.374.374,0,0,0,.06-.07A9.837,9.837,0,0,0,21.935,12,9.944,9.944,0,0,0,12,2.07Zm0,18.86A8.945,8.945,0,0,1,3.065,12a8.84,8.84,0,0,1,2.28-5.95l12.61,12.61A8.925,8.925,0,0,1,12,20.93Zm6.67-2.98L6.045,5.34a8.934,8.934,0,0,1,12.62,12.61Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPalette (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Palette\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.31,20.93a1.62,1.62,0,0,0,1.62-1.62V15.93a1.62,1.62,0,0,0-1.62-1.62H14.37l4.66-4.66a1.642,1.642,0,0,0,0-2.3L16.64,4.96a1.636,1.636,0,0,0-2.3,0L9.69,9.62V4.56a1.5,1.5,0,0,0-1.5-1.5H4.57a1.5,1.5,0,0,0-1.5,1.5V18.44a2.507,2.507,0,0,0,2.5,2.5ZM9.69,11.04l5.36-5.37a.628.628,0,0,1,.88,0l2.39,2.39a.628.628,0,0,1,0,.88L9.69,17.57ZM4.07,4.56a.5.5,0,0,1,.5-.5H8.19a.5.5,0,0,1,.5.5V8.48H4.07Zm0,4.92H8.69v4.43H4.07ZM7.29,19.93l-1.72.01a1.5,1.5,0,0,1-1.5-1.5V14.91H8.69v3.53a1.5,1.5,0,0,1-1.4,1.49m12.64-.62a.623.623,0,0,1-.62.62H9.19a2.381,2.381,0,0,0,.42-.86l3.76-3.76h5.94a.623.623,0,0,1,.62.62Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"6.382\",\"cy\":\"17.419\",\"r\":\"0.844\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiPaperplane (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Paper_Plane\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.061,11.077,3.741,4.157a.994.994,0,0,0-1.17.32,1,1,0,0,0-.01,1.22l4.49,6a.525.525,0,0,1-.01.62L2.511,18.3a1.02,1.02,0,0,0,0,1.22,1,1,0,0,0,.8.4,1.021,1.021,0,0,0,.38-.07l17.36-6.9a1.006,1.006,0,0,0,.01-1.87ZM3.371,5.087l16.06,6.42H8.061a1.329,1.329,0,0,0-.21-.41Zm-.06,13.82,4.53-5.98a1.212,1.212,0,0,0,.22-.42h11.38Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiParking1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Parking_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.933A9.933,9.933,0,1,1,21.933,12,9.944,9.944,0,0,1,12,21.933ZM12,3.067A8.933,8.933,0,1,0,20.933,12,8.943,8.943,0,0,0,12,3.067Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.569,8.5h-1.75a.749.749,0,0,0-.75.75v5.74a.5.5,0,0,0,.5.5.5.5,0,0,0,.5-.5V13.5h1.5a2.5,2.5,0,0,0,0-5Zm0,4h-1.5v-3h1.5a1.5,1.5,0,0,1,0,3Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiPassport1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Passport_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.5,21.936h-9a2.5,2.5,0,0,1-2.5-2.5V4.564a2.5,2.5,0,0,1,2.5-2.5h9a2.5,2.5,0,0,1,2.5,2.5V19.436A2.5,2.5,0,0,1,16.5,21.936ZM7.5,3.064A1.5,1.5,0,0,0,6,4.564V19.436a1.5,1.5,0,0,0,1.5,1.5h9a1.5,1.5,0,0,0,1.5-1.5V4.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,12.563a3.5,3.5,0,1,1,3.5-3.5A3.5,3.5,0,0,1,12,12.563Zm0-6a2.5,2.5,0,1,0,2.5,2.5A2.5,2.5,0,0,0,12,6.563Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15,18.438H9a.5.5,0,0,1,0-1h6a.5.5,0,1,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiPause1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Pause_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8.25,21.937H6.564a2.5,2.5,0,0,1-2.5-2.5V4.563a2.5,2.5,0,0,1,2.5-2.5H8.25a2.5,2.5,0,0,1,2.5,2.5V19.437A2.5,2.5,0,0,1,8.25,21.937ZM6.564,3.063a1.5,1.5,0,0,0-1.5,1.5V19.437a1.5,1.5,0,0,0,1.5,1.5H8.25a1.5,1.5,0,0,0,1.5-1.5V4.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.436,21.937H15.75a2.5,2.5,0,0,1-2.5-2.5V4.563a2.5,2.5,0,0,1,2.5-2.5h1.686a2.5,2.5,0,0,1,2.5,2.5V19.437A2.5,2.5,0,0,1,17.436,21.937ZM15.75,3.063a1.5,1.5,0,0,0-1.5,1.5V19.437a1.5,1.5,0,0,0,1.5,1.5h1.686a1.5,1.5,0,0,0,1.5-1.5V4.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiPen (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Pen\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.235,11.284a2.3,2.3,0,0,0-3.01-.149L15.444,5.744a2.484,2.484,0,0,0-2.1-1.7l-8.581-.93A1.5,1.5,0,0,0,3.115,4.765l.93,8.579a2.479,2.479,0,0,0,1.7,2.1l5.39,1.77a2.258,2.258,0,0,0-.51,1.43,2.257,2.257,0,0,0,2.25,2.25,2.263,2.263,0,0,0,1.591-.661l5.77-5.769a2.249,2.249,0,0,0,0-3.181Zm-14.18,3.21a1.5,1.5,0,0,1-1.02-1.26l-.9-8.39,4.01,4.01a1.188,1.188,0,0,0,.281,1.221,1.167,1.167,0,1,0,1.649-1.651,1.143,1.143,0,0,0-1.209-.269l-4.02-4.02,8.39.9a1.476,1.476,0,0,1,1.259,1.02l1.931,5.86-4.51,4.51Zm11.709-2.51a1.25,1.25,0,0,1,2.13.891,1.237,1.237,0,0,1-.369.88l-5.771,5.77a1.277,1.277,0,0,1-1.769,0,1.253,1.253,0,0,1,0-1.76Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPenpot (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"id\":\"Penpot\",\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4.415,7.22a.755.755,0,0,0-.35.64v9.67a1.536,1.536,0,0,0,.88,1.38l5.96,2.82a2.618,2.618,0,0,0,2.19,0l5.96-2.82a1.536,1.536,0,0,0,.88-1.38V7.86a.742.742,0,0,0-.36-.64l-2.23-1.15v-1a.98.98,0,0,0-.15-.52l-1.33-2.16a.749.749,0,0,0-1.28,0L13.3,4.5l-.66-1.07A.755.755,0,0,0,12,3.08a.791.791,0,0,0-.64.36l-.65,1.06L9.4,2.39a.749.749,0,0,0-1.28,0L6.805,4.55a.98.98,0,0,0-.15.52v1Zm12.93-.01.7.35-.7.33Zm-2.44-3.43h.64l.5.81h-1.64Zm1.44,1.81V8.36l-.61.29V5.59Zm-2.23,0h.62V9.12l-.62.3ZM8.445,3.78h.64l.5.81H7.945Zm1.44,1.81V9.41l-.61-.29V5.59Zm-2.23,0h.62V8.65l-.62-.29Zm-1,1.62v.68l-.7-.33ZM5.365,18a.52.52,0,0,1-.3-.47V8.24l6.43,3.04v9.59Zm6.13-7.83-.61-.29V6.64h.61Zm-.32-4.53.51-.82h.62l.51.82Zm1.94,1V9.89l-.62.29V6.64ZM12.5,20.88V11.29l6.44-3.05v9.29a.512.512,0,0,1-.31.47Z\"},\"child\":[]}]})(props);\n};\nfunction CiPercent (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Percent\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.934A9.934,9.934,0,1,1,21.933,12,9.945,9.945,0,0,1,12,21.934ZM12,3.066A8.934,8.934,0,1,0,20.933,12,8.944,8.944,0,0,0,12,3.066Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9,10.258a1.5,1.5,0,1,1,1.061-.439h0A1.5,1.5,0,0,1,9,10.258Zm0-2a.5.5,0,1,0,.353.146A.5.5,0,0,0,9,8.259Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M7.758,16.743A.5.5,0,0,1,7.4,15.89L15.889,7.4a.5.5,0,0,1,.707.707L8.111,16.6A.5.5,0,0,1,7.758,16.743Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15,16.742a1.5,1.5,0,1,1,1.061-.438A1.493,1.493,0,0,1,15,16.742Zm0-2a.5.5,0,0,0-.354.147h0a.5.5,0,0,0-.146.352.5.5,0,1,0,1,0,.5.5,0,0,0-.5-.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiPhone (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Phone\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.436,20.938A11.384,11.384,0,0,1,4.572,3.9a1.668,1.668,0,0,1,1.241-.822,1.716,1.716,0,0,1,1.454.492l3.139,3.14a1.715,1.715,0,0,1,0,2.427l-.295.3a1.937,1.937,0,0,0,0,2.736l1.72,1.721a1.983,1.983,0,0,0,2.736,0l.29-.29a1.719,1.719,0,0,1,2.428,0l3.139,3.139a1.724,1.724,0,0,1,.492,1.455,1.669,1.669,0,0,1-.822,1.239A11.327,11.327,0,0,1,14.436,20.938ZM6.042,4.063a.793.793,0,0,0-.1.006.673.673,0,0,0-.5.331A10.375,10.375,0,0,0,19.594,18.567a.674.674,0,0,0,.331-.5.734.734,0,0,0-.208-.618l-3.139-3.139a.717.717,0,0,0-1.014,0l-.29.29a3.006,3.006,0,0,1-4.15,0L9.4,12.876a2.939,2.939,0,0,1,0-4.149l.3-.3a.717.717,0,0,0,0-1.014L6.56,4.277A.729.729,0,0,0,6.042,4.063Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPickerEmpty (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Picker_Empty\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.94,5.876a2.805,2.805,0,0,0-.84-2.01,2.856,2.856,0,0,0-3.97,0l-2.21,2.21-.75-.75a.8.8,0,0,0-1.1,0,.785.785,0,0,0,0,1.1l.75.75-8.77,8.76a3.248,3.248,0,0,0-.92,2.13l-.07,1.52a1.311,1.311,0,0,0,.38.97,1.332,1.332,0,0,0,.91.38h.06l1.52-.07a3.248,3.248,0,0,0,2.13-.92l8.76-8.77.75.75a.8.8,0,0,0,1.1,0,.785.785,0,0,0,0-1.1l-.75-.75L20.1,7.9A2.828,2.828,0,0,0,20.94,5.876ZM7.35,19.236a2.22,2.22,0,0,1-1.46.63l-1.53.07a.243.243,0,0,1-.21-.09.3.3,0,0,1-.09-.21l.07-1.53a2.22,2.22,0,0,1,.63-1.46l8.77-8.76,2.59,2.59ZM19.4,7.2l-2.18,2.18-2.59-2.59,2.21-2.22a1.861,1.861,0,0,1,2.56,0,1.846,1.846,0,0,1,.54,1.31A1.869,1.869,0,0,1,19.4,7.2Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPickerHalf (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Picker_Half\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.936,5.889a2.825,2.825,0,0,0-4.81-2.02l-2.21,2.22-.75-.75a.771.771,0,0,0-.55-.22.8.8,0,0,0-.55.22.785.785,0,0,0,0,1.1l.75.75-8.76,8.76a3.154,3.154,0,0,0-.92,2.13l-.07,1.52a1.316,1.316,0,0,0,1.28,1.35h.06l1.52-.07a3.21,3.21,0,0,0,2.13-.93l8.76-8.76.75.75a.8.8,0,0,0,1.1,0,.785.785,0,0,0,0-1.1l-.75-.75,2.18-2.18A2.845,2.845,0,0,0,20.936,5.889Zm-8.56,8.33H7.2l6.33-6.32,2.59,2.59ZM19.4,7.2l-2.18,2.19L14.626,6.8l2.21-2.22a1.823,1.823,0,0,1,2.56,0,1.859,1.859,0,0,1,0,2.62Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPill (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Pill\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.31,4.691a5.5,5.5,0,0,0-7.78,0l-6.84,6.84a5.5,5.5,0,0,0,3.89,9.39,5.524,5.524,0,0,0,3.89-1.61l6.84-6.84a5.5,5.5,0,0,0,0-7.78Zm-.71,7.07-3.42,3.42L8.82,8.821,12.24,5.4a4.5,4.5,0,0,1,7.68,3.17A4.429,4.429,0,0,1,18.6,11.761Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPillsBottle1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"meds_Bottle_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.435,2.06H6.565a2.5,2.5,0,0,0-2.5,2.5v2a1.492,1.492,0,0,0,1.22,1.47V19.44a2.5,2.5,0,0,0,2.5,2.5h8.43a2.5,2.5,0,0,0,2.5-2.5V8.03a1.492,1.492,0,0,0,1.22-1.47v-2A2.5,2.5,0,0,0,17.435,2.06Zm.28,17.38a1.5,1.5,0,0,1-1.5,1.5H7.785a1.5,1.5,0,0,1-1.5-1.5v-.88h3.52a.491.491,0,0,0,.48-.5.485.485,0,0,0-.48-.5H6.285V15h2.57a.5.5,0,0,0,0-1H6.285V11.45h3.52a.491.491,0,0,0,.48-.5.485.485,0,0,0-.48-.5H6.285V8.06h11.43Zm1.22-12.88a.5.5,0,0,1-.5.5H5.565a.5.5,0,0,1-.5-.5v-2a1.5,1.5,0,0,1,1.5-1.5h10.87a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPizza (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Pizza\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.807,13.437l-.01-.04a19.05,19.05,0,0,0-10.23-10.21,1.574,1.574,0,0,0-2.08.93l-5.32,14.69a1.58,1.58,0,0,0,1.48,2.12,1.654,1.654,0,0,0,.54-.09l14.7-5.32a1.585,1.585,0,0,0,.91-.85A1.547,1.547,0,0,0,20.807,13.437Zm-6.98,2.98a1,1,0,0,0,.2.16L4.847,19.9a.582.582,0,0,1-.6-.14.556.556,0,0,1-.14-.61l2.39-6.6a1,1,0,0,0,.16.2,1.81,1.81,0,0,0,2.56-2.56,1.782,1.782,0,0,0-1.7-.47l1.09-2.98a17.346,17.346,0,0,1,6.82,5.57,2.447,2.447,0,0,0-1.6.71A2.4,2.4,0,0,0,13.827,16.417Zm6.05-2.15a.592.592,0,0,1-.33.31l-1.32.47c-.11-.23-.22-.45-.33-.67-.12-.24-.25-.48-.38-.71-.31-.55-.65-1.08-1-1.58a18.655,18.655,0,0,0-7.57-6.3l.48-1.33a.561.561,0,0,1,.31-.33.456.456,0,0,1,.23-.05.793.793,0,0,1,.25.05,18.013,18.013,0,0,1,9.67,9.68v.02A.561.561,0,0,1,19.877,14.267Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"7.835\",\"cy\":\"16.489\",\"r\":\"1.075\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiPlane (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Plane\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.9,20.936H10.85a.911.911,0,0,1-.9-1.023l.693-5.548H7.3l-.513.9a1.329,1.329,0,0,1-.992.657L5.1,16a.9.9,0,0,1-.8-.31.912.912,0,0,1-.185-.839l.774-2.769a.318.318,0,0,0,0-.173L4.114,9.145A.909.909,0,0,1,5.1,8l.695.083a1.331,1.331,0,0,1,.992.656l.513.9h3.34L9.946,4.088a.911.911,0,0,1,.9-1.024H11.9a1.327,1.327,0,0,1,1.236.857l2.144,5.714h1.046a8.5,8.5,0,0,1,1.758.184,2.166,2.166,0,0,1,1.429.9,2.209,2.209,0,0,1,.365,1.7A2.288,2.288,0,0,1,17.95,14.2l-.16.024a10.926,10.926,0,0,1-1.721.137h-.787l-2.144,5.714A1.327,1.327,0,0,1,11.9,20.936Zm-.951-1H11.9a.323.323,0,0,0,.3-.209l2.214-5.905a.71.71,0,0,1,.661-.457h.991a9.946,9.946,0,0,0,1.567-.125l.16-.025a1.3,1.3,0,0,0,1.1-.979,1.227,1.227,0,0,0-.2-.937,1.2,1.2,0,0,0-.793-.5,7.647,7.647,0,0,0-1.577-.167h-1.25a.711.711,0,0,1-.661-.456L12.2,4.273a.323.323,0,0,0-.3-.209h-.951l.722,5.778a.7.7,0,0,1-.7.793H7.127a.7.7,0,0,1-.614-.359l-.6-1.045a.32.32,0,0,0-.241-.16L5.113,9l.738,2.64a1.34,1.34,0,0,1,0,.711L5.113,15l.562-.067a.32.32,0,0,0,.241-.16l.6-1.049a.7.7,0,0,1,.612-.355h3.846a.7.7,0,0,1,.7.794ZM7.386,14.212l0,.005Zm3.295-.179v0Zm0-4.067v0Zm-3.3-.186,0,0Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPlay1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Play_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6.562,21.94a2.5,2.5,0,0,1-2.5-2.5V4.56A2.5,2.5,0,0,1,7.978,2.5L18.855,9.939a2.5,2.5,0,0,1,0,4.12L7.977,21.5A2.5,2.5,0,0,1,6.562,21.94Zm0-18.884a1.494,1.494,0,0,0-.7.177,1.477,1.477,0,0,0-.8,1.327V19.439a1.5,1.5,0,0,0,2.35,1.235l10.877-7.44a1.5,1.5,0,0,0,0-2.471L7.413,3.326A1.491,1.491,0,0,0,6.564,3.056Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPlug1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Plug_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.305,5.755H15.5V2.545a.5.5,0,0,0-1,0v3.21h-5V2.545a.5.5,0,0,0-1,0v3.21H6.7a1.566,1.566,0,0,0-1.57,1.57v4.28a7.046,7.046,0,0,0,6.37,7.11v2.72a.5.5,0,0,0,1,0v-2.7a6.874,6.874,0,0,0,6.38-6.86V7.325A1.573,1.573,0,0,0,17.305,5.755Zm.57,6.12a5.875,5.875,0,0,1-6.06,5.87,6.054,6.054,0,0,1-5.69-6.14V7.325a.563.563,0,0,1,.57-.57h10.61a.57.57,0,0,1,.57.57Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiPower (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Power\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6.638,5.209a8.782,8.782,0,1,0,13.917,8.96,8.871,8.871,0,0,0-3.189-8.96c-.5-.39-1.214.312-.707.707a7.93,7.93,0,0,1,3.082,7.113,7.787,7.787,0,0,1-15.308.956A7.9,7.9,0,0,1,7.345,5.916c.507-.394-.205-1.1-.707-.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.5,12.519a.5.5,0,0,1-1,0V3.548h0a.5.5,0,0,1,1,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiRainbow (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Rainbow\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.089,16.71A9,9,0,0,1,8.97,8.326,8.912,8.912,0,0,1,20.911,16.71a.5.5,0,0,0,1,0,10.033,10.033,0,0,0-6.46-9.291,9.981,9.981,0,0,0-11.06,2.944,10.058,10.058,0,0,0-2.3,6.347.5.5,0,0,0,1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.985,16.71A6.078,6.078,0,0,1,12,10.7a6.078,6.078,0,0,1,6.015,6.015.5.5,0,0,0,1,0A7.013,7.013,0,0,0,6.606,12.228,7.151,7.151,0,0,0,4.985,16.71a.5.5,0,0,0,1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.88,16.71a3.12,3.12,0,0,1,6.24,0,.5.5,0,0,0,1,0,4.119,4.119,0,0,0-7.255-2.669A4.219,4.219,0,0,0,7.88,16.71a.5.5,0,0,0,1,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiRead (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"read\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,18.883a10.8,10.8,0,0,1-9.675-5.728,2.6,2.6,0,0,1,0-2.31A10.8,10.8,0,0,1,12,5.117a10.8,10.8,0,0,1,9.675,5.728h0a2.6,2.6,0,0,1,0,2.31A10.8,10.8,0,0,1,12,18.883ZM12,6.117a9.787,9.787,0,0,0-8.78,5.176,1.586,1.586,0,0,0,0,1.415A9.788,9.788,0,0,0,12,17.883a9.787,9.787,0,0,0,8.78-5.176,1.584,1.584,0,0,0,0-1.414h0A9.787,9.787,0,0,0,12,6.117Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,16.049A4.049,4.049,0,1,1,16.049,12,4.054,4.054,0,0,1,12,16.049Zm0-7.1A3.049,3.049,0,1,0,15.049,12,3.052,3.052,0,0,0,12,8.951Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"2.028\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiReceipt (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Receipt\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,21.919a1.454,1.454,0,0,1-.791-.232L9.645,20.666a.47.47,0,0,0-.439-.028l-1.776.829a1.466,1.466,0,0,1-1.4-.087,1.214,1.214,0,0,1-.581-1.02V3.641A1.217,1.217,0,0,1,6.033,2.62a1.469,1.469,0,0,1,1.4-.087l1.775.829a.469.469,0,0,0,.439-.026L11.21,2.313a1.464,1.464,0,0,1,1.581,0l1.564,1.022a.469.469,0,0,0,.44.026l1.775-.829a1.461,1.461,0,0,1,1.4.087,1.217,1.217,0,0,1,.581,1.021V20.36a1.216,1.216,0,0,1-.581,1.02,1.46,1.46,0,0,1-1.4.087L14.8,20.639a.474.474,0,0,0-.441.027l-1.564,1.021A1.448,1.448,0,0,1,12,21.919ZM9.4,19.6a1.44,1.44,0,0,1,.79.234l1.564,1.02a.464.464,0,0,0,.487,0l1.565-1.021a1.462,1.462,0,0,1,1.41-.095l1.774.828a.463.463,0,0,0,.437-.024.221.221,0,0,0,.118-.177V3.641a.219.219,0,0,0-.118-.177.461.461,0,0,0-.437-.025l-1.775.829a1.458,1.458,0,0,1-1.409-.095L12.243,3.151a.467.467,0,0,0-.486,0L10.192,4.172a1.467,1.467,0,0,1-1.41.1L7.007,3.439a.461.461,0,0,0-.437.025.219.219,0,0,0-.118.177V20.36a.221.221,0,0,0,.118.177.468.468,0,0,0,.437.024l1.776-.829A1.461,1.461,0,0,1,9.4,19.6Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.046,7.4H8.954a.5.5,0,0,1,0-1h6.092a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.046,10.953H8.954a.5.5,0,0,1,0-1h6.092a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,14.5H8.954a.5.5,0,0,1,0-1H12a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiRedo (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Redo\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4.061,13.67A7.958,7.958,0,0,0,16.2,19.74a8.061,8.061,0,0,0,3.77-6.77.5.5,0,0,0-1,0,6.976,6.976,0,0,1-11,5.7,6.969,6.969,0,0,1,1-11.97,10.075,10.075,0,0,1,4.64-.69V7.46a.5.5,0,0,0,.81.39l2.47-1.95a.5.5,0,0,0,0-.79L14.4,3.17a.5.5,0,0,0-.8.4V5.01c-.71-.01-1.43-.03-2.13.02a7.985,7.985,0,0,0-7.41,8.64Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiRepeat (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Repeat\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M2.078,17.562c-0.01,-0.039 -0.016,-0.08 -0.016,-0.123c0,-0.138 0.056,-0.263 0.147,-0.353c0.008,-0.009 1.416,-1.417 2,-2c0.198,-0.198 0.507,-0.183 0.707,-0c0.199,0.183 0.185,0.522 -0,0.707l-1.147,1.146l15.669,0c0.828,0 1.5,-0.671 1.5,-1.5l0,-3.439c0,-0.276 0.224,-0.5 0.5,-0.5c0.276,0 0.5,0.224 0.5,0.5l0,3.439c0,1.381 -1.12,2.5 -2.5,2.5l-15.669,0l1.147,1.147c0.198,0.198 0.183,0.507 -0,0.707c-0.183,0.199 -0.522,0.185 -0.707,-0l-2,-2c-0.066,-0.063 -0.11,-0.143 -0.131,-0.231Zm19.845,-11.105c0.01,0.039 0.015,0.08 0.015,0.122c0,0.138 -0.056,0.263 -0.147,0.354c-0.008,0.008 -1.416,1.417 -2,2c-0.197,0.198 -0.507,0.183 -0.707,-0c-0.199,-0.183 -0.185,-0.522 0,-0.707l1.147,-1.147l-15.669,0c-0.828,0 -1.5,0.672 -1.5,1.5l0,3.439c-0,0.276 -0.224,0.5 -0.5,0.5c-0.276,0 -0.5,-0.224 -0.5,-0.5l0,-3.439c0,-1.381 1.12,-2.5 2.5,-2.5l15.669,0l-1.146,-1.146c-0.198,-0.198 -0.183,-0.507 -0,-0.707c0.183,-0.199 0.522,-0.185 0.707,-0l2,2c0.065,0.063 0.11,0.143 0.131,0.231Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiRollingSuitcase (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Rolling_Suitcase\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.25,7.49H15V3.56a1.5,1.5,0,0,0-1.5-1.5h-3A1.511,1.511,0,0,0,9,3.56V7.49H7.75a2.5,2.5,0,0,0-2.5,2.5v8.44a2.5,2.5,0,0,0,2.5,2.5h.5v.01a1,1,0,0,0,2,0v-.01h3.5v.01a1,1,0,0,0,2,0v-.01h.5a2.5,2.5,0,0,0,2.5-2.5V9.99A2.5,2.5,0,0,0,16.25,7.49ZM10,3.56a.508.508,0,0,1,.5-.5h3a.5.5,0,0,1,.5.5V7.5H10Zm7.75,14.87a1.5,1.5,0,0,1-1.5,1.5H7.75a1.5,1.5,0,0,1-1.5-1.5V9.99a1.511,1.511,0,0,1,1.5-1.5h8.5a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiRoute (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Route\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.792,17.086c-.58-.58-1.16-1.17-1.75-1.75-.08-.08-.16-.17-.25-.25a.492.492,0,0,0-.7,0,.5.5,0,0,0,0,.71l1.14,1.14H9.282a2.22,2.22,0,0,1,0-4.44h3a3.215,3.215,0,1,0,0-6.43H7.012a2.5,2.5,0,1,0,0,1h5.27a2.215,2.215,0,1,1,0,4.43h-3a3.22,3.22,0,1,0,0,6.44h10.96l-.9.9c-.09.08-.17.17-.25.25a.5.5,0,0,0,0,.71.511.511,0,0,0,.7,0l1.75-1.75.25-.25A.5.5,0,0,0,21.792,17.086ZM4.562,8.066a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,4.562,8.066Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiRouter (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Router\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.44,10.94H17.93V4.54a.5.5,0,0,0-1,0v6.4H7.06V7a.5.5,0,0,0-1,0v3.94H4.56a2.507,2.507,0,0,0-2.5,2.5v4a2.514,2.514,0,0,0,2.5,2.5H19.44a2.507,2.507,0,0,0,2.5-2.5v-4A2.5,2.5,0,0,0,19.44,10.94Zm1.5,6.5a1.5,1.5,0,0,1-1.5,1.5H4.56a1.511,1.511,0,0,1-1.5-1.5v-4a1.5,1.5,0,0,1,1.5-1.5H19.44a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"4.75\",\"cy\":\"15.436\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"8.25\",\"cy\":\"15.436\",\"r\":\"0.75\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.5,16.936h-5a1.5,1.5,0,1,1,0-3h5a1.5,1.5,0,0,1,0,3Zm-5-2a.5.5,0,1,0,0,1h5a.5.5,0,0,0,0-1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiRuler (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Ruler\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M9.479,3.5a1.5,1.5,0,0,0-2.12,0L3.5,7.35a1.516,1.516,0,0,0-.44,1.06A1.5,1.5,0,0,0,3.5,9.47L14.519,20.5a1.509,1.509,0,0,0,2.13,0l3.85-3.86a1.491,1.491,0,0,0,0-2.12ZM8.359,7.08a.5.5,0,0,0,0,.71.524.524,0,0,0,.71,0c.55-.56,1.09-1.1,1.65-1.64l1.25,1.25-.9.9a.483.483,0,0,0,0,.7.5.5,0,0,0,.71,0c.29-.3.6-.6.9-.89l1.25,1.25-1.64,1.65a.495.495,0,0,0,.7.7c.56-.55,1.1-1.09,1.65-1.64l1.25,1.25-.9.9a.524.524,0,0,0-.14.36.5.5,0,0,0,.14.35.513.513,0,0,0,.71,0l.9-.9,1.26,1.26-1.65,1.64a.5.5,0,0,0,.71.71c.55-.56,1.09-1.1,1.65-1.64l1.23,1.23a.5.5,0,0,1,0,.7l-3.86,3.86a.5.5,0,0,1-.71,0L4.209,8.77a.491.491,0,0,1-.15-.36.485.485,0,0,1,.15-.35L8.069,4.2a.508.508,0,0,1,.7,0l1.24,1.24Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.939,12.96l-.04-.04c.01,0,.01,0,.02.01S18.939,12.95,18.939,12.96Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSatellite1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Satellite_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.135,12.37a5.447,5.447,0,0,0,3.42-1.2.982.982,0,0,0,.37-.72,1.04,1.04,0,0,0-.31-.8l-2.78-2.78c.39-.39.8-.8,1.19-1.2.08-.07.15-.14.23-.22a.511.511,0,0,0,0-.7.5.5,0,0,0-.71,0c-.48.47-.94.94-1.42,1.41l-2.78-2.78a1.077,1.077,0,0,0-.8-.31,1,1,0,0,0-.72.37,5.454,5.454,0,0,0-1.19,3.67l-1.45,1.46L7.855,6.24a.978.978,0,0,0-1.41,0L3.365,9.32a1,1,0,0,0,0,1.41L5.7,13.06l-.41.4a2.65,2.65,0,0,0,0,3.74L6.8,18.71a2.632,2.632,0,0,0,3.74,0l.4-.4,2.33,2.33a1,1,0,0,0,1.41,0l3.08-3.09a1,1,0,0,0,0-1.41l-2.32-2.32,1.45-1.46A2.09,2.09,0,0,0,17.135,12.37ZM4.065,10.03l3.09-3.09,2.32,2.33L6.4,12.35Zm12.99,6.82-3.08,3.08-2.33-2.33,3.08-3.08Zm-5.23-8.51a5.482,5.482,0,0,0,3.84,3.83l-5.84,5.84a1.642,1.642,0,0,1-2.32,0l-1.52-1.52a1.642,1.642,0,0,1,0-2.32Zm2.12,1.71a4.417,4.417,0,0,1-.3-5.96l3.13,3.13,3.14,3.14.02.03A4.5,4.5,0,0,1,13.945,10.05Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiSaveDown1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Save_Down_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.617,6.383a7.944,7.944,0,0,1-1.748,12.568A8.028,8.028,0,0,1,4.283,13.908,8.028,8.028,0,0,1,6.378,6.391c.451-.46-.256-1.168-.707-.707A8.946,8.946,0,0,0,15.427,20.27a8.946,8.946,0,0,0,2.9-14.594c-.451-.461-1.158.247-.707.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.355,10.6l-3,3a.5.5,0,0,1-.35.15.508.508,0,0,1-.36-.15l-3-3a.5.5,0,0,1,.71-.71l2.14,2.14V3.555a.508.508,0,0,1,.5-.5.5.5,0,0,1,.5.5v8.49l2.15-2.16a.5.5,0,0,1,.71.71Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSaveDown2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Save_Down_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.948H5.563a2.372,2.372,0,0,1-2.5-2.21v-11a2.372,2.372,0,0,1,2.5-2.211h.462a.5.5,0,0,1,0,1H5.563a1.38,1.38,0,0,0-1.5,1.211v11a1.38,1.38,0,0,0,1.5,1.21H18.437a1.38,1.38,0,0,0,1.5-1.21v-11a1.38,1.38,0,0,0-1.5-1.211h-.462a.5.5,0,0,1,0-1h.462a2.372,2.372,0,0,1,2.5,2.211v11A2.372,2.372,0,0,1,18.437,20.948Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.355,10.592l-3,3a.5.5,0,0,1-.35.15.508.508,0,0,1-.36-.15l-3-3a.5.5,0,0,1,.71-.71l2.14,2.139V3.552a.508.508,0,0,1,.5-.5.5.5,0,0,1,.5.5v8.49l2.15-2.16a.5.5,0,0,1,.71.71Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSaveUp1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Save_Up_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.617,6.374a7.946,7.946,0,0,1-1.748,12.569A8.028,8.028,0,0,1,4.283,13.9,8.029,8.029,0,0,1,6.378,6.382c.451-.46-.256-1.168-.707-.707a8.946,8.946,0,0,0,9.756,14.587,8.946,8.946,0,0,0,2.9-14.595c-.451-.46-1.158.247-.707.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.645,6.213l3-3a.5.5,0,0,1,.35-.15.508.508,0,0,1,.36.15l3,3a.5.5,0,0,1-.71.71l-2.14-2.14v8.47a.508.508,0,0,1-.5.5.5.5,0,0,1-.5-.5V4.763l-2.15,2.16a.5.5,0,0,1-.71-.71Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSaveUp2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Save_Up_2\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.937H5.563a2.372,2.372,0,0,1-2.5-2.211v-11a2.372,2.372,0,0,1,2.5-2.212h.462a.5.5,0,0,1,0,1H5.563a1.381,1.381,0,0,0-1.5,1.212v11a1.38,1.38,0,0,0,1.5,1.211H18.437a1.38,1.38,0,0,0,1.5-1.211v-11a1.381,1.381,0,0,0-1.5-1.212h-.462a.5.5,0,0,1,0-1h.462a2.372,2.372,0,0,1,2.5,2.212v11A2.372,2.372,0,0,1,18.437,20.937Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.645,6.213l3-3a.5.5,0,0,1,.35-.15.508.508,0,0,1,.36.15l3,3a.5.5,0,0,1-.71.71l-2.14-2.14v8.47a.508.508,0,0,1-.5.5.5.5,0,0,1-.5-.5V4.763l-2.15,2.16a.5.5,0,0,1-.71-.71Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSearch (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"version\":\"1.1\",\"id\":\"search\",\"x\":\"0px\",\"y\":\"0px\",\"viewBox\":\"0 0 24 24\",\"style\":\"enable-background:new 0 0 24 24;\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.031,20.79c0.46,0.46,1.17-0.25,0.71-0.7l-3.75-3.76c1.27-1.41,2.04-3.27,2.04-5.31\\n\\t\\tc0-4.39-3.57-7.96-7.96-7.96s-7.96,3.57-7.96,7.96c0,4.39,3.57,7.96,7.96,7.96c1.98,0,3.81-0.73,5.21-1.94L20.031,20.79z\\n\\t\\t M4.11,11.02c0-3.84,3.13-6.96,6.96-6.96c3.84,0,6.96,3.12,6.96,6.96c0,3.84-3.12,6.96-6.96,6.96C7.24,17.98,4.11,14.86,4.11,11.02\\n\\t\\tz\"},\"child\":[]}]}]})(props);\n};\nfunction CiServer (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Server\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,11H3.563a1.5,1.5,0,0,1-1.5-1.5V5.565a1.5,1.5,0,0,1,1.5-1.5H20.437a1.5,1.5,0,0,1,1.5,1.5v3.93A1.5,1.5,0,0,1,20.437,11ZM3.563,5.065a.5.5,0,0,0-.5.5v3.93a.5.5,0,0,0,.5.5H20.437a.5.5,0,0,0,.5-.5V5.565a.5.5,0,0,0-.5-.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,19.935H3.563a1.5,1.5,0,0,1-1.5-1.5v-3.93a1.5,1.5,0,0,1,1.5-1.5H20.437a1.5,1.5,0,0,1,1.5,1.5v3.93A1.5,1.5,0,0,1,20.437,19.935ZM3.563,14.005a.5.5,0,0,0-.5.5v3.93a.5.5,0,0,0,.5.5H20.437a.5.5,0,0,0,.5-.5v-3.93a.5.5,0,0,0-.5-.5Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.563\",\"cy\":\"7.53\",\"r\":\"0.5\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"7.563\",\"cy\":\"7.53\",\"r\":\"0.5\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.452,8.03a.5.5,0,0,1,0-1h5a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"5.563\",\"cy\":\"16.47\",\"r\":\"0.5\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"7.563\",\"cy\":\"16.47\",\"r\":\"0.5\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.452,16.97a.5.5,0,0,1,0-1h5a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSettings (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Settings\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.6,20.936H11.3a.883.883,0,0,1-.852-.654l-.774-2.833-2.5,1.435a.886.886,0,0,1-1.06-.138l-.925-.919a.884.884,0,0,1-.143-1.066l1.469-2.545L6.509,14.2l-2.787-.747a.882.882,0,0,1-.654-.851V11.3a.882.882,0,0,1,.652-.85l2.839-.777L5.12,7.171a.885.885,0,0,1,.141-1.062l.918-.918A.885.885,0,0,1,7.24,5.049L9.792,6.514l.012,0,.745-2.79a.881.881,0,0,1,.851-.655h1.3a.883.883,0,0,1,.852.655l.762,2.838,2.509-1.441a.885.885,0,0,1,1.059.138l.926.919a.882.882,0,0,1,.141,1.067L17.483,9.777l.008.022,2.786.746a.883.883,0,0,1,.653.851v1.3a.883.883,0,0,1-.654.852l-2.837.774,1.439,2.505a.881.881,0,0,1-.141,1.063l-.917.917a.888.888,0,0,1-1.063.141l-2.539-1.462L14.2,17.5l-.745,2.785A.885.885,0,0,1,12.6,20.936Zm-1.21-1h1.119l.738-2.756a.888.888,0,0,1,.528-.592l.134-.052a.873.873,0,0,1,.76.057l2.51,1.445.789-.789-1.423-2.478a.881.881,0,0,1-.048-.78l.052-.125a.875.875,0,0,1,.584-.51l2.8-.749v-1.12l-2.755-.737a.885.885,0,0,1-.592-.529l-.052-.132a.882.882,0,0,1,.057-.763L18.04,6.818l-.8-.79-2.48,1.425a.878.878,0,0,1-.772.052l-.115-.047a.888.888,0,0,1-.518-.588l-.748-2.806H11.492l-.738,2.762a.883.883,0,0,1-.539.6l-.12.045a.874.874,0,0,1-.751-.058L6.822,5.962l-.789.789L7.455,9.227a.886.886,0,0,1,.046.785l-.051.12a.876.876,0,0,1-.579.5l-2.8.758v1.121l2.757.738a.889.889,0,0,1,.591.525l.048.121a.874.874,0,0,1-.055.77L5.958,17.181l.8.791,2.47-1.419a.878.878,0,0,1,.787-.045l.106.044a.874.874,0,0,1,.526.591ZM9.75,17.482l.008,0ZM9.6,17.421l.007,0ZM6.487,14.147h0Zm.044-4.411h0Zm7.724-3.2Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,15a3,3,0,1,1,3-3A3,3,0,0,1,12,15Zm0-5a2,2,0,1,0,2,2A2,2,0,0,0,12,10Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiShare1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Share_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.223,11.075a.5.5,0,0,0,.7.71l7-7v3.58a.508.508,0,0,0,.5.5.5.5,0,0,0,.5-.5V3.575a.5.5,0,0,0-.5-.5h-4.79a.5.5,0,0,0,0,1h3.58Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.876,20.926H6.124a3.053,3.053,0,0,1-3.05-3.05V6.124a3.053,3.053,0,0,1,3.05-3.05h6.028a.5.5,0,0,1,0,1H6.124a2.053,2.053,0,0,0-2.05,2.05V17.876a2.053,2.053,0,0,0,2.05,2.05H17.876a2.053,2.053,0,0,0,2.05-2.05V11.849a.5.5,0,0,1,1,0v6.027A3.053,3.053,0,0,1,17.876,20.926Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiShare2 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Share_2\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.44,15.94a2.5,2.5,0,0,0-1.96.95L7.97,12.64a2.356,2.356,0,0,0,0-1.29l8.5-4.25a2.5,2.5,0,1,0-.53-1.54,2.269,2.269,0,0,0,.09.65l-8.5,4.25a2.5,2.5,0,1,0,0,3.08l8.5,4.25a2.269,2.269,0,0,0-.09.65,2.5,2.5,0,1,0,2.5-2.5Zm0-11.88a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,18.44,4.06ZM5.56,13.5A1.5,1.5,0,1,1,7.06,12,1.5,1.5,0,0,1,5.56,13.5Zm12.88,6.44a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,18.44,19.94Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiShirt (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Shirt\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.657,21.949H7.343a2.5,2.5,0,0,1-2.5-2.5V11.222a6.468,6.468,0,0,1,.112-1.2L5.224,8.59a5.572,5.572,0,0,0,.094-1.015V3.3a1.252,1.252,0,0,1,1.25-1.25H8.815a1.251,1.251,0,0,1,1.25,1.25V6.413a1.935,1.935,0,0,0,3.87,0V3.3a1.251,1.251,0,0,1,1.25-1.25h2.247a1.252,1.252,0,0,1,1.25,1.25V7.575a5.486,5.486,0,0,0,.1,1.015l.269,1.431a6.57,6.57,0,0,1,.111,1.2v8.227A2.5,2.5,0,0,1,16.657,21.949ZM6.568,3.051a.251.251,0,0,0-.25.25V7.575a6.543,6.543,0,0,1-.111,1.2l-.27,1.432a5.5,5.5,0,0,0-.094,1.015v8.227a1.5,1.5,0,0,0,1.5,1.5h9.314a1.5,1.5,0,0,0,1.5-1.5V11.222a5.519,5.519,0,0,0-.094-1.016l-.269-1.43a6.453,6.453,0,0,1-.112-1.2V3.3a.251.251,0,0,0-.25-.25H15.185a.251.251,0,0,0-.25.25V6.413a2.935,2.935,0,0,1-5.87,0V3.3a.251.251,0,0,0-.25-.25Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M11.986,17.333V13.874a.075.075,0,0,0-.114-.064l-.638.392a.149.149,0,0,1-.228-.128v-.65a.3.3,0,0,1,.145-.258l.764-.457a.3.3,0,0,1,.154-.043H12.7a.3.3,0,0,1,.3.3v4.367a.3.3,0,0,1-.3.3h-.409A.3.3,0,0,1,11.986,17.333Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiShop (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Shop\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.6,5.26a2.512,2.512,0,0,0-2.48-2.2H5.885a2.512,2.512,0,0,0-2.48,2.19l-.3,2.47a3.411,3.411,0,0,0,1.16,2.56v8.16a2.5,2.5,0,0,0,2.5,2.5h10.47a2.5,2.5,0,0,0,2.5-2.5V10.28A3.411,3.411,0,0,0,20.9,7.72Zm-6.59,14.68h-4V15.86a1.5,1.5,0,0,1,1.5-1.5h1a1.5,1.5,0,0,1,1.5,1.5Zm4.73-1.5a1.5,1.5,0,0,1-1.5,1.5h-2.23V15.86a2.5,2.5,0,0,0-2.5-2.5h-1a2.5,2.5,0,0,0-2.5,2.5v4.08H6.765a1.5,1.5,0,0,1-1.5-1.5V10.87a3.223,3.223,0,0,0,1.24.24,3.358,3.358,0,0,0,2.58-1.19.241.241,0,0,1,.34,0,3.358,3.358,0,0,0,2.58,1.19A3.393,3.393,0,0,0,14.6,9.92a.219.219,0,0,1,.16-.07.238.238,0,0,1,.17.07,3.358,3.358,0,0,0,2.58,1.19,3.173,3.173,0,0,0,1.23-.24Zm-1.23-8.33a2.386,2.386,0,0,1-1.82-.83,1.2,1.2,0,0,0-.92-.43h-.01a1.194,1.194,0,0,0-.92.42,2.476,2.476,0,0,1-3.65,0,1.24,1.24,0,0,0-1.86,0A2.405,2.405,0,0,1,4.1,7.78l.3-2.4a1.517,1.517,0,0,1,1.49-1.32h12.23a1.5,1.5,0,0,1,1.49,1.32l.29,2.36A2.392,2.392,0,0,1,17.505,10.11Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiShoppingBasket (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Shopping_Basket\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.44,7.937H17.3l-1.21-4.51a.508.508,0,0,0-.61-.35.489.489,0,0,0-.35.61l1.14,4.25H7.74l1.14-4.25a.5.5,0,0,0-.36-.61.513.513,0,0,0-.61.35l-1.2,4.51H4.56a1.5,1.5,0,0,0-.32,2.96l.74,7.77a2.492,2.492,0,0,0,2.49,2.27h9.06a2.492,2.492,0,0,0,2.49-2.27l.74-7.77a1.5,1.5,0,0,0-.32-2.96Zm-1.41,10.64a1.5,1.5,0,0,1-1.5,1.36H7.47a1.5,1.5,0,0,1-1.5-1.36l-.72-7.64h13.5Zm1.41-8.64H4.56a.508.508,0,0,1-.5-.5.5.5,0,0,1,.5-.5H19.44a.5.5,0,0,1,.5.5A.508.508,0,0,1,19.44,9.937Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9.5,17.432a.5.5,0,0,1-.5-.5v-3a.5.5,0,0,1,1,0v3A.5.5,0,0,1,9.5,17.432Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.5,17.432a.5.5,0,0,1-.5-.5v-3a.5.5,0,0,1,1,0v3A.5.5,0,0,1,14.5,17.432Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiShoppingCart (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Shopping_Cart\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.437,19.934c0,0.552 -0.448,1 -1,1c-0.552,0 -1,-0.448 -1,-1c0,-0.552 0.448,-1 1,-1c0.552,0 1,0.448 1,1Zm-11.217,-4.266l-0.945,-10.9c-0.03,-0.391 -0.356,-0.693 -0.749,-0.693l-0.966,-0c-0.276,-0 -0.5,-0.224 -0.5,-0.5c0,-0.276 0.224,-0.5 0.5,-0.5l0.966,-0c0.916,-0 1.676,0.704 1.746,1.617l0.139,1.818l13.03,-0c0.885,-0 1.577,0.76 1.494,1.638l-0.668,7.52c-0.121,1.285 -1.199,2.267 -2.489,2.267l-9.069,0c-1.29,0 -2.367,-0.981 -2.489,-2.267Zm0.274,-8.158l0.722,8.066c0.073,0.77 0.719,1.359 1.493,1.359l9.069,0c0.774,0 1.42,-0.589 1.493,-1.359l0.668,-7.518c0.028,-0.294 -0.203,-0.548 -0.498,-0.548l-12.947,-0Zm4.454,12.424c-0,0.552 -0.448,1 -1,1c-0.552,0 -1,-0.448 -1,-1c-0,-0.552 0.448,-1 1,-1c0.552,0 1,0.448 1,1Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiShoppingTag (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Shopping_Tag\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.605,5.988a2.8,2.8,0,0,0-2.6-2.59l-4.56-.32a2.842,2.842,0,0,0-2.17.81L3.9,11.278a2.794,2.794,0,0,0,0,3.95l4.87,4.88a2.8,2.8,0,0,0,3.96,0l7.38-7.39a2.779,2.779,0,0,0,.81-2.17ZM12.015,19.4a1.8,1.8,0,0,1-2.54,0l-4.87-4.87a1.793,1.793,0,0,1,0-2.55l1.17-1.17,7.42,7.42Zm7.38-7.38-5.5,5.5L6.485,10.1l5.5-5.5a1.786,1.786,0,0,1,1.27-.53c.04,0,.08.01.12.01l4.56.32a1.8,1.8,0,0,1,1.67,1.66l.32,4.56A1.829,1.829,0,0,1,19.4,12.018Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"17\",\"cy\":\"6.999\",\"r\":\"0.862\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiShuffle (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Shuffle\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.794,17.082a.513.513,0,0,1,0,.71c-.08.08-.17.16-.25.25-.58.58-1.17,1.16-1.75,1.75a.5.5,0,0,1-.71-.71c.09-.08.17-.17.25-.25l.9-.9h-3.85a2.509,2.509,0,0,1-2.15-1.21L12,12.982l-2.24,3.74a2.509,2.509,0,0,1-2.15,1.21H2.564a.5.5,0,0,1-.5-.5.5.5,0,0,1,.5-.5h5.05A1.507,1.507,0,0,0,8.9,16.2l2.51-4.2L8.9,7.792a1.507,1.507,0,0,0-1.29-.73H2.564a.5.5,0,0,1,0-1h5.05a2.518,2.518,0,0,1,2.15,1.22L12,11.032l2.24-3.75a2.489,2.489,0,0,1,2.14-1.22h3.85l-1.15-1.15a.5.5,0,1,1,.71-.7c.08.08.17.16.25.25.58.58,1.17,1.16,1.75,1.75a.5.5,0,0,1,0,.7c-.08.09-.17.17-.25.25-.58.59-1.17,1.17-1.75,1.75a.5.5,0,1,1-.71-.7l.25-.25.9-.9h-3.85a1.519,1.519,0,0,0-1.29.73L12.584,12l2.51,4.2a1.519,1.519,0,0,0,1.29.73h3.84l-1.14-1.14a.5.5,0,0,1,.71-.71Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiSignpostDuo1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Signpost_Duo_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,11.5H6.536a2.628,2.628,0,0,1-1.723-.629L2.564,8.915A1.329,1.329,0,0,1,2.57,6.831L4.813,4.88a2.619,2.619,0,0,1,1.723-.629h13.9a1.451,1.451,0,0,1,1.5,1.393v4.463A1.451,1.451,0,0,1,20.437,11.5Zm-13.9-6.25a1.64,1.64,0,0,0-1.067.384L3.215,7.6a.364.364,0,0,0-.152.281.349.349,0,0,0,.141.27l.011.01,2.254,1.961a1.644,1.644,0,0,0,1.067.384h13.9a.463.463,0,0,0,.5-.394V5.644a.463.463,0,0,0-.5-.393Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.464,19.749H3.563a1.451,1.451,0,0,1-1.5-1.394V13.892a1.451,1.451,0,0,1,1.5-1.393h13.9a2.621,2.621,0,0,1,1.724.63l2.249,1.956a1.329,1.329,0,0,1-.007,2.083l-2.242,1.951A2.625,2.625,0,0,1,17.464,19.749ZM3.563,13.5a.463.463,0,0,0-.5.393v4.463a.463.463,0,0,0,.5.394h13.9a1.644,1.644,0,0,0,1.068-.385l2.253-1.96a.362.362,0,0,0,.152-.28.351.351,0,0,0-.141-.271l-.011-.01-2.254-1.96a1.64,1.64,0,0,0-1.067-.384Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSignpostL1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Signpost_L_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,16H6.536a2.489,2.489,0,0,1-1.744-.709L2.542,13.1a1.5,1.5,0,0,1,.007-2.2L4.792,8.709A2.483,2.483,0,0,1,6.536,8h13.9a1.5,1.5,0,0,1,1.5,1.5v5A1.5,1.5,0,0,1,20.437,16ZM6.536,9a1.491,1.491,0,0,0-1.046.425l-2.255,2.2A.5.5,0,0,0,3.063,12a.494.494,0,0,0,.162.369l.01.01,2.254,2.2A1.492,1.492,0,0,0,6.536,15h13.9a.5.5,0,0,0,.5-.5v-5a.5.5,0,0,0-.5-.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiSignpostR1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Signpost_R_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.563,8h13.9a2.489,2.489,0,0,1,1.744.709l2.25,2.192a1.5,1.5,0,0,1-.007,2.2l-2.243,2.187A2.483,2.483,0,0,1,17.464,16H3.563a1.5,1.5,0,0,1-1.5-1.5v-5A1.5,1.5,0,0,1,3.563,8Zm13.9,7a1.491,1.491,0,0,0,1.046-.425l2.255-2.2A.5.5,0,0,0,20.937,12a.494.494,0,0,0-.162-.369l-.01-.01-2.254-2.2A1.492,1.492,0,0,0,17.464,9H3.563a.5.5,0,0,0-.5.5v5a.5.5,0,0,0,.5.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiSliderHorizontal (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Slider_Horizontal\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.45,7.5H9.99A2,2,0,0,0,8.06,6h-1A2,2,0,0,0,5.13,7.5H2.55a.5.5,0,0,0-.5.5.508.508,0,0,0,.5.5H5.13A2,2,0,0,0,7.06,10h1A2,2,0,0,0,9.99,8.5H21.45A.5.5,0,0,0,21.45,7.5ZM8.06,9h-1a1.006,1.006,0,0,1-1-.98V8a1,1,0,0,1,1-1h1a1,1,0,1,1,0,2Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M21.45,15.5H18.87A2,2,0,0,0,16.94,14h-1a2,2,0,0,0-1.93,1.5H2.55a.5.5,0,0,0,0,1H14.01A2,2,0,0,0,15.94,18h1a2,2,0,0,0,1.93-1.5h2.58a.5.5,0,0,0,.5-.5A.508.508,0,0,0,21.45,15.5Zm-3.51.5a1,1,0,0,1-1,1h-1a1,1,0,1,1,0-2h1a1.006,1.006,0,0,1,1,.98Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSliderVertical (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Slider_Vertical\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8.5,5.13V2.55a.5.5,0,0,0-.5-.5.508.508,0,0,0-.5.5V5.13A2,2,0,0,0,6,7.06v1A2,2,0,0,0,7.5,9.99V21.45a.5.5,0,0,0,1,0V9.99A2,2,0,0,0,10,8.06v-1A2,2,0,0,0,8.5,5.13ZM9,8.06a1,1,0,1,1-2,0v-1a1.006,1.006,0,0,1,.98-1H8a1,1,0,0,1,1,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.5,14.01V2.55a.5.5,0,0,0-1,0V14.01A2,2,0,0,0,14,15.94v1a2,2,0,0,0,1.5,1.93v2.58a.5.5,0,0,0,.5.5.508.508,0,0,0,.5-.5V18.87A2,2,0,0,0,18,16.94v-1A2,2,0,0,0,16.5,14.01Zm.5,2.93a1.006,1.006,0,0,1-.98,1H16a1,1,0,0,1-1-1v-1a1,1,0,1,1,2,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSpeaker (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Speaker\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.437,21.938H6.562a2.5,2.5,0,0,1-2.5-2.5V4.562a2.5,2.5,0,0,1,2.5-2.5H17.437a2.5,2.5,0,0,1,2.5,2.5V19.438A2.5,2.5,0,0,1,17.437,21.938ZM6.562,3.062a1.5,1.5,0,0,0-1.5,1.5V19.438a1.5,1.5,0,0,0,1.5,1.5H17.437a1.5,1.5,0,0,0,1.5-1.5V4.562a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,18.939a3.75,3.75,0,1,1,3.75-3.75A3.755,3.755,0,0,1,12,18.939Zm0-6.5a2.75,2.75,0,1,0,2.75,2.75A2.752,2.752,0,0,0,12,12.439Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,9.563a2.25,2.25,0,1,1,2.25-2.25A2.253,2.253,0,0,1,12,9.563Zm0-3.5a1.25,1.25,0,1,0,1.25,1.25A1.251,1.251,0,0,0,12,6.063Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareAlert (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Alert\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.936H5.562a2.5,2.5,0,0,1-2.5-2.5V5.562a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.436A2.5,2.5,0,0,1,18.437,20.936ZM5.562,4.062a1.5,1.5,0,0,0-1.5,1.5V18.436a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.562a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.5,10.982a.5.5,0,0,1,1,0V15h0a.5.5,0,0,1-1,0Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"9\",\"r\":\"0.5\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiSquareCheck (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Check\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.939H5.563a2.5,2.5,0,0,1-2.5-2.5V5.566a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.439A2.5,2.5,0,0,1,18.437,20.939ZM5.563,4.066a1.5,1.5,0,0,0-1.5,1.5V18.439a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.566a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.81,10.4c.45-.46-.26-1.17-.71-.71l-3.56,3.56c-.58-.58-1.16-1.15-1.73-1.73a.5.5,0,0,0-.71.71l2.08,2.08a.513.513,0,0,0,.71,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareChevDown (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Chev_Down\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8.65,10.85a.495.495,0,0,1,.7-.7L12,12.79l2.65-2.64a.495.495,0,0,1,.7.7l-3,3a.492.492,0,0,1-.7,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M3.063,18.437V5.563a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.437a2.5,2.5,0,0,1-2.5,2.5H5.563A2.5,2.5,0,0,1,3.063,18.437ZM19.937,5.563a1.5,1.5,0,0,0-1.5-1.5H5.563a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareChevLeft (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Chev_Left\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.21,12l2.64,2.65a.495.495,0,0,1-.7.7c-.13-.12-.25-.24-.38-.37-.87-.87-1.75-1.75-2.62-2.63a.492.492,0,0,1,0-.7l3-3a.495.495,0,0,1,.7.7Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.939H5.562a2.5,2.5,0,0,1-2.5-2.5V5.566a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.439A2.5,2.5,0,0,1,18.437,20.939ZM5.562,4.066a1.5,1.5,0,0,0-1.5,1.5V18.439a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.566a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareChevRight (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Chev_Right\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.85,15.35a.495.495,0,0,1-.7-.7L12.79,12,10.15,9.35a.495.495,0,0,1,.7-.7l3,3a.492.492,0,0,1,0,.7Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.937H5.563a2.5,2.5,0,0,1-2.5-2.5V5.563a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.437A2.5,2.5,0,0,1,18.437,20.937ZM5.563,4.063a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareChevUp (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Chev_Up\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15.35,13.15a.495.495,0,0,1-.7.7L12,11.21,9.35,13.85a.495.495,0,0,1-.7-.7l3-3a.492.492,0,0,1,.7,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.937,5.563V18.437a2.5,2.5,0,0,1-2.5,2.5H5.563a2.5,2.5,0,0,1-2.5-2.5V5.563a2.5,2.5,0,0,1,2.5-2.5H18.437A2.5,2.5,0,0,1,20.937,5.563ZM4.063,18.437a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.563a1.5,1.5,0,0,0-1.5-1.5H5.563a1.5,1.5,0,0,0-1.5,1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareInfo (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Info\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.438,20.937H5.564a2.5,2.5,0,0,1-2.5-2.5V5.563a2.5,2.5,0,0,1,2.5-2.5H18.438a2.5,2.5,0,0,1,2.5,2.5V18.437A2.5,2.5,0,0,1,18.438,20.937ZM5.564,4.063a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5H18.438a1.5,1.5,0,0,0,1.5-1.5V5.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.5,9a.5.5,0,0,0-1,0h0v4.018a.5.5,0,0,0,1,0Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"14.999\",\"r\":\"0.5\"},\"child\":[]}]}]}]}]})(props);\n};\nfunction CiSquareMinus (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Minus\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.438,20.938H5.564a2.5,2.5,0,0,1-2.5-2.5V5.564a2.5,2.5,0,0,1,2.5-2.5H18.438a2.5,2.5,0,0,1,2.5,2.5V18.438A2.5,2.5,0,0,1,18.438,20.938ZM5.564,4.064a1.5,1.5,0,0,0-1.5,1.5V18.438a1.5,1.5,0,0,0,1.5,1.5H18.438a1.5,1.5,0,0,0,1.5-1.5V5.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9,12.5a.5.5,0,0,1,0-1h6a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareMore (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_More\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.938H5.562a2.5,2.5,0,0,1-2.5-2.5V5.565a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.438A2.5,2.5,0,0,1,18.437,20.938ZM5.562,4.065a1.5,1.5,0,0,0-1.5,1.5V18.438a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.565a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"11.999\",\"cy\":\"12.002\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"15.999\",\"cy\":\"12.002\",\"r\":\"1\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"7.999\",\"cy\":\"12.002\",\"r\":\"1\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquarePlus (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Plus\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.438,20.938H5.563a2.5,2.5,0,0,1-2.5-2.5V5.564a2.5,2.5,0,0,1,2.5-2.5H18.438a2.5,2.5,0,0,1,2.5,2.5V18.438A2.5,2.5,0,0,1,18.438,20.938ZM5.563,4.064a1.5,1.5,0,0,0-1.5,1.5V18.438a1.5,1.5,0,0,0,1.5,1.5H18.438a1.5,1.5,0,0,0,1.5-1.5V5.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15,12.5H12.5V15a.5.5,0,0,1-1,0V12.5H9a.5.5,0,0,1,0-1h2.5V9a.5.5,0,0,1,1,0v2.5H15A.5.5,0,0,1,15,12.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareQuestion (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Question\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M11.41,12.461a1.555,1.555,0,0,1,.341-.6,2.68,2.68,0,0,1,.535-.417,2.2,2.2,0,0,0,.363-.285,1.218,1.218,0,0,0,.256-.364A1.083,1.083,0,0,0,13,10.344a.927.927,0,0,0-.142-.518.946.946,0,0,0-.374-.338,1.135,1.135,0,0,0-.519-.119,1.188,1.188,0,0,0-.5.107.934.934,0,0,0-.389.335.884.884,0,0,0-.111.224.515.515,0,0,1-.483.359h0a.506.506,0,0,1-.479-.675,1.653,1.653,0,0,1,.178-.348,1.789,1.789,0,0,1,.748-.634,2.609,2.609,0,0,1,2.113.015,1.733,1.733,0,0,1,.721.642,1.766,1.766,0,0,1,.257.959,1.833,1.833,0,0,1-.118.678,1.674,1.674,0,0,1-.334.536,2.289,2.289,0,0,1-.52.417,2.245,2.245,0,0,0-.462.37,1.1,1.1,0,0,0-.256.454,2.344,2.344,0,0,0-.045.283.486.486,0,0,1-.483.429h0a.484.484,0,0,1-.483-.53A2.928,2.928,0,0,1,11.41,12.461Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"11.792\",\"cy\":\"14.894\",\"r\":\"0.587\"},\"child\":[]}]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.438,20.938H5.563a2.5,2.5,0,0,1-2.5-2.5V5.564a2.5,2.5,0,0,1,2.5-2.5H18.438a2.5,2.5,0,0,1,2.5,2.5V18.438A2.5,2.5,0,0,1,18.438,20.938ZM5.563,4.064a1.5,1.5,0,0,0-1.5,1.5V18.438a1.5,1.5,0,0,0,1.5,1.5H18.438a1.5,1.5,0,0,0,1.5-1.5V5.564a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSquareRemove (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Square_Remove\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.937H5.563a2.5,2.5,0,0,1-2.5-2.5V5.563a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.437A2.5,2.5,0,0,1,18.437,20.937ZM5.563,4.063a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.767,14.477a.5.5,0,0,0,.71-.71L12.707,12l1.77-1.77a.5.5,0,0,0-.71-.7L12,11.3l-1.77-1.77a.5.5,0,0,0-.7.7c.59.59,1.17,1.18,1.77,1.77l-1.77,1.77c-.46.45.25,1.16.7.71L12,12.707Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiStar (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Star\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.6,20.463a1.5,1.5,0,0,1-.7-.174l-3.666-1.927a.5.5,0,0,0-.464,0L8.1,20.289a1.5,1.5,0,0,1-2.177-1.581l.7-4.082a.5.5,0,0,0-.143-.442L3.516,11.293a1.5,1.5,0,0,1,.832-2.559l4.1-.6a.5.5,0,0,0,.376-.273l1.833-3.714a1.5,1.5,0,0,1,2.69,0l1.833,3.714a.5.5,0,0,0,.376.274l4.1.6a1.5,1.5,0,0,1,.832,2.559l-2.965,2.891a.5.5,0,0,0-.144.442l.7,4.082A1.5,1.5,0,0,1,16.6,20.463Zm-3.9-2.986L16.364,19.4a.5.5,0,0,0,.725-.527l-.7-4.082a1.5,1.5,0,0,1,.432-1.328l2.965-2.89a.5.5,0,0,0-.277-.853l-4.1-.6a1.5,1.5,0,0,1-1.13-.821L12.449,4.594a.516.516,0,0,0-.9,0L9.719,8.308a1.5,1.5,0,0,1-1.13.82l-4.1.6a.5.5,0,0,0-.277.853L7.18,13.468A1.5,1.5,0,0,1,7.611,14.8l-.7,4.082a.5.5,0,0,0,.726.527L11.3,17.477a1.5,1.5,0,0,1,1.4,0Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiStethoscope (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Stethoscope\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.185,9.256a2.748,2.748,0,0,0-.5,5.45v2.31a2.923,2.923,0,0,1-2.92,2.92h-2.78a2.923,2.923,0,0,1-2.92-2.92v-.98a5.5,5.5,0,0,0,5-5.47V5.286a1.483,1.483,0,0,0-1.03-1.42l-2.31-.78a.5.5,0,0,0-.63.32.491.491,0,0,0,.31.63l2.32.78a.486.486,0,0,1,.34.47v5.28a4.5,4.5,0,0,1-9,0V5.286a.486.486,0,0,1,.34-.47l2.32-.78a.491.491,0,0,0,.31-.63.5.5,0,0,0-.63-.32l-2.31.78a1.483,1.483,0,0,0-1.03,1.42v5.28a5.5,5.5,0,0,0,5,5.47v.98a3.926,3.926,0,0,0,3.92,3.92h2.78a3.926,3.926,0,0,0,3.92-3.92v-2.31a2.748,2.748,0,0,0-.5-5.45Zm0,4.5a1.75,1.75,0,1,1,1.75-1.75A1.758,1.758,0,0,1,18.185,13.756Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiStickyNote (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Sticky_Note\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.44,3.065H5.56a2.507,2.507,0,0,0-2.5,2.5v12.87a2.507,2.507,0,0,0,2.5,2.5h8.68A2.482,2.482,0,0,0,16,20.2l4.21-4.2a2.505,2.505,0,0,0,.73-1.77V5.565A2.5,2.5,0,0,0,18.44,3.065Zm-4.38,13.5v3.37H5.56a1.5,1.5,0,0,1-1.5-1.5V5.565a1.5,1.5,0,0,1,1.5-1.5H18.44a1.5,1.5,0,0,1,1.5,1.5v8.5H16.56A2.507,2.507,0,0,0,14.06,16.565Zm1,3.13v-3.13a1.5,1.5,0,0,1,1.5-1.5h3.13Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiStop1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Stop_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.937H5.563a2.5,2.5,0,0,1-2.5-2.5V5.563a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.437A2.5,2.5,0,0,1,18.437,20.937ZM5.563,4.063a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiStopSign1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Stop_Sign_1\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.531,15.688H10.14a.5.5,0,0,1,0-1h2.391a1.094,1.094,0,0,0,0-2.188H11.468a2.094,2.094,0,0,1,0-4.188h2.391a.5.5,0,0,1,0,1H11.468a1.094,1.094,0,0,0,0,2.188h1.063a2.094,2.094,0,0,1,0,4.188Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.079,21.933H8.92A2.482,2.482,0,0,1,7.153,21.2L2.8,16.847a2.484,2.484,0,0,1-.732-1.768V8.921A2.486,2.486,0,0,1,2.8,7.153L7.153,2.8A2.482,2.482,0,0,1,8.92,2.067h6.159a2.482,2.482,0,0,1,1.767.732L21.2,7.154a2.482,2.482,0,0,1,.732,1.767v6.158a2.491,2.491,0,0,1-.731,1.768L16.846,21.2A2.482,2.482,0,0,1,15.079,21.933ZM8.92,3.067a1.511,1.511,0,0,0-1.06.439L3.506,7.861a1.489,1.489,0,0,0-.439,1.06v6.158a1.491,1.491,0,0,0,.439,1.061L7.86,20.494a1.511,1.511,0,0,0,1.06.439h6.159a1.511,1.511,0,0,0,1.06-.439l4.355-4.354a1.494,1.494,0,0,0,.439-1.061V8.921a1.511,1.511,0,0,0-.439-1.06L16.139,3.506a1.511,1.511,0,0,0-1.06-.439Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiStopwatch (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Stopwatch\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.925,7.828c1.226,1.391 1.97,3.217 1.97,5.215c0,4.358 -3.537,7.895 -7.895,7.895c-4.358,0 -7.896,-3.537 -7.896,-7.895c0,-4.189 3.271,-7.621 7.396,-7.879l0,-1.103l-1.587,0c-0.645,0 -0.643,-1 -0,-1l4.174,0c0.645,0 0.644,1 -0,1l-1.587,0l0,1.103c1.803,0.113 3.443,0.832 4.718,1.956c0.378,-0.378 0.756,-0.756 1.135,-1.134c0.197,-0.198 0.507,-0.183 0.707,-0c0.199,0.183 0.185,0.522 -0,0.707l-1.135,1.135Zm0.97,5.215c0,-3.805 -3.089,-6.895 -6.895,-6.895c-3.806,0.001 -6.896,3.09 -6.896,6.895c0,3.806 3.09,6.895 6.896,6.895c3.806,0 6.895,-3.089 6.895,-6.895Zm-6.395,0.001c0,0.645 -1,0.643 -1,-0l0,-4.704c0,-0.644 1,-0.643 1,-0l0,4.704Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiStreamOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Stream_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M4.911,4.206c-.45-.45-1.16.26-.71.71l.32.32v.01A10.646,10.646,0,0,0,5.541,19.8c.48.43,1.19-.28.71-.71a9.623,9.623,0,0,1-1.01-13.13l2.27,2.27a6.022,6.022,0,0,0,.61,8.18c.48.44,1.19-.27.71-.7a5.024,5.024,0,0,1-.61-6.77l2.61,2.61a1.13,1.13,0,0,0-.09.45,1.248,1.248,0,0,0,1.25,1.24,1.13,1.13,0,0,0,.45-.09l4.77,4.77.86.86a3.024,3.024,0,0,1-.31.31.355.355,0,0,0-.11.16.406.406,0,0,0-.04.19.381.381,0,0,0,.04.19.386.386,0,0,0,.11.17.5.5,0,0,0,.35.14.585.585,0,0,0,.13-.02.432.432,0,0,0,.22-.12c.11-.1.22-.2.32-.3.1.09.19.19.29.29.45.45,1.16-.26.71-.71Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.73,4.908a9.624,9.624,0,0,1,2.3,11.1c-.265.582.6,1.09.864.505A10.647,10.647,0,0,0,18.438,4.2c-.475-.433-1.185.272-.708.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.15,8.291a5.016,5.016,0,0,1,1.6,4.572.515.515,0,0,0,.349.615.5.5,0,0,0,.615-.349,6.042,6.042,0,0,0-1.852-5.546c-.476-.431-1.185.274-.708.708Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiStreamOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Stream_On\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M6.26,19.089A9.625,9.625,0,0,1,6.234,4.911C6.709,4.475,6,3.769,5.527,4.2A10.516,10.516,0,0,0,5.553,19.8c.475.433,1.184-.273.707-.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.84,15.706a5.024,5.024,0,0,1-.014-7.412c.474-.437-.234-1.143-.707-.707a6.028,6.028,0,0,0,.014,8.826c.474.434,1.183-.272.707-.707Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"1.244\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.74,4.911a9.625,9.625,0,0,1,.026,14.178c-.475.436.234,1.142.707.707A10.516,10.516,0,0,0,18.447,4.2c-.475-.433-1.184.273-.707.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.16,8.294a5.024,5.024,0,0,1,.014,7.412c-.474.437.234,1.143.707.707a6.028,6.028,0,0,0-.014-8.826c-.474-.434-1.183.272-.707.707Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiSun (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Sun\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12,20.937a1.074,1.074,0,0,1-.94-.542L9.61,17.9a.084.084,0,0,0-.1-.041L6.728,18.6A1.087,1.087,0,0,1,5.4,17.272l.748-2.8a.088.088,0,0,0-.041-.1l-2.5-1.439a1.086,1.086,0,0,1,0-1.881L6.1,9.61a.087.087,0,0,0,.041-.1L5.4,6.728A1.087,1.087,0,0,1,6.728,5.4l2.8.748a.091.091,0,0,0,.1-.041l1.439-2.5A1.076,1.076,0,0,1,12,3.063h0a1.074,1.074,0,0,1,.94.542L14.39,6.1a.084.084,0,0,0,.1.041L17.272,5.4A1.087,1.087,0,0,1,18.6,6.728l-.748,2.8a.087.087,0,0,0,.041.1l2.5,1.439a1.086,1.086,0,0,1,0,1.881L17.9,14.39a.089.089,0,0,0-.041.1l.748,2.784A1.087,1.087,0,0,1,17.272,18.6l-2.8-.748a.089.089,0,0,0-.1.041l-1.439,2.5a1.076,1.076,0,0,1-.94.544ZM9.534,16.853a1.091,1.091,0,0,1,.942.541l1.448,2.5a.082.082,0,0,0,.075.043h0a.081.081,0,0,0,.074-.043l1.44-2.5a1.083,1.083,0,0,1,1.221-.507l2.8.747a.087.087,0,0,0,.106-.106l-.747-2.785a1.089,1.089,0,0,1,.5-1.222l2.5-1.448a.086.086,0,0,0,0-.15l-2.5-1.439a1.086,1.086,0,0,1-.507-1.221l.747-2.8a.08.08,0,0,0-.022-.083.086.086,0,0,0-.085-.023l-2.784.747a1.088,1.088,0,0,1-1.222-.5l-1.448-2.5A.082.082,0,0,0,12,4.063h0a.081.081,0,0,0-.074.043l-1.44,2.5a1.087,1.087,0,0,1-1.222.507l-2.8-.747a.087.087,0,0,0-.106.106L7.11,9.254a1.089,1.089,0,0,1-.5,1.222l-2.5,1.448A.082.082,0,0,0,4.063,12a.081.081,0,0,0,.043.074l2.5,1.44a1.087,1.087,0,0,1,.507,1.221l-.747,2.8a.08.08,0,0,0,.022.083.087.087,0,0,0,.085.023l2.784-.747A1.077,1.077,0,0,1,9.534,16.853Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,15.875A3.875,3.875,0,1,1,15.875,12,3.88,3.88,0,0,1,12,15.875Zm0-6.75A2.875,2.875,0,1,0,14.875,12,2.879,2.879,0,0,0,12,9.125Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiTablets1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Tablets_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.76,3.065a6.171,6.171,0,0,0-6.11,5.58,6.159,6.159,0,1,0,6.71,6.71,6.159,6.159,0,0,0-.6-12.29ZM9.23,19.935A5.166,5.166,0,0,1,5.24,11.5l7.27,7.26A5.153,5.153,0,0,1,9.23,19.935Zm3.99-1.88-7.27-7.27a5.165,5.165,0,0,1,7.27,7.27Zm2.15-3.71a6.12,6.12,0,0,0-5.72-5.71,5.157,5.157,0,1,1,5.72,5.71Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiTempHigh (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Temp_High\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M14.863,13.4V4.939a2.929,2.929,0,0,0-.84-2.03,2.859,2.859,0,0,0-2.23-.82,2.948,2.948,0,0,0-2.66,3l.01,8.28a4.755,4.755,0,0,0,1.9,8.46,5.093,5.093,0,0,0,.95.09,4.759,4.759,0,0,0,4.76-4.75A4.684,4.684,0,0,0,14.863,13.4Zm-.48,6.66a3.783,3.783,0,0,1-3.15.78,3.7,3.7,0,0,1-2.92-2.98,3.745,3.745,0,0,1,1.43-3.69.962.962,0,0,0,.39-.77V5.089a1.968,1.968,0,0,1,1.73-2,.66.66,0,0,1,.14-.01,1.878,1.878,0,0,1,1.86,1.86V13.4a.962.962,0,0,0,.39.77,3.742,3.742,0,0,1,.13,5.89Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.893,17.169a1.89,1.89,0,0,1-3.78,0,1.858,1.858,0,0,1,1.39-1.81V5.4a.5.5,0,0,1,1,0v9.96A1.869,1.869,0,0,1,13.893,17.169Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiTextAlignCenter (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Text_Align_Center\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,4.063H3.563a.5.5,0,1,1,0-1H20.437a.5.5,0,1,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.5,8.5h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.5,16.5h-9a.5.5,0,1,1,0-1h9a.5.5,0,1,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,12.5H3.563a.5.5,0,0,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,20.937H3.563a.5.5,0,1,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiTextAlignJustify (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Text_Align_Justify\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,4.064H3.563a.5.5,0,0,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,8.5H3.563a.5.5,0,0,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,16.5H3.563a.5.5,0,1,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,12.5H3.563a.5.5,0,0,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,20.936H3.563a.5.5,0,1,1,0-1H20.437a.5.5,0,1,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiTextAlignLeft (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Text_Align_Left\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.438,4.063H3.563a.5.5,0,1,1,0-1H20.438a.5.5,0,1,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.562,8.5h-9a.5.5,0,0,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.562,16.5h-9a.5.5,0,1,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.436,12.5H3.562a.5.5,0,1,1,0-1H20.436a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.436,20.937H3.562a.5.5,0,0,1,0-1H20.436a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiTextAlignRight (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Text_Align_Right\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,4.064H3.563a.5.5,0,0,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,8.5h-9a.5.5,0,1,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,16.5h-9a.5.5,0,1,1,0-1h9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,12.5H3.563a.5.5,0,0,1,0-1H20.437a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M20.437,20.936H3.563a.5.5,0,1,1,0-1H20.437a.5.5,0,1,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiText (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Text\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.44,2.06H5.56a1.5,1.5,0,0,0-1.5,1.5v4.5a.5.5,0,0,0,1,0v-1H10V20.94H8a.5.5,0,0,0,0,1h8a.5.5,0,0,0,0-1H14V7.06h4.94v1a.5.5,0,0,0,1,0V3.56A1.5,1.5,0,0,0,18.44,2.06Zm.5,4H14a1,1,0,0,0-1,1V20.94H11V7.06a1,1,0,0,0-1-1H5.06V3.56a.5.5,0,0,1,.5-.5H18.44a.5.5,0,0,1,.5.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiTimer (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Timer\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M2.336,9.685A9.934,9.934,0,0,0,13.592,21.808,9.931,9.931,0,0,0,20.708,7.23,10.046,10.046,0,0,0,12,2.072a.507.507,0,0,0-.5.5v4.2a.5.5,0,0,0,1,0v-4.2l-.5.5a8.935,8.935,0,0,1,8.433,11.892A8.938,8.938,0,0,1,6.468,19.027,9.041,9.041,0,0,1,3.3,9.951c.142-.627-.822-.9-.964-.266Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M7.4,8.117a.5.5,0,0,1,.707-.707l4.243,4.242h0a.5.5,0,0,1-.707.707Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiTrash (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Trash\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.45,4.06H15.27v-.5a1.5,1.5,0,0,0-1.5-1.5H10.23a1.5,1.5,0,0,0-1.5,1.5v.5H4.55a.5.5,0,0,0,0,1h.72l.42,14.45a2.493,2.493,0,0,0,2.5,2.43h7.62a2.493,2.493,0,0,0,2.5-2.43l.42-14.45h.72A.5.5,0,0,0,19.45,4.06Zm-9.72-.5a.5.5,0,0,1,.5-.5h3.54a.5.5,0,0,1,.5.5v.5H9.73Zm7.58,15.92a1.5,1.5,0,0,1-1.5,1.46H8.19a1.5,1.5,0,0,1-1.5-1.46L6.26,5.06H17.74Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.375,8h0a.5.5,0,0,1,1,0l.25,10a.5.5,0,0,1-1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M15.625,8.007a.5.5,0,0,0-1,0h0l-.25,10a.5.5,0,0,0,1,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiTrophy (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Trophy\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.435,5.055h-.97c.01-.12.02-.24.02-.36a1.645,1.645,0,0,0-.45-1.18,1.462,1.462,0,0,0-1.05-.45H7.025a1.484,1.484,0,0,0-1.06.45,1.6,1.6,0,0,0-.44,1.18c0,.12.01.24.02.36h-.98a1.5,1.5,0,0,0-1.5,1.5v2a4.5,4.5,0,0,0,4.27,4.49c1.07,2.3,2.53,3.79,4.17,4.04v2.85h-4a.5.5,0,1,0,0,1h9a.5.5,0,0,0,0-1h-4v-2.85c1.64-.25,3.1-1.74,4.17-4.04a4.493,4.493,0,0,0,4.26-4.49v-2A1.5,1.5,0,0,0,19.435,5.055Zm-15.37,3.5v-2a.5.5,0,0,1,.5-.5h1.04a22.9,22.9,0,0,0,1.28,5.93A3.5,3.5,0,0,1,4.065,8.555Zm7.94,7.57c-2.82,0-5.23-5.04-5.48-11.47a.573.573,0,0,1,.16-.44.48.48,0,0,1,.34-.15h9.96a.442.442,0,0,1,.33.15.62.62,0,0,1,.17.44C17.235,11.085,14.825,16.125,12.005,16.125Zm7.93-7.57a3.508,3.508,0,0,1-2.8,3.42,23.353,23.353,0,0,0,1.27-5.92h1.03a.5.5,0,0,1,.5.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiTurnL1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Turn_L_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.939,9.509v10.93a.508.508,0,0,1-.5.5.5.5,0,0,1-.5-.5V9.509a3.5,3.5,0,0,0-3.5-3.5h-9.9l-.01,1.44a.5.5,0,0,1-.81.4l-2.47-1.96a.5.5,0,0,1,0-.78l2.49-1.94a.5.5,0,0,1,.81.4l-.01,1.44h9.9A4.507,4.507,0,0,1,20.939,9.509Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiTurnR1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Turn_R_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M3.061,9.509v10.93a.508.508,0,0,0,.5.5.5.5,0,0,0,.5-.5V9.509a3.5,3.5,0,0,1,3.5-3.5h9.9l.01,1.44a.5.5,0,0,0,.81.4l2.47-1.96a.5.5,0,0,0,0-.78l-2.49-1.94a.5.5,0,0,0-.81.4l.01,1.44h-9.9A4.507,4.507,0,0,0,3.061,9.509Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiTwitter (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Twitter\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.913,5.322a1.034,1.034,0,0,1,.837,1.629L19.708,8.432c-.064,5.086-1.765,8.539-5.056,10.264A10.917,10.917,0,0,1,9.6,19.835a12.233,12.233,0,0,1-6.2-1.524.76.76,0,0,1-.317-.8.768.768,0,0,1,.63-.6,20.6,20.6,0,0,0,3.745-.886C2,13.5,3.19,7.824,3.71,6.081a1.028,1.028,0,0,1,1.729-.422,9.931,9.931,0,0,0,5.995,2.95A4.188,4.188,0,0,1,12.725,5.3a4.125,4.125,0,0,1,5.7.02ZM4.521,17.794c1.862.872,6.226,1.819,9.667.016,2.955-1.549,4.476-4.732,4.521-9.461a.771.771,0,0,1,.142-.436l1.081-1.538-.041-.053c-.518-.007-1.029-.014-1.55,0a.835.835,0,0,1-.547-.221,3.13,3.13,0,0,0-4.383-.072,3.174,3.174,0,0,0-.935,2.87.646.646,0,0,1-.154.545.591.591,0,0,1-.516.205A10.924,10.924,0,0,1,4.722,6.354c-.67,2.078-1.52,7.094,3.869,9.065a.632.632,0,0,1,.416.538.625.625,0,0,1-.3.6A13.178,13.178,0,0,1,4.521,17.794ZM11.875,8.65h0Zm7.793-.161,0,0Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiUmbrella (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Umbrella\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.5,4.06v-.5a.509.509,0,0,0-.15-.35.483.483,0,0,0-.7,0,.491.491,0,0,0-.15.35v.5a8.41,8.41,0,0,0-7.88,7.82.976.976,0,0,0,.27.74,1.029,1.029,0,0,0,.74.32H11.5v5.22a1.653,1.653,0,0,1-.62,1.54A1.528,1.528,0,0,1,8.5,18.54a.5.5,0,0,0-1,0,2.433,2.433,0,0,0,2.43,2.4,2.45,2.45,0,0,0,2.57-2.29c.08-1.39,0-2.81,0-4.2V12.94h6.87a1.029,1.029,0,0,0,.74-.32.976.976,0,0,0,.27-.74A8.41,8.41,0,0,0,12.5,4.06Zm6.87,7.88-14.75.01a7.4,7.4,0,0,1,14.76-.02C19.38,11.94,19.38,11.94,19.37,11.94Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiUndo (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Undo\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.939,13.67A7.958,7.958,0,0,1,7.8,19.74a8.061,8.061,0,0,1-3.77-6.77.5.5,0,0,1,1,0,6.976,6.976,0,0,0,11,5.7,6.969,6.969,0,0,0-1-11.97,10.075,10.075,0,0,0-4.64-.69V7.46a.5.5,0,0,1-.81.39L7.109,5.9a.5.5,0,0,1,0-.79L9.6,3.17a.5.5,0,0,1,.8.4V5.01c.71-.01,1.43-.03,2.13.02a7.985,7.985,0,0,1,7.41,8.64Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiUnlock (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Unlock\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.44,9.33h-1.1c0-.97.01-1.95,0-2.92A4.343,4.343,0,0,0,8.36,4.04c-.36.53.51,1.03.87.5a3.365,3.365,0,0,1,5.23-.39c1.04,1.11.88,2.57.88,3.96V9.33H6.56a2.5,2.5,0,0,0-2.5,2.5v7.61a2.507,2.507,0,0,0,2.5,2.5H17.44a2.507,2.507,0,0,0,2.5-2.5V11.83A2.5,2.5,0,0,0,17.44,9.33Zm1.5,10.11a1.511,1.511,0,0,1-1.5,1.5H6.56a1.511,1.511,0,0,1-1.5-1.5V11.83a1.5,1.5,0,0,1,1.5-1.5H17.44a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13,14.95a.984.984,0,0,1-.5.86v1.5a.5.5,0,0,1-1,0v-1.5a.984.984,0,0,1-.5-.86,1,1,0,0,1,2,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiUnread (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"unread\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.182,6.314a10.215,10.215,0,0,1,7.9,1.782,9.145,9.145,0,0,1,2.5,2.817,1.875,1.875,0,0,1,.082,2.024,9.266,9.266,0,0,1-1.485,2.008c-.446.464.26,1.172.707.707,1.1-1.144,2.533-2.86,1.9-4.554a8.845,8.845,0,0,0-2.721-3.5A11.243,11.243,0,0,0,9.916,5.35c-.633.11-.364,1.074.266.964Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19.824,19.11q-3.045-3.045-6.09-6.08c-.93-.93-1.85-1.86-2.77-2.77Q8.849,8.145,6.754,6.04L4.894,4.18c-.45-.45-1.16.26-.71.71l1.9,1.9a10.42,10.42,0,0,0-3.22,3.12,3.743,3.743,0,0,0-.8,2.28,4.581,4.581,0,0,0,.99,2.17,10.925,10.925,0,0,0,8.18,4.5A11.379,11.379,0,0,0,17,17.71l.25.25,1.86,1.86C19.564,20.27,20.274,19.56,19.824,19.11Zm-10.3-8.88c.25.24.49.49.73.73A2.039,2.039,0,0,0,12,14.03a2.023,2.023,0,0,0,1.04-.28c.25.24.49.49.73.73a3.047,3.047,0,0,1-4.25-4.25Zm-3.7,5.6a9.558,9.558,0,0,1-1.81-1.84c-.53-.71-1.19-1.62-.85-2.55a8.348,8.348,0,0,1,3.65-3.92c.67.67,1.34,1.33,2,2a4.04,4.04,0,0,0,5.67,5.67c.6.59,1.19,1.19,1.78,1.78A10.4,10.4,0,0,1,5.824,15.83Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiUsb (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Usb\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.44,8.355H18.31v-.14a1.443,1.443,0,0,0-1.44-1.45H7.29a5.235,5.235,0,0,0,0,10.47h9.58a1.443,1.443,0,0,0,1.44-1.45v-.14h2.13a1.511,1.511,0,0,0,1.5-1.5V9.855A1.5,1.5,0,0,0,20.44,8.355Zm-3.13,7.43a.446.446,0,0,1-.44.45H7.29a4.235,4.235,0,0,1,0-8.47h9.58a.446.446,0,0,1,.44.45Zm3.63-1.64a.508.508,0,0,1-.5.5H18.31V9.355h2.13a.5.5,0,0,1,.5.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.29,13.444A1.446,1.446,0,1,1,7.738,12,1.447,1.447,0,0,1,6.29,13.444Zm0-1.892A.446.446,0,1,0,6.738,12,.446.446,0,0,0,6.29,11.552Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiUser (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"User\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.438,21.937H6.562a2.5,2.5,0,0,1-2.5-2.5V18.61c0-3.969,3.561-7.2,7.938-7.2s7.938,3.229,7.938,7.2v.827A2.5,2.5,0,0,1,17.438,21.937ZM12,12.412c-3.826,0-6.938,2.78-6.938,6.2v.827a1.5,1.5,0,0,0,1.5,1.5H17.438a1.5,1.5,0,0,0,1.5-1.5V18.61C18.938,15.192,15.826,12.412,12,12.412Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,9.911a3.924,3.924,0,1,1,3.923-3.924A3.927,3.927,0,0,1,12,9.911Zm0-6.847a2.924,2.924,0,1,0,2.923,2.923A2.926,2.926,0,0,0,12,3.064Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiVault (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Vault\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15.935,6.06H8.065a2,2,0,0,0-2,2v6a1.993,1.993,0,0,0,2,2h7.87a2,2,0,0,0,2-2v-6A2.006,2.006,0,0,0,15.935,6.06Zm1,8a1,1,0,0,1-1,1H8.065a.99.99,0,0,1-1-1v-6a1,1,0,0,1,1-1h7.87a1,1,0,0,1,1,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.435,3.06H5.565a2.507,2.507,0,0,0-2.5,2.5v11a2.5,2.5,0,0,0,2.5,2.5v.38a1.5,1.5,0,0,0,1.5,1.5h1.43a1.5,1.5,0,0,0,1.5-1.5v-.38h4v.38a1.5,1.5,0,0,0,1.5,1.5h1.44a1.5,1.5,0,0,0,1.5-1.5v-.38a2.5,2.5,0,0,0,2.5-2.5v-11A2.507,2.507,0,0,0,18.435,3.06ZM8.995,19.44a.5.5,0,0,1-.5.5H7.065a.5.5,0,0,1-.5-.5v-.38h2.43Zm8.44,0a.5.5,0,0,1-.5.5H15.5a.508.508,0,0,1-.5-.5v-.38h2.44Zm2.5-2.88a1.5,1.5,0,0,1-1.5,1.5H5.565a1.5,1.5,0,0,1-1.5-1.5v-11a1.5,1.5,0,0,1,1.5-1.5h12.87a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.265,10.56h-.61A1.656,1.656,0,0,0,12.5,9.4V8.79a.491.491,0,0,0-.5-.48.5.5,0,0,0-.5.48V9.4a1.656,1.656,0,0,0-1.16,1.16h-.61a.5.5,0,0,0-.48.5.491.491,0,0,0,.48.5h.61a1.656,1.656,0,0,0,1.16,1.16v.62a.489.489,0,0,0,.5.47.483.483,0,0,0,.5-.47v-.62a1.622,1.622,0,0,0,1.16-1.16h.61a.485.485,0,0,0,.48-.5A.491.491,0,0,0,14.265,10.56ZM12,11.81a.75.75,0,1,1,.75-.75A.749.749,0,0,1,12,11.81Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiVial (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Vial\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.779,9.441l-.48-.47L15.039,3.7l-.48-.48a.5.5,0,0,0-.7,0,.5.5,0,0,0,0,.71l.47.48L4.159,14.581a3.694,3.694,0,0,0,0,5.22l.04.04a3.706,3.706,0,0,0,5.23,0L19.6,9.671l.47.48a.52.52,0,0,0,.71,0A.513.513,0,0,0,20.779,9.441Zm-12.06,9.69a2.7,2.7,0,0,1-3.81,0l-.04-.04a2.7,2.7,0,0,1,0-3.81l1.7-1.7h7.71Zm6.56-6.55H7.569l7.47-7.46,3.85,3.85Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiVideoOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Video_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M20.783,9.51v6.53a.5.5,0,0,1-1,0V9.6c0-.85.06-1.72,0-2.57-.03-.37-.27-.5-.61-.3-.39.22-.76.51-1.13.76-.73.49-1.47.99-2.2,1.49,0,.71-.01,1.41-.01,2.11a.5.5,0,0,1-1,0V9.12c0-.58.01-1.16,0-1.74a1.524,1.524,0,0,0-1.56-1.5c-1.22-.01-2.43,0-3.65,0a.5.5,0,0,1,0-1h2.13c.6,0,1.22-.05,1.81.01a2.54,2.54,0,0,1,2.27,2.5c0,.13.01.26,0,.39.77-.53,1.55-1.05,2.32-1.57a2.466,2.466,0,0,1,1.26-.6,1.364,1.364,0,0,1,1.37,1.36C20.813,7.81,20.783,8.67,20.783,9.51Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19.773,19.08q-6.5-6.51-12.99-13c-.62-.62-1.24-1.24-1.87-1.86-.45-.46-1.16.25-.7.71l.28.28A2.468,2.468,0,0,0,3.2,7.38v9.24a2.5,2.5,0,0,0,2.5,2.5h7.63a2.5,2.5,0,0,0,2.5-2.5v-.07l1.37,1.37c.62.62,1.24,1.24,1.87,1.86A.5.5,0,0,0,19.773,19.08Zm-4.94-2.46a1.5,1.5,0,0,1-1.5,1.5H5.7a1.5,1.5,0,0,1-1.5-1.5V7.38a1.5,1.5,0,0,1,1.04-1.42l9.59,9.59Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiVideoOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Video_On\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M21.05,5.05a1.433,1.433,0,0,0-1.48.08L16.25,7.37V6.56a2.5,2.5,0,0,0-2.5-2.5H4.69a2.5,2.5,0,0,0-2.5,2.5V17.44a2.5,2.5,0,0,0,2.5,2.5h9.06a2.5,2.5,0,0,0,2.5-2.5v-.81l3.32,2.24a1.5,1.5,0,0,0,.81.24,1.414,1.414,0,0,0,1.43-1.43V6.32A1.437,1.437,0,0,0,21.05,5.05Zm-5.8,12.39a1.5,1.5,0,0,1-1.5,1.5H4.69a1.5,1.5,0,0,1-1.5-1.5V6.56a1.5,1.5,0,0,1,1.5-1.5h9.06a1.5,1.5,0,0,1,1.5,1.5Zm5.56.24a.415.415,0,0,1-.23.38.425.425,0,0,1-.45-.02l-3.88-2.62V8.58l3.88-2.62a.425.425,0,0,1,.45-.02.415.415,0,0,1,.23.38Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiViewBoard (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"View_Board\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.437,20.936H5.563a2.5,2.5,0,0,1-2.5-2.5V5.562a2.5,2.5,0,0,1,2.5-2.5H18.437a2.5,2.5,0,0,1,2.5,2.5V18.436A2.5,2.5,0,0,1,18.437,20.936ZM5.563,4.062a1.5,1.5,0,0,0-1.5,1.5V18.436a1.5,1.5,0,0,0,1.5,1.5H18.437a1.5,1.5,0,0,0,1.5-1.5V5.562a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12.5,14.544a.5.5,0,0,1-1,0v-8h0a.5.5,0,0,1,1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.717,12.453a.5.5,0,0,1-1,0V6.544h0a.5.5,0,0,1,1,0Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.28,6.544a.5.5,0,0,0-1,0h0v4a.5.5,0,0,0,1,0Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiViewColumn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"View_Column\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.44,3.06H5.56a2.507,2.507,0,0,0-2.5,2.5V18.44a2.514,2.514,0,0,0,2.5,2.5H18.44a2.514,2.514,0,0,0,2.5-2.5V5.56A2.507,2.507,0,0,0,18.44,3.06ZM8.67,19.94H5.56a1.511,1.511,0,0,1-1.5-1.5V5.56a1.5,1.5,0,0,1,1.5-1.5H8.67Zm1-15.88h4.66V19.94H9.67ZM19.94,18.44a1.511,1.511,0,0,1-1.5,1.5H15.33V4.06h3.11a1.5,1.5,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiViewList (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"View_List\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.436,20.937H5.562a2.5,2.5,0,0,1-2.5-2.5V5.563a2.5,2.5,0,0,1,2.5-2.5H18.436a2.5,2.5,0,0,1,2.5,2.5V18.437A2.5,2.5,0,0,1,18.436,20.937ZM5.562,4.063a1.5,1.5,0,0,0-1.5,1.5V18.437a1.5,1.5,0,0,0,1.5,1.5H18.436a1.5,1.5,0,0,0,1.5-1.5V5.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.544,8.283h0a.519.519,0,0,1-.353-.147.5.5,0,0,1,0-.707.512.512,0,0,1,.353-.146H7.55a.516.516,0,0,1,.353.146.5.5,0,0,1,.147.354.5.5,0,0,1-.5.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.544,12.5h0a.523.523,0,0,1-.353-.146.5.5,0,0,1,0-.708.516.516,0,0,1,.353-.146H7.55a.521.521,0,0,1,.353.146.5.5,0,0,1,0,.708.516.516,0,0,1-.353.146Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.544,16.72h0a.519.519,0,0,1-.353-.147.5.5,0,0,1,0-.707.516.516,0,0,1,.353-.146H7.55a.516.516,0,0,1,.353.146.5.5,0,0,1,.147.354.5.5,0,0,1-.5.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10.554,8.281h0a.5.5,0,0,1,0-1h6.9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10.554,12.5h0a.5.5,0,0,1,0-1h6.9a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M10.554,16.718h0a.5.5,0,0,1,0-1h6.9a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiViewTable (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"View_Table\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.44,3.06H5.56a2.507,2.507,0,0,0-2.5,2.5V18.44a2.507,2.507,0,0,0,2.5,2.5H18.44a2.514,2.514,0,0,0,2.5-2.5V5.56A2.514,2.514,0,0,0,18.44,3.06ZM8.71,19.94H5.56a1.5,1.5,0,0,1-1.5-1.5V15.33H8.71Zm0-5.61H4.06V9.67H8.71Zm0-5.66H4.06V5.56a1.5,1.5,0,0,1,1.5-1.5H8.71Zm11.23,9.77a1.511,1.511,0,0,1-1.5,1.5H9.71V15.33H19.94Zm0-4.11H9.71V9.67H19.94Zm0-5.66H9.71V4.06h8.73a1.511,1.511,0,0,1,1.5,1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiViewTimeline (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"View_Timeline\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M18.436,20.94H5.562a2.5,2.5,0,0,1-2.5-2.5V5.567a2.5,2.5,0,0,1,2.5-2.5H18.436a2.5,2.5,0,0,1,2.5,2.5V18.44A2.5,2.5,0,0,1,18.436,20.94ZM5.562,4.067a1.5,1.5,0,0,0-1.5,1.5V18.44a1.5,1.5,0,0,0,1.5,1.5H18.436a1.5,1.5,0,0,0,1.5-1.5V5.567a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M6.544,8.287h0a.5.5,0,0,1,0-1H12a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M9.271,12.5h0a.5.5,0,0,1,0-1h5.454a.5.5,0,0,1,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M12,16.724h0a.5.5,0,0,1,0-1h5.455a.5.5,0,0,1,0,1Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiVirus (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Virus\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M5.86,19.905a.485.485,0,0,0,.35.15.469.469,0,0,0,.35-.15.483.483,0,0,0,0-.7l-.53-.53,1.74-1.74a6.426,6.426,0,0,0,3.73,1.54v2.46h-.75a.5.5,0,0,0,0,1h2.5a.5.5,0,1,0,0-1H12.5v-2.46a6.426,6.426,0,0,0,3.73-1.54l1.74,1.74-.53.53a.483.483,0,0,0,0,.7.469.469,0,0,0,.35.15.485.485,0,0,0,.35-.15l1.77-1.76a.513.513,0,0,0,0-.71.5.5,0,0,0-.71,0l-.52.53-1.74-1.74a6.435,6.435,0,0,0,1.54-3.73h2.46v.75a.5.5,0,0,0,.5.5.5.5,0,0,0,.5-.5v-2.5a.508.508,0,0,0-.5-.5.5.5,0,0,0-.5.5v.75H18.48a6.418,6.418,0,0,0-1.55-3.72l1.75-1.74.52.53a.508.508,0,0,0,.36.15.5.5,0,0,0,.35-.15.513.513,0,0,0,0-.71l-1.77-1.77a.5.5,0,0,0-.7,0,.5.5,0,0,0,0,.71l.53.53-1.74,1.74a6.382,6.382,0,0,0-3.73-1.55V3.065h.75a.5.5,0,0,0,.5-.5.5.5,0,0,0-.5-.5h-2.5a.5.5,0,0,0-.5.5.5.5,0,0,0,.5.5h.75v2.45a6.382,6.382,0,0,0-3.73,1.55L6.03,5.325l.53-.53a.5.5,0,0,0,0-.71.5.5,0,0,0-.7,0L4.09,5.855a.513.513,0,0,0,0,.71.5.5,0,0,0,.35.15.508.508,0,0,0,.36-.15l.52-.53,1.75,1.74A6.418,6.418,0,0,0,5.52,11.5H3.06v-.75a.5.5,0,0,0-.5-.5.508.508,0,0,0-.5.5v2.5a.5.5,0,0,0,.5.5.5.5,0,0,0,.5-.5V12.5H5.52a6.435,6.435,0,0,0,1.54,3.73l-1.74,1.74-.52-.53a.5.5,0,0,0-.71,0,.513.513,0,0,0,0,.71Zm10.03-4.02A5.5,5.5,0,1,1,17.5,12,5.448,5.448,0,0,1,15.89,15.885Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiVoicemail (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Voicemail\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.435,7.5a4.5,4.5,0,0,0-2.82,8H9.385a4.494,4.494,0,1,0-2.82,1h10.87a4.5,4.5,0,0,0,0-9ZM3.065,12a3.5,3.5,0,1,1,3.56,3.5h-.06A3.5,3.5,0,0,1,3.065,12Zm14.37,3.5h-.06a3.53,3.53,0,1,1,.06,0Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiVolumeHigh (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Volume_High\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.816,19.937a1.446,1.446,0,0,1-.717-.194L9.43,17.623a3.257,3.257,0,0,0-1.625-.434H4.439a2.379,2.379,0,0,1-2.375-2.376V9.187A2.378,2.378,0,0,1,4.439,6.812H7.805A3.257,3.257,0,0,0,9.43,6.376L13.1,4.259A1.437,1.437,0,0,1,15.255,5.5V18.5a1.424,1.424,0,0,1-.718,1.245A1.445,1.445,0,0,1,13.816,19.937ZM4.439,7.812A1.377,1.377,0,0,0,3.064,9.187v5.626a1.378,1.378,0,0,0,1.375,1.376H7.805a4.254,4.254,0,0,1,2.125.569L13.6,18.876a.439.439,0,0,0,.657-.38V5.5a.438.438,0,0,0-.657-.379L9.93,7.242a4.251,4.251,0,0,1-2.125.57Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.407,6.262a7.79,7.79,0,0,1,.021,11.476c-.474.437.235,1.143.707.707a8.793,8.793,0,0,0-.021-12.89c-.474-.434-1.184.272-.707.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M16.91,9.031a4.021,4.021,0,0,1,.012,5.938c-.474.438.234,1.143.707.707a5.025,5.025,0,0,0-.012-7.352c-.474-.434-1.183.272-.707.707Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiVolumeMute (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Volume_Mute\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M13.817,19.936a1.424,1.424,0,0,1-.719-.2L9.43,17.624a3.254,3.254,0,0,0-1.625-.436H4.44a2.377,2.377,0,0,1-2.375-2.375V9.187A2.378,2.378,0,0,1,4.44,6.811H7.805A3.257,3.257,0,0,0,9.43,6.377L13.1,4.259A1.438,1.438,0,0,1,15.255,5.5V18.5a1.423,1.423,0,0,1-.718,1.245A1.439,1.439,0,0,1,13.817,19.936ZM4.44,7.811A1.377,1.377,0,0,0,3.065,9.187v5.626A1.377,1.377,0,0,0,4.44,16.188H7.805a4.247,4.247,0,0,1,2.125.571L13.6,18.876a.437.437,0,0,0,.439,0,.433.433,0,0,0,.218-.379V5.5a.438.438,0,0,0-.657-.379L9.93,7.242a4.25,4.25,0,0,1-2.125.569Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M17.606,14.445a.5.5,0,0,1-.7-.711c.17-.169.34-.349.52-.52l1.21-1.209c-.57-.581-1.15-1.161-1.73-1.74a.5.5,0,0,1,.7-.71l1.74,1.739,1.74-1.739a.5.5,0,0,1,.7.71l-1.73,1.74,1.73,1.729a.5.5,0,0,1-.7.711L19.343,12.7Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiVolume (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Volume\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M17.849,20.934a1.555,1.555,0,0,1-.781-.212l-4.16-2.4a3.769,3.769,0,0,0-1.877-.5H7.214a2.631,2.631,0,0,1-2.628-2.627V8.809A2.631,2.631,0,0,1,7.214,6.182h3.817a3.747,3.747,0,0,0,1.877-.5l4.16-2.4a1.564,1.564,0,0,1,2.346,1.354V19.369a1.57,1.57,0,0,1-1.565,1.565ZM7.214,7.182A1.63,1.63,0,0,0,5.586,8.809v6.382a1.629,1.629,0,0,0,1.628,1.627h3.817a4.756,4.756,0,0,1,2.377.637l4.16,2.4a.543.543,0,0,0,.563,0,.553.553,0,0,0,.283-.487V4.632a.565.565,0,0,0-.846-.489l-4.16,2.4a4.753,4.753,0,0,1-2.377.637Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiWallet (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Wallet\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.435,4.065H4.565a2.5,2.5,0,0,0-2.5,2.5v10.87a2.5,2.5,0,0,0,2.5,2.5h14.87a2.5,2.5,0,0,0,2.5-2.5V6.565A2.5,2.5,0,0,0,19.435,4.065Zm1.5,9.93h-6.42a2,2,0,0,1,0-4h6.42Zm-6.42-5a3,3,0,0,0,0,6h6.42v2.44a1.5,1.5,0,0,1-1.5,1.5H4.565a1.5,1.5,0,0,1-1.5-1.5V6.565a1.5,1.5,0,0,1,1.5-1.5h14.87a1.5,1.5,0,0,1,1.5,1.5v2.43Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"14.519\",\"cy\":\"11.996\",\"r\":\"1\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiWarning (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Warning\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M12.5,8.752a.5.5,0,0,0-1,0h0v6a.5.5,0,0,0,1,0Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"11.999\",\"cy\":\"16.736\",\"r\":\"0.5\"},\"child\":[]}]},{\"tag\":\"path\",\"attr\":{\"d\":\"M18.642,20.934H5.385A2.5,2.5,0,0,1,3.163,17.29L9.792,4.421a2.5,2.5,0,0,1,4.444,0L20.865,17.29a2.5,2.5,0,0,1-2.223,3.644ZM12.014,4.065a1.478,1.478,0,0,0-1.334.814L4.052,17.748a1.5,1.5,0,0,0,1.333,2.186H18.642a1.5,1.5,0,0,0,1.334-2.186L13.348,4.879A1.478,1.478,0,0,0,12.014,4.065Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiWavePulse1 (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Wave_Pulse_1\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M8.974,18h0a1.446,1.446,0,0,1-1.259-.972L5.872,12.883c-.115-.26-.262-.378-.349-.378H2.562a.5.5,0,1,1,0-1H5.523a1.444,1.444,0,0,1,1.263.972l1.839,4.145c.116.261.258.378.349.378h0c.088,0,.229-.113.344-.368L13.7,6.956A1.423,1.423,0,0,1,14.958,6h0a1.449,1.449,0,0,1,1.26.975l1.839,4.151c.11.249.259.379.349.379h3.028a.5.5,0,0,1,0,1H18.41a1.444,1.444,0,0,1-1.263-.975L15.308,7.379c-.116-.261-.259-.378-.35-.379h0c-.088,0-.229.114-.344.368l-4.385,9.676A1.437,1.437,0,0,1,8.974,18Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiWheat (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Wheat\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M15.247,13.836a3.115,3.115,0,0,0,.79-2.78,1.053,1.053,0,0,0-.8-.81,3.1,3.1,0,0,0,.8-2.79,1.061,1.061,0,0,0-.82-.82,3.211,3.211,0,0,0-2.04.25A3.09,3.09,0,0,0,14,4.816a3.1,3.1,0,0,0-1.41-2.57,1.043,1.043,0,0,0-1.16-.01A3.124,3.124,0,0,0,10,4.816a3.052,3.052,0,0,0,.83,2.07,3.154,3.154,0,0,0-2.04-.25,1.048,1.048,0,0,0-.82.82,3.1,3.1,0,0,0,.79,2.79,1.041,1.041,0,0,0-.79.81,3.11,3.11,0,0,0,.78,2.78,1.071,1.071,0,0,0-.78.82,3.031,3.031,0,0,0,3,3.7,2.436,2.436,0,0,0,.53-.05v3.15a.5.5,0,0,0,1,0v-3.15a2.469,2.469,0,0,0,.54.05,3.054,3.054,0,0,0,2.17-.88,3.124,3.124,0,0,0,.83-2.82A1.083,1.083,0,0,0,15.247,13.836Zm-3.83,3.48a2.12,2.12,0,0,1-1.92-.55,2.041,2.041,0,0,1-.51-1.96,2.558,2.558,0,0,1,.47-.04,1.984,1.984,0,0,1,1.45.59A2.011,2.011,0,0,1,11.417,17.316Zm0-3.6a2.112,2.112,0,0,1-1.92-.55,2.022,2.022,0,0,1-.51-1.95,1.93,1.93,0,0,1,.47-.05,1.984,1.984,0,0,1,1.45.59A2.011,2.011,0,0,1,11.417,13.716Zm0-3.6a2.112,2.112,0,0,1-1.92-.55,2.022,2.022,0,0,1-.51-1.95,2.592,2.592,0,0,1,.47-.05,1.984,1.984,0,0,1,1.45.59A2.011,2.011,0,0,1,11.417,10.116Zm.56-3.55A2.1,2.1,0,0,1,11,4.816a2.005,2.005,0,0,1,1.04-1.74A2.1,2.1,0,0,1,13,4.816,2.054,2.054,0,0,1,11.977,6.566Zm2.53,10.2a2.072,2.072,0,0,1-1.96.51,2.384,2.384,0,0,1-.05-.45v-.02a2.065,2.065,0,0,1,.59-1.46,1.99,1.99,0,0,1,1.4-.57,2.279,2.279,0,0,1,.57.07A2.14,2.14,0,0,1,14.507,16.766Zm0-3.6a2.047,2.047,0,0,1-1.96.51,2.384,2.384,0,0,1-.05-.45v-.02a2.024,2.024,0,0,1,.59-1.45,1.957,1.957,0,0,1,1.4-.58,2.863,2.863,0,0,1,.57.07A2.14,2.14,0,0,1,14.507,13.166Zm0-3.6a2.024,2.024,0,0,1-1.96.51,2.384,2.384,0,0,1-.05-.45v-.02a2.024,2.024,0,0,1,.59-1.45,1.955,1.955,0,0,1,1.41-.57,2.259,2.259,0,0,1,.56.07A2.12,2.12,0,0,1,14.507,9.566Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiWifiOff (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Wi-Fi_Off\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M10.37,6.564a12.392,12.392,0,0,1,10.71,3.93c.436.476,1.141-.233.708-.708A13.324,13.324,0,0,0,10.37,5.564c-.631.076-.638,1.077,0,1Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M13.907,10.283A8.641,8.641,0,0,1,18.349,12.9c.434.477,1.139-.232.707-.707a9.586,9.586,0,0,0-4.883-2.871c-.626-.146-.893.818-.266.965Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"12.003\",\"cy\":\"16.922\",\"r\":\"1.12\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M19.773,19.06a.5.5,0,0,1-.71.71l-5.84-5.84A4.478,4.478,0,0,0,8.7,15.24c-.43.48-1.14-.23-.71-.7a5.47,5.47,0,0,1,4.06-1.78l-2.37-2.37a8.693,8.693,0,0,0-4.03,2.53c-.43.48-1.13-.23-.7-.71A9.439,9.439,0,0,1,8.893,9.6L6.883,7.59a12.557,12.557,0,0,0-3.96,2.94.5.5,0,1,1-.7-.71,13.109,13.109,0,0,1,3.91-2.98l-1.9-1.9a.5.5,0,0,1,.71-.71Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiWifiOn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Wi-Fi_On\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M2.922,10.777a12.194,12.194,0,0,1,18.155-.034c.436.476,1.141-.233.707-.707a13.189,13.189,0,0,0-19.569.034c-.432.475.273,1.184.707.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M5.654,13.169a8.615,8.615,0,0,1,12.691-.024c.437.475,1.143-.234.707-.707a9.621,9.621,0,0,0-14.106.024c-.433.474.272,1.184.708.707Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M8.7,15.492a4.47,4.47,0,0,1,6.6-.013c.438.474,1.143-.235.707-.707a5.475,5.475,0,0,0-8.015.013c-.434.474.271,1.183.707.707Z\"},\"child\":[]},{\"tag\":\"circle\",\"attr\":{\"cx\":\"11.999\",\"cy\":\"17.172\",\"r\":\"1.12\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiYoutube (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Youtube\"},\"child\":[{\"tag\":\"g\",\"attr\":{},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M19.437,19.937H4.562a2.5,2.5,0,0,1-2.5-2.5V6.563a2.5,2.5,0,0,1,2.5-2.5H19.437a2.5,2.5,0,0,1,2.5,2.5V17.437A2.5,2.5,0,0,1,19.437,19.937ZM4.562,5.063a1.5,1.5,0,0,0-1.5,1.5V17.437a1.5,1.5,0,0,0,1.5,1.5H19.437a1.5,1.5,0,0,0,1.5-1.5V6.563a1.5,1.5,0,0,0-1.5-1.5Z\"},\"child\":[]},{\"tag\":\"path\",\"attr\":{\"d\":\"M14.568,11.149,10.6,8.432a1.032,1.032,0,0,0-1.614.851v5.434a1.032,1.032,0,0,0,1.614.851l3.972-2.717A1.031,1.031,0,0,0,14.568,11.149Z\"},\"child\":[]}]}]}]})(props);\n};\nfunction CiZoomIn (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Zoom_In\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.279,17.039c-1.396,1.209 -3.216,1.941 -5.206,1.941c-4.393,0 -7.96,-3.567 -7.96,-7.96c-0,-4.393 3.567,-7.96 7.96,-7.96c4.393,0 7.96,3.567 7.96,7.96c-0,2.044 -0.772,3.909 -2.04,5.319l0.165,0.165c1.194,1.194 2.388,2.388 3.583,3.582c0.455,0.456 -0.252,1.163 -0.707,0.708l-3.755,-3.755Zm1.754,-6.019c-0,-3.841 -3.119,-6.96 -6.96,-6.96c-3.842,0 -6.96,3.119 -6.96,6.96c-0,3.841 3.118,6.96 6.96,6.96c3.841,0 6.96,-3.119 6.96,-6.96Zm-7.46,0.5l-1.5,0c-0.645,0 -0.643,-1 -0,-1l1.5,0l-0,-1.5c-0,-0.645 1,-0.643 1,0l-0,1.5l1.5,0c0.645,0 0.643,1 -0,1l-1.5,0l-0,1.5c-0,0.645 -1,0.643 -1,0l-0,-1.5Z\"},\"child\":[]}]}]})(props);\n};\nfunction CiZoomOut (props) {\n  return (0,_lib_index_mjs__WEBPACK_IMPORTED_MODULE_0__.GenIcon)({\"tag\":\"svg\",\"attr\":{\"viewBox\":\"0 0 24 24\"},\"child\":[{\"tag\":\"g\",\"attr\":{\"id\":\"Zoom_Out\"},\"child\":[{\"tag\":\"path\",\"attr\":{\"d\":\"M16.279,17.039c-1.396,1.209 -3.216,1.941 -5.206,1.941c-4.393,0 -7.96,-3.567 -7.96,-7.96c-0,-4.393 3.567,-7.96 7.96,-7.96c4.393,0 7.96,3.567 7.96,7.96c-0,2.044 -0.772,3.909 -2.04,5.319l0.165,0.165c1.194,1.194 2.388,2.388 3.583,3.582c0.455,0.456 -0.252,1.163 -0.707,0.708l-3.755,-3.755Zm1.754,-6.019c-0,-3.841 -3.119,-6.96 -6.96,-6.96c-3.842,0 -6.96,3.119 -6.96,6.96c-0,3.841 3.118,6.96 6.96,6.96c3.841,0 6.96,-3.119 6.96,-6.96Zm-4.96,-0.5c0.645,0 0.643,1 -0,1l-4,0c-0.645,0 -0.643,-1 -0,-1l4,0Z\"},\"child\":[]}]}]})(props);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1pY29ucy9jaS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQzJDO0FBQ3BDO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isc0JBQXNCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDZuQkFBNm5CLFlBQVksRUFBRSxxQkFBcUIsMklBQTJJLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDMStCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixpQkFBaUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsa2JBQWtiLFlBQVksRUFBRSxxQkFBcUIsa1dBQWtXLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDai9CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsOGpCQUE4akIsWUFBWSxFQUFFLHFCQUFxQiw0SkFBNEosWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN0N0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw4REFBOEQsWUFBWSxFQUFFLHFCQUFxQixtUEFBbVAsWUFBWSxFQUFFLHFCQUFxQiw0UEFBNFAsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNoekI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHNCQUFzQixXQUFXLHFCQUFxQiwwbEJBQTBsQixZQUFZLEVBQUUsRUFBRTtBQUN6dkI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHNCQUFzQixXQUFXLHFCQUFxQixvbEJBQW9sQixZQUFZLEVBQUUsRUFBRTtBQUNudkI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw2REFBNkQsWUFBWSxFQUFFLHFCQUFxQix1UEFBdVAsWUFBWSxFQUFFLHFCQUFxQiw0UEFBNFAsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNqekI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw4REFBOEQsWUFBWSxFQUFFLHFCQUFxQix5UEFBeVAsWUFBWSxFQUFFLHFCQUFxQiw0UEFBNFAsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNyekI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw2REFBNkQsWUFBWSxFQUFFLHFCQUFxQixpUEFBaVAsWUFBWSxFQUFFLHFCQUFxQiw2UEFBNlAsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMzeUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxxQkFBcUIscTJCQUFxMkIsWUFBWSxFQUFFLEVBQUU7QUFDMy9CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixVQUFVLFdBQVcscUJBQXFCLDhuREFBOG5ELFlBQVksRUFBRSxFQUFFO0FBQ2p4RDtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixvZUFBb2UsWUFBWSxFQUFFLHdCQUF3QixnREFBZ0QsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNsdkI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxxQkFBcUIsc2xEQUFzbEQsWUFBWSxFQUFFLEVBQUU7QUFDNXVEO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixvQkFBb0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsdXdEQUF1d0QsWUFBWSxFQUFFLHFCQUFxQixzU0FBc1MsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3d0U7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxxQkFBcUIsOHJCQUE4ckIsWUFBWSxFQUFFLEVBQUU7QUFDcDFCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDBKQUEwSixZQUFZLEVBQUUsdUJBQXVCLHdDQUF3QyxZQUFZLEVBQUUsdUJBQXVCLHdDQUF3QyxZQUFZLEVBQUUsdUJBQXVCLHNDQUFzQyxZQUFZLEVBQUUsdUJBQXVCLHNDQUFzQyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2xvQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsWUFBWSxXQUFXLHFCQUFxQixtZ0JBQW1nQixZQUFZLEVBQUUsRUFBRTtBQUN4cEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsc0xBQXNMLFlBQVksRUFBRSxxQkFBcUIsMExBQTBMLFlBQVksRUFBRSxxQkFBcUIseUxBQXlMLFlBQVksRUFBRSxxQkFBcUIscUxBQXFMLFlBQVksRUFBRSxtQkFBbUIsV0FBVyxxQkFBcUIsaUVBQWlFLFlBQVksRUFBRSxxQkFBcUIsaUVBQWlFLFlBQVksRUFBRSxxQkFBcUIsaUVBQWlFLFlBQVksRUFBRSxxQkFBcUIsZ0VBQWdFLFlBQVksRUFBRSxxQkFBcUIsbUVBQW1FLFlBQVksRUFBRSxFQUFFLEVBQUUsRUFBRTtBQUNwaEQ7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHFCQUFxQixXQUFXLHFCQUFxQixzNkNBQXM2QyxZQUFZLEVBQUUsRUFBRTtBQUNwa0Q7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLHFCQUFxQixpaEJBQWloQixZQUFZLEVBQUUsRUFBRTtBQUM1cUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHdCQUF3QixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixpVkFBaVYsWUFBWSxFQUFFLHFCQUFxQix5UEFBeVAsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM5eUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHFCQUFxQixXQUFXLHFCQUFxQixpVkFBaVYsWUFBWSxFQUFFLEVBQUU7QUFDL2U7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixpVkFBaVYsWUFBWSxFQUFFLHFCQUFxQixtRUFBbUUsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNwbkI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLHFCQUFxQiw2aEJBQTZoQixZQUFZLEVBQUUsRUFBRTtBQUN0ckI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHFCQUFxQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw0bUNBQTRtQyxZQUFZLEVBQUUscUJBQXFCLHNGQUFzRixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ242QztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHlkQUF5ZCxZQUFZLEVBQUUscUJBQXFCLG9aQUFvWixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3prQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLHFCQUFxQiwydkJBQTJ2QixZQUFZLEVBQUUsRUFBRTtBQUNuNUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxxQkFBcUIsaXlCQUFpeUIsWUFBWSxFQUFFLEVBQUU7QUFDeDdCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUscUJBQXFCLDBUQUEwVCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2hxQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsaUJBQWlCLFdBQVcscUJBQXFCLHVjQUF1YyxZQUFZLEVBQUUsRUFBRTtBQUNqbUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHNCQUFzQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwrWkFBK1osWUFBWSxFQUFFLHFCQUFxQix3TkFBd04sWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN6MUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHNCQUFzQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwrWkFBK1osWUFBWSxFQUFFLHFCQUFxQixrREFBa0QsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNuckI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHFCQUFxQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwrWkFBK1osWUFBWSxFQUFFLHFCQUFxQixtSEFBbUgsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNudkI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHVCQUF1QixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwrWkFBK1osWUFBWSxFQUFFLHFCQUFxQixnUEFBZ1AsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNsM0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLHFCQUFxQiw0WkFBNFosWUFBWSxFQUFFLEVBQUU7QUFDcmpCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixvQkFBb0IsV0FBVyxxQkFBcUIsaTJCQUFpMkIsWUFBWSxFQUFFLEVBQUU7QUFDOS9CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIseU1BQXlNLFlBQVksRUFBRSxxQkFBcUIsMk1BQTJNLFlBQVksRUFBRSxxQkFBcUIsdU1BQXVNLFlBQVksRUFBRSxxQkFBcUIsd0RBQXdELFlBQVksRUFBRSxxQkFBcUIsdURBQXVELFlBQVksRUFBRSxxQkFBcUIseURBQXlELFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDM21DO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcscUJBQXFCLG1tQkFBbW1CLFlBQVksRUFBRSxFQUFFO0FBQ3p2QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsdUJBQXVCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHFIQUFxSCxZQUFZLEVBQUUsdUJBQXVCLGtDQUFrQyxZQUFZLEVBQUUsdUJBQXVCLG1DQUFtQyxZQUFZLEVBQUUsdUJBQXVCLG1DQUFtQyxZQUFZLEVBQUUsdUJBQXVCLGtDQUFrQyxZQUFZLEVBQUUsdUJBQXVCLHNDQUFzQyxZQUFZLEVBQUUsdUJBQXVCLHNDQUFzQyxZQUFZLEVBQUUsdUJBQXVCLHVDQUF1QyxZQUFZLEVBQUUsdUJBQXVCLHFDQUFxQyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQy8zQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IscUJBQXFCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHFIQUFxSCxZQUFZLEVBQUUsdUJBQXVCLCtCQUErQixZQUFZLEVBQUUsdUJBQXVCLGdDQUFnQyxZQUFZLEVBQUUsdUJBQXVCLGdDQUFnQyxZQUFZLEVBQUUsdUJBQXVCLCtCQUErQixZQUFZLEVBQUUsdUJBQXVCLG1DQUFtQyxZQUFZLEVBQUUsdUJBQXVCLG1DQUFtQyxZQUFZLEVBQUUsdUJBQXVCLG9DQUFvQyxZQUFZLEVBQUUsdUJBQXVCLGtDQUFrQyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3IyQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcscUJBQXFCLCtpQ0FBK2lDLFlBQVksRUFBRSxFQUFFO0FBQ3hzQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsY0FBYyxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw0ZEFBNGQsWUFBWSxFQUFFLHVCQUF1QixpQ0FBaUMsWUFBWSxFQUFFLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLHVCQUF1QixxQ0FBcUMsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM1MkI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixvUEFBb1AsWUFBWSxFQUFFLHFCQUFxQix5TkFBeU4sWUFBWSxFQUFFLG1CQUFtQixXQUFXLHVCQUF1QixtQ0FBbUMsWUFBWSxFQUFFLHVCQUF1QixzQ0FBc0MsWUFBWSxFQUFFLHVCQUF1QixxQ0FBcUMsWUFBWSxFQUFFLEVBQUUsbUJBQW1CLFdBQVcsdUJBQXVCLG1DQUFtQyxZQUFZLEVBQUUsdUJBQXVCLHNDQUFzQyxZQUFZLEVBQUUsdUJBQXVCLHFDQUFxQyxZQUFZLEVBQUUsRUFBRSxtQkFBbUIsV0FBVyx1QkFBdUIsc0NBQXNDLFlBQVksRUFBRSxxQkFBcUIsOERBQThELFlBQVksRUFBRSxFQUFFLEVBQUUsRUFBRTtBQUNuM0M7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw4SEFBOEgsWUFBWSxFQUFFLHFCQUFxQix1REFBdUQsWUFBWSxFQUFFLG1CQUFtQixXQUFXLHFCQUFxQix5REFBeUQsWUFBWSxFQUFFLHFCQUFxQiwwREFBMEQsWUFBWSxFQUFFLEVBQUUscUJBQXFCLDJNQUEyTSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzUxQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IscUJBQXFCLFdBQVcscUJBQXFCLDRwQkFBNHBCLFlBQVksRUFBRSxxQkFBcUIsNlVBQTZVLFlBQVksRUFBRSxFQUFFO0FBQzFxQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcscUJBQXFCLGsrQkFBaytCLFlBQVksRUFBRSxFQUFFO0FBQzNuQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsY0FBYyxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw2ZEFBNmQsWUFBWSxFQUFFLHFCQUFxQiwyRkFBMkYsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNseEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxxQkFBcUIsd1lBQXdZLFlBQVksRUFBRSxFQUFFO0FBQy9oQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsY0FBYyxXQUFXLHFCQUFxQix5ZkFBeWYsWUFBWSxFQUFFLEVBQUU7QUFDaHBCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixvQkFBb0IsV0FBVyxtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIscURBQXFELFlBQVksRUFBRSx1QkFBdUIsa0NBQWtDLFlBQVksRUFBRSxFQUFFLHFCQUFxQiwySUFBMkksWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN2Z0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw2R0FBNkcsWUFBWSxFQUFFLHFCQUFxQiwySUFBMkksWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN4ZDtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isd0JBQXdCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHlHQUF5RyxZQUFZLEVBQUUscUJBQXFCLHlJQUF5SSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3RkO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix3QkFBd0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsdUdBQXVHLFlBQVksRUFBRSxxQkFBcUIsMklBQTJJLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDdGQ7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHlCQUF5QixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwyR0FBMkcsWUFBWSxFQUFFLHFCQUFxQix3SUFBd0ksWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN4ZDtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isc0JBQXNCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHlHQUF5RyxZQUFZLEVBQUUscUJBQXFCLDBJQUEwSSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3JkO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsdURBQXVELFlBQVksRUFBRSx1QkFBdUIsaUNBQWlDLFlBQVksRUFBRSxFQUFFLHFCQUFxQix3SUFBd0ksWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNwZ0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix3REFBd0QsWUFBWSxFQUFFLHFCQUFxQix1REFBdUQsWUFBWSxFQUFFLHFCQUFxQix5REFBeUQsWUFBWSxFQUFFLHFCQUFxQix5SEFBeUgsWUFBWSxFQUFFLHFCQUFxQixzSEFBc0gsWUFBWSxFQUFFLHFCQUFxQiw0SEFBNEgsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM5M0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixrREFBa0QsWUFBWSxFQUFFLHFCQUFxQiwySUFBMkksWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3WjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsbUJBQW1CLFdBQVcsbUJBQW1CLFdBQVcsdUJBQXVCLGdDQUFnQyxZQUFZLEVBQUUsdUJBQXVCLGdDQUFnQyxZQUFZLEVBQUUsdUJBQXVCLCtCQUErQixZQUFZLEVBQUUscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3JoQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsbUJBQW1CLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDRHQUE0RyxZQUFZLEVBQUUscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3RkO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix1QkFBdUIsV0FBVyxtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsaXZCQUFpdkIsWUFBWSxFQUFFLHVCQUF1Qix3Q0FBd0MsWUFBWSxFQUFFLEVBQUUscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzVzQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IscUJBQXFCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHVQQUF1UCxZQUFZLEVBQUUscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ25tQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwySUFBMkksWUFBWSxFQUFFLHFCQUFxQixrS0FBa0ssWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN4Z0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsMklBQTJJLFlBQVksRUFBRSxxQkFBcUIsbUlBQW1JLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDemU7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHFCQUFxQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw4RkFBOEYsWUFBWSxFQUFFLHFCQUFxQix5SEFBeUgsWUFBWSxFQUFFLHFCQUFxQiw4RkFBOEYsWUFBWSxFQUFFLHFCQUFxQiw2RkFBNkYsWUFBWSxFQUFFLHFCQUFxQiw2RkFBNkYsWUFBWSxFQUFFLHFCQUFxQixvWkFBb1osWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNodkM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLHFCQUFxQixndUJBQWd1QixZQUFZLEVBQUUsRUFBRTtBQUMzM0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix3UEFBd1AsWUFBWSxFQUFFLHFCQUFxQiw0VEFBNFQsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNqeEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLHFCQUFxQiwwYUFBMGEsWUFBWSxFQUFFLEVBQUU7QUFDbmtCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixxQkFBcUIsV0FBVyxxQkFBcUIscXhCQUFxeEIsWUFBWSxFQUFFLEVBQUU7QUFDbjdCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixpQkFBaUIsV0FBVyxxQkFBcUIsc3BDQUFzcEMsWUFBWSxFQUFFLEVBQUU7QUFDaHpDO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcscUJBQXFCLDJZQUEyWSxZQUFZLEVBQUUsRUFBRTtBQUNqaUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLHFCQUFxQiw4MEJBQTgwQixZQUFZLEVBQUUsRUFBRTtBQUMxK0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLHFCQUFxQix3dUJBQXd1QixZQUFZLEVBQUUsRUFBRTtBQUNuNEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixpTkFBaU4sWUFBWSxFQUFFLHFCQUFxQiw0VkFBNFYsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM1d0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxxQkFBcUIsMGpCQUEwakIsWUFBWSxFQUFFLEVBQUU7QUFDbHRCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixpQkFBaUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsaWRBQWlkLFlBQVksRUFBRSx1QkFBdUIsZ0NBQWdDLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDaHRCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixxQkFBcUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsZ1JBQWdSLFlBQVksRUFBRSxxQkFBcUIsd0RBQXdELFlBQVksRUFBRSxxQkFBcUIsNERBQTRELFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDeG9CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixxQkFBcUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIscVFBQXFRLFlBQVksRUFBRSxxQkFBcUIsd0RBQXdELFlBQVksRUFBRSxxQkFBcUIsNkRBQTZELFlBQVksRUFBRSxxQkFBcUIsOEdBQThHLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDL3dCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix1QkFBdUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsc0tBQXNLLFlBQVksRUFBRSxxQkFBcUIsd0RBQXdELFlBQVksRUFBRSxxQkFBcUIsK0RBQStELFlBQVksRUFBRSxxQkFBcUIseVRBQXlULFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDLzNCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixZQUFZLFdBQVcscUJBQXFCLHVpQkFBdWlCLFlBQVksRUFBRSxFQUFFO0FBQzVyQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsWUFBWSxXQUFXLHFCQUFxQiw0aEJBQTRoQixZQUFZLEVBQUUsRUFBRTtBQUNqckI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLHFCQUFxQiwrakJBQStqQixZQUFZLEVBQUUsRUFBRTtBQUN4dEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHNCQUFzQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixzb0JBQXNvQixZQUFZLEVBQUUscUJBQXFCLHlEQUF5RCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2o2QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsdUJBQXVCLFdBQVcscUJBQXFCLGtUQUFrVCxZQUFZLEVBQUUsRUFBRTtBQUNsZDtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsdUJBQXVCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHFTQUFxUyxZQUFZLEVBQUUscUJBQXFCLHNEQUFzRCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzlqQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLHFCQUFxQiwrV0FBK1csWUFBWSxFQUFFLEVBQUU7QUFDdmdCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixrQkFBa0IsV0FBVyxxQkFBcUIseWpJQUF5akksWUFBWSxFQUFFLEVBQUU7QUFDcHRJO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixjQUFjLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUscUJBQXFCLHVOQUF1TixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzVqQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLHFCQUFxQix1WUFBdVksWUFBWSxFQUFFLEVBQUU7QUFDL2hCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxxQkFBcUIscXBCQUFxcEIsWUFBWSxFQUFFLEVBQUU7QUFDOXlCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixZQUFZLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDhEQUE4RCxZQUFZLEVBQUUscUJBQXFCLHdiQUF3YixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzlzQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsY0FBYyxXQUFXLHFCQUFxQixnYUFBZ2EsWUFBWSxFQUFFLEVBQUU7QUFDdmpCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixjQUFjLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJSQUEyUixZQUFZLEVBQUUscUJBQXFCLHdOQUF3TixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzdzQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isa0JBQWtCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUscUJBQXFCLGdIQUFnSCxZQUFZLEVBQUUsdUJBQXVCLGlDQUFpQyxZQUFZLEVBQUUsdUJBQXVCLGtDQUFrQyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3RtQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUsdUJBQXVCLG9DQUFvQyxZQUFZLEVBQUUsdUJBQXVCLHFDQUFxQyxZQUFZLEVBQUUscUJBQXFCLCtEQUErRCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3pqQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isa0JBQWtCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUscUJBQXFCLHNJQUFzSSxZQUFZLEVBQUUsdUJBQXVCLGlDQUFpQyxZQUFZLEVBQUUsdUJBQXVCLGtDQUFrQyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzVuQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcscUJBQXFCLHVYQUF1WCxZQUFZLEVBQUUsRUFBRTtBQUNoaEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw2TUFBNk0sWUFBWSxFQUFFLHFCQUFxQixrUUFBa1EsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMzcUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxxQkFBcUIsMlZBQTJWLFlBQVksRUFBRSxFQUFFO0FBQ25mO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixjQUFjLFdBQVcscUJBQXFCLHNhQUFzYSxZQUFZLEVBQUUsRUFBRTtBQUM3akI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxxQkFBcUIsd2NBQXdjLFlBQVksRUFBRSxFQUFFO0FBQy9sQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsbUJBQW1CLFdBQVcscUJBQXFCLDhqQkFBOGpCLFlBQVksRUFBRSxFQUFFO0FBQzF0QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isa0JBQWtCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLGlSQUFpUixZQUFZLEVBQUUscUJBQXFCLHVTQUF1UyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3R4QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsaUJBQWlCLFdBQVcscUJBQXFCLDJYQUEyWCxZQUFZLEVBQUUsRUFBRTtBQUNyaEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix5aUJBQXlpQixZQUFZLEVBQUUscUJBQXFCLGtXQUFrVyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3ZtQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isa0JBQWtCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLG9QQUFvUCxZQUFZLEVBQUUscUJBQXFCLCtVQUErVSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2p5QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsYUFBYSxXQUFXLHFCQUFxQiw4NUJBQTg1QixZQUFZLEVBQUUsRUFBRTtBQUNwakM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLFlBQVksV0FBVyxxQkFBcUIsb25CQUFvbkIsWUFBWSxFQUFFLEVBQUU7QUFDendCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcscUJBQXFCLG92QkFBb3ZCLFlBQVksRUFBRSxFQUFFO0FBQzE0QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsYUFBYSxXQUFXLHFCQUFxQixva0NBQW9rQyxZQUFZLEVBQUUsRUFBRTtBQUMxdEM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLFdBQVcsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsNkdBQTZHLFlBQVksRUFBRSxxQkFBcUIsK1RBQStULFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDbm9CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixpQkFBaUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIseVBBQXlQLFlBQVksRUFBRSxxQkFBcUIsZ1FBQWdRLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDdHRCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsbVFBQW1RLFlBQVksRUFBRSxxQkFBcUIsMlBBQTJQLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDMXRCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsOFBBQThQLFlBQVksRUFBRSxxQkFBcUIseUxBQXlMLFlBQVksRUFBRSxFQUFFLHFCQUFxQix5UEFBeVAsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMvOEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix5UEFBeVAsWUFBWSxFQUFFLHFCQUFxQiwrS0FBK0ssWUFBWSxFQUFFLEVBQUUscUJBQXFCLGdRQUFnUSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3Y4QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDRPQUE0TyxZQUFZLEVBQUUscUJBQXFCLG9QQUFvUCxZQUFZLEVBQUUscUJBQXFCLG1QQUFtUCxZQUFZLEVBQUUscUJBQXFCLDRQQUE0UCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2p2QztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcsbUJBQW1CLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHVQQUF1UCxZQUFZLEVBQUUscUJBQXFCLG1IQUFtSCxZQUFZLEVBQUUsRUFBRSxtQkFBbUIsV0FBVyxxQkFBcUIsZ1FBQWdRLFlBQVksRUFBRSxxQkFBcUIsd0hBQXdILFlBQVksRUFBRSxFQUFFLEVBQUUsRUFBRTtBQUNwa0M7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw4V0FBOFcsWUFBWSxFQUFFLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLHFCQUFxQixxREFBcUQsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNueEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxxQkFBcUIsaWZBQWlmLFlBQVksRUFBRSxFQUFFO0FBQ3pvQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isa0JBQWtCLFdBQVcscUJBQXFCLGl6QkFBaXpCLFlBQVksRUFBRSxFQUFFO0FBQzU4QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsYUFBYSxXQUFXLHFCQUFxQiwrY0FBK2MsWUFBWSxFQUFFLEVBQUU7QUFDcm1CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixZQUFZLFdBQVcscUJBQXFCLDhlQUE4ZSxZQUFZLEVBQUUsRUFBRTtBQUNub0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixrY0FBa2MsWUFBWSxFQUFFLHFCQUFxQix3TUFBd00sWUFBWSxFQUFFLG1CQUFtQixXQUFXLHFCQUFxQixzRkFBc0YsWUFBWSxFQUFFLHFCQUFxQixzRkFBc0YsWUFBWSxFQUFFLEVBQUUsbUJBQW1CLFdBQVcscUJBQXFCLHdGQUF3RixZQUFZLEVBQUUscUJBQXFCLHdGQUF3RixZQUFZLEVBQUUsRUFBRSxFQUFFLEVBQUU7QUFDaDVDO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixjQUFjLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDhDQUE4QyxZQUFZLEVBQUUscUJBQXFCLGlwQkFBaXBCLFlBQVksRUFBRSxxQkFBcUIscWpCQUFxakIsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNqL0M7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLHFCQUFxQixvVEFBb1QsWUFBWSxFQUFFLEVBQUU7QUFDOWM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLHFCQUFxQiwrMUNBQSsxQyxZQUFZLEVBQUUsRUFBRTtBQUN6L0M7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw4ZkFBOGYsWUFBWSxFQUFFLHFCQUFxQiwySEFBMkgsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNyMUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsMlJBQTJSLFlBQVksRUFBRSxxQkFBcUIsME5BQTBOLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDL3NCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsK0tBQStLLFlBQVksRUFBRSxxQkFBcUIsa2lCQUFraUIsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3NkI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixnaUJBQWdpQixZQUFZLEVBQUUscUJBQXFCLDhLQUE4SyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzM2QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsY0FBYyxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixnRUFBZ0UsWUFBWSxFQUFFLHFCQUFxQix3REFBd0QsWUFBWSxFQUFFLHFCQUFxQix5REFBeUQsWUFBWSxFQUFFLHFCQUFxQixpRUFBaUUsWUFBWSxFQUFFLHFCQUFxQixvSkFBb0osWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN6c0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix1UUFBdVEsWUFBWSxFQUFFLHFCQUFxQiwySEFBMkgsWUFBWSxFQUFFLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN4cUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwrT0FBK08sWUFBWSxFQUFFLHFCQUFxQiw0REFBNEQsWUFBWSxFQUFFLG1CQUFtQixXQUFXLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLHVCQUF1QixxQ0FBcUMsWUFBWSxFQUFFLHVCQUF1QixxQ0FBcUMsWUFBWSxFQUFFLEVBQUUsbUJBQW1CLFdBQVcsdUJBQXVCLHFDQUFxQyxZQUFZLEVBQUUsdUJBQXVCLHFDQUFxQyxZQUFZLEVBQUUsdUJBQXVCLHNDQUFzQyxZQUFZLEVBQUUsdUJBQXVCLHNDQUFzQyxZQUFZLEVBQUUsRUFBRSxFQUFFLEVBQUU7QUFDdnBDO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixjQUFjLFdBQVcscUJBQXFCLG1ZQUFtWSxZQUFZLEVBQUUsRUFBRTtBQUMxaEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsK3lCQUEreUIsWUFBWSxFQUFFLHFCQUFxQixzS0FBc0ssWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM5cUM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIseUhBQXlILFlBQVksRUFBRSxxQkFBcUIsMERBQTBELFlBQVksRUFBRSxxQkFBcUIsMkRBQTJELFlBQVksRUFBRSxxQkFBcUIsMkRBQTJELFlBQVksRUFBRSxxQkFBcUIsMERBQTBELFlBQVksRUFBRSxxQkFBcUIsaVBBQWlQLFlBQVksRUFBRSxxQkFBcUIsaVBBQWlQLFlBQVksRUFBRSxxQkFBcUIsa1BBQWtQLFlBQVksRUFBRSxxQkFBcUIsaVBBQWlQLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDdHZEO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsd0RBQXdELFlBQVksRUFBRSxxQkFBcUIsd0RBQXdELFlBQVksRUFBRSxxQkFBcUIsd0RBQXdELFlBQVksRUFBRSxxQkFBcUIseURBQXlELFlBQVksRUFBRSxxQkFBcUIsdVFBQXVRLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDaHpCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixZQUFZLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHNRQUFzUSxZQUFZLEVBQUUscUJBQXFCLGlSQUFpUixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQy91QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLCtRQUErUSxZQUFZLEVBQUUsbUJBQW1CLFdBQVcscUJBQXFCLHVEQUF1RCxZQUFZLEVBQUUsdUJBQXVCLGtDQUFrQyxZQUFZLEVBQUUscUJBQXFCLG9LQUFvSyxZQUFZLEVBQUUsRUFBRSxFQUFFLEVBQUU7QUFDaDFCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix3QkFBd0IsV0FBVyxxQkFBcUIsaWNBQWljLFlBQVksRUFBRSxFQUFFO0FBQ2xtQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isb0JBQW9CLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDZNQUE2TSxZQUFZLEVBQUUscUJBQXFCLCtXQUErVyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzV4QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsbUJBQW1CLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDhVQUE4VSxZQUFZLEVBQUUscUJBQXFCLDRHQUE0RyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3pwQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsWUFBWSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwwVkFBMFYsWUFBWSxFQUFFLHFCQUFxQixrR0FBa0csWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNwcEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsNFJBQTRSLFlBQVksRUFBRSxxQkFBcUIsNk5BQTZOLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDbHRCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixjQUFjLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJSQUEyUixZQUFZLEVBQUUscUJBQXFCLG9OQUFvTixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3pzQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcscUJBQXFCLGtaQUFrWixZQUFZLEVBQUUsRUFBRTtBQUMzaUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLFlBQVksV0FBVyxxQkFBcUIsMmlCQUEyaUIsWUFBWSxFQUFFLEVBQUU7QUFDaHNCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLFdBQVcscUJBQXFCLDJKQUEySixZQUFZLEVBQUUsRUFBRTtBQUNuVDtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsV0FBVyxXQUFXLHFCQUFxQiwwa0JBQTBrQixZQUFZLEVBQUUsRUFBRTtBQUM5dEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixzUUFBc1EsWUFBWSxFQUFFLHFCQUFxQixnUEFBZ1AsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNwdEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixxTEFBcUwsWUFBWSxFQUFFLHFCQUFxQix5TEFBeUwsWUFBWSxFQUFFLHFCQUFxQix5TEFBeUwsWUFBWSxFQUFFLHFCQUFxQixxTEFBcUwsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNoZ0M7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIscW1CQUFxbUIsWUFBWSxFQUFFLHFCQUFxQix1V0FBdVcsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNycUM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwyWEFBMlgsWUFBWSxFQUFFLHFCQUFxQiw0TUFBNE0sWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN2eUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHlCQUF5QixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixxYkFBcWIsWUFBWSxFQUFFLHFCQUFxQixtTUFBbU0sWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3MUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHFCQUFxQixXQUFXLHFCQUFxQiwrdUJBQSt1QixZQUFZLEVBQUUsRUFBRTtBQUM3NEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwwaEJBQTBoQixZQUFZLEVBQUUscUJBQXFCLHVEQUF1RCxZQUFZLEVBQUUscUJBQXFCLG9EQUFvRCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3g0QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHVOQUF1TixZQUFZLEVBQUUsbUJBQW1CLFdBQVcscUJBQXFCLDBEQUEwRCxZQUFZLEVBQUUscUJBQXFCLHlEQUF5RCxZQUFZLEVBQUUscUJBQXFCLDJEQUEyRCxZQUFZLEVBQUUsRUFBRSxFQUFFLEVBQUU7QUFDdnNCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxxQkFBcUIscUtBQXFLLFlBQVksRUFBRSxxQkFBcUIscUtBQXFLLFlBQVksRUFBRSxxQkFBcUIscUtBQXFLLFlBQVksRUFBRSxFQUFFO0FBQ2p0QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isa0JBQWtCLFdBQVcscUJBQXFCLHNLQUFzSyxZQUFZLEVBQUUscUJBQXFCLDZKQUE2SixZQUFZLEVBQUUscUJBQXFCLHNLQUFzSyxZQUFZLEVBQUUsRUFBRTtBQUMxc0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLHFCQUFxQix1UEFBdVAsWUFBWSxFQUFFLHFCQUFxQiwwUEFBMFAsWUFBWSxFQUFFLHFCQUFxQixzUEFBc1AsWUFBWSxFQUFFLEVBQUU7QUFDeDhCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixpQkFBaUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsK0xBQStMLFlBQVksRUFBRSxxQkFBcUIsNGZBQTRmLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDeDVCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixzQkFBc0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsZ09BQWdPLFlBQVksRUFBRSxxQkFBcUIsd2tCQUF3a0IsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMxZ0M7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHFCQUFxQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixxVkFBcVYsWUFBWSxFQUFFLHFCQUFxQiw0VEFBNFQsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNsM0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwrTUFBK00sWUFBWSxFQUFFLHFCQUFxQixnTEFBZ0wsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3bEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix1TEFBdUwsWUFBWSxFQUFFLHFCQUFxQixxTEFBcUwsWUFBWSxFQUFFLHFCQUFxQiwwTEFBMEwsWUFBWSxFQUFFLHFCQUFxQiwwTEFBMEwsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNwZ0M7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixxREFBcUQsWUFBWSxFQUFFLHFCQUFxQiwyU0FBMlMsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM1akI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLHVCQUF1QixnQ0FBZ0MsWUFBWSxFQUFFLHFCQUFxQiwyU0FBMlMsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN6aUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw4VUFBOFUsWUFBWSxFQUFFLHFCQUFxQixxREFBcUQsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMvbEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLG1CQUFtQixXQUFXLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLHFCQUFxQiw2VEFBNlQsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMvakI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixnaUJBQWdpQixZQUFZLEVBQUUsdUJBQXVCLG9DQUFvQyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3B5QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IscUJBQXFCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHFRQUFxUSxZQUFZLEVBQUUscUJBQXFCLHlEQUF5RCxZQUFZLEVBQUUscUJBQXFCLHlEQUF5RCxZQUFZLEVBQUUscUJBQXFCLDZEQUE2RCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzN0QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLHFCQUFxQiwyVkFBMlYsWUFBWSxFQUFFLEVBQUU7QUFDbmY7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLHFCQUFxQix3WEFBd1gsWUFBWSxFQUFFLEVBQUU7QUFDbmhCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcscUJBQXFCLHdnQkFBd2dCLFlBQVksRUFBRSxFQUFFO0FBQzlwQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isb0JBQW9CLFdBQVcscUJBQXFCLGtaQUFrWixZQUFZLEVBQUUsRUFBRTtBQUMvaUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHVCQUF1QixXQUFXLHFCQUFxQixnUkFBZ1IsWUFBWSxFQUFFLEVBQUU7QUFDaGI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsc2xCQUFzbEIsWUFBWSxFQUFFLHVCQUF1Qix1Q0FBdUMsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMxMUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLHFCQUFxQix1VUFBdVUsWUFBWSxFQUFFLEVBQUU7QUFDbmU7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwySUFBMkksWUFBWSxFQUFFLHFCQUFxQixrSkFBa0osWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMxZjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isa0JBQWtCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLG9QQUFvUCxZQUFZLEVBQUUscUJBQXFCLGtIQUFrSCxZQUFZLEVBQUUscUJBQXFCLG9EQUFvRCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzNwQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwrUEFBK1AsWUFBWSxFQUFFLHFCQUFxQixxUUFBcVEsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUMvdEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLFdBQVcsV0FBVyxxQkFBcUIsb25CQUFvbkIsWUFBWSxFQUFFLEVBQUU7QUFDeHdCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLG9DQUFvQyxXQUFXLHFCQUFxQix5d0JBQXl3QixZQUFZLEVBQUU7QUFDajRCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUscUJBQXFCLCtHQUErRyxZQUFZLEVBQUUscUJBQXFCLDRHQUE0RyxZQUFZLEVBQUUscUJBQXFCLHFKQUFxSixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzV4QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsYUFBYSxXQUFXLHFCQUFxQix5cEJBQXlwQixZQUFZLEVBQUUsRUFBRTtBQUMveUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLHFCQUFxQiw0bkJBQTRuQixZQUFZLEVBQUUsRUFBRTtBQUN6eEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLHFCQUFxQixnZUFBZ2UsWUFBWSxFQUFFLEVBQUU7QUFDNW5CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixZQUFZLFdBQVcscUJBQXFCLHVPQUF1TyxZQUFZLEVBQUUsRUFBRTtBQUM1WDtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IscUJBQXFCLFdBQVcscUJBQXFCLHVnQkFBdWdCLFlBQVksRUFBRSxFQUFFO0FBQ3JxQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsYUFBYSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixrdkJBQWt2QixZQUFZLEVBQUUsdUJBQXVCLHVDQUF1QyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3AvQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsYUFBYSxXQUFXLHFCQUFxQiwybENBQTJsQyxZQUFZLEVBQUUsRUFBRTtBQUNqdkM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxxQkFBcUIsd1RBQXdULFlBQVksRUFBRSxFQUFFO0FBQy9jO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixjQUFjLFdBQVcscUJBQXFCLHFXQUFxVyxZQUFZLEVBQUUsRUFBRTtBQUM1ZjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsYUFBYSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiwwTkFBME4sWUFBWSxFQUFFLHFCQUFxQiwwREFBMEQsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3ZTtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixnTUFBZ00sWUFBWSxFQUFFLHFCQUFxQixzS0FBc0ssWUFBWSxFQUFFLHFCQUFxQixtSUFBbUksWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN2dUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLFlBQVksV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsMFZBQTBWLFlBQVksRUFBRSxxQkFBcUIsd0lBQXdJLFlBQVksRUFBRSx1QkFBdUIsZ0NBQWdDLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDL3ZCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDIrQkFBMitCLFlBQVksRUFBRSxxQkFBcUIsNkRBQTZELFlBQVksRUFBRSxxQkFBcUIsZ0VBQWdFLFlBQVksRUFBRSxxQkFBcUIsdURBQXVELFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDaDhDO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixZQUFZLFdBQVcscUJBQXFCLGtUQUFrVCxZQUFZLEVBQUUsRUFBRTtBQUN2YztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsY0FBYyxXQUFXLHFCQUFxQixrOEJBQWs4QixZQUFZLEVBQUUsRUFBRTtBQUN6bEM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHdCQUF3QixXQUFXLHFCQUFxQixpYUFBaWEsWUFBWSxFQUFFLEVBQUU7QUFDbGtCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcscUJBQXFCLCthQUErYSxZQUFZLEVBQUUsRUFBRTtBQUNya0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsd1RBQXdULFlBQVksRUFBRSx1QkFBdUIscUNBQXFDLFlBQVksRUFBRSx1QkFBdUIscUNBQXFDLFlBQVksRUFBRSxxQkFBcUIsbUdBQW1HLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDendCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHFxQkFBcXFCLFlBQVksRUFBRSxxQkFBcUIsMkVBQTJFLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDejhCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxxQkFBcUIsaTBCQUFpMEIsWUFBWSxFQUFFLEVBQUU7QUFDNzlCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIseU9BQXlPLFlBQVksRUFBRSxxQkFBcUIsOEtBQThLLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDdG5CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsOFRBQThULFlBQVksRUFBRSxxQkFBcUIsaUxBQWlMLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDOXNCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixpQkFBaUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsc09BQXNPLFlBQVksRUFBRSxxQkFBcUIsOEtBQThLLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDam5CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixpQkFBaUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIscVVBQXFVLFlBQVksRUFBRSxxQkFBcUIsOEtBQThLLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDaHRCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLGlIQUFpSCxFQUFFLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLCtWQUErVixZQUFZLEVBQUUsRUFBRTtBQUN0a0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIscU9BQXFPLFlBQVksRUFBRSxxQkFBcUIsOE9BQThPLFlBQVksRUFBRSx1QkFBdUIsbUNBQW1DLFlBQVksRUFBRSx1QkFBdUIsbUNBQW1DLFlBQVksRUFBRSxxQkFBcUIsb0RBQW9ELFlBQVksRUFBRSx1QkFBdUIsb0NBQW9DLFlBQVksRUFBRSx1QkFBdUIsb0NBQW9DLFlBQVksRUFBRSxxQkFBcUIscURBQXFELFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDOW5DO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIseThDQUF5OEMsWUFBWSxFQUFFLHFCQUFxQiwrRUFBK0UsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNwdkQ7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIscUlBQXFJLFlBQVksRUFBRSxxQkFBcUIsbVJBQW1SLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDbm5CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLFdBQVcscUJBQXFCLDJZQUEyWSxZQUFZLEVBQUUsRUFBRTtBQUNuaUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsa3VCQUFrdUIsWUFBWSxFQUFFLHFCQUFxQiw0TkFBNE4sWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN2cEM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLFlBQVksV0FBVyxxQkFBcUIsdTRCQUF1NEIsWUFBWSxFQUFFLEVBQUU7QUFDNWhDO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix1QkFBdUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsa2RBQWtkLFlBQVksRUFBRSxxQkFBcUIsOEVBQThFLFlBQVksRUFBRSxxQkFBcUIsZ0ZBQWdGLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDdDNCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixxQkFBcUIsV0FBVyxxQkFBcUIsNnNCQUE2c0IsWUFBWSxFQUFFLEVBQUU7QUFDMzJCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixvQkFBb0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsNmFBQTZhLFlBQVksRUFBRSx1QkFBdUIsbUNBQW1DLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDbHJCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLFdBQVcscUJBQXFCLHd0QkFBd3RCLFlBQVksRUFBRSxFQUFFO0FBQ2gzQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isc0JBQXNCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLG9aQUFvWixZQUFZLEVBQUUscUJBQXFCLDRaQUE0WixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2xoQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isb0JBQW9CLFdBQVcscUJBQXFCLG9XQUFvVyxZQUFZLEVBQUUsRUFBRTtBQUNqZ0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLHFCQUFxQixvV0FBb1csWUFBWSxFQUFFLEVBQUU7QUFDamdCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix5QkFBeUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsZ1BBQWdQLFlBQVksRUFBRSxxQkFBcUIsc1BBQXNQLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDM3NCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix1QkFBdUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsd09BQXdPLFlBQVksRUFBRSxxQkFBcUIsa1BBQWtQLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDN3JCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixlQUFlLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHVRQUF1USxZQUFZLEVBQUUscUJBQXFCLHFJQUFxSSxZQUFZLEVBQUUscUJBQXFCLGtJQUFrSSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzV3QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isb0JBQW9CLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHVRQUF1USxZQUFZLEVBQUUsbUJBQW1CLFdBQVcscUJBQXFCLHVEQUF1RCxZQUFZLEVBQUUsdUJBQXVCLDZCQUE2QixZQUFZLEVBQUUsRUFBRSxFQUFFLEVBQUU7QUFDaG9CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixvQkFBb0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsdVFBQXVRLFlBQVksRUFBRSxxQkFBcUIscUlBQXFJLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDNW1CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix3QkFBd0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsd0dBQXdHLFlBQVksRUFBRSxxQkFBcUIsc1FBQXNRLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDbGxCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix3QkFBd0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsZ0pBQWdKLFlBQVksRUFBRSxxQkFBcUIsdVFBQXVRLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDM25CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQix5QkFBeUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsMEdBQTBHLFlBQVksRUFBRSxxQkFBcUIsdVFBQXVRLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDdGxCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixzQkFBc0IsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIseUdBQXlHLFlBQVksRUFBRSxxQkFBcUIscVFBQXFRLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDaGxCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsdVFBQXVRLFlBQVksRUFBRSxtQkFBbUIsV0FBVyxxQkFBcUIscURBQXFELFlBQVksRUFBRSx1QkFBdUIsa0NBQWtDLFlBQVksRUFBRSxFQUFFLEVBQUUsRUFBRTtBQUNsb0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix1UUFBdVEsWUFBWSxFQUFFLHFCQUFxQiwrQ0FBK0MsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN0aEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix1UUFBdVEsWUFBWSxFQUFFLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLHVCQUF1QixtQ0FBbUMsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3cEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix1UUFBdVEsWUFBWSxFQUFFLHFCQUFxQiw0R0FBNEcsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNsbEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLHVCQUF1QixXQUFXLG1CQUFtQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixxdEJBQXF0QixZQUFZLEVBQUUsdUJBQXVCLHdDQUF3QyxZQUFZLEVBQUUsRUFBRSxxQkFBcUIsdVFBQXVRLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDNXlDO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixxQkFBcUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsdVFBQXVRLFlBQVksRUFBRSxxQkFBcUIsdUxBQXVMLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDL3BCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixZQUFZLFdBQVcscUJBQXFCLG1zQkFBbXNCLFlBQVksRUFBRSxFQUFFO0FBQ3gxQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsbUJBQW1CLFdBQVcscUJBQXFCLG9rQkFBb2tCLFlBQVksRUFBRSxFQUFFO0FBQ2h1QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsbUJBQW1CLFdBQVcscUJBQXFCLDRXQUE0VyxZQUFZLEVBQUUsRUFBRTtBQUN4Z0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxxQkFBcUIsdVFBQXVRLFlBQVksRUFBRSxFQUFFO0FBQzlaO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsa01BQWtNLFlBQVksRUFBRSxxQkFBcUIsaW5CQUFpbkIsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNsaEM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLHFCQUFxQiwybkJBQTJuQixZQUFZLEVBQUUsRUFBRTtBQUNyeEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix5aUJBQXlpQixZQUFZLEVBQUUscUJBQXFCLHFJQUFxSSxZQUFZLEVBQUUscUJBQXFCLHVKQUF1SixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3RrQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsaUJBQWlCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDRJQUE0SSxZQUFZLEVBQUUscUJBQXFCLDBJQUEwSSxZQUFZLEVBQUUsdUJBQXVCLGdDQUFnQyxZQUFZLEVBQUUscUJBQXFCLDJJQUEySSxZQUFZLEVBQUUscUJBQXFCLHdJQUF3SSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2o1QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsV0FBVyxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQixrMkNBQWsyQyxZQUFZLEVBQUUscUJBQXFCLHVJQUF1SSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2hzRDtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsaUJBQWlCLFdBQVcscUJBQXFCLDBTQUEwUyxZQUFZLEVBQUUsRUFBRTtBQUNwYztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsaUJBQWlCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHFkQUFxZCxZQUFZLEVBQUUscUJBQXFCLGlJQUFpSSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ256QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IseUJBQXlCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLGdFQUFnRSxZQUFZLEVBQUUscUJBQXFCLG9EQUFvRCxZQUFZLEVBQUUscUJBQXFCLHFEQUFxRCxZQUFZLEVBQUUscUJBQXFCLCtEQUErRCxZQUFZLEVBQUUscUJBQXFCLGlFQUFpRSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3ZuQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsMEJBQTBCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLGdFQUFnRSxZQUFZLEVBQUUscUJBQXFCLDhEQUE4RCxZQUFZLEVBQUUscUJBQXFCLCtEQUErRCxZQUFZLEVBQUUscUJBQXFCLCtEQUErRCxZQUFZLEVBQUUscUJBQXFCLGlFQUFpRSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzVvQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsdUJBQXVCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLGdFQUFnRSxZQUFZLEVBQUUscUJBQXFCLHNEQUFzRCxZQUFZLEVBQUUscUJBQXFCLHVEQUF1RCxZQUFZLEVBQUUscUJBQXFCLCtEQUErRCxZQUFZLEVBQUUscUJBQXFCLGlFQUFpRSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3puQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0Isd0JBQXdCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLGdFQUFnRSxZQUFZLEVBQUUscUJBQXFCLHNEQUFzRCxZQUFZLEVBQUUscUJBQXFCLHVEQUF1RCxZQUFZLEVBQUUscUJBQXFCLCtEQUErRCxZQUFZLEVBQUUscUJBQXFCLGlFQUFpRSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzFuQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsWUFBWSxXQUFXLHFCQUFxQiwrUUFBK1EsWUFBWSxFQUFFLEVBQUU7QUFDcGE7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsdVJBQXVSLFlBQVksRUFBRSxxQkFBcUIseUVBQXlFLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDempCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDBWQUEwVixZQUFZLEVBQUUscUJBQXFCLHVEQUF1RCxZQUFZLEVBQUUscUJBQXFCLDZEQUE2RCxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzFzQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsY0FBYyxXQUFXLHFCQUFxQixxdUJBQXF1QixZQUFZLEVBQUUsRUFBRTtBQUM1M0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLHFCQUFxQiwrTkFBK04sWUFBWSxFQUFFLEVBQUU7QUFDeFg7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGdCQUFnQixXQUFXLHFCQUFxQiwyTkFBMk4sWUFBWSxFQUFFLEVBQUU7QUFDcFg7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxxQkFBcUIsMnpCQUEyekIsWUFBWSxFQUFFLEVBQUU7QUFDbjlCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxxQkFBcUIsaWVBQWllLFlBQVksRUFBRSxFQUFFO0FBQzFuQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsWUFBWSxXQUFXLHFCQUFxQixnVEFBZ1QsWUFBWSxFQUFFLEVBQUU7QUFDcmM7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsNllBQTZZLFlBQVksRUFBRSxxQkFBcUIsa0dBQWtHLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDenNCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixjQUFjLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDJSQUEyUixZQUFZLEVBQUUscUJBQXFCLHFwQkFBcXBCLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDMW9DO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixXQUFXLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDBWQUEwVixZQUFZLEVBQUUscUJBQXFCLHlJQUF5SSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQzFyQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsWUFBWSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix3UkFBd1IsWUFBWSxFQUFFLHFCQUFxQiw0SUFBNEksWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM1bkI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGFBQWEsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsa01BQWtNLFlBQVksRUFBRSxxQkFBcUIsdWVBQXVlLFlBQVksRUFBRSxxQkFBcUIsc1lBQXNZLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDM3lDO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixZQUFZLFdBQVcscUJBQXFCLG1WQUFtVixZQUFZLEVBQUUsRUFBRTtBQUN4ZTtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsaUJBQWlCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLG1jQUFtYyxZQUFZLEVBQUUscUJBQXFCLHdWQUF3VixZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ3gvQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcscUJBQXFCLHFmQUFxZixZQUFZLEVBQUUsRUFBRTtBQUM5b0I7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix1UUFBdVEsWUFBWSxFQUFFLHFCQUFxQix1REFBdUQsWUFBWSxFQUFFLHFCQUFxQiw0REFBNEQsWUFBWSxFQUFFLHFCQUFxQixxREFBcUQsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNudEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG1CQUFtQixXQUFXLHFCQUFxQixxVUFBcVUsWUFBWSxFQUFFLEVBQUU7QUFDamU7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGlCQUFpQixXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix1UUFBdVEsWUFBWSxFQUFFLHFCQUFxQix1SkFBdUosWUFBWSxFQUFFLHFCQUFxQiw0SkFBNEosWUFBWSxFQUFFLHFCQUFxQix1SkFBdUosWUFBWSxFQUFFLHFCQUFxQix5REFBeUQsWUFBWSxFQUFFLHFCQUFxQix3REFBd0QsWUFBWSxFQUFFLHFCQUFxQiwwREFBMEQsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN4d0M7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGtCQUFrQixXQUFXLHFCQUFxQiwwWUFBMFksWUFBWSxFQUFFLEVBQUU7QUFDcmlCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixxQkFBcUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIsbVFBQW1RLFlBQVksRUFBRSxxQkFBcUIsdURBQXVELFlBQVksRUFBRSxxQkFBcUIseURBQXlELFlBQVksRUFBRSxxQkFBcUIsd0RBQXdELFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDbHRCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcscUJBQXFCLDZxQ0FBNnFDLFlBQVksRUFBRSxFQUFFO0FBQ24wQztBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsaUJBQWlCLFdBQVcscUJBQXFCLGtNQUFrTSxZQUFZLEVBQUUsRUFBRTtBQUM1VjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsbUJBQW1CLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHdnQkFBd2dCLFlBQVksRUFBRSxxQkFBcUIsd0lBQXdJLFlBQVksRUFBRSxxQkFBcUIsd0lBQXdJLFlBQVksRUFBRSxFQUFFLEVBQUU7QUFDMWhDO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIseWhCQUF5aEIsWUFBWSxFQUFFLHFCQUFxQix3TkFBd04sWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUNoOUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGNBQWMsV0FBVyxxQkFBcUIsc2ZBQXNmLFlBQVksRUFBRSxFQUFFO0FBQzdvQjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsY0FBYyxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQiw2VEFBNlQsWUFBWSxFQUFFLHVCQUF1QixvQ0FBb0MsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3akI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxtQkFBbUIsV0FBVyxtQkFBbUIsV0FBVyxxQkFBcUIscURBQXFELFlBQVksRUFBRSx1QkFBdUIsc0NBQXNDLFlBQVksRUFBRSxFQUFFLHFCQUFxQiw2UkFBNlIsWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUN4cEI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLG9CQUFvQixXQUFXLHFCQUFxQixpZUFBaWUsWUFBWSxFQUFFLEVBQUU7QUFDOW5CO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixhQUFhLFdBQVcscUJBQXFCLG9wREFBb3BELFlBQVksRUFBRSxFQUFFO0FBQzF5RDtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsaUJBQWlCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLHlJQUF5SSxZQUFZLEVBQUUscUJBQXFCLDRJQUE0SSxZQUFZLEVBQUUsdUJBQXVCLHVDQUF1QyxZQUFZLEVBQUUscUJBQXFCLCtVQUErVSxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2g3QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZ0JBQWdCLFdBQVcsbUJBQW1CLFdBQVcscUJBQXFCLDZJQUE2SSxZQUFZLEVBQUUscUJBQXFCLHlJQUF5SSxZQUFZLEVBQUUscUJBQXFCLGlJQUFpSSxZQUFZLEVBQUUsdUJBQXVCLHVDQUF1QyxZQUFZLEVBQUUsRUFBRSxFQUFFO0FBQ2x1QjtBQUNPO0FBQ1AsU0FBUyx1REFBTyxFQUFFLG9CQUFvQixzQkFBc0IsV0FBVyxrQkFBa0IsZUFBZSxXQUFXLG1CQUFtQixXQUFXLHFCQUFxQix1UUFBdVEsWUFBWSxFQUFFLHFCQUFxQiwySUFBMkksWUFBWSxFQUFFLEVBQUUsRUFBRTtBQUM3bUI7QUFDTztBQUNQLFNBQVMsdURBQU8sRUFBRSxvQkFBb0Isc0JBQXNCLFdBQVcsa0JBQWtCLGVBQWUsV0FBVyxxQkFBcUIsZ2xCQUFnbEIsWUFBWSxFQUFFLEVBQUU7QUFDeHVCO0FBQ087QUFDUCxTQUFTLHVEQUFPLEVBQUUsb0JBQW9CLHNCQUFzQixXQUFXLGtCQUFrQixnQkFBZ0IsV0FBVyxxQkFBcUIsb2ZBQW9mLFlBQVksRUFBRSxFQUFFO0FBQzdvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtaWNvbnMvY2kvaW5kZXgubWpzPzQxMTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVEhJUyBGSUxFIElTIEFVVE8gR0VORVJBVEVEXG5pbXBvcnQgeyBHZW5JY29uIH0gZnJvbSAnLi4vbGliL2luZGV4Lm1qcyc7XG5leHBvcnQgZnVuY3Rpb24gQ2lBaXJwb3J0U2lnbjEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkFpcnBvcnRfU2lnbl8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuMTA1LDEyLjYwOXYyLjI3OWEuMTE5LjExOSwwLDAsMCwuMDYxLjEwNWwuNjIyLjM1NWEuNDkuNDksMCwwLDEsLjI0Mi4zNjVsLjA0OS40MTNhLjI0My4yNDMsMCwwLDEtLjMwNy4yNjNsLTEuNjQxLS40NTlhLjQ4Ni40ODYsMCwwLDAtLjI2MiwwbC0xLjY0MS40NTlhLjI0NC4yNDQsMCwwLDEtLjMwOC0uMjYzbC4wNS0uNDEzYS40ODcuNDg3LDAsMCwxLC4yNDItLjM2NWwuNjIxLS4zNTVhLjEyLjEyLDAsMCwwLC4wNjItLjEwNVYxMi42MDlhLjEyMi4xMjIsMCwwLDAtLjEzNy0uMTIxbC0zLjQ4NS40MzVBLjI0Mi4yNDIsMCwwLDEsNywxMi42ODJ2LS42MjRhLjQ4Ni40ODYsMCwwLDEsLjMxNi0uNDU1bDMuNS0xLjMxM2EuMTIyLjEyMiwwLDAsMCwuMDc5LS4xMTRWOS40MzVhNC43NTYsNC43NTYsMCwwLDEsLjEtLjk4MWgwYTEuMDE1LDEuMDE1LDAsMCwxLDEuMi0uODMzLDEuMDYzLDEuMDYzLDAsMCwxLC44MTkuOWwuMDE1LjA5NGE2LjMsNi4zLDAsMCwxLC4wNzcuOTc2di41ODdhLjEyMS4xMjEsMCwwLDAsLjA3OS4xMTRsMy41LDEuMzEzYS40ODYuNDg2LDAsMCwxLC4zMTYuNDU1di42MjRhLjI0My4yNDMsMCwwLDEtLjI3NC4yNDFsLTMuNDg0LS40MzVBLjEyMS4xMjEsMCwwLDAsMTMuMTA1LDEyLjYwOVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjEuOTMzQTkuOTMzLDkuOTMzLDAsMSwxLDIxLjkzMywxMiw5Ljk0NCw5Ljk0NCwwLDAsMSwxMiwyMS45MzNaTTEyLDMuMDY3QTguOTMzLDguOTMzLDAsMSwwLDIwLjkzMywxMiw4Ljk0Myw4Ljk0MywwLDAsMCwxMiwzLjA2N1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUFsYXJtT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJBbGFybV9PZmZcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00LjU2NCwzLjg1NmEuNS41LDAsMCwwLS43LjcxbC4yOS4yOS0uNS41YTIuMDE5LDIuMDE5LDAsMCwwLS4wMSwyLjg1bC42NS42N2E4LjI3Myw4LjI3MywwLDAsMC0uNzEsMy4zOUE4LjQyNyw4LjQyNywwLDAsMCwxMiwyMC42ODZhOC4yNzUsOC4yNzUsMCwwLDAsNS43Mi0yLjI2Yy41Ny41NywxLjE0LDEuMTUsMS43MSwxLjcxYS41LjUsMCwwLDAsLjcxLS43Wm0tLjIxLDIuMjEuNTEtLjVjLjMyLjMzLjY1LjY1Ljk4Ljk4YTYuMzgsNi4zOCwwLDAsMC0xLjA2LDEuNGwtLjQzLS40NEExLjAzMiwxLjAzMiwwLDAsMSw0LjM1NCw2LjA2NlpNMTIsMTkuNjg2YTcuNDMsNy40MywwLDAsMS03LjQyLTcuNDIsNy4zMTIsNy4zMTIsMCwwLDEsMS45Ni01LjAybDIuNTksMi41OXEzLjk0NSwzLjk0NSw3Ljg4LDcuODhBNy4yNyw3LjI3LDAsMCwxLDEyLDE5LjY4NlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuMzU0LDguMjE2YTIuMDQsMi4wNCwwLDAsMCwwLTIuODZsLTEuNDYtMS40NWEyLjAxLDIuMDEsMCwwLDAtMi44NSwwbC0uNjguNjdhOC41MjgsOC41MjgsMCwwLDAtNi4zOC0uMTdjLS42LjIzLS4zNCwxLjE5LjI3Ljk3YTcuNDE5LDcuNDE5LDAsMCwxLDkuNjQsOS42NGMtLjIyLjYuNzQuODYuOTcuMjZhOC41MDYsOC41MDYsMCwwLDAtLjE3LTYuMzlabS0yLjQtMS45YTguMDY4LDguMDY4LDAsMCwwLTEuNjUtMS4yN2wuNDQtLjQzYTEuMDI2LDEuMDI2LDAsMCwxLDEuNDUsMGwxLjQ1LDEuNDVhMS4wMTQsMS4wMTQsMCwwLDEsMCwxLjQ0bC0uNDMuNDRBOC4yNjIsOC4yNjIsMCwwLDAsMTcuOTU0LDYuMzE2WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQWxhcm1PbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQWxhcm1fT25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC4zNTIsOC4yMTNhMi4wMTcsMi4wMTcsMCwwLDAsMC0yLjg1MUwxOC45LDMuOWEyLjAzOCwyLjAzOCwwLDAsMC0yLjg2LDBsLS42Ny42NTlBOC4yMzgsOC4yMzgsMCwwLDAsMTIsMy44NTJhOC4zMzIsOC4zMzIsMCwwLDAtMy4zOS43MUw3Ljk2MiwzLjlhMi4wMzgsMi4wMzgsMCwwLDAtMi44NiwwTDMuNjUyLDUuMzYyYTIuMDIsMi4wMiwwLDAsMC0uMDEsMi44NTFsLjY1LjY3YTguNDE5LDguNDE5LDAsMSwwLDE2LjEzLDMuMzksOC40LDguNCwwLDAsMC0uNzItMy40MTFaTTQuMzYyLDYuMDYybDEuNDUtMS40NWExLjAxNiwxLjAxNiwwLDAsMSwxLjQ0LDBsLjQ0LjQzYTguNDI3LDguNDI3LDAsMCwwLTIuOTEsMi45bC0uNDItLjQzQTEuMDI3LDEuMDI3LDAsMCwxLDQuMzYyLDYuMDYyWk0xMiwxOS42ODJhNy40MTUsNy40MTUsMCwxLDEsNy40Mi03LjQwOUE3LjQyMSw3LjQyMSwwLDAsMSwxMiwxOS42ODJabTcuMjItMTEuNzVhOC41NzgsOC41NzgsMCwwLDAtMi45MS0yLjg5bC40NC0uNDNhMS4wMTYsMS4wMTYsMCwwLDEsMS40NCwwbDEuNDUsMS40NWExLjAyNywxLjAyNywwLDAsMSwwLDEuNDUxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy4wNDIsMTIuNzYzSDEyYS40NTUuNDU1LDAsMCwxLS4yNy0uMDgxYy0uMDMtLjAyLS4wNS0uMDM5LS4wNy0uMDQ5YS40NDIuNDQyLDAsMCwxLS4xNi0uMzZWNy4yMzJhLjUuNSwwLDAsMSwxLDB2NC41MzFoNC41NEEuNS41LDAsMCwxLDE3LjA0MiwxMi43NjNaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lBbGlnbkJvdHRvbSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQWxpZ25fQm90dG9tXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy41NDgsMjAuOTIyaDE2LjlhLjUuNSwwLDAsMCwwLTFIMy41NDhhLjUuNSwwLDAsMCwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTksMTguOTE5SDYuNTY1YTIuNSwyLjUsMCwwLDEtMi41LTIuNVY1LjU3OGEyLjUsMi41LDAsMCwxLDIuNS0yLjVIOWEyLjUsMi41LDAsMCwxLDIuNSwyLjVWMTYuNDE5QTIuNSwyLjUsMCwwLDEsOSwxOC45MTlaTTYuNTY1LDQuMDc4YTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxNi40MTlhMS41LDEuNSwwLDAsMCwxLjUsMS41SDlhMS41LDEuNSwwLDAsMCwxLjUtMS41VjUuNTc4QTEuNSwxLjUsMCwwLDAsOSw0LjA3OFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNDM3LDE4LjkxOUgxNWEyLjUsMi41LDAsMCwxLTIuNS0yLjVWMTAuNTVBMi41LDIuNSwwLDAsMSwxNSw4LjA1aDIuNDM0YTIuNSwyLjUsMCwwLDEsMi41LDIuNXY1Ljg2OUEyLjUsMi41LDAsMCwxLDE3LjQzNywxOC45MTlaTTE1LDkuMDVhMS41LDEuNSwwLDAsMC0xLjUsMS41djUuODY5YTEuNSwxLjUsMCwwLDAsMS41LDEuNWgyLjQzNGExLjUsMS41LDAsMCwwLDEuNS0xLjVWMTAuNTVhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQWxpZ25DZW50ZXJIIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJBbGlnbl9DZW50ZXItSFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy40Miw0LjA2MkgxMi41di0uNTFhLjUuNSwwLDAsMC0xLDB2LjUxSDYuNThhMi41MDcsMi41MDcsMCwwLDAtMi41LDIuNVY5YTIuNSwyLjUsMCwwLDAsMi41LDIuNUgxMS41djFIOS4wNkEyLjUwNywyLjUwNywwLDAsMCw2LjU2LDE1djIuNDRhMi41MDcsMi41MDcsMCwwLDAsMi41LDIuNUgxMS41di41MWEuNS41LDAsMCwwLDEsMHYtLjUxaDIuNDNhMi41LDIuNSwwLDAsMCwyLjUtMi41VjE1YTIuNSwyLjUsMCwwLDAtMi41LTIuNUgxMi41di0xaDQuOTJBMi41LDIuNSwwLDAsMCwxOS45Miw5VjYuNTYyQTIuNTA3LDIuNTA3LDAsMCwwLDE3LjQyLDQuMDYyWk0xMS41LDE4Ljk0Mkg5LjA2YTEuNTExLDEuNTExLDAsMCwxLTEuNS0xLjVWMTVhMS41LDEuNSwwLDAsMSwxLjUtMS41SDExLjVabTAtOC40NEg2LjU4QTEuNSwxLjUsMCwwLDEsNS4wOCw5VjYuNTYyYTEuNSwxLjUsMCwwLDEsMS41LTEuNUgxMS41Wm0zLjQzLDNhMS41LDEuNSwwLDAsMSwxLjUsMS41djIuNDRhMS41LDEuNSwwLDAsMS0xLjUsMS41SDEyLjVWMTMuNVpNMTguOTIsOWExLjUsMS41LDAsMCwxLTEuNSwxLjVIMTIuNVY1LjA2Mmg0LjkyYTEuNSwxLjUsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lBbGlnbkNlbnRlclYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkFsaWduX0NlbnRlci1WXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQ0NiwxMS41aC0uNTFWOS4wN2EyLjUsMi41LDAsMCwwLTIuNS0yLjVoLTIuNDNhMi41LDIuNSwwLDAsMC0yLjUsMi41VjExLjVIMTEuNVY2LjU4QTIuNSwyLjUsMCwwLDAsOSw0LjA4SDYuNTY2YTIuNSwyLjUsMCwwLDAtMi41LDIuNVYxMS41aC0uNTJhLjUuNSwwLDAsMCwwLDFoLjUydjQuOTJhMi41LDIuNSwwLDAsMCwyLjUsMi41SDlhMi41LDIuNSwwLDAsMCwyLjUtMi41VjEyLjVoMS4wMXYyLjQzYTIuNSwyLjUsMCwwLDAsMi41LDIuNWgyLjQzYTIuNSwyLjUsMCwwLDAsMi41LTIuNVYxMi41aC41MUEuNS41LDAsMCwwLDIwLjQ0NiwxMS41Wk0xMC41LDE3LjQyQTEuNSwxLjUsMCwwLDEsOSwxOC45Mkg2LjU2NmExLjUsMS41LDAsMCwxLTEuNS0xLjVWMTIuNUgxMC41Wm0wLTUuOTJINS4wNjZWNi41OGExLjUsMS41LDAsMCwxLDEuNS0xLjVIOWExLjUsMS41LDAsMCwxLDEuNSwxLjVabTguNDQsMy40M2ExLjUsMS41LDAsMCwxLTEuNSwxLjVoLTIuNDNhMS41LDEuNSwwLDAsMS0xLjUtMS41VjEyLjVoNS40M1ptMC0zLjQzaC01LjQzVjkuMDdhMS41LDEuNSwwLDAsMSwxLjUtMS41aDIuNDNhMS41LDEuNSwwLDAsMSwxLjUsMS41WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUFsaWduTGVmdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQWxpZ25fTGVmdFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuMDc4LDMuNTQ4djE2LjlhLjUuNSwwLDAsMCwxLDBWMy41NDhhLjUuNSwwLDAsMC0xLDBaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQyMiwxMS41SDcuNTgyQTIuNSwyLjUsMCwwLDEsNS4wODIsOVY2LjU2NWEyLjUsMi41LDAsMCwxLDIuNS0yLjVoMTAuODRhMi41LDIuNSwwLDAsMSwyLjUsMi41VjlBMi41LDIuNSwwLDAsMSwxOC40MjIsMTEuNVpNNy41ODIsNS4wNjVhMS41LDEuNSwwLDAsMC0xLjUsMS41VjlhMS41LDEuNSwwLDAsMCwxLjUsMS41aDEwLjg0YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY2LjU2NWExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzLjQ1MSwxOS45MzhINy41ODJhMi41LDIuNSwwLDAsMS0yLjUtMi41VjE1YTIuNSwyLjUsMCwwLDEsMi41LTIuNWg1Ljg2OWEyLjUsMi41LDAsMCwxLDIuNSwyLjV2Mi40MzZBMi41LDIuNSwwLDAsMSwxMy40NTEsMTkuOTM4Wk03LjU4MiwxMy41YTEuNSwxLjUsMCwwLDAtMS41LDEuNXYyLjQzNmExLjUsMS41LDAsMCwwLDEuNSwxLjVoNS44NjlhMS41LDEuNSwwLDAsMCwxLjUtMS41VjE1YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUFsaWduUmlnaHQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkFsaWduX1JpZ2h0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuOTIyLDMuNTQ4djE2LjlhLjUuNSwwLDAsMCwxLDBWMy41NDhhLjUuNSwwLDAsMC0xLDBaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjQxOSwxMS41SDUuNTc4QTIuNSwyLjUsMCwwLDEsMy4wNzgsOVY2LjU2NWEyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTYuNDE5YTIuNSwyLjUsMCwwLDEsMi41LDIuNVY5QTIuNSwyLjUsMCwwLDEsMTYuNDE5LDExLjVaTTUuNTc4LDUuMDY1YTEuNSwxLjUsMCwwLDAtMS41LDEuNVY5YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxNi40MTlhMS41LDEuNSwwLDAsMCwxLjUtMS41VjYuNTY1YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNDE5LDE5LjkzOEgxMC41NWEyLjUsMi41LDAsMCwxLTIuNS0yLjVWMTVhMi41LDIuNSwwLDAsMSwyLjUtMi41aDUuODY5YTIuNSwyLjUsMCwwLDEsMi41LDIuNXYyLjQzNkEyLjUsMi41LDAsMCwxLDE2LjQxOSwxOS45MzhaTTEwLjU1LDEzLjVBMS41LDEuNSwwLDAsMCw5LjA1LDE1djIuNDM2YTEuNSwxLjUsMCwwLDAsMS41LDEuNWg1Ljg2OWExLjUsMS41LDAsMCwwLDEuNS0xLjVWMTVhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQWxpZ25Ub3AgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkFsaWduX1RvcFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuNTQ4LDQuMDc4aDE2LjlhLjUuNSwwLDAsMCwwLTFIMy41NDhhLjUuNSwwLDAsMCwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTksMjAuOTIySDYuNTY1YTIuNSwyLjUsMCwwLDEtMi41LTIuNVY3LjU4MmEyLjUsMi41LDAsMCwxLDIuNS0yLjVIOWEyLjUsMi41LDAsMCwxLDIuNSwyLjV2MTAuODRBMi41LDIuNSwwLDAsMSw5LDIwLjkyMlpNNi41NjUsNi4wODJhMS41LDEuNSwwLDAsMC0xLjUsMS41djEwLjg0YTEuNSwxLjUsMCwwLDAsMS41LDEuNUg5YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY3LjU4MkExLjUsMS41LDAsMCwwLDksNi4wODJaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjQzOCwxNS45NTFIMTVhMi41LDIuNSwwLDAsMS0yLjUtMi41VjcuNTgyYTIuNSwyLjUsMCwwLDEsMi41LTIuNWgyLjQzNWEyLjUsMi41LDAsMCwxLDIuNSwyLjV2NS44NjlBMi41LDIuNSwwLDAsMSwxNy40MzgsMTUuOTUxWk0xNSw2LjA4MmExLjUsMS41LDAsMCwwLTEuNSwxLjV2NS44NjlhMS41LDEuNSwwLDAsMCwxLjUsMS41aDIuNDM1YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY3LjU4MmExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lBcHBsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQXBwbGVcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuODc1LDYuNjEybC4wNS0uMDVhMy4yMjksMy4yMjksMCwwLDAsLjk1LTIuNTguOTc2Ljk3NiwwLDAsMC0uOS0uOSwzLjIyOSwzLjIyOSwwLDAsMC0yLjU4Ljk1LDMuMjc5LDMuMjc5LDAsMCwwLS44NSwxLjQ2LDQuNjYxLDQuNjYxLDAsMCwwLTIuNjktMS43NS41LjUsMCwxLDAtLjIyLjk4LDMuNjY0LDMuNjY0LDAsMCwxLDIuNTksMi4yLDUuNTc3LDUuNTc3LDAsMCwwLTEuOS0uMzIsNS44NDcsNS44NDcsMCwwLDAtNS44NCw1Ljg0YzAsMi45OCwyLjQxLDguNDksNS44NCw4LjQ5YTUuODIxLDUuODIxLDAsMCwwLDIuNC0uNTIuNjgzLjY4MywwLDAsMSwuNTYsMCw1LjczLDUuNzMsMCwwLDAsMi4zOC41MmMzLjQ0LDAsNS44NS01LjUxLDUuODUtOC40OUE1LjgzOCw1LjgzOCwwLDAsMCwxNC44NzUsNi42MTJabS0xLjc3LTEuODdhMi4zLDIuMywwLDAsMSwxLjc4LS42OGMwLC4wNi4wMS4xMi4wMS4xN2EyLjMyNiwyLjMyNiwwLDAsMS0uNjcsMS42MywyLjM1OSwyLjM1OSwwLDAsMS0xLjc5LjY2QTIuMjQ3LDIuMjQ3LDAsMCwxLDEzLjEwNSw0Ljc0MlptMS41NiwxNS4xOWE0Ljc4Nyw0Ljc4NywwLDAsMS0xLjk3LS40MywxLjcxOCwxLjcxOCwwLDAsMC0uNjktLjE1LDEuNjQ5LDEuNjQ5LDAsMCwwLS42OS4xNSw0Ljg3OSw0Ljg3OSwwLDAsMS0xLjk5LjQzYy0yLjU4LDAtNC44NC00LjY3LTQuODQtNy40OWE0Ljg1NSw0Ljg1NSwwLDAsMSw2LjgzLTQuNDIsMS41NiwxLjU2LDAsMCwwLC42Ny4xNWguMDJhMS42ODMsMS42ODMsMCwwLDAsLjY5LS4xNSw0Ljc3Nyw0Ljc3NywwLDAsMSwxLjk3LS40Miw0Ljg1Miw0Ljg1MiwwLDAsMSw0Ljg1LDQuODRDMTkuNTE1LDE1LjI2MiwxNy4yNDUsMTkuOTMyLDE0LjY2NSwxOS45MzJaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkF0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjA5LDIxLjkyNWE5Ljg0Niw5Ljg0NiwwLDAsMS0zLjgzOC0uNzQ3QTkuNjczLDkuNjczLDAsMCwxLDMuMDA1LDE1LjkzLDEwLjAzNCwxMC4wMzQsMCwwLDEsMi4yNDQsMTJhMTAuNDI1LDEwLjQyNSwwLDAsMSwuNjk1LTMuOCw5LjYwNiw5LjYwNiwwLDAsMSwyLTMuMTY5QTkuMjY5LDkuMjY5LDAsMCwxLDguMSwyLjg2MmExMC42MDUsMTAuNjA1LDAsMCwxLDQuMTc1LS43ODcsMTAuNTE2LDEwLjUxNiwwLDAsMSw0LjMzNC44MjdBOC40MzcsOC40MzcsMCwwLDEsMTkuNjQsNS4xMTlhOC42MjIsOC42MjIsMCwwLDEsMS43MDcsMy4xLDkuMjYzLDkuMjYzLDAsMCwxLC4zNzcsMy40ODcsNS44MDksNS44MDksMCwwLDEtMS4zLDMuNkEzLjYsMy42LDAsMCwxLDE3LjcsMTYuNDczYTMuNjI4LDMuNjI4LDAsMCwxLTIuMTYyLS42MDksMi44MiwyLjgyLDAsMCwxLTEuMTE5LTEuNjk0bC41LjEwNmEyLjU4MiwyLjU4MiwwLDAsMS0xLjMsMS4zQTQuMzcsNC4zNywwLDAsMSwxMS43NDYsMTYsMy42ODEsMy42ODEsMCwwLDEsOS44OCwxNS41NGEzLjIsMy4yLDAsMCwxLTEuMjM3LTEuMjcxQTMuODQzLDMuODQzLDAsMCwxLDguMiwxMi40YTMuODgsMy44OCwwLDAsMSwuNDU2LTEuOTI2QTMuMTkxLDMuMTkxLDAsMCwxLDkuOTE5LDkuMjE0YTMuNzkyLDMuNzkyLDAsMCwxLDEuODUzLS40NDMsNC43MTYsNC43MTYsMCwwLDEsMS43NjcuMzY0LDIuNjIyLDIuNjIyLDAsMCwxLDEuMzgzLDEuM2wtLjUuNVY5LjQ2MWEuNC40LDAsMCwxLC40LS40aC4yMzJhLjQuNCwwLDAsMSwuNC40djMuNTE4YTIuNzIzLDIuNzIzLDAsMCwwLC41MjksMS42NzQsMi4xNzMsMi4xNzMsMCwwLDAsMS44NTMuNzA4LDIuMjgxLDIuMjgxLDAsMCwwLDEuMzIzLS40MSwyLjkzOCwyLjkzOCwwLDAsMCwuOTY3LTEuMTc4LDQuOTQ3LDQuOTQ3LDAsMCwwLC40MzctMS44NTIsOS40MzksOS40MzksMCwwLDAtLjQxNy0zLjU3NEE3LjI4NSw3LjI4NSwwLDAsMCwxOC41LDUuNTg4YTcuNDI0LDcuNDI0LDAsMCwwLTIuNjc5LTEuNzgsOS42MDUsOS42MDUsMCwwLDAtMy41NDctLjYyMiw5LjA0MSw5LjA0MSwwLDAsMC0zLjc1OC43NDEsOC4yNTIsOC4yNTIsMCwwLDAtMi43NzMsMiw4LjgsOC44LDAsMCwwLTEuNzIsMi44MzgsOS4yNyw5LjI3LDAsMCwwLS41ODksMy4yNjIsOC41NjgsOC41NjgsMCwwLDAsLjY4MiwzLjQwOEE4Ljk1MSw4Ljk1MSwwLDAsMCw2LDE4LjI0YTguNzA3LDguNzA3LDAsMCwwLDIuNzg1LDEuODkyLDguNTE1LDguNTE1LDAsMCwwLDMuMzg5LjY4Miw5Ljg1MSw5Ljg1MSwwLDAsMCwyLjY3OS0uMzc4LDguNDUxLDguNDUxLDAsMCwwLDItLjgzMS40LjQsMCwwLDEsLjU1My4xNThsLjEuMTkyYS40LjQsMCwwLDEtLjE0MS41MjYsOS44MzIsOS44MzIsMCwwLDEtMi4zOTEsMS4wNEExMC41LDEwLjUsMCwwLDEsMTIuMDksMjEuOTI1Wk0xMS44LDE0Ljg1OWEyLjQ2OSwyLjQ2OSwwLDAsMCwxLjc4Ni0uNjQ5LDIuNDI3LDIuNDI3LDAsMCwwLC42NzUtMS44MzksMi40MTQsMi40MTQsMCwwLDAtLjctMS44ODZBMi41MzIsMi41MzIsMCwwLDAsMTEuOCw5Ljg1NmEyLjQ4MiwyLjQ4MiwwLDAsMC0xLjgzOS42NDksMi41MjMsMi41MjMsMCwwLDAtLjY1LDEuODY2LDIuNCwyLjQsMCwwLDAsLjY4MiwxLjg2NUEyLjU3NCwyLjU3NCwwLDAsMCwxMS44LDE0Ljg1OVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lBdm9jYWRvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJBdm9jYWRvXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuOTgyLDIxLjkzOWE3Ljc1OSw3Ljc1OSwwLDAsMS0uODE4LS4wNDRBNy41OCw3LjU4LDAsMCwxLDYuMSw5LjZhMy41NzgsMy41NzgsMCwwLDAsLjY4NC0yLjI3MSw1LjEyOCw1LjEyOCwwLDAsMSwzLjgtNS4wODUsNS4yNjYsNS4yNjYsMCwwLDEsNC42Ljg5Miw1LjE4NSw1LjE4NSwwLDAsMSwyLjAzOSw0LjE0QTMuNiwzLjYsMCwwLDAsMTcuOSw5LjYxYTcuNTc0LDcuNTc0LDAsMCwxLTUuOTE4LDEyLjMyOVptLjAwOS0xOC44NzdhNC41MzgsNC41MzgsMCwwLDAtMS4xNTguMTUyLDQuMTI2LDQuMTI2LDAsMCwwLTMuMDU1LDQuMDcsNC41MzIsNC41MzIsMCwwLDEtLjksMi45NDcsNi41NTUsNi41NTUsMCwwLDAtMS4zNjYsNS4yMzFBNi42NDMsNi42NDMsMCwwLDAsMTEuMjcxLDIwLjlhNi41NzUsNi41NzUsMCwwLDAsNS44NTEtMTAuNjYyLDQuNDUzLDQuNDUzLDAsMCwxLS45LTIuOSw0LjIxNCw0LjIxNCwwLDAsMC00LjIyOC00LjI3M1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImVsbGlwc2VcIixcImF0dHJcIjp7XCJjeFwiOlwiMTEuOTk5XCIsXCJjeVwiOlwiMTQuODU2XCIsXCJyeFwiOlwiMi41XCIsXCJyeVwiOlwiM1wifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQmFjb24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJhY29uXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjYwNSw3LjQ1NWwtMy40OS0zLjQ5YS44LjgsMCwwLDAtMS4wOC0uMDQsMS44MzMsMS44MzMsMCwwLDEtLjkzLjM3LDMuNzg3LDMuNzg3LDAsMCwwLTIuMjEsMS4xMiwzLjkxOCwzLjkxOCwwLDAsMC0xLjEzLDIuMjIsMS42ODEsMS42ODEsMCwwLDEtLjUzLDEuMSwxLjc1MywxLjc1MywwLDAsMS0xLjEuNTMsNC4wMjYsNC4wMjYsMCwwLDAtMy4zNSwzLjM1LDEuNjc3LDEuNjc3LDAsMCwxLS41MywxLjEsMS43MjEsMS43MjEsMCwwLDEtMS4xMS41Myw0LjA0MSw0LjA0MSwwLDAsMC0xLjYyLjYzLDEuMSwxLjEsMCwwLDAtLjE0LDEuNjZsMy41LDMuNWEuNzgxLjc4MSwwLDAsMCwuNTUuMjMuODIyLjgyMiwwLDAsMCwuNTMtLjE5LDEuNzU5LDEuNzU5LDAsMCwxLC45My0uMzgsMy44LDMuOCwwLDAsMCwyLjIxLTEuMTIsMy45NDgsMy45NDgsMCwwLDAsMS4xNC0yLjIyLDEuNzEsMS43MSwwLDAsMSwuNTItMS4xLDEuNzc2LDEuNzc2LDAsMCwxLDEuMTEtLjUzLDQuMDMsNC4wMywwLDAsMCwzLjM0LTMuMzUsMS42NiwxLjY2LDAsMCwxLC41My0xLjEsMS43MjEsMS43MjEsMCwwLDEsMS4xMS0uNTMsNC4wMTgsNC4wMTgsMCwwLDAsMS42MS0uNjIsMS4wOTEsMS4wOTEsMCwwLDAsLjE0LTEuNjdaTTQuMSwxNS43YTMuMTUsMy4xNSwwLDAsMSwxLjI0LS40NywyLjYzNSwyLjYzNSwwLDAsMCwxLjYzLS44MSwyLjU4NywyLjU4NywwLDAsMCwuOC0xLjYxLDIuODUyLDIuODUyLDAsMCwxLC44Ni0xLjcsMi45LDIuOSwwLDAsMSwxLjctLjg2LDIuNzQ1LDIuNzQ1LDAsMCwwLDEuNjItLjgsMi42ODcsMi42ODcsMCwwLDAsLjgtMS42MiwyLjksMi45LDAsMCwxLC44Ni0xLjcsMi44MTQsMi44MTQsMCwwLDEsMS42OS0uODUsMi44MTksMi44MTksMCwwLDAsMS4yNC0uNDhsMS4zLDEuM2EyLjM2MiwyLjM2MiwwLDAsMS0uOTguMzUsMy41MTUsMy41MTUsMCwwLDAtMi45NSwyLjk1LDIuMTM2LDIuMTM2LDAsMCwxLS42NywxLjM2LDIuMTU5LDIuMTU5LDAsMCwxLTEuMzYuNjcsMy40NCwzLjQ0LDAsMCwwLTEuOTYuOTksMy4zNTEsMy4zNTEsMCwwLDAtLjk4LDEuOTYsMi4zNTUsMi4zNTUsMCwwLDEtMi4wMywyLjAzLDMuMjQyLDMuMjQyLDAsMCwwLTEuNTguNjZMNC4xLDE1LjgzNVpNMTkuOSw4LjNhMy4wNTksMy4wNTksMCwwLDEtMS4yMy40NywyLjY1OSwyLjY1OSwwLDAsMC0xLjYzLjgxLDIuNTg3LDIuNTg3LDAsMCwwLS44LDEuNjEsMi44NTIsMi44NTIsMCwwLDEtLjg2LDEuNywyLjg4MywyLjg4MywwLDAsMS0xLjY5Ljg2LDIuODEyLDIuODEyLDAsMCwwLTIuNDMsMi40MiwyLjg3OCwyLjg3OCwwLDAsMS0uODYsMS43LDIuOCwyLjgsMCwwLDEtMS42OC44NSwyLjgwOCwyLjgwOCwwLDAsMC0xLjI1LjQ4bC0xLjMtMS4yOWEyLjQyMywyLjQyMywwLDAsMSwuOTctLjM1LDMuMzc3LDMuMzc3LDAsMCwwLDEuOTYtLjk5LDMuNDQsMy40NCwwLDAsMCwuOTktMS45NiwyLjIxNywyLjIxNywwLDAsMSwuNjYtMS4zNiwyLjI5MiwyLjI5MiwwLDAsMSwxLjM2LS42NywzLjMxNywzLjMxNywwLDAsMCwxLjk2LS45OSwzLjM1MSwzLjM1MSwwLDAsMCwuOTktMS45NiwyLjM1NSwyLjM1NSwwLDAsMSwyLjAzLTIuMDMsMy40NzksMy40NzksMCwwLDAsMS41OS0uNjZsMS4yMywxLjIzWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJhZGdlRG9sbGFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJCYWRnZV9Eb2xsYXJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45NTNjLS44OTUsMC0xLjU0NS0uNzQzLTIuMTE4LTEuNGEzLjY3MSwzLjY3MSwwLDAsMC0xLjAzMy0uOTQ2LDMuOCwzLjgsMCwwLDAtMS40NjYtLjA3NywzLjAxMiwzLjAxMiwwLDAsMS0yLjQyMS0uNDk0LDMuMDE0LDMuMDE0LDAsMCwxLS40OTQtMi40MjEsMy44MiwzLjgyLDAsMCwwLS4wNzctMS40NjYsMy42NzEsMy42NzEsMCwwLDAtLjk0Ni0xLjAzM2MtLjY1NS0uNTczLTEuNC0xLjIyMi0xLjQtMi4xMThzLjc0My0xLjU0NSwxLjQtMi4xMThhMy42NiwzLjY2LDAsMCwwLC45NDYtMS4wMzQsMy44MTUsMy44MTUsMCwwLDAsLjA3Ny0xLjQ2NSwzLjAxMiwzLjAxMiwwLDAsMSwuNDk0LTIuNDIxLDMuMDE1LDMuMDE1LDAsMCwxLDIuNDIyLS41QTMuNzk0LDMuNzk0LDAsMCwwLDguODQ5LDQuMzlhMy42NjYsMy42NjYsMCwwLDAsMS4wMzMtLjk0NWMuNTczLS42NTUsMS4yMjMtMS40LDIuMTE4LTEuNHMxLjU0NS43NDIsMi4xMTgsMS40YTMuNjYsMy42NiwwLDAsMCwxLjAzNC45NDYsMy44MDcsMy44MDcsMCwwLDAsMS40NjQuMDc3LDMuMDE4LDMuMDE4LDAsMCwxLDIuNDIyLjUsMy4wMTIsMy4wMTIsMCwwLDEsLjUsMi40MjIsMy44MSwzLjgxLDAsMCwwLC4wNzcsMS40NjQsMy42NiwzLjY2LDAsMCwwLC45NDYsMS4wMzRjLjY1NS41NzMsMS40LDEuMjIzLDEuNCwyLjExOHMtLjc0MywxLjU0NS0xLjQsMi4xMThhMy42NjYsMy42NjYsMCwwLDAtLjk0NSwxLjAzMywzLjgxNSwzLjgxNSwwLDAsMC0uMDc3LDEuNDY1LDMuMDEyLDMuMDEyLDAsMCwxLS41LDIuNDIyLDMuMDE4LDMuMDE4LDAsMCwxLTIuNDIxLjQ5NCwzLjgxOCwzLjgxOCwwLDAsMC0xLjQ2NS4wNzcsMy42NzMsMy42NzMsMCwwLDAtMS4wMzQuOTQ2QzEzLjU0NSwyMS4yMSwxMi45LDIxLjk1MywxMiwyMS45NTNaTTguMDkzLDE4LjVhMi45NTIsMi45NTIsMCwwLDEsMS4xMzguMTgzLDQuMjMzLDQuMjMzLDAsMCwxLDEuNCwxLjIxYy40NTQuNTIuOTI0LDEuMDU3LDEuMzY1LDEuMDU3cy45MTEtLjUzNywxLjM2Ni0xLjA1N2E0LjIyNSw0LjIyNSwwLDAsMSwxLjQtMS4yMSw0LjM2NSw0LjM2NSwwLDAsMSwxLjkwOC0uMTUyYy42NzIuMDQxLDEuMzY2LjA4NSwxLjY1My0uMnMuMjQ1LS45ODIuMi0xLjY1M2E0LjM4Nyw0LjM4NywwLDAsMSwuMTUyLTEuOTA5LDQuMjQxLDQuMjQxLDAsMCwxLDEuMjA5LTEuNGMuNTItLjQ1NCwxLjA1Ny0uOTI0LDEuMDU3LTEuMzY1cy0uNTM3LS45MTEtMS4wNTctMS4zNjVhNC4yMzQsNC4yMzQsMCwwLDEtMS4yMDktMS40LDQuMzgxLDQuMzgxLDAsMCwxLS4xNTItMS45MDhjLjA0MS0uNjcxLjA4NC0xLjM2NS0uMi0xLjY1M3MtLjk4Mi0uMjQ2LTEuNjUzLS4yYTQuMzg0LDQuMzg0LDAsMCwxLTEuOTA4LS4xNTIsNC4yMzQsNC4yMzQsMCwwLDEtMS40LTEuMjA5Yy0uNDU0LS41Mi0uOTI0LTEuMDU3LTEuMzY1LTEuMDU3cy0uOTExLjUzNy0xLjM2NSwxLjA1N2E0LjI0MSw0LjI0MSwwLDAsMS0xLjQsMS4yMDksNC40MTcsNC40MTcsMCwwLDEtMS45MDkuMTUyYy0uNjctLjA0MS0xLjM2NC0uMDg0LTEuNjUzLjJzLS4yNDQuOTgxLS4yLDEuNjUyQTQuMzcsNC4zNywwLDAsMSw1LjMxNCw5LjIzYTQuMjI2LDQuMjI2LDAsMCwxLTEuMjEsMS40Yy0uNTIuNDU0LTEuMDU3LjkyNS0xLjA1NywxLjM2NXMuNTM3LjkxMSwxLjA1NywxLjM2NmE0LjIzOCw0LjIzOCwwLDAsMSwxLjIxLDEuNCw0LjM3OCw0LjM3OCwwLDAsMSwuMTUyLDEuOTFjLS4wNDEuNjcyLS4wODQsMS4zNjYuMiwxLjY1M3MuOTguMjQ1LDEuNjUzLjJDNy41NzgsMTguNTE5LDcuODM4LDE4LjUsOC4wOTMsMTguNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNSwxMy41YTIuMDA2LDIuMDA2LDAsMCwxLTIsMnYxLjAxQS41LjUsMCwwLDEsMTIsMTdhLjQ5Mi40OTIsMCwwLDEtLjUtLjQ5VjE1LjVoLTEuMjVhLjUuNSwwLDAsMS0uNS0uNS41LjUsMCwwLDEsLjUtLjVIMTIuNWExLDEsMCwxLDAsMC0yaC0xYTIsMiwwLDAsMSwwLTRWNy40NTNBLjQ3My40NzMsMCwwLDEsMTIsN2EuNDguNDgsMCwwLDEsLjUuNDVWOC41aDEuMjVhLjUuNSwwLDAsMSwuNS41LjUwOC41MDgsMCwwLDEtLjUuNUgxMS41YTEsMSwwLDAsMCwwLDJoMUEyLDIsMCwwLDEsMTQuNSwxMy41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQmFnMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQmFnXzFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuMzcsMTcuNjVhMTYuNzc3LDE2Ljc3NywwLDAsMC0yLjAxLTUuNTQsMTcuMDM3LDE3LjAzNywwLDAsMC0zLjc0LTQuNTVsLS4xLS4wOGEuMTIxLjEyMSwwLDAsMS0uMDItLjE1bDEuNDktMi41OWExLjEyLDEuMTIsMCwwLDAsMC0xLjEyLDEuMDkyLDEuMDkyLDAsMCwwLS45Ny0uNTVIOC45OGExLjEsMS4xLDAsMCwwLS45Ny41NSwxLjEyLDEuMTIsMCwwLDAsMCwxLjEybDEuNSwyLjU5YS4xMjQuMTI0LDAsMCwxLS4wMy4xNWwtLjA5LjA4QTE3LjMyNywxNy4zMjcsMCwwLDAsMy42MywxNy42NWE0LjA1MSw0LjA1MSwwLDAsMC0uMDQuNDgsMi44LDIuOCwwLDAsMCwyLjgsMi44SDE3LjYyYTIuNzgyLDIuNzgyLDAsMCwwLDIuMTMtLjk5QTIuODM0LDIuODM0LDAsMCwwLDIwLjM3LDE3LjY1Wk04Ljg4LDQuMjRhLjEuMSwwLDAsMSwwLS4xMi4xMDYuMTA2LDAsMCwxLC4xLS4wNWg2LjA0YS4xNDMuMTQzLDAsMCwxLC4xMS4wNS4xNjMuMTYzLDAsMCwxLDAsLjEybC0xLjU5LDIuOEgxMC40NlptNS4wOSw0LjA4YTE2LjQzNiwxNi40MzYsMCwwLDEsNS40Miw5LjUsMS44MTcsMS44MTcsMCwwLDEtLjQsMS40NywxLjc4NiwxLjc4NiwwLDAsMS0xLjM3LjY0SDYuMzlhMS44MDUsMS44MDUsMCwwLDEtMS44LTEuOCwxLjYyOCwxLjYyOCwwLDAsMSwuMDMtLjMxLDE2LjI4NiwxNi4yODYsMCwwLDEsNS40Mi05LjVsLjMyLS4yOGgzLjI4WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJhbmRhZ2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJhbmRhZ2VcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy40MzUsNy41SDYuNTY1YTQuNSw0LjUsMCwwLDAsMCw5aDEwLjg3YTQuNSw0LjUsMCwwLDAsMC05Wm0tOS45Myw4aC0uOTRhMy41LDMuNSwwLDAsMSwwLTdoLjk0Wm04LDBoLTd2LTdoN1ptMS45MywwaC0uOTN2LTdoLjkzYTMuNSwzLjUsMCwwLDEsMCw3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEwLjI1MlwiLFwiY3lcIjpcIjEwLjUwMVwiLFwiclwiOlwiMC42MjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMC4yNTJcIixcImN5XCI6XCIxMy41MDFcIixcInJcIjpcIjAuNjI1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTMuNzUyXCIsXCJjeVwiOlwiMTAuNVwiLFwiclwiOlwiMC42MjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMy43NTJcIixcImN5XCI6XCIxMy41XCIsXCJyXCI6XCIwLjYyNVwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQmFuayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQmFua1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS41MDUsMTcuOTQzVjEwLjM2MmExLjQ5MSwxLjQ5MSwwLDAsMCwxLjM5LTEuMTIsMS40NjgsMS40NjgsMCwwLDAtLjctMS42OGwtNy40NS00LjNhMS41MjEsMS41MjEsMCwwLDAtMS40OSwwbC03LjQ1LDQuM2ExLjQ2OCwxLjQ2OCwwLDAsMC0uNywxLjY4LDEuNDg3LDEuNDg3LDAsMCwwLDEuNDUsMS4xMmguMTN2Ny41N2gtLjEyYTEuNSwxLjUsMCwwLDAsMCwzaDE0Ljg3YTEuNSwxLjUsMCwwLDAsLjA3LTIuOTg5Wk00LjU1NSw5LjM2MmEuNTA1LjUwNSwwLDAsMS0uMjUtLjk0bDcuNDUtNC4yODlhLjQ3NC40NzQsMCwwLDEsLjQ5LDBMMTkuNyw4LjQyMmEuNS41LDAsMCwxLS4yNS45NFptMTMuOTUsMXY3LjU3SDE0Ljl2LTcuNTdabS00LjYxLDB2Ny41N2gtMy42MXYtNy41N1ptLTQuNjEsMHY3LjU3aC0zLjZ2LTcuNTdabTEwLjE1LDkuNTdINC41NjVhLjUuNSwwLDAsMS0uNS0uNS41LjUsMCwwLDEsLjUtLjVoMTQuODdhLjUuNSwwLDAsMSwuNS41QS41LjUsMCwwLDEsMTkuNDM1LDE5LjkzMlpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lCYXJjb2RlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJCYXJjb2RlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC4wNjYsNC4wNjVIMy42NDhhMS43MzIsMS43MzIsMCwwLDAtLjk2My4xODlBMS4zNjgsMS4zNjgsMCwwLDAsMi4wNjYsNS40OHY0LjU4NWEuNS41LDAsMCwwLDEsMFY1Ljc4NWExLjc5NCwxLjc5NCwwLDAsMSwuMDE0LS41MThjLjA3Ny0uMjM2LjMxOS0uMi41MTQtLjJIOC4wNjZhLjUuNSwwLDAsMCwwLTFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIuMDYzLDEzLjkzN3Y0LjQxOGExLjczMywxLjczMywwLDAsMCwuMTg5Ljk2MywxLjM2OSwxLjM2OSwwLDAsMCwxLjIyNy42MTlIOC4wNjNhLjUuNSwwLDAsMCwwLTFIMy43ODNhMS44MzEsMS44MzEsMCwwLDEtLjUxOC0uMDE0Yy0uMjM2LS4wNzctLjItLjMxOS0uMi0uNTE0VjEzLjkzN2EuNS41LDAsMCwwLTEsMFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuOTM0LDE5LjkzNWg0LjQxOGExLjczMiwxLjczMiwwLDAsMCwuOTYzLS4xODksMS4zNjgsMS4zNjgsMCwwLDAsLjYxOS0xLjIyNlYxMy45MzVhLjUuNSwwLDAsMC0xLDB2NC4yOGExLjc5NCwxLjc5NCwwLDAsMS0uMDE0LjUxOGMtLjA3Ny4yMzYtLjMxOS4yLS41MTQuMkgxNS45MzRhLjUuNSwwLDAsMCwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjkzNywxMC4wNjNWNS42NDVhMS43MzMsMS43MzMsMCwwLDAtLjE4OS0uOTYzLDEuMzY5LDEuMzY5LDAsMCwwLTEuMjI3LS42MTlIMTUuOTM3YS41LjUsMCwwLDAsMCwxaDQuMjhhMS44MzEsMS44MzEsMCwwLDEsLjUxOC4wMTRjLjIzNi4wNzcuMi4zMTkuMi41MTR2NC40NzJhLjUuNSwwLDAsMCwxLDBaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInJlY3RcIixcImF0dHJcIjp7XCJ4XCI6XCIxMC45OTlcIixcInlcIjpcIjcuNjQzXCIsXCJ3aWR0aFwiOlwiMVwiLFwiaGVpZ2h0XCI6XCI4LjcwOVwiLFwicnhcIjpcIjAuNVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicmVjdFwiLFwiYXR0clwiOntcInhcIjpcIjE0LjI0OVwiLFwieVwiOlwiNy42NDNcIixcIndpZHRoXCI6XCIxXCIsXCJoZWlnaHRcIjpcIjguNzA5XCIsXCJyeFwiOlwiMC41XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJyZWN0XCIsXCJhdHRyXCI6e1wieFwiOlwiMTYuNDk5XCIsXCJ5XCI6XCI3LjY0M1wiLFwid2lkdGhcIjpcIjFcIixcImhlaWdodFwiOlwiOC43MDlcIixcInJ4XCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInJlY3RcIixcImF0dHJcIjp7XCJ4XCI6XCI2LjQ5OVwiLFwieVwiOlwiNy42NDNcIixcIndpZHRoXCI6XCIxXCIsXCJoZWlnaHRcIjpcIjguNzA5XCIsXCJyeFwiOlwiMC41XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJyZWN0XCIsXCJhdHRyXCI6e1wieFwiOlwiOC40OTlcIixcInlcIjpcIjcuNjQzXCIsXCJ3aWR0aFwiOlwiMS41XCIsXCJoZWlnaHRcIjpcIjguNzA5XCIsXCJyeFwiOlwiMC43NVwifSxcImNoaWxkXCI6W119XX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lCYXNlYmFsbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQmFzZWJhbGxfQmFsbFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS4wMiw0Ljk3NkE5LjkyNyw5LjkyNywwLDEsMCwxNS43NCwyMS4yLDkuOTA4LDkuOTA4LDAsMCwwLDIxLjkzLDEyLDkuODU2LDkuODU2LDAsMCwwLDE5LjAyLDQuOTc2Wm0tMTMuMzQuNzFhOC45LDguOSwwLDAsMSw2LjA0LTIuNjEsOC40NjEsOC40NjEsMCwwLDEtLjM0LDIuMjZsLS4zNC0uMTlhLjUuNSwwLDAsMC0uNS44NmwuNS4yOWE5LjIyNyw5LjIyNywwLDAsMS0xLjU3LDIuNDdsLS4zNS0uMzVhLjUuNSwwLDAsMC0uNywwLC41LjUsMCwwLDAsMCwuNzFsLjM0LjM0YTguODc1LDguODc1LDAsMCwxLTIuNDcsMS41OEw2LDEwLjUzNmEuNS41LDAsMCwwLS42OC0uMTkuNTA1LjUwNSwwLDAsMC0uMTguNjlsLjIuMzRhOC4yLDguMiwwLDAsMS0yLjI2LjM1QTguODI3LDguODI3LDAsMCwxLDUuNjgsNS42ODZaTTExLjc0LDE3YS41LjUsMCwxLDAtLjUuODdsLjQ5LjI5YTEwLjAwOCwxMC4wMDgsMCwwLDAtLjQ1LDIuNzQsOC45LDguOSwwLDAsMS04LjE4LTguMTcsOS4zNzgsOS4zNzgsMCwwLDAsMi43NS0uNDZsLjI5LjVhLjUuNSwwLDAsMCwuNDMuMjUuNDc1LjQ3NSwwLDAsMCwuMjUtLjA3LjQ5My40OTMsMCwwLDAsLjE4LS42OGwtLjIxLS4zNmE5LjQ2MSw5LjQ2MSwwLDAsMCwyLjY4LTEuNzNsLjM2LjM2YS41LjUsMCwwLDAsLjM1LjE1LjUwOC41MDgsMCwwLDAsLjM2LS4xNS41MTMuNTEzLDAsMCwwLDAtLjcxbC0uMzYtLjM2QTkuNjY1LDkuNjY1LDAsMCwwLDExLjksNi44bC4zNy4yMWEuNDc1LjQ3NSwwLDAsMCwuMjUuMDcuNTExLjUxMSwwLDAsMCwuNDQtLjI1LjQ5NC40OTQsMCwwLDAtLjE5LS42OGwtLjUxLS4yOWE5Ljc4OSw5Ljc4OSwwLDAsMCwuNDYtMi43Niw4LjkyNCw4LjkyNCwwLDAsMSw4LjE4LDguMTgsMTAuMDgsMTAuMDgsMCwwLDAtMi43NC40NmwtLjI4LS40OWEuNTA1LjUwNSwwLDAsMC0uNjktLjE4LjQ5MS40OTEsMCwwLDAtLjE4LjY4bC4yLjM1YTkuNjg0LDkuNjg0LDAsMCwwLTIuNjgsMS43M2wtLjM1LS4zNWEuNS41LDAsMCwwLS43MSwwLC41LjUsMCwwLDAsMCwuN2wuMzYuMzZhOS4yLDkuMiwwLDAsMC0xLjczLDIuNjdabTYuNTgsMS4zMmE4Ljg1MSw4Ljg1MSwwLDAsMS02LjA0LDIuNiw4LjM4OCw4LjM4OCwwLDAsMSwuMzQtMi4yNWwuMzUuMmEuNDUxLjQ1MSwwLDAsMCwuMjUuMDcuNS41LDAsMCwwLC40My0uMjUuNTA1LjUwNSwwLDAsMC0uMTgtLjY5bC0uNTEtLjI5YTguNyw4LjcsMCwwLDEsMS41Ny0yLjQ3bC4zNi4zNmEuNS41LDAsMCwwLC43LS43MWwtLjM2LS4zNmE5LjEyNCw5LjEyNCwwLDAsMSwyLjQ4LTEuNTdsLjMuNTJhLjUuNSwwLDAsMCwuNDMuMjUuNDUxLjQ1MSwwLDAsMCwuMjUtLjA3LjUwNS41MDUsMCwwLDAsLjE5LS42OGwtLjIxLS4zNmE4LjQ0OSw4LjQ0OSwwLDAsMSwyLjI1LS4zNCw4Ljk5Miw4Ljk5MiwwLDAsMS0uNjYsMy4xNEE5LjE3Miw5LjE3MiwwLDAsMSwxOC4zMiwxOC4zMTZaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQmFza2V0YmFsbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQmFza2V0YmFsbFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS4wMiw0Ljk3MWE5Ljk0MSw5Ljk0MSwwLDEsMCwwLDE0LjA1QTkuOTQxLDkuOTQxLDAsMCwwLDE5LjAyLDQuOTcxWm0tMTMuMzQuNzFhOC44OTQsOC44OTQsMCwwLDEsNi4wNS0yLjYsOC44MTIsOC44MTIsMCwwLDEtMi42MSw2LjA0LDguNzUsOC43NSwwLDAsMS02LjA0LDIuNjFBOC44NzUsOC44NzUsMCwwLDEsNS42OCw1LjY4MVpNMy4xLDEyLjczMWE5Ljc3Miw5Ljc3MiwwLDAsMCw2LjczLTIuOSw5LjgsOS44LDAsMCwwLDIuOS02LjczLDguOTA4LDguOTA4LDAsMCwxLDUuMjMsMi4yNEw1LjM0LDE3Ljk1MUE4Ljg4MSw4Ljg4MSwwLDAsMSwzLjEsMTIuNzMxWm04LjE4LDguMTdhOC44NzIsOC44NzIsMCwwLDEtNS4yMy0yLjI0TDE4LjY2LDYuMDQxYTguOTEsOC45MSwwLDAsMSwyLjI0LDUuMjQsOS44Niw5Ljg2LDAsMCwwLTkuNjIsOS42MlptNy4wNC0yLjU5YTguODU2LDguODU2LDAsMCwxLTYuMDQsMi42MSw4Ljg1MSw4Ljg1MSwwLDAsMSw4LjY0LTguNjRBOC44NDcsOC44NDcsMCwwLDEsMTguMzIsMTguMzExWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJhdHRlcnlDaGFyZ2luZyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQmF0dGVyeV9DaGFyZ2luZ1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjUwNSwxOC41SDQuMDY1YTIsMiwwLDAsMS0yLTJ2LTlhMiwyLDAsMCwxLDItMmgxMy40NGEyLDIsMCwwLDEsMiwydjFoLjkzYTEuNSwxLjUsMCwwLDEsMS41LDEuNXY0YTEuNSwxLjUsMCwwLDEtMS41LDEuNWgtLjkzdjFBMiwyLDAsMCwxLDE3LjUwNSwxOC41Wk00LjA2NSw2LjVhMSwxLDAsMCwwLTEsMXY5YTEsMSwwLDAsMCwxLDFoMTMuNDRhMSwxLDAsMCwwLDEtMVYxNS4yNWEuNzUyLjc1MiwwLDAsMSwuNzUtLjc1aDEuMThhLjUuNSwwLDAsMCwuNS0uNVYxMGEuNS41LDAsMCwwLS41LS41aC0xLjE4YS43NTIuNzUyLDAsMCwxLS43NS0uNzVWNy41YTEsMSwwLDAsMC0xLTFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzLjE3NCwxMS4xOTFIMTEuODkxYS4xMS4xMSwwLDAsMS0uMS0uMTVsLjY1NS0xLjY2OWEuMjUxLjI1MSwwLDAsMC0uMjMzLS4zNDJIOS4yNzRhLjI0OC4yNDgsMCwwLDAtLjIzMS4xNTdMOC4yOTIsMTEuMDRhLjExLjExLDAsMCwwLC4xLjE1MUg5LjgyOWEuMTEuMTEsMCwwLDEsLjEuMTQ0bC0uNzc2LDMuNTNhLjA4NS4wODUsMCwwLDAsLjEzOS4wODFsMy45NDctMy41NjFBLjEwOS4xMDksMCwwLDAsMTMuMTc0LDExLjE5MVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJhdHRlcnlFbXB0eSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQmF0dGVyeV9FbXB0eVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy41MDUsMTguNUg0LjA2NWEyLDIsMCwwLDEtMi0ydi05YTIsMiwwLDAsMSwyLTJoMTMuNDRhMiwyLDAsMCwxLDIsMnYxaC45M2ExLjUsMS41LDAsMCwxLDEuNSwxLjV2NGExLjUsMS41LDAsMCwxLTEuNSwxLjVoLS45M3YxQTIsMiwwLDAsMSwxNy41MDUsMTguNVpNNC4wNjUsNi41YTEsMSwwLDAsMC0xLDF2OWExLDEsMCwwLDAsMSwxaDEzLjQ0YTEsMSwwLDAsMCwxLTFWMTUuMjVhLjc1Mi43NTIsMCwwLDEsLjc1LS43NWgxLjE4YS41LjUsMCwwLDAsLjUtLjVWMTBhLjUuNSwwLDAsMC0uNS0uNWgtMS4xOGEuNzUyLjc1MiwwLDAsMS0uNzUtLjc1VjcuNWExLDEsMCwwLDAtMS0xWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJhdHRlcnlGdWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJCYXR0ZXJ5X0Z1bGxcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy41MDUsMTguNUg0LjA2NWEyLDIsMCwwLDEtMi0ydi05YTIsMiwwLDAsMSwyLTJoMTMuNDRhMiwyLDAsMCwxLDIsMnYxaC45M2ExLjUsMS41LDAsMCwxLDEuNSwxLjV2NGExLjUsMS41LDAsMCwxLTEuNSwxLjVoLS45M3YxQTIsMiwwLDAsMSwxNy41MDUsMTguNVpNNC4wNjUsNi41YTEsMSwwLDAsMC0xLDF2OWExLDEsMCwwLDAsMSwxaDEzLjQ0YTEsMSwwLDAsMCwxLTFWMTUuMjVhLjc1MS43NTEsMCwwLDEsLjc1LS43NWgxLjE4YS41LjUsMCwwLDAsLjUtLjVWMTBhLjUuNSwwLDAsMC0uNS0uNWgtMS4xOGEuNzUxLjc1MSwwLDAsMS0uNzUtLjc1VjcuNWExLDEsMCwwLDAtMS0xWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicmVjdFwiLFwiYXR0clwiOntcInhcIjpcIjQuMDYzXCIsXCJ5XCI6XCI3LjQ5OVwiLFwid2lkdGhcIjpcIjEzLjQzN1wiLFwiaGVpZ2h0XCI6XCI4Ljk5OFwiLFwicnhcIjpcIjFcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJlYWtlcjEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJlYWtlcl8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjQ0NywxOC42NDVsLS41MS0xLjUyYTE3LjksMTcuOSwwLDAsMC00LjAyLTYuNjYsMS40OTMsMS40OTMsMCwwLDEtLjQyLTEuMDRWMy4wNjVIMTVhLjUuNSwwLDAsMCwwLTFIOWEuNS41LDAsMCwwLDAsMWguNXY2LjM2YTEuNDg0LDEuNDg0LDAsMCwxLS40MSwxLjA0LDE3LjksMTcuOSwwLDAsMC00LjAyLDYuNjZsLS41MiwxLjUyYTIuNSwyLjUsMCwwLDAsMi4zNywzLjI5aDEwLjE2YTIuNSwyLjUsMCwwLDAsMi4zNy0zLjI5Wm0tOS42NC03LjQ5YTIuNDc3LDIuNDc3LDAsMCwwLC42OS0xLjczVjMuMDY1aDN2Ni4zNmEyLjQ4NiwyLjQ4NiwwLDAsMCwuNywxLjczLDE2LjkwNywxNi45MDcsMCwwLDEsMy4wMSw0LjM4SDYuNzg3QTE2Ljk0MywxNi45NDMsMCwwLDEsOS44MDcsMTEuMTU1Wm04LjQ5LDkuMTZhMS41MDcsMS41MDcsMCwwLDEtMS4yMi42Mkg2LjkxN2ExLjUsMS41LDAsMCwxLTEuNDItMS45OGwuNTEtMS41MnEuMTUtLjQ1LjMzLS45aDExLjMycS4xOC40NS4zMy45bC41MSwxLjUyQTEuNSwxLjUsMCwwLDEsMTguMywyMC4zMTVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQmVlck11Z0Z1bGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJlZXJfTXVnX0Z1bGxcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC4zNTYsOS42M2gtLjk3VjcuOTlhMi45MzgsMi45MzgsMCwwLDAsLjUtMS42NSwxLjc3LDEuNzcsMCwwLDAtLjAxLS4yMywyLjkwNSwyLjkwNSwwLDAsMC0xLjY0LTIuMzgsMi45NTYsMi45NTYsMCwwLDAtMi40LS4wNywzLjI3OCwzLjI3OCwwLDAsMC01LjYyLDAsMi45LDIuOSwwLDAsMC0xLjY4LS4xNywyLjg2NiwyLjg2NiwwLDAsMC0yLjE2LDEuNzUsMi45NDgsMi45NDgsMCwwLDAsLjMsMi43N1YxOS40M2EyLjUsMi41LDAsMCwwLDIuNSwyLjVoNy43MWEyLjUsMi41LDAsMCwwLDIuNS0yLjV2LS45OWwuOTEtLjM2YTIuNDMzLDIuNDMzLDAsMCwwLDEuNTQtMi4yN1YxMS4xQTEuNDgxLDEuNDgxLDAsMCwwLDE4LjM1Niw5LjYzWm0tMS45Nyw5LjhhMS41LDEuNSwwLDAsMS0xLjUsMS41SDcuMTc2YTEuNSwxLjUsMCwwLDEtMS41LTEuNVYxMS4zNGEyLjg1OCwyLjg1OCwwLDAsMCwxLjkzLjc0Yy4xMywwLC4yNS0uMDEuMzctLjAyVjE4LjRhLjUuNSwwLDAsMCwuNS41LjUuNSwwLDAsMCwuNS0uNVYxMS44MmEuMTcuMTcsMCwwLDAtLjAxLS4wNywyLjkzOSwyLjkzOSwwLDAsMCwxLjU3LTIuNDZoNC40MmEyLjg2LDIuODYsMCwwLDAsMS40My0uMzhabS0uMDEtMTEuNzdhMS45NDksMS45NDksMCwwLDEtMS40Mi42M2gtNC42MWEuOC44LDAsMCwwLS43OS42MSwxLjIzMSwxLjIzMSwwLDAsMC0uMDIuMiwxLjk3NSwxLjk3NSwwLDAsMS0xLjA1LDEuNzgsMS45MzQsMS45MzQsMCwwLDEtMi44LTEuNzIsMS44MDgsMS44MDgsMCwwLDEsLjE3LS43Ny42LjYsMCwwLDAtLjEzLS42OCwxLjkzOSwxLjkzOSwwLDAsMS0uNDEtMi4xMSwxLjg2OCwxLjg2OCwwLDAsMSwxLjQtMS4xMywyLjUzMSwyLjUzMSwwLDAsMSwuMzgtLjAzLDEuOTA5LDEuOTA5LDAsMCwxLC44Ni4yLjc2Ni43NjYsMCwwLDAsLjU5LjA2QS44LjgsMCwwLDAsOSw0LjMyYTIuMjczLDIuMjczLDAsMCwxLDQuMDYsMCwuNzUxLjc1MSwwLDAsMCwuNDQuMzguOC44LDAsMCwwLC41OS0uMDUsMS45MTcsMS45MTcsMCwwLDEsMi43OSwxLjU0QTEuODg2LDEuODg2LDAsMCwxLDE2LjM3Niw3LjY2Wm0yLjQ2LDguMTVhMS40MjgsMS40MjgsMCwwLDEtLjkyLDEuMzRsLS41Mi4yMlYxMC42M2guOTZhLjQ3OC40NzgsMCwwLDEsLjQ4LjQ3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMy41NzcsMTguOWEuNS41LDAsMCwxLS41LS41VjExLjgyYS41LjUsMCwwLDEsMSwwVjE4LjRBLjUuNSwwLDAsMSwxMy41NzcsMTguOVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJlbGxPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJlbGxfT2ZmXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOS42MjQsNS4yYy0uNTcxLjMtLjA3OSwxLjEyNC41Ljg2NC41MDktLjIyNywxLjA2OC0uMjg3LDEuMTE1LS45NS4wMjgtLjQxLjAxNC0uODEuNDc2LS45OTNhLjc3Ni43NzYsMCwwLDEsMS4wMzUuNzFjLjA0OC40NjEuMDM1LjgyMS41NDgsMS4wMjRhNC44MTEsNC44MTEsMCwwLDEsMi44MTIsMi40MzIsNS42Myw1LjYzLDAsMCwxLC40MTQsMi40Njd2Mi4wMmEuNS41LDAsMCwwLDEsMGMwLTEuNjQ2LjE4NS0zLjM5NC0uNTIxLTQuOTI5YTUuNTQyLDUuNTQyLDAsMCwwLTMuMDE5LTIuODA4Yy0uMDM0LS4wMTMtLjE1NS0uMDY5LS4yMjctLjA5MiwwLS4wMjEsMC0uMDQ0LDAtLjA1OWEyLjAwOSwyLjAwOSwwLDAsMC0uMjU3LS45NDUsMS43MzksMS43MzksMCwwLDAtMy4xLjE3MiwxLjk5MiwxLjk5MiwwLDAsMC0uMTUzLjc5MmMwLC4wMTIsMCwuMDMzLDAsLjA1MkMxMC4yNCw0Ljk1OSw5LjgwOCw1LjEwNyw5LjYyNCw1LjJaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQuNTcsMy44NmMtLjQ2LS40Ni0xLjE3LjI1LS43MS43QzQuOTIsNS42Miw1Ljk4LDYuNjksNy4wNCw3Ljc1YTUuNTM1LDUuNTM1LDAsMCwwLS41NywyLjQ0djQuNTRhMi4xMjIsMi4xMjIsMCwwLDAtMS44OCwyLjExdi41M2EyLjEyMSwyLjEyMSwwLDAsMCwyLjEyLDIuMTJIMTAuM2ExLjcyNSwxLjcyNSwwLDAsMCwzLjQsMGgzLjU5YTIuMTIsMi4xMiwwLDAsMCwxLjE1LS4zNGwuOTkuOTlhLjUuNSwwLDAsMCwuNzEtLjcxWk0xNy43LDE4LjQxYTEuMTUsMS4xNSwwLDAsMS0uNDEuMDhINi43MWExLjExOCwxLjExOCwwLDAsMS0xLjEyLTEuMTJ2LS41M2ExLjExOCwxLjExOCwwLDAsMSwxLjEyLTEuMTIuNzYyLjc2MiwwLDAsMCwuNzYtLjc3VjEwLjE5QTQuMzc1LDQuMzc1LDAsMCwxLDcuOCw4LjUxWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQmVsbE9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJCZWxsX09uXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4Ljc5LDE1LjM0YTIuMDg3LDIuMDg3LDAsMCwwLTEuMjYtLjYxVjEwLjE5YTUuNSw1LjUsMCwwLDAtMS42Mi0zLjkxLDUuODI2LDUuODI2LDAsMCwwLTIuMTUtMS4zM1Y0Ljg5YTEuOCwxLjgsMCwwLDAtMS42MS0xLjgxLDEuNzQ5LDEuNzQ5LDAsMCwwLTEuOTEsMS43NXYuMTJhNS41NDcsNS41NDcsMCwwLDAtMy43Nyw1LjI0djQuNTRhMi4xMjIsMi4xMjIsMCwwLDAtMS44OCwyLjExdi41M2EyLjEyMSwyLjEyMSwwLDAsMCwyLjEyLDIuMTJIMTAuM2ExLjcyNSwxLjcyNSwwLDAsMCwzLjQsMGgzLjU5YTIuMTIxLDIuMTIxLDAsMCwwLDIuMTItMi4xMnYtLjUzQTIuMSwyLjEsMCwwLDAsMTguNzksMTUuMzRabS0uMzgsMi4wM2ExLjExOCwxLjExOCwwLDAsMS0xLjEyLDEuMTJINi43MWExLjExOCwxLjExOCwwLDAsMS0xLjEyLTEuMTJ2LS41M2ExLjExOCwxLjExOCwwLDAsMSwxLjEyLTEuMTIuNzYyLjc2MiwwLDAsMCwuNzYtLjc3VjEwLjE5YTQuNTU1LDQuNTU1LDAsMCwxLDMuMjQtNC4zNC43MjkuNzI5LDAsMCwwLC41My0uNzFWNC44M2EuNzM1LjczNSwwLDAsMSwuMjUtLjU2Ljc0NC43NDQsMCwwLDEsLjUxLS4yaC4wN2EuODA3LjgwNywwLDAsMSwuNjkuODJ2LjI1YS43MjkuNzI5LDAsMCwwLC41My43MUE0LjY2OCw0LjY2OCwwLDAsMSwxNS4yLDYuOTlhNC40NjgsNC40NjgsMCwwLDEsMS4zMywzLjJ2NC43NmEuOC44LDAsMCwwLC4yMi41NS43NzMuNzczLDAsMCwwLC41NC4yMiwxLjEyNywxLjEyNywwLDAsMSwxLjEyLDEuMTJaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQmV6aWVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJCZXppZXJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM1LDguMDA1YTEuNSwxLjUsMCwxLDAtMS40MS0ySDEzLjV2LS4yNWEuNzQ5Ljc0OSwwLDAsMC0uNzUtLjc1aC0xLjVhLjc1NS43NTUsMCwwLDAtLjc1Ljc1di4yNUg0Ljk3NWExLjUsMS41LDAsMCwwLTIuOTEuNSwxLjUsMS41LDAsMCwwLDIuOTEuNWgzLjc5Yy0yLjUsMS42MS00LjIzLDUtNC40Nyw4Ljk5aC0uMjhhLjc0OS43NDksMCwwLDAtLjc1Ljc1djEuNWEuNzQ5Ljc0OSwwLDAsMCwuNzUuNzVoMS41YS43NTUuNzU1LDAsMCwwLC43NS0uNzV2LTEuNWEuNzU1Ljc1NSwwLDAsMC0uNzUtLjc1aC0uMjFjLjI3LTQuMjIsMi4zOC03Ljc4LDUuMTktOC43M2EuNzQ3Ljc0NywwLDAsMCwuNzUuNzRoMS41YS43NDEuNzQxLDAsMCwwLC43NS0uNzRjMi44MS45NSw0LjkzLDQuNTEsNS4yMSw4LjczaC0uMjJhLjc0OS43NDksMCwwLDAtLjc1Ljc1djEuNWEuNzQ5Ljc0OSwwLDAsMCwuNzUuNzVoMS41YS43NTUuNzU1LDAsMCwwLC43NS0uNzV2LTEuNWEuNzU1Ljc1NSwwLDAsMC0uNzUtLjc1SDE5LjdjLS4yNC0zLjk5LTEuOTctNy4zOC00LjQ2LTguOTloMy43OEExLjUsMS41LDAsMCwwLDIwLjQzNSw4LjAwNVptMC0yYS41MDguNTA4LDAsMCwxLC41LjUuNS41LDAsMCwxLS41LjUuNS41LDAsMCwxLS41LS41QS41LjUsMCwwLDEsMjAuNDM1LDYuMDA1Wm0tMTYuODcsMWEuNS41LDAsMCwxLS41LS41LjUuNSwwLDAsMSwuNS0uNS41MDguNTA4LDAsMCwxLC41LjVBLjUuNSwwLDAsMSwzLjU2NSw3LjAwNVpNNS4yNjUsMThoLTFWMTdoMVpNMTIuNSw3LjAwNWgtMXYtMWgxWk0xOC43MzUsMTdoMXYxaC0xWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJpdGNvaW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJpdGNvaW5cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45MzRBOS45MzQsOS45MzQsMCwxLDEsMjEuOTM0LDEyLDkuOTQ1LDkuOTQ1LDAsMCwxLDEyLDIxLjkzNFpNMTIsMy4wNjZBOC45MzQsOC45MzQsMCwxLDAsMjAuOTM0LDEyLDguOTQ0LDguOTQ0LDAsMCwwLDEyLDMuMDY2WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC4yOCwxMS43OEExLjk5NCwxLjk5NCwwLDAsMCwxMi43NSw4LjVIMTIuNVY3LjQ3QS40ODkuNDg5LDAsMCwwLDEyLDdhLjQ4My40ODMsMCwwLDAtLjUuNDdWOC41SDEwLjI1YTEsMSwwLDAsMC0xLDF2NWExLDEsMCwwLDAsMSwxSDExLjV2MS4wM0EuNDgzLjQ4MywwLDAsMCwxMiwxN2EuNDg5LjQ4OSwwLDAsMCwuNS0uNDdWMTUuNWguNzVhMi4wMDYsMi4wMDYsMCwwLDAsMi0yQTIuMDMzLDIuMDMzLDAsMCwwLDE0LjI4LDExLjc4Wk0xMC4yNSw5LjVoMi41YTEsMSwwLDAsMSwwLDJoLTIuNVptMyw1aC0zdi0yaDNhMSwxLDAsMCwxLDAsMlpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJsdWV0b290aCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQmx1ZXRvb3RoXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjY0OSwxNS45MzgsMTEuODI5LDEybDYuODItMy45NGEuOTg0Ljk4NCwwLDAsMCwuNS0uODcuOTY4Ljk2OCwwLDAsMC0uNS0uODYxTDEyLjAyOSwyLjVhLjk4OS45ODksMCwwLDAtMSwwLDEsMSwwLDAsMC0uNS44N3Y3Ljc2OXEtMi4xLTEuMjMtNC4yMi0yLjQ0Yy0uMjQtLjEzOS0uNDctLjI3OS0uNzEtLjQwOWEuNS41LDAsMCwwLS41MS44NkwxMC4wMzksMTJjLTEuNDEuODEtMi44MywxLjYyLTQuMjMsMi40NC0uMjQuMTI5LS40OC4yNy0uNzIuNDFhLjUuNSwwLDAsMCwuNTEuODZjMS42NS0uOTUxLDMuMjgtMS44OTEsNC45My0yLjg1djcuNzY5YS45OTMuOTkzLDAsMCwwLC41Ljg3MS45NjkuOTY5LDAsMCwwLDEsMGw2LjYyLTMuODJhMS4wMDcsMS4wMDcsMCwwLDAsMC0xLjc0Wm0tNy4xMi0xMi41Nyw2LjYyLDMuODItNi42MiwzLjgzWm0wLDE3LjI1OVYxMi45ODhsNi42MiwzLjgyWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJvb2ttYXJrQ2hlY2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJvb2ttYXJrX0NoZWNrXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNiwyMS45MzhhMS40ODIsMS40ODIsMCwwLDEtMS4wMTEtLjRsLTQuMjUxLTMuOWEuNS41LDAsMCwwLS42NzgsMEw3LjQxLDIxLjUzOGExLjUsMS41LDAsMCwxLTIuNTE3LTEuMVY0LjU2M2EyLjUsMi41LDAsMCwxLDIuNS0yLjVoOS4yMTRhMi41LDIuNSwwLDAsMSwyLjUsMi41VjIwLjQzNWExLjQ4MywxLjQ4MywwLDAsMS0uOSwxLjM3NUExLjUyNiwxLjUyNiwwLDAsMSwxNy42LDIxLjkzOFpNMTIsMTYuNWExLjUsMS41LDAsMCwxLDEuMDE4LjM5NUwxNy4yNjksMjAuOGEuNS41LDAsMCwwLC44MzgtLjM2OFY0LjU2M2ExLjUsMS41LDAsMCwwLTEuNS0xLjVINy4zOTNhMS41LDEuNSwwLDAsMC0xLjUsMS41VjIwLjQzNWEuNS41LDAsMCwwLC44MzkuMzY4TDEwLjk4MywxNi45QTEuNSwxLjUsMCwwLDEsMTIsMTYuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuODUsOS4wOGMtLjExLjEyLS4yMy4yMy0uMzUuMzUtLjgzLjgzLTEuNjUsMS42NS0yLjQ3LDIuNDhhLjUxMy41MTMsMCwwLDEtLjcxLDBjLS40Ny0uNDgtLjk0LS45NS0xLjQyLTEuNDJhLjUuNSwwLDAsMSwuNzEtLjcxYy4zNS4zNi43LjcxLDEuMDYsMS4wNi44My0uODIsMS42NS0xLjY1LDIuNDgtMi40N0MxNC42LDcuOTEsMTUuMzEsOC42MiwxNC44NSw5LjA4WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQm9va21hcmtNaW51cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQm9va21hcmtfTWludXNcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy42LDIxLjkzOGExLjQ4MiwxLjQ4MiwwLDAsMS0xLjAxMS0uNGwtNC4yNTEtMy45YS41LjUsMCwwLDAtLjY3OCwwTDcuNDEsMjEuNTM4YTEuNSwxLjUsMCwwLDEtMi41MTctMS4xVjQuNTYzYTIuNSwyLjUsMCwwLDEsMi41LTIuNWg5LjIxNGEyLjUsMi41LDAsMCwxLDIuNSwyLjVWMjAuNDM1YTEuNDgzLDEuNDgzLDAsMCwxLS45LDEuMzc1QTEuNTI2LDEuNTI2LDAsMCwxLDE3LjYsMjEuOTM4Wk0xMiwxNi41YTEuNSwxLjUsMCwwLDEsMS4wMTguMzk1TDE3LjI2OSwyMC44YS41LjUsMCwwLDAsLjgzOC0uMzY4VjQuNTYzYTEuNSwxLjUsMCwwLDAtMS41LTEuNUg3LjM5M2ExLjUsMS41LDAsMCwwLTEuNSwxLjVWMjAuNDM1YS41LjUsMCwwLDAsLjgzOS4zNjhMMTAuOTgzLDE2LjlBMS41LDEuNSwwLDAsMSwxMiwxNi41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCwxMC4yNzdhLjUuNSwwLDAsMSwwLTFoNGEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJvb2ttYXJrUGx1cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQm9va21hcmtfUGx1c1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjYsMjEuOTM4YTEuNDgyLDEuNDgyLDAsMCwxLTEuMDExLS40bC00LjI1MS0zLjlhLjUuNSwwLDAsMC0uNjc4LDBMNy40MSwyMS41MzhhMS41LDEuNSwwLDAsMS0yLjUxNy0xLjFWNC41NjNhMi41LDIuNSwwLDAsMSwyLjUtMi41aDkuMjE0YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYyMC40MzVhMS40ODMsMS40ODMsMCwwLDEtLjksMS4zNzVBMS41MjYsMS41MjYsMCwwLDEsMTcuNiwyMS45MzhaTTEyLDE2LjVhMS41LDEuNSwwLDAsMSwxLjAxOC4zOTVMMTcuMjY5LDIwLjhhLjUuNSwwLDAsMCwuODM4LS4zNjhWNC41NjNhMS41LDEuNSwwLDAsMC0xLjUtMS41SDcuMzkzYTEuNSwxLjUsMCwwLDAtMS41LDEuNVYyMC40MzVhLjUuNSwwLDAsMCwuODM5LjM2OEwxMC45ODMsMTYuOUExLjUsMS41LDAsMCwxLDEyLDE2LjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LDEwLjI4SDEyLjV2MS41YS41LjUsMCwwLDEtMSwwdi0xLjVIMTBhLjUuNSwwLDAsMSwwLTFoMS41VjcuNzhhLjUuNSwwLDAsMSwxLDB2MS41SDE0QS41LjUsMCwwLDEsMTQsMTAuMjhaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lCb29rbWFya1JlbW92ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQm9va21hcmtfUmVtb3ZlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNiwyMS45MzhhMS40ODIsMS40ODIsMCwwLDEtMS4wMTEtLjRsLTQuMjUxLTMuOWEuNS41LDAsMCwwLS42NzgsMEw3LjQxLDIxLjUzOGExLjUsMS41LDAsMCwxLTIuNTE3LTEuMVY0LjU2M2EyLjUsMi41LDAsMCwxLDIuNS0yLjVoOS4yMTRhMi41LDIuNSwwLDAsMSwyLjUsMi41VjIwLjQzNWExLjQ4MywxLjQ4MywwLDAsMS0uOSwxLjM3NUExLjUyNiwxLjUyNiwwLDAsMSwxNy42LDIxLjkzOFpNMTIsMTYuNWExLjUsMS41LDAsMCwxLDEuMDE4LjM5NUwxNy4yNjksMjAuOGEuNS41LDAsMCwwLC44MzgtLjM2OFY0LjU2M2ExLjUsMS41LDAsMCwwLTEuNS0xLjVINy4zOTNhMS41LDEuNSwwLDAsMC0xLjUsMS41VjIwLjQzNWEuNS41LDAsMCwwLC44MzkuMzY4TDEwLjk4MywxNi45QTEuNSwxLjUsMCwwLDEsMTIsMTYuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAuMjMsMTAuODRhLjUuNSwwLDAsMCwuNzEuNzFMMTIsMTAuNDkxLDEzLjA2LDExLjU1YS41MjMuNTIzLDAsMCwwLC43MSwwLC41MTMuNTEzLDAsMCwwLDAtLjcxTDEyLjcwOSw5Ljc3OSwxMy43Nyw4LjcyYS41LjUsMCwwLDAtLjcxLS43MWMtLjM1LjM1LS43LjcxLTEuMDYsMS4wNkwxMC45NCw4LjAxYS41LjUsMCwwLDAtLjcxLDAsLjUyNC41MjQsMCwwLDAsMCwuNzFjLjM1LjM1LjcxLjcsMS4wNiwxLjA2WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQm9va21hcmsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJvb2ttYXJrXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjYsMjEuOTQ1YTEuNDgzLDEuNDgzLDAsMCwxLTEuMDEtLjRsLTQuMjUxLTMuOWEuNS41LDAsMCwwLS42OCwwTDcuNDA5LDIxLjU0NWExLjUsMS41LDAsMCwxLTIuNTE2LTEuMVY0LjU3YTIuNSwyLjUsMCwwLDEsMi41LTIuNWg5LjIxNGEyLjUsMi41LDAsMCwxLDIuNSwyLjVWMjAuNDQyYTEuNDgxLDEuNDgxLDAsMCwxLS45LDEuMzc0QTEuNTA3LDEuNTA3LDAsMCwxLDE3LjYsMjEuOTQ1Wk0xMiwxNi41MWExLjUsMS41LDAsMCwxLDEuMDE4LjM5NWw0LjI1MSwzLjlhLjUuNSwwLDAsMCwuODM5LS4zNjhWNC41N2ExLjUsMS41LDAsMCwwLTEuNS0xLjVINy4zOTNhMS41LDEuNSwwLDAsMC0xLjUsMS41VjIwLjQ0MmEuNS41LDAsMCwwLC44MzkuMzY4TDEwLjk4MywxNi45QTEuNSwxLjUsMCwwLDEsMTIsMTYuNTFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQm93bE5vb2RsZXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJvd2xfTm9vZGxlc1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS41LDEwLjcwNWEuOTQ4Ljk0OCwwLDAsMC0uOTItLjY3aC01LjA3VjguMzU1bDQuNzUuMTdoLjAyYS43MzQuNzM0LDAsMCwwLC43My0uNzMuNzE4LjcxOCwwLDAsMC0uNzUtLjcybC00Ljc1LjE3VjUuNDA1bDQuNzgtLjY3YS43MjMuNzIzLDAsMCwwLC42Mi0uNzIuNDg3LjQ4NywwLDAsMC0uMDEtLjEyLjcxNi43MTYsMCwwLDAtLjg3LS41OGwtNC42Ljk4YTEuNSwxLjUsMCwwLDAtMi45Mi40N3YuMTVsLTEuMTQuMjRhMS40OTQsMS40OTQsMCwwLDAtMi44Ni42MXYuMDFsLTEuMi4yNWEuMjY3LjI2NywwLDAsMC0uMi4yNnYuMDRhLjI1Ny4yNTcsMCwwLDAsLjI5LjIxbDEuMTEtLjE1VjcuNWwtMS4yNS4wNGEuMjYzLjI2MywwLDAsMC0uMjUuMjYuMjU2LjI1NiwwLDAsMCwuMjUuMjZsMS4yNS4wNHYxLjk0SDUuNDI1YS45NjMuOTYzLDAsMCwwLS45Mi42OCwxMC4xMTksMTAuMTE5LDAsMCwwLDEuMTksOC41M2wuNjEuOTJhMS4yMzMsMS4yMzMsMCwwLDAsMS4wNS41N2g5LjNhMS4yMjgsMS4yMjgsMCwwLDAsMS4wNC0uNTdsLjYxLS45MkExMC4xMzYsMTAuMTM2LDAsMCwwLDE5LjUsMTAuNzA1Wm0tNy45OS01Ljk0YS41LjUsMCwwLDEsLjUtLjUuNS41LDAsMCwxLC41LjV2NS4yNGgtMVptLTIsMS4yLDEtLjE0djEuNTNsLTEsLjAzWm0wLDIuMjUsMSwuMDN2MS43OWgtMVptLTItMi40NWEuNS41LDAsMCwxLC41LS41LjUuNSwwLDAsMSwuNS41djQuMjRoLTFabTkuOTYsMTIuOTMtLjYuOTNhLjI2MS4yNjEsMCwwLDEtLjIxLjExaC05LjNhLjIzNi4yMzYsMCwwLDEtLjIxLS4xMWwtLjYxLS45M2E5LjIyOSw5LjIyOSwwLDAsMS0xLjExLTcuNjZsMTMuMTItLjAzQTkuMTIyLDkuMTIyLDAsMCwxLDE3LjQ2NSwxOC43WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJveExpc3QgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJveF9MaXN0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNi41NjIsOC4wNjJoLTJhMS41LDEuNSwwLDAsMS0xLjUtMS41di0yYTEuNSwxLjUsMCwwLDEsMS41LTEuNWgyYTEuNSwxLjUsMCwwLDEsMS41LDEuNXYyQTEuNSwxLjUsMCwwLDEsNi41NjIsOC4wNjJabS0yLTRhLjUuNSwwLDAsMC0uNS41djJhLjUuNSwwLDAsMCwuNS41aDJhLjUuNSwwLDAsMCwuNS0uNXYtMmEuNS41LDAsMCwwLS41LS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02LjU2MiwyMC45MzhoLTJhMS41LDEuNSwwLDAsMS0xLjUtMS41di0yYTEuNSwxLjUsMCwwLDEsMS41LTEuNWgyYTEuNSwxLjUsMCwwLDEsMS41LDEuNXYyQTEuNSwxLjUsMCwwLDEsNi41NjIsMjAuOTM4Wm0tMi00YS41LjUsMCwwLDAtLjUuNXYyYS41LjUsMCwwLDAsLjUuNWgyYS41LjUsMCwwLDAsLjUtLjV2LTJhLjUuNSwwLDAsMC0uNS0uNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNi41NjIsMTQuNWgtMmExLjUsMS41LDAsMCwxLTEuNS0xLjVWMTFhMS41LDEuNSwwLDAsMSwxLjUtMS41aDJhMS41LDEuNSwwLDAsMSwxLjUsMS41djJBMS41LDEuNSwwLDAsMSw2LjU2MiwxNC41Wm0tMi00YS41LjUsMCwwLDAtLjUuNXYyYS41LjUsMCwwLDAsLjUuNWgyYS41LjUsMCwwLDAsLjUtLjVWMTFhLjUuNSwwLDAsMC0uNS0uNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM4LDYuMDYyaC05YS41LjUsMCwwLDEsMC0xaDlhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzOCwxMi41aC05YS41LjUsMCwwLDEsMC0xaDlhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzOCwxOC45MzVoLTlhLjUuNSwwLDEsMSwwLTFoOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJveGVzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJCb3hlc1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS40MzUsMTEuNWgtMi43MlY0LjU2YTEuNSwxLjUsMCwwLDAtMS41LTEuNUg4Ljc4NWExLjUsMS41LDAsMCwwLTEuNSwxLjVWMTEuNUg0LjU2NWExLjUsMS41LDAsMCwwLTEuNSwxLjV2Ni40NGExLjUsMS41LDAsMCwwLDEuNSwxLjVIMTFhMS40NjgsMS40NjgsMCwwLDAsMS0uMzksMS40ODcsMS40ODcsMCwwLDAsMSwuMzloNi40NGExLjUsMS41LDAsMCwwLDEuNS0xLjVWMTNBMS41LDEuNSwwLDAsMCwxOS40MzUsMTEuNVpNMTEuNSwxOS40NGEuNS41LDAsMCwxLS41LjVINC41NjVhLjUuNSwwLDAsMS0uNS0uNVYxM2EuNS41LDAsMCwxLC41LS41aDEuOTd2MmEuNS41LDAsMCwwLC41LjVoMS41YS41MDguNTA4LDAsMCwwLC41LS41di0ySDExLjVaTTguMjg1LDExLjVWNC41NmEuNS41LDAsMCwxLC41LS41aDEuOTZ2MmEuNS41LDAsMCwwLC41LjVoMS41YS41LjUsMCwwLDAsLjUtLjV2LTJoMS45N2EuNS41LDAsMCwxLC41LjVWMTEuNVptMTEuNjUsNy45NGEuNTA4LjUwOCwwLDAsMS0uNS41SDEzYS41MDguNTA4LDAsMCwxLS41LS41VjEyLjVoMi40N3YyYS41LjUsMCwwLDAsLjUuNWgxLjVhLjUuNSwwLDAsMCwuNS0uNXYtMmgxLjk3YS41LjUsMCwwLDEsLjUuNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lCcmlnaHRuZXNzRG93biAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQnJpZ2h0bmVzc19Eb3duXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTcuNUE1LjUsNS41LDAsMSwxLDE3LjUsMTIsNS41MDYsNS41MDYsMCwwLDEsMTIsMTcuNVptMC0xMEE0LjUsNC41LDAsMSwwLDE2LjUsMTIsNC41MDUsNC41MDUsMCwwLDAsMTIsNy41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMi44MTNcIixcInJcIjpcIjAuNzVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMlwiLFwiY3lcIjpcIjIxLjE4N1wiLFwiclwiOlwiMC43NVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjIxLjE4N1wiLFwiY3lcIjpcIjEyXCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMi44MTNcIixcImN5XCI6XCIxMlwiLFwiclwiOlwiMC43NVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE4LjQ5NlwiLFwiY3lcIjpcIjUuNTA0XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiNS41MDRcIixcImN5XCI6XCIxOC40OTZcIixcInJcIjpcIjAuNzVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxOC40OTZcIixcImN5XCI6XCIxOC40OTZcIixcInJcIjpcIjAuNzVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI1LjUwNFwiLFwiY3lcIjpcIjUuNTA0XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lCcmlnaHRuZXNzVXAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkJyaWdodG5lc3NfVXBcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwxNy41QTUuNSw1LjUsMCwxLDEsMTcuNSwxMiw1LjUwNiw1LjUwNiwwLDAsMSwxMiwxNy41Wm0wLTEwQTQuNSw0LjUsMCwxLDAsMTYuNSwxMiw0LjUwNSw0LjUwNSwwLDAsMCwxMiw3LjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTJcIixcImN5XCI6XCIzLjA2M1wiLFwiclwiOlwiMVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMjAuOTM3XCIsXCJyXCI6XCIxXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMjAuOTM3XCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjFcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIzLjA2M1wiLFwiY3lcIjpcIjEyXCIsXCJyXCI6XCIxXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTguMzE5XCIsXCJjeVwiOlwiNS42ODFcIixcInJcIjpcIjFcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI1LjY4MVwiLFwiY3lcIjpcIjE4LjMxOVwiLFwiclwiOlwiMVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE4LjMxOVwiLFwiY3lcIjpcIjE4LjMxOVwiLFwiclwiOlwiMVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjUuNjgxXCIsXCJjeVwiOlwiNS42ODFcIixcInJcIjpcIjFcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUJ1bGxob3JuIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJCdWxsaG9yblwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00LjUsMTYuNDc0Yy0wLjg0OSwtMC40IC0xLjQzNiwtMS4yNjMgLTEuNDM2LC0yLjI2NGwtMCwtNC40MTljLTAsLTEuMzggMS4xMTgsLTIuNSAyLjUsLTIuNWw0LjM0MywwYzAuNzkzLDAgMS41ODEsLTAuMTMyIDIuMzMsLTAuMzkyYzEuODU5LC0wLjcwNSAzLjc5MiwtMS43MjcgNS4yNCwtMi45MjJsMC44NjksLTAuNzE4YzAuMDE1LC0wLjAxMyAwLjAzMiwtMC4wMjUgMC4wNDksLTAuMDM2YzAuNjY2LC0wLjQyNCAxLjUzOCwwLjA1NCAxLjUzOCwwLjg0NGwwLDYuNzE3YzAuNTcyLDAuMTEgMS4wMDQsMC42MTMgMS4wMDQsMS4yMTdjLTAsMC42MDQgLTAuNDMyLDEuMTA2IC0xLjAwNCwxLjIxNmwtMCw2LjcxOGMtMCwwLjc4NyAtMC44NzIsMS4yNjcgLTEuNTM4LDAuODQzYy0wLjAxNywtMC4wMTEgLTAuMDM0LC0wLjAyMyAtMC4wNSwtMC4wMzZsLTAuODY4LC0wLjcxOGMtMS40NDYsLTEuMTk1IC0zLjM2NCwtMi4yMTQgLTUuMjI2LC0yLjg5MWMtMC43NDgsLTAuMjYxIC0xLjUzNiwtMC4zOTQgLTIuMzI4LC0wLjM5NGMtMC42MDksLTAuMDI5IC0xLjI2NSwtMC4wMjkgLTEuMjY1LC0wLjAyOWwwLDIuMTQ3YzAsMS4xNDggLTAuOTMxLDIuMDc5IC0yLjA3OSwyLjA3OWMtMS4xNDgsLTAgLTIuMDc5LC0wLjkzMSAtMi4wNzksLTIuMDc5bDAsLTIuMzgzWm0xLDAuMjM2bDAsMi4xNDdjMCwwLjU5NiAwLjQ4MywxLjA3OSAxLjA3OSwxLjA3OWMwLjU5NiwtMCAxLjA3OSwtMC40ODMgMS4wNzksLTEuMDc5YzAsLTAgMCwtMi4xNDcgMCwtMi4xNDdsLTIuMDk0LC0wYy0wLjAzMSwtMCAtMC4wNTMsLTAgLTAuMDY0LC0wWm02LC0wLjg4MmwwLjE0MiwwLjA0YzIuMzcsMC42NjQgNC41NzUsMS44MTcgNi40NzMsMy4zODVsMC44MTgsMC42NzdsLTAsLTE1Ljg1OWwtMC44MiwwLjY3N2MtMS44OTcsMS41NjYgLTQuMSwyLjcxNyAtNi40NjgsMy4zNzlsLTAuMTQ1LDAuMDQxbC0wLDcuNjZabS0yLjg0MiwtMC4xMThsMS44NDIsMGwtMCwtNy40MTlsLTQuOTM2LDBjLTAuODI5LDAgLTEuNSwwLjY3MiAtMS41LDEuNWwtMCw0LjQxOWMtMCwwLjgyOSAwLjY3MSwxLjUgMS40OTksMS41bDMuMDk1LDBaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQnVyZ2VyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJCdXJnZXJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS4zMjUsMTEuMDE1YTcuMzQ0LDcuMzQ0LDAsMCwwLTE0LjY2LDAsMi4wMTQsMi4wMTQsMCwwLDAtMS42LDEuOTZ2LjE2YTIuMDE2LDIuMDE2LDAsMCwwLDEuNjQsMS45N2wuMjcsMi40NWEyLjU5MywyLjU5MywwLDAsMCwyLjU5LDIuMzJoOC44N2EyLjU5MywyLjU5MywwLDAsMCwyLjU5LTIuMzJsLjI3LTIuNDVhMi4wMTYsMi4wMTYsMCwwLDAsMS42NC0xLjk3di0uMTZBMiwyLDAsMCwwLDE5LjMyNSwxMS4wMTVaTTEyLDUuMTI1YTYuMzY1LDYuMzY1LDAsMCwxLDYuMzQsNS44NUg1LjY2NUE2LjM2Miw2LjM2MiwwLDAsMSwxMiw1LjEyNVptNi4wNCwxMi4zMmExLjYsMS42LDAsMCwxLTEuNiwxLjQzSDcuNTY1YTEuNiwxLjYsMCwwLDEtMS42LTEuNDNsLS4yNi0yLjMxSDE4LjNabTEuOS00LjMxYTEsMSwwLDAsMS0xLDFINS4wNjVhMSwxLDAsMCwxLTEtMXYtLjE2YTEsMSwwLDAsMSwxLTFoMTMuODdhMSwxLDAsMCwxLDEsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMlwiLFwiY3lcIjpcIjYuNjIyXCIsXCJyXCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI4LjMyM1wiLFwiY3lcIjpcIjguMzIzXCIsXCJyXCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxNS42NzZcIixcImN5XCI6XCI4LjMyM1wiLFwiclwiOlwiMC41XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDYWxjdWxhdG9yMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2FsY3VsYXRvcl8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNSwyMS45MzdoLTlhMi41LDIuNSwwLDAsMS0yLjUtMi41VjQuNTYzYTIuNSwyLjUsMCwwLDEsMi41LTIuNWg5YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOS40MzdBMi41LDIuNSwwLDAsMSwxNi41LDIxLjkzN1pNNy41LDMuMDYzQTEuNSwxLjUsMCwwLDAsNiw0LjU2M1YxOS40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41aDlhMS41LDEuNSwwLDAsMCwxLjUtMS41VjQuNTYzYTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNSw5Ljc1N2gtNUExLjUsMS41LDAsMCwxLDgsOC4yNTdWNi41NjNhMS41LDEuNSwwLDAsMSwxLjUtMS41aDVhMS41LDEuNSwwLDAsMSwxLjUsMS41VjguMjU3QTEuNSwxLjUsMCwwLDEsMTQuNSw5Ljc1N1ptLTUtMy42OTRhLjUuNSwwLDAsMC0uNS41VjguMjU3YS41LjUsMCwwLDAsLjUuNWg1YS41LjUsMCwwLDAsLjUtLjVWNi41NjNhLjUuNSwwLDAsMC0uNS0uNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMTEuNTA4XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTUuMjVcIixcImN5XCI6XCIxMS41MDhcIixcInJcIjpcIjAuNzVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI4Ljc1XCIsXCJjeVwiOlwiMTEuNTA4XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX1dfSx7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMTQuODQ4XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTUuMjVcIixcImN5XCI6XCIxNC44NDhcIixcInJcIjpcIjAuNzVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI4Ljc1XCIsXCJjeVwiOlwiMTQuODQ4XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX1dfSx7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE1LjI1XCIsXCJjeVwiOlwiMTguMTg3XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjI0OCwxOC42ODdIOC41YS41LjUsMCwwLDEsMC0xaDMuNzQ0YS41LjUsMCwxLDEsMCwxWlwifSxcImNoaWxkXCI6W119XX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDYWxjdWxhdG9yMiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2FsY3VsYXRvcl8yXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDUsNy44M2gtMi44djIuODFhLjUuNSwwLDAsMS0xLDBWNy44M0gxMy44NGEuNS41LDAsMCwxLDAtMWgyLjgxVjQuMDJhLjUuNSwwLDAsMSwxLDBWNi44M2gyLjhBLjUuNSwwLDAsMSwyMC40NSw3LjgzWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjU0NSw3LjgzYS41LjUsMCwwLDEsMC0xaDYuNjE5YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzLjgzNiwxNi4wNWEuNS41LDAsMCwxLDAtMWg2LjYxOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuODM2LDIwLjE5MWEuNS41LDAsMCwxLDAtMWg2LjYxOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05LjU1LDE5LjYxYS41LjUsMCwwLDEtLjcxLjdMNi44NiwxOC4zM2MtLjY2LjY1LTEuMzMsMS4zMi0xLjk5LDEuOThhLjUuNSwwLDAsMS0uNzEtLjdsMS45OS0xLjk5TDQuMTYsMTUuNjNhLjUuNSwwLDAsMSwuNzEtLjdsLjU4LjU4LDEuNCwxLjRjLjY3LS42NiwxLjMzLTEuMzIsMS45OS0xLjk4YS41LjUsMCwwLDEsLjcxLjdMNy41NiwxNy42MlpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNhbGVuZGFyRGF0ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2FsZW5kYXJfRGF0ZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzUsNC45NTVoLTEuOTR2LTEuNDFjMC0wLjI2LTAuMjMtMC41MS0wLjUtMC41Yy0wLjI3LDAuMDEtMC41LDAuMjItMC41LDAuNXYxLjQxaC03di0xLjQxXFxuICAgICAgICAgICAgYzAtMC4yNi0wLjIzLTAuNTEtMC41LTAuNWMtMC4yNywwLjAxLTAuNSwwLjIyLTAuNSwwLjV2MS40MWgtMS45M2MtMS4zOCwwLTIuNSwxLjEyLTIuNSwyLjV2MTFjMCwxLjM4LDEuMTIsMi41LDIuNSwyLjVoMTIuODdcXG4gICAgICAgICAgICBjMS4zOCwwLDIuNS0xLjEyLDIuNS0yLjV2LTExQzIwLjkzNSw2LjA3NSwxOS44MTUsNC45NTUsMTguNDM1LDQuOTU1eiBNMTkuOTM1LDE4LjQ1NWMwLDAuODMtMC42NywxLjUtMS41LDEuNUg1LjU2NVxcbiAgICAgICAgICAgIGMtMC44MywwLTEuNS0wLjY3LTEuNS0xLjV2LTguNDJoMTUuODdWMTguNDU1eiBNMTkuOTM1LDkuMDM1SDQuMDY1di0xLjU4YzAtMC44MywwLjY3LTEuNSwxLjUtMS41aDEuOTN2MC41OVxcbiAgICAgICAgICAgIGMwLDAuMjYsMC4yMywwLjUxLDAuNSwwLjVjMC4yNy0wLjAxLDAuNS0wLjIyLDAuNS0wLjV2LTAuNTloN3YwLjU5YzAsMC4yNiwwLjIzLDAuNTEsMC41LDAuNWMwLjI3LTAuMDEsMC41LTAuMjIsMC41LTAuNXYtMC41OVxcbiAgICAgICAgICAgIGgxLjk0YzAuODMsMCwxLjUsMC42NywxLjUsMS41VjkuMDM1elwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS40OTIsMTcuMTczdi0zLjQ2YzAtMC4wNTktMC4wNjQtMC4wOTUtMC4xMTQtMC4wNjRsLTAuNjM4LDAuMzkyXFxuICAgICAgICAgICAgYy0wLjEsMC4wNjEtMC4yMjgtMC4wMS0wLjIyOC0wLjEyOHYtMC42NTFjMC0wLjEwNSwwLjA1NS0wLjIwMywwLjE0Ni0wLjI1N2wwLjc2NC0wLjQ1N2MwLjA0Ny0wLjAyOCwwLjEtMC4wNDMsMC4xNTQtMC4wNDNoMC42MjZcXG4gICAgICAgICAgICBjMC4xNjYsMCwwLjMsMC4xMzQsMC4zLDAuM3Y0LjM2N2MwLDAuMTY2LTAuMTM0LDAuMy0wLjMsMC4zaC0wLjQwOUMxMS42MjYsMTcuNDczLDExLjQ5MiwxNy4zMzksMTEuNDkyLDE3LjE3M3pcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDYWxlbmRhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2FsZW5kYXJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM4LDQuOTU0SDE2LjVjMC0wLjM0NiwwLTAuNjkxLDAtMS4wMzZjMC0wLjEyNCwwLTAuMjQ4LDAtMC4zNzJjMC0wLjI2Mi0wLjIzLTAuNTEyLTAuNS0wLjVcXG4gICAgICAgICAgICBjLTAuMjcxLDAuMDEyLTAuNSwwLjIyLTAuNSwwLjVjMCwwLjQ2OSwwLDAuOTM5LDAsMS40MDhoLTdjMC0wLjM0NiwwLTAuNjkxLDAtMS4wMzZjMC0wLjEyNCwwLTAuMjQ4LDAtMC4zNzJcXG4gICAgICAgICAgICBjMC0wLjI2Mi0wLjIzLTAuNTEyLTAuNS0wLjVjLTAuMjcxLDAuMDEyLTAuNSwwLjIyLTAuNSwwLjVjMCwwLjQ2OSwwLDAuOTM5LDAsMS40MDhINS41NjJjLTEuMzc4LDAtMi41LDEuMTIyLTIuNSwyLjV2MTFcXG4gICAgICAgICAgICBjMCwxLjM3OSwxLjEyMiwyLjUsMi41LDIuNWgxMi44NzVjMS4zNzksMCwyLjUtMS4xMjEsMi41LTIuNXYtMTFDMjAuOTM4LDYuMDc2LDE5LjgxNiw0Ljk1NCwxOC40MzgsNC45NTR6IE01LjU2Miw1Ljk1NEg3LjVcXG4gICAgICAgICAgICBjMCwwLjA3MywwLDAuMTQ3LDAsMC4yMmMwLDAuMTI0LDAsMC4yNDgsMCwwLjM3MmMwLDAuMjYyLDAuMjMsMC41MTIsMC41LDAuNWMwLjI3MS0wLjAxMiwwLjUtMC4yMiwwLjUtMC41YzAtMC4xOTcsMC0wLjM5NCwwLTAuNTkyXFxuICAgICAgICAgICAgaDdjMCwwLjA3MywwLDAuMTQ3LDAsMC4yMmMwLDAuMTI0LDAsMC4yNDgsMCwwLjM3MmMwLDAuMjYyLDAuMjMsMC41MTIsMC41LDAuNWMwLjI3MS0wLjAxMiwwLjUtMC4yMiwwLjUtMC41XFxuICAgICAgICAgICAgYzAtMC4xOTcsMC0wLjM5NCwwLTAuNTkyaDEuOTM3YzAuODI3LDAsMS41LDAuNjczLDEuNSwxLjV2MS41ODRINC4wNjJWNy40NTRDNC4wNjIsNi42MjcsNC43MzUsNS45NTQsNS41NjIsNS45NTR6IE0xOC40MzgsMTkuOTU0XFxuICAgICAgICAgICAgSDUuNTYyYy0wLjgyNywwLTEuNS0wLjY3My0xLjUtMS41di04LjQxNmgxNS44NzV2OC40MTZDMTkuOTM4LDE5LjI4MSwxOS4yNjUsMTkuOTU0LDE4LjQzOCwxOS45NTR6XCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2FtZXJhIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDYW1lcmFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzUsMTkuOTI1SDMuNTY1YTEuNSwxLjUsMCwwLDEtMS41LTEuNVY5LjI4NWExLjUsMS41LDAsMCwxLDEuNS0xLjVINi4yMjNhLjUuNSwwLDAsMCwuNS0uNDU0bC4xNjYtMS44YTEuNDksMS40OSwwLDAsMSwxLjUtMS40NTRoNy4yM2ExLjUsMS41LDAsMCwxLDEuNSwxLjVsLjE2NCwxLjc1NmEuNS41LDAsMCwwLC41LjQ1NGgyLjY1OGExLjUsMS41LDAsMCwxLDEuNSwxLjV2OS4xNEExLjUsMS41LDAsMCwxLDIwLjQzNSwxOS45MjVaTTMuNTY1LDguNzg1YS41LjUsMCwwLDAtLjUuNXY5LjE0YS41LjUsMCwwLDAsLjUuNWgxNi44N2EuNS41LDAsMCwwLC41LS41VjkuMjg1YS41LjUsMCwwLDAtLjUtLjVIMTcuNzc3YTEuNSwxLjUsMCwwLDEtMS40OTQtMS4zNjJsLS4xNjYtMS44YS41MTUuNTE1LDAsMCwwLS41LS41NDZIOC4zODVhLjUuNSwwLDAsMC0uNS41TDcuNzE3LDcuNDIzQTEuNSwxLjUsMCwwLDEsNi4yMjMsOC43ODVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLDE3LjI4MmE0LDQsMCwxLDEsNC00QTQsNCwwLDAsMSwxMiwxNy4yODJabTAtN2EzLDMsMCwxLDAsMywzQTMsMywwLDAsMCwxMiwxMC4yODJaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDaGF0MSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2hhdF8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuMzE2LDE5LjkzN0ExLjI1MSwxLjI1MSwwLDAsMSwyLjA2NSwxOC42OWwwLTEuNzE2TDIuMDY4LDYuNTZhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE5LjQ0YTIuNSwyLjUsMCwwLDEsMi41LDIuNXY4LjQxYTIuNSwyLjUsMCwwLDEtMi41LDIuNUg2LjkxOGExLjQ5LDEuNDksMCwwLDAtMS4wNi40MzlMNC4yLDE5LjU3QTEuMjQ2LDEuMjQ2LDAsMCwxLDMuMzE2LDE5LjkzN1pNNC41NjgsNS4wNjJhMS41LDEuNSwwLDAsMC0xLjUsMS41TDMuMDYsMTYuOTczbDAsMS43MTRhLjI1LjI1LDAsMCwwLC40MjcuMTc2TDUuMTUxLDE3LjJhMi40ODIsMi40ODIsMCwwLDEsMS43NjctLjczMkgxOS40NGExLjUsMS41LDAsMCwwLDEuNS0xLjVWNi41NjJhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNoYXQyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDaGF0XzJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTkuOTM3YTEuMjQzLDEuMjQzLDAsMCwxLS44MzMtLjMxOUw5LjI4MSwxNy45MzJhMS41MzEsMS41MzEsMCwwLDAtMS4wOC0uNDU4SDQuNTYxYTIuNSwyLjUsMCwwLDEtMi41LTIuNWwuMDA2LTguNDFhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE5LjQzOWEyLjUsMi41LDAsMCwxLDIuNSwyLjV2OC40MTFhMi41LDIuNSwwLDAsMS0yLjUsMi41SDE1Ljc5YTEuNDgzLDEuNDgzLDAsMCwwLTEuMDYyLjQ0MWwtMS44OTUsMS43QTEuMjQzLDEuMjQzLDAsMCwxLDEyLDE5LjkzN1pNNC41NjcsNS4wNjNhMS41LDEuNSwwLDAsMC0xLjUsMS41bC0uMDA2LDguNDExYTEuNSwxLjUsMCwwLDAsMS41LDEuNUg4LjJhMi40ODMsMi40ODMsMCwwLDEsMS43NjcuNzMybDEuODY0LDEuNjY3YS4yNDguMjQ4LDAsMCwwLC4zMzMsMGwxLjg3NC0xLjY4MmEyLjUsMi41LDAsMCwxLDEuNzUxLS43MTZoMy42NDlhMS41LDEuNSwwLDAsMCwxLjUtMS41VjYuNTYzYTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDaXJjbGVBbGVydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2lyY2xlX0FsZXJ0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi41LDlhLjUuNSwwLDAsMC0xLDBoMFYxMy4wMmEuNS41LDAsMCwwLDEsMFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMlwiLFwiY3lcIjpcIjE1LjAwMVwiLFwiclwiOlwiMC41XCJ9LFwiY2hpbGRcIjpbXX1dfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjEuOTM1QTkuOTMzLDkuOTMzLDAsMSwxLDIxLjkzNCwxMiw5Ljk0NSw5Ljk0NSwwLDAsMSwxMiwyMS45MzVaTTEyLDMuMDY5QTguOTMzLDguOTMzLDAsMSwwLDIwLjkzNCwxMiw4Ljk0NCw4Ljk0NCwwLDAsMCwxMiwzLjA2OVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNpcmNsZUNoZWNrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDaXJjbGVfQ2hlY2tcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNS44MSwxMC40YS41LjUsMCwwLDAtLjcxLS43MWwtMy41NiwzLjU2TDkuODEsMTEuNTJhLjUuNSwwLDAsMC0uNzEuNzFsMi4wOCwyLjA4YS41MTMuNTEzLDAsMCwwLC43MSwwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45MzRBOS45MzQsOS45MzQsMCwxLDEsMjEuOTMzLDEyLDkuOTQ1LDkuOTQ1LDAsMCwxLDEyLDIxLjkzNFpNMTIsMy4wNjdBOC45MzQsOC45MzQsMCwxLDAsMjAuOTMzLDEyLDguOTQ0LDguOTQ0LDAsMCwwLDEyLDMuMDY3WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2lyY2xlQ2hldkRvd24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNpcmNsZV9DaGV2X0Rvd25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi4zNSwxMy44NWEuNDkyLjQ5MiwwLDAsMS0uNywwbC0zLTNhLjQ5NS40OTUsMCwwLDEsLjctLjdMMTIsMTIuNzlsMi42NS0yLjY0YS40OTUuNDk1LDAsMCwxLC43LjdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjkzMywxMkE5LjkzMyw5LjkzMywwLDEsMSwxMiwyLjA2Nyw5Ljk0NCw5Ljk0NCwwLDAsMSwyMS45MzMsMTJaTTMuMDY3LDEyQTguOTMzLDguOTMzLDAsMSwwLDEyLDMuMDY3LDguOTQzLDguOTQzLDAsMCwwLDMuMDY3LDEyWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2lyY2xlQ2hldkxlZnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNpcmNsZV9DaGV2X0xlZnRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMC4xNSwxMi4zNWEuNDkyLjQ5MiwwLDAsMSwwLS43bDMtM2EuNDk1LjQ5NSwwLDAsMSwuNy43TDExLjIxLDEybDIuNjQsMi42NWEuNDk1LjQ5NSwwLDAsMS0uNy43WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45MzNBOS45MzMsOS45MzMsMCwxLDEsMjEuOTMzLDEyLDkuOTQ0LDkuOTQ0LDAsMCwxLDEyLDIxLjkzM1pNMTIsMy4wNjdBOC45MzMsOC45MzMsMCwxLDAsMjAuOTMzLDEyLDguOTQzLDguOTQzLDAsMCwwLDEyLDMuMDY3WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2lyY2xlQ2hldlJpZ2h0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDaXJjbGVfQ2hldl9SaWdodFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzLjg1LDExLjY1YS40OTIuNDkyLDAsMCwxLDAsLjdsLTMsM2EuNDk1LjQ5NSwwLDAsMS0uNy0uN0wxMi43OSwxMiwxMC4xNSw5LjM1YS40OTUuNDk1LDAsMCwxLC43LS43WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyLjA2N0E5LjkzMyw5LjkzMywwLDEsMSwyLjA2NywxMiw5Ljk0NCw5Ljk0NCwwLDAsMSwxMiwyLjA2N1ptMCwxOC44NjZBOC45MzMsOC45MzMsMCwxLDAsMy4wNjcsMTIsOC45NDMsOC45NDMsMCwwLDAsMTIsMjAuOTMzWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2lyY2xlQ2hldlVwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDaXJjbGVfQ2hldl9VcFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjY1LDEwLjE1YS40OTIuNDkyLDAsMCwxLC43LDBsMywzYS40OTUuNDk1LDAsMCwxLS43LjdMMTIsMTEuMjEsOS4zNSwxMy44NWEuNDk1LjQ5NSwwLDAsMS0uNy0uN1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMi4wNjcsMTJBOS45MzMsOS45MzMsMCwxLDEsMTIsMjEuOTM0LDkuOTQ0LDkuOTQ0LDAsMCwxLDIuMDY3LDEyWm0xOC44NjYsMEE4LjkzMyw4LjkzMywwLDEsMCwxMiwyMC45MzQsOC45NDMsOC45NDMsMCwwLDAsMjAuOTMzLDEyWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2lyY2xlSW5mbyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2lyY2xlX0luZm9cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjUsMTVhLjUuNSwwLDAsMCwxLDBoMFYxMC45ODFhLjUuNSwwLDAsMC0xLDBaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTJcIixcImN5XCI6XCI4Ljk5OVwiLFwiclwiOlwiMC41XCJ9LFwiY2hpbGRcIjpbXX1dfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMi4wNjVBOS45MzQsOS45MzQsMCwxLDEsMi4wNjYsMTIsOS45NDUsOS45NDUsMCwwLDEsMTIsMi4wNjVabTAsMTguODY3QTguOTM0LDguOTM0LDAsMSwwLDMuMDY2LDEyLDguOTQ0LDguOTQ0LDAsMCwwLDEyLDIwLjkzMlpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNpcmNsZUxpc3QgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNpcmNsZV9MaXN0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM4LDYuMDYyaC05YS41LjUsMCwwLDEsMC0xaDlhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzOCwxMi41aC05YS41LjUsMCwwLDEsMC0xaDlhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzOCwxOC45MzVoLTlhLjUuNSwwLDEsMSwwLTFoOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS41NjIsOC4wNjJhMi41LDIuNSwwLDEsMSwyLjUtMi41QTIuNSwyLjUsMCwwLDEsNS41NjIsOC4wNjJabTAtNGExLjUsMS41LDAsMSwwLDEuNSwxLjVBMS41LDEuNSwwLDAsMCw1LjU2Miw0LjA2MlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS41NjIsMTQuNWEyLjUsMi41LDAsMSwxLDIuNS0yLjVBMi41LDIuNSwwLDAsMSw1LjU2MiwxNC41Wm0wLTRhMS41LDEuNSwwLDEsMCwxLjUsMS41QTEuNSwxLjUsMCwwLDAsNS41NjIsMTAuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS41NjIsMjAuOTM4YTIuNSwyLjUsMCwxLDEsMi41LTIuNUEyLjUsMi41LDAsMCwxLDUuNTYyLDIwLjkzOFptMC00YTEuNSwxLjUsMCwxLDAsMS41LDEuNUExLjUsMS41LDAsMCwwLDUuNTYyLDE2LjkzOFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNpcmNsZU1pbnVzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDaXJjbGVfTWludXNcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNSwxMS41aDBhLjUuNSwwLDAsMSwwLDFIOWEuNS41LDAsMCwxLDAtMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjEuOTM0QTkuOTMzLDkuOTMzLDAsMSwxLDIxLjkzMiwxMiw5Ljk0NSw5Ljk0NSwwLDAsMSwxMiwyMS45MzRaTTEyLDMuMDY4QTguOTMzLDguOTMzLDAsMSwwLDIwLjkzMiwxMiw4Ljk0NCw4Ljk0NCwwLDAsMCwxMiwzLjA2OFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNpcmNsZU1vcmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNpcmNsZV9Nb3JlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMi4wMDFcIixcImN5XCI6XCIxMlwiLFwiclwiOlwiMVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE2LjAwMVwiLFwiY3lcIjpcIjEyXCIsXCJyXCI6XCIxXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiOC4wMDFcIixcImN5XCI6XCIxMlwiLFwiclwiOlwiMVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45MzJBOS45MzQsOS45MzQsMCwxLDEsMjEuOTM0LDEyLDkuOTQ0LDkuOTQ0LDAsMCwxLDEyLDIxLjkzMlpNMTIsMy4wNjVBOC45MzQsOC45MzQsMCwxLDAsMjAuOTM0LDEyLDguOTQ0LDguOTQ0LDAsMCwwLDEyLDMuMDY1WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2lyY2xlUGx1cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2lyY2xlX1BsdXNcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNSwxMi41SDEyLjVWMTVhLjUuNSwwLDAsMS0xLDBWMTIuNUg5YS41LjUsMCwwLDEsMC0xaDIuNVY5YS41LjUsMCwwLDEsMSwwdjIuNUgxNUEuNS41LDAsMCwxLDE1LDEyLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLDIxLjkzMkE5LjkzNCw5LjkzNCwwLDEsMSwyMS45MzIsMTIsOS45NDQsOS45NDQsMCwwLDEsMTIsMjEuOTMyWk0xMiwzLjA2NUE4LjkzNCw4LjkzNCwwLDEsMCwyMC45MzIsMTIsOC45NDQsOC45NDQsMCwwLDAsMTIsMy4wNjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDaXJjbGVRdWVzdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2lyY2xlX1F1ZXN0aW9uXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS40MTEsMTIuNDU5YTEuNTQ3LDEuNTQ3LDAsMCwxLC4zNDEtLjYsMi42NDQsMi42NDQsMCwwLDEsLjUzNS0uNDE3LDIuMiwyLjIsMCwwLDAsLjM2My0uMjg2LDEuMiwxLjIsMCwwLDAsLjI1Ni0uMzYzQTEuMDg0LDEuMDg0LDAsMCwwLDEzLDEwLjM0MWEuOTIzLjkyMywwLDAsMC0uMTQyLS41MTcuOTM4LjkzOCwwLDAsMC0uMzc0LS4zMzgsMS4xMjMsMS4xMjMsMCwwLDAtLjUxOS0uMTE5LDEuMTczLDEuMTczLDAsMCwwLS40OTUuMTA3LjkzNC45MzQsMCwwLDAtLjM4OS4zMzUuODg0Ljg4NCwwLDAsMC0uMTExLjIyNC41MTYuNTE2LDAsMCwxLS40ODMuMzU5aDBhLjUwNi41MDYsMCwwLDEtLjQ3OS0uNjc1LDEuNjYxLDEuNjYxLDAsMCwxLC4xNzgtLjM0OSwxLjgsMS44LDAsMCwxLC43NDgtLjYzNCwyLjQzNywyLjQzNywwLDAsMSwxLjAzMS0uMjE1LDIuNCwyLjQsMCwwLDEsMS4wODIuMjMxLDEuNzM3LDEuNzM3LDAsMCwxLC43MjEuNjQxLDEuNzcyLDEuNzcyLDAsMCwxLC4yNTcuOTYsMS44NDEsMS44NDEsMCwwLDEtLjExOC42NzgsMS42ODUsMS42ODUsMCwwLDEtLjMzNC41MzYsMi4yODksMi4yODksMCwwLDEtLjUyLjQxNywyLjI3NywyLjI3NywwLDAsMC0uNDYyLjM2OSwxLjExMywxLjExMywwLDAsMC0uMjU2LjQ1NSwyLjM0NCwyLjM0NCwwLDAsMC0uMDQ1LjI4My40ODcuNDg3LDAsMCwxLS40ODMuNDI5aDBhLjQ4NC40ODQsMCwwLDEtLjQ4My0uNTMxQTIuOTMxLDIuOTMxLDAsMCwxLDExLjQxMSwxMi40NTlaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTEuNzkzXCIsXCJjeVwiOlwiMTQuODkxXCIsXCJyXCI6XCIwLjU4N1wifSxcImNoaWxkXCI6W119XX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLDIxLjkzMUE5LjkzNCw5LjkzNCwwLDEsMSwyMS45MzQsMTIsOS45NDUsOS45NDUsMCwwLDEsMTIsMjEuOTMxWk0xMiwzLjA2NEE4LjkzNCw4LjkzNCwwLDEsMCwyMC45MzQsMTIsOC45NDMsOC45NDMsMCwwLDAsMTIsMy4wNjRaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDaXJjbGVSZW1vdmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNpcmNsZV9SZW1vdmVcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05LjUyNSwxMy43NjVhLjUuNSwwLDAsMCwuNzEuNzFjLjU5LS41OSwxLjE3NS0xLjE4LDEuNzY1LTEuNzZsMS43NjUsMS43NmEuNS41LDAsMCwwLC43MS0uNzFjLS41OS0uNTgtMS4xOC0xLjE3NS0xLjc2LTEuNzY1LjQxLS40Mi44Mi0uODI1LDEuMjMtMS4yMzUuMTgtLjE4LjM1LS4zNi41My0uNTNhLjUuNSwwLDAsMC0uNzEtLjcxTDEyLDExLjI5MywxMC4yMzUsOS41MjVhLjUuNSwwLDAsMC0uNzEuNzFMMTEuMjkzLDEyWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45MzNBOS45MzMsOS45MzMsMCwxLDEsMjEuOTM0LDEyLDkuOTQ1LDkuOTQ1LDAsMCwxLDEyLDIxLjkzM1pNMTIsMy4wNjdBOC45MzMsOC45MzMsMCwxLDAsMjAuOTM0LDEyLDguOTQ0LDguOTQ0LDAsMCwwLDEyLDMuMDY3WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2xvY2sxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDbG9ja18xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjEuOTMzQTkuOTMzLDkuOTMzLDAsMSwxLDIxLjkzMywxMiw5Ljk0NCw5Ljk0NCwwLDAsMSwxMiwyMS45MzNaTTEyLDMuMDY3QTguOTMzLDguOTMzLDAsMSwwLDIwLjkzMywxMiw4Ljk0Myw4Ljk0MywwLDAsMCwxMiwzLjA2N1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuNSw2YS41LjUsMCwwLDEsMSwwdjQuOGMxLjEzLTEuMTMsMi4yNi0yLjI3LDMuMzktMy40YS41LjUsMCwwLDEsLjcxLjcxbC00LjI2LDQuMjVhLjQ2My40NjMsMCwwLDEtLjU4LjA3Yy0uMDEtLjAyLS4wMi0uMDItLjAzLS4wMmEuNDI1LjQyNSwwLDAsMS0uMjItLjMzWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2xvY2syIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDbG9ja18yXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjEuOTMzQTkuOTMzLDkuOTMzLDAsMSwxLDIxLjkzMywxMiw5Ljk0NCw5Ljk0NCwwLDAsMSwxMiwyMS45MzNaTTEyLDMuMDY3QTguOTMzLDguOTMzLDAsMSwwLDIwLjkzMywxMiw4Ljk0Myw4Ljk0MywwLDAsMCwxMiwzLjA2N1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTgsMTIuNUgxMmEuNDI5LjQyOSwwLDAsMS0uMzQtLjE0Yy0uMDEsMC0uMDEtLjAxLS4wMi0uMDJBLjQyOS40MjksMCwwLDEsMTEuNSwxMlY2YS41LjUsMCwwLDEsMSwwdjUuNUgxOEEuNS41LDAsMCwxLDE4LDEyLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDbG91ZERyaXp6bGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNsb3VkX0RyaXp6bGVcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy42MDUsMTYuNzg3djEuMDE4YS41LjUsMCwwLDAsMSwwVjE2Ljc4N2EuNTE2LjUxNiwwLDAsMC0uMTQ2LS4zNTQuNS41LDAsMCwwLS44NTQuMzU0WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS41LDE2Ljc4N3YxLjAxOGEuNTE2LjUxNiwwLDAsMCwuMTQ2LjM1My41LjUsMCwwLDAsLjg1NC0uMzUzVjE2Ljc4N2EuNTIxLjUyMSwwLDAsMC0uMTQ2LS4zNTQuNS41LDAsMCwwLS44NTQuMzU0WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC41NTIsMjAuMzQzdjEuMDE4YS41LjUsMCwwLDAsMSwwVjIwLjM0M2EuNTE2LjUxNiwwLDAsMC0uMTQ2LS4zNTQuNS41LDAsMCwwLS44NTQuMzU0WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04LjQ0NiwyMC4zNDN2MS4wMThhLjUuNSwwLDAsMCwxLDBWMjAuMzQzYS41MjEuNTIxLDAsMCwwLS4xNDYtLjM1NC41LjUsMCwwLDAtLjg1NC4zNTRaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUuMzkzLDE2Ljc4N3YxLjAxOGEuNS41LDAsMCwwLDEsMFYxNi43ODdhLjUyMS41MjEsMCwwLDAtLjE0Ni0uMzU0LjUuNSwwLDAsMC0uODU0LjM1NFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuMSwxNC4yMjhoLTUuOTlBNi4xMTYsNi4xMTYsMCwwLDEsMy45MTYsOC40NzRoMEE2LjA0NCw2LjA0NCwwLDAsMSw5Ljk1MywyLjEzOWE2LjA3LDYuMDcsMCwwLDEsNS44LDQuMzY2LDMuOTE5LDMuOTE5LDAsMCwxLDMuMjg4LDEuMiwzLjg1LDMuODUsMCwwLDEsMS4wMzgsMi45MDhBMy45NDYsMy45NDYsMCwwLDEsMTYuMSwxNC4yMjhaTTQuOTE1LDguNDI3YTUuMTE3LDUuMTE3LDAsMCwwLDUuMTk0LDQuOEgxNi4xYTIuOTQ0LDIuOTQ0LDAsMCwwLDIuOTg2LTIuNjgyLDIuODczLDIuODczLDAsMCwwLTMuNDk0LTNsLS4yLjA0Ni0uMjUtLjEyNGEuNTkyLjU5MiwwLDAsMS0uMjYyLS4zNzdBNS4wNjEsNS4wNjEsMCwwLDAsOS45NTMsMy4xMzksNS4wNDMsNS4wNDMsMCwwLDAsNC45MTUsOC40MjdaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDbG91ZE1vb24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNsb3VkX01vb25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuMzYsMTEuNTRhLjcxLjcxLDAsMCwwLS43My0uMjksNS4yNzgsNS4yNzgsMCwwLDEtNi4zNC00Ljc4LDUuMzc5LDUuMzc5LDAsMCwxLC4zNy0yLjQyLjcyOS43MjksMCwwLDAtLjE1LS43OC43LjcsMCwwLDAtLjc2LS4xNkE2LjMxNyw2LjMxNywwLDAsMCw5Ljc3LDguOTlhNS40OTQsNS40OTQsMCwwLDAtMS4yMi0uMTNBNi4wMzksNi4wMzksMCwwLDAsMi41LDE0Ljg5YzAsLjEuMDEuMi4wMS4zQTYuMTE0LDYuMTE0LDAsMCwwLDguNywyMC45NGg1Ljk5YTMuOTQxLDMuOTQxLDAsMCwwLDMuOTgtMy42MSwzLjc1NSwzLjc1NSwwLDAsMC0uNjMtMi4zOEE2LjI4Myw2LjI4MywwLDAsMCwyMS40LDEyLjMuNjgyLjY4MiwwLDAsMCwyMS4zNiwxMS41NFptLTYuNjcsOC40SDguN2E1LjEyMSw1LjEyMSwwLDAsMS01LjE5LTQuOEE1LjA0Miw1LjA0MiwwLDAsMSw4LjU1LDkuODZhNS4wNTksNS4wNTksMCwwLDEsNC45MiwzLjk1LjU0OC41NDgsMCwwLDAsLjI2LjM3bC4yNS4xMy4yLS4wNWEyLjg3MywyLjg3MywwLDAsMSwzLjQ5LDNBMi45MzEsMi45MzEsMCwwLDEsMTQuNjksMTkuOTRabTIuNjEtNS44M2EzLjkxNywzLjkxNywwLDAsMC0yLjk1LS44OUE2LjA0Myw2LjA0MywwLDAsMCwxMC43OCw5LjNhNS4zMzgsNS4zMzgsMCwwLDEsMi43My00Ljk4LDYuMzI1LDYuMzI1LDAsMCwwLDQuNTEsNy44NSw2LjY0Miw2LjY0MiwwLDAsMCwyLjEyLjE3QTUuMiw1LjIsMCwwLDEsMTcuMywxNC4xMVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDbG91ZE9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2xvdWRfT2ZmXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuOCwxNi41NzdjLS40MS40OS0xLjEyLS4yMi0uNy0uNzFhMy41ODUsMy41ODUsMCwwLDAsLjM3LTQuMDRBMy4yNjYsMy4yNjYsMCwwLDAsMTYuNiwxMC4zYS41LjUsMCwwLDEtLjU2LS4yMyw1LjM5MSw1LjM5MSwwLDAsMC01LjMtMy4xYy0uNjQuMDQtLjY0LS45NiwwLTFhNi4zNDYsNi4zNDYsMCwwLDEsNS45OSwzLjI2LDQuMjU1LDQuMjU1LDAsMCwxLDQuNiwyLjFBNC41NzksNC41NzksMCwwLDEsMjAuOCwxNi41NzdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQuOTQxLDQuMjM3YS41LjUsMCwwLDAtLjcuN2wyLjY5LDIuNjlhNi4yNzMsNi4yNzMsMCwwLDAtMS45NCwzLjc4LDMuMzQyLDMuMzQyLDAsMCwwLTIuNjUsNC42LDMuNTE4LDMuNTE4LDAsMCwwLDMuNDgsMi4wNWgxMS41M2MuNTguNTcsMS4xNCwxLjE0LDEuNzEsMS43MWEuNS41LDAsMCwwLC43MS0uNzFabS4zLDEyLjgxYTIuMzUyLDIuMzUyLDAsMCwxLTIuMTYtMi4yNSwyLjMwOSwyLjMwOSwwLDAsMSwyLjM1LTIuNDIuNTE1LjUxNSwwLDAsMCwuNS0uNSw1LjM3Nyw1LjM3NywwLDAsMSwxLjcxLTMuNTRxNC4zNSw0LjM2NSw4LjcxLDguNzJaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDbG91ZE9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDbG91ZF9PblwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMS45MTcsMTMuNDg0YTQuMzgxLDQuMzgxLDAsMCwwLTUuMTktNC4yNiw2LjI4MSw2LjI4MSwwLDAsMC0xMS43NSwyLjE5LDMuMjM3LDMuMjM3LDAsMCwwLTIuNjYsMiwzLjQzMywzLjQzMywwLDAsMCwuODIsMy43NGMxLjEyLDEuMDMsMi41NC44OSwzLjk0Ljg5aDEwLjE1YTQuNTE0LDQuNTE0LDAsMCwwLDQuNjktNC4zMlptLTQuNjUsMy41NmMtMS4xOS4wMS0yLjM4LDAtMy41NiwwLTIuNzUsMC01LjQ5LjA2LTguMjMsMGEyLjM4MywyLjM4MywwLDAsMS0yLjMzLTEuNzMsMi4zMzMsMi4zMzMsMCwwLDEsMi4yOC0yLjk0LjUxNS41MTUsMCwwLDAsLjUtLjUsNS4zLDUuMywwLDAsMSwxMC4xMS0xLjgxLjUuNSwwLDAsMCwuNTYuMjMsMy4zNjYsMy4zNjYsMCwwLDEsNC4zMywzLjMyQTMuNDg5LDMuNDg5LDAsMCwxLDE3LjI2NywxNy4wNDRaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2xvdWRSYWluYm93IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDbG91ZF9SYWluYm93XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjgsNi42NDhhOC42LDguNiwwLDAsMC0xMi43OC44Miw2LjMyOSw2LjMyOSwwLDAsMC0uNzYxLS4wNSw2LjIxMiw2LjIxMiwwLDAsMC02LjIsNi4yYzAsLjEuMDEuMi4wMS4zYTYuMjc3LDYuMjc3LDAsMCwwLDYuMzUxLDUuODloNi4xNTlhNC4wNCw0LjA0LDAsMCwwLDQuMDgxLTMuNywzLjkxNiwzLjkxNiwwLDAsMC0xLjA3LTIuOTcsMy45OCwzLjk4LDAsMCwwLTMuMzctMS4yMyw1LjU4Miw1LjU4MiwwLDAsMC0uMzgtLjk3LDIuNjE3LDIuNjE3LDAsMCwxLDMuNzUtLjA4Yy40Ni40NSwxLjE2OS0uMjYuNzEtLjcxYTMuNjYsMy42NiwwLDAsMC0yLjc3LTEuMDUsMy41OTQsMy41OTQsMCwwLDAtMi4yLjk2LDYuNzQ2LDYuNzQ2LDAsMCwwLTEuMDItMS4xMiw1LjEzMSw1LjEzMSwwLDAsMSw3LjAzMS4xN2MuNDYuNDUsMS4xNjktLjI2LjcxLS43MWE2LjEzNCw2LjEzNCwwLDAsMC00LjUxLTEuNzcsNS45ODIsNS45ODIsMCwwLDAtNC4wMzEsMS43Myw1LjYzMiw1LjYzMiwwLDAsMC0xLjQwOS0uNjUsNy42MTUsNy42MTUsMCwwLDEsMTAuOTktLjM1QzIxLjU0Niw3LjgwOCwyMi4yNTUsNy4xLDIxLjgsNi42NDhabS0xMC41NiwyLjcxYS43MTIuNzEyLDAsMCwwLC4xMS4wOCw1LjIzOCw1LjIzOCwwLDAsMSwxLjk3OSwzLjA2LjYuNiwwLDAsMCwuMjcxLjM3bC4yNS4xMy4yLS4wNWEyLjk3NywyLjk3NywwLDAsMSwzLjYxLDMuMSwzLjAzNywzLjAzNywwLDAsMS0zLjA4MSwyLjc2SDguNDE2YTUuMjcsNS4yNywwLDAsMS01LjM1MS00Ljk0LDUuMiw1LjIsMCwwLDEsOC4xNzEtNC41MVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDbG91ZFN1biAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ2xvdWRfU3VuXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjQ2NSw5LjQ3bC0xLjktMS4wNS41OC0yLjE2YS45NjguOTY4LDAsMCwwLS4yNS0uOTMuOTU3Ljk1NywwLDAsMC0uOTMtLjI0bC0yLjA5LjYtMS4xMy0xLjk0YS45ODguOTg4LDAsMCwwLS44My0uNDcuOTY3Ljk2NywwLDAsMC0uODIuNDhsLTEuMDYsMS45MS0yLjE2LS41OGEuOTUxLjk1MSwwLDAsMC0uOTIuMjQuOTYyLjk2MiwwLDAsMC0uMjUuOTNsLjYsMi4xLS43Ny40NEE2LjMsNi4zLDAsMCwwLDguMSw4LjYzYTYuMDM5LDYuMDM5LDAsMCwwLTYuMDQsNi4wM2MwLC4xLjAxLjIuMDEuM2E2LjExNSw2LjExNSwwLDAsMCw2LjE5LDUuNzZoNS45OGEzLjk1MiwzLjk1MiwwLDAsMCwzLjk5LTMuNjIsMy44NzYsMy44NzYsMCwwLDAtLjM1LTEuODhsMS4xLjNhMS4wMDcsMS4wMDcsMCwwLDAsLjI1LjAzLjkwNy45MDcsMCwwLDAsLjY3LS4yOC45NS45NSwwLDAsMCwuMjUtLjkybC0uNi0yLjEsMS45My0xLjEyYS45NTYuOTU2LDAsMCwwLC40Ny0uODNBLjk0NS45NDUsMCwwLDAsMjEuNDY1LDkuNDdabS03LjczLDQuNTdhMi44NzMsMi44NzMsMCwwLDEsMy40OSwzLDIuOTQ3LDIuOTQ3LDAsMCwxLTIuOTksMi42OEg4LjI1NWE1LjMwNyw1LjMwNywwLDAsMS0zLjYtMS4zOSw0LjkzNSw0LjkzNSwwLDAsMS0xLjYtMy40MUE1LjA0Myw1LjA0MywwLDAsMSw4LjEsOS42M2E1LjEwOSw1LjEwOSwwLDAsMSw0LjA5LDIuMDksNS45MzIsNS45MzIsMCwwLDEsLjQuNjUsNC45NzQsNC45NzQsMCwwLDEsLjQzLDEuMjFBLjY0LjY0LDAsMCwwLDEzLjczNSwxNC4wNFptLS45Mi0zLjczYTIuMTA2LDIuMTA2LDAsMCwxLDQuMTMzLS41NzgsMi4xMTQsMi4xMTQsMCwwLDEtMi4wMzMsMi42ODhBMi4yNDEsMi4yNDEsMCwwLDEsMTIuODE1LDEwLjMxWm00LjEyLDMuNjRhMy45LDMuOSwwLDAsMC0xLjA4LS42NywzLjExLDMuMTEsMCwxLDAtNC4wMS0zLjM0LDYuNDc1LDYuNDc1LDAsMCwwLTEuMDktLjY5bC4wNi0uMDNhLjk3OC45NzgsMCwwLDAsLjQ0LTEuMDdsLS42NC0yLjEsMi4xNy41OGEuOTgxLjk4MSwwLDAsMCwxLjA3LS40NGwxLjAzLTEuOTMsMS4xMiwxLjkyYS45NTIuOTUyLDAsMCwwLDEuMDguNDVMMTkuMTc1LDZsLS41NywyLjE0YS45MjIuOTIyLDAsMCwwLC40NCwxLjA5bDEuOTIsMS4wNC0xLjkyLDEuMTFhLjk0MS45NDEsMCwwLDAtLjQ1LDEuMDhsLjYzLDIuMDlaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ2xvdWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNsb3VkXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjEsMTkuNEg5LjY0NmE3LjQ5Miw3LjQ5MiwwLDAsMS03LjU4OC03LjA0NmgwQTcuNCw3LjQsMCwwLDEsOS40NTIsNC42YTcuNDM0LDcuNDM0LDAsMCwxLDcuMTM2LDUuNDQ3LDQuNzMxLDQuNzMxLDAsMCwxLDQuMDkyLDEuNDQxLDQuNjY0LDQuNjY0LDAsMCwxLDEuMjYsMy41MjlBNC43ODksNC43ODksMCwwLDEsMTcuMSwxOS40Wk0zLjA1NywxMi4zMDlBNi40OTMsNi40OTMsMCwwLDAsOS42NDYsMTguNEgxNy4xYTMuNzg3LDMuNzg3LDAsMCwwLDMuODM5LTMuNDUzLDMuNywzLjcsMCwwLDAtNC41LTMuODZsLS4yLjA0Ni0uMjY5LS4xMjdhLjYxNy42MTcsMCwwLDEtLjI3My0uMzkyQTYuNDIyLDYuNDIyLDAsMCwwLDkuNDUyLDUuNmE2LjQsNi40LDAsMCwwLTYuMzk1LDYuNzExWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNvZmZlZUJlYW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNvZmZlZV9CZWFuXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjE1MSw0Ljg2OGE2Ljc0NCw2Ljc0NCwwLDAsMC01Ljk2LTEuNjksMTIuMDA5LDEyLjAwOSwwLDAsMC02LjU0LDMuNDcsMTEuOTg4LDExLjk4OCwwLDAsMC0zLjQ4LDYuNTUsNi43NDQsNi43NDQsMCwwLDAsMS42OSw1Ljk1LDYuNDA2LDYuNDA2LDAsMCwwLDQuNjMsMS43OCwxMS41MTEsMTEuNTExLDAsMCwwLDcuODctMy41NkMyMS4zLDEzLjQyOCwyMi4xLDcuODE4LDE5LjE1MSw0Ljg2OFptLTE0Ljk5LDguNDhhMTEuMDQxLDExLjA0MSwwLDAsMSwzLjE5LTUuOTksMTAuOTc2LDEwLjk3NiwwLDAsMSw1Ljk5LTMuMTksOC4wMTYsOC4wMTYsMCwwLDEsMS4xOC0uMDksNS40MTIsNS40MTIsMCwwLDEsMy45MiwxLjQ5LjY4OS42ODksMCwwLDEsLjExLjEzLDYuNTQyLDYuNTQyLDAsMCwxLTIuMTIsMS4yMyw3LjY2Niw3LjY2NiwwLDAsMC0yLjk2LDEuOTMsNy42NjYsNy42NjYsMCwwLDAtMS45MywyLjk2LDYuNTg5LDYuNTg5LDAsMCwxLTEuNzEsMi42Myw2LjcsNi43LDAsMCwxLTIuNjMsMS43MSw3LjQ3OCw3LjQ3OCwwLDAsMC0yLjM1LDEuMzZBNi4xOCw2LjE4LDAsMCwxLDQuMTYxLDEzLjM0OFptMTIuNDksMy4zMWMtMy41NSwzLjU1LTguNTIsNC4zNS0xMS4wOCwxLjc5YTEuNTM4LDEuNTM4LDAsMCwxLS4xMi0uMTMsNi42NzcsNi42NzcsMCwwLDEsMi4xMy0xLjIzLDcuODYyLDcuODYyLDAsMCwwLDIuOTYtMS45Myw3LjczOCw3LjczOCwwLDAsMCwxLjkzLTIuOTYsNi41ODksNi41ODksMCwwLDEsMS43MS0yLjYzLDYuNTg5LDYuNTg5LDAsMCwxLDIuNjMtMS43MSw3LjYsNy42LDAsMCwwLDIuMzQtMS4zN0MyMC43OTEsOS4yLDE5LjgyMSwxMy40ODgsMTYuNjUxLDE2LjY1OFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDb2ZmZWVDdXAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNvZmZlZV9DdXBcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNzksNS42N2ExLjUsMS41LDAsMCwwLTEuMTYtMS40NmwtLjM4LTEuMzhhMS4wODEsMS4wODEsMCwwLDAtMS4wNS0uNzZINy43OWExLjA2LDEuMDYsMCwwLDAtMS4wNC43Nkw2LjM3LDQuMjFBMS41MzcsMS41MzcsMCwwLDAsNS4yMSw1Ljc2LDEuNDc2LDEuNDc2LDAsMCwwLDYuMjcsNy4xOGwuMSwyLjc3YS43NS43NSwwLDAsMC0uNDIuMjIuNzY4Ljc2OCwwLDAsMC0uMjEuNTZsLjI0LDUuNzZhLjc1OS43NTksMCwwLDAsLjY1LjcybC4wOCwyLjIyYTIuNTc5LDIuNTc5LDAsMCwwLDIuNTksMi41aDUuMzlhMi41ODEsMi41ODEsMCwwLDAsMi42LTIuNWwuMDgtMi4yMmEuNzYuNzYsMCwwLDAsLjY0LS43MmwuMjQtNS43NmEuNzY4Ljc2OCwwLDAsMC0uMjEtLjU2LjcyLjcyLDAsMCwwLS40MS0uMjJsLjEtMi43N0ExLjUzNCwxLjUzNCwwLDAsMCwxOC43OSw1LjY3Wm0tMTEtMi42LDguNDkuMDMuMywxLjA3SDcuNDRabTguNSwxNi4zM2ExLjU3OCwxLjU3OCwwLDAsMS0xLjYsMS41M0g5LjNBMS41NzUsMS41NzUsMCwwLDEsNy43MSwxOS40bC0uMDgtMi4xOGg4Ljc0Wk05LjksMTMuNThhMi4xLDIuMSwwLDEsMSwyLjEsMi4xQTIuMSwyLjEsMCwwLDEsOS45LDEzLjU4Wm02LjczLTMuNjVINy4zN2wtLjEtMi42N2g5LjQ1Wm0uNjYtMy42N0g2LjcxYS41MjIuNTIyLDAsMCwxLS41LS41OS41LjUsMCwwLDEsLjUtLjVIMTcuMjlhLjUyOC41MjgsMCwwLDEsLjUuNTlBLjUuNSwwLDAsMSwxNy4yOSw2LjI2WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNvaW5JbnNlcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNvaW5fSW5zZXJ0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuNDQsMTcuN0gxNy43N2E3LjQ4NCw3LjQ4NCwwLDAsMCwxLjc4LTQuODZBNy41NSw3LjU1LDAsMSwwLDYuMjMsMTcuN0gyLjU2YS41MDguNTA4LDAsMCwwLS41LjUuNS41LDAsMCwwLC41LjVIMjEuNDRhLjUuNSwwLDAsMCwuNS0uNUEuNTA4LjUwOCwwLDAsMCwyMS40NCwxNy43Wm0tNS4wMywwSDcuNjJhNi41NDYsNi41NDYsMCwxLDEsOC43OC0uMDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LDEzLjk2NWExLjYxNiwxLjYxNiwwLDAsMS0xLjUsMS42MXYuNjVhLjQ4NS40ODUsMCwwLDEtLjUuNDguNDkxLjQ5MSwwLDAsMS0uNS0uNDh2LS42NGgtLjgxYS41LjUsMCwwLDEtLjUtLjUuNTA4LjUwOCwwLDAsMSwuNS0uNWgxLjY5YS42MTcuNjE3LDAsMCwwLC42Mi0uNjIuNjIzLjYyMywwLDAsMC0uNjItLjYyaC0uNzVhMS42MTgsMS42MTgsMCwwLDEtLjEzLTMuMjN2LS42NWEuNDkxLjQ5MSwwLDAsMSwuNS0uNDguNDg1LjQ4NSwwLDAsMSwuNS40OHYuNjRoLjgxYS41LjUsMCwwLDEsMCwxSDExLjYzYS42Mi42MiwwLDAsMCwwLDEuMjRoLjc1QTEuNjI2LDEuNjI2LDAsMCwxLDE0LDEzLjk2NVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNvaW5zMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiQ29pbnNfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40NiwxMC45MDVhMy40NjksMy40NjksMCwwLDAtMi40NywxLjA0LDIuMywyLjMsMCwwLDAtLjg2LTEuNzMsMi4yNTcsMi4yNTcsMCwwLDAsLjg2LTEuNzgsMi4yODgsMi4yODgsMCwwLDAtMi4yOC0yLjI5SDQuMzVhMi4yODQsMi4yODQsMCwwLDAtMS40Myw0LjA3LDIuMjgyLDIuMjgyLDAsMCwwLDAsMy41NywyLjI3NywyLjI3NywwLDAsMCwxLjQzLDQuMDZoOS4zNmEyLjI5LDIuMjksMCwwLDAsMi4wNi0xLjI5LDMuNDM0LDMuNDM0LDAsMCwwLDIuNjksMS4zLDMuNDc1LDMuNDc1LDAsMSwwLDAtNi45NVptLTQuNzUsNS45NEg0LjM1YTEuMjgsMS4yOCwwLDEsMSwwLTIuNTZoOS4zNmExLjI4LDEuMjgsMCwxLDEsMCwyLjU2Wm0wLTMuNTZINC4zNWExLjI4NSwxLjI4NSwwLDEsMSwwLTIuNTdoOS4zNmExLjI4NSwxLjI4NSwwLDAsMSwwLDIuNTdabTAtMy41N0g0LjM1YTEuMjg1LDEuMjg1LDAsMSwxLDAtMi41N2g5LjM2YTEuMjg1LDEuMjg1LDAsMCwxLDAsMi41N1ptNC43NSw3LjE0YTIuNDc1LDIuNDc1LDAsMSwxLDIuNDgtMi40OEEyLjQ3NywyLjQ3NywwLDAsMSwxOC40NiwxNi44NTVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ29tcGFzczEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNvbXBhc3NfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQuNjYxLDIwLjkzN2ExLjU4OSwxLjU4OSwwLDAsMS0xLjExNy0uNDgsMS41MzQsMS41MzQsMCwwLDEtLjQtMS41OUw2LjU4LDguOTM3QTMuOCwzLjgsMCwwLDEsOC45MzgsNi41OGw5LjkzLTMuNDM5YTEuNTM3LDEuNTM3LDAsMCwxLDEuNTg5LjQsMS41MzIsMS41MzIsMCwwLDEsLjQsMS41ODhMMTcuNDIsMTUuMDYxYTMuOCwzLjgsMCwwLDEtMi4zNTgsMi4zNThsLTkuOTMsMy40MzlBMS40NDIsMS40NDIsMCwwLDEsNC42NjEsMjAuOTM3Wk0xOS4zMzcsNC4wNjJhLjQyNC40MjQsMCwwLDAtLjE0Mi4wMjRMOS4yNjcsNy41MjVBMi44LDIuOCwwLDAsMCw3LjUyNSw5LjI2Nkw0LjA4NywxOS4yYS42LjYsMCwwLDAsLjcxNy43MThsOS45My0zLjQzOWEyLjgsMi44LDAsMCwwLDEuNzQxLTEuNzQxTDE5LjkxMyw0LjhhLjU1MS41NTEsMCwwLDAtLjE2My0uNTUzQS42MDkuNjA5LDAsMCwwLDE5LjMzNyw0LjA2MlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMlwiLFwiY3lcIjpcIjEyXCIsXCJyXCI6XCIxLjU2M1wifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpQ3JlZGl0Q2FyZDEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNyZWRpdF9DYXJkXzFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS40NCw1LjE0SDQuNTZhMi41LDIuNSwwLDAsMC0yLjUsMi41djguNzJhMi41LDIuNSwwLDAsMCwyLjUsMi41SDE5LjQ0YTIuNSwyLjUsMCwwLDAsMi41LTIuNVY3LjY0QTIuNSwyLjUsMCwwLDAsMTkuNDQsNS4xNFpNMy4wNiw3LjY0YTEuNSwxLjUsMCwwLDEsMS41LTEuNUgxOS40NGExLjUsMS41LDAsMCwxLDEuNSwxLjV2LjVIMy4wNlptMTcuODgsOC43MmExLjUsMS41LDAsMCwxLTEuNSwxLjVINC41NmExLjUsMS41LDAsMCwxLTEuNS0xLjVWOS42NEgyMC45NFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC4wNjMsMTQuMjQ3aC0zYS41LjUsMCwxLDEsMC0xaDNhLjUuNSwwLDEsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjkzNCwxNC4yNWgtNi41YS41LjUsMCwxLDEsMC0xaDYuNWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNyZWRpdENhcmQyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDcmVkaXRfQ2FyZF8yXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNDM3LDE4Ljg1OUg0LjU2M2EyLjUsMi41LDAsMCwxLTIuNS0yLjVWNy42NDFhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE5LjQzN2EyLjUsMi41LDAsMCwxLDIuNSwyLjV2OC43MThBMi41LDIuNSwwLDAsMSwxOS40MzcsMTguODU5Wk00LjU2Myw2LjE0MWExLjUsMS41LDAsMCwwLTEuNSwxLjV2OC43MThhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE5LjQzN2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWNy42NDFhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04LjA2MywxNC4yNDdoLTNhLjUuNSwwLDEsMSwwLTFoM2EuNS41LDAsMSwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguOTM0LDE0LjI0OWgtNi41YS41LjUsMCwwLDEsMC0xaDYuNWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInJlY3RcIixcImF0dHJcIjp7XCJ4XCI6XCIxNi40MzRcIixcInlcIjpcIjcuMTRcIixcIndpZHRoXCI6XCIyXCIsXCJoZWlnaHRcIjpcIjRcIixcInJ4XCI6XCIwLjVcIixcInRyYW5zZm9ybVwiOlwidHJhbnNsYXRlKDguMjkzIDI2LjU3NCkgcm90YXRlKC05MClcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUNyZWRpdENhcmRPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkNyZWRpdF9DYXJkX09mZlwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjk0LDcuNjR2OS4zYS41LjUsMCwwLDEtLjUuNS41LjUsMCwwLDEtLjUtLjVWOS42NEgxMy40OWEuNzUuNzUsMCwwLDEsMC0xLjVoNy40NXYtLjVhMS41LDEuNSwwLDAsMC0xLjUtMS41SDkuODlhLjUuNSwwLDAsMSwwLTFoOS41NUEyLjUsMi41LDAsMCwxLDIxLjk0LDcuNjRaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTguMDY0LDE0LjI0NmgtM2EuNS41LDAsMCwxLDAtMWgzYS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC45MzUsMTQuMjQ4aC0uOTQ0YS41LjUsMCwwLDEsMC0xaC45NDRhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4Ljc2LDE4LjA1LDQuMDEsMy4zYy0uNDYtLjQ2LTEuMTcuMjUtLjcxLjdMNC40NCw1LjE0YTIuNSwyLjUsMCwwLDAtMi4zOCwyLjV2OC43MmEyLjUsMi41LDAsMCwwLDIuNSwyLjVoMTMuNkwyMCwyMC43Yy40NS40NiwxLjE2LS4yNS43LS43MVpNMy4wNiw3LjY0YTEuNSwxLjUsMCwwLDEsMS41LTEuNWguODhjLjY2LjY3LDEuMzMsMS4zNCwyLDJIMy4wNlptOS40OSw1LjYxaC0uMTJhLjUuNSwwLDAsMC0uNS41LjUwOC41MDgsMCwwLDAsLjUuNWgxLjEybDMuNjEsMy42MUg0LjU2YTEuNSwxLjUsMCwwLDEtMS41LTEuNVY5LjY0SDguOTRaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lDcm9wIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJDcm9wXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUuNjI0LDYuNjIzbC0yLjA3NSwtMGMtMC4yNzYsLTAgLTAuNSwtMC4yMjQgLTAuNSwtMC41Yy0wLC0wLjI3NiAwLjIyNCwtMC41IDAuNSwtMC41bDIuMDc1LC0wbDAsLTIuMDczYzAsLTAuMjc2IDAuMjI0LC0wLjUgMC41LC0wLjVjMC4yNzYsMCAwLjUsMC4yMjQgMC41LDAuNWwwLDIuMDczbDkuMTkxLC0wYzEuNDE0LC0wIDIuNTYxLDEuMTQ3IDIuNTYxLDIuNTYxbC0wLDkuMTkzbDIuMDc1LDBjMC4yNzYsMCAwLjUsMC4yMjQgMC41LDAuNWMwLDAuMjc2IC0wLjIyNCwwLjUgLTAuNSwwLjVsLTIuMDc1LDBsLTAsMi4wNzNjLTAsMC4yNzYgLTAuMjI0LDAuNSAtMC41LDAuNWMtMC4yNzYsLTAgLTAuNSwtMC4yMjQgLTAuNSwtMC41bC0wLC0yLjA3M2wtOS4xOTEsMGMtMS40MTQsMCAtMi41NjEsLTEuMTQ3IC0yLjU2MSwtMi41NjFsMCwtOS4xOTNabTExLjc1MiwxMC43NTRsLTAsLTkuMTkzYy0wLC0wLjg2MiAtMC42OTksLTEuNTYxIC0xLjU2MSwtMS41NjFsLTkuMTkxLC0wbDAsOS4xOTNjMCwwLjg2MiAwLjY5OSwxLjU2MSAxLjU2MSwxLjU2MWw5LjE5MSwwWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaURhcmsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkRhcmtcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuNzQxLDIwLjkxN2E5LjM4OSw5LjM4OSwwLDAsMS0xLjM5NS0uMTA1LDkuMTQxLDkuMTQxLDAsMCwxLTEuNDY1LTE3LjcsMS4xNzcsMS4xNzcsMCwwLDEsMS4yMS4yODEsMS4yNzMsMS4yNzMsMCwwLDEsLjMyNSwxLjI5Myw4LjExMiw4LjExMiwwLDAsMC0uMzUzLDIuNjgsOC4yNjYsOC4yNjYsMCwwLDAsNC4zNjYsNi44NTcsNy42MjgsNy42MjgsMCwwLDAsMy43MTEuOTkzLDEuMjQyLDEuMjQyLDAsMCwxLC45OTQsMS45NjNoMEE5LjE0OCw5LjE0OCwwLDAsMSwxMi43NDEsMjAuOTE3Wk0xMC4yNjEsNC4wNWEuMjExLjIxMSwwLDAsMC0uMDY1LjAxMSw4LjEzNyw4LjEzNywwLDEsMCw5LjEzMSwxMi41MjZoMGEuMjI0LjIyNCwwLDAsMCwuMDEzLS4yMzUuMjMyLjIzMiwwLDAsMC0uMjA2LS4xMzZBOC42MTksOC42MTksMCwwLDEsMTQuOTQ2LDE1LjFhOS4yNzQsOS4yNzQsMCwwLDEtNC44ODMtNy43LDkuMTIzLDkuMTIzLDAsMCwxLC40LTMuMDA4LjI4Ni4yODYsMCwwLDAtLjA2OS0uMjg1QS4xODQuMTg0LDAsMCwwLDEwLjI2MSw0LjA1WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaURhdGFiYXNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJEYXRhYmFzZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyLjA2Yy0zLjUzLDAtNi4xOCwxLjIzLTYuMTgsMi44NlYxOS4wOGMwLDEuNjMsMi42NSwyLjg2LDYuMTgsMi44NnM2LjE4LTEuMjMsNi4xOC0yLjg2VjQuOTJDMTguMTgsMy4yOSwxNS41MiwyLjA2LDEyLDIuMDZabTUuMTgsMTcuMDJjMCwuNzgtMS45NywxLjg2LTUuMTgsMS44NnMtNS4xOC0xLjA4LTUuMTgtMS44NlYxNS45NkE5LjM0OSw5LjM0OSwwLDAsMCwxMiwxNy4yMmE5LjM3Myw5LjM3MywwLDAsMCw1LjE4LTEuMjZabTAtNC43MmMwLC43OC0xLjk3LDEuODYtNS4xOCwxLjg2cy01LjE4LTEuMDgtNS4xOC0xLjg2VjExLjI0QTkuMzQ5LDkuMzQ5LDAsMCwwLDEyLDEyLjVhOS4zNzMsOS4zNzMsMCwwLDAsNS4xOC0xLjI2Wm0wLTQuNzJjMCwuNzgtMS45NywxLjg2LTUuMTgsMS44NlM2LjgyLDEwLjQyLDYuODIsOS42NFY2LjUyQTkuMzQ5LDkuMzQ5LDAsMCwwLDEyLDcuNzhhOS4zNzMsOS4zNzMsMCwwLDAsNS4xOC0xLjI2Wk0xMiw2Ljc4Yy0zLjIxLDAtNS4xOC0xLjA4LTUuMTgtMS44NlM4Ljc5LDMuMDYsMTIsMy4wNnM1LjE4LDEuMDgsNS4xOCwxLjg2UzE1LjIxLDYuNzgsMTIsNi43OFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lEZWxpdmVyeVRydWNrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJEZWxpdmVyeV9UcnVja1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjQ3LDExLjE4NWwtMS4wMy0xLjQzYTIuNSwyLjUsMCwwLDAtMi4wMy0xLjA1SDE0LjAzVjYuNTY1YTIuNSwyLjUsMCwwLDAtMi41LTIuNUg0LjU2YTIuNTA3LDIuNTA3LDAsMCwwLTIuNSwyLjV2OS45NGExLjUsMS41LDAsMCwwLDEuNSwxLjVINC43OGEyLjI0MiwyLjI0MiwwLDAsMCw0LjQ0LDBoNS41NmEyLjI0MiwyLjI0MiwwLDAsMCw0LjQ0LDBoMS4yMmExLjUsMS41LDAsMCwwLDEuNS0xLjV2LTMuODdBMi41MDgsMi41MDgsMCwwLDAsMjEuNDcsMTEuMTg1Wk03LDE4LjkzNWExLjI1LDEuMjUsMCwxLDEsMS4yNS0xLjI1QTEuMjUsMS4yNSwwLDAsMSw3LDE4LjkzNVptNi4wMy0xLjkzSDkuMTVhMi4yNTcsMi4yNTcsMCwwLDAtNC4zLDBIMy41NmEuNS41LDAsMCwxLS41LS41VjYuNTY1YTEuNSwxLjUsMCwwLDEsMS41LTEuNWg2Ljk3YTEuNSwxLjUsMCwwLDEsMS41LDEuNVpNMTcsMTguOTM1YTEuMjUsMS4yNSwwLDEsMSwxLjI1LTEuMjVBMS4yNSwxLjI1LDAsMCwxLDE3LDE4LjkzNVptMy45NC0yLjQzYS41LjUsMCwwLDEtLjUuNUgxOS4xNWEyLjI1NywyLjI1NywwLDAsMC00LjMsMGgtLjgydi03LjNoNC4zOGExLjUxNiwxLjUxNiwwLDAsMSwxLjIyLjYzbDEuMDMsMS40M2ExLjUyNywxLjUyNywwLDAsMSwuMjguODdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjAyOSwxMi4yMDVoLTJhLjUuNSwwLDAsMSwwLTFoMmEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaURlc2t0b3BNb3VzZTEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkRlc2t0b3BfTW91c2VfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMy40MzUsMi4wNjVoLTIuODdhNi41LDYuNSwwLDAsMC02LjUsNi41djYuODdhNi41LDYuNSwwLDAsMCw2LjUsNi41aDIuODdhNi41LDYuNSwwLDAsMCw2LjUtNi41VjguNTY1QTYuNSw2LjUsMCwwLDAsMTMuNDM1LDIuMDY1Wm0tOC4zNyw2LjVhNS41MSw1LjUxLDAsMCwxLDUuNS01LjVoLjk0djYuNDRINS4wNjVabTEzLjg3LDYuODdhNS41LDUuNSwwLDAsMS01LjUsNS41aC0yLjg3YTUuNSw1LjUsMCwwLDEtNS41LTUuNXYtNC45M2gxMy44N1ptMC01LjkzaC02LjQzVjMuMDY1aC45M2E1LjUsNS41LDAsMCwxLDUuNSw1LjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpRGVza3RvcE1vdXNlMiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiRGVza3RvcF9Nb3VzZV8yXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuNDM3LDIxLjkzOEgxMC41NjNhNi41MDgsNi41MDgsMCwwLDEtNi41LTYuNVY4LjU2MmE2LjUwOCw2LjUwOCwwLDAsMSw2LjUtNi41aDIuODc0YTYuNTA4LDYuNTA4LDAsMCwxLDYuNSw2LjV2Ni44NzZBNi41MDgsNi41MDgsMCwwLDEsMTMuNDM3LDIxLjkzOFpNMTAuNTYzLDMuMDYyYTUuNTA2LDUuNTA2LDAsMCwwLTUuNSw1LjV2Ni44NzZhNS41MDYsNS41MDYsMCwwLDAsNS41LDUuNWgyLjg3NGE1LjUwNiw1LjUwNiwwLDAsMCw1LjUtNS41VjguNTYyYTUuNTA2LDUuNTA2LDAsMCwwLTUuNS01LjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjUsNi41NDF2NGEuNS41LDAsMCwwLDEsMHYtNGEuNS41LDAsMCwwLTEsMFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaURlc2t0b3AgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkRlc2t0b3BcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM1LDMuMDY1SDUuNTY1YTIuNSwyLjUsMCwwLDAtMi41LDIuNXY4Ljg3YTIuNSwyLjUsMCwwLDAsMi41LDIuNWgyLjkxbC0uMzcsM0g3YS41LjUsMCwwLDAsMCwxaDEwLjAxYS41LjUsMCwwLDAsMC0xSDE1LjlsLS4zNy0zaDIuOTFhMi41LDIuNSwwLDAsMCwyLjUtMi41VjUuNTY1QTIuNSwyLjUsMCwwLDAsMTguNDM1LDMuMDY1Wm0tOS4zMywxNi44Ny4zOC0zaDUuMDNsLjM3LDNabTEwLjgzLTUuNWExLjUsMS41LDAsMCwxLTEuNSwxLjVINS41NjVhMS41LDEuNSwwLDAsMS0xLjUtMS41di0uNWgxNS44N1ptMC0xLjVINC4wNjVWNS41NjVhMS41LDEuNSwwLDAsMSwxLjUtMS41aDEyLjg3YTEuNSwxLjUsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lEaXNjb3VudDEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkRpc2NvdW50XzFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuOTUzLDEyYzAsMC41OTEgLTAuMzQ2LDEuMTI0IC0wLjgzOSwxLjYxYy0wLjI5NSwwLjI5IC0wLjYzOSwwLjU2OCAtMC45NDIsMC44NWMtMC4yNDIsMC4yMjUgLTAuNDYsMC40NDYgLTAuNTYyLDAuNjkyYy0wLjEwNywwLjI1NyAtMC4xMTQsMC41NzYgLTAuMTA1LDAuOTEzYzAuMDExLDAuNDE2IDAuMDU2LDAuODU1IDAuMDU5LDEuMjY1YzAuMDA2LDAuNjkxIC0wLjEyMywxLjMwNCAtMC41MjYsMS43MDhjLTAuNDA0LDAuNDAzIC0xLjAxNywwLjUzMiAtMS43MDgsMC41MjZjLTAuNDEsLTAuMDA0IC0wLjg0OSwtMC4wNDggLTEuMjY0LC0wLjA1OWMtMC4zMzcsLTAuMDA5IC0wLjY1NywtMC4wMDIgLTAuOTE0LDAuMTA1Yy0wLjI0NiwwLjEwMiAtMC40NjcsMC4zMiAtMC42OTIsMC41NjJjLTAuMjgyLDAuMzAzIC0wLjU2LDAuNjQ3IC0wLjg1LDAuOTQxYy0wLjQ4NiwwLjQ5NCAtMS4wMTksMC44NCAtMS42MSwwLjg0Yy0wLjU5MSwtMCAtMS4xMjQsLTAuMzQ2IC0xLjYxLC0wLjg0Yy0wLjI5LC0wLjI5NCAtMC41NjgsLTAuNjM4IC0wLjg1LC0wLjk0MWMtMC4yMjUsLTAuMjQyIC0wLjQ0NywtMC40NiAtMC42OTIsLTAuNTYyYy0wLjI1NywtMC4xMDcgLTAuNTc3LC0wLjExNCAtMC45MTMsLTAuMTA1Yy0wLjQxNiwwLjAxMSAtMC44NTUsMC4wNTUgLTEuMjY1LDAuMDU5Yy0wLjY5MSwwLjAwNiAtMS4zMDUsLTAuMTIzIC0xLjcwOCwtMC41MjZjLTAuNDA0LC0wLjQwNCAtMC41MzIsLTEuMDE3IC0wLjUyNiwtMS43MDhjMC4wMDMsLTAuNDEgMC4wNDgsLTAuODQ5IDAuMDU5LC0xLjI2NWMwLjAwOSwtMC4zMzcgMC4wMDIsLTAuNjU2IC0wLjEwNSwtMC45MTRjLTAuMTAyLC0wLjI0NSAtMC4zMiwtMC40NjYgLTAuNTYyLC0wLjY5MWMtMC4zMDIsLTAuMjgyIC0wLjY0NiwtMC41NiAtMC45NDEsLTAuODVjLTAuNDkzLC0wLjQ4NiAtMC44NCwtMS4wMTkgLTAuODQsLTEuNjFjMCwtMC41OTEgMC4zNDcsLTEuMTI0IDAuODQsLTEuNjFjMC4yOTUsLTAuMjkgMC42MzksLTAuNTY4IDAuOTQxLC0wLjg1YzAuMjQyLC0wLjIyNSAwLjQ2LC0wLjQ0NiAwLjU2MiwtMC42OTFjMC4xMDcsLTAuMjU4IDAuMTE0LC0wLjU3NyAwLjEwNSwtMC45MTRjLTAuMDExLC0wLjQxNiAtMC4wNTYsLTAuODU1IC0wLjA1OSwtMS4yNjVjLTAuMDA2LC0wLjY5MSAwLjEyMiwtMS4zMDQgMC41MjYsLTEuNzA4YzAuNDAzLC0wLjQwMyAxLjAxNywtMC41MzIgMS43MDgsLTAuNTI2YzAuNDEsMC4wMDQgMC44NDksMC4wNDggMS4yNjUsMC4wNTljMC4zMzYsMC4wMDkgMC42NTYsMC4wMDIgMC45MTMsLTAuMTA1YzAuMjQ1LC0wLjEwMiAwLjQ2NywtMC4zMiAwLjY5MiwtMC41NjJjMC4yODIsLTAuMzAzIDAuNTYsLTAuNjQ3IDAuODUsLTAuOTQxYzAuNDg2LC0wLjQ5NCAxLjAxOSwtMC44NCAxLjYxLC0wLjg0YzAuNTkxLDAgMS4xMjQsMC4zNDYgMS42MSwwLjg0YzAuMjksMC4yOTQgMC41NjgsMC42MzggMC44NSwwLjk0MWMwLjIyNSwwLjI0MiAwLjQ0NiwwLjQ2IDAuNjkyLDAuNTYyYzAuMjU3LDAuMTA3IDAuNTc3LDAuMTE0IDAuOTE0LDAuMTA1YzAuNDE1LC0wLjAxMSAwLjg1NCwtMC4wNTUgMS4yNjQsLTAuMDU5YzAuNjkxLC0wLjAwNiAxLjMwNCwwLjEyMyAxLjcwOCwwLjUyNmMwLjQwMywwLjQwNCAwLjUzMiwxLjAxNyAwLjUyNiwxLjcwOGMtMC4wMDMsMC40MSAtMC4wNDgsMC44NDkgLTAuMDU5LDEuMjY1Yy0wLjAwOSwwLjMzNyAtMC4wMDIsMC42NTYgMC4xMDUsMC45MTNjMC4xMDIsMC4yNDYgMC4zMiwwLjQ2NyAwLjU2MiwwLjY5MmMwLjMwMywwLjI4MiAwLjY0NywwLjU2IDAuOTQyLDAuODVjMC40OTMsMC40ODYgMC44MzksMS4wMTkgMC44MzksMS42MVptLTEsMGMwLC0wLjE4OCAtMC4wODgsLTAuMzU1IC0wLjIwNiwtMC41MThjLTAuMTY0LC0wLjIyNiAtMC4zODgsLTAuNDM3IC0wLjYyMiwtMC42NDZjLTAuNTgzLC0wLjUyMSAtMS4yMDUsLTEuMDQgLTEuNDM5LC0xLjYwNGMtMC4yNDIsLTAuNTg1IC0wLjE3NywtMS4zOTkgLTAuMTM2LC0yLjE3OGMwLjAxNywtMC4zMTUgMC4wMjcsLTAuNjIyIC0wLjAxNSwtMC44OTVjLTAuMDI5LC0wLjE5MSAtMC4wOCwtMC4zNjUgLTAuMjA0LC0wLjQ4OWMtMC4xMjUsLTAuMTI1IC0wLjI5OSwtMC4xNzYgLTAuNDksLTAuMjA1Yy0wLjI3MywtMC4wNDIgLTAuNTgsLTAuMDMyIC0wLjg5NSwtMC4wMTVjLTAuNzc5LDAuMDQxIC0xLjU5MywwLjEwNiAtMi4xNzcsLTAuMTM2Yy0wLjU2NSwtMC4yMzQgLTEuMDg0LC0wLjg1NSAtMS42MDUsLTEuNDM5Yy0wLjIwOSwtMC4yMzQgLTAuNDIsLTAuNDU4IC0wLjY0NiwtMC42MjJjLTAuMTYzLC0wLjExOCAtMC4zMywtMC4yMDYgLTAuNTE4LC0wLjIwNmMtMC4xODcsMCAtMC4zNTUsMC4wODggLTAuNTE4LDAuMjA2Yy0wLjIyNiwwLjE2NCAtMC40MzcsMC4zODggLTAuNjQ2LDAuNjIyYy0wLjUyMSwwLjU4NCAtMS4wNCwxLjIwNSAtMS42MDUsMS40MzljLTAuNTg0LDAuMjQyIC0xLjM5OCwwLjE3NyAtMi4xNzcsMC4xMzZjLTAuMzE1LC0wLjAxNyAtMC42MjIsLTAuMDI3IC0wLjg5NSwwLjAxNWMtMC4xOTIsMC4wMjkgLTAuMzY1LDAuMDggLTAuNDksMC4yMDVjLTAuMTI1LDAuMTI0IC0wLjE3NSwwLjI5OCAtMC4yMDQsMC40ODljLTAuMDQyLDAuMjczIC0wLjAzMiwwLjU4IC0wLjAxNiwwLjg5NWMwLjA0MiwwLjc3OSAwLjEwNywxLjU5MyAtMC4xMzUsMi4xNzdjLTAuMjM0LDAuNTY1IC0wLjg1NSwxLjA4NCAtMS40MzksMS42MDVjLTAuMjM0LDAuMjA5IC0wLjQ1OCwwLjQyIC0wLjYyMiwwLjY0NmMtMC4xMTgsMC4xNjMgLTAuMjA2LDAuMzMgLTAuMjA2LDAuNTE4YzAsMC4xODggMC4wODgsMC4zNTUgMC4yMDYsMC41MThjMC4xNjQsMC4yMjYgMC4zODgsMC40MzcgMC42MjIsMC42NDZjMC41ODQsMC41MjEgMS4yMDUsMS4wNCAxLjQzOSwxLjYwNWMwLjI0MiwwLjU4NCAwLjE3NywxLjM5OCAwLjEzNSwyLjE3N2MtMC4wMTYsMC4zMTUgLTAuMDI2LDAuNjIyIDAuMDE2LDAuODk1YzAuMDI5LDAuMTkxIDAuMDc5LDAuMzY1IDAuMjA0LDAuNDg5YzAuMTI1LDAuMTI1IDAuMjk4LDAuMTc2IDAuNDksMC4yMDVjMC4yNzMsMC4wNDIgMC41OCwwLjAzMiAwLjg5NSwwLjAxNWMwLjc3OSwtMC4wNDEgMS41OTMsLTAuMTA2IDIuMTc3LDAuMTM2YzAuNTY1LDAuMjM0IDEuMDg0LDAuODU1IDEuNjA1LDEuNDM5YzAuMjA5LDAuMjM0IDAuNDIsMC40NTggMC42NDYsMC42MjJjMC4xNjMsMC4xMTggMC4zMzEsMC4yMDYgMC41MTgsMC4yMDZjMC4xODgsLTAgMC4zNTUsLTAuMDg4IDAuNTE4LC0wLjIwNmMwLjIyNiwtMC4xNjQgMC40MzcsLTAuMzg4IDAuNjQ2LC0wLjYyMmMwLjUyMSwtMC41ODQgMS4wNCwtMS4yMDUgMS42MDUsLTEuNDM5YzAuNTg0LC0wLjI0MiAxLjM5OCwtMC4xNzcgMi4xNzcsLTAuMTM2YzAuMzE1LDAuMDE3IDAuNjIyLDAuMDI3IDAuODk1LC0wLjAxNWMwLjE5MSwtMC4wMjkgMC4zNjUsLTAuMDggMC40OSwtMC4yMDVjMC4xMjQsLTAuMTI0IDAuMTc1LC0wLjI5OCAwLjIwNCwtMC40ODljMC4wNDIsLTAuMjczIDAuMDMyLC0wLjU4IDAuMDE1LC0wLjg5NWMtMC4wNDEsLTAuNzc5IC0wLjEwNiwtMS41OTMgMC4xMzYsLTIuMTc4YzAuMjM0LC0wLjU2NCAwLjg1NiwtMS4wODMgMS40MzksLTEuNjA0YzAuMjM0LC0wLjIwOSAwLjQ1OCwtMC40MiAwLjYyMiwtMC42NDZjMC4xMTgsLTAuMTYzIDAuMjA2LC0wLjMzIDAuMjA2LC0wLjUxOFptLTEwLjUzMSwtMS43NjJjLTAuMzk2LDAuMzk2IC0xLjAzOSwwLjM5NiAtMS40MzUsLTBjLTAuMzk2LC0wLjM5NiAtMC4zOTYsLTEuMDQgLTAsLTEuNDM2YzAuMzk2LC0wLjM5NiAxLjAzOSwtMC4zOTYgMS40MzUsMGMwLjM5NiwwLjM5NiAwLjM5NiwxLjA0IDAsMS40MzZabTQuNDcxLC0xLjgzOGMwLjE5NSwtMC4xOTUgMC41MTIsLTAuMTk1IDAuNzA3LDBjMC4xOTUsMC4xOTUgMC4xOTUsMC41MTIgLTAsMC43MDdsLTYuNDkzLDYuNDkzYy0wLjE5NSwwLjE5NSAtMC41MTIsMC4xOTUgLTAuNzA3LDBjLTAuMTk1LC0wLjE5NSAtMC4xOTUsLTAuNTEyIC0wLC0wLjcwN2w2LjQ5MywtNi40OTNabS0xLjMxNSw1LjM2M2MwLjM5NiwtMC4zOTYgMS4wMzksLTAuMzk2IDEuNDM1LDBjMC4zOTYsMC4zOTYgMC4zOTYsMS4wNCAwLDEuNDM2Yy0wLjM5NiwwLjM5NiAtMS4wMzksMC4zOTYgLTEuNDM1LC0wYy0wLjM5NywtMC4zOTYgLTAuMzk3LC0xLjA0IC0wLC0xLjQzNlpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lEb2xsYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkRvbGxhclwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLDIxLjkzNEE5LjkzNCw5LjkzNCwwLDEsMSwyMS45MzQsMTIsOS45NDUsOS45NDUsMCwwLDEsMTIsMjEuOTM0Wk0xMiwzLjA2NkE4LjkzNCw4LjkzNCwwLDEsMCwyMC45MzQsMTIsOC45NDQsOC45NDQsMCwwLDAsMTIsMy4wNjZaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LjUsMTMuNWEyLjAwNiwyLjAwNiwwLDAsMS0yLDJ2MS4wMWEuNS41LDAsMCwxLTEsMFYxNS41SDEwLjI1YS41LjUsMCwwLDEsMC0xSDEyLjVhMSwxLDAsMCwwLDAtMmgtMWEyLDIsMCwwLDEsMC00VjcuNDlhLjUuNSwwLDAsMSwxLDBWOC41aDEuMjVhLjUuNSwwLDAsMSwwLDFIMTEuNWExLDEsMCwwLDAsMCwyaDFBMi4wMDYsMi4wMDYsMCwwLDEsMTQuNSwxMy41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpRHJvcGxldCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiRHJvcGxldFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45MzZBNy4yNyw3LjI3LDAsMCwxLDcuNjU2LDIwLjVjLTIuMzMyLTEuNzI0LTMuMTg3LTUuNi0xLjg2OC04LjQ2bDQuODc1LTkuMTczQTEuNTE1LDEuNTE1LDAsMCwxLDEyLDIuMDY0aDBhMS41MTIsMS41MTIsMCwwLDEsMS4zMzcuODA1TDE4LjIsMTIuMDE3YzEuMzMxLDIuODg4LjQ3NSw2Ljc2Mi0xLjg1Niw4LjQ4NUE3LjI3NCw3LjI3NCwwLDAsMSwxMiwyMS45MzZaTTEyLDMuMDY0YS41MS41MSwwLDAsMC0uNDU2LjI3NEw2LjY4MywxMi40ODVjLTEuMSwyLjQtLjM3Niw1Ljc3NywxLjU2OCw3LjIxMmE2LjQsNi40LDAsMCwwLDcuNSwwYzEuOTQyLTEuNDM1LDIuNjY4LTQuODE3LDEuNTU0LTcuMjM3bC00Ljg1LTkuMTIyQS41MDcuNTA3LDAsMCwwLDEyLDMuMDY0WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUR1bWJiZWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJEdW1iYmVsbFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMS40MzUsMTEuNWgtLjM4VjguMTJhMS42MjYsMS42MjYsMCwwLDAtMS42Mi0xLjYyaC0uNjNWNi4xMmExLjYyNSwxLjYyNSwwLDAsMC0zLjI1LDBWMTEuNUg4LjQ0NVY2LjEyYTEuNjI1LDEuNjI1LDAsMCwwLTMuMjUsMFY2LjVoLS42M2ExLjYyLDEuNjIsMCwwLDAtMS42MiwxLjYyVjExLjVoLS4zOGEuNS41LDAsMSwwLDAsMWguMzh2My4zN2ExLjYyMiwxLjYyMiwwLDAsMCwxLjYyLDEuNjNINS4ydi4zN2ExLjYyNSwxLjYyNSwwLDEsMCwzLjI1LDBWMTIuNWg3LjExdjUuMzdhMS42MjUsMS42MjUsMCwxLDAsMy4yNSwwVjE3LjVoLjYzYTEuNjI4LDEuNjI4LDAsMCwwLDEuNjItMS42M1YxMi41aC4zOGEuNS41LDAsMSwwLDAtMVpNNS4yLDE2LjVoLS42M2EuNjI1LjYyNSwwLDAsMS0uNjItLjYzVjguMTJhLjYyMy42MjMsMCwwLDEsLjYyLS42Mkg1LjJabTIuMjUsMS4zN2EuNjM0LjYzNCwwLDAsMS0uNjMuNjMuNjI1LjYyNSwwLDAsMS0uNjItLjYzVjYuMTJhLjYyMy42MjMsMCwwLDEsLjYyLS42Mi42MzIuNjMyLDAsMCwxLC42My42MlptMTAuMzYsMGEuNjI1LjYyNSwwLDEsMS0xLjI1LDBWNi4xMmEuNjI1LjYyNSwwLDAsMSwxLjI1LDBabTIuMjUtMmEuNjI1LjYyNSwwLDAsMS0uNjIuNjNoLS42M3YtOWguNjNhLjYyMy42MjMsMCwwLDEsLjYyLjYyWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUVkaXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkVkaXRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjU0OCwyMC45MzhoMTYuOWEuNS41LDAsMCwwLDAtMUgzLjU0OGEuNS41LDAsMCwwLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOS43MSwxNy4xOGEyLjU4NywyLjU4NywwLDAsMCwxLjEyLS42NWw5LjU0LTkuNTRhMS43NSwxLjc1LDAsMCwwLDAtMi40N2wtLjk0LS45M2ExLjc4OCwxLjc4OCwwLDAsMC0yLjQ3LDBMNy40MiwxMy4xMmEyLjQ3MywyLjQ3MywwLDAsMC0uNjQsMS4xMkw2LjA0LDE3YS43MzcuNzM3LDAsMCwwLC4xOS43Mi43NjcuNzY3LDAsMCwwLC41My4yMlptLjQxLTEuMzZhMS40NjgsMS40NjgsMCwwLDEtLjY3LjM5bC0uOTcuMjYtMS0xLC4yNi0uOTdhMS41MjEsMS41MjEsMCwwLDEsLjM5LS42N2wuMzgtLjM3LDEuOTksMS45OVptMS4wOS0xLjA4TDkuMjIsMTIuNzVsNi43My02LjczLDEuOTksMS45OVptOC40NS04LjQ1TDE4LjY1LDcuMywxNi42Niw1LjMxbDEuMDEtMS4wMmEuNzQ4Ljc0OCwwLDAsMSwxLjA2LDBsLjkzLjk0QS43NTQuNzU0LDAsMCwxLDE5LjY2LDYuMjlaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lFcmFzZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkVyYXNlclwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40NTQsMTkuMDI4aC03LjAxbDYuNjItNi42M2EyLjkzNSwyLjkzNSwwLDAsMCwuODctMi4wOSwyLjg0NCwyLjg0NCwwLDAsMC0uODctMi4wNWwtMy40Mi0zLjQ0YTIuOTMsMi45MywwLDAsMC00LjEzLjAxTDMuOTM0LDEzLjRhMi45NDYsMi45NDYsMCwwLDAsMCw0LjE0bDEuNDgsMS40OUgzLjU1NGEuNS41LDAsMCwwLDAsMWgxNi45QS41LjUsMCwwLDAsMjAuNDU0LDE5LjAyOFptLTcuMjQtMTMuNWExLjk1NiwxLjk1NiwwLDAsMSwyLjczLDBsMy40MiwzLjQ0YTEuODY4LDEuODY4LDAsMCwxLC41NywxLjM1LDEuOTMsMS45MywwLDAsMS0uNTcsMS4zN2wtNS42NCw1LjY0LTYuMTUtNi4xNlptLTEuMTksMTMuNWgtNS4ybC0yLjE4LTIuMmExLjkzMSwxLjkzMSwwLDAsMSwwLTIuNzJsMi4yMy0yLjIzLDYuMTUsNi4xNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lFeHBvcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkV4cG9ydFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUuNTUyLDIwLjk2OGEyLjU3NywyLjU3NywwLDAsMS0yLjUtMi43M2MtLjAxMi0yLjE1MywwLTQuMzA2LDAtNi40NTlhLjUuNSwwLDAsMSwxLDBjMCwyLjItLjAzMiw0LjQsMCw2LjYuMDE2LDEuMTA3Ljg0OCwxLjU4OSwxLjgzOCwxLjU4OUgxOC4zNTNBMS41NDYsMS41NDYsMCwwLDAsMTkuODI1LDE5YTMuMDIzLDMuMDIzLDAsMCwwLC4xLTEuMDYxVjExLjc3OWgwYS41LjUsMCwwLDEsMSwwYzAsMi4yMjQuMDg1LDQuNDY1LDAsNi42ODdhMi41NjcsMi41NjcsMCwwLDEtMi42NywyLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjMzNywzLjE3NmEuNDU1LjQ1NSwwLDAsMC0uMzExLS4xMzhjLS4wMTUsMC0uMDI4LDAtLjA0My0uMDA2cy0uMDI3LDAtLjA0MS4wMDZhLjQ1Ny40NTcsMCwwLDAtLjMxMi4xMzhMNy45NjEsNi44NDVhLjUuNSwwLDAsMCwuNzA3LjcwN2wyLjgxNi0yLjgxNVYxNS40NzlhLjUuNSwwLDAsMCwxLDBWNC43MzdMMTUuMyw3LjU1MmEuNS41LDAsMCwwLC43MDctLjcwN1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUZhY2VGcm93biAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiRmFjZV9Gcm93blwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLDIxLjk0MkE5Ljk0Miw5Ljk0MiwwLDEsMSwyMS45NDIsMTIsOS45NTMsOS45NTMsMCwwLDEsMTIsMjEuOTQyWk0xMiwzLjA1OEE4Ljk0Miw4Ljk0MiwwLDEsMCwyMC45NDIsMTIsOC45NTIsOC45NTIsMCwwLDAsMTIsMy4wNThaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjIwNiwxNi40ODFhNi4wMzMsNi4wMzMsMCwwLDAtMTAuNDEyLDAsLjUuNSwwLDAsMCwuODYzLjUsNS4wMzMsNS4wMzMsMCwwLDEsOC42ODUsMCwuNS41LDAsMCwwLC44NjQtLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiOVwiLFwiY3lcIjpcIjkuMDExXCIsXCJyXCI6XCIxLjI1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTVcIixcImN5XCI6XCI5LjAxMVwiLFwiclwiOlwiMS4yNVwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpRmFjZU1laCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiRmFjZV9NZWhcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45NDJBOS45NDIsOS45NDIsMCwxLDEsMjEuOTQyLDEyLDkuOTUzLDkuOTUzLDAsMCwxLDEyLDIxLjk0MlpNMTIsMy4wNThBOC45NDIsOC45NDIsMCwxLDAsMjAuOTQyLDEyLDguOTUyLDguOTUyLDAsMCwwLDEyLDMuMDU4WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjkuMDAxXCIsXCJjeVwiOlwiOC45OVwiLFwiclwiOlwiMS4yNVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE1LjAwMVwiLFwiY3lcIjpcIjguOTlcIixcInJcIjpcIjEuMjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC40MzgsMTUuOTM5aDcuMTI1YS41LjUsMCwwLDAsMC0xSDguNDM4YS41LjUsMCwwLDAsMCwxWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpRmFjZVNtaWxlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJGYWNlX1NtaWxlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjEuOTQyQTkuOTQyLDkuOTQyLDAsMSwxLDIxLjk0MiwxMiw5Ljk1Myw5Ljk1MywwLDAsMSwxMiwyMS45NDJaTTEyLDMuMDU4QTguOTQyLDguOTQyLDAsMSwwLDIwLjk0MiwxMiw4Ljk1Miw4Ljk1MiwwLDAsMCwxMiwzLjA1OFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNjkzLDEzLjc0NGE1LjA0MSw1LjA0MSwwLDAsMS05LjM4NywwYy0uMjQ5LS41OS0xLjExMS0uMDgxLS44NjMuNTA1YTYuMDI2LDYuMDI2LDAsMCwwLDExLjExNCwwYy4yNDctLjU4Ni0uNjE0LTEuMS0uODY0LS41MDVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiOVwiLFwiY3lcIjpcIjkuMDExXCIsXCJyXCI6XCIxLjI1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTVcIixcImN5XCI6XCI5LjAxMVwiLFwiclwiOlwiMS4yNVwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpRmFjZWJvb2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkZhY2Vib29rXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjAyLDQuOTc1QTkuOTMsOS45MywwLDAsMCwyLjA3LDEyLDkuOTM1LDkuOTM1LDAsMCwwLDEyLDIxLjkzNWE5Ljk4LDkuOTgsMCwwLDAsMy44LS43NSwxMC4xODksMTAuMTg5LDAsMCwwLDMuMjItMi4xNiw5LjkzNCw5LjkzNCwwLDAsMCwwLTE0LjA1Wm0tLjcsMTMuMzRBOC45MjEsOC45MjEsMCwwLDEsMTMsMjAuODg1di02LjU2aDEuODhhMSwxLDAsMCwwLDAtMkgxM1Y5LjU4NWExLDEsMCwwLDEsMS0xaDEuMmExLDEsMCwwLDAsMC0ySDEzLjVhMi41LDIuNSwwLDAsMC0yLjUsMi41djMuMjRIOS4xM2ExLDEsMCwxLDAsMCwySDExdjYuNTZhOC45MTksOC45MTksMCwxLDEsOS4yNi01LjQ3QTkuMDYxLDkuMDYxLDAsMCwxLDE4LjMyLDE4LjMxNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lGaWxlT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJGaWxlX09mZlwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQsMy4zMDhhLjUuNSwwLDAsMC0uNy43MWwuNzYuNzZ2MTQuNjdhMi41LDIuNSwwLDAsMCwyLjUsMi41SDE3LjQ0YTIuNDc2LDIuNDc2LDAsMCwwLDIuMjgtMS41MWwuMjguMjhjLjQ1LjQ1LDEuMTYtLjI2LjctLjcxWm0xNC45MiwxNi4zM2ExLjQ5MiwxLjQ5MiwwLDAsMS0xLjQ4LDEuMzFINi41NmExLjUsMS41LDAsMCwxLTEuNS0xLjVWNS43NzhaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzLjM4LDMuMDg4djIuOTJhMi41LDIuNSwwLDAsMCwyLjUsMi41aDMuMDdsLS4wMSw2LjdhLjUuNSwwLDAsMCwxLDBWOC41MzhhMi4wNTcsMi4wNTcsMCwwLDAtLjc1LTEuNDdjLTEuMy0xLjI2LTIuNTktMi41My0zLjg5LTMuOGEzLjkyNCwzLjkyNCwwLDAsMC0xLjQxLTEuMTMsNi41MjMsNi41MjMsMCwwLDAtMS43MS0uMDZINi44MWEuNS41LDAsMCwwLDAsMVptNC44Myw0LjQySDE1Ljg4YTEuNSwxLjUsMCwwLDEtMS41LTEuNVYzLjc2OFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUZpbGVPbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiRmlsZV9PblwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS40ODUsNy4zNWwtNC45Ny00Ljg2YTEuNDY2LDEuNDY2LDAsMCwwLTEuMDUtLjQzaC02LjlhMi41LDIuNSwwLDAsMC0yLjUsMi41VjE5LjQ0YTIuNTA3LDIuNTA3LDAsMCwwLDIuNSwyLjVoMTAuODdhMi41MDcsMi41MDcsMCwwLDAsMi41LTIuNVY4LjQyQTEuNDksMS40OSwwLDAsMCwxOS40ODUsNy4zNVptLTEuMjcuMTVoLTIuMzRhMS41LDEuNSwwLDAsMS0xLjUtMS41VjMuNzVabS43MiwxMS45NGExLjUsMS41LDAsMCwxLTEuNSwxLjVINi41NjVhMS41LDEuNSwwLDAsMS0xLjUtMS41VjQuNTZhMS41LDEuNSwwLDAsMSwxLjUtMS41aDYuODFWNmEyLjUsMi41LDAsMCwwLDIuNSwyLjVoMy4wNlpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lGaWx0ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkZpbHRlclwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC4wMzcsMjAuOTM3YTEuMDE1LDEuMDE1LDAsMCwxLS41MTgtLjE0NWwtMy4zMzQtMmEyLjU1MSwyLjU1MSwwLDAsMS0xLjIzMy0yLjE3NlYxMi4wOTFhMS41MjYsMS41MjYsMCwwLDAtLjI4NC0uODkxTDQuMDEzLDQuNjU4YTEuMDEsMS4wMSwwLDAsMSwuODIyLTEuNmgxNC4zM2ExLjAwOSwxLjAwOSwwLDAsMSwuODIyLDEuNmgwTDE1LjMzMiwxMS4yYTEuNTI3LDEuNTI3LDAsMCwwLS4yODUuODkxdjcuODM0YTEuMDEzLDEuMDEzLDAsMCwxLTEuMDEsMS4wMTJaTTQuODM1LDQuMDYzLDkuNDgyLDEwLjYyYTIuNTE1LDIuNTE1LDAsMCwxLC40NywxLjQ3MXY0LjUyNGExLjU0MywxLjU0MywwLDAsMCwuNzQ3LDEuMzE4bDMuMzM0LDIsLjAxNC03Ljg0M2EyLjUxNiwyLjUxNiwwLDAsMSwuNDcxLTEuNDcxbDQuNjU0LTYuNTQyLDAsMFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lGbGFnMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiRmxhZ18xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjU2NSwzLjE4YS44MDkuODA5LDAsMCwwLS44MS0uMDJsLTEuMTMuNTZjLTEuNjMuODctMy44Mi44My02LjUtLjEzYTkuMTQxLDkuMTQxLDAsMCwwLTcuMy41MmwtLjc2LjQxVjMuNTZhLjUuNSwwLDAsMC0xLDBWMjAuNDRhLjUuNSwwLDAsMCwxLDBWMTUuOWEuODM2LjgzNiwwLDAsMCwuMi0uMDhsMS4wMy0uNTVhOC4xNjMsOC4xNjMsMCwwLDEsNi41LS40NmMyLjk1LDEuMDYsNS40MSwxLjA4LDcuMy4wN2wxLjQ0LS43MmEuNzU5Ljc1OSwwLDAsMCwuNC0uNjZWMy44MkEuNzUxLjc1MSwwLDAsMCwyMC41NjUsMy4xOFptLS42MywxMC4xNi0xLjMxLjY2Yy0xLjYzLjg3LTMuODIuODMtNi41LS4xM2E5LjE0MSw5LjE0MSwwLDAsMC03LjMuNTJsLS43Ni40VjUuNjVMNS4zLDQuOTlhOC4xMjIsOC4xMjIsMCwwLDEsNi41LS40NmMyLjk1LDEuMDYsNS40MSwxLjA4LDcuMjkuMDhsLjg1LS40M1pcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lGbG9wcHlEaXNrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJGbG9wcHlfRGlza1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC4wMTUsNy4wMTVsLTQuMTUtMy4zOWEyLjU0LDIuNTQsMCwwLDAtMS41OC0uNTZINC41NjVhMS41LDEuNSwwLDAsMC0xLjUsMS41djE0Ljg3YTEuNSwxLjUsMCwwLDAsMS41LDEuNWgxNC44N2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWOC45NTVBMi41MDcsMi41MDcsMCwwLDAsMjAuMDE1LDcuMDE1Wk02LjU2NSw0LjA2NWg1Ljc1djEuMzdhLjUuNSwwLDAsMS0uNS41SDcuMDY1YS41LjUsMCwwLDEtLjUtLjVabTAsMTUuODd2LTUuOTNhMS41LDEuNSwwLDAsMSwxLjUtMS41aDcuODdhMS41LDEuNSwwLDAsMSwxLjUsMS41djUuOTNabTEzLjM3LS41YS41LjUsMCwwLDEtLjUuNWgtMXYtNS45M2EyLjUwNywyLjUwNywwLDAsMC0yLjUtMi41SDguMDY1YTIuNSwyLjUsMCwwLDAtMi41LDIuNXY1LjkzaC0xYS41LjUsMCwwLDEtLjUtLjVWNC41NjVhLjUuNSwwLDAsMSwuNS0uNWgxdjEuMzdhMS41LDEuNSwwLDAsMCwxLjUsMS41aDQuNzVhMS41LDEuNSwwLDAsMCwxLjUtMS41VjQuMDY1aC45N2ExLjUxNCwxLjUxNCwwLDAsMSwuOTUuMzRsNC4xNCwzLjM4YTEuNDgzLDEuNDgzLDAsMCwxLC41NiwxLjE3WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUZvbGRlck9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiRm9sZGVyX09mZlwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQuMDEzLDMuM2EuNS41LDAsMCwwLS43MTEuNzFsLjI1LjI1QTIuNDM4LDIuNDM4LDAsMCwwLDIuMDYyLDYuNXYxMWEyLjQ1MywyLjQ1MywwLDAsMCwyLjQ1MSwyLjQ0aDE0LjcybC43NTkuNzZjLjQ2MS40NiwxLjE3MS0uMjUuNzExLS43Wm0uNSwxNS42NEExLjQ1LDEuNDUsMCwwLDEsMy4wNjIsMTcuNVY2LjVhMS40NDQsMS40NDQsMCwwLDEsMS4zMS0xLjQzQzUuODkzLDYuNiw3LjQzMiw4LjE0LDguOTYzLDkuNjZxNC40ODUsNC40ODUsOC45Niw4Ljk3bC4zMS4zMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuNDM4LDE3LjY5M2EuNS41LDAsMCwxLS41LS41VjkuMTc1YTEuNDQ1LDEuNDQ1LDAsMCwwLTEuNDQ1LTEuNDQ0SDEyLjgyN2ExLjUsMS41LDAsMCwxLTEuNDc0LTEuMjI1bC0uMDUtLjI2N2ExLjQ0NSwxLjQ0NSwwLDAsMC0xLjQyLTEuMTc4SDguOGEuNS41LDAsMCwxLDAtMUg5Ljg4M2EyLjQ0NiwyLjQ0NiwwLDAsMSwyLjQsMS45OTRsLjA1LjI2OGEuNS41LDAsMCwwLC40OTEuNDA4aDYuNjY2YTIuNDQ4LDIuNDQ4LDAsMCwxLDIuNDQ1LDIuNDQ0djguMDE4QS41LjUsMCwwLDEsMjEuNDM4LDE3LjY5M1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUZvbGRlck9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJGb2xkZXJfT25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNDM1LDE5Ljk0SDQuNTY1YTIuNSwyLjUsMCwwLDEtMi41LTIuNVY2LjU2YTIuNSwyLjUsMCwwLDEsMi41LTIuNWg1LjI3QTIuNSwyLjUsMCwwLDEsMTIuMjkyLDYuMWwuMDQyLjIyMmEuNS41LDAsMCwwLC40OTEuNDA4aDYuNjFhMi41LDIuNSwwLDAsMSwyLjUsMi41djguMjFBMi41LDIuNSwwLDAsMSwxOS40MzUsMTkuOTRaTTQuNTY1LDUuMDZhMS41LDEuNSwwLDAsMC0xLjUsMS41VjE3LjQ0YTEuNSwxLjUsMCwwLDAsMS41LDEuNWgxNC44N2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWOS4yM2ExLjUsMS41LDAsMCwwLTEuNS0xLjVoLTYuNjFhMS41LDEuNSwwLDAsMS0xLjQ3NC0xLjIyNWwtLjA0Mi0uMjIxQTEuNSwxLjUsMCwwLDAsOS44MzUsNS4wNlpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lGb290YmFsbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiRm9vdGJhbGxcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC4yNzgsNC43NTdhMS42NCwxLjY0LDAsMCwwLTEuMDMtMS4wNCwxMi4yNDgsMTIuMjQ4LDAsMCwwLTE1LjUzLDE1LjUzLDEuNjQsMS42NCwwLDAsMCwxLjA0LDEuMDMsMTIuMzA2LDEyLjMwNiwwLDAsMCwzLjk1LjY2LDEyLjI2MiwxMi4yNjIsMCwwLDAsMTEuNTctMTYuMThabS0xNS4yLDE0LjU4YS43MjUuNzI1LDAsMCwxLS40Mi0uNDIsMTEuMzc5LDExLjM3OSwwLDAsMS0uNTgtNC4yNmw1LjI2LDUuMjZBMTEuMzUyLDExLjM1MiwwLDAsMSw1LjA3OCwxOS4zMzdabTExLjU2LTIuNzFhMTEuMTc5LDExLjE3OSwwLDAsMS02LjAzLDMuMTRsLTYuMzgtNi4zOGExMS4wODMsMTEuMDgzLDAsMCwxLDMuMTQtNi4wMiwxMS4xOTMsMTEuMTkzLDAsMCwxLDYuMDMtMy4xNWw2LjM4LDYuMzhBMTEuMjQ1LDExLjI0NSwwLDAsMSwxNi42MzgsMTYuNjI3Wm0zLjI5LTcuMy01LjI2LTUuMjZjLjIxLDAsLjQxLS4wMS42Mi0uMDFhMTEuMTU0LDExLjE1NCwwLDAsMSwzLjYzLjYxLjY4Mi42ODIsMCwwLDEsLjQyLjQxQTExLjU0MywxMS41NDMsMCwwLDEsMTkuOTI4LDkuMzI3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMC40LDE1LjI1N2EuNS41LDAsMCwwLC4zNS4xNS41MDguNTA4LDAsMCwwLC4zNi0uMTUuNS41LDAsMCwwLDAtLjdsLS40OC0uNDhMMTIsMTIuNzA3bC40OC40OGEuNTE4LjUxOCwwLDAsMCwuMzUuMTQuNTQzLjU0MywwLDAsMCwuMzYtLjE0LjUxMy41MTMsMCwwLDAsMC0uNzFsLS40OC0uNDgsMS4zNy0xLjM3LjQ4LjQ4YS41LjUsMCwwLDAsLjctLjcxTDEzLjYsOC43MzdhLjUuNSwwLDAsMC0uNzEsMCwuNS41LDAsMCwwLDAsLjdsLjQ5LjQ5TDEyLDExLjNsLS40OC0uNDhhLjQ5NS40OTUsMCwxLDAtLjcuN2wuNDguNDgtMS4zNywxLjM4LS40OS0uNDlhLjUuNSwwLDAsMC0uNywwLC41LjUsMCwwLDAsMCwuNzFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lGb3JrQW5kS25pZmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkZvcmtfS25pZmVcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC44MywyLjI1YTYuNDY5LDYuNDY5LDAsMCwwLTQuMzcsNi4xMnYzLjE1YTEuNzg0LDEuNzg0LDAsMCwwLDEuNzgsMS43OGgyLjd2OC4xNGEuNS41LDAsMCwwLC41LjUuNTA4LjUwOCwwLDAsMCwuNS0uNVYyLjU2YS41MDguNTA4LDAsMCwwLS41LS41LjQ2Ny40NjcsMCwwLDAtLjE3LjAzWk0xNi4yNCwxMi4zYS43ODEuNzgxLDAsMCwxLS43OC0uNzhWOC4zN2E1LjQ4Miw1LjQ4MiwwLDAsMSwzLjQ4LTUuMVYxMi4zWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS40NCwyLjA3YS41LjUsMCwwLDAtLjUuNVY3LjU1SDguNVYyLjU3YS41LjUsMCwwLDAtLjUtLjUuNS41LDAsMCwwLS41LjVWNy41NUg1LjA2VjIuNTdhLjUuNSwwLDAsMC0uNS0uNS41LjUsMCwwLDAtLjUuNVY5LjA1YTIuNTA3LDIuNTA3LDAsMCwwLDIuNSwyLjVINy41djkuODlhLjUwOC41MDgsMCwwLDAsLjUuNS41LjUsMCwwLDAsLjUtLjVWMTEuNTVoLjk0YTIuNSwyLjUsMCwwLDAsMi41LTIuNVYyLjU3QS41LjUsMCwwLDAsMTEuNDQsMi4wN1ptLS41LDYuOThhMS41LDEuNSwwLDAsMS0xLjUsMS41SDYuNTZhMS41MTEsMS41MTEsMCwwLDEtMS41LTEuNXYtLjVoNS44OFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUZyaWVzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJGcmllc1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS41MSw5LjUzNWExLjA5MSwxLjA5MSwwLDAsMC0uODEtLjM2SDE3LjY3YS41LjUsMCwwLDAtLjE3LjAyVjQuODE1YTEuNSwxLjUsMCwwLDAtMS41LTEuNWgtLjVhMS4zLDEuMywwLDAsMC0uNTIuMSwxLjQ3NCwxLjQ3NCwwLDAsMC0xLjQ4LTEuMzVIMTNhMS41LDEuNSwwLDAsMC0xLjUsMS41djEuNTlhMS4zODYsMS4zODYsMCwwLDAtLjUtLjA5aC0uNWExLjM0OCwxLjM0OCwwLDAsMC0uNS4wOXYtLjM0YTEuNSwxLjUsMCwwLDAtMS41LTEuNUg4YTEuNSwxLjUsMCwwLDAtMS41LDEuNVY5LjJhLjUuNSwwLDAsMC0uMTctLjAySDUuM2ExLjEsMS4xLDAsMCwwLTEuMDgsMS4ybC44NSw4Ljk4YTIuODQsMi44NCwwLDAsMCwyLjg0LDIuNThoOC4xOGEyLjg0LDIuODQsMCwwLDAsMi44NC0yLjU4bC44NS04Ljk4QTEuMTEyLDEuMTEyLDAsMCwwLDE5LjUxLDkuNTM1Wk0xNSw0LjgxNWEuNS41LDAsMCwxLC41LS41SDE2YS41LjUsMCwwLDEsLjUuNXY2LjE0aC4wMUEyLjkxNSwyLjkxNSwwLDAsMSwxNSwxMy4wMTVabS0yLjUsOC41M1YzLjU2NWEuNS41LDAsMCwxLC41LS41aC41YS41LjUsMCwwLDEsLjUuNXY5Ljc2Wm0tMi41LS4wMlY2LjU2NWEuNS41LDAsMCwxLC41LS41SDExYS41LjUsMCwwLDEsLjUuNXY2Ljc4Wk03LjUsNC44MTVhLjUuNSwwLDAsMSwuNS0uNWguNWEuNS41LDAsMCwxLC41LjV2OC4yYTIuODc3LDIuODc3LDAsMCwxLTEuNS0yLjA2Wm0xMS4yOSw1LjM5MS0uODUsOS4wNDlhMS44NSwxLjg1LDAsMCwxLTEuODUsMS42OEg3LjkxYTEuODQsMS44NCwwLDAsMS0xLjg0LTEuNjhsLS44Ni05LjA4SDYuMzNhLjEuMSwwLDAsMSwuMDkuMDhsLjA1LjU2YTMuODkxLDMuODkxLDAsMCwwLDMuODgsMy41M2gzLjNhMy44ODQsMy44ODQsMCwwLDAsMy44OC0zLjUzbC4wNS0uNTZhLjEwNi4xMDYsMCwwLDEsLjA5LS4wOFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lHaWZ0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJHaWZ0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjQzNSw1LjU2OGgtMi4zOGExLjk3OSwxLjk3OSwwLDAsMC0uNTEtMS45MiwyLjAyMiwyLjAyMiwwLDAsMC0yLjgzLDBMMTIsNS4zNjdsLTEuNzEtMS43MTlhMiwyLDAsMCwwLTIuODMsMCwxLjk3OSwxLjk3OSwwLDAsMC0uNTEsMS45Mkg0LjU2NWExLjUsMS41LDAsMCwwLTEuNSwxLjV2MUExLjQ4NywxLjQ4NywwLDAsMCw0LDkuNDQ4djguOTlhMi41MDcsMi41MDcsMCwwLDAsMi41LDIuNWgxMWEyLjUsMi41LDAsMCwwLDIuNS0yLjVWOS40NThhMS41MDksMS41MDksMCwwLDAsLjk0LTEuMzl2LTFBMS41LDEuNSwwLDAsMCwxOS40MzUsNS41NjhaTTguMTY1LDQuMzU3YTEsMSwwLDAsMSwxLjQxLDBsMS4yMSwxLjIxMUg4LjAxNUEuOTg5Ljk4OSwwLDAsMSw4LjE2NSw0LjM1N1pNMTEsMTkuOTM4SDYuNWExLjUsMS41LDAsMCwxLTEuNS0xLjVWOS41NjhoNlptMC0xMS4zN0g0LjU2NWEuNS41LDAsMCwxLS41LS41di0xYS41LjUsMCwwLDEsLjUtLjVIMTFabTMuNDMtNC4yMTFBMSwxLDAsMCwxLDE2LDUuNTY4aC0yLjc4Wk0xOSwxOC40MzhhMS41LDEuNSwwLDAsMS0xLjUsMS41SDEzVjkuNTY4aDZabS45NC0xMC4zN2EuNS41LDAsMCwxLS41LjVIMTN2LTJoNi40NGEuNS41LDAsMCwxLC41LjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpR2xhc3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkdsYXNzXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjI3OSwyLjU0YTEuNDc1LDEuNDc1LDAsMCwwLTEuMS0uNDhINi44MTlhMS40NywxLjQ3LDAsMCwwLTEuMDkuNDgsMS41LDEuNSwwLDAsMC0uNDEsMS4xMkw2LjM3OSwxOS42YTIuNTEsMi41MSwwLDAsMCwyLjQ5LDIuMzRoNi4yNmEyLjUxOSwyLjUxOSwwLDAsMCwyLjUtMi4zNGwxLjA1LTE1Ljk0QTEuNSwxLjUsMCwwLDAsMTguMjc5LDIuNTRabS0xLjY1LDE2Ljk5YTEuNTA4LDEuNTA4LDAsMCwxLTEuNSwxLjQxSDguODY5YTEuNTA2LDEuNTA2LDAsMCwxLTEuNDktMS40MWwtLjY0LTkuNjJhMi45ODEsMi45ODEsMCwwLDAsMS4xNy0uNDksMS44MjgsMS44MjgsMCwwLDEsMS4xOC0uMzksMS44NTgsMS44NTgsMCwwLDEsMS4xOS4zOSwzLjAyNSwzLjAyNSwwLDAsMCwzLjQ1LDAsMS44NzksMS44NzksMCwwLDEsMS4xOS0uMzksMS44MjgsMS44MjgsMCwwLDEsMS4xOC4zOSwzLDMsMCwwLDAsMS4xNi40OVptLjctMTAuNjJhMi4zMTcsMi4zMTcsMCwwLDEtLjY5LS4zMywyLjk4LDIuOTgsMCwwLDAtMy40NSwwLDEuODg1LDEuODg1LDAsMCwxLTEuMTguMzgsMS45MzksMS45MzksMCwwLDEtMS4xOS0uMzgsMi44MTgsMi44MTgsMCwwLDAtMS43My0uNTUsMi44MDksMi44MDksMCwwLDAtMS43Mi41NSwyLjM3NCwyLjM3NCwwLDAsMS0uNy4zM2wtLjM1LTUuMzJhLjQ2OC40NjgsMCwwLDEsLjE0LS4zNy40ODQuNDg0LDAsMCwxLC4zNi0uMTZoMTAuMzZhLjUyMy41MjMsMCwwLDEsLjM3LjE2LjQ2LjQ2LDAsMCwxLC4xMy4zN1pcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lHbG9iZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiR2xvYmVcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNjQ1LDIuNDI4YTguMSw4LjEsMCwwLDAtMS42MS0uMyw5LjMzMiw5LjMzMiwwLDAsMC0zLjYuMjhsLS4wNy4wMmE5LjkyOCw5LjkyOCwwLDAsMCwuMDEsMTkuMTUsOS4wOTEsOS4wOTEsMCwwLDAsMi4zNi4zNCwxLjI3NCwxLjI3NCwwLDAsMCwuMjcuMDIsOS42NSw5LjY1LDAsMCwwLDIuNjMtLjM2LDkuOTMxLDkuOTMxLDAsMCwwLC4wMS0xOS4xNVptLS4yNy45NmE4Ljk0Myw4Ljk0MywwLDAsMSw1Ljg0LDUuMTFoLTQuMjZhMTMuNzc4LDEzLjc3OCwwLDAsMC0yLjc0LTUuMzVBOC4yNTQsOC4yNTQsMCwwLDEsMTQuMzc1LDMuMzg4Wm0tMi4zNy0uMDlhMTIuNzgsMTIuNzgsMCwwLDEsMi45MSw1LjJIOS4wNzVBMTIuNTQ1LDEyLjU0NSwwLDAsMSwxMi4wMDUsMy4zWm0zLjE2LDYuMmExMy4xOTMsMTMuMTkzLDAsMCwxLDAsNS4wMUg4Ljg0NWExMi4xODUsMTIuMTg1LDAsMCwxLS4yNS0yLjUsMTIuMzUzLDEyLjM1MywwLDAsMSwuMjUtMi41MVptLTUuNi02LjA5LjA3LS4wMmE5LjE1Miw5LjE1MiwwLDAsMSwxLjE2LS4yM0ExMy42MTgsMTMuNjE4LDAsMCwwLDguMDQ1LDguNUgzLjhBOSw5LDAsMCwxLDkuNTY1LDMuNDA4Wm0tNi41LDguNmE4LjcxLDguNzEsMCwwLDEsLjM3LTIuNTFoNC4zOWExMy45NSwxMy45NSwwLDAsMC0uMjMsMi41MSwxMy43NTcsMTMuNzU3LDAsMCwwLC4yMywyLjVIMy40MzVBOC41OTEsOC41OTEsMCwwLDEsMy4wNjUsMTIuMDA4Wm02LjU3LDguNjFhOC45LDguOSwwLDAsMS01Ljg0LTUuMTFoNC4yNGExMy42MzIsMTMuNjMyLDAsMCwwLDIuNzcsNS4zNUE4LjEsOC4xLDAsMCwxLDkuNjM1LDIwLjYxOFptLS41Ni01LjExaDUuODRhMTIuNjM4LDEyLjYzOCwwLDAsMS0yLjkxLDUuMjFBMTIuODcyLDEyLjg3MiwwLDAsMSw5LjA3NSwxNS41MDhabTUuMyw1LjExYTExLjU1MSwxMS41NTEsMCwwLDEtMS4xNy4yNCwxMy44LDEzLjgsMCwwLDAsMi43NS01LjM1aDQuMjZBOC45MjQsOC45MjQsMCwwLDEsMTQuMzc1LDIwLjYxOFptMS44LTYuMTFhMTMuNjExLDEzLjYxMSwwLDAsMCwwLTUuMDFoNC4zOWE4LjM3OSw4LjM3OSwwLDAsMSwuMzcsMi41MSw4LjY4Nyw4LjY4NywwLDAsMS0uMzYsMi41WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUdwcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiR1BTXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTQuNUEyLjUsMi41LDAsMSwxLDE0LjUsMTIsMi41LDIuNSwwLDAsMSwxMiwxNC41Wm0wLTRBMS41LDEuNSwwLDEsMCwxMy41LDEyLDEuNSwxLjUsMCwwLDAsMTIsMTAuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuNDM1LDExLjUwNWgtMS40NmE3Ljk4LDcuOTgsMCwwLDAtNy40OC03LjQ4VjIuNTY1YS41MDguNTA4LDAsMCwwLS41LS41LjUxNS41MTUsMCwwLDAtLjUuNXYxLjQ2YTgsOCwwLDAsMC03LjQ4LDcuNDhIMi41NjVhLjUuNSwwLDEsMCwwLDFoMS40NWE4LjAxMiw4LjAxMiwwLDAsMCw3LjQ4LDcuNDh2MS40NWEuNTA4LjUwOCwwLDAsMCwuNS41LjUuNSwwLDAsMCwuNS0uNXYtMS40NWE4LDgsMCwwLDAsNy40OC03LjQ4aDEuNDZhLjUuNSwwLDAsMCwwLTFaTTEyLDE5LjAwNWE3LDcsMCwxLDEsNy03QTcuMDIxLDcuMDIxLDAsMCwxLDEyLDE5LjAwNVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUdyaWQySCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiR3JpZF9fMi1IXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM3LDExSDUuNTY1YTIuNSwyLjUsMCwwLDEtMi41LTIuNVY1LjU2NGEyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTguNDM3YTIuNSwyLjUsMCwwLDEsMi41LDIuNVY4LjVBMi41LDIuNSwwLDAsMSwxOC40MzcsMTFaTTUuNTY1LDQuMDY0YTEuNSwxLjUsMCwwLDAtMS41LDEuNVY4LjVhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE4LjQzN2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWNS41NjRhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzcsMjAuOTM2SDUuNTY1YTIuNSwyLjUsMCwwLDEtMi41LTIuNVYxNS41YTIuNSwyLjUsMCwwLDEsMi41LTIuNUgxOC40MzdhMi41LDIuNSwwLDAsMSwyLjUsMi41djIuOTM0QTIuNSwyLjUsMCwwLDEsMTguNDM3LDIwLjkzNlpNNS41NjUsMTRhMS41LDEuNSwwLDAsMC0xLjUsMS41djIuOTM0YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUtMS41VjE1LjVhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpR3JpZDJWIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJHcmlkXzItVlwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNiwyMC45MzdIMTUuNWEyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjVhMi41LDIuNSwwLDAsMSwyLjUtMi41aDIuOTMzYTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOC40MzdBMi41LDIuNSwwLDAsMSwxOC40MzYsMjAuOTM3Wk0xNS41LDQuMDY1YTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41aDIuOTMzYTEuNSwxLjUsMCwwLDAsMS41LTEuNVY1LjU2NWExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTguNSwyMC45MzdINS41NjRhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTY1YTIuNSwyLjUsMCwwLDEsMi41LTIuNUg4LjVhMi41LDIuNSwwLDAsMSwyLjUsMi41VjE4LjQzN0EyLjUsMi41LDAsMCwxLDguNSwyMC45MzdaTTUuNTY0LDQuMDY1YTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41SDguNWExLjUsMS41LDAsMCwwLDEuNS0xLjVWNS41NjVhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpR3JpZDMxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJHcmlkXzMtMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuNDM0LDIwLjkzNkg1LjU2M2EyLjUsMi41LDAsMCwxLTIuNS0yLjVWMTUuNWEyLjUsMi41LDAsMCwxLDIuNS0yLjVoNS44NzFhMi41LDIuNSwwLDAsMSwyLjUsMi41djIuOTMzQTIuNSwyLjUsMCwwLDEsMTEuNDM0LDIwLjkzNlpNNS41NjMsMTRhMS41LDEuNSwwLDAsMC0xLjUsMS41djIuOTMzYTEuNSwxLjUsMCwwLDAsMS41LDEuNWg1Ljg3MWExLjUsMS41LDAsMCwwLDEuNS0xLjVWMTUuNWExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNSwyMC45MzZhMi41LDIuNSwwLDAsMS0yLjUtMi41VjE1LjVhMi41LDIuNSwwLDAsMSw1LDB2Mi45MzRBMi41LDIuNSwwLDAsMSwxOC40MzUsMjAuOTM2Wm0wLTYuOTM0YTEuNSwxLjUsMCwwLDAtMS41LDEuNXYyLjkzNGExLjUsMS41LDAsMCwwLDMsMFYxNS41QTEuNSwxLjUsMCwwLDAsMTguNDM1LDE0WlwifSxcImNoaWxkXCI6W119XX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNSwxMUg1LjU2M2EyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjRhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE4LjQzNWEyLjUsMi41LDAsMCwxLDIuNSwyLjVWOC41QTIuNSwyLjUsMCwwLDEsMTguNDM1LDExWk01LjU2Myw0LjA2NGExLjUsMS41LDAsMCwwLTEuNSwxLjVWOC41YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxOC40MzVhMS41LDEuNSwwLDAsMCwxLjUtMS41VjUuNTY0YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUdyaWQzMiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiR3JpZF8zLTJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNywxMUgxMi41NjZhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTY0YTIuNSwyLjUsMCwwLDEsMi41LTIuNWg1Ljg3MWEyLjUsMi41LDAsMCwxLDIuNSwyLjVWOC41QTIuNSwyLjUsMCwwLDEsMTguNDM3LDExWk0xMi41NjYsNC4wNjRhMS41LDEuNSwwLDAsMC0xLjUsMS41VjguNWExLjUsMS41LDAsMCwwLDEuNSwxLjVoNS44NzFhMS41LDEuNSwwLDAsMCwxLjUtMS41VjUuNTY0YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS41NjUsMTFhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTY0YTIuNSwyLjUsMCwxLDEsNSwwVjguNUEyLjUsMi41LDAsMCwxLDUuNTY1LDExWm0wLTYuOTM0YTEuNSwxLjUsMCwwLDAtMS41LDEuNVY4LjVhMS41LDEuNSwwLDAsMCwzLDBWNS41NjRBMS41LDEuNSwwLDAsMCw1LjU2NSw0LjA2NFpcIn0sXCJjaGlsZFwiOltdfV19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzcsMjAuOTM2SDUuNTY1YTIuNSwyLjUsMCwwLDEtMi41LTIuNVYxNS41YTIuNSwyLjUsMCwwLDEsMi41LTIuNUgxOC40MzdhMi41LDIuNSwwLDAsMSwyLjUsMi41djIuOTM0QTIuNSwyLjUsMCwwLDEsMTguNDM3LDIwLjkzNlpNNS41NjUsMTRhMS41LDEuNSwwLDAsMC0xLjUsMS41djIuOTM0YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUtMS41VjE1LjVhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpR3JpZDQxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJHcmlkXzQtMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTguNSwxMUg1LjU2M2EyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjRhMi41LDIuNSwwLDAsMSwyLjUtMi41SDguNWEyLjUsMi41LDAsMCwxLDIuNSwyLjVWOC41QTIuNSwyLjUsMCwwLDEsOC41LDExWk01LjU2Myw0LjA2NGExLjUsMS41LDAsMCwwLTEuNSwxLjVWOC41YTEuNSwxLjUsMCwwLDAsMS41LDEuNUg4LjVBMS41LDEuNSwwLDAsMCwxMCw4LjVWNS41NjRhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzYsMTFIMTUuNUEyLjUsMi41LDAsMCwxLDEzLDguNVY1LjU2NGEyLjUsMi41LDAsMCwxLDIuNS0yLjVoMi45MzRhMi41LDIuNSwwLDAsMSwyLjUsMi41VjguNUEyLjUsMi41LDAsMCwxLDE4LjQzNiwxMVpNMTUuNSw0LjA2NGExLjUsMS41LDAsMCwwLTEuNSwxLjVWOC41QTEuNSwxLjUsMCwwLDAsMTUuNSwxMGgyLjkzNGExLjUsMS41LDAsMCwwLDEuNS0xLjVWNS41NjRhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04LjUsMjAuOTM2SDUuNTY0YTIuNSwyLjUsMCwwLDEtMi41LTIuNVYxNS41YTIuNSwyLjUsMCwwLDEsMi41LTIuNUg4LjVBMi41LDIuNSwwLDAsMSwxMSwxNS41djIuOTM2QTIuNSwyLjUsMCwwLDEsOC41LDIwLjkzNlpNNS41NjQsMTRhMS41LDEuNSwwLDAsMC0xLjUsMS41djIuOTM2YTEuNSwxLjUsMCwwLDAsMS41LDEuNUg4LjVhMS41LDEuNSwwLDAsMCwxLjUtMS41VjE1LjVBMS41LDEuNSwwLDAsMCw4LjUsMTRaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNiwyMC45MzZIMTUuNWEyLjUsMi41LDAsMCwxLTIuNS0yLjVWMTUuNUEyLjUsMi41LDAsMCwxLDE1LjUsMTNoMi45MzRhMi41LDIuNSwwLDAsMSwyLjUsMi41djIuOTM2QTIuNSwyLjUsMCwwLDEsMTguNDM2LDIwLjkzNlpNMTUuNSwxNEExLjUsMS41LDAsMCwwLDE0LDE1LjV2Mi45MzZhMS41LDEuNSwwLDAsMCwxLjUsMS41aDIuOTM0YTEuNSwxLjUsMCwwLDAsMS41LTEuNVYxNS41YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUdyaWQ0MiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiR3JpZF80LTJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTguNSwxMy45MzNINS41NjNhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTYzYTIuNSwyLjUsMCwwLDEsMi41LTIuNUg4LjVhMi41LDIuNSwwLDAsMSwyLjUsMi41djUuODdBMi41LDIuNSwwLDAsMSw4LjUsMTMuOTMzWk01LjU2Myw0LjA2M2ExLjUsMS41LDAsMCwwLTEuNSwxLjV2NS44N2ExLjUsMS41LDAsMCwwLDEuNSwxLjVIOC41YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY1LjU2M2ExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTguNSwyMC45MzVINS41NjRhMi41LDIuNSwwLDAsMSwwLTVIOC41YTIuNSwyLjUsMCwxLDEsMCw1Wm0tMi45MzQtNGExLjUsMS41LDAsMCwwLDAsM0g4LjVhMS41LDEuNSwwLDEsMCwwLTNaXCJ9LFwiY2hpbGRcIjpbXX1dfSx7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzYsMjAuOTM1SDE1LjVhMi41LDIuNSwwLDAsMS0yLjUtMi41di01Ljg3YTIuNSwyLjUsMCwwLDEsMi41LTIuNWgyLjkzNGEyLjUsMi41LDAsMCwxLDIuNSwyLjV2NS44N0EyLjUsMi41LDAsMCwxLDE4LjQzNiwyMC45MzVaTTE1LjUsMTEuMDY1YTEuNSwxLjUsMCwwLDAtMS41LDEuNXY1Ljg3YTEuNSwxLjUsMCwwLDAsMS41LDEuNWgyLjkzNGExLjUsMS41LDAsMCwwLDEuNS0xLjV2LTUuODdhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzYsOC4wNjNIMTUuNWEyLjUsMi41LDAsMCwxLDAtNWgyLjkzNGEyLjUsMi41LDAsMCwxLDAsNVptLTIuOTM0LTRhMS41LDEuNSwwLDAsMCwwLDNoMi45MzRhMS41LDEuNSwwLDAsMCwwLTNaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUhhcmREcml2ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiSGFyZF9Ecml2ZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjkwNSwxNC4zMjVsLTEuODMtMTAuMDRhMS41MDcsMS41MDcsMCwwLDAtMS40Ny0xLjIySDYuNDA1QTEuNDkzLDEuNDkzLDAsMCwwLDQuOTI1LDQuM2wtMS44NCwxMC4wM2EyLjQ1MiwyLjQ1MiwwLDAsMC0uMDIuMjd2NC44NGExLjUsMS41LDAsMCwwLDEuNSwxLjVoMTQuODdhMS41MTEsMS41MTEsMCwwLDAsMS41LTEuNVYxNC42QTEuMjQxLDEuMjQxLDAsMCwwLDIwLjkwNSwxNC4zMjVabS0xNS05Ljg1YS41LjUsMCwwLDEsLjUtLjQxaDExLjJhLjUxMS41MTEsMCwwLDEsLjQ5LjRsMS43NCw5LjU0SDQuMTY1Wm0xNC4wMywxNC45NmEuNS41LDAsMCwxLS41LjVINC41NjVhLjUuNSwwLDAsMS0uNS0uNWwuMDEtNC40M2gxNS44NlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI1LjU2MVwiLFwiY3lcIjpcIjE3LjQ3XCIsXCJyXCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI3LjU2MVwiLFwiY3lcIjpcIjE3LjQ3XCIsXCJyXCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDUsMTcuOTdhLjUuNSwwLDAsMCwwLTFoLTVhLjUuNSwwLDAsMCwwLDFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lIYXNodGFnIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJIYXNodGFnXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzNSwxNS41MDZIMTYuMmwuNjEtN2gzLjYzYS41LjUsMCwwLDAsLjUtLjUuNS41LDAsMCwwLS41LS41SDE2LjlsLjM0LTMuODdhLjUwOS41MDksMCwwLDAtLjQ2LS41NC41LjUsMCwwLDAtLjU0LjQ2bC0uMzUsMy45NUg4LjlsLjM0LTMuODdhLjUwOS41MDksMCwwLDAtLjQ2LS41NC40OTEuNDkxLDAsMCwwLS41NC40NmwtLjM1LDMuOTVIMy41NjVhLjUuNSwwLDAsMC0uNS41LjUuNSwwLDAsMCwuNS41aDQuMjRsLS42Miw3SDMuNTY1YS41LjUsMCwwLDAtLjUuNS41LjUsMCwwLDAsLjUuNWgzLjU0bC0uMzQsMy44NmEuNTA4LjUwOCwwLDAsMCwuNDUuNTRoLjA1YS41MTYuNTE2LDAsMCwwLC41LS40NmwuMzQtMy45NGg3bC0uMzQsMy44NmEuNTA4LjUwOCwwLDAsMCwuNDUuNTRoLjA1YS41MTYuNTE2LDAsMCwwLC41LS40NmwuMzQtMy45NGg0LjMzYS41LjUsMCwwLDAsLjUtLjVBLjUuNSwwLDAsMCwyMC40MzUsMTUuNTA2Wm0tNS4yNSwwSDguMmwuNjEtN2g3WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUhlYWRwaG9uZXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkhlYWRwaG9uZXNcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuMjMsMy4wNjVoLS40NmE4LjIxMSw4LjIxMSwwLDAsMC04LjIsOC4ydjYuMjVhMy4zODUsMy4zODUsMCwwLDAsLjg5LDIuMywzLjQyMywzLjQyMywwLDAsMCwyLjUzLDEuMTJoLjUzYTEuMjI1LDEuMjI1LDAsMCwwLDEuMjItMS4yMnYtNC40QTEuMjI1LDEuMjI1LDAsMCwwLDcuNTIsMTQuMUg3LjExYTMuNiwzLjYsMCwwLDAtMi41NCwxLjA1di0zLjg4YTcuMjA4LDcuMjA4LDAsMCwxLDcuMi03LjJoLjQ2YTcuMjA4LDcuMjA4LDAsMCwxLDcuMiw3LjJ2My44OGEzLjYsMy42LDAsMCwwLTIuNTQtMS4wNWgtLjQxYTEuMjI1LDEuMjI1LDAsMCwwLTEuMjIsMS4yMnY0LjRhMS4yMjUsMS4yMjUsMCwwLDAsMS4yMiwxLjIyaC41M2EzLjQyMywzLjQyMywwLDAsMCwyLjUzLTEuMTIsMy4zODUsMy4zODUsMCwwLDAsLjg5LTIuM3YtNi4yNUE4LjIxMSw4LjIxMSwwLDAsMCwxMi4yMywzLjA2NVpNNC41OCwxNy4yNzVBMi41MTEsMi41MTEsMCwwLDEsNy4xMSwxNS4xaC40MWEuMjIyLjIyMiwwLDAsMSwuMjIuMjJ2NC40YS4yMjIuMjIyLDAsMCwxLS4yMi4yMkg2Ljk5YTIuNDIyLDIuNDIyLDAsMCwxLTEuNzktLjc5LDIuMzIyLDIuMzIyLDAsMCwxLS42My0xLjYzQTEuOTI3LDEuOTI3LDAsMCwxLDQuNTgsMTcuMjc1Wm0xNC4yMiwxLjg3YTIuNDIyLDIuNDIyLDAsMCwxLTEuNzkuNzloLS41M2EuMjIyLjIyMiwwLDAsMS0uMjItLjIydi00LjRhLjIyMi4yMjIsMCwwLDEsLjIyLS4yMmguNDFhMi41MTEsMi41MTEsMCwwLDEsMi41MywyLjE4LDEuOTI3LDEuOTI3LDAsMCwxLC4wMS4yNEEyLjMyMiwyLjMyMiwwLDAsMSwxOC44LDE5LjE0NVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lIZWFydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiSGVhcnRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjAuMDQzYS45NzcuOTc3LDAsMCwxLS43LS4yODhMNC42MywxMy4wOEE1LjM0Myw1LjM0MywwLDAsMSw2LjA1Myw0LjUxMyw1LjI2Niw1LjI2NiwwLDAsMSwxMiw1LjM3MWE1LjI3Miw1LjI3MiwwLDAsMSw1Ljk0Ny0uODU4QTUuMzQzLDUuMzQzLDAsMCwxLDE5LjM3LDEzLjA4bC02LjY3Niw2LjY3NUEuOTc3Ljk3NywwLDAsMSwxMiwyMC4wNDNaTTguMzU1LDQuOTYzQTQuMDE1LDQuMDE1LDAsMCwwLDYuNTExLDUuNCw0LjQsNC40LDAsMCwwLDQuMTIyLDguNjQzYTQuMzQ1LDQuMzQ1LDAsMCwwLDEuMjE1LDMuNzNsNi42NzUsNi42NzUsNi42NTEtNi42NzVhNC4zNDUsNC4zNDUsMCwwLDAsMS4yMTUtMy43M0E0LjQsNC40LDAsMCwwLDE3LjQ4OSw1LjRhNC4zMzgsNC4zMzgsMCwwLDAtNC45NjguODUyaDBhLjc0NC43NDQsMCwwLDEtMS4wNDIsMEE0LjQ3NCw0LjQ3NCwwLDAsMCw4LjM1NSw0Ljk2M1pcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lIb21lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJIb21lXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjM3LDEwLjIybC02LjItNy42YTEuNSwxLjUsMCwwLDAtMi4zMy0uMDFMNC42MywxMC4yMmEyLjUsMi41LDAsMCwwLS41NywxLjU5djcuNjNhMi41MDcsMi41MDcsMCwwLDAsMi41LDIuNUgxNy40NGEyLjUwNywyLjUwNywwLDAsMCwyLjUtMi41VjExLjgxQTIuNSwyLjUsMCwwLDAsMTkuMzcsMTAuMjJaTTEwLDIwLjk0di01LjVhMS41LDEuNSwwLDAsMSwxLjUtMS41aDFhMS41LDEuNSwwLDAsMSwxLjUsMS41djUuNVptOC45NC0xLjVhMS41MTEsMS41MTEsMCwwLDEtMS41LDEuNUgxNXYtNS41YTIuNSwyLjUsMCwwLDAtMi41LTIuNWgtMUEyLjUsMi41LDAsMCwwLDksMTUuNDR2NS41SDYuNTZhMS41MTEsMS41MTEsMCwwLDEtMS41LTEuNVYxMS44MWExLjQ3NCwxLjQ3NCwwLDAsMSwuMzQtLjk1bDYuMjItNy42MUEuNDc0LjQ3NCwwLDAsMSwxMiwzLjA2YS40NzkuNDc5LDAsMCwxLC4zOS4xOWw2LjIxLDcuNjFhMS40NzQsMS40NzQsMCwwLDEsLjM0Ljk1WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUhvc3BpdGFsMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiSG9zcGl0YWxfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNSw3LjVoLTEuOTNWNS41NmEyLjUsMi41LDAsMCwwLTIuNS0yLjVoLTRhMi41LDIuNSwwLDAsMC0yLjUsMi41VjcuNUg1LjU2NWEyLjUsMi41LDAsMCwwLTIuNSwyLjV2OS40NGExLjUxMSwxLjUxMSwwLDAsMCwxLjUsMS41aDE0Ljg3YTEuNSwxLjUsMCwwLDAsMS41LTEuNVYxMEEyLjUsMi41LDAsMCwwLDE4LjQzNSw3LjVaTTcuNTA1LDE5Ljk0SDQuNTY1YS41MDguNTA4LDAsMCwxLS41LS41VjEwYTEuNSwxLjUsMCwwLDEsMS41LTEuNWgxLjk0Wm04LDBoLTEuNXYtMi41YTIuMDM4LDIuMDM4LDAsMCwwLS41OS0xLjQyLDIsMiwwLDAsMC0zLjQxLDEuNDJ2Mi41aC0xLjVWNS41NmExLjUsMS41LDAsMCwxLDEuNS0xLjVoNGExLjUsMS41LDAsMCwxLDEuNSwxLjVabTQuNDMtLjVhLjUuNSwwLDAsMS0uNS41aC0yLjkzVjguNWgxLjkzYTEuNSwxLjUsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNTA1LDguNTZhLjUuNSwwLDAsMS0uNS41aC0xLjV2MS41YS41LjUsMCwwLDEtLjUuNS41LjUsMCwwLDEtLjUtLjVWOS4wNmgtMS41YS41LjUsMCwwLDEtLjUtLjUuNS41LDAsMCwxLC41LS41aDEuNVY2LjU2YS41LjUsMCwwLDEsLjUtLjUuNTA4LjUwOCwwLDAsMSwuNS41djEuNWgxLjVBLjUwOC41MDgsMCwwLDEsMTQuNTA1LDguNTZaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS43ODYsMTMuMjE3YS41LjUsMCwwLDEtLjUtLjV2LTEuNWEuNS41LDAsMCwxLDEsMHYxLjVBLjUuNSwwLDAsMSw1Ljc4NiwxMy4yMTdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUuNzg2LDE3LjcxN2EuNS41LDAsMCwxLS41LS41di0xLjVhLjUuNSwwLDAsMSwxLDB2MS41QS41LjUsMCwwLDEsNS43ODYsMTcuNzE3WlwifSxcImNoaWxkXCI6W119XX0se1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguMjIxLDEzLjIxN2EuNS41LDAsMCwxLS41LS41di0xLjVhLjUuNSwwLDAsMSwxLDB2MS41QS41LjUsMCwwLDEsMTguMjIxLDEzLjIxN1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguMjIxLDE3LjcxN2EuNS41LDAsMCwxLS41LS41di0xLjVhLjUuNSwwLDAsMSwxLDB2MS41QS41LjUsMCwwLDEsMTguMjIxLDE3LjcxN1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpSG90ZG9nIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJIb3Rkb2dcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS4xLDkuMzQ5bC05Ljc0LDkuNzQuMDEuMDEsOS43NC05Ljc0WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC4yNzYsOS4xMTlsLS40Ny0uNDdhMy4xNTcsMy4xNTcsMCwwLDAtLjAzLTQuNDMsMy4yMTIsMy4yMTIsMCwwLDAtNC40Mi0uMDNsLS40OC0uNDhhMi4zLDIuMywwLDAsMC0zLjE4LDBsLTcuOTgsNy45OGEyLjI2MywyLjI2MywwLDAsMCwwLDMuMThsLjQ4LjQ4YTMuMTQ1LDMuMTQ1LDAsMCwwLC4wMyw0LjQyLDMuMDg5LDMuMDg5LDAsMCwwLDIuMjMuOTIsMy4xMjYsMy4xMjYsMCwwLDAsMi4yLS44OWwuNDcuNDdhMi4yNDUsMi4yNDUsMCwwLDAsMy4xOCwwbDcuOTctNy45N0EyLjI0NSwyLjI0NSwwLDAsMCwyMC4yNzYsOS4xMTlabS0xNS44NSwzLjI3LDcuOTctNy45N2ExLjI0MywxLjI0MywwLDAsMSwxLjc3LDBsLjQ3LjQ3TDQuOSwxNC42MjlsLS40Ny0uNDdBMS4yNDksMS4yNDksMCwwLDEsNC40MjYsMTIuMzg5Wm0zLjUyLDYuN2EyLjIsMi4yLDAsMCwxLTMuMDItLjAzLDIuMTQ5LDIuMTQ5LDAsMCwxLS4wMy0zLjAxbDExLjE2LTExLjE2YTIuMTYzLDIuMTYzLDAsMCwxLDEuNDktLjYsMi4xNTUsMi4xNTUsMCwwLDEsMS41NSwzLjY1Wm0xMS42My03LjQ5LTcuOTgsNy45N2ExLjI3NSwxLjI3NSwwLDAsMS0xLjc2LDBsLS40Ny0uNDctLjAxLS4wMSw5Ljc0LTkuNzQuMDEuMDEuNDcuNDdBMS4yNjgsMS4yNjgsMCwwLDEsMTkuNTc2LDExLjZaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYuNTcsMTcuNTY5YS41LjUsMCwwLDEtLjM1NC0uODU0LDQuNTMzLDQuNTMzLDAsMCwxLDEuMzU3LS45NjcsMy40OTEsMy40OTEsMCwwLDAsMS4xLS43NzgsMy41MTQsMy41MTQsMCwwLDAsLjc3OS0xLjEsNS4wMzQsNS4wMzQsMCwwLDEsMi4zMjQtMi4zMjQsMy41MTcsMy41MTcsMCwwLDAsMS4xLS43OCwzLjUzNiwzLjUzNiwwLDAsMCwuNzgtMS4xLDQuNTM0LDQuNTM0LDAsMCwxLC45Ny0xLjM1OSw0LjU0LDQuNTQsMCwwLDEsMS4zNTktLjk3LDMuNTMsMy41MywwLDAsMCwxLjEtLjc4LjUuNSwwLDEsMSwuNzA3LjcwNyw0LjUxNiw0LjUxNiwwLDAsMS0xLjM2Ljk2OSwzLjUwNiwzLjUwNiwwLDAsMC0xLjEuNzgxLDMuNTM1LDMuNTM1LDAsMCwwLS43ODEsMS4xLDQuNTE2LDQuNTE2LDAsMCwxLS45NjksMS4zNiw0LjUsNC41LDAsMCwxLTEuMzU5Ljk2OSw0LjAyOSw0LjAyOSwwLDAsMC0xLjg3NCwxLjg3NCw0LjUsNC41LDAsMCwxLS45NjcsMS4zNTcsNC41MjQsNC41MjQsMCwwLDEtMS4zNTguOTY4LDMuNTEsMy41MSwwLDAsMC0xLjEuNzc3QS41LjUsMCwwLDEsNi41NywxNy41NjlaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lJY2VDcmVhbSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiSWNlX0NyZWFtXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjU0LDUuOTRhNC41OTQsNC41OTQsMCwwLDAtOS4wOCwwLDMuMDY1LDMuMDY1LDAsMCwwLS43Niw1Ljg1bDMuOTIsOS4yNWExLjUsMS41LDAsMCwwLDIuNzYsMGwzLjkyLTkuMjZhMy4wNTgsMy4wNTgsMCwwLDAtLjc2LTUuODRaTTEyLjQ2LDIwLjY1YS41LjUsMCwwLDEtLjkyLDBMNy44OSwxMi4wM2g4LjIyWm0zLjY0LTkuNjJINy45YTIuMDYsMi4wNiwwLDEsMSwuMDEtNC4xMi41LjUsMCwwLDAsLjUtLjQ4LDMuNiwzLjYsMCwwLDEsNy4xOCwwLC41MDYuNTA2LDAsMCwwLC41MS40OCwyLjA2LDIuMDYsMCwwLDEsMCw0LjEyWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUltYWdlT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJJbWFnZV9PZmZcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuOTM3LDE0LjIxOGwwLC04LjY1NGMwLC0wLjgyOSAtMC42NzIsLTEuNSAtMS41LC0xLjVsLTEwLjYyOCwtMGMtMC4yNzYsLTAgLTAuNSwtMC4yMjUgLTAuNSwtMC41YzAsLTAuMjc2IDAuMjI0LC0wLjUgMC41LC0wLjVsMTAuNjI4LC0wYzEuMzgsLTAgMi41LDEuMTE4IDIuNSwyLjVsMCwxMC42MjRjMCwwLjI3NiAtMC4yMjQsMC41IC0wLjUsMC41MDFjLTAuMjc2LC0wIC0wLjUsLTAuMjI1IC0wLjUsLTAuNWwwLC0wLjU1NmwtNC41ODMsLTQuNTg0Yy0wLjQ1NiwtMC40NTYgMC4yNTEsLTEuMTYzIDAuNzA3LC0wLjcwN2MwLjE2MiwwLjE2MiAyLjM3LDIuMzcgMy44NzYsMy44NzZabS0wLjEyMSw2LjMwNGMtMC4zOTUsMC4yNjIgLTAuODY5LDAuNDE1IC0xLjM3OSwwLjQxNWwtMTIuODc0LC0wYy0xLjM4MSwtMCAtMi41LC0xLjExOSAtMi41LC0yLjVsMCwtMTIuODczYzAsLTAuNTEgMC4xNTMsLTAuOTg0IDAuNDE0LC0xLjM4bC0wLjI2MywtMC4yNjNjLTAuNDU2LC0wLjQ1NiAwLjI1MSwtMS4xNjMgMC43MDcsLTAuNzA3YzAuMDg4LDAuMDg4IDAuMTc2LDAuMTc2IDAuMjYzLDAuMjYzYzAuMjQ1LDAuMjQ1IDE2LjA5NSwxNi4wOTQgMTYuMzM5LDE2LjMzOGwwLjI2MywwLjI2M2MwLjQ1NSwwLjQ1NiAtMC4yNTIsMS4xNjMgLTAuNzA3LDAuNzA3Yy0wLjA4OCwtMC4wODcgLTAuMTc1LC0wLjE3NSAtMC4yNjMsLTAuMjYzWm0tMTEuMTA0LC0xMS4xMDNsLTIuMDAxLC0yLjAwMWMtMC4wOTQsMC4xOTYgLTAuMTQ2LDAuNDE1IC0wLjE0NiwwLjY0N2MtMCwwLjgyOSAwLjY3MiwxLjUgMS41LDEuNWMwLjIzMiwtMCAwLjQ1MSwtMC4wNTIgMC42NDcsLTAuMTQ2Wm0tMi43MzMsLTIuNzMzbC0xLjc3LC0xLjc3Yy0wLjA5MywwLjE5NiAtMC4xNDYsMC40MTYgLTAuMTQ2LDAuNjQ4bDAsMTAuNzE3bDEuOTI2LC0xLjkyNmMwLjU4NywtMC41ODYgMS41MzYsLTAuNTg2IDIuMTIyLC0wbDAuNTU1LDAuNTU0YzAuMTk1LDAuMTk2IDAuNTExLDAuMTk2IDAuNzA2LDBsMi40MTUsLTIuNDE1bC0yLjM0MywtMi4zNDNjLTAuMzk1LDAuMjYyIC0wLjg2OSwwLjQxNCAtMS4zNzksMC40MTRjLTEuMzgsLTAgLTIuNSwtMS4xMTkgLTIuNSwtMi41Yy0wLC0wLjUwOSAwLjE1MiwtMC45ODMgMC40MTQsLTEuMzc5Wm0tMS45MTYsMTEuMDA5bDAsMC43NDFjMCwwLjgyOSAwLjY3MSwxLjUgMS41LDEuNWwxMi44NzQsMGMwLjIzMiwwIDAuNDUxLC0wLjA1MiAwLjY0NywtMC4xNDVjLTAuMTY1LC0wLjE2NSAtMy4yNjQsLTMuMjYzIC02LjU5LC02LjU5bC0yLjQxNCwyLjQxNWMtMC41ODUsMC41ODYgLTEuNTM3LDAuNTg2IC0yLjEyMiwwbC0wLjU1NCwtMC41NTRjLTAuMTk1LC0wLjE5NiAtMC41MTIsLTAuMTk2IC0wLjcwOCwwbC0yLjYzMywyLjYzM1pcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lJbWFnZU9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJJbWFnZV9PblwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNSwzLjA2SDUuNTY1YTIuNSwyLjUsMCwwLDAtMi41LDIuNVYxOC40NGEyLjUwNywyLjUwNywwLDAsMCwyLjUsMi41aDEyLjg3YTIuNTA3LDIuNTA3LDAsMCwwLDIuNS0yLjVWNS41NkEyLjUsMi41LDAsMCwwLDE4LjQzNSwzLjA2Wk00LjA2NSw1LjU2YTEuNSwxLjUsMCwwLDEsMS41LTEuNWgxMi44N2ExLjUsMS41LDAsMCwxLDEuNSwxLjV2OC42NmwtMy44OC0zLjg4YTEuNTA5LDEuNTA5LDAsMCwwLTIuMTIsMGwtNC41Niw0LjU3YS41MTMuNTEzLDAsMCwxLS43MSwwbC0uNTYtLjU2YTEuNTIyLDEuNTIyLDAsMCwwLTIuMTIsMGwtMS45MiwxLjkyWm0xNS44NywxMi44OGExLjUsMS41LDAsMCwxLTEuNSwxLjVINS41NjVhMS41LDEuNSwwLDAsMS0xLjUtMS41di0uNzVMNi43LDE1LjA2YS41LjUsMCwwLDEsLjM1LS4xNC41MjQuNTI0LDAsMCwxLC4zNi4xNGwuNTUuNTZhMS41MDksMS41MDksMCwwLDAsMi4xMiwwbDQuNTctNC41N2EuNS41LDAsMCwxLC43MSwwbDQuNTgsNC41OFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC4wNjIsMTAuNTY1YTIuNSwyLjUsMCwxLDEsMi41LTIuNUEyLjUsMi41LDAsMCwxLDguMDYyLDEwLjU2NVptMC00YTEuNSwxLjUsMCwxLDAsMS41LDEuNUExLjUsMS41LDAsMCwwLDguMDYyLDYuNTY1WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpSW1wb3J0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJJbXBvcnRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01LjU1MiwyMC45NjhhMi41NzcsMi41NzcsMCwwLDEtMi41LTIuNzNjLS4wMTItMi4xNTMsMC00LjMwNiwwLTYuNDU5YS41LjUsMCwwLDEsMSwwYzAsMi4yLS4wMzIsNC40LDAsNi42LjAxNiwxLjEwNy44NDgsMS41ODksMS44MzgsMS41ODlIMTguMzUzQTEuNTQ2LDEuNTQ2LDAsMCwwLDE5LjgyNSwxOWEzLjAyMywzLjAyMywwLDAsMCwuMS0xLjA2MVYxMS43NzloMGEuNS41LDAsMCwxLDEsMGMwLDIuMjI0LjA4NSw0LjQ2NSwwLDYuNjg3YTIuNTY3LDIuNTY3LDAsMCwxLTIuNjcsMi41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS42MywxNS44MThhLjQ1OS40NTksMCwwLDAsLjMxMi4xMzhjLjAxNCwwLC4wMjcuMDA1LjA0Mi4wMDZzLjAyNywwLC4wNDEtLjAwNmEuNDU3LjQ1NywwLDAsMCwuMzEyLS4xMzhsMy42NjktMy42NjlhLjUuNSwwLDAsMC0uNzA3LS43MDdsLTIuODE1LDIuODE1VjMuNTE1YS41LjUsMCwwLDAtMSwwVjE0LjI1N0w4LjY2OCwxMS40NDJhLjUuNSwwLDAsMC0uNzA3LjcwN1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUluYm94SW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkluYm94X0luXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuNSw5LjM2MVY0LjUzMWEuNS41LDAsMCwxLDEsMHY0LjgybDEuMjctMS4yN2EuNTI0LjUyNCwwLDAsMSwuNzEsMCwuNTEzLjUxMywwLDAsMSwwLC43MWwtMi4xMywyLjEyYS40OTIuNDkyLDAsMCwxLS43LDBsLTIuMTItMi4xMmEuNS41LDAsMCwxLDAtLjcxLjUxMS41MTEsMCwwLDEsLjcsMFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDg4LDE5Ljk0OUgzLjUxMkExLjQ1MSwxLjQ1MSwwLDAsMSwyLjA2MiwxOC41VjEyLjg2MWExLjQ1MSwxLjQ1MSwwLDAsMSwxLjQ1LTEuNDQ5aDQuMWExLjQ0NCwxLjQ0NCwwLDAsMSwxLjMuOGwxLjM3MywyLjcyNmEuNDQ5LjQ0OSwwLDAsMCwuNC4yNDdoMi42MjlhLjQ0OC40NDgsMCwwLDAsLjQtLjI0OGwxLjM3My0yLjcyNGExLjQ0MiwxLjQ0MiwwLDAsMSwxLjMtLjhoNC4xYTEuNDUxLDEuNDUxLDAsMCwxLDEuNDUsMS40NDlWMTguNUExLjQ1MSwxLjQ1MSwwLDAsMSwyMC40ODgsMTkuOTQ5Wk0zLjUxMiwxMi40MTJhLjQ1LjQ1LDAsMCwwLS40NS40NDlWMTguNWEuNDUuNDUsMCwwLDAsLjQ1LjQ0OUgyMC40ODhhLjQ1LjQ1LDAsMCwwLC40NS0uNDQ5VjEyLjg2MWEuNDUuNDUsMCwwLDAtLjQ1LS40NDloLTQuMWEuNDQ5LjQ0OSwwLDAsMC0uNC4yNDdMMTQuNjEsMTUuMzg0YTEuNDQ1LDEuNDQ1LDAsMCwxLTEuMjk1LjhIMTAuNjg2YTEuNDQyLDEuNDQyLDAsMCwxLTEuMjk1LS44TDguMDE4LDEyLjY1OWEuNDQ5LjQ0OSwwLDAsMC0uNC0uMjQ3WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpSW5ib3hPdXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkluYm94X091dFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQ4OCwxOS45NDRIMy41MTJhMS40NTIsMS40NTIsMCwwLDEtMS40NS0xLjQ1VjEyLjg1NmExLjQ1MiwxLjQ1MiwwLDAsMSwxLjQ1LTEuNDVoNC4xYTEuNDQyLDEuNDQyLDAsMCwxLDEuMy44bDEuMzczLDIuNzI1YS40NDkuNDQ5LDAsMCwwLC40LjI0N2gyLjYyOWEuNDQ4LjQ0OCwwLDAsMCwuNC0uMjQ4TDE1LjA5LDEyLjJhMS40NDIsMS40NDIsMCwwLDEsMS4zLS44aDQuMWExLjQ1MiwxLjQ1MiwwLDAsMSwxLjQ1LDEuNDV2NS42MzhBMS40NTIsMS40NTIsMCwwLDEsMjAuNDg4LDE5Ljk0NFpNMy41MTIsMTIuNDA2YS40NTEuNDUxLDAsMCwwLS40NS40NXY1LjYzOGEuNDUuNDUsMCwwLDAsLjQ1LjQ1SDIwLjQ4OGEuNDUuNDUsMCwwLDAsLjQ1LS40NVYxMi44NTZhLjQ1MS40NTEsMCwwLDAtLjQ1LS40NWgtNC4xYS40NDkuNDQ5LDAsMCwwLS40LjI0N0wxNC42MSwxNS4zNzhhMS40NDUsMS40NDUsMCwwLDEtMS4yOTUuOEgxMC42ODZhMS40NDQsMS40NDQsMCwwLDEtMS4yOTUtLjhMOC4wMTgsMTIuNjUzYS40NDkuNDQ5LDAsMCwwLS40LS4yNDdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjUsNS43NTN2NC44M2EuNS41LDAsMCwxLTEsMFY1Ljc2M2wtMS4yNywxLjI3YS41MjQuNTI0LDAsMCwxLS43MSwwLC41MTMuNTEzLDAsMCwxLDAtLjcxbDIuMTMtMi4xMmEuNDkyLjQ5MiwwLDAsMSwuNywwbDIuMTIsMi4xMmEuNS41LDAsMCwxLDAsLjcxLjUxMS41MTEsMCwwLDEtLjcsMFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUluZGVudCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiSW5kZW50XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDQuMDY0SDMuNTYzYS41LjUsMCwwLDEsMC0xSDIwLjQzN2EuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDkuNjg4aC05YS41LjUsMCwwLDEsMC0xaDlhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzNywxNS4zMTJoLTlhLjUuNSwwLDAsMSwwLTFoOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDIwLjkzNkgzLjU2M2EuNS41LDAsMSwxLDAtMUgyMC40MzdhLjUuNSwwLDEsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcuOTEsMTEuNjVhLjQ5Mi40OTIsMCwwLDEsMCwuN2wtMiwyYS40OTUuNDk1LDAsMCwxLS43LS43TDYuMzYsMTIuNUgzLjU0YS41LjUsMCwwLDEsMC0xSDYuMzVjLS4zOC0uMzgtLjc2LS43Ni0xLjE0LTEuMTVhLjQ5NS40OTUsMCwwLDEsLjctLjdaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lJbnN0YWdyYW0gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkluc3RhZ3JhbVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNywyMC45MzdINS41NjNhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTYzYTIuNSwyLjUsMCwwLDEsMi41LTIuNUgxOC40MzdhMi41LDIuNSwwLDAsMSwyLjUsMi41VjE4LjQzN0EyLjUsMi41LDAsMCwxLDE4LjQzNywyMC45MzdaTTUuNTYzLDQuMDYzYTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE4LjQzN2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWNS41NjNhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwxNi41OTRBNC41OTUsNC41OTUsMCwxLDEsMTYuNiwxMiw0LjYsNC42LDAsMCwxLDEyLDE2LjU5NFpNMTIsOC40QTMuNTk1LDMuNTk1LDAsMSwwLDE1LjYsMTIsMy42LDMuNiwwLDAsMCwxMiw4LjRaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTcuMlwiLFwiY3lcIjpcIjYuODNcIixcInJcIjpcIjEuMDc1XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lLZXlib2FyZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiS2V5Ym9hcmRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS40MzcsMTguNUg0LjU2MmEyLjUsMi41LDAsMCwxLTIuNS0yLjVWOGEyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTkuNDM3YTIuNSwyLjUsMCwwLDEsMi41LDIuNXY4QTIuNSwyLjUsMCwwLDEsMTkuNDM3LDE4LjVaTTQuNTYyLDYuNUExLjUsMS41LDAsMCwwLDMuMDYyLDh2OGExLjUsMS41LDAsMCwwLDEuNSwxLjVIMTkuNDM3YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY4YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS41NDgsMTYuNWgxMi45YS41LjUsMCwwLDAsMC0xSDUuNTQ4YS41LjUsMCwwLDAsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiNS44MlwiLFwiY3lcIjpcIjkuMjQ4XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiOS45NFwiLFwiY3lcIjpcIjkuMjQ4XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTQuMDZcIixcImN5XCI6XCI5LjI0OFwiLFwiclwiOlwiMC43NVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE4LjE4XCIsXCJjeVwiOlwiOS4yNDhcIixcInJcIjpcIjAuNzVcIn0sXCJjaGlsZFwiOltdfV19LHtcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiNS44MlwiLFwiY3lcIjpcIjEyLjk5OFwiLFwiclwiOlwiMC43NVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjkuOTRcIixcImN5XCI6XCIxMi45OThcIixcInJcIjpcIjAuNzVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxNC4wNlwiLFwiY3lcIjpcIjEyLjk5OFwiLFwiclwiOlwiMC43NVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE4LjE4XCIsXCJjeVwiOlwiMTIuOTk4XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUxhcHRvcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTGFwdG9wXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjQ4NSwxNi4xNTVhLjk5Mi45OTIsMCwwLDAtLjc3LS4zNmgtLjMzVjYuNTY1YTIuNSwyLjUsMCwwLDAtMi41LTIuNUg2LjExNWEyLjUsMi41LDAsMCwwLTIuNSwyLjVWMTUuOGgtLjM0YTEsMSwwLDAsMC0uOTgsMS4xN2wuMywxLjczYTEuNSwxLjUsMCwwLDAsMS40OCwxLjI0aDE1Ljg1YTEuNSwxLjUsMCwwLDAsMS40OC0xLjI0bC4zLTEuNzNBLjk4Ni45ODYsMCwwLDAsMjEuNDg1LDE2LjE1NVpNNC42MTUsNi41NjVhMS41LDEuNSwwLDAsMSwxLjUtMS41aDExLjc3YTEuNSwxLjUsMCwwLDEsMS41LDEuNVYxNS44SDQuNjE1Wm0xNS44LDExLjk2YS40OTQuNDk0LDAsMCwxLS40OS40MUg0LjA3NWEuNDk0LjQ5NCwwLDAsMS0uNDktLjQxbC0uMzEtMS43M2gxNy40NFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lMZW1vbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTGVtb25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02LDIwLjkyNGEyLjE3MiwyLjE3MiwwLDAsMS0xLjU0NS0uNjQybC0uNzM0LS43MzNhMi4yMDcsMi4yMDcsMCwwLDEtLjE2LTIuOTQ3LDEuMTgsMS4xOCwwLDAsMCwuMjcyLTEuMTE3QTkuMTA1LDkuMTA1LDAsMCwxLDYuMjA1LDYuMjA4YTkuMSw5LjEsMCwwLDEsOS4yNzctMi4zNzEsMS4xNDksMS4xNDksMCwwLDAsMS4wNjItLjIyOWwuMDU1LS4wNDRhMi4yMDUsMi4yMDUsMCwwLDEsMi45NDYuMTYxbC43MzQuNzMzYTIuMjA3LDIuMjA3LDAsMCwxLC4xNiwyLjk0NywxLjE3OSwxLjE3OSwwLDAsMC0uMjcyLDEuMTE2QTkuMTEsOS4xMSwwLDAsMSwxNy44LDE3LjgsOS4xMDksOS4xMDksMCwwLDEsOC41MTgsMjAuMTdhMS4xNCwxLjE0LDAsMCwwLTEuMDYyLjIyOUEyLjMyNCwyLjMyNCwwLDAsMSw2LDIwLjkyNFpNMTIuODEyLDQuNGE4LjQyNyw4LjQyNywwLDAsMC01LjksMi41MTksOC4xLDguMSwwLDAsMC0yLjEzMyw4LjI0NiwyLjE0OSwyLjE0OSwwLDAsMS0uMzk1LDIuMDE0LDEuMjI3LDEuMjI3LDAsMCwwLC4wNDQsMS42NjdsLjczNC43MzNhMS4yMDksMS4yMDksMCwwLDAsMS42MTMuMDg4LDIuMTc1LDIuMTc1LDAsMCwxLDIuMDY3LS40MzgsOC4xLDguMSwwLDAsMCw4LjI0Ni0yLjEzMyw4LjEsOC4xLDAsMCwwLDIuMTMzLTguMjQ2LDIuMTQ0LDIuMTQ0LDAsMCwxLC4zOTUtMi4wMTMsMS4yMjksMS4yMjksMCwwLDAtLjA0NC0xLjY2OGwtLjczNC0uNzMzYTEuMjA2LDEuMjA2LDAsMCwwLTEuNjEyLS4wODlsLS4wNTIuMDQyYTIuMTQ4LDIuMTQ4LDAsMCwxLTIuMDE2LjRBNy4yMTMsNy4yMTMsMCwwLDAsMTIuODEyLDQuNFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNi40NTcsMTIuMjg2YS41MjMuNTIzLDAsMCwxLS4xNzgtLjAzMi41LjUsMCwwLDEtLjI5LS42NDYsOS44NDEsOS44NDEsMCwwLDEsNS4zMzgtNS41LjUuNSwwLDEsMSwuMzg2LjkyMSw4Ljg0NSw4Ljg0NSwwLDAsMC00Ljc4OSw0LjkzOUEuNS41LDAsMCwxLDYuNDU3LDEyLjI4NlpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUxpZ2h0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJMaWdodFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLDE4LjA5QTYuMDksNi4wOSwwLDEsMSwxOC4wOSwxMiw2LjEsNi4xLDAsMCwxLDEyLDE4LjA5Wk0xMiw2LjkxQTUuMDksNS4wOSwwLDEsMCwxNy4wOSwxMiw1LjEsNS4xLDAsMCwwLDEyLDYuOTFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjUsMi41Njh2MS42YS41LjUsMCwxLDAsMSwwdi0xLjZhLjUuNSwwLDEsMC0xLDBaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjUsMjEuNDMydi0xLjZhLjUuNSwwLDAsMC0xLDB2MS42YS41LjUsMCwxLDAsMSwwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMS40MzIsMTEuNWgtMS42YS41LjUsMCwwLDAsMCwxaDEuNmEuNS41LDAsMSwwLDAtMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMi41NjgsMTIuNWgxLjZhLjUuNSwwLDEsMCwwLTFoLTEuNmEuNS41LDAsMSwwLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguMzE2LDQuOTc3bC0uOTkyLjk5Mi0uMTQxLjE0MWEuNTE0LjUxNCwwLDAsMC0uMTQ2LjM1My41MDguNTA4LDAsMCwwLC4xNDYuMzU0LjUuNSwwLDAsMCwuMzU0LjE0Ni41MTUuNTE1LDAsMCwwLC4zNTMtLjE0NmwuOTkyLS45OTIuMTQxLS4xNDFhLjUxNS41MTUsMCwwLDAsLjE0Ny0uMzU0LjUwOC41MDgsMCwwLDAtLjE0Ny0uMzUzLjUuNSwwLDAsMC0uMzUzLS4xNDcuNTIyLjUyMiwwLDAsMC0uMzU0LjE0N1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS42ODQsMTkuMDIzbC45OTItLjk5Mi4xNDEtLjE0MWEuNTE0LjUxNCwwLDAsMCwuMTQ2LS4zNTMuNTA4LjUwOCwwLDAsMC0uMTQ2LS4zNTQuNS41LDAsMCwwLS4zNTQtLjE0Ni41MTUuNTE1LDAsMCwwLS4zNTMuMTQ2bC0uOTkyLjk5Mi0uMTQxLjE0MWEuNTE1LjUxNSwwLDAsMC0uMTQ3LjM1NC41MDguNTA4LDAsMCwwLC4xNDcuMzUzLjUuNSwwLDAsMCwuMzUzLjE0Ny41MjIuNTIyLDAsMCwwLC4zNTQtLjE0N1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuMDIzLDE4LjMxNmwtLjk5Mi0uOTkyLS4xNDEtLjE0MWEuNTE0LjUxNCwwLDAsMC0uMzUzLS4xNDYuNTA4LjUwOCwwLDAsMC0uMzU0LjE0Ni41LjUsMCwwLDAtLjE0Ni4zNTQuNTE1LjUxNSwwLDAsMCwuMTQ2LjM1M2wuOTkyLjk5Mi4xNDEuMTQxYS41MTUuNTE1LDAsMCwwLC4zNTQuMTQ3LjUwOC41MDgsMCwwLDAsLjM1My0uMTQ3LjUuNSwwLDAsMCwuMTQ3LS4zNTMuNTIyLjUyMiwwLDAsMC0uMTQ3LS4zNTRaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQuOTc3LDUuNjg0bC45OTIuOTkyLjE0MS4xNDFhLjUxNC41MTQsMCwwLDAsLjM1My4xNDYuNTA4LjUwOCwwLDAsMCwuMzU0LS4xNDYuNS41LDAsMCwwLC4xNDYtLjM1NC41MTUuNTE1LDAsMCwwLS4xNDYtLjM1M2wtLjk5Mi0uOTkyLS4xNDEtLjE0MUEuNTE1LjUxNSwwLDAsMCw1LjMzLDQuODNhLjUwOC41MDgsMCwwLDAtLjM1My4xNDcuNS41LDAsMCwwLS4xNDcuMzUzLjUyMi41MjIsMCwwLDAsLjE0Ny4zNTRaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lMaW5lSGVpZ2h0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJMaW5lX0hlaWdodFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzOSw0LjA2MmgtOWEuNS41LDAsMSwxLDAtMWg5YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzksOS42ODZoLTlhLjUuNSwwLDAsMSwwLTFoOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM5LDE1LjMxaC05YS41LjUsMCwwLDEsMC0xaDlhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzOSwyMC45MzRoLTlhLjUuNSwwLDAsMSwwLTFoOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy4yMDgsMTguOGEuNS41LDAsMCwxLC43MS0uNzFsMS4xNCwxLjE0VjQuNzc1bC0xLjE0LDEuMTRhLjUxMy41MTMsMCwwLDEtLjcxLDAsLjUuNSwwLDAsMSwwLS43MWwyLTJhLjQ5NC40OTQsMCwwLDEsLjM0LS4xNC41NDkuNTQ5LDAsMCwxLC4zNy4xNGwyLDJhLjUyNC41MjQsMCwwLDEsMCwuNzEuNS41LDAsMCwxLS43MSwwbC0xLjE1LTEuMTV2MTQuNDdsMS4xNS0xLjE1YS41LjUsMCwxLDEsLjcxLjcxbC0yLDJhLjUxMy41MTMsMCwwLDEtLjcxLDBaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lMaW5rIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJMaW5rXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAuOSw4YTQuMDU1LDQuMDU1LDAsMCwxLDEuMzUyLjEzNSwyLjUxMSwyLjUxMSwwLDAsMS0uNyw0Ljg2My41LjUsMCwwLDAsMCwxLDMuNTA4LDMuNTA4LDAsMCwwLDIuOTQ0LTUuMkEzLjU1NywzLjU1NywwLDAsMCwxMS40MzQsN0g1LjU5QTMuNSwzLjUsMCwwLDAsNS40LDE0Yy43MjQuMDQxLDEuNDU4LDAsMi4xODMsMGEuNS41LDAsMCwwLDAtMWgwYy0xLjMyMywwLTIuOTE1LjI2Mi0zLjg5MS0uODQzQTIuNTIyLDIuNTIyLDAsMCwxLDUuNTksOFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDEsMTdhMy41LDMuNSwwLDAsMCwuMTkyLTYuOTk0Yy0uNzI0LS4wNDEtMS40NTgsMC0yLjE4MywwYS41LjUsMCwwLDAsMCwxaDBjMS4zMjMsMCwyLjkxNS0uMjYyLDMuODkxLjg0M0EyLjUyMiwyLjUyMiwwLDAsMSwxOC40MSwxNkgxMy4xYTQuMDU1LDQuMDU1LDAsMCwxLTEuMzUyLS4xMzUsMi41MTEsMi41MTEsMCwwLDEsLjctNC44NjMuNS41LDAsMCwwLDAtMSwzLjUwOCwzLjUwOCwwLDAsMC0yLjk0NCw1LjJBMy41NTcsMy41NTcsMCwwLDAsMTIuNTY2LDE3WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpTGlua2VkaW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkxpbmtlZEluXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDQsMy4wNkg1LjU2YTIuNTA3LDIuNTA3LDAsMCwwLTIuNSwyLjVWMTguNDRhMi41MDcsMi41MDcsMCwwLDAsMi41LDIuNUgxOC40NGEyLjUsMi41LDAsMCwwLDIuNS0yLjVWNS41NkEyLjUsMi41LDAsMCwwLDE4LjQ0LDMuMDZabTEuNSwxNS4zOGExLjUxMSwxLjUxMSwwLDAsMS0xLjUsMS41SDUuNTZhMS41MTEsMS41MTEsMCwwLDEtMS41LTEuNVY1LjU2YTEuNTExLDEuNTExLDAsMCwxLDEuNS0xLjVIMTguNDRhMS41MTEsMS41MTEsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02LjM3NiwxMC43NDhhMSwxLDAsMSwxLDIsMHY2LjVoMGExLDEsMCwwLDEtMiwwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjcuMzc2XCIsXCJjeVwiOlwiNi43NDRcIixcInJcIjpcIjFcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNjIsMTMuMzd2My44OGExLDEsMCwxLDEtMiwwVjEzLjM3YTEuNjE1LDEuNjE1LDAsMSwwLTMuMjMsMHYzLjg4YTEsMSwwLDAsMS0yLDB2LTYuNWExLjAxNiwxLjAxNiwwLDAsMSwxLTEsLjk0Ljk0LDAsMCwxLC44NC40NywzLjYwOSwzLjYwOSwwLDAsMSw1LjM5LDMuMTVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUxvY2F0aW9uQXJyb3cxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJMb2NhdGlvbl9BcnJvd18xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LjQ3MiwyMC45MzdhMS40MzgsMS40MzgsMCwwLDEtMS4zLS44MTJMMTAuMywxNC4zNDNhMS40MTgsMS40MTgsMCwwLDAtLjY0Mi0uNjQxTDMuODc0LDEwLjgzMUExLjQ2MiwxLjQ2MiwwLDAsMSw0LjA2LDguMTM2bDE0Ljk1Mi01YTEuNDYsMS40NiwwLDAsMSwxLjg0OSwxLjg0N2wtNSwxNC45NTJhMS40MzksMS40MzksMCwwLDEtMS4yODQuOTk0QzE0LjU0MywyMC45MzYsMTQuNTA3LDIwLjkzNywxNC40NzIsMjAuOTM3Wk0xOS40NzksNC4wNjNhLjQ4OC40ODgsMCwwLDAtLjE0OS4wMjRoMGwtMTQuOTUyLDVhLjQ2LjQ2LDAsMCwwLS4wNTguODQ5TDEwLjEsMTIuODA1QTIuNDQ0LDIuNDQ0LDAsMCwxLDExLjIsMTMuOWwyLjg3LDUuNzgyYS40NDMuNDQzLDAsMCwwLC40NDUuMjU1LjQ1LjQ1LDAsMCwwLC40LS4zMTJsNS0xNC45NTNhLjQ2Mi40NjIsMCwwLDAtLjQzMy0uNjA3WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaUxvY2F0aW9uT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJMb2NhdGlvbl9PZmZcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC4yLDE0LjQ2MmEuNS41LDAsMCwxLS40MTctLjc3NUE2Ljc5MSw2Ljc5MSwwLDAsMCwxOC44MzEsOS4wNmE2LjkwOSw2LjkwOSwwLDAsMC02LjAyMi01Ljk0NkE2LjgzNCw2LjgzNCwwLDAsMCw4LjI1Miw0LjE3NWEuNS41LDAsMSwxLS41NDUtLjgzOCw3Ljg4Miw3Ljg4MiwwLDAsMSwxMC45MDksMTAuOUEuNS41LDAsMCwxLDE4LjIsMTQuNDYyWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00LDMuM2EuNS41LDAsMCwwLS43LjdsMS45MiwxLjkyYTcuNzg0LDcuNzg0LDAsMCwwLTEuMTEsNC4wM0E3Ljg3OSw3Ljg3OSwwLDAsMCw1LjU1LDE0LjVsNS4wNiw2Ljc0YTEuNzI0LDEuNzI0LDAsMCwwLDEuMzkuNjksMS43MDUsMS43MDUsMCwwLDAsMS4zOC0uNjlsMy4wNi00LjA5Yy41LjQ5Ljk5Ljk5LDEuNDgsMS40OC43LjY5LDEuMzksMS4zOCwyLjA4LDIuMDcuNDUuNDYsMS4xNi0uMjUuNy0uNzFabTguNTgsMTcuMzRhLjczNC43MzQsMCwwLDEtLjU4LjI5Ljc1NC43NTQsMCwwLDEtLjU5LS4yOWwtNS4wNS02LjczYTYuOSw2LjksMCwwLDEtLjQxLTcuMjZxMS41LDEuNTE1LDMuMDEsMy4wMSwzLjM5LDMuMzksNi43Nyw2Ljc4WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpTG9jYXRpb25PbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTG9jYXRpb25fT25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwyMS45MzNhMS43MTUsMS43MTUsMCwwLDEtMS4zODQtLjY5MUw1LjU1NSwxNC41YTcuODk0LDcuODk0LDAsMSwxLDEyLjg4NS0uMDA5TDEzLjM4NSwyMS4yNEExLjcxNywxLjcxNywwLDAsMSwxMiwyMS45MzNaTTExLjk5MiwzLjA2NkE2LjgxLDYuODEsMCwwLDAsNy40MTQsNC44MTVhNi44OTEsNi44OTEsMCwwLDAtMS4wNSw5LjFsNS4wNTEsNi43MjdhLjcyNS43MjUsMCwwLDAsLjU4NC4yOTJoMGEuNzMyLjczMiwwLDAsMCwuNTg2LS4yOTJsNS4wNDQtNi43MzRBNi44NzQsNi44NzQsMCwwLDAsMTIuODEsMy4xMTMsNy4yNzcsNy4yNzcsMCwwLDAsMTEuOTkyLDMuMDY2WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwxMi41QTIuNSwyLjUsMCwxLDEsMTQuNSwxMCwyLjUsMi41LDAsMCwxLDEyLDEyLjVabTAtNEExLjUsMS41LDAsMSwwLDEzLjUsMTAsMS41LDEuNSwwLDAsMCwxMiw4LjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lMb2NrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJMb2NrXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNDQsOS4zM2gtMS4xVjYuNGE0LjM0LDQuMzQsMCwwLDAtOC42OCwwVjkuMzNINi41NmEyLjUsMi41LDAsMCwwLTIuNSwyLjV2Ny42MWEyLjUwNywyLjUwNywwLDAsMCwyLjUsMi41SDE3LjQ0YTIuNTA3LDIuNTA3LDAsMCwwLDIuNS0yLjVWMTEuODNBMi41LDIuNSwwLDAsMCwxNy40NCw5LjMzWk04LjY2LDYuNGEzLjM0LDMuMzQsMCwwLDEsNi42OCwwVjkuMzNIOC42NlpNMTguOTQsMTkuNDRhMS41MTEsMS41MTEsMCwwLDEtMS41LDEuNUg2LjU2YTEuNTExLDEuNTExLDAsMCwxLTEuNS0xLjVWMTEuODNhMS41LDEuNSwwLDAsMSwxLjUtMS41SDE3LjQ0YTEuNSwxLjUsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMsMTQuOTVhLjk4NC45ODQsMCwwLDEtLjUuODZ2MS41YS41LjUsMCwwLDEtMSwwdi0xLjVhLjk4NC45ODQsMCwwLDEtLjUtLjg2LDEsMSwwLDAsMSwyLDBaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lMb2dpbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTG9naW5cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC45NDQsMTguNDMyYTIuNTc3LDIuNTc3LDAsMCwxLTIuNzI5LDIuNWMtMi4xNTMuMDEyLTQuMzA3LDAtNi40NiwwYS41LjUsMCwwLDEsMC0xYzIuMiwwLDQuNC4wMzIsNi42LDAsMS4xMDctLjAxNiwxLjU4OS0uODQ4LDEuNTg5LTEuODM4VjUuNjNhMS41NDUsMS41NDUsMCwwLDAtLjk2OS0xLjQ3MSwzLjAyNywzLjAyNywwLDAsMC0xLjA2MS0uMDk1SDExLjc1NWEuNS41LDAsMCwxLDAtMWMyLjIyNSwwLDQuNDY1LS4wODUsNi42ODgsMGEyLjU2NiwyLjU2NiwwLDAsMSwyLjUsMi42N1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNzk0LDEyLjM1NGEuNDU5LjQ1OSwwLDAsMCwuMTM4LS4zMTJBLjMuMywwLDAsMCwxNS45MzgsMTJhLjI5LjI5LDAsMCwwLS4wMDYtLjA0MS40NTUuNDU1LDAsMCwwLS4xMzgtLjMxM0wxMi4xMjUsNy45NzhhLjUuNSwwLDAsMC0uNzA3LjcwN0wxNC4yMzQsMTEuNUgzLjQ5MmEuNS41LDAsMCwwLDAsMUgxNC4yMzRsLTIuODE2LDIuODE1YS41LjUsMCwwLDAsLjcwNy43MDdaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lMb2dvdXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkxvZ291dFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjk2OCwxOC40NDhhMi41NzcsMi41NzcsMCwwLDEtMi43MywyLjVjLTIuMTUzLjAxMi00LjMwNiwwLTYuNDU5LDBhLjUuNSwwLDAsMSwwLTFjMi4yLDAsNC40LjAzMiw2LjYsMCwxLjEwNy0uMDE2LDEuNTg5LS44NDgsMS41ODktMS44MzhWNS42NDdBMS41NDYsMS41NDYsMCwwLDAsMTksNC4xNzVhMy4wMjMsMy4wMjMsMCwwLDAtMS4wNjEtLjA5NUgxMS43NzlhLjUuNSwwLDAsMSwwLTFjMi4yMjQsMCw0LjQ2NS0uMDg1LDYuNjg3LDBhMi41NjcsMi41NjcsMCwwLDEsMi41LDIuNjdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuMTc2LDExLjY2M2EuNDU1LjQ1NSwwLDAsMC0uMTM4LjMxMWMwLC4wMTUsMCwuMDI4LS4wMDYuMDQzczAsLjAyNy4wMDYuMDQxYS40NTcuNDU3LDAsMCwwLC4xMzguMzEybDMuNjY5LDMuNjY5YS41LjUsMCwwLDAsLjcwNy0uNzA3TDQuNzM3LDEyLjUxNkgxNS40NzlhLjUuNSwwLDAsMCwwLTFINC43MzdMNy41NTIsOC43YS41LjUsMCwwLDAtLjcwNy0uNzA3WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpTG9sbGlwb3AgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIkxvbGxpcG9wXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LDYuNTY1aC0uMTlhNiw2LDAsMCwwLTExLjYyLDBINmExLjUsMS41LDAsMSwwLDAsM2guMTlhNS45OTIsNS45OTIsMCwwLDAsNS4zMSw0LjQ4djcuMzlhLjUuNSwwLDAsMCwuNS41LjUuNSwwLDAsMCwuNS0uNXYtNy4zOWE2LjAxMyw2LjAxMywwLDAsMCw1LjMxLTQuNDhIMThhMS41LDEuNSwwLDEsMCwwLTNabS02LTMuNWE0Ljk5MSw0Ljk5MSwwLDAsMSw0Ljc3LDMuNUg3LjIzQTQuOTkxLDQuOTkxLDAsMCwxLDEyLDMuMDY1Wm0wLDEwYTQuOTkxLDQuOTkxLDAsMCwxLTQuNzctMy41aDkuNTRBNC45OTEsNC45OTEsMCwwLDEsMTIsMTMuMDY1Wm02LTQuNUg2YS41LjUsMCwwLDEtLjUtLjUuNS41LDAsMCwxLC41LS41SDE4YS41LjUsMCwwLDEsLjUuNUEuNTA4LjUwOCwwLDAsMSwxOCw4LjU2NVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNYWlsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNYWlsXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjQzNSw0LjA2NUg0LjU2NWEyLjUsMi41LDAsMCwwLTIuNSwyLjV2MTAuODdhMi41LDIuNSwwLDAsMCwyLjUsMi41aDE0Ljg3YTIuNSwyLjUsMCwwLDAsMi41LTIuNVY2LjU2NUEyLjUsMi41LDAsMCwwLDE5LjQzNSw0LjA2NVptLTE0Ljg3LDFoMTQuODdhMS40ODksMS40ODksMCwwLDEsMS40OSwxLjM5Yy0yLjQ3LDEuMzItNC45NSwyLjYzLTcuNDMsMy45NWE2LjE3Miw2LjE3MiwwLDAsMS0xLjA2LjUzLDIuMDgzLDIuMDgzLDAsMCwxLTEuNjctLjM5Yy0xLjQyLS43NS0yLjg0LTEuNTEtNC4yNS0yLjI2LTEuMTQtLjYtMi4zLTEuMjEtMy40NC0xLjgyQTEuNDkxLDEuNDkxLDAsMCwxLDQuNTY1LDUuMDY1Wm0xNi4zNywxMi4zN2ExLjUsMS41LDAsMCwxLTEuNSwxLjVINC41NjVhMS41LDEuNSwwLDAsMS0xLjUtMS41VjcuNmMyLjM2LDEuMjQsNC43MSwyLjUsNy4wNywzLjc1YTUuNjIyLDUuNjIyLDAsMCwwLDEuMzUuNiwyLjg3MiwyLjg3MiwwLDAsMCwyLS40MWMxLjQ1LS43NiwyLjg5LTEuNTMsNC4zNC0yLjI5LDEuMDQtLjU2LDIuMDctMS4xLDMuMTEtMS42NVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNYXBQaW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1hcF9QaW5cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMi4wNmE1LjUsNS41LDAsMCwwLS41LDEwLjk3djguNDFhLjUuNSwwLDAsMCwuNS41LjUuNSwwLDAsMCwuNS0uNVYxMy4wM0E1LjUsNS41LDAsMCwwLDEyLDIuMDZabTAsMTBhNC41LDQuNSwwLDEsMSw0LjUtNC41QTQuNSw0LjUsMCwwLDEsMTIsMTIuMDZaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpTWFwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNYXBcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuMjEsNC41NzZhMS45MDYsMS45MDYsMCwwLDAtMS42My0uMzVsLTMuNTMuODlhMS4wODYsMS4wODYsMCwwLDEtLjQ0LDBMOS42MywzLjg3NmEyLjA0MSwyLjA0MSwwLDAsMC0uOTIsMEw0LjUsNC45MzZhMS44OTMsMS44OTMsMCwwLDAtMS40NCwxLjg0djExLjE1YTEuODcxLDEuODcxLDAsMCwwLC43MywxLjUsMS45MDYsMS45MDYsMCwwLDAsMS42My4zNWwzLjUzLS44OWExLjA4NiwxLjA4NiwwLDAsMSwuNDQsMGw0Ljk4LDEuMjRhMi4zMTUsMi4zMTUsMCwwLDAsLjQ2LjA1LDIuNCwyLjQsMCwwLDAsLjQ2LS4wNWw0LjIxLTEuMDZhMS44OTMsMS44OTMsMCwwLDAsMS40NC0xLjg0VjYuMDc2QTEuODcxLDEuODcxLDAsMCwwLDIwLjIxLDQuNTc2Wk04LjY3LDE3LjkyNmwtMy40OS44N2EuODkuODksMCwwLDEtMS4xMi0uODdWNi43NzZhLjkuOSwwLDAsMSwuNjgtLjg3bDMuOTMtLjk5Wm01LjY2LDEuMTYtNC42Ni0xLjE2VjQuOTE2bDQuNjYsMS4xNlptNS42MS0xLjg2YS45LjksMCwwLDEtLjY4Ljg3bC0zLjkzLjk5VjYuMDc2bDMuNDktLjg3YS45MDguOTA4LDAsMCwxLC43OC4xNi44ODYuODg2LDAsMCwxLC4zNC43MVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNYXhpbWl6ZTEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1heGltaXplXzFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjA2NSwxNi4xNmEuNS41LDAsMCwxLDEsMHYzLjA3bC4wMS0uMDEsNi4wNy02LjA3YS41LjUsMCwwLDEsLjcxLjcxYy0uMjkuMjktLjU4LjU3LS44Ny44Ni0xLjc0LDEuNzQtMy40NywzLjQ4LTUuMjEsNS4yMmgzLjA3YS41LjUsMCwwLDEsMCwxSDMuNTY1YS40MjkuNDI5LDAsMCwxLS4zNC0uMTRjLS4wMS0uMDEtLjAyLS4wMS0uMDItLjAyYS4zODQuMzg0LDAsMCwxLS4xMy0uMjZDMy4wNjYsMjAuNDQyLDMuMDY1LDE2LjE2LDMuMDY1LDE2LjE2WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC45MzUsMy41NlY3Ljg0YS41LjUsMCwwLDEtMSwwVjQuNzdsLS4wMS4wMXEtMy4wNDUsMy4wMy02LjA3LDYuMDdhLjUuNSwwLDAsMS0uNzEtLjcxYy4yOS0uMjkuNTgtLjU3Ljg2LS44NiwxLjc1LTEuNzQsMy40OC0zLjQ4LDUuMjItNS4yMmgtMy4wN2EuNS41LDAsMCwxLDAtMWg0LjI4YS40MjkuNDI5LDAsMCwxLC4zNC4xNGMuMDEuMDEuMDIuMDEuMDIuMDJBLjQyOS40MjksMCwwLDEsMjAuOTM1LDMuNTZaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNYXhpbWl6ZTIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1heGltaXplXzJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMC41MTMsMy4wNjZINC45M2EyLjA1OCwyLjA1OCwwLDAsMC0xLjE1LjIyLDEuNiwxLjYsMCwwLDAtLjcxNywxLjQzN3Y1Ljc5M2EuNS41LDAsMCwwLDEsMFY1LjEwN2EyLjUyMSwyLjUyMSwwLDAsMSwuMDIyLS42ODljLjExNS0uMzczLjQ2OS0uMzUyLjc3Ny0uMzUyaDUuNjUxYS41LjUsMCwwLDAsMC0xWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjA2MywxMy40ODh2NS41ODNhMi4wNTcsMi4wNTcsMCwwLDAsLjIyMSwxLjE1LDEuNiwxLjYsMCwwLDAsMS40MzYuNzE3aDUuNzkzYS41LjUsMCwwLDAsMC0xSDUuMWEyLjQ4MywyLjQ4MywwLDAsMS0uNjg5LS4wMjJjLS4zNzItLjExNS0uMzUyLS40NjktLjM1Mi0uNzc3VjEzLjQ4OGEuNS41LDAsMCwwLTEsMFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuNDg3LDIwLjkzNEgxOS4wN2EyLjA1OCwyLjA1OCwwLDAsMCwxLjE1LS4yMiwxLjYsMS42LDAsMCwwLC43MTctMS40MzdWMTMuNDg0YS41LjUsMCwwLDAtMSwwdjUuNDA5YTIuNTIxLDIuNTIxLDAsMCwxLS4wMjIuNjg5Yy0uMTE1LjM3My0uNDY5LjM1Mi0uNzc3LjM1MkgxMy40ODdhLjUuNSwwLDAsMCwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjkzNywxMC41MTJWNC45MjlhMi4wNTcsMi4wNTcsMCwwLDAtLjIyMS0xLjE1LDEuNiwxLjYsMCwwLDAtMS40MzYtLjcxN0gxMy40ODdhLjUuNSwwLDAsMCwwLDFIMTguOWEyLjQ4MywyLjQ4MywwLDAsMSwuNjg5LjAyMmMuMzcyLjExNS4zNTIuNDY5LjM1Mi43Nzd2NS42NTFhLjUuNSwwLDAsMCwxLDBaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNZWRhbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTWVkYWxcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC42OTIsMy43NTVhMS41MTksMS41MTksMCwwLDAtMS4yNy0uNjloLTQuNDFhMS40ODcsMS40ODcsMCwwLDAtMS4zNi44N0wxMiw3LjQ4NWwtMS42Ni0zLjU1YTEuNDg3LDEuNDg3LDAsMCwwLTEuMzYtLjg3SDQuNTcyYTEuNSwxLjUsMCwwLDAtMS4zNSwyLjE0bDMuNzMsOC4wMmE1LjYzOCw1LjYzOCwwLDAsMC0uNDYsMi4yMSw1LjUsNS41LDAsMCwwLDExLDAsNS40MTksNS40MTksMCwwLDAtLjQ2LTIuMmwzLjc1LTguMDNBMS41MjUsMS41MjUsMCwwLDAsMjAuNjkyLDMuNzU1Wk00LjEyMiw0Ljc4NWEuNTI3LjUyNywwLDAsMSwuMDMtLjQ5LjQ5NC40OTQsMCwwLDEsLjQyLS4yM2g0LjQxYS41MDcuNTA3LDAsMCwxLC40Ni4yOWwyLjYxLDUuNThoLS4wNmE1LjUwNSw1LjUwNSwwLDAsMC00LjQzLDIuMjVabTcuODcsMTUuMTVhNC41LDQuNSwwLDEsMSw0LjUtNC41QTQuNSw0LjUsMCwwLDEsMTEuOTkyLDE5LjkzNVptNy44OS0xNS4xNS0zLjQ2LDcuNGE1LjQ1NCw1LjQ1NCwwLDAsMC0zLjIxLTIuMTFsLS42Ni0xLjQyLDItNC4zYS41MDcuNTA3LDAsMCwxLC40Ni0uMjloNC40MWEuNDgyLjQ4MiwwLDAsMSwuNDIuMjNBLjUwNS41MDUsMCwwLDEsMTkuODgyLDQuNzg1WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi4wNzcsMTYuODhsMS4wMjQuNTM4YS4xNzQuMTc0LDAsMCwwLC4yNTMtLjE4NGwtLjItMS4xNGEuMTc0LjE3NCwwLDAsMSwuMDUxLS4xNTRsLjgyOC0uODA3YS4xNzUuMTc1LDAsMCwwLS4xLS4zTDEyLjgsMTQuNjY5YS4xNzcuMTc3LDAsMCwxLS4xMzItLjFsLS41MTItMS4wMzdhLjE3NC4xNzQsMCwwLDAtLjMxMywwbC0uNTEyLDEuMDM3YS4xNzQuMTc0LDAsMCwxLS4xMzEuMWwtMS4xNDUuMTY2YS4xNzUuMTc1LDAsMCwwLS4xLjNsLjgyOC44MDdhLjE3NC4xNzQsMCwwLDEsLjA1LjE1NGwtLjIsMS4xNGEuMTc0LjE3NCwwLDAsMCwuMjUzLjE4NGwxLjAyNC0uNTM4QS4xNzIuMTcyLDAsMCwxLDEyLjA3NywxNi44OFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1lZGljYWxDYXNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNZWRpY2FsX0Nhc2VcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzUsNi40NjVoLTEuNDN2LS45YTIuNSwyLjUsMCwwLDAtMi41LTIuNWgtNWEyLjUsMi41LDAsMCwwLTIuNSwyLjV2LjlINS41NjVhMi41LDIuNSwwLDAsMC0yLjUsMi41djkuNDdhMi41LDIuNSwwLDAsMCwyLjUsMi41aDEyLjg3YTIuNSwyLjUsMCwwLDAsMi41LTIuNVY4Ljk2NUEyLjUsMi41LDAsMCwwLDE4LjQzNSw2LjQ2NVptLTEwLjQzLS45YTEuNSwxLjUsMCwwLDEsMS41LTEuNWg1YTEuNSwxLjUsMCwwLDEsMS41LDEuNXYuOWgtOFptMTEuOTMsMTIuODdhMS41LDEuNSwwLDAsMS0xLjUsMS41SDUuNTY1YTEuNSwxLjUsMCwwLDEtMS41LTEuNVY4Ljk2NWExLjUsMS41LDAsMCwxLDEuNS0xLjVoMTIuODdhMS41LDEuNSwwLDAsMSwxLjUsMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC41MDUsMTMuNjc1YS41LjUsMCwwLDEtLjUuNWgtMS41djEuNWEuNS41LDAsMCwxLS41LjUuNS41LDAsMCwxLS41LS41di0xLjVoLTEuNWEuNS41LDAsMCwxLS41LS41LjUuNSwwLDAsMSwuNS0uNWgxLjV2LTEuNWEuNS41LDAsMCwxLC41LS41LjUwOC41MDgsMCwwLDEsLjUuNXYxLjVoMS41QS41MDguNTA4LDAsMCwxLDE0LjUwNSwxMy42NzVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNZWRpY2FsQ2xpcGJvYXJkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNZWRpY2FsX0NsaXBib2FyZFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjQ0LDMuNUgxNS43NVYyLjk3YS45NDkuOTQ5LDAsMCwwLTEtLjkxSDkuMjVhLjk0OS45NDksMCwwLDAtMSwuOTFWMy41SDYuNTZBMi41LDIuNSwwLDAsMCw0LjA2LDZWMTkuNDRhMi41LDIuNSwwLDAsMCwyLjUsMi41SDE3LjQ0YTIuNSwyLjUsMCwwLDAsMi41LTIuNVY2QTIuNSwyLjUsMCwwLDAsMTcuNDQsMy41Wk05LjI1LDMuMDZsNS41LjAxVjQuMTljMCwuNjEtLjY5LDEuMTItMS41LDEuMTJoLTIuNWMtLjgyLDAtMS41LS41MS0xLjUtMS4xMlptOS42OSwxNi4zOGExLjUxMSwxLjUxMSwwLDAsMS0xLjUsMS41SDYuNTZhMS41LDEuNSwwLDAsMS0xLjUtMS41VjZhMS41LDEuNSwwLDAsMSwxLjUtMS41SDguMjhhMi40LDIuNCwwLDAsMCwyLjQ3LDEuODFoMi41QTIuNCwyLjQsMCwwLDAsMTUuNzIsNC41aDEuNzJBMS41LDEuNSwwLDAsMSwxOC45NCw2WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC41LDEyLjcxYS41LjUsMCwwLDEtLjUuNUgxMi41djEuNWEuNS41LDAsMCwxLS41LjUuNS41LDAsMCwxLS41LS41di0xLjVIMTBhLjUuNSwwLDAsMS0uNS0uNS41LjUsMCwwLDEsLjUtLjVoMS41di0xLjVhLjUuNSwwLDAsMSwuNS0uNS41MDguNTA4LDAsMCwxLC41LjV2MS41SDE0QS41MDguNTA4LDAsMCwxLDE0LjUsMTIuNzFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNZWRpY2FsQ3Jvc3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1lZGljYWxfQ3Jvc3NcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuOTQzLDIwLjkzSDExLjA1N2EyLjM4OCwyLjM4OCwwLDAsMS0yLjM4Ni0yLjM4NlYxNS4zbC0zLjIxNS4wMjlhMi4zOSwyLjM5LDAsMCwxLTIuMzg3LTIuMzg2VjExLjA1N0EyLjM5LDIuMzksMCwwLDEsNS40NTYsOC42N0g4LjdMOC42NzEsNS40NTZBMi4zODgsMi4zODgsMCwwLDEsMTEuMDU3LDMuMDdoMS44ODZhMi4zODgsMi4zODgsMCwwLDEsMi4zODYsMi4zODZWOC43bDMuMjE1LS4wM2EyLjM5LDIuMzksMCwwLDEsMi4zODcsMi4zODd2MS44ODZhMi4zOSwyLjM5LDAsMCwxLTIuMzg3LDIuMzg2SDE1LjNsLjAyOCwzLjIxNUEyLjM4OCwyLjM4OCwwLDAsMSwxMi45NDMsMjAuOTNaTTUuNDU2LDkuNjdhMS4zODgsMS4zODgsMCwwLDAtMS4zODcsMS4zODd2MS44ODZhMS4zODgsMS4zODgsMCwwLDAsMS4zODcsMS4zODZIOC43YS45NzIuOTcyLDAsMCwxLC45NzIuOTcxdjMuMjQ0YTEuMzg4LDEuMzg4LDAsMCwwLDEuMzg2LDEuMzg2aDEuODg2YTEuMzg4LDEuMzg4LDAsMCwwLDEuMzg2LTEuMzg2VjE1LjNhLjk3Mi45NzIsMCwwLDEsLjk3Mi0uOTcxaDMuMjQzYTEuMzg4LDEuMzg4LDAsMCwwLDEuMzg3LTEuMzg2VjExLjA1N0ExLjM4OCwxLjM4OCwwLDAsMCwxOC41NDQsOS42N0gxNS4zYS45NzIuOTcyLDAsMCwxLS45NzItLjk3VjUuNDU2QTEuMzg4LDEuMzg4LDAsMCwwLDEyLjk0Myw0LjA3SDExLjA1N0ExLjM4OCwxLjM4OCwwLDAsMCw5LjY3MSw1LjQ1NlY4LjdhLjk3Mi45NzIsMCwwLDEtLjk3Mi45N1pcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNZWRpY2FsTWFzayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTWVkaWNhbF9NYXNrXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuNDM1LDEyLjUzSDE5LjVWOS4xN2gxLjk0YS41LjUsMCwwLDAsLjUtLjUuNS41LDAsMCwwLS41LS41SDE5LjVWNy4yM0EyLjUsMi41LDAsMCwwLDE3LDQuNzNIN2EyLjUwNywyLjUwNywwLDAsMC0yLjUsMi41di45NEgyLjU2NWEuNS41LDAsMCwwLS41LjUuNS41LDAsMCwwLC41LjVINC41djMuMzZIMi41NjVhLjUuNSwwLDAsMC0uNS41LjUuNSwwLDAsMCwuNS41SDQuNXYuMzNhNC4yODMsNC4yODMsMCwwLDAsMi40MywzLjg0bDEuNzQuODJhNy43OSw3Ljc5LDAsMCwwLDYuNjcsMGwxLjczLS44MmguMDFhNC4yNzQsNC4yNzQsMCwwLDAsMi40Mi0zLjg0di0uMzNoMS45NGEuNS41LDAsMCwwLC41LS41QS41LjUsMCwwLDAsMjEuNDM1LDEyLjUzWk0xOC41LDEzLjg2YTMuMjM4LDMuMjM4LDAsMCwxLTEuODUsMi45M2wtMS43My44MmE2Ljc2Nyw2Ljc2NywwLDAsMS01LjgzLDBsLTEuNzMtLjgyQTMuMjQ4LDMuMjQ4LDAsMCwxLDUuNSwxMy44NlY3LjIzQTEuNSwxLjUsMCwwLDEsNyw1LjczSDE3YTEuNSwxLjUsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNSwxNC41MzRoLTVhLjUuNSwwLDAsMSwwLTFoNWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYsMTAuMTY4SDhhLjUuNSwwLDEsMSwwLTFoOGEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1lbW9QYWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1lbW9fUGFkXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNDQsMi4wNjVINi41NmEyLjUwNywyLjUwNywwLDAsMC0yLjUsMi41djE0Ljg3YTIuNTA3LDIuNTA3LDAsMCwwLDIuNSwyLjVIMTcuNDRhMi41LDIuNSwwLDAsMCwyLjUtMi41VjQuNTY1QTIuNSwyLjUsMCwwLDAsMTcuNDQsMi4wNjVabTEuNSwxNy4zN2ExLjUsMS41LDAsMCwxLTEuNSwxLjVINi41NmExLjUsMS41LDAsMCwxLTEuNS0xLjVWNi41MDVIMTguOTRaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy41NDksOS41MDZoMGEuNS41LDAsMCwxLDAtMWg4LjkwOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy41NDksMTIuNTA2aDBhLjUuNSwwLDAsMSwwLTFoNi41YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03LjU2NiwxOC4zNzRoMGEuNS41LDAsMSwxLDAtMWgzLjI1MWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpTWVudUJ1cmdlciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTWVudV9CdXJnZXJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy41NjMsNC4wNjNjLTAuMjc2LC0wIC0wLjUsLTAuMjI0IC0wLjUsLTAuNWMtMCwtMC4yNzYgMC4yMjQsLTAuNSAwLjUsLTAuNWwxNi44NzQsLTAuMDAxYzAuMjc2LC0wIDAuNSwwLjIyNCAwLjUsMC41YzAsMC4yNzYgLTAuMjI0LDAuNSAtMC41LDAuNWwtMTYuODc0LDAuMDAxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjU2MywxMi41MDFjLTAuMjc2LC0wIC0wLjUsLTAuMjI0IC0wLjUsLTAuNWMtMCwtMC4yNzYgMC4yMjQsLTAuNSAwLjUsLTAuNWwxNi44NzQsLTAuMDAyYzAuMjc2LDAgMC41LDAuMjI0IDAuNSwwLjVjMCwwLjI3NiAtMC4yMjQsMC41IC0wLjUsMC41bC0xNi44NzQsMC4wMDJaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuNTYzLDIwLjkzOWMtMC4yNzYsLTAgLTAuNSwtMC4yMjQgLTAuNSwtMC41Yy0wLC0wLjI3NiAwLjIyNCwtMC41IDAuNSwtMC41bDE2Ljg3NCwtMC4wMDJjMC4yNzYsMCAwLjUsMC4yMjQgMC41LDAuNWMwLDAuMjc2IC0wLjIyNCwwLjUgLTAuNSwwLjVsLTE2Ljg3NCwwLjAwMlpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNZW51RnJpZXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1lbnVfRnJpZXNcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDE5LjkzN2MwLjI3NiwwIDAuNSwwLjIyNCAwLjUsMC41YzAsMC4yNzYgLTAuMjI0LDAuNSAtMC41LDAuNWwtMTYuODc0LDAuMDAyYy0wLjI3NiwtMCAtMC41LC0wLjIyNCAtMC41LC0wLjVjLTAsLTAuMjc2IDAuMjI0LC0wLjUgMC41LC0wLjVsMTYuODc0LC0wLjAwMlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDExLjVjMC4yNzYsLTAgMC41LDAuMjI0IDAuNSwwLjVjMCwwLjI3NiAtMC4yMjQsMC41IC0wLjUsMC41bC0xMCwwLjAwMWMtMC4yNzYsLTAgLTAuNSwtMC4yMjQgLTAuNSwtMC41Yy0wLC0wLjI3NiAwLjIyNCwtMC41IDAuNSwtMC41bDEwLC0wLjAwMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDMuMDYyYzAuMjc2LC0wIDAuNSwwLjIyNCAwLjUsMC41YzAsMC4yNzYgLTAuMjI0LDAuNSAtMC41LDAuNWwtMTYuODc0LDAuMDAxYy0wLjI3NiwtMCAtMC41LC0wLjIyNCAtMC41LC0wLjVjLTAsLTAuMjc2IDAuMjI0LC0wLjUgMC41LC0wLjVsMTYuODc0LC0wLjAwMVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNZW51S2ViYWIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1lbnVfS2ViYWJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNSwxMmMwLDEuMzggLTEuMTIsMi41IC0yLjUsMi41Yy0xLjM4LC0wIC0yLjUsLTEuMTIgLTIuNSwtMi41YzAsLTEuMzggMS4xMiwtMi41IDIuNSwtMi41YzEuMzgsLTAgMi41LDEuMTIgMi41LDIuNVptLTEsLTBjMCwtMC44MjggLTAuNjcyLC0xLjUgLTEuNSwtMS41Yy0wLjgyOCwtMCAtMS41LDAuNjcyIC0xLjUsMS41YzAsMC44MjggMC42NzIsMS41IDEuNSwxLjVjMC44MjgsLTAgMS41LC0wLjY3MiAxLjUsLTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNSw0LjU2M2MwLDEuMzggLTEuMTIsMi41IC0yLjUsMi41Yy0xLjM4LC0wIC0yLjUsLTEuMTIgLTIuNSwtMi41YzAsLTEuMzggMS4xMiwtMi41IDIuNSwtMi41YzEuMzgsLTAgMi41LDEuMTIgMi41LDIuNVptLTEsLTBjMCwtMC44MjggLTAuNjcyLC0xLjUgLTEuNSwtMS41Yy0wLjgyOCwtMCAtMS41LDAuNjcyIC0xLjUsMS41YzAsMC44MjggMC42NzIsMS41IDEuNSwxLjVjMC44MjgsLTAgMS41LC0wLjY3MiAxLjUsLTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNSwxOS40MzdjMCwxLjM4IC0xLjEyLDIuNSAtMi41LDIuNWMtMS4zOCwwIC0yLjUsLTEuMTIgLTIuNSwtMi41YzAsLTEuMzggMS4xMiwtMi41IDIuNSwtMi41YzEuMzgsMCAyLjUsMS4xMiAyLjUsMi41Wm0tMSwwYzAsLTAuODI4IC0wLjY3MiwtMS41IC0xLjUsLTEuNWMtMC44MjgsMCAtMS41LDAuNjcyIC0xLjUsMS41YzAsMC44MjggMC42NzIsMS41IDEuNSwxLjVjMC44MjgsMCAxLjUsLTAuNjcyIDEuNSwtMS41WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1pY3JvY2hpcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTWljcm9jaGlwXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMsMTQuNUgxMUExLjUsMS41LDAsMCwxLDkuNSwxM1YxMUExLjUsMS41LDAsMCwxLDExLDkuNWgyQTEuNSwxLjUsMCwwLDEsMTQuNSwxMXYyQTEuNSwxLjUsMCwwLDEsMTMsMTQuNVptLTItNGEuNS41LDAsMCwwLS41LjV2MmEuNS41LDAsMCwwLC41LjVoMmEuNS41LDAsMCwwLC41LS41VjExYS41LjUsMCwwLDAtLjUtLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzNSwxNC41aC0xLjkzdi01aDEuOTNhLjUuNSwwLDAsMCwwLTFoLTEuOTNWOGEyLjUwNywyLjUwNywwLDAsMC0yLjUtMi41aC0uNVYzLjU2NWEuNTA4LjUwOCwwLDAsMC0uNS0uNS41LjUsMCwwLDAtLjUuNVY1LjVoLTVWMy41NjVhLjUwOC41MDgsMCwwLDAtLjUtLjUuNS41LDAsMCwwLS41LjVWNS41aC0uNUEyLjUsMi41LDAsMCwwLDUuNTA1LDh2LjVIMy41NjVhLjUuNSwwLDEsMCwwLDFoMS45NHY1SDMuNTY1YS41LjUsMCwxLDAsMCwxaDEuOTRWMTZhMi41LDIuNSwwLDAsMCwyLjUsMi41aC41djEuOTRhLjUuNSwwLDAsMCwxLDBWMTguNWg1djEuOTRhLjUuNSwwLDAsMCwxLDBWMTguNWguNWEyLjUwNywyLjUwNywwLDAsMCwyLjUtMi41di0uNWgxLjkzYS41LjUsMCwwLDAsMC0xWk0xNy41MDUsMTZhMS41LDEuNSwwLDAsMS0xLjUsMS41aC04YTEuNSwxLjUsMCwwLDEtMS41LTEuNVY4YTEuNSwxLjUsMCwwLDEsMS41LTEuNWg4YTEuNTExLDEuNTExLDAsMCwxLDEuNSwxLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNaWNyb3Bob25lT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNaWNyb3Bob25lX09mZlwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjUsNy4wNDZ2NC43MmEuNS41LDAsMCwxLTEsMFY5Ljk0NkgxNGEuNS41LDAsMCwxLDAtMWgxLjV2LTJIMTMuNTdhLjUuNSwwLDAsMSwwLTFoMS44N2EzLjIzLDMuMjMsMCwwLDAtLjItLjcyLDMuNTMzLDMuNTMzLDAsMCwwLTYuMTYtLjU5Yy0uMzYuNTMtMS4yMy4wMy0uODctLjVhNC41MDksNC41MDksMCwwLDEsNy43MS4yMUE1LjI1NSw1LjI1NSwwLDAsMSwxNi41LDcuMDQ2WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC4xNCwxOS40MzZxLTIuNjI1LTIuNjQtNS4yNy01LjI4UTEwLjY4NSw5Ljk4Niw2LjUxLDUuOGMtLjY1LS42NC0xLjMtMS4yOS0xLjk0LTEuOTRhLjUuNSwwLDAsMC0uNzEuNzFRNS42OSw2LjM4MSw3LjUsOC4yMDZ2My45MmE0LjU5MSw0LjU5MSwwLDAsMCwzLjU5LDQuNjEsNC42MjksNC42MjksMCwwLDAsMy45LTEuMDRjLjI0LjI0LjQ4LjQ3LjcxLjcxYTUuMjUyLDUuMjUyLDAsMCwxLTYuNjIuNjcsNS4yLDUuMiwwLDAsMS0yLjA1LTIuNzYsNy42MDgsNy42MDgsMCwwLDEtLjI0LTIuMzN2LTIuMmEuNS41LDAsMCwwLTEsMCwxNS40NjMsMTUuNDYzLDAsMCwwLC4zNCw0Ljk5LDYuMjc2LDYuMjc2LDAsMCwwLDUuMzcsNC4xN3YxLjk5SDhhLjUuNSwwLDAsMCwwLDFoOGEuNS41LDAsMCwwLDAtMUgxMi41di0yYTYuMTE4LDYuMTE4LDAsMCwwLDMuOTEtMS44MmwxLjA4LDEuMDhjLjY1LjY1LDEuMywxLjMsMS45NSwxLjk0QS41LjUsMCwwLDAsMjAuMTQsMTkuNDM2Wm0tMTEuMi01LjQyYTMuOTkxLDMuOTkxLDAsMCwxLS40NC0yLjAzVjkuMjA2bDUuNzcsNS43N0EzLjUyMSwzLjUyMSwwLDAsMSw4Ljk0LDE0LjAxNlpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1pY3JvcGhvbmVPbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTWljcm9waG9uZV9PblwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjk4OSwyLjA2NWE0LjUwNyw0LjUwNywwLDAsMC00LjUsNC41djUuNzZhNC41LDQuNSwwLDAsMCw5LDBWNi41NjVBNC41MDcsNC41MDcsMCwwLDAsMTEuOTg5LDIuMDY1Wm0wLDEzLjc2YTMuNSwzLjUsMCwwLDEtMy41LTMuNVY2LjU2NWEzLjUsMy41LDAsMCwxLDYuOTQtLjYyaC0xLjg3YS41LjUsMCwwLDAtLjUuNS41LjUsMCwwLDAsLjUuNWgxLjkzdjJoLTEuOTNhLjUuNSwwLDAsMC0uNS41LjUwOC41MDgsMCwwLDAsLjUuNWgxLjkzdjJoLTEuOTRhLjUwOC41MDgsMCwwLDAtLjUuNS41MTUuNTE1LDAsMCwwLC41LjVoMS44OEEzLjQ5MiwzLjQ5MiwwLDAsMSwxMS45ODksMTUuODI1WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi40ODksMTguOTI1djIuMDFoMy41YS41LjUsMCwwLDEsMCwxaC04YS41LjUsMCwwLDEsMC0xaDMuNXYtMS45OWE2LjA1NSw2LjA1NSwwLDAsMS0yLjc0LS44OCw2LjI5MSw2LjI5MSwwLDAsMS0yLjk3LTUuMTRjLS4wMy0xLjA0LDAtMi4wOSwwLTMuMTNhLjUuNSwwLDAsMSwxLDBjMCwxLjA0LS4wMywyLjA5LDAsMy4xM0E1LjIxMiw1LjIxMiwwLDAsMCwxNy4yLDEyLjdjLjAxLS45NiwwLTEuOTMsMC0yLjlhLjUuNSwwLDAsMSwxLDAsMjYuMzIyLDI2LjMyMiwwLDAsMS0uMDgsMy45N0E2LjIzNSw2LjIzNSwwLDAsMSwxMi40ODksMTguOTI1WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpTWluaW1pemUxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNaW5pbWl6ZV8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEsMTcuNzhhLjUuNSwwLDAsMS0xLDBWMTQuNzFMMy45MiwyMC43OWEuNS41LDAsMCwxLS43MS0uNzFjLjI5LS4yOS41OC0uNTcuODctLjg2QzUuODIsMTcuNDgsNy41NSwxNS43NCw5LjMsMTRINi4yMmEuNS41LDAsMCwxLDAtMUgxMC41YS40MjkuNDI5LDAsMCwxLC4zNC4xNGMuMDEuMDEuMDIuMDEuMDIuMDJhLjM4NC4zODQsMCwwLDEsLjEzLjI2WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC43LDEwaDMuMDhhLjUuNSwwLDAsMSwwLDFIMTMuNWEuNDI5LjQyOSwwLDAsMS0uMzQtLjE0Yy0uMDEtLjAxLS4wMi0uMDEtLjAyLS4wMmEuMzg0LjM4NCwwLDAsMS0uMTMtLjI2TDEzLDYuMjJhLjUuNSwwLDAsMSwxLDBWOS4yOWwuMDEtLjAxLDYuMDctNi4wN2EuNS41LDAsMCwxLC43MS43MVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1pbmltaXplMiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTWluaW1pemVfMlwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuNTYzLDExLjAxNkg5LjE0NkEyLjA1NywyLjA1NywwLDAsMCwxMC4zLDEwLjhhMS42LDEuNiwwLDAsMCwuNzE3LTEuNDM2VjMuNTY2YS41LjUsMCwwLDAtMSwwVjguOTc0YTIuNDgxLDIuNDgxLDAsMCwxLS4wMjIuNjg5Yy0uMTE1LjM3My0uNDY4LjM1My0uNzc3LjM1M0gzLjU2M2EuNS41LDAsMCwwLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuMDEzLDIwLjQzOFYxNC44NTVhMi4wNjUsMi4wNjUsMCwwLDAtLjIyLTEuMTUsMS42LDEuNiwwLDAsMC0xLjQzNy0uNzE3SDMuNTYzYS41LjUsMCwwLDAsMCwxSDguOTcyYTIuNDgyLDIuNDgyLDAsMCwxLC42ODkuMDIyYy4zNzMuMTE1LjM1Mi40NjkuMzUyLjc3N3Y1LjY1MWEuNS41LDAsMCwwLDEsMFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDEyLjk4NEgxNC44NTRhMi4wNTcsMi4wNTcsMCwwLDAtMS4xNS4yMjEsMS42LDEuNiwwLDAsMC0uNzE3LDEuNDM2djUuNzkzYS41LjUsMCwwLDAsMSwwVjE1LjAyNmEyLjQ4MSwyLjQ4MSwwLDAsMSwuMDIyLS42ODljLjExNS0uMzczLjQ2OC0uMzUzLjc3Ny0uMzUzaDUuNjUxYS41LjUsMCwwLDAsMC0xWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi45ODcsMy41NjJWOS4xNDVhMi4wNjUsMi4wNjUsMCwwLDAsLjIyLDEuMTUsMS42LDEuNiwwLDAsMCwxLjQzNy43MTdoNS43OTNhLjUuNSwwLDAsMCwwLTFIMTUuMDI4YTIuNDgyLDIuNDgyLDAsMCwxLS42ODktLjAyMmMtLjM3My0uMTE1LS4zNTItLjQ2OS0uMzUyLS43NzdWMy41NjJhLjUuNSwwLDAsMC0xLDBaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNb2JpbGUxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNb2JpbGVfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwLDE4LjkzM2g0YS41LjUsMCwwLDAsMC0xSDEwYS41LjUsMCwwLDAsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi43MjcsMjEuOTM3SDcuMjczYTIuMzg0LDIuMzg0LDAsMCwxLTIuMjM5LTIuNVY0LjU2M2EyLjM4NCwyLjM4NCwwLDAsMSwyLjIzOS0yLjVoOS40NTRhMi4zODQsMi4zODQsMCwwLDEsMi4yMzksMi41VjE5LjQzN0EyLjM4NCwyLjM4NCwwLDAsMSwxNi43MjcsMjEuOTM3Wk03LjI3MywzLjA2M2ExLjM5LDEuMzksMCwwLDAtMS4yMzksMS41VjE5LjQzN2ExLjM5LDEuMzksMCwwLDAsMS4yMzksMS41aDkuNDU0YTEuMzksMS4zOSwwLDAsMCwxLjIzOS0xLjVWNC41NjNhMS4zOSwxLjM5LDAsMCwwLTEuMjM5LTEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1vYmlsZTIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1vYmlsZV8yXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMlwiLFwiY3lcIjpcIjE3LjkzN1wiLFwiclwiOlwiMVwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi43MjcsMjEuOTM3SDcuMjczYTIuMzg0LDIuMzg0LDAsMCwxLTIuMjM5LTIuNVY0LjU2M2EyLjM4NCwyLjM4NCwwLDAsMSwyLjIzOS0yLjVoOS40NTRhMi4zODQsMi4zODQsMCwwLDEsMi4yMzksMi41VjE5LjQzN0EyLjM4NCwyLjM4NCwwLDAsMSwxNi43MjcsMjEuOTM3Wk03LjI3MywzLjA2M2ExLjM5LDEuMzksMCwwLDAtMS4yMzksMS41VjE5LjQzN2ExLjM5LDEuMzksMCwwLDAsMS4yMzksMS41aDkuNDU0YTEuMzksMS4zOSwwLDAsMCwxLjIzOS0xLjVWNC41NjNhMS4zOSwxLjM5LDAsMCwwLTEuMjM5LTEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1vYmlsZTMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk1vYmlsZV8zXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNzMsMi4wNjVINy4yN2EyLjM4NiwyLjM4NiwwLDAsMC0yLjI0LDIuNXYxNC44N2EyLjM4NiwyLjM4NiwwLDAsMCwyLjI0LDIuNWg5LjQ2YTIuMzg2LDIuMzg2LDAsMCwwLDIuMjQtMi41VjQuNTY1QTIuMzg2LDIuMzg2LDAsMCwwLDE2LjczLDIuMDY1Wm0xLjI0LDE3LjM3YTEuMzkxLDEuMzkxLDAsMCwxLTEuMjQsMS41SDcuMjdhMS4zOTEsMS4zOTEsMCwwLDEtMS4yNC0xLjVWNC41NjVhMS4zOTEsMS4zOTEsMCwwLDEsMS4yNC0xLjVIOC44di41MWExLDEsMCwwLDAsMSwxaDQuNGExLDEsMCwwLDAsMS0xdi0uNTFoMS41M2ExLjM5MSwxLjM5MSwwLDAsMSwxLjI0LDEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAsMTguOTM0aDRhLjUuNSwwLDAsMCwwLTFIMTBhLjUuNSwwLDAsMCwwLDFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNb2JpbGU0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNb2JpbGVfNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTIuMDAzXCIsXCJjeVwiOlwiMTguOTM3XCIsXCJyXCI6XCIxXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjcyNSwyLjA2NUg3LjI3NWEyLjM4NiwyLjM4NiwwLDAsMC0yLjI0LDIuNXYxNC44N2EyLjM4NiwyLjM4NiwwLDAsMCwyLjI0LDIuNWg5LjQ1YTIuMzc5LDIuMzc5LDAsMCwwLDIuMjQtMi41VjQuNTY1QTIuMzc5LDIuMzc5LDAsMCwwLDE2LjcyNSwyLjA2NVptMS4yNCwxNy4zN2ExLjM4NCwxLjM4NCwwLDAsMS0xLjI0LDEuNUg3LjI3NWExLjM5MSwxLjM5MSwwLDAsMS0xLjI0LTEuNXYtMi41aDExLjkzWm0wLTMuNUg2LjAzNVY0LjU2NWExLjM5MSwxLjM5MSwwLDAsMSwxLjI0LTEuNWg5LjQ1YTEuMzg0LDEuMzg0LDAsMCwxLDEuMjQsMS41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpTW9uZXlCaWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNb25leV9CaWxsXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNDQsNS43OEg0LjU2YTIuNTA3LDIuNTA3LDAsMCwwLTIuNSwyLjV2Ny40NGEyLjUxNCwyLjUxNCwwLDAsMCwyLjUsMi41SDE5LjQ0YTIuNTA3LDIuNTA3LDAsMCwwLDIuNS0yLjVWOC4yOEEyLjUsMi41LDAsMCwwLDE5LjQ0LDUuNzhaTTMuMDYsOC4yOGExLjUsMS41LDAsMCwxLDEuNS0xLjVINi4wNEEzLjUyMSwzLjUyMSwwLDAsMSwzLjA2LDkuNzZabTEuNSw4Ljk0YTEuNTExLDEuNTExLDAsMCwxLTEuNS0xLjVWMTQuMjRhMy41MjEsMy41MjEsMCwwLDEsMi45OCwyLjk4Wm0xNi4zOC0xLjVhMS41LDEuNSwwLDAsMS0xLjUsMS41SDE3Ljk2YTMuNTIxLDMuNTIxLDAsMCwxLDIuOTgtMi45OFptMC0yLjQ5YTQuNTI4LDQuNTI4LDAsMCwwLTMuOTksMy45OUg3LjA1YTQuNTI4LDQuNTI4LDAsMCwwLTMuOTktMy45OVYxMC43N0E0LjUyOCw0LjUyOCwwLDAsMCw3LjA1LDYuNzhoOS45YTQuNTI4LDQuNTI4LDAsMCwwLDMuOTksMy45OVptMC0zLjQ3YTMuNTIxLDMuNTIxLDAsMCwxLTIuOTgtMi45OGgxLjQ4YTEuNSwxLjUsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMi4wMDJcIixcImN5XCI6XCIxMS45OThcIixcInJcIjpcIjJcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1vbmV5Q2hlY2sxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNb25leV9DaGVja18xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNDM3LDE4LjIxOEg0LjU2M2EyLjUsMi41LDAsMCwxLTIuNS0yLjVWOC4yODJhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE5LjQzN2EyLjUsMi41LDAsMCwxLDIuNSwyLjV2Ny40MzZBMi41LDIuNSwwLDAsMSwxOS40MzcsMTguMjE4Wk00LjU2Myw2Ljc4MmExLjUsMS41LDAsMCwwLTEuNSwxLjV2Ny40MzZhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE5LjQzN2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWOC4yODJhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwxMi43ODZINS4wNjRhLjUuNSwwLDAsMSwwLTFIMTJhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LDE1LjcxNEg1LjA2NGEuNS41LDAsMSwxLDAtMUgxNGEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInJlY3RcIixcImF0dHJcIjp7XCJ4XCI6XCIxNS40MzZcIixcInlcIjpcIjguMjgzXCIsXCJ3aWR0aFwiOlwiNFwiLFwiaGVpZ2h0XCI6XCIyXCIsXCJyeFwiOlwiMC41XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lNb25pdG9yIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJNb25pdG9yXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNSwzLjA2SDUuNTY1YTIuNSwyLjUsMCwwLDAtMi41LDIuNXY4Ljg4YTIuNTA3LDIuNTA3LDAsMCwwLDIuNSwyLjVoMi45MWwtLjM3LDNIN2EuNS41LDAsMCwwLDAsMWgxMC4wMWEuNS41LDAsMCwwLDAtMUgxNS45bC0uMzctM2gyLjkxYTIuNTA3LDIuNTA3LDAsMCwwLDIuNS0yLjVWNS41NkEyLjUsMi41LDAsMCwwLDE4LjQzNSwzLjA2Wk0xNC45LDE5Ljk0SDkuMTE1bC4zNy0zaDUuMDNabTUuMDQtNS41YTEuNSwxLjUsMCwwLDEtMS41LDEuNUg1LjU2NWExLjUsMS41LDAsMCwxLTEuNS0xLjVWNS41NmExLjUsMS41LDAsMCwxLDEuNS0xLjVoMTIuODdhMS41LDEuNSwwLDAsMSwxLjUsMS41WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU1vdW50YWluMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTW91bnRhaW5fMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC44NTcsMTkuNTI1bC02LjU3LTE0Ljk2YTIuNSwyLjUsMCwwLDAtNC41OC0uMDFsLTYuNTYsMTQuOTZhMSwxLDAsMCwwLC4wNy45Ni45ODUuOTg1LDAsMCwwLC44NC40NmgxNS44OWExLDEsMCwwLDAsLjkxLTEuNDFaTTEwLjYyNyw0Ljk2NWExLjUsMS41LDAsMCwxLDIuNzUsMGwyLjQzLDUuNTMtMS40NSwxLjQ1YS41LjUsMCwwLDEtLjcxLDBsLTIuMDQtMi4wM2ExLjUsMS41LDAsMCwwLTEuMDYtLjQ0aC0xLjlabS02LjU3LDE0Ljk2LDQuMTUtOS40NWgyLjM0YS40OTEuNDkxLDAsMCwxLC4zNi4xNWwyLjAzLDIuMDNBMS41MDgsMS41MDgsMCwwLDAsMTQsMTMuMWExLjQ5MSwxLjQ5MSwwLDAsMCwxLjA2LS40NGwxLjE4LTEuMTcsMy43MSw4LjQ1WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaU11ZzEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIk11Z18xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjExNSw1LjkxVjQuOTdhMS4yLDEuMiwwLDAsMC0xLjItMS4ySDQuMjY1YTEuMiwxLjIsMCwwLDAtMS4yLDEuMnY5LjE0YTExLjMyMSwxMS4zMjEsMCwwLDAsLjgsNC4xN0EzLjMsMy4zLDAsMCwwLDcsMjAuMjNoNy4xOWEzLjMxMiwzLjMxMiwwLDAsMCwzLjE0LTEuOTUsMTAuOTg5LDEwLjk4OSwwLDAsMCwuNzQtMy4xM2wxLjA0LS41MmEzLjMxOSwzLjMxOSwwLDAsMCwxLjgzLTIuOTdWOS4xOUEzLjMyNiwzLjMyNiwwLDAsMCwxOC4xMTUsNS45MVptLTEuNzMsMTIuMDFhMi4zLDIuMywwLDAsMS0yLjIsMS4zMUg3YTIuMzEyLDIuMzEyLDAsMCwxLTIuMi0xLjMxLDEwLjIzOCwxMC4yMzgsMCwwLDEtLjczLTMuODFWNC45N2EuMi4yLDAsMCwxLC4yLS4yaDEyLjY1YS4yLjIsMCwwLDEsLjIuMnY5LjE0QTEwLjIzOCwxMC4yMzgsMCwwLDEsMTYuMzg1LDE3LjkyWm0zLjU1LTYuMjZhMi4yODcsMi4yODcsMCwwLDEtMS4yOCwyLjA3bC0uNTQuMjdWNi45M2EyLjMxNiwyLjMxNiwwLDAsMSwxLjgyLDIuMjZaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpTXVzaWNOb3RlMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiTXVzaWNfTm90ZV8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjA1LDMuNjU3YTIuNDg3LDIuNDg3LDAsMCwwLTIuMDMtLjU2bC03Ljg4LDEuMzNhMi40ODMsMi40ODMsMCwwLDAtMi4wOCwyLjQ2djguODJhMywzLDAsMSwwLDEsMi4yM1Y5LjM4N2wxMC44OC0xLjgzdjYuMjJhMi45MzYsMi45MzYsMCwwLDAtMi0uNzcsMywzLDAsMSwwLDMsM1Y1LjU2N0EyLjUxMywyLjUxMywwLDAsMCwyMC4wNSwzLjY1N1pNNi4wNiwxOS45MzdhMiwyLDAsMSwxLDItMkExLjk5MywxLjk5MywwLDAsMSw2LjA2LDE5LjkzN1ptMTEuODgtMS45M2EyLDIsMCwxLDEsMi0yQTIsMiwwLDAsMSwxNy45NCwxOC4wMDdabTItMTEuNDZMOS4wNiw4LjM3N1Y2Ljg4N2ExLjQ4MywxLjQ4MywwLDAsMSwxLjI1LTEuNDdsNy44OC0xLjMzYTEuNDkzLDEuNDkzLDAsMCwxLDEuNzUsMS40OFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lOb1dhaXRpbmdTaWduIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJOb19XYWl0aW5nX1NpZ25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMi4wN2E5LjkzLDkuOTMsMCwxLDAsNy4wMywxNi45NS4zNzQuMzc0LDAsMCwwLC4wNi0uMDdBOS44MzcsOS44MzcsMCwwLDAsMjEuOTM1LDEyLDkuOTQ0LDkuOTQ0LDAsMCwwLDEyLDIuMDdabTAsMTguODZBOC45NDUsOC45NDUsMCwwLDEsMy4wNjUsMTJhOC44NCw4Ljg0LDAsMCwxLDIuMjgtNS45NWwxMi42MSwxMi42MUE4LjkyNSw4LjkyNSwwLDAsMSwxMiwyMC45M1ptNi42Ny0yLjk4TDYuMDQ1LDUuMzRhOC45MzQsOC45MzQsMCwwLDEsMTIuNjIsMTIuNjFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUGFsZXR0ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiUGFsZXR0ZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjMxLDIwLjkzYTEuNjIsMS42MiwwLDAsMCwxLjYyLTEuNjJWMTUuOTNhMS42MiwxLjYyLDAsMCwwLTEuNjItMS42MkgxNC4zN2w0LjY2LTQuNjZhMS42NDIsMS42NDIsMCwwLDAsMC0yLjNMMTYuNjQsNC45NmExLjYzNiwxLjYzNiwwLDAsMC0yLjMsMEw5LjY5LDkuNjJWNC41NmExLjUsMS41LDAsMCwwLTEuNS0xLjVINC41N2ExLjUsMS41LDAsMCwwLTEuNSwxLjVWMTguNDRhMi41MDcsMi41MDcsMCwwLDAsMi41LDIuNVpNOS42OSwxMS4wNGw1LjM2LTUuMzdhLjYyOC42MjgsMCwwLDEsLjg4LDBsMi4zOSwyLjM5YS42MjguNjI4LDAsMCwxLDAsLjg4TDkuNjksMTcuNTdaTTQuMDcsNC41NmEuNS41LDAsMCwxLC41LS41SDguMTlhLjUuNSwwLDAsMSwuNS41VjguNDhINC4wN1ptMCw0LjkySDguNjl2NC40M0g0LjA3Wk03LjI5LDE5LjkzbC0xLjcyLjAxYTEuNSwxLjUsMCwwLDEtMS41LTEuNVYxNC45MUg4LjY5djMuNTNhMS41LDEuNSwwLDAsMS0xLjQsMS40OW0xMi42NC0uNjJhLjYyMy42MjMsMCwwLDEtLjYyLjYySDkuMTlhMi4zODEsMi4zODEsMCwwLDAsLjQyLS44NmwzLjc2LTMuNzZoNS45NGEuNjIzLjYyMywwLDAsMSwuNjIuNjJaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiNi4zODJcIixcImN5XCI6XCIxNy40MTlcIixcInJcIjpcIjAuODQ0XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lQYXBlcnBsYW5lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJQYXBlcl9QbGFuZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMS4wNjEsMTEuMDc3LDMuNzQxLDQuMTU3YS45OTQuOTk0LDAsMCwwLTEuMTcuMzIsMSwxLDAsMCwwLS4wMSwxLjIybDQuNDksNmEuNTI1LjUyNSwwLDAsMS0uMDEuNjJMMi41MTEsMTguM2ExLjAyLDEuMDIsMCwwLDAsMCwxLjIyLDEsMSwwLDAsMCwuOC40LDEuMDIxLDEuMDIxLDAsMCwwLC4zOC0uMDdsMTcuMzYtNi45YTEuMDA2LDEuMDA2LDAsMCwwLC4wMS0xLjg3Wk0zLjM3MSw1LjA4N2wxNi4wNiw2LjQySDguMDYxYTEuMzI5LDEuMzI5LDAsMCwwLS4yMS0uNDFabS0uMDYsMTMuODIsNC41My01Ljk4YTEuMjEyLDEuMjEyLDAsMCwwLC4yMi0uNDJoMTEuMzhaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUGFya2luZzEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlBhcmtpbmdfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLDIxLjkzM0E5LjkzMyw5LjkzMywwLDEsMSwyMS45MzMsMTIsOS45NDQsOS45NDQsMCwwLDEsMTIsMjEuOTMzWk0xMiwzLjA2N0E4LjkzMyw4LjkzMywwLDEsMCwyMC45MzMsMTIsOC45NDMsOC45NDMsMCwwLDAsMTIsMy4wNjdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjU2OSw4LjVoLTEuNzVhLjc0OS43NDksMCwwLDAtLjc1Ljc1djUuNzRhLjUuNSwwLDAsMCwuNS41LjUuNSwwLDAsMCwuNS0uNVYxMy41aDEuNWEyLjUsMi41LDAsMCwwLDAtNVptMCw0aC0xLjV2LTNoMS41YTEuNSwxLjUsMCwwLDEsMCwzWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUGFzc3BvcnQxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJQYXNzcG9ydF8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNSwyMS45MzZoLTlhMi41LDIuNSwwLDAsMS0yLjUtMi41VjQuNTY0YTIuNSwyLjUsMCwwLDEsMi41LTIuNWg5YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOS40MzZBMi41LDIuNSwwLDAsMSwxNi41LDIxLjkzNlpNNy41LDMuMDY0QTEuNSwxLjUsMCwwLDAsNiw0LjU2NFYxOS40MzZhMS41LDEuNSwwLDAsMCwxLjUsMS41aDlhMS41LDEuNSwwLDAsMCwxLjUtMS41VjQuNTY0YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTIuNTYzYTMuNSwzLjUsMCwxLDEsMy41LTMuNUEzLjUsMy41LDAsMCwxLDEyLDEyLjU2M1ptMC02YTIuNSwyLjUsMCwxLDAsMi41LDIuNUEyLjUsMi41LDAsMCwwLDEyLDYuNTYzWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNSwxOC40MzhIOWEuNS41LDAsMCwxLDAtMWg2YS41LjUsMCwxLDEsMCwxWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUGF1c2UxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJQYXVzZV8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC4yNSwyMS45MzdINi41NjRhMi41LDIuNSwwLDAsMS0yLjUtMi41VjQuNTYzYTIuNSwyLjUsMCwwLDEsMi41LTIuNUg4LjI1YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOS40MzdBMi41LDIuNSwwLDAsMSw4LjI1LDIxLjkzN1pNNi41NjQsMy4wNjNhMS41LDEuNSwwLDAsMC0xLjUsMS41VjE5LjQzN2ExLjUsMS41LDAsMCwwLDEuNSwxLjVIOC4yNWExLjUsMS41LDAsMCwwLDEuNS0xLjVWNC41NjNhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy40MzYsMjEuOTM3SDE1Ljc1YTIuNSwyLjUsMCwwLDEtMi41LTIuNVY0LjU2M2EyLjUsMi41LDAsMCwxLDIuNS0yLjVoMS42ODZhMi41LDIuNSwwLDAsMSwyLjUsMi41VjE5LjQzN0EyLjUsMi41LDAsMCwxLDE3LjQzNiwyMS45MzdaTTE1Ljc1LDMuMDYzYTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOS40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41aDEuNjg2YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY0LjU2M2ExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lQZW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlBlblwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC4yMzUsMTEuMjg0YTIuMywyLjMsMCwwLDAtMy4wMS0uMTQ5TDE1LjQ0NCw1Ljc0NGEyLjQ4NCwyLjQ4NCwwLDAsMC0yLjEtMS43bC04LjU4MS0uOTNBMS41LDEuNSwwLDAsMCwzLjExNSw0Ljc2NWwuOTMsOC41NzlhMi40NzksMi40NzksMCwwLDAsMS43LDIuMWw1LjM5LDEuNzdhMi4yNTgsMi4yNTgsMCwwLDAtLjUxLDEuNDMsMi4yNTcsMi4yNTcsMCwwLDAsMi4yNSwyLjI1LDIuMjYzLDIuMjYzLDAsMCwwLDEuNTkxLS42NjFsNS43Ny01Ljc2OWEyLjI0OSwyLjI0OSwwLDAsMCwwLTMuMTgxWm0tMTQuMTgsMy4yMWExLjUsMS41LDAsMCwxLTEuMDItMS4yNmwtLjktOC4zOSw0LjAxLDQuMDFhMS4xODgsMS4xODgsMCwwLDAsLjI4MSwxLjIyMSwxLjE2NywxLjE2NywwLDEsMCwxLjY0OS0xLjY1MSwxLjE0MywxLjE0MywwLDAsMC0xLjIwOS0uMjY5bC00LjAyLTQuMDIsOC4zOS45YTEuNDc2LDEuNDc2LDAsMCwxLDEuMjU5LDEuMDJsMS45MzEsNS44Ni00LjUxLDQuNTFabTExLjcwOS0yLjUxYTEuMjUsMS4yNSwwLDAsMSwyLjEzLjg5MSwxLjIzNywxLjIzNywwLDAsMS0uMzY5Ljg4bC01Ljc3MSw1Ljc3YTEuMjc3LDEuMjc3LDAsMCwxLTEuNzY5LDAsMS4yNTMsMS4yNTMsMCwwLDEsMC0xLjc2WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVBlbnBvdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJpZFwiOlwiUGVucG90XCIsXCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNC40MTUsNy4yMmEuNzU1Ljc1NSwwLDAsMC0uMzUuNjR2OS42N2ExLjUzNiwxLjUzNiwwLDAsMCwuODgsMS4zOGw1Ljk2LDIuODJhMi42MTgsMi42MTgsMCwwLDAsMi4xOSwwbDUuOTYtMi44MmExLjUzNiwxLjUzNiwwLDAsMCwuODgtMS4zOFY3Ljg2YS43NDIuNzQyLDAsMCwwLS4zNi0uNjRsLTIuMjMtMS4xNXYtMWEuOTguOTgsMCwwLDAtLjE1LS41MmwtMS4zMy0yLjE2YS43NDkuNzQ5LDAsMCwwLTEuMjgsMEwxMy4zLDQuNWwtLjY2LTEuMDdBLjc1NS43NTUsMCwwLDAsMTIsMy4wOGEuNzkxLjc5MSwwLDAsMC0uNjQuMzZsLS42NSwxLjA2TDkuNCwyLjM5YS43NDkuNzQ5LDAsMCwwLTEuMjgsMEw2LjgwNSw0LjU1YS45OC45OCwwLDAsMC0uMTUuNTJ2MVptMTIuOTMtLjAxLjcuMzUtLjcuMzNabS0yLjQ0LTMuNDNoLjY0bC41LjgxaC0xLjY0Wm0xLjQ0LDEuODFWOC4zNmwtLjYxLjI5VjUuNTlabS0yLjIzLDBoLjYyVjkuMTJsLS42Mi4zWk04LjQ0NSwzLjc4aC42NGwuNS44MUg3Ljk0NVptMS40NCwxLjgxVjkuNDFsLS42MS0uMjlWNS41OVptLTIuMjMsMGguNjJWOC42NWwtLjYyLS4yOVptLTEsMS42MnYuNjhsLS43LS4zM1pNNS4zNjUsMThhLjUyLjUyLDAsMCwxLS4zLS40N1Y4LjI0bDYuNDMsMy4wNHY5LjU5Wm02LjEzLTcuODMtLjYxLS4yOVY2LjY0aC42MVptLS4zMi00LjUzLjUxLS44MmguNjJsLjUxLjgyWm0xLjk0LDFWOS44OWwtLjYyLjI5VjYuNjRaTTEyLjUsMjAuODhWMTEuMjlsNi40NC0zLjA1djkuMjlhLjUxMi41MTIsMCwwLDEtLjMxLjQ3WlwifSxcImNoaWxkXCI6W119XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lQZXJjZW50IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJQZXJjZW50XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjEuOTM0QTkuOTM0LDkuOTM0LDAsMSwxLDIxLjkzMywxMiw5Ljk0NSw5Ljk0NSwwLDAsMSwxMiwyMS45MzRaTTEyLDMuMDY2QTguOTM0LDguOTM0LDAsMSwwLDIwLjkzMywxMiw4Ljk0NCw4Ljk0NCwwLDAsMCwxMiwzLjA2NlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSwxMC4yNThhMS41LDEuNSwwLDEsMSwxLjA2MS0uNDM5aDBBMS41LDEuNSwwLDAsMSw5LDEwLjI1OFptMC0yYS41LjUsMCwxLDAsLjM1My4xNDZBLjUuNSwwLDAsMCw5LDguMjU5WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03Ljc1OCwxNi43NDNBLjUuNSwwLDAsMSw3LjQsMTUuODlMMTUuODg5LDcuNGEuNS41LDAsMCwxLC43MDcuNzA3TDguMTExLDE2LjZBLjUuNSwwLDAsMSw3Ljc1OCwxNi43NDNaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LDE2Ljc0MmExLjUsMS41LDAsMSwxLDEuMDYxLS40MzhBMS40OTMsMS40OTMsMCwwLDEsMTUsMTYuNzQyWm0wLTJhLjUuNSwwLDAsMC0uMzU0LjE0N2gwYS41LjUsMCwwLDAtLjE0Ni4zNTIuNS41LDAsMSwwLDEsMCwuNS41LDAsMCwwLS41LS41WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUGhvbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlBob25lXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LjQzNiwyMC45MzhBMTEuMzg0LDExLjM4NCwwLDAsMSw0LjU3MiwzLjlhMS42NjgsMS42NjgsMCwwLDEsMS4yNDEtLjgyMiwxLjcxNiwxLjcxNiwwLDAsMSwxLjQ1NC40OTJsMy4xMzksMy4xNGExLjcxNSwxLjcxNSwwLDAsMSwwLDIuNDI3bC0uMjk1LjNhMS45MzcsMS45MzcsMCwwLDAsMCwyLjczNmwxLjcyLDEuNzIxYTEuOTgzLDEuOTgzLDAsMCwwLDIuNzM2LDBsLjI5LS4yOWExLjcxOSwxLjcxOSwwLDAsMSwyLjQyOCwwbDMuMTM5LDMuMTM5YTEuNzI0LDEuNzI0LDAsMCwxLC40OTIsMS40NTUsMS42NjksMS42NjksMCwwLDEtLjgyMiwxLjIzOUExMS4zMjcsMTEuMzI3LDAsMCwxLDE0LjQzNiwyMC45MzhaTTYuMDQyLDQuMDYzYS43OTMuNzkzLDAsMCwwLS4xLjAwNi42NzMuNjczLDAsMCwwLS41LjMzMUExMC4zNzUsMTAuMzc1LDAsMCwwLDE5LjU5NCwxOC41NjdhLjY3NC42NzQsMCwwLDAsLjMzMS0uNS43MzQuNzM0LDAsMCwwLS4yMDgtLjYxOGwtMy4xMzktMy4xMzlhLjcxNy43MTcsMCwwLDAtMS4wMTQsMGwtLjI5LjI5YTMuMDA2LDMuMDA2LDAsMCwxLTQuMTUsMEw5LjQsMTIuODc2YTIuOTM5LDIuOTM5LDAsMCwxLDAtNC4xNDlsLjMtLjNhLjcxNy43MTcsMCwwLDAsMC0xLjAxNEw2LjU2LDQuMjc3QS43MjkuNzI5LDAsMCwwLDYuMDQyLDQuMDYzWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVBpY2tlckVtcHR5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJQaWNrZXJfRW1wdHlcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuOTQsNS44NzZhMi44MDUsMi44MDUsMCwwLDAtLjg0LTIuMDEsMi44NTYsMi44NTYsMCwwLDAtMy45NywwbC0yLjIxLDIuMjEtLjc1LS43NWEuOC44LDAsMCwwLTEuMSwwLC43ODUuNzg1LDAsMCwwLDAsMS4xbC43NS43NS04Ljc3LDguNzZhMy4yNDgsMy4yNDgsMCwwLDAtLjkyLDIuMTNsLS4wNywxLjUyYTEuMzExLDEuMzExLDAsMCwwLC4zOC45NywxLjMzMiwxLjMzMiwwLDAsMCwuOTEuMzhoLjA2bDEuNTItLjA3YTMuMjQ4LDMuMjQ4LDAsMCwwLDIuMTMtLjkybDguNzYtOC43Ny43NS43NWEuOC44LDAsMCwwLDEuMSwwLC43ODUuNzg1LDAsMCwwLDAtMS4xbC0uNzUtLjc1TDIwLjEsNy45QTIuODI4LDIuODI4LDAsMCwwLDIwLjk0LDUuODc2Wk03LjM1LDE5LjIzNmEyLjIyLDIuMjIsMCwwLDEtMS40Ni42M2wtMS41My4wN2EuMjQzLjI0MywwLDAsMS0uMjEtLjA5LjMuMywwLDAsMS0uMDktLjIxbC4wNy0xLjUzYTIuMjIsMi4yMiwwLDAsMSwuNjMtMS40Nmw4Ljc3LTguNzYsMi41OSwyLjU5Wk0xOS40LDcuMmwtMi4xOCwyLjE4LTIuNTktMi41OSwyLjIxLTIuMjJhMS44NjEsMS44NjEsMCwwLDEsMi41NiwwLDEuODQ2LDEuODQ2LDAsMCwxLC41NCwxLjMxQTEuODY5LDEuODY5LDAsMCwxLDE5LjQsNy4yWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVBpY2tlckhhbGYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlBpY2tlcl9IYWxmXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjkzNiw1Ljg4OWEyLjgyNSwyLjgyNSwwLDAsMC00LjgxLTIuMDJsLTIuMjEsMi4yMi0uNzUtLjc1YS43NzEuNzcxLDAsMCwwLS41NS0uMjIuOC44LDAsMCwwLS41NS4yMi43ODUuNzg1LDAsMCwwLDAsMS4xbC43NS43NS04Ljc2LDguNzZhMy4xNTQsMy4xNTQsMCwwLDAtLjkyLDIuMTNsLS4wNywxLjUyYTEuMzE2LDEuMzE2LDAsMCwwLDEuMjgsMS4zNWguMDZsMS41Mi0uMDdhMy4yMSwzLjIxLDAsMCwwLDIuMTMtLjkzbDguNzYtOC43Ni43NS43NWEuOC44LDAsMCwwLDEuMSwwLC43ODUuNzg1LDAsMCwwLDAtMS4xbC0uNzUtLjc1LDIuMTgtMi4xOEEyLjg0NSwyLjg0NSwwLDAsMCwyMC45MzYsNS44ODlabS04LjU2LDguMzNINy4ybDYuMzMtNi4zMiwyLjU5LDIuNTlaTTE5LjQsNy4ybC0yLjE4LDIuMTlMMTQuNjI2LDYuOGwyLjIxLTIuMjJhMS44MjMsMS44MjMsMCwwLDEsMi41NiwwLDEuODU5LDEuODU5LDAsMCwxLDAsMi42MlpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lQaWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJQaWxsXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjMxLDQuNjkxYTUuNSw1LjUsMCwwLDAtNy43OCwwbC02Ljg0LDYuODRhNS41LDUuNSwwLDAsMCwzLjg5LDkuMzksNS41MjQsNS41MjQsMCwwLDAsMy44OS0xLjYxbDYuODQtNi44NGE1LjUsNS41LDAsMCwwLDAtNy43OFptLS43MSw3LjA3LTMuNDIsMy40Mkw4LjgyLDguODIxLDEyLjI0LDUuNGE0LjUsNC41LDAsMCwxLDcuNjgsMy4xN0E0LjQyOSw0LjQyOSwwLDAsMSwxOC42LDExLjc2MVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lQaWxsc0JvdHRsZTEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIm1lZHNfQm90dGxlXzFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNDM1LDIuMDZINi41NjVhMi41LDIuNSwwLDAsMC0yLjUsMi41djJhMS40OTIsMS40OTIsMCwwLDAsMS4yMiwxLjQ3VjE5LjQ0YTIuNSwyLjUsMCwwLDAsMi41LDIuNWg4LjQzYTIuNSwyLjUsMCwwLDAsMi41LTIuNVY4LjAzYTEuNDkyLDEuNDkyLDAsMCwwLDEuMjItMS40N3YtMkEyLjUsMi41LDAsMCwwLDE3LjQzNSwyLjA2Wm0uMjgsMTcuMzhhMS41LDEuNSwwLDAsMS0xLjUsMS41SDcuNzg1YTEuNSwxLjUsMCwwLDEtMS41LTEuNXYtLjg4aDMuNTJhLjQ5MS40OTEsMCwwLDAsLjQ4LS41LjQ4NS40ODUsMCwwLDAtLjQ4LS41SDYuMjg1VjE1aDIuNTdhLjUuNSwwLDAsMCwwLTFINi4yODVWMTEuNDVoMy41MmEuNDkxLjQ5MSwwLDAsMCwuNDgtLjUuNDg1LjQ4NSwwLDAsMC0uNDgtLjVINi4yODVWOC4wNmgxMS40M1ptMS4yMi0xMi44OGEuNS41LDAsMCwxLS41LjVINS41NjVhLjUuNSwwLDAsMS0uNS0uNXYtMmExLjUsMS41LDAsMCwxLDEuNS0xLjVoMTAuODdhMS41LDEuNSwwLDAsMSwxLjUsMS41WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVBpenphIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJQaXp6YVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjgwNywxMy40MzdsLS4wMS0uMDRhMTkuMDUsMTkuMDUsMCwwLDAtMTAuMjMtMTAuMjEsMS41NzQsMS41NzQsMCwwLDAtMi4wOC45M2wtNS4zMiwxNC42OWExLjU4LDEuNTgsMCwwLDAsMS40OCwyLjEyLDEuNjU0LDEuNjU0LDAsMCwwLC41NC0uMDlsMTQuNy01LjMyYTEuNTg1LDEuNTg1LDAsMCwwLC45MS0uODVBMS41NDcsMS41NDcsMCwwLDAsMjAuODA3LDEzLjQzN1ptLTYuOTgsMi45OGExLDEsMCwwLDAsLjIuMTZMNC44NDcsMTkuOWEuNTgyLjU4MiwwLDAsMS0uNi0uMTQuNTU2LjU1NiwwLDAsMS0uMTQtLjYxbDIuMzktNi42YTEsMSwwLDAsMCwuMTYuMiwxLjgxLDEuODEsMCwwLDAsMi41Ni0yLjU2LDEuNzgyLDEuNzgyLDAsMCwwLTEuNy0uNDdsMS4wOS0yLjk4YTE3LjM0NiwxNy4zNDYsMCwwLDEsNi44Miw1LjU3LDIuNDQ3LDIuNDQ3LDAsMCwwLTEuNi43MUEyLjQsMi40LDAsMCwwLDEzLjgyNywxNi40MTdabTYuMDUtMi4xNWEuNTkyLjU5MiwwLDAsMS0uMzMuMzFsLTEuMzIuNDdjLS4xMS0uMjMtLjIyLS40NS0uMzMtLjY3LS4xMi0uMjQtLjI1LS40OC0uMzgtLjcxLS4zMS0uNTUtLjY1LTEuMDgtMS0xLjU4YTE4LjY1NSwxOC42NTUsMCwwLDAtNy41Ny02LjNsLjQ4LTEuMzNhLjU2MS41NjEsMCwwLDEsLjMxLS4zMy40NTYuNDU2LDAsMCwxLC4yMy0uMDUuNzkzLjc5MywwLDAsMSwuMjUuMDUsMTguMDEzLDE4LjAxMywwLDAsMSw5LjY3LDkuNjh2LjAyQS41NjEuNTYxLDAsMCwxLDE5Ljg3NywxNC4yNjdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiNy44MzVcIixcImN5XCI6XCIxNi40ODlcIixcInJcIjpcIjEuMDc1XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lQbGFuZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiUGxhbmVcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuOSwyMC45MzZIMTAuODVhLjkxMS45MTEsMCwwLDEtLjktMS4wMjNsLjY5My01LjU0OEg3LjNsLS41MTMuOWExLjMyOSwxLjMyOSwwLDAsMS0uOTkyLjY1N0w1LjEsMTZhLjkuOSwwLDAsMS0uOC0uMzEuOTEyLjkxMiwwLDAsMS0uMTg1LS44MzlsLjc3NC0yLjc2OWEuMzE4LjMxOCwwLDAsMCwwLS4xNzNMNC4xMTQsOS4xNDVBLjkwOS45MDksMCwwLDEsNS4xLDhsLjY5NS4wODNhMS4zMzEsMS4zMzEsMCwwLDEsLjk5Mi42NTZsLjUxMy45aDMuMzRMOS45NDYsNC4wODhhLjkxMS45MTEsMCwwLDEsLjktMS4wMjRIMTEuOWExLjMyNywxLjMyNywwLDAsMSwxLjIzNi44NTdsMi4xNDQsNS43MTRoMS4wNDZhOC41LDguNSwwLDAsMSwxLjc1OC4xODQsMi4xNjYsMi4xNjYsMCwwLDEsMS40MjkuOSwyLjIwOSwyLjIwOSwwLDAsMSwuMzY1LDEuN0EyLjI4OCwyLjI4OCwwLDAsMSwxNy45NSwxNC4ybC0uMTYuMDI0YTEwLjkyNiwxMC45MjYsMCwwLDEtMS43MjEuMTM3aC0uNzg3bC0yLjE0NCw1LjcxNEExLjMyNywxLjMyNywwLDAsMSwxMS45LDIwLjkzNlptLS45NTEtMUgxMS45YS4zMjMuMzIzLDAsMCwwLC4zLS4yMDlsMi4yMTQtNS45MDVhLjcxLjcxLDAsMCwxLC42NjEtLjQ1N2guOTkxYTkuOTQ2LDkuOTQ2LDAsMCwwLDEuNTY3LS4xMjVsLjE2LS4wMjVhMS4zLDEuMywwLDAsMCwxLjEtLjk3OSwxLjIyNywxLjIyNywwLDAsMC0uMi0uOTM3LDEuMiwxLjIsMCwwLDAtLjc5My0uNSw3LjY0Nyw3LjY0NywwLDAsMC0xLjU3Ny0uMTY3aC0xLjI1YS43MTEuNzExLDAsMCwxLS42NjEtLjQ1NkwxMi4yLDQuMjczYS4zMjMuMzIzLDAsMCwwLS4zLS4yMDloLS45NTFsLjcyMiw1Ljc3OGEuNy43LDAsMCwxLS43Ljc5M0g3LjEyN2EuNy43LDAsMCwxLS42MTQtLjM1OWwtLjYtMS4wNDVhLjMyLjMyLDAsMCwwLS4yNDEtLjE2TDUuMTEzLDlsLjczOCwyLjY0YTEuMzQsMS4zNCwwLDAsMSwwLC43MTFMNS4xMTMsMTVsLjU2Mi0uMDY3YS4zMi4zMiwwLDAsMCwuMjQxLS4xNmwuNi0xLjA0OWEuNy43LDAsMCwxLC42MTItLjM1NWgzLjg0NmEuNy43LDAsMCwxLC43Ljc5NFpNNy4zODYsMTQuMjEybDAsLjAwNVptMy4yOTUtLjE3OXYwWm0wLTQuMDY3djBabS0zLjMtLjE4NiwwLDBaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUGxheTEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlBsYXlfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02LjU2MiwyMS45NGEyLjUsMi41LDAsMCwxLTIuNS0yLjVWNC41NkEyLjUsMi41LDAsMCwxLDcuOTc4LDIuNUwxOC44NTUsOS45MzlhMi41LDIuNSwwLDAsMSwwLDQuMTJMNy45NzcsMjEuNUEyLjUsMi41LDAsMCwxLDYuNTYyLDIxLjk0Wm0wLTE4Ljg4NGExLjQ5NCwxLjQ5NCwwLDAsMC0uNy4xNzcsMS40NzcsMS40NzcsMCwwLDAtLjgsMS4zMjdWMTkuNDM5YTEuNSwxLjUsMCwwLDAsMi4zNSwxLjIzNWwxMC44NzctNy40NGExLjUsMS41LDAsMCwwLDAtMi40NzFMNy40MTMsMy4zMjZBMS40OTEsMS40OTEsMCwwLDAsNi41NjQsMy4wNTZaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUGx1ZzEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlBsdWdfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy4zMDUsNS43NTVIMTUuNVYyLjU0NWEuNS41LDAsMCwwLTEsMHYzLjIxaC01VjIuNTQ1YS41LjUsMCwwLDAtMSwwdjMuMjFINi43YTEuNTY2LDEuNTY2LDAsMCwwLTEuNTcsMS41N3Y0LjI4YTcuMDQ2LDcuMDQ2LDAsMCwwLDYuMzcsNy4xMXYyLjcyYS41LjUsMCwwLDAsMSwwdi0yLjdhNi44NzQsNi44NzQsMCwwLDAsNi4zOC02Ljg2VjcuMzI1QTEuNTczLDEuNTczLDAsMCwwLDE3LjMwNSw1Ljc1NVptLjU3LDYuMTJhNS44NzUsNS44NzUsMCwwLDEtNi4wNiw1Ljg3LDYuMDU0LDYuMDU0LDAsMCwxLTUuNjktNi4xNFY3LjMyNWEuNTYzLjU2MywwLDAsMSwuNTctLjU3aDEwLjYxYS41Ny41NywwLDAsMSwuNTcuNTdaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUG93ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlBvd2VyXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNi42MzgsNS4yMDlhOC43ODIsOC43ODIsMCwxLDAsMTMuOTE3LDguOTYsOC44NzEsOC44NzEsMCwwLDAtMy4xODktOC45NmMtLjUtLjM5LTEuMjE0LjMxMi0uNzA3LjcwN2E3LjkzLDcuOTMsMCwwLDEsMy4wODIsNy4xMTMsNy43ODcsNy43ODcsMCwwLDEtMTUuMzA4Ljk1NkE3LjksNy45LDAsMCwxLDcuMzQ1LDUuOTE2Yy41MDctLjM5NC0uMjA1LTEuMS0uNzA3LS43MDdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjUsMTIuNTE5YS41LjUsMCwwLDEtMSwwVjMuNTQ4aDBhLjUuNSwwLDAsMSwxLDBaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lSYWluYm93IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJSYWluYm93XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy4wODksMTYuNzFBOSw5LDAsMCwxLDguOTcsOC4zMjYsOC45MTIsOC45MTIsMCwwLDEsMjAuOTExLDE2LjcxYS41LjUsMCwwLDAsMSwwLDEwLjAzMywxMC4wMzMsMCwwLDAtNi40Ni05LjI5MSw5Ljk4MSw5Ljk4MSwwLDAsMC0xMS4wNiwyLjk0NCwxMC4wNTgsMTAuMDU4LDAsMCwwLTIuMyw2LjM0Ny41LjUsMCwwLDAsMSwwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01Ljk4NSwxNi43MUE2LjA3OCw2LjA3OCwwLDAsMSwxMiwxMC43YTYuMDc4LDYuMDc4LDAsMCwxLDYuMDE1LDYuMDE1LjUuNSwwLDAsMCwxLDBBNy4wMTMsNy4wMTMsMCwwLDAsNi42MDYsMTIuMjI4LDcuMTUxLDcuMTUxLDAsMCwwLDQuOTg1LDE2LjcxYS41LjUsMCwwLDAsMSwwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04Ljg4LDE2LjcxYTMuMTIsMy4xMiwwLDAsMSw2LjI0LDAsLjUuNSwwLDAsMCwxLDAsNC4xMTksNC4xMTksMCwwLDAtNy4yNTUtMi42NjlBNC4yMTksNC4yMTksMCwwLDAsNy44OCwxNi43MWEuNS41LDAsMCwwLDEsMFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVJlYWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcInJlYWRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwxOC44ODNhMTAuOCwxMC44LDAsMCwxLTkuNjc1LTUuNzI4LDIuNiwyLjYsMCwwLDEsMC0yLjMxQTEwLjgsMTAuOCwwLDAsMSwxMiw1LjExN2ExMC44LDEwLjgsMCwwLDEsOS42NzUsNS43MjhoMGEyLjYsMi42LDAsMCwxLDAsMi4zMUExMC44LDEwLjgsMCwwLDEsMTIsMTguODgzWk0xMiw2LjExN2E5Ljc4Nyw5Ljc4NywwLDAsMC04Ljc4LDUuMTc2LDEuNTg2LDEuNTg2LDAsMCwwLDAsMS40MTVBOS43ODgsOS43ODgsMCwwLDAsMTIsMTcuODgzYTkuNzg3LDkuNzg3LDAsMCwwLDguNzgtNS4xNzYsMS41ODQsMS41ODQsMCwwLDAsMC0xLjQxNGgwQTkuNzg3LDkuNzg3LDAsMCwwLDEyLDYuMTE3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiwxNi4wNDlBNC4wNDksNC4wNDksMCwxLDEsMTYuMDQ5LDEyLDQuMDU0LDQuMDU0LDAsMCwxLDEyLDE2LjA0OVptMC03LjFBMy4wNDksMy4wNDksMCwxLDAsMTUuMDQ5LDEyLDMuMDUyLDMuMDUyLDAsMCwwLDEyLDguOTUxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjIuMDI4XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lSZWNlaXB0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJSZWNlaXB0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjEuOTE5YTEuNDU0LDEuNDU0LDAsMCwxLS43OTEtLjIzMkw5LjY0NSwyMC42NjZhLjQ3LjQ3LDAsMCwwLS40MzktLjAyOGwtMS43NzYuODI5YTEuNDY2LDEuNDY2LDAsMCwxLTEuNC0uMDg3LDEuMjE0LDEuMjE0LDAsMCwxLS41ODEtMS4wMlYzLjY0MUExLjIxNywxLjIxNywwLDAsMSw2LjAzMywyLjYyYTEuNDY5LDEuNDY5LDAsMCwxLDEuNC0uMDg3bDEuNzc1LjgyOWEuNDY5LjQ2OSwwLDAsMCwuNDM5LS4wMjZMMTEuMjEsMi4zMTNhMS40NjQsMS40NjQsMCwwLDEsMS41ODEsMGwxLjU2NCwxLjAyMmEuNDY5LjQ2OSwwLDAsMCwuNDQuMDI2bDEuNzc1LS44MjlhMS40NjEsMS40NjEsMCwwLDEsMS40LjA4NywxLjIxNywxLjIxNywwLDAsMSwuNTgxLDEuMDIxVjIwLjM2YTEuMjE2LDEuMjE2LDAsMCwxLS41ODEsMS4wMiwxLjQ2LDEuNDYsMCwwLDEtMS40LjA4N0wxNC44LDIwLjYzOWEuNDc0LjQ3NCwwLDAsMC0uNDQxLjAyN2wtMS41NjQsMS4wMjFBMS40NDgsMS40NDgsMCwwLDEsMTIsMjEuOTE5Wk05LjQsMTkuNmExLjQ0LDEuNDQsMCwwLDEsLjc5LjIzNGwxLjU2NCwxLjAyYS40NjQuNDY0LDAsMCwwLC40ODcsMGwxLjU2NS0xLjAyMWExLjQ2MiwxLjQ2MiwwLDAsMSwxLjQxLS4wOTVsMS43NzQuODI4YS40NjMuNDYzLDAsMCwwLC40MzctLjAyNC4yMjEuMjIxLDAsMCwwLC4xMTgtLjE3N1YzLjY0MWEuMjE5LjIxOSwwLDAsMC0uMTE4LS4xNzcuNDYxLjQ2MSwwLDAsMC0uNDM3LS4wMjVsLTEuNzc1LjgyOWExLjQ1OCwxLjQ1OCwwLDAsMS0xLjQwOS0uMDk1TDEyLjI0MywzLjE1MWEuNDY3LjQ2NywwLDAsMC0uNDg2LDBMMTAuMTkyLDQuMTcyYTEuNDY3LDEuNDY3LDAsMCwxLTEuNDEuMUw3LjAwNywzLjQzOWEuNDYxLjQ2MSwwLDAsMC0uNDM3LjAyNS4yMTkuMjE5LDAsMCwwLS4xMTguMTc3VjIwLjM2YS4yMjEuMjIxLDAsMCwwLC4xMTguMTc3LjQ2OC40NjgsMCwwLDAsLjQzNy4wMjRsMS43NzYtLjgyOUExLjQ2MSwxLjQ2MSwwLDAsMSw5LjQsMTkuNlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuMDQ2LDcuNEg4Ljk1NGEuNS41LDAsMCwxLDAtMWg2LjA5MmEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuMDQ2LDEwLjk1M0g4Ljk1NGEuNS41LDAsMCwxLDAtMWg2LjA5MmEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTQuNUg4Ljk1NGEuNS41LDAsMCwxLDAtMUgxMmEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVJlZG8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlJlZG9cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNC4wNjEsMTMuNjdBNy45NTgsNy45NTgsMCwwLDAsMTYuMiwxOS43NGE4LjA2MSw4LjA2MSwwLDAsMCwzLjc3LTYuNzcuNS41LDAsMCwwLTEsMCw2Ljk3Niw2Ljk3NiwwLDAsMS0xMSw1LjcsNi45NjksNi45NjksMCwwLDEsMS0xMS45NywxMC4wNzUsMTAuMDc1LDAsMCwxLDQuNjQtLjY5VjcuNDZhLjUuNSwwLDAsMCwuODEuMzlsMi40Ny0xLjk1YS41LjUsMCwwLDAsMC0uNzlMMTQuNCwzLjE3YS41LjUsMCwwLDAtLjguNFY1LjAxYy0uNzEtLjAxLTEuNDMtLjAzLTIuMTMuMDJhNy45ODUsNy45ODUsMCwwLDAtNy40MSw4LjY0WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVJlcGVhdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiUmVwZWF0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIuMDc4LDE3LjU2MmMtMC4wMSwtMC4wMzkgLTAuMDE2LC0wLjA4IC0wLjAxNiwtMC4xMjNjMCwtMC4xMzggMC4wNTYsLTAuMjYzIDAuMTQ3LC0wLjM1M2MwLjAwOCwtMC4wMDkgMS40MTYsLTEuNDE3IDIsLTJjMC4xOTgsLTAuMTk4IDAuNTA3LC0wLjE4MyAwLjcwNywtMGMwLjE5OSwwLjE4MyAwLjE4NSwwLjUyMiAtMCwwLjcwN2wtMS4xNDcsMS4xNDZsMTUuNjY5LDBjMC44MjgsMCAxLjUsLTAuNjcxIDEuNSwtMS41bDAsLTMuNDM5YzAsLTAuMjc2IDAuMjI0LC0wLjUgMC41LC0wLjVjMC4yNzYsMCAwLjUsMC4yMjQgMC41LDAuNWwwLDMuNDM5YzAsMS4zODEgLTEuMTIsMi41IC0yLjUsMi41bC0xNS42NjksMGwxLjE0NywxLjE0N2MwLjE5OCwwLjE5OCAwLjE4MywwLjUwNyAtMCwwLjcwN2MtMC4xODMsMC4xOTkgLTAuNTIyLDAuMTg1IC0wLjcwNywtMGwtMiwtMmMtMC4wNjYsLTAuMDYzIC0wLjExLC0wLjE0MyAtMC4xMzEsLTAuMjMxWm0xOS44NDUsLTExLjEwNWMwLjAxLDAuMDM5IDAuMDE1LDAuMDggMC4wMTUsMC4xMjJjMCwwLjEzOCAtMC4wNTYsMC4yNjMgLTAuMTQ3LDAuMzU0Yy0wLjAwOCwwLjAwOCAtMS40MTYsMS40MTcgLTIsMmMtMC4xOTcsMC4xOTggLTAuNTA3LDAuMTgzIC0wLjcwNywtMGMtMC4xOTksLTAuMTgzIC0wLjE4NSwtMC41MjIgMCwtMC43MDdsMS4xNDcsLTEuMTQ3bC0xNS42NjksMGMtMC44MjgsMCAtMS41LDAuNjcyIC0xLjUsMS41bDAsMy40MzljLTAsMC4yNzYgLTAuMjI0LDAuNSAtMC41LDAuNWMtMC4yNzYsMCAtMC41LC0wLjIyNCAtMC41LC0wLjVsMCwtMy40MzljMCwtMS4zODEgMS4xMiwtMi41IDIuNSwtMi41bDE1LjY2OSwwbC0xLjE0NiwtMS4xNDZjLTAuMTk4LC0wLjE5OCAtMC4xODMsLTAuNTA3IC0wLC0wLjcwN2MwLjE4MywtMC4xOTkgMC41MjIsLTAuMTg1IDAuNzA3LC0wbDIsMmMwLjA2NSwwLjA2MyAwLjExLDAuMTQzIDAuMTMxLDAuMjMxWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVJvbGxpbmdTdWl0Y2FzZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiUm9sbGluZ19TdWl0Y2FzZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi4yNSw3LjQ5SDE1VjMuNTZhMS41LDEuNSwwLDAsMC0xLjUtMS41aC0zQTEuNTExLDEuNTExLDAsMCwwLDksMy41NlY3LjQ5SDcuNzVhMi41LDIuNSwwLDAsMC0yLjUsMi41djguNDRhMi41LDIuNSwwLDAsMCwyLjUsMi41aC41di4wMWExLDEsMCwwLDAsMiwwdi0uMDFoMy41di4wMWExLDEsMCwwLDAsMiwwdi0uMDFoLjVhMi41LDIuNSwwLDAsMCwyLjUtMi41VjkuOTlBMi41LDIuNSwwLDAsMCwxNi4yNSw3LjQ5Wk0xMCwzLjU2YS41MDguNTA4LDAsMCwxLC41LS41aDNhLjUuNSwwLDAsMSwuNS41VjcuNUgxMFptNy43NSwxNC44N2ExLjUsMS41LDAsMCwxLTEuNSwxLjVINy43NWExLjUsMS41LDAsMCwxLTEuNS0xLjVWOS45OWExLjUxMSwxLjUxMSwwLDAsMSwxLjUtMS41aDguNWExLjUsMS41LDAsMCwxLDEuNSwxLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpUm91dGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlJvdXRlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjc5MiwxNy4wODZjLS41OC0uNTgtMS4xNi0xLjE3LTEuNzUtMS43NS0uMDgtLjA4LS4xNi0uMTctLjI1LS4yNWEuNDkyLjQ5MiwwLDAsMC0uNywwLC41LjUsMCwwLDAsMCwuNzFsMS4xNCwxLjE0SDkuMjgyYTIuMjIsMi4yMiwwLDAsMSwwLTQuNDRoM2EzLjIxNSwzLjIxNSwwLDEsMCwwLTYuNDNINy4wMTJhMi41LDIuNSwwLDEsMCwwLDFoNS4yN2EyLjIxNSwyLjIxNSwwLDEsMSwwLDQuNDNoLTNhMy4yMiwzLjIyLDAsMSwwLDAsNi40NGgxMC45NmwtLjkuOWMtLjA5LjA4LS4xNy4xNy0uMjUuMjVhLjUuNSwwLDAsMCwwLC43MS41MTEuNTExLDAsMCwwLC43LDBsMS43NS0xLjc1LjI1LS4yNUEuNS41LDAsMCwwLDIxLjc5MiwxNy4wODZaTTQuNTYyLDguMDY2YTEuNSwxLjUsMCwxLDEsMS41LTEuNUExLjUsMS41LDAsMCwxLDQuNTYyLDguMDY2WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVJvdXRlciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiUm91dGVyXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNDQsMTAuOTRIMTcuOTNWNC41NGEuNS41LDAsMCwwLTEsMHY2LjRINy4wNlY3YS41LjUsMCwwLDAtMSwwdjMuOTRINC41NmEyLjUwNywyLjUwNywwLDAsMC0yLjUsMi41djRhMi41MTQsMi41MTQsMCwwLDAsMi41LDIuNUgxOS40NGEyLjUwNywyLjUwNywwLDAsMCwyLjUtMi41di00QTIuNSwyLjUsMCwwLDAsMTkuNDQsMTAuOTRabTEuNSw2LjVhMS41LDEuNSwwLDAsMS0xLjUsMS41SDQuNTZhMS41MTEsMS41MTEsMCwwLDEtMS41LTEuNXYtNGExLjUsMS41LDAsMCwxLDEuNS0xLjVIMTkuNDRhMS41LDEuNSwwLDAsMSwxLjUsMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjQuNzVcIixcImN5XCI6XCIxNS40MzZcIixcInJcIjpcIjAuNzVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI4LjI1XCIsXCJjeVwiOlwiMTUuNDM2XCIsXCJyXCI6XCIwLjc1XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjUsMTYuOTM2aC01YTEuNSwxLjUsMCwxLDEsMC0zaDVhMS41LDEuNSwwLDAsMSwwLDNabS01LTJhLjUuNSwwLDEsMCwwLDFoNWEuNS41LDAsMCwwLDAtMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVJ1bGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJSdWxlclwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkuNDc5LDMuNWExLjUsMS41LDAsMCwwLTIuMTIsMEwzLjUsNy4zNWExLjUxNiwxLjUxNiwwLDAsMC0uNDQsMS4wNkExLjUsMS41LDAsMCwwLDMuNSw5LjQ3TDE0LjUxOSwyMC41YTEuNTA5LDEuNTA5LDAsMCwwLDIuMTMsMGwzLjg1LTMuODZhMS40OTEsMS40OTEsMCwwLDAsMC0yLjEyWk04LjM1OSw3LjA4YS41LjUsMCwwLDAsMCwuNzEuNTI0LjUyNCwwLDAsMCwuNzEsMGMuNTUtLjU2LDEuMDktMS4xLDEuNjUtMS42NGwxLjI1LDEuMjUtLjkuOWEuNDgzLjQ4MywwLDAsMCwwLC43LjUuNSwwLDAsMCwuNzEsMGMuMjktLjMuNi0uNi45LS44OWwxLjI1LDEuMjUtMS42NCwxLjY1YS40OTUuNDk1LDAsMCwwLC43LjdjLjU2LS41NSwxLjEtMS4wOSwxLjY1LTEuNjRsMS4yNSwxLjI1LS45LjlhLjUyNC41MjQsMCwwLDAtLjE0LjM2LjUuNSwwLDAsMCwuMTQuMzUuNTEzLjUxMywwLDAsMCwuNzEsMGwuOS0uOSwxLjI2LDEuMjYtMS42NSwxLjY0YS41LjUsMCwwLDAsLjcxLjcxYy41NS0uNTYsMS4wOS0xLjEsMS42NS0xLjY0bDEuMjMsMS4yM2EuNS41LDAsMCwxLDAsLjdsLTMuODYsMy44NmEuNS41LDAsMCwxLS43MSwwTDQuMjA5LDguNzdhLjQ5MS40OTEsMCwwLDEtLjE1LS4zNi40ODUuNDg1LDAsMCwxLC4xNS0uMzVMOC4wNjksNC4yYS41MDguNTA4LDAsMCwxLC43LDBsMS4yNCwxLjI0WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC45MzksMTIuOTZsLS4wNC0uMDRjLjAxLDAsLjAxLDAsLjAyLjAxUzE4LjkzOSwxMi45NSwxOC45MzksMTIuOTZaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTYXRlbGxpdGUxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTYXRlbGxpdGVfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy4xMzUsMTIuMzdhNS40NDcsNS40NDcsMCwwLDAsMy40Mi0xLjIuOTgyLjk4MiwwLDAsMCwuMzctLjcyLDEuMDQsMS4wNCwwLDAsMC0uMzEtLjhsLTIuNzgtMi43OGMuMzktLjM5LjgtLjgsMS4xOS0xLjIuMDgtLjA3LjE1LS4xNC4yMy0uMjJhLjUxMS41MTEsMCwwLDAsMC0uNy41LjUsMCwwLDAtLjcxLDBjLS40OC40Ny0uOTQuOTQtMS40MiwxLjQxbC0yLjc4LTIuNzhhMS4wNzcsMS4wNzcsMCwwLDAtLjgtLjMxLDEsMSwwLDAsMC0uNzIuMzcsNS40NTQsNS40NTQsMCwwLDAtMS4xOSwzLjY3bC0xLjQ1LDEuNDZMNy44NTUsNi4yNGEuOTc4Ljk3OCwwLDAsMC0xLjQxLDBMMy4zNjUsOS4zMmExLDEsMCwwLDAsMCwxLjQxTDUuNywxMy4wNmwtLjQxLjRhMi42NSwyLjY1LDAsMCwwLDAsMy43NEw2LjgsMTguNzFhMi42MzIsMi42MzIsMCwwLDAsMy43NCwwbC40LS40LDIuMzMsMi4zM2ExLDEsMCwwLDAsMS40MSwwbDMuMDgtMy4wOWExLDEsMCwwLDAsMC0xLjQxbC0yLjMyLTIuMzIsMS40NS0xLjQ2QTIuMDksMi4wOSwwLDAsMCwxNy4xMzUsMTIuMzdaTTQuMDY1LDEwLjAzbDMuMDktMy4wOSwyLjMyLDIuMzNMNi40LDEyLjM1Wm0xMi45OSw2LjgyLTMuMDgsMy4wOC0yLjMzLTIuMzMsMy4wOC0zLjA4Wm0tNS4yMy04LjUxYTUuNDgyLDUuNDgyLDAsMCwwLDMuODQsMy44M2wtNS44NCw1Ljg0YTEuNjQyLDEuNjQyLDAsMCwxLTIuMzIsMGwtMS41Mi0xLjUyYTEuNjQyLDEuNjQyLDAsMCwxLDAtMi4zMlptMi4xMiwxLjcxYTQuNDE3LDQuNDE3LDAsMCwxLS4zLTUuOTZsMy4xMywzLjEzLDMuMTQsMy4xNC4wMi4wM0E0LjUsNC41LDAsMCwxLDEzLjk0NSwxMC4wNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTYXZlRG93bjEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNhdmVfRG93bl8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNjE3LDYuMzgzYTcuOTQ0LDcuOTQ0LDAsMCwxLTEuNzQ4LDEyLjU2OEE4LjAyOCw4LjAyOCwwLDAsMSw0LjI4MywxMy45MDgsOC4wMjgsOC4wMjgsMCwwLDEsNi4zNzgsNi4zOTFjLjQ1MS0uNDYtLjI1Ni0xLjE2OC0uNzA3LS43MDdBOC45NDYsOC45NDYsMCwwLDAsMTUuNDI3LDIwLjI3YTguOTQ2LDguOTQ2LDAsMCwwLDIuOS0xNC41OTRjLS40NTEtLjQ2MS0xLjE1OC4yNDctLjcwNy43MDdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjM1NSwxMC42bC0zLDNhLjUuNSwwLDAsMS0uMzUuMTUuNTA4LjUwOCwwLDAsMS0uMzYtLjE1bC0zLTNhLjUuNSwwLDAsMSwuNzEtLjcxbDIuMTQsMi4xNFYzLjU1NWEuNTA4LjUwOCwwLDAsMSwuNS0uNS41LjUsMCwwLDEsLjUuNXY4LjQ5bDIuMTUtMi4xNmEuNS41LDAsMCwxLC43MS43MVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNhdmVEb3duMiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU2F2ZV9Eb3duXzJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzcsMjAuOTQ4SDUuNTYzYTIuMzcyLDIuMzcyLDAsMCwxLTIuNS0yLjIxdi0xMWEyLjM3MiwyLjM3MiwwLDAsMSwyLjUtMi4yMTFoLjQ2MmEuNS41LDAsMCwxLDAsMUg1LjU2M2ExLjM4LDEuMzgsMCwwLDAtMS41LDEuMjExdjExYTEuMzgsMS4zOCwwLDAsMCwxLjUsMS4yMUgxOC40MzdhMS4zOCwxLjM4LDAsMCwwLDEuNS0xLjIxdi0xMWExLjM4LDEuMzgsMCwwLDAtMS41LTEuMjExaC0uNDYyYS41LjUsMCwwLDEsMC0xaC40NjJhMi4zNzIsMi4zNzIsMCwwLDEsMi41LDIuMjExdjExQTIuMzcyLDIuMzcyLDAsMCwxLDE4LjQzNywyMC45NDhaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjM1NSwxMC41OTJsLTMsM2EuNS41LDAsMCwxLS4zNS4xNS41MDguNTA4LDAsMCwxLS4zNi0uMTVsLTMtM2EuNS41LDAsMCwxLC43MS0uNzFsMi4xNCwyLjEzOVYzLjU1MmEuNTA4LjUwOCwwLDAsMSwuNS0uNS41LjUsMCwwLDEsLjUuNXY4LjQ5bDIuMTUtMi4xNmEuNS41LDAsMCwxLC43MS43MVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNhdmVVcDEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNhdmVfVXBfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjYxNyw2LjM3NGE3Ljk0Niw3Ljk0NiwwLDAsMS0xLjc0OCwxMi41NjlBOC4wMjgsOC4wMjgsMCwwLDEsNC4yODMsMTMuOSw4LjAyOSw4LjAyOSwwLDAsMSw2LjM3OCw2LjM4MmMuNDUxLS40Ni0uMjU2LTEuMTY4LS43MDctLjcwN2E4Ljk0Niw4Ljk0NiwwLDAsMCw5Ljc1NiwxNC41ODcsOC45NDYsOC45NDYsMCwwLDAsMi45LTE0LjU5NWMtLjQ1MS0uNDYtMS4xNTguMjQ3LS43MDcuNzA3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04LjY0NSw2LjIxM2wzLTNhLjUuNSwwLDAsMSwuMzUtLjE1LjUwOC41MDgsMCwwLDEsLjM2LjE1bDMsM2EuNS41LDAsMCwxLS43MS43MWwtMi4xNC0yLjE0djguNDdhLjUwOC41MDgsMCwwLDEtLjUuNS41LjUsMCwwLDEtLjUtLjVWNC43NjNsLTIuMTUsMi4xNmEuNS41LDAsMCwxLS43MS0uNzFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTYXZlVXAyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTYXZlX1VwXzJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzcsMjAuOTM3SDUuNTYzYTIuMzcyLDIuMzcyLDAsMCwxLTIuNS0yLjIxMXYtMTFhMi4zNzIsMi4zNzIsMCwwLDEsMi41LTIuMjEyaC40NjJhLjUuNSwwLDAsMSwwLDFINS41NjNhMS4zODEsMS4zODEsMCwwLDAtMS41LDEuMjEydjExYTEuMzgsMS4zOCwwLDAsMCwxLjUsMS4yMTFIMTguNDM3YTEuMzgsMS4zOCwwLDAsMCwxLjUtMS4yMTF2LTExYTEuMzgxLDEuMzgxLDAsMCwwLTEuNS0xLjIxMmgtLjQ2MmEuNS41LDAsMCwxLDAtMWguNDYyYTIuMzcyLDIuMzcyLDAsMCwxLDIuNSwyLjIxMnYxMUEyLjM3MiwyLjM3MiwwLDAsMSwxOC40MzcsMjAuOTM3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04LjY0NSw2LjIxM2wzLTNhLjUuNSwwLDAsMSwuMzUtLjE1LjUwOC41MDgsMCwwLDEsLjM2LjE1bDMsM2EuNS41LDAsMCwxLS43MS43MWwtMi4xNC0yLjE0djguNDdhLjUwOC41MDgsMCwwLDEtLjUuNS41LjUsMCwwLDEtLjUtLjVWNC43NjNsLTIuMTUsMi4xNmEuNS41LDAsMCwxLS43MS0uNzFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTZWFyY2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmVyc2lvblwiOlwiMS4xXCIsXCJpZFwiOlwic2VhcmNoXCIsXCJ4XCI6XCIwcHhcIixcInlcIjpcIjBweFwiLFwidmlld0JveFwiOlwiMCAwIDI0IDI0XCIsXCJzdHlsZVwiOlwiZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAyNCAyNDtcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC4wMzEsMjAuNzljMC40NiwwLjQ2LDEuMTctMC4yNSwwLjcxLTAuN2wtMy43NS0zLjc2YzEuMjctMS40MSwyLjA0LTMuMjcsMi4wNC01LjMxXFxuXFx0XFx0YzAtNC4zOS0zLjU3LTcuOTYtNy45Ni03Ljk2cy03Ljk2LDMuNTctNy45Niw3Ljk2YzAsNC4zOSwzLjU3LDcuOTYsNy45Niw3Ljk2YzEuOTgsMCwzLjgxLTAuNzMsNS4yMS0xLjk0TDIwLjAzMSwyMC43OXpcXG5cXHRcXHQgTTQuMTEsMTEuMDJjMC0zLjg0LDMuMTMtNi45Niw2Ljk2LTYuOTZjMy44NCwwLDYuOTYsMy4xMiw2Ljk2LDYuOTZjMCwzLjg0LTMuMTIsNi45Ni02Ljk2LDYuOTZDNy4yNCwxNy45OCw0LjExLDE0Ljg2LDQuMTEsMTEuMDJcXG5cXHRcXHR6XCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpU2VydmVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTZXJ2ZXJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsMTFIMy41NjNhMS41LDEuNSwwLDAsMS0xLjUtMS41VjUuNTY1YTEuNSwxLjUsMCwwLDEsMS41LTEuNUgyMC40MzdhMS41LDEuNSwwLDAsMSwxLjUsMS41djMuOTNBMS41LDEuNSwwLDAsMSwyMC40MzcsMTFaTTMuNTYzLDUuMDY1YS41LjUsMCwwLDAtLjUuNXYzLjkzYS41LjUsMCwwLDAsLjUuNUgyMC40MzdhLjUuNSwwLDAsMCwuNS0uNVY1LjU2NWEuNS41LDAsMCwwLS41LS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsMTkuOTM1SDMuNTYzYTEuNSwxLjUsMCwwLDEtMS41LTEuNXYtMy45M2ExLjUsMS41LDAsMCwxLDEuNS0xLjVIMjAuNDM3YTEuNSwxLjUsMCwwLDEsMS41LDEuNXYzLjkzQTEuNSwxLjUsMCwwLDEsMjAuNDM3LDE5LjkzNVpNMy41NjMsMTQuMDA1YS41LjUsMCwwLDAtLjUuNXYzLjkzYS41LjUsMCwwLDAsLjUuNUgyMC40MzdhLjUuNSwwLDAsMCwuNS0uNXYtMy45M2EuNS41LDAsMCwwLS41LS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjUuNTYzXCIsXCJjeVwiOlwiNy41M1wiLFwiclwiOlwiMC41XCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiNy41NjNcIixcImN5XCI6XCI3LjUzXCIsXCJyXCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuNDUyLDguMDNhLjUuNSwwLDAsMSwwLTFoNWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI1LjU2M1wiLFwiY3lcIjpcIjE2LjQ3XCIsXCJyXCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI3LjU2M1wiLFwiY3lcIjpcIjE2LjQ3XCIsXCJyXCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuNDUyLDE2Ljk3YS41LjUsMCwwLDEsMC0xaDVhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTZXR0aW5ncyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU2V0dGluZ3NcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi42LDIwLjkzNkgxMS4zYS44ODMuODgzLDAsMCwxLS44NTItLjY1NGwtLjc3NC0yLjgzMy0yLjUsMS40MzVhLjg4Ni44ODYsMCwwLDEtMS4wNi0uMTM4bC0uOTI1LS45MTlhLjg4NC44ODQsMCwwLDEtLjE0My0xLjA2NmwxLjQ2OS0yLjU0NUw2LjUwOSwxNC4ybC0yLjc4Ny0uNzQ3YS44ODIuODgyLDAsMCwxLS42NTQtLjg1MVYxMS4zYS44ODIuODgyLDAsMCwxLC42NTItLjg1bDIuODM5LS43NzdMNS4xMiw3LjE3MWEuODg1Ljg4NSwwLDAsMSwuMTQxLTEuMDYybC45MTgtLjkxOEEuODg1Ljg4NSwwLDAsMSw3LjI0LDUuMDQ5TDkuNzkyLDYuNTE0bC4wMTIsMCwuNzQ1LTIuNzlhLjg4MS44ODEsMCwwLDEsLjg1MS0uNjU1aDEuM2EuODgzLjg4MywwLDAsMSwuODUyLjY1NWwuNzYyLDIuODM4LDIuNTA5LTEuNDQxYS44ODUuODg1LDAsMCwxLDEuMDU5LjEzOGwuOTI2LjkxOWEuODgyLjg4MiwwLDAsMSwuMTQxLDEuMDY3TDE3LjQ4Myw5Ljc3N2wuMDA4LjAyMiwyLjc4Ni43NDZhLjg4My44ODMsMCwwLDEsLjY1My44NTF2MS4zYS44ODMuODgzLDAsMCwxLS42NTQuODUybC0yLjgzNy43NzQsMS40MzksMi41MDVhLjg4MS44ODEsMCwwLDEtLjE0MSwxLjA2M2wtLjkxNy45MTdhLjg4OC44ODgsMCwwLDEtMS4wNjMuMTQxbC0yLjUzOS0xLjQ2MkwxNC4yLDE3LjVsLS43NDUsMi43ODVBLjg4NS44ODUsMCwwLDEsMTIuNiwyMC45MzZabS0xLjIxLTFoMS4xMTlsLjczOC0yLjc1NmEuODg4Ljg4OCwwLDAsMSwuNTI4LS41OTJsLjEzNC0uMDUyYS44NzMuODczLDAsMCwxLC43Ni4wNTdsMi41MSwxLjQ0NS43ODktLjc4OS0xLjQyMy0yLjQ3OGEuODgxLjg4MSwwLDAsMS0uMDQ4LS43OGwuMDUyLS4xMjVhLjg3NS44NzUsMCwwLDEsLjU4NC0uNTFsMi44LS43NDl2LTEuMTJsLTIuNzU1LS43MzdhLjg4NS44ODUsMCwwLDEtLjU5Mi0uNTI5bC0uMDUyLS4xMzJhLjg4Mi44ODIsMCwwLDEsLjA1Ny0uNzYzTDE4LjA0LDYuODE4bC0uOC0uNzktMi40OCwxLjQyNWEuODc4Ljg3OCwwLDAsMS0uNzcyLjA1MmwtLjExNS0uMDQ3YS44ODguODg4LDAsMCwxLS41MTgtLjU4OGwtLjc0OC0yLjgwNkgxMS40OTJsLS43MzgsMi43NjJhLjg4My44ODMsMCwwLDEtLjUzOS42bC0uMTIuMDQ1YS44NzQuODc0LDAsMCwxLS43NTEtLjA1OEw2LjgyMiw1Ljk2MmwtLjc4OS43ODlMNy40NTUsOS4yMjdhLjg4Ni44ODYsMCwwLDEsLjA0Ni43ODVsLS4wNTEuMTJhLjg3Ni44NzYsMCwwLDEtLjU3OS41bC0yLjguNzU4djEuMTIxbDIuNzU3LjczOGEuODg5Ljg4OSwwLDAsMSwuNTkxLjUyNWwuMDQ4LjEyMWEuODc0Ljg3NCwwLDAsMS0uMDU1Ljc3TDUuOTU4LDE3LjE4MWwuOC43OTEsMi40Ny0xLjQxOWEuODc4Ljg3OCwwLDAsMSwuNzg3LS4wNDVsLjEwNi4wNDRhLjg3NC44NzQsMCwwLDEsLjUyNi41OTFaTTkuNzUsMTcuNDgybC4wMDgsMFpNOS42LDE3LjQyMWwuMDA3LDBaTTYuNDg3LDE0LjE0N2gwWm0uMDQ0LTQuNDExaDBabTcuNzI0LTMuMlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTVhMywzLDAsMSwxLDMtM0EzLDMsMCwwLDEsMTIsMTVabTAtNWEyLDIsMCwxLDAsMiwyQTIsMiwwLDAsMCwxMiwxMFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNoYXJlMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU2hhcmVfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjIyMywxMS4wNzVhLjUuNSwwLDAsMCwuNy43MWw3LTd2My41OGEuNTA4LjUwOCwwLDAsMCwuNS41LjUuNSwwLDAsMCwuNS0uNVYzLjU3NWEuNS41LDAsMCwwLS41LS41aC00Ljc5YS41LjUsMCwwLDAsMCwxaDMuNThaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3Ljg3NiwyMC45MjZINi4xMjRhMy4wNTMsMy4wNTMsMCwwLDEtMy4wNS0zLjA1VjYuMTI0YTMuMDUzLDMuMDUzLDAsMCwxLDMuMDUtMy4wNWg2LjAyOGEuNS41LDAsMCwxLDAsMUg2LjEyNGEyLjA1MywyLjA1MywwLDAsMC0yLjA1LDIuMDVWMTcuODc2YTIuMDUzLDIuMDUzLDAsMCwwLDIuMDUsMi4wNUgxNy44NzZhMi4wNTMsMi4wNTMsMCwwLDAsMi4wNS0yLjA1VjExLjg0OWEuNS41LDAsMCwxLDEsMHY2LjAyN0EzLjA1MywzLjA1MywwLDAsMSwxNy44NzYsMjAuOTI2WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpU2hhcmUyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTaGFyZV8yXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQ0LDE1Ljk0YTIuNSwyLjUsMCwwLDAtMS45Ni45NUw3Ljk3LDEyLjY0YTIuMzU2LDIuMzU2LDAsMCwwLDAtMS4yOWw4LjUtNC4yNWEyLjUsMi41LDAsMSwwLS41My0xLjU0LDIuMjY5LDIuMjY5LDAsMCwwLC4wOS42NWwtOC41LDQuMjVhMi41LDIuNSwwLDEsMCwwLDMuMDhsOC41LDQuMjVhMi4yNjksMi4yNjksMCwwLDAtLjA5LjY1LDIuNSwyLjUsMCwxLDAsMi41LTIuNVptMC0xMS44OGExLjUsMS41LDAsMSwxLTEuNSwxLjVBMS41LDEuNSwwLDAsMSwxOC40NCw0LjA2Wk01LjU2LDEzLjVBMS41LDEuNSwwLDEsMSw3LjA2LDEyLDEuNSwxLjUsMCwwLDEsNS41NiwxMy41Wm0xMi44OCw2LjQ0YTEuNSwxLjUsMCwxLDEsMS41LTEuNUExLjUsMS41LDAsMCwxLDE4LjQ0LDE5Ljk0WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNoaXJ0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTaGlydFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjY1NywyMS45NDlINy4zNDNhMi41LDIuNSwwLDAsMS0yLjUtMi41VjExLjIyMmE2LjQ2OCw2LjQ2OCwwLDAsMSwuMTEyLTEuMkw1LjIyNCw4LjU5YTUuNTcyLDUuNTcyLDAsMCwwLC4wOTQtMS4wMTVWMy4zYTEuMjUyLDEuMjUyLDAsMCwxLDEuMjUtMS4yNUg4LjgxNWExLjI1MSwxLjI1MSwwLDAsMSwxLjI1LDEuMjVWNi40MTNhMS45MzUsMS45MzUsMCwwLDAsMy44NywwVjMuM2ExLjI1MSwxLjI1MSwwLDAsMSwxLjI1LTEuMjVoMi4yNDdhMS4yNTIsMS4yNTIsMCwwLDEsMS4yNSwxLjI1VjcuNTc1YTUuNDg2LDUuNDg2LDAsMCwwLC4xLDEuMDE1bC4yNjksMS40MzFhNi41Nyw2LjU3LDAsMCwxLC4xMTEsMS4ydjguMjI3QTIuNSwyLjUsMCwwLDEsMTYuNjU3LDIxLjk0OVpNNi41NjgsMy4wNTFhLjI1MS4yNTEsMCwwLDAtLjI1LjI1VjcuNTc1YTYuNTQzLDYuNTQzLDAsMCwxLS4xMTEsMS4ybC0uMjcsMS40MzJhNS41LDUuNSwwLDAsMC0uMDk0LDEuMDE1djguMjI3YTEuNSwxLjUsMCwwLDAsMS41LDEuNWg5LjMxNGExLjUsMS41LDAsMCwwLDEuNS0xLjVWMTEuMjIyYTUuNTE5LDUuNTE5LDAsMCwwLS4wOTQtMS4wMTZsLS4yNjktMS40M2E2LjQ1Myw2LjQ1MywwLDAsMS0uMTEyLTEuMlYzLjNhLjI1MS4yNTEsMCwwLDAtLjI1LS4yNUgxNS4xODVhLjI1MS4yNTEsMCwwLDAtLjI1LjI1VjYuNDEzYTIuOTM1LDIuOTM1LDAsMCwxLTUuODcsMFYzLjNhLjI1MS4yNTEsMCwwLDAtLjI1LS4yNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuOTg2LDE3LjMzM1YxMy44NzRhLjA3NS4wNzUsMCwwLDAtLjExNC0uMDY0bC0uNjM4LjM5MmEuMTQ5LjE0OSwwLDAsMS0uMjI4LS4xMjh2LS42NWEuMy4zLDAsMCwxLC4xNDUtLjI1OGwuNzY0LS40NTdhLjMuMywwLDAsMSwuMTU0LS4wNDNIMTIuN2EuMy4zLDAsMCwxLC4zLjN2NC4zNjdhLjMuMywwLDAsMS0uMy4zaC0uNDA5QS4zLjMsMCwwLDEsMTEuOTg2LDE3LjMzM1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNob3AgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNob3BcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNiw1LjI2YTIuNTEyLDIuNTEyLDAsMCwwLTIuNDgtMi4ySDUuODg1YTIuNTEyLDIuNTEyLDAsMCwwLTIuNDgsMi4xOWwtLjMsMi40N2EzLjQxMSwzLjQxMSwwLDAsMCwxLjE2LDIuNTZ2OC4xNmEyLjUsMi41LDAsMCwwLDIuNSwyLjVoMTAuNDdhMi41LDIuNSwwLDAsMCwyLjUtMi41VjEwLjI4QTMuNDExLDMuNDExLDAsMCwwLDIwLjksNy43MlptLTYuNTksMTQuNjhoLTRWMTUuODZhMS41LDEuNSwwLDAsMSwxLjUtMS41aDFhMS41LDEuNSwwLDAsMSwxLjUsMS41Wm00LjczLTEuNWExLjUsMS41LDAsMCwxLTEuNSwxLjVoLTIuMjNWMTUuODZhMi41LDIuNSwwLDAsMC0yLjUtMi41aC0xYTIuNSwyLjUsMCwwLDAtMi41LDIuNXY0LjA4SDYuNzY1YTEuNSwxLjUsMCwwLDEtMS41LTEuNVYxMC44N2EzLjIyMywzLjIyMywwLDAsMCwxLjI0LjI0LDMuMzU4LDMuMzU4LDAsMCwwLDIuNTgtMS4xOS4yNDEuMjQxLDAsMCwxLC4zNCwwLDMuMzU4LDMuMzU4LDAsMCwwLDIuNTgsMS4xOUEzLjM5MywzLjM5MywwLDAsMCwxNC42LDkuOTJhLjIxOS4yMTksMCwwLDEsLjE2LS4wNy4yMzguMjM4LDAsMCwxLC4xNy4wNywzLjM1OCwzLjM1OCwwLDAsMCwyLjU4LDEuMTksMy4xNzMsMy4xNzMsMCwwLDAsMS4yMy0uMjRabS0xLjIzLTguMzNhMi4zODYsMi4zODYsMCwwLDEtMS44Mi0uODMsMS4yLDEuMiwwLDAsMC0uOTItLjQzaC0uMDFhMS4xOTQsMS4xOTQsMCwwLDAtLjkyLjQyLDIuNDc2LDIuNDc2LDAsMCwxLTMuNjUsMCwxLjI0LDEuMjQsMCwwLDAtMS44NiwwQTIuNDA1LDIuNDA1LDAsMCwxLDQuMSw3Ljc4bC4zLTIuNGExLjUxNywxLjUxNywwLDAsMSwxLjQ5LTEuMzJoMTIuMjNhMS41LDEuNSwwLDAsMSwxLjQ5LDEuMzJsLjI5LDIuMzZBMi4zOTIsMi4zOTIsMCwwLDEsMTcuNTA1LDEwLjExWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNob3BwaW5nQmFza2V0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTaG9wcGluZ19CYXNrZXRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS40NCw3LjkzN0gxNy4zbC0xLjIxLTQuNTFhLjUwOC41MDgsMCwwLDAtLjYxLS4zNS40ODkuNDg5LDAsMCwwLS4zNS42MWwxLjE0LDQuMjVINy43NGwxLjE0LTQuMjVhLjUuNSwwLDAsMC0uMzYtLjYxLjUxMy41MTMsMCwwLDAtLjYxLjM1bC0xLjIsNC41MUg0LjU2YTEuNSwxLjUsMCwwLDAtLjMyLDIuOTZsLjc0LDcuNzdhMi40OTIsMi40OTIsMCwwLDAsMi40OSwyLjI3aDkuMDZhMi40OTIsMi40OTIsMCwwLDAsMi40OS0yLjI3bC43NC03Ljc3YTEuNSwxLjUsMCwwLDAtLjMyLTIuOTZabS0xLjQxLDEwLjY0YTEuNSwxLjUsMCwwLDEtMS41LDEuMzZINy40N2ExLjUsMS41LDAsMCwxLTEuNS0xLjM2bC0uNzItNy42NGgxMy41Wm0xLjQxLTguNjRINC41NmEuNTA4LjUwOCwwLDAsMS0uNS0uNS41LjUsMCwwLDEsLjUtLjVIMTkuNDRhLjUuNSwwLDAsMSwuNS41QS41MDguNTA4LDAsMCwxLDE5LjQ0LDkuOTM3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05LjUsMTcuNDMyYS41LjUsMCwwLDEtLjUtLjV2LTNhLjUuNSwwLDAsMSwxLDB2M0EuNS41LDAsMCwxLDkuNSwxNy40MzJaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LjUsMTcuNDMyYS41LjUsMCwwLDEtLjUtLjV2LTNhLjUuNSwwLDAsMSwxLDB2M0EuNS41LDAsMCwxLDE0LjUsMTcuNDMyWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpU2hvcHBpbmdDYXJ0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTaG9wcGluZ19DYXJ0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjQzNywxOS45MzRjMCwwLjU1MiAtMC40NDgsMSAtMSwxYy0wLjU1MiwwIC0xLC0wLjQ0OCAtMSwtMWMwLC0wLjU1MiAwLjQ0OCwtMSAxLC0xYzAuNTUyLDAgMSwwLjQ0OCAxLDFabS0xMS4yMTcsLTQuMjY2bC0wLjk0NSwtMTAuOWMtMC4wMywtMC4zOTEgLTAuMzU2LC0wLjY5MyAtMC43NDksLTAuNjkzbC0wLjk2NiwtMGMtMC4yNzYsLTAgLTAuNSwtMC4yMjQgLTAuNSwtMC41YzAsLTAuMjc2IDAuMjI0LC0wLjUgMC41LC0wLjVsMC45NjYsLTBjMC45MTYsLTAgMS42NzYsMC43MDQgMS43NDYsMS42MTdsMC4xMzksMS44MThsMTMuMDMsLTBjMC44ODUsLTAgMS41NzcsMC43NiAxLjQ5NCwxLjYzOGwtMC42NjgsNy41MmMtMC4xMjEsMS4yODUgLTEuMTk5LDIuMjY3IC0yLjQ4OSwyLjI2N2wtOS4wNjksMGMtMS4yOSwwIC0yLjM2NywtMC45ODEgLTIuNDg5LC0yLjI2N1ptMC4yNzQsLTguMTU4bDAuNzIyLDguMDY2YzAuMDczLDAuNzcgMC43MTksMS4zNTkgMS40OTMsMS4zNTlsOS4wNjksMGMwLjc3NCwwIDEuNDIsLTAuNTg5IDEuNDkzLC0xLjM1OWwwLjY2OCwtNy41MThjMC4wMjgsLTAuMjk0IC0wLjIwMywtMC41NDggLTAuNDk4LC0wLjU0OGwtMTIuOTQ3LC0wWm00LjQ1NCwxMi40MjRjLTAsMC41NTIgLTAuNDQ4LDEgLTEsMWMtMC41NTIsMCAtMSwtMC40NDggLTEsLTFjLTAsLTAuNTUyIDAuNDQ4LC0xIDEsLTFjMC41NTIsMCAxLDAuNDQ4IDEsMVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTaG9wcGluZ1RhZyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU2hvcHBpbmdfVGFnXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNjA1LDUuOTg4YTIuOCwyLjgsMCwwLDAtMi42LTIuNTlsLTQuNTYtLjMyYTIuODQyLDIuODQyLDAsMCwwLTIuMTcuODFMMy45LDExLjI3OGEyLjc5NCwyLjc5NCwwLDAsMCwwLDMuOTVsNC44Nyw0Ljg4YTIuOCwyLjgsMCwwLDAsMy45NiwwbDcuMzgtNy4zOWEyLjc3OSwyLjc3OSwwLDAsMCwuODEtMi4xN1pNMTIuMDE1LDE5LjRhMS44LDEuOCwwLDAsMS0yLjU0LDBsLTQuODctNC44N2ExLjc5MywxLjc5MywwLDAsMSwwLTIuNTVsMS4xNy0xLjE3LDcuNDIsNy40MlptNy4zOC03LjM4LTUuNSw1LjVMNi40ODUsMTAuMWw1LjUtNS41YTEuNzg2LDEuNzg2LDAsMCwxLDEuMjctLjUzYy4wNCwwLC4wOC4wMS4xMi4wMWw0LjU2LjMyYTEuOCwxLjgsMCwwLDEsMS42NywxLjY2bC4zMiw0LjU2QTEuODI5LDEuODI5LDAsMCwxLDE5LjQsMTIuMDE4WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE3XCIsXCJjeVwiOlwiNi45OTlcIixcInJcIjpcIjAuODYyXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTaHVmZmxlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTaHVmZmxlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjc5NCwxNy4wODJhLjUxMy41MTMsMCwwLDEsMCwuNzFjLS4wOC4wOC0uMTcuMTYtLjI1LjI1LS41OC41OC0xLjE3LDEuMTYtMS43NSwxLjc1YS41LjUsMCwwLDEtLjcxLS43MWMuMDktLjA4LjE3LS4xNy4yNS0uMjVsLjktLjloLTMuODVhMi41MDksMi41MDksMCwwLDEtMi4xNS0xLjIxTDEyLDEyLjk4MmwtMi4yNCwzLjc0YTIuNTA5LDIuNTA5LDAsMCwxLTIuMTUsMS4yMUgyLjU2NGEuNS41LDAsMCwxLS41LS41LjUuNSwwLDAsMSwuNS0uNWg1LjA1QTEuNTA3LDEuNTA3LDAsMCwwLDguOSwxNi4ybDIuNTEtNC4yTDguOSw3Ljc5MmExLjUwNywxLjUwNywwLDAsMC0xLjI5LS43M0gyLjU2NGEuNS41LDAsMCwxLDAtMWg1LjA1YTIuNTE4LDIuNTE4LDAsMCwxLDIuMTUsMS4yMkwxMiwxMS4wMzJsMi4yNC0zLjc1YTIuNDg5LDIuNDg5LDAsMCwxLDIuMTQtMS4yMmgzLjg1bC0xLjE1LTEuMTVhLjUuNSwwLDEsMSwuNzEtLjdjLjA4LjA4LjE3LjE2LjI1LjI1LjU4LjU4LDEuMTcsMS4xNiwxLjc1LDEuNzVhLjUuNSwwLDAsMSwwLC43Yy0uMDguMDktLjE3LjE3LS4yNS4yNS0uNTguNTktMS4xNywxLjE3LTEuNzUsMS43NWEuNS41LDAsMSwxLS43MS0uN2wuMjUtLjI1LjktLjloLTMuODVhMS41MTksMS41MTksMCwwLDAtMS4yOS43M0wxMi41ODQsMTJsMi41MSw0LjJhMS41MTksMS41MTksMCwwLDAsMS4yOS43M2gzLjg0bC0xLjE0LTEuMTRhLjUuNSwwLDAsMSwuNzEtLjcxWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNpZ25wb3N0RHVvMSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU2lnbnBvc3RfRHVvXzFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsMTEuNUg2LjUzNmEyLjYyOCwyLjYyOCwwLDAsMS0xLjcyMy0uNjI5TDIuNTY0LDguOTE1QTEuMzI5LDEuMzI5LDAsMCwxLDIuNTcsNi44MzFMNC44MTMsNC44OGEyLjYxOSwyLjYxOSwwLDAsMSwxLjcyMy0uNjI5aDEzLjlhMS40NTEsMS40NTEsMCwwLDEsMS41LDEuMzkzdjQuNDYzQTEuNDUxLDEuNDUxLDAsMCwxLDIwLjQzNywxMS41Wm0tMTMuOS02LjI1YTEuNjQsMS42NCwwLDAsMC0xLjA2Ny4zODRMMy4yMTUsNy42YS4zNjQuMzY0LDAsMCwwLS4xNTIuMjgxLjM0OS4zNDksMCwwLDAsLjE0MS4yN2wuMDExLjAxLDIuMjU0LDEuOTYxYTEuNjQ0LDEuNjQ0LDAsMCwwLDEuMDY3LjM4NGgxMy45YS40NjMuNDYzLDAsMCwwLC41LS4zOTRWNS42NDRhLjQ2My40NjMsMCwwLDAtLjUtLjM5M1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNDY0LDE5Ljc0OUgzLjU2M2ExLjQ1MSwxLjQ1MSwwLDAsMS0xLjUtMS4zOTRWMTMuODkyYTEuNDUxLDEuNDUxLDAsMCwxLDEuNS0xLjM5M2gxMy45YTIuNjIxLDIuNjIxLDAsMCwxLDEuNzI0LjYzbDIuMjQ5LDEuOTU2YTEuMzI5LDEuMzI5LDAsMCwxLS4wMDcsMi4wODNsLTIuMjQyLDEuOTUxQTIuNjI1LDIuNjI1LDAsMCwxLDE3LjQ2NCwxOS43NDlaTTMuNTYzLDEzLjVhLjQ2My40NjMsMCwwLDAtLjUuMzkzdjQuNDYzYS40NjMuNDYzLDAsMCwwLC41LjM5NGgxMy45YTEuNjQ0LDEuNjQ0LDAsMCwwLDEuMDY4LS4zODVsMi4yNTMtMS45NmEuMzYyLjM2MiwwLDAsMCwuMTUyLS4yOC4zNTEuMzUxLDAsMCwwLS4xNDEtLjI3MWwtLjAxMS0uMDEtMi4yNTQtMS45NmExLjY0LDEuNjQsMCwwLDAtMS4wNjctLjM4NFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNpZ25wb3N0TDEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNpZ25wb3N0X0xfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsMTZINi41MzZhMi40ODksMi40ODksMCwwLDEtMS43NDQtLjcwOUwyLjU0MiwxMy4xYTEuNSwxLjUsMCwwLDEsLjAwNy0yLjJMNC43OTIsOC43MDlBMi40ODMsMi40ODMsMCwwLDEsNi41MzYsOGgxMy45YTEuNSwxLjUsMCwwLDEsMS41LDEuNXY1QTEuNSwxLjUsMCwwLDEsMjAuNDM3LDE2Wk02LjUzNiw5YTEuNDkxLDEuNDkxLDAsMCwwLTEuMDQ2LjQyNWwtMi4yNTUsMi4yQS41LjUsMCwwLDAsMy4wNjMsMTJhLjQ5NC40OTQsMCwwLDAsLjE2Mi4zNjlsLjAxLjAxLDIuMjU0LDIuMkExLjQ5MiwxLjQ5MiwwLDAsMCw2LjUzNiwxNWgxMy45YS41LjUsMCwwLDAsLjUtLjV2LTVhLjUuNSwwLDAsMC0uNS0uNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTaWducG9zdFIxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTaWducG9zdF9SXzFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy41NjMsOGgxMy45YTIuNDg5LDIuNDg5LDAsMCwxLDEuNzQ0LjcwOWwyLjI1LDIuMTkyYTEuNSwxLjUsMCwwLDEtLjAwNywyLjJsLTIuMjQzLDIuMTg3QTIuNDgzLDIuNDgzLDAsMCwxLDE3LjQ2NCwxNkgzLjU2M2ExLjUsMS41LDAsMCwxLTEuNS0xLjV2LTVBMS41LDEuNSwwLDAsMSwzLjU2Myw4Wm0xMy45LDdhMS40OTEsMS40OTEsMCwwLDAsMS4wNDYtLjQyNWwyLjI1NS0yLjJBLjUuNSwwLDAsMCwyMC45MzcsMTJhLjQ5NC40OTQsMCwwLDAtLjE2Mi0uMzY5bC0uMDEtLjAxLTIuMjU0LTIuMkExLjQ5MiwxLjQ5MiwwLDAsMCwxNy40NjQsOUgzLjU2M2EuNS41LDAsMCwwLS41LjV2NWEuNS41LDAsMCwwLC41LjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpU2xpZGVySG9yaXpvbnRhbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU2xpZGVyX0hvcml6b250YWxcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMS40NSw3LjVIOS45OUEyLDIsMCwwLDAsOC4wNiw2aC0xQTIsMiwwLDAsMCw1LjEzLDcuNUgyLjU1YS41LjUsMCwwLDAtLjUuNS41MDguNTA4LDAsMCwwLC41LjVINS4xM0EyLDIsMCwwLDAsNy4wNiwxMGgxQTIsMiwwLDAsMCw5Ljk5LDguNUgyMS40NUEuNS41LDAsMCwwLDIxLjQ1LDcuNVpNOC4wNiw5aC0xYTEuMDA2LDEuMDA2LDAsMCwxLTEtLjk4VjhhMSwxLDAsMCwxLDEtMWgxYTEsMSwwLDEsMSwwLDJaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjQ1LDE1LjVIMTguODdBMiwyLDAsMCwwLDE2Ljk0LDE0aC0xYTIsMiwwLDAsMC0xLjkzLDEuNUgyLjU1YS41LjUsMCwwLDAsMCwxSDE0LjAxQTIsMiwwLDAsMCwxNS45NCwxOGgxYTIsMiwwLDAsMCwxLjkzLTEuNWgyLjU4YS41LjUsMCwwLDAsLjUtLjVBLjUwOC41MDgsMCwwLDAsMjEuNDUsMTUuNVptLTMuNTEuNWExLDEsMCwwLDEtMSwxaC0xYTEsMSwwLDEsMSwwLTJoMWExLjAwNiwxLjAwNiwwLDAsMSwxLC45OFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNsaWRlclZlcnRpY2FsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTbGlkZXJfVmVydGljYWxcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04LjUsNS4xM1YyLjU1YS41LjUsMCwwLDAtLjUtLjUuNTA4LjUwOCwwLDAsMC0uNS41VjUuMTNBMiwyLDAsMCwwLDYsNy4wNnYxQTIsMiwwLDAsMCw3LjUsOS45OVYyMS40NWEuNS41LDAsMCwwLDEsMFY5Ljk5QTIsMiwwLDAsMCwxMCw4LjA2di0xQTIsMiwwLDAsMCw4LjUsNS4xM1pNOSw4LjA2YTEsMSwwLDEsMS0yLDB2LTFhMS4wMDYsMS4wMDYsMCwwLDEsLjk4LTFIOGExLDEsMCwwLDEsMSwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi41LDE0LjAxVjIuNTVhLjUuNSwwLDAsMC0xLDBWMTQuMDFBMiwyLDAsMCwwLDE0LDE1Ljk0djFhMiwyLDAsMCwwLDEuNSwxLjkzdjIuNThhLjUuNSwwLDAsMCwuNS41LjUwOC41MDgsMCwwLDAsLjUtLjVWMTguODdBMiwyLDAsMCwwLDE4LDE2Ljk0di0xQTIsMiwwLDAsMCwxNi41LDE0LjAxWm0uNSwyLjkzYTEuMDA2LDEuMDA2LDAsMCwxLS45OCwxSDE2YTEsMSwwLDAsMS0xLTF2LTFhMSwxLDAsMSwxLDIsMFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNwZWFrZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNwZWFrZXJcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy40MzcsMjEuOTM4SDYuNTYyYTIuNSwyLjUsMCwwLDEtMi41LTIuNVY0LjU2MmEyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTcuNDM3YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOS40MzhBMi41LDIuNSwwLDAsMSwxNy40MzcsMjEuOTM4Wk02LjU2MiwzLjA2MmExLjUsMS41LDAsMCwwLTEuNSwxLjVWMTkuNDM4YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxNy40MzdhMS41LDEuNSwwLDAsMCwxLjUtMS41VjQuNTYyYTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTguOTM5YTMuNzUsMy43NSwwLDEsMSwzLjc1LTMuNzVBMy43NTUsMy43NTUsMCwwLDEsMTIsMTguOTM5Wm0wLTYuNWEyLjc1LDIuNzUsMCwxLDAsMi43NSwyLjc1QTIuNzUyLDIuNzUyLDAsMCwwLDEyLDEyLjQzOVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsOS41NjNhMi4yNSwyLjI1LDAsMSwxLDIuMjUtMi4yNUEyLjI1MywyLjI1MywwLDAsMSwxMiw5LjU2M1ptMC0zLjVhMS4yNSwxLjI1LDAsMSwwLDEuMjUsMS4yNUExLjI1MSwxLjI1MSwwLDAsMCwxMiw2LjA2M1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNxdWFyZUFsZXJ0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTcXVhcmVfQWxlcnRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzcsMjAuOTM2SDUuNTYyYTIuNSwyLjUsMCwwLDEtMi41LTIuNVY1LjU2MmEyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTguNDM3YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOC40MzZBMi41LDIuNSwwLDAsMSwxOC40MzcsMjAuOTM2Wk01LjU2Miw0LjA2MmExLjUsMS41LDAsMCwwLTEuNSwxLjVWMTguNDM2YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUtMS41VjUuNTYyYTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS41LDEwLjk4MmEuNS41LDAsMCwxLDEsMFYxNWgwYS41LjUsMCwwLDEtMSwwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiOVwiLFwiclwiOlwiMC41XCJ9LFwiY2hpbGRcIjpbXX1dfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNxdWFyZUNoZWNrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTcXVhcmVfQ2hlY2tcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzcsMjAuOTM5SDUuNTYzYTIuNSwyLjUsMCwwLDEtMi41LTIuNVY1LjU2NmEyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTguNDM3YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOC40MzlBMi41LDIuNSwwLDAsMSwxOC40MzcsMjAuOTM5Wk01LjU2Myw0LjA2NmExLjUsMS41LDAsMCwwLTEuNSwxLjVWMTguNDM5YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUtMS41VjUuNTY2YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuODEsMTAuNGMuNDUtLjQ2LS4yNi0xLjE3LS43MS0uNzFsLTMuNTYsMy41NmMtLjU4LS41OC0xLjE2LTEuMTUtMS43My0xLjczYS41LjUsMCwwLDAtLjcxLjcxbDIuMDgsMi4wOGEuNTEzLjUxMywwLDAsMCwuNzEsMFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNxdWFyZUNoZXZEb3duIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTcXVhcmVfQ2hldl9Eb3duXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC42NSwxMC44NWEuNDk1LjQ5NSwwLDAsMSwuNy0uN0wxMiwxMi43OWwyLjY1LTIuNjRhLjQ5NS40OTUsMCwwLDEsLjcuN2wtMywzYS40OTIuNDkyLDAsMCwxLS43LDBaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuMDYzLDE4LjQzN1Y1LjU2M2EyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTguNDM3YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOC40MzdhMi41LDIuNSwwLDAsMS0yLjUsMi41SDUuNTYzQTIuNSwyLjUsMCwwLDEsMy4wNjMsMTguNDM3Wk0xOS45MzcsNS41NjNhMS41LDEuNSwwLDAsMC0xLjUtMS41SDUuNTYzYTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE4LjQzN2ExLjUsMS41LDAsMCwwLDEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTcXVhcmVDaGV2TGVmdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU3F1YXJlX0NoZXZfTGVmdFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjIxLDEybDIuNjQsMi42NWEuNDk1LjQ5NSwwLDAsMS0uNy43Yy0uMTMtLjEyLS4yNS0uMjQtLjM4LS4zNy0uODctLjg3LTEuNzUtMS43NS0yLjYyLTIuNjNhLjQ5Mi40OTIsMCwwLDEsMC0uN2wzLTNhLjQ5NS40OTUsMCwwLDEsLjcuN1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM3LDIwLjkzOUg1LjU2MmEyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjZhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE4LjQzN2EyLjUsMi41LDAsMCwxLDIuNSwyLjVWMTguNDM5QTIuNSwyLjUsMCwwLDEsMTguNDM3LDIwLjkzOVpNNS41NjIsNC4wNjZhMS41LDEuNSwwLDAsMC0xLjUsMS41VjE4LjQzOWExLjUsMS41LDAsMCwwLDEuNSwxLjVIMTguNDM3YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY1LjU2NmExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTcXVhcmVDaGV2UmlnaHQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNxdWFyZV9DaGV2X1JpZ2h0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAuODUsMTUuMzVhLjQ5NS40OTUsMCwwLDEtLjctLjdMMTIuNzksMTIsMTAuMTUsOS4zNWEuNDk1LjQ5NSwwLDAsMSwuNy0uN2wzLDNhLjQ5Mi40OTIsMCwwLDEsMCwuN1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM3LDIwLjkzN0g1LjU2M2EyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjNhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE4LjQzN2EyLjUsMi41LDAsMCwxLDIuNSwyLjVWMTguNDM3QTIuNSwyLjUsMCwwLDEsMTguNDM3LDIwLjkzN1pNNS41NjMsNC4wNjNhMS41LDEuNSwwLDAsMC0xLjUsMS41VjE4LjQzN2ExLjUsMS41LDAsMCwwLDEuNSwxLjVIMTguNDM3YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY1LjU2M2ExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTcXVhcmVDaGV2VXAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNxdWFyZV9DaGV2X1VwXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuMzUsMTMuMTVhLjQ5NS40OTUsMCwwLDEtLjcuN0wxMiwxMS4yMSw5LjM1LDEzLjg1YS40OTUuNDk1LDAsMCwxLS43LS43bDMtM2EuNDkyLjQ5MiwwLDAsMSwuNywwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC45MzcsNS41NjNWMTguNDM3YTIuNSwyLjUsMCwwLDEtMi41LDIuNUg1LjU2M2EyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjNhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE4LjQzN0EyLjUsMi41LDAsMCwxLDIwLjkzNyw1LjU2M1pNNC4wNjMsMTguNDM3YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUtMS41VjUuNTYzYTEuNSwxLjUsMCwwLDAtMS41LTEuNUg1LjU2M2ExLjUsMS41LDAsMCwwLTEuNSwxLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTcXVhcmVJbmZvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTcXVhcmVfSW5mb1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzOCwyMC45MzdINS41NjRhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTYzYTIuNSwyLjUsMCwwLDEsMi41LTIuNUgxOC40MzhhMi41LDIuNSwwLDAsMSwyLjUsMi41VjE4LjQzN0EyLjUsMi41LDAsMCwxLDE4LjQzOCwyMC45MzdaTTUuNTY0LDQuMDYzYTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE4LjQzOGExLjUsMS41LDAsMCwwLDEuNS0xLjVWNS41NjNhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjUsOWEuNS41LDAsMCwwLTEsMGgwdjQuMDE4YS41LjUsMCwwLDAsMSwwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMTQuOTk5XCIsXCJyXCI6XCIwLjVcIn0sXCJjaGlsZFwiOltdfV19XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpU3F1YXJlTWludXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNxdWFyZV9NaW51c1wifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzOCwyMC45MzhINS41NjRhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTY0YTIuNSwyLjUsMCwwLDEsMi41LTIuNUgxOC40MzhhMi41LDIuNSwwLDAsMSwyLjUsMi41VjE4LjQzOEEyLjUsMi41LDAsMCwxLDE4LjQzOCwyMC45MzhaTTUuNTY0LDQuMDY0YTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40MzhhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE4LjQzOGExLjUsMS41LDAsMCwwLDEuNS0xLjVWNS41NjRhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05LDEyLjVhLjUuNSwwLDAsMSwwLTFoNmEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNxdWFyZU1vcmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNxdWFyZV9Nb3JlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM3LDIwLjkzOEg1LjU2MmEyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjVhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE4LjQzN2EyLjUsMi41LDAsMCwxLDIuNSwyLjVWMTguNDM4QTIuNSwyLjUsMCwwLDEsMTguNDM3LDIwLjkzOFpNNS41NjIsNC4wNjVhMS41LDEuNSwwLDAsMC0xLjUsMS41VjE4LjQzOGExLjUsMS41LDAsMCwwLDEuNSwxLjVIMTguNDM3YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY1LjU2NWExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTEuOTk5XCIsXCJjeVwiOlwiMTIuMDAyXCIsXCJyXCI6XCIxXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTUuOTk5XCIsXCJjeVwiOlwiMTIuMDAyXCIsXCJyXCI6XCIxXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiNy45OTlcIixcImN5XCI6XCIxMi4wMDJcIixcInJcIjpcIjFcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNxdWFyZVBsdXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlNxdWFyZV9QbHVzXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM4LDIwLjkzOEg1LjU2M2EyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjRhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE4LjQzOGEyLjUsMi41LDAsMCwxLDIuNSwyLjVWMTguNDM4QTIuNSwyLjUsMCwwLDEsMTguNDM4LDIwLjkzOFpNNS41NjMsNC4wNjRhMS41LDEuNSwwLDAsMC0xLjUsMS41VjE4LjQzOGExLjUsMS41LDAsMCwwLDEuNSwxLjVIMTguNDM4YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY1LjU2NGExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LDEyLjVIMTIuNVYxNWEuNS41LDAsMCwxLTEsMFYxMi41SDlhLjUuNSwwLDAsMSwwLTFoMi41VjlhLjUuNSwwLDAsMSwxLDB2Mi41SDE1QS41LjUsMCwwLDEsMTUsMTIuNVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNxdWFyZVF1ZXN0aW9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTcXVhcmVfUXVlc3Rpb25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjQxLDEyLjQ2MWExLjU1NSwxLjU1NSwwLDAsMSwuMzQxLS42LDIuNjgsMi42OCwwLDAsMSwuNTM1LS40MTcsMi4yLDIuMiwwLDAsMCwuMzYzLS4yODUsMS4yMTgsMS4yMTgsMCwwLDAsLjI1Ni0uMzY0QTEuMDgzLDEuMDgzLDAsMCwwLDEzLDEwLjM0NGEuOTI3LjkyNywwLDAsMC0uMTQyLS41MTguOTQ2Ljk0NiwwLDAsMC0uMzc0LS4zMzgsMS4xMzUsMS4xMzUsMCwwLDAtLjUxOS0uMTE5LDEuMTg4LDEuMTg4LDAsMCwwLS41LjEwNy45MzQuOTM0LDAsMCwwLS4zODkuMzM1Ljg4NC44ODQsMCwwLDAtLjExMS4yMjQuNTE1LjUxNSwwLDAsMS0uNDgzLjM1OWgwYS41MDYuNTA2LDAsMCwxLS40NzktLjY3NSwxLjY1MywxLjY1MywwLDAsMSwuMTc4LS4zNDgsMS43ODksMS43ODksMCwwLDEsLjc0OC0uNjM0LDIuNjA5LDIuNjA5LDAsMCwxLDIuMTEzLjAxNSwxLjczMywxLjczMywwLDAsMSwuNzIxLjY0MiwxLjc2NiwxLjc2NiwwLDAsMSwuMjU3Ljk1OSwxLjgzMywxLjgzMywwLDAsMS0uMTE4LjY3OCwxLjY3NCwxLjY3NCwwLDAsMS0uMzM0LjUzNiwyLjI4OSwyLjI4OSwwLDAsMS0uNTIuNDE3LDIuMjQ1LDIuMjQ1LDAsMCwwLS40NjIuMzcsMS4xLDEuMSwwLDAsMC0uMjU2LjQ1NCwyLjM0NCwyLjM0NCwwLDAsMC0uMDQ1LjI4My40ODYuNDg2LDAsMCwxLS40ODMuNDI5aDBhLjQ4NC40ODQsMCwwLDEtLjQ4My0uNTNBMi45MjgsMi45MjgsMCwwLDEsMTEuNDEsMTIuNDYxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjExLjc5MlwiLFwiY3lcIjpcIjE0Ljg5NFwiLFwiclwiOlwiMC41ODdcIn0sXCJjaGlsZFwiOltdfV19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzgsMjAuOTM4SDUuNTYzYTIuNSwyLjUsMCwwLDEtMi41LTIuNVY1LjU2NGEyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTguNDM4YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOC40MzhBMi41LDIuNSwwLDAsMSwxOC40MzgsMjAuOTM4Wk01LjU2Myw0LjA2NGExLjUsMS41LDAsMCwwLTEuNSwxLjVWMTguNDM4YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxOC40MzhhMS41LDEuNSwwLDAsMCwxLjUtMS41VjUuNTY0YTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVNxdWFyZVJlbW92ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU3F1YXJlX1JlbW92ZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNywyMC45MzdINS41NjNhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTYzYTIuNSwyLjUsMCwwLDEsMi41LTIuNUgxOC40MzdhMi41LDIuNSwwLDAsMSwyLjUsMi41VjE4LjQzN0EyLjUsMi41LDAsMCwxLDE4LjQzNywyMC45MzdaTTUuNTYzLDQuMDYzYTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE4LjQzN2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWNS41NjNhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMy43NjcsMTQuNDc3YS41LjUsMCwwLDAsLjcxLS43MUwxMi43MDcsMTJsMS43Ny0xLjc3YS41LjUsMCwwLDAtLjcxLS43TDEyLDExLjNsLTEuNzctMS43N2EuNS41LDAsMCwwLS43LjdjLjU5LjU5LDEuMTcsMS4xOCwxLjc3LDEuNzdsLTEuNzcsMS43N2MtLjQ2LjQ1LjI1LDEuMTYuNy43MUwxMiwxMi43MDdaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTdGFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTdGFyXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjYsMjAuNDYzYTEuNSwxLjUsMCwwLDEtLjctLjE3NGwtMy42NjYtMS45MjdhLjUuNSwwLDAsMC0uNDY0LDBMOC4xLDIwLjI4OWExLjUsMS41LDAsMCwxLTIuMTc3LTEuNTgxbC43LTQuMDgyYS41LjUsMCwwLDAtLjE0My0uNDQyTDMuNTE2LDExLjI5M2ExLjUsMS41LDAsMCwxLC44MzItMi41NTlsNC4xLS42YS41LjUsMCwwLDAsLjM3Ni0uMjczbDEuODMzLTMuNzE0YTEuNSwxLjUsMCwwLDEsMi42OSwwbDEuODMzLDMuNzE0YS41LjUsMCwwLDAsLjM3Ni4yNzRsNC4xLjZhMS41LDEuNSwwLDAsMSwuODMyLDIuNTU5bC0yLjk2NSwyLjg5MWEuNS41LDAsMCwwLS4xNDQuNDQybC43LDQuMDgyQTEuNSwxLjUsMCwwLDEsMTYuNiwyMC40NjNabS0zLjktMi45ODZMMTYuMzY0LDE5LjRhLjUuNSwwLDAsMCwuNzI1LS41MjdsLS43LTQuMDgyYTEuNSwxLjUsMCwwLDEsLjQzMi0xLjMyOGwyLjk2NS0yLjg5YS41LjUsMCwwLDAtLjI3Ny0uODUzbC00LjEtLjZhMS41LDEuNSwwLDAsMS0xLjEzLS44MjFMMTIuNDQ5LDQuNTk0YS41MTYuNTE2LDAsMCwwLS45LDBMOS43MTksOC4zMDhhMS41LDEuNSwwLDAsMS0xLjEzLjgybC00LjEuNmEuNS41LDAsMCwwLS4yNzcuODUzTDcuMTgsMTMuNDY4QTEuNSwxLjUsMCwwLDEsNy42MTEsMTQuOGwtLjcsNC4wODJhLjUuNSwwLDAsMCwuNzI2LjUyN0wxMS4zLDE3LjQ3N2ExLjUsMS41LDAsMCwxLDEuNCwwWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVN0ZXRob3Njb3BlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJTdGV0aG9zY29wZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC4xODUsOS4yNTZhMi43NDgsMi43NDgsMCwwLDAtLjUsNS40NXYyLjMxYTIuOTIzLDIuOTIzLDAsMCwxLTIuOTIsMi45MmgtMi43OGEyLjkyMywyLjkyMywwLDAsMS0yLjkyLTIuOTJ2LS45OGE1LjUsNS41LDAsMCwwLDUtNS40N1Y1LjI4NmExLjQ4MywxLjQ4MywwLDAsMC0xLjAzLTEuNDJsLTIuMzEtLjc4YS41LjUsMCwwLDAtLjYzLjMyLjQ5MS40OTEsMCwwLDAsLjMxLjYzbDIuMzIuNzhhLjQ4Ni40ODYsMCwwLDEsLjM0LjQ3djUuMjhhNC41LDQuNSwwLDAsMS05LDBWNS4yODZhLjQ4Ni40ODYsMCwwLDEsLjM0LS40N2wyLjMyLS43OGEuNDkxLjQ5MSwwLDAsMCwuMzEtLjYzLjUuNSwwLDAsMC0uNjMtLjMybC0yLjMxLjc4YTEuNDgzLDEuNDgzLDAsMCwwLTEuMDMsMS40MnY1LjI4YTUuNSw1LjUsMCwwLDAsNSw1LjQ3di45OGEzLjkyNiwzLjkyNiwwLDAsMCwzLjkyLDMuOTJoMi43OGEzLjkyNiwzLjkyNiwwLDAsMCwzLjkyLTMuOTJ2LTIuMzFhMi43NDgsMi43NDgsMCwwLDAtLjUtNS40NVptMCw0LjVhMS43NSwxLjc1LDAsMSwxLDEuNzUtMS43NUExLjc1OCwxLjc1OCwwLDAsMSwxOC4xODUsMTMuNzU2WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVN0aWNreU5vdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlN0aWNreV9Ob3RlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQ0LDMuMDY1SDUuNTZhMi41MDcsMi41MDcsMCwwLDAtMi41LDIuNXYxMi44N2EyLjUwNywyLjUwNywwLDAsMCwyLjUsMi41aDguNjhBMi40ODIsMi40ODIsMCwwLDAsMTYsMjAuMmw0LjIxLTQuMmEyLjUwNSwyLjUwNSwwLDAsMCwuNzMtMS43N1Y1LjU2NUEyLjUsMi41LDAsMCwwLDE4LjQ0LDMuMDY1Wm0tNC4zOCwxMy41djMuMzdINS41NmExLjUsMS41LDAsMCwxLTEuNS0xLjVWNS41NjVhMS41LDEuNSwwLDAsMSwxLjUtMS41SDE4LjQ0YTEuNSwxLjUsMCwwLDEsMS41LDEuNXY4LjVIMTYuNTZBMi41MDcsMi41MDcsMCwwLDAsMTQuMDYsMTYuNTY1Wm0xLDMuMTN2LTMuMTNhMS41LDEuNSwwLDAsMSwxLjUtMS41aDMuMTNaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpU3RvcDEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlN0b3BfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40MzcsMjAuOTM3SDUuNTYzYTIuNSwyLjUsMCwwLDEtMi41LTIuNVY1LjU2M2EyLjUsMi41LDAsMCwxLDIuNS0yLjVIMTguNDM3YTIuNSwyLjUsMCwwLDEsMi41LDIuNVYxOC40MzdBMi41LDIuNSwwLDAsMSwxOC40MzcsMjAuOTM3Wk01LjU2Myw0LjA2M2ExLjUsMS41LDAsMCwwLTEuNSwxLjVWMTguNDM3YTEuNSwxLjUsMCwwLDAsMS41LDEuNUgxOC40MzdhMS41LDEuNSwwLDAsMCwxLjUtMS41VjUuNTYzYTEuNSwxLjUsMCwwLDAtMS41LTEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTdG9wU2lnbjEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlN0b3BfU2lnbl8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuNTMxLDE1LjY4OEgxMC4xNGEuNS41LDAsMCwxLDAtMWgyLjM5MWExLjA5NCwxLjA5NCwwLDAsMCwwLTIuMTg4SDExLjQ2OGEyLjA5NCwyLjA5NCwwLDAsMSwwLTQuMTg4aDIuMzkxYS41LjUsMCwwLDEsMCwxSDExLjQ2OGExLjA5NCwxLjA5NCwwLDAsMCwwLDIuMTg4aDEuMDYzYTIuMDk0LDIuMDk0LDAsMCwxLDAsNC4xODhaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjA3OSwyMS45MzNIOC45MkEyLjQ4MiwyLjQ4MiwwLDAsMSw3LjE1MywyMS4yTDIuOCwxNi44NDdhMi40ODQsMi40ODQsMCwwLDEtLjczMi0xLjc2OFY4LjkyMUEyLjQ4NiwyLjQ4NiwwLDAsMSwyLjgsNy4xNTNMNy4xNTMsMi44QTIuNDgyLDIuNDgyLDAsMCwxLDguOTIsMi4wNjdoNi4xNTlhMi40ODIsMi40ODIsMCwwLDEsMS43NjcuNzMyTDIxLjIsNy4xNTRhMi40ODIsMi40ODIsMCwwLDEsLjczMiwxLjc2N3Y2LjE1OGEyLjQ5MSwyLjQ5MSwwLDAsMS0uNzMxLDEuNzY4TDE2Ljg0NiwyMS4yQTIuNDgyLDIuNDgyLDAsMCwxLDE1LjA3OSwyMS45MzNaTTguOTIsMy4wNjdhMS41MTEsMS41MTEsMCwwLDAtMS4wNi40MzlMMy41MDYsNy44NjFhMS40ODksMS40ODksMCwwLDAtLjQzOSwxLjA2djYuMTU4YTEuNDkxLDEuNDkxLDAsMCwwLC40MzksMS4wNjFMNy44NiwyMC40OTRhMS41MTEsMS41MTEsMCwwLDAsMS4wNi40MzloNi4xNTlhMS41MTEsMS41MTEsMCwwLDAsMS4wNi0uNDM5bDQuMzU1LTQuMzU0YTEuNDk0LDEuNDk0LDAsMCwwLC40MzktMS4wNjFWOC45MjFhMS41MTEsMS41MTEsMCwwLDAtLjQzOS0xLjA2TDE2LjEzOSwzLjUwNmExLjUxMSwxLjUxMSwwLDAsMC0xLjA2LS40MzlaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTdG9wd2F0Y2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlN0b3B3YXRjaFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy45MjUsNy44MjhjMS4yMjYsMS4zOTEgMS45NywzLjIxNyAxLjk3LDUuMjE1YzAsNC4zNTggLTMuNTM3LDcuODk1IC03Ljg5NSw3Ljg5NWMtNC4zNTgsMCAtNy44OTYsLTMuNTM3IC03Ljg5NiwtNy44OTVjMCwtNC4xODkgMy4yNzEsLTcuNjIxIDcuMzk2LC03Ljg3OWwwLC0xLjEwM2wtMS41ODcsMGMtMC42NDUsMCAtMC42NDMsLTEgLTAsLTFsNC4xNzQsMGMwLjY0NSwwIDAuNjQ0LDEgLTAsMWwtMS41ODcsMGwwLDEuMTAzYzEuODAzLDAuMTEzIDMuNDQzLDAuODMyIDQuNzE4LDEuOTU2YzAuMzc4LC0wLjM3OCAwLjc1NiwtMC43NTYgMS4xMzUsLTEuMTM0YzAuMTk3LC0wLjE5OCAwLjUwNywtMC4xODMgMC43MDcsLTBjMC4xOTksMC4xODMgMC4xODUsMC41MjIgLTAsMC43MDdsLTEuMTM1LDEuMTM1Wm0wLjk3LDUuMjE1YzAsLTMuODA1IC0zLjA4OSwtNi44OTUgLTYuODk1LC02Ljg5NWMtMy44MDYsMC4wMDEgLTYuODk2LDMuMDkgLTYuODk2LDYuODk1YzAsMy44MDYgMy4wOSw2Ljg5NSA2Ljg5Niw2Ljg5NWMzLjgwNiwwIDYuODk1LC0zLjA4OSA2Ljg5NSwtNi44OTVabS02LjM5NSwwLjAwMWMwLDAuNjQ1IC0xLDAuNjQzIC0xLC0wbDAsLTQuNzA0YzAsLTAuNjQ0IDEsLTAuNjQzIDEsLTBsMCw0LjcwNFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lTdHJlYW1PZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlN0cmVhbV9PZmZcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00LjkxMSw0LjIwNmMtLjQ1LS40NS0xLjE2LjI2LS43MS43MWwuMzIuMzJ2LjAxQTEwLjY0NiwxMC42NDYsMCwwLDAsNS41NDEsMTkuOGMuNDguNDMsMS4xOS0uMjguNzEtLjcxYTkuNjIzLDkuNjIzLDAsMCwxLTEuMDEtMTMuMTNsMi4yNywyLjI3YTYuMDIyLDYuMDIyLDAsMCwwLC42MSw4LjE4Yy40OC40NCwxLjE5LS4yNy43MS0uN2E1LjAyNCw1LjAyNCwwLDAsMS0uNjEtNi43N2wyLjYxLDIuNjFhMS4xMywxLjEzLDAsMCwwLS4wOS40NSwxLjI0OCwxLjI0OCwwLDAsMCwxLjI1LDEuMjQsMS4xMywxLjEzLDAsMCwwLC40NS0uMDlsNC43Nyw0Ljc3Ljg2Ljg2YTMuMDI0LDMuMDI0LDAsMCwxLS4zMS4zMS4zNTUuMzU1LDAsMCwwLS4xMS4xNi40MDYuNDA2LDAsMCwwLS4wNC4xOS4zODEuMzgxLDAsMCwwLC4wNC4xOS4zODYuMzg2LDAsMCwwLC4xMS4xNy41LjUsMCwwLDAsLjM1LjE0LjU4NS41ODUsMCwwLDAsLjEzLS4wMi40MzIuNDMyLDAsMCwwLC4yMi0uMTJjLjExLS4xLjIyLS4yLjMyLS4zLjEuMDkuMTkuMTkuMjkuMjkuNDUuNDUsMS4xNi0uMjYuNzEtLjcxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy43Myw0LjkwOGE5LjYyNCw5LjYyNCwwLDAsMSwyLjMsMTEuMWMtLjI2NS41ODIuNiwxLjA5Ljg2NC41MDVBMTAuNjQ3LDEwLjY0NywwLDAsMCwxOC40MzgsNC4yYy0uNDc1LS40MzMtMS4xODUuMjcyLS43MDguNzA3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNS4xNSw4LjI5MWE1LjAxNiw1LjAxNiwwLDAsMSwxLjYsNC41NzIuNTE1LjUxNSwwLDAsMCwuMzQ5LjYxNS41LjUsMCwwLDAsLjYxNS0uMzQ5LDYuMDQyLDYuMDQyLDAsMCwwLTEuODUyLTUuNTQ2Yy0uNDc2LS40MzEtMS4xODUuMjc0LS43MDguNzA4WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpU3RyZWFtT24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlN0cmVhbV9PblwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYuMjYsMTkuMDg5QTkuNjI1LDkuNjI1LDAsMCwxLDYuMjM0LDQuOTExQzYuNzA5LDQuNDc1LDYsMy43NjksNS41MjcsNC4yQTEwLjUxNiwxMC41MTYsMCwwLDAsNS41NTMsMTkuOGMuNDc1LjQzMywxLjE4NC0uMjczLjcwNy0uNzA3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04Ljg0LDE1LjcwNmE1LjAyNCw1LjAyNCwwLDAsMS0uMDE0LTcuNDEyYy40NzQtLjQzNy0uMjM0LTEuMTQzLS43MDctLjcwN2E2LjAyOCw2LjAyOCwwLDAsMCwuMDE0LDguODI2Yy40NzQuNDM0LDEuMTgzLS4yNzIuNzA3LS43MDdaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTJcIixcImN5XCI6XCIxMlwiLFwiclwiOlwiMS4yNDRcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNzQsNC45MTFhOS42MjUsOS42MjUsMCwwLDEsLjAyNiwxNC4xNzhjLS40NzUuNDM2LjIzNCwxLjE0Mi43MDcuNzA3QTEwLjUxNiwxMC41MTYsMCwwLDAsMTguNDQ3LDQuMmMtLjQ3NS0uNDMzLTEuMTg0LjI3My0uNzA3LjcwN1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuMTYsOC4yOTRhNS4wMjQsNS4wMjQsMCwwLDEsLjAxNCw3LjQxMmMtLjQ3NC40MzcuMjM0LDEuMTQzLjcwNy43MDdhNi4wMjgsNi4wMjgsMCwwLDAtLjAxNC04LjgyNmMtLjQ3NC0uNDM0LTEuMTgzLjI3Mi0uNzA3LjcwN1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVN1biAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiU3VuXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMjAuOTM3YTEuMDc0LDEuMDc0LDAsMCwxLS45NC0uNTQyTDkuNjEsMTcuOWEuMDg0LjA4NCwwLDAsMC0uMS0uMDQxTDYuNzI4LDE4LjZBMS4wODcsMS4wODcsMCwwLDEsNS40LDE3LjI3MmwuNzQ4LTIuOGEuMDg4LjA4OCwwLDAsMC0uMDQxLS4xbC0yLjUtMS40MzlhMS4wODYsMS4wODYsMCwwLDEsMC0xLjg4MUw2LjEsOS42MWEuMDg3LjA4NywwLDAsMCwuMDQxLS4xTDUuNCw2LjcyOEExLjA4NywxLjA4NywwLDAsMSw2LjcyOCw1LjRsMi44Ljc0OGEuMDkxLjA5MSwwLDAsMCwuMS0uMDQxbDEuNDM5LTIuNUExLjA3NiwxLjA3NiwwLDAsMSwxMiwzLjA2M2gwYTEuMDc0LDEuMDc0LDAsMCwxLC45NC41NDJMMTQuMzksNi4xYS4wODQuMDg0LDAsMCwwLC4xLjA0MUwxNy4yNzIsNS40QTEuMDg3LDEuMDg3LDAsMCwxLDE4LjYsNi43MjhsLS43NDgsMi44YS4wODcuMDg3LDAsMCwwLC4wNDEuMWwyLjUsMS40MzlhMS4wODYsMS4wODYsMCwwLDEsMCwxLjg4MUwxNy45LDE0LjM5YS4wODkuMDg5LDAsMCwwLS4wNDEuMWwuNzQ4LDIuNzg0QTEuMDg3LDEuMDg3LDAsMCwxLDE3LjI3MiwxOC42bC0yLjgtLjc0OGEuMDg5LjA4OSwwLDAsMC0uMS4wNDFsLTEuNDM5LDIuNWExLjA3NiwxLjA3NiwwLDAsMS0uOTQuNTQ0Wk05LjUzNCwxNi44NTNhMS4wOTEsMS4wOTEsMCwwLDEsLjk0Mi41NDFsMS40NDgsMi41YS4wODIuMDgyLDAsMCwwLC4wNzUuMDQzaDBhLjA4MS4wODEsMCwwLDAsLjA3NC0uMDQzbDEuNDQtMi41YTEuMDgzLDEuMDgzLDAsMCwxLDEuMjIxLS41MDdsMi44Ljc0N2EuMDg3LjA4NywwLDAsMCwuMTA2LS4xMDZsLS43NDctMi43ODVhMS4wODksMS4wODksMCwwLDEsLjUtMS4yMjJsMi41LTEuNDQ4YS4wODYuMDg2LDAsMCwwLDAtLjE1bC0yLjUtMS40MzlhMS4wODYsMS4wODYsMCwwLDEtLjUwNy0xLjIyMWwuNzQ3LTIuOGEuMDguMDgsMCwwLDAtLjAyMi0uMDgzLjA4Ni4wODYsMCwwLDAtLjA4NS0uMDIzbC0yLjc4NC43NDdhMS4wODgsMS4wODgsMCwwLDEtMS4yMjItLjVsLTEuNDQ4LTIuNUEuMDgyLjA4MiwwLDAsMCwxMiw0LjA2M2gwYS4wODEuMDgxLDAsMCwwLS4wNzQuMDQzbC0xLjQ0LDIuNWExLjA4NywxLjA4NywwLDAsMS0xLjIyMi41MDdsLTIuOC0uNzQ3YS4wODcuMDg3LDAsMCwwLS4xMDYuMTA2TDcuMTEsOS4yNTRhMS4wODksMS4wODksMCwwLDEtLjUsMS4yMjJsLTIuNSwxLjQ0OEEuMDgyLjA4MiwwLDAsMCw0LjA2MywxMmEuMDgxLjA4MSwwLDAsMCwuMDQzLjA3NGwyLjUsMS40NGExLjA4NywxLjA4NywwLDAsMSwuNTA3LDEuMjIxbC0uNzQ3LDIuOGEuMDguMDgsMCwwLDAsLjAyMi4wODMuMDg3LjA4NywwLDAsMCwuMDg1LjAyM2wyLjc4NC0uNzQ3QTEuMDc3LDEuMDc3LDAsMCwxLDkuNTM0LDE2Ljg1M1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTUuODc1QTMuODc1LDMuODc1LDAsMSwxLDE1Ljg3NSwxMiwzLjg4LDMuODgsMCwwLDEsMTIsMTUuODc1Wm0wLTYuNzVBMi44NzUsMi44NzUsMCwxLDAsMTQuODc1LDEyLDIuODc5LDIuODc5LDAsMCwwLDEyLDkuMTI1WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVGFibGV0czEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlRhYmxldHNfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC43NiwzLjA2NWE2LjE3MSw2LjE3MSwwLDAsMC02LjExLDUuNTgsNi4xNTksNi4xNTksMCwxLDAsNi43MSw2LjcxLDYuMTU5LDYuMTU5LDAsMCwwLS42LTEyLjI5Wk05LjIzLDE5LjkzNUE1LjE2Niw1LjE2NiwwLDAsMSw1LjI0LDExLjVsNy4yNyw3LjI2QTUuMTUzLDUuMTUzLDAsMCwxLDkuMjMsMTkuOTM1Wm0zLjk5LTEuODgtNy4yNy03LjI3YTUuMTY1LDUuMTY1LDAsMCwxLDcuMjcsNy4yN1ptMi4xNS0zLjcxYTYuMTIsNi4xMiwwLDAsMC01LjcyLTUuNzEsNS4xNTcsNS4xNTcsMCwxLDEsNS43Miw1LjcxWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVRlbXBIaWdoIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJUZW1wX0hpZ2hcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC44NjMsMTMuNFY0LjkzOWEyLjkyOSwyLjkyOSwwLDAsMC0uODQtMi4wMywyLjg1OSwyLjg1OSwwLDAsMC0yLjIzLS44MiwyLjk0OCwyLjk0OCwwLDAsMC0yLjY2LDNsLjAxLDguMjhhNC43NTUsNC43NTUsMCwwLDAsMS45LDguNDYsNS4wOTMsNS4wOTMsMCwwLDAsLjk1LjA5LDQuNzU5LDQuNzU5LDAsMCwwLDQuNzYtNC43NUE0LjY4NCw0LjY4NCwwLDAsMCwxNC44NjMsMTMuNFptLS40OCw2LjY2YTMuNzgzLDMuNzgzLDAsMCwxLTMuMTUuNzgsMy43LDMuNywwLDAsMS0yLjkyLTIuOTgsMy43NDUsMy43NDUsMCwwLDEsMS40My0zLjY5Ljk2Mi45NjIsMCwwLDAsLjM5LS43N1Y1LjA4OWExLjk2OCwxLjk2OCwwLDAsMSwxLjczLTIsLjY2LjY2LDAsMCwxLC4xNC0uMDEsMS44NzgsMS44NzgsMCwwLDEsMS44NiwxLjg2VjEzLjRhLjk2Mi45NjIsMCwwLDAsLjM5Ljc3LDMuNzQyLDMuNzQyLDAsMCwxLC4xMyw1Ljg5WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMy44OTMsMTcuMTY5YTEuODksMS44OSwwLDAsMS0zLjc4LDAsMS44NTgsMS44NTgsMCwwLDEsMS4zOS0xLjgxVjUuNGEuNS41LDAsMCwxLDEsMHY5Ljk2QTEuODY5LDEuODY5LDAsMCwxLDEzLjg5MywxNy4xNjlaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lUZXh0QWxpZ25DZW50ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlRleHRfQWxpZ25fQ2VudGVyXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDQuMDYzSDMuNTYzYS41LjUsMCwxLDEsMC0xSDIwLjQzN2EuNS41LDAsMSwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNSw4LjVoLTlhLjUuNSwwLDAsMSwwLTFoOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNSwxNi41aC05YS41LjUsMCwxLDEsMC0xaDlhLjUuNSwwLDEsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzNywxMi41SDMuNTYzYS41LjUsMCwwLDEsMC0xSDIwLjQzN2EuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDIwLjkzN0gzLjU2M2EuNS41LDAsMSwxLDAtMUgyMC40MzdhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lUZXh0QWxpZ25KdXN0aWZ5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJUZXh0X0FsaWduX0p1c3RpZnlcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsNC4wNjRIMy41NjNhLjUuNSwwLDAsMSwwLTFIMjAuNDM3YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsOC41SDMuNTYzYS41LjUsMCwwLDEsMC0xSDIwLjQzN2EuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDE2LjVIMy41NjNhLjUuNSwwLDEsMSwwLTFIMjAuNDM3YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsMTIuNUgzLjU2M2EuNS41LDAsMCwxLDAtMUgyMC40MzdhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzNywyMC45MzZIMy41NjNhLjUuNSwwLDEsMSwwLTFIMjAuNDM3YS41LjUsMCwxLDEsMCwxWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVGV4dEFsaWduTGVmdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVGV4dF9BbGlnbl9MZWZ0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM4LDQuMDYzSDMuNTYzYS41LjUsMCwxLDEsMC0xSDIwLjQzOGEuNS41LDAsMSwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuNTYyLDguNWgtOWEuNS41LDAsMCwxLDAtMWg5YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi41NjIsMTYuNWgtOWEuNS41LDAsMSwxLDAtMWg5YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzYsMTIuNUgzLjU2MmEuNS41LDAsMSwxLDAtMUgyMC40MzZhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzNiwyMC45MzdIMy41NjJhLjUuNSwwLDAsMSwwLTFIMjAuNDM2YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVGV4dEFsaWduUmlnaHQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlRleHRfQWxpZ25fUmlnaHRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsNC4wNjRIMy41NjNhLjUuNSwwLDAsMSwwLTFIMjAuNDM3YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC40MzcsOC41aC05YS41LjUsMCwxLDEsMC0xaDlhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzNywxNi41aC05YS41LjUsMCwxLDEsMC0xaDlhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjQzNywxMi41SDMuNTYzYS41LjUsMCwwLDEsMC0xSDIwLjQzN2EuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDM3LDIwLjkzNkgzLjU2M2EuNS41LDAsMSwxLDAtMUgyMC40MzdhLjUuNSwwLDEsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lUZXh0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJUZXh0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQ0LDIuMDZINS41NmExLjUsMS41LDAsMCwwLTEuNSwxLjV2NC41YS41LjUsMCwwLDAsMSwwdi0xSDEwVjIwLjk0SDhhLjUuNSwwLDAsMCwwLDFoOGEuNS41LDAsMCwwLDAtMUgxNFY3LjA2aDQuOTR2MWEuNS41LDAsMCwwLDEsMFYzLjU2QTEuNSwxLjUsMCwwLDAsMTguNDQsMi4wNlptLjUsNEgxNGExLDEsMCwwLDAtMSwxVjIwLjk0SDExVjcuMDZhMSwxLDAsMCwwLTEtMUg1LjA2VjMuNTZhLjUuNSwwLDAsMSwuNS0uNUgxOC40NGEuNS41LDAsMCwxLC41LjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVGltZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlRpbWVyXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMi4zMzYsOS42ODVBOS45MzQsOS45MzQsMCwwLDAsMTMuNTkyLDIxLjgwOCw5LjkzMSw5LjkzMSwwLDAsMCwyMC43MDgsNy4yMywxMC4wNDYsMTAuMDQ2LDAsMCwwLDEyLDIuMDcyYS41MDcuNTA3LDAsMCwwLS41LjV2NC4yYS41LjUsMCwwLDAsMSwwdi00LjJsLS41LjVhOC45MzUsOC45MzUsMCwwLDEsOC40MzMsMTEuODkyQTguOTM4LDguOTM4LDAsMCwxLDYuNDY4LDE5LjAyNyw5LjA0MSw5LjA0MSwwLDAsMSwzLjMsOS45NTFjLjE0Mi0uNjI3LS44MjItLjktLjk2NC0uMjY2WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03LjQsOC4xMTdhLjUuNSwwLDAsMSwuNzA3LS43MDdsNC4yNDMsNC4yNDJoMGEuNS41LDAsMCwxLS43MDcuNzA3WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVHJhc2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlRyYXNoXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNDUsNC4wNkgxNS4yN3YtLjVhMS41LDEuNSwwLDAsMC0xLjUtMS41SDEwLjIzYTEuNSwxLjUsMCwwLDAtMS41LDEuNXYuNUg0LjU1YS41LjUsMCwwLDAsMCwxaC43MmwuNDIsMTQuNDVhMi40OTMsMi40OTMsMCwwLDAsMi41LDIuNDNoNy42MmEyLjQ5MywyLjQ5MywwLDAsMCwyLjUtMi40M2wuNDItMTQuNDVoLjcyQS41LjUsMCwwLDAsMTkuNDUsNC4wNlptLTkuNzItLjVhLjUuNSwwLDAsMSwuNS0uNWgzLjU0YS41LjUsMCwwLDEsLjUuNXYuNUg5LjczWm03LjU4LDE1LjkyYTEuNSwxLjUsMCwwLDEtMS41LDEuNDZIOC4xOWExLjUsMS41LDAsMCwxLTEuNS0xLjQ2TDYuMjYsNS4wNkgxNy43NFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC4zNzUsOGgwYS41LjUsMCwwLDEsMSwwbC4yNSwxMGEuNS41LDAsMCwxLTEsMFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNjI1LDguMDA3YS41LjUsMCwwLDAtMSwwaDBsLS4yNSwxMGEuNS41LDAsMCwwLDEsMFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVRyb3BoeSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVHJvcGh5XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjQzNSw1LjA1NWgtLjk3Yy4wMS0uMTIuMDItLjI0LjAyLS4zNmExLjY0NSwxLjY0NSwwLDAsMC0uNDUtMS4xOCwxLjQ2MiwxLjQ2MiwwLDAsMC0xLjA1LS40NUg3LjAyNWExLjQ4NCwxLjQ4NCwwLDAsMC0xLjA2LjQ1LDEuNiwxLjYsMCwwLDAtLjQ0LDEuMThjMCwuMTIuMDEuMjQuMDIuMzZoLS45OGExLjUsMS41LDAsMCwwLTEuNSwxLjV2MmE0LjUsNC41LDAsMCwwLDQuMjcsNC40OWMxLjA3LDIuMywyLjUzLDMuNzksNC4xNyw0LjA0djIuODVoLTRhLjUuNSwwLDEsMCwwLDFoOWEuNS41LDAsMCwwLDAtMWgtNHYtMi44NWMxLjY0LS4yNSwzLjEtMS43NCw0LjE3LTQuMDRhNC40OTMsNC40OTMsMCwwLDAsNC4yNi00LjQ5di0yQTEuNSwxLjUsMCwwLDAsMTkuNDM1LDUuMDU1Wm0tMTUuMzcsMy41di0yYS41LjUsMCwwLDEsLjUtLjVoMS4wNGEyMi45LDIyLjksMCwwLDAsMS4yOCw1LjkzQTMuNSwzLjUsMCwwLDEsNC4wNjUsOC41NTVabTcuOTQsNy41N2MtMi44MiwwLTUuMjMtNS4wNC01LjQ4LTExLjQ3YS41NzMuNTczLDAsMCwxLC4xNi0uNDQuNDguNDgsMCwwLDEsLjM0LS4xNWg5Ljk2YS40NDIuNDQyLDAsMCwxLC4zMy4xNS42Mi42MiwwLDAsMSwuMTcuNDRDMTcuMjM1LDExLjA4NSwxNC44MjUsMTYuMTI1LDEyLjAwNSwxNi4xMjVabTcuOTMtNy41N2EzLjUwOCwzLjUwOCwwLDAsMS0yLjgsMy40MiwyMy4zNTMsMjMuMzUzLDAsMCwwLDEuMjctNS45MmgxLjAzYS41LjUsMCwwLDEsLjUuNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lUdXJuTDEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlR1cm5fTF8xXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjkzOSw5LjUwOXYxMC45M2EuNTA4LjUwOCwwLDAsMS0uNS41LjUuNSwwLDAsMS0uNS0uNVY5LjUwOWEzLjUsMy41LDAsMCwwLTMuNS0zLjVoLTkuOWwtLjAxLDEuNDRhLjUuNSwwLDAsMS0uODEuNGwtMi40Ny0xLjk2YS41LjUsMCwwLDEsMC0uNzhsMi40OS0xLjk0YS41LjUsMCwwLDEsLjgxLjRsLS4wMSwxLjQ0aDkuOUE0LjUwNyw0LjUwNywwLDAsMSwyMC45MzksOS41MDlaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVHVyblIxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJUdXJuX1JfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjA2MSw5LjUwOXYxMC45M2EuNTA4LjUwOCwwLDAsMCwuNS41LjUuNSwwLDAsMCwuNS0uNVY5LjUwOWEzLjUsMy41LDAsMCwxLDMuNS0zLjVoOS45bC4wMSwxLjQ0YS41LjUsMCwwLDAsLjgxLjRsMi40Ny0xLjk2YS41LjUsMCwwLDAsMC0uNzhsLTIuNDktMS45NGEuNS41LDAsMCwwLS44MS40bC4wMSwxLjQ0aC05LjlBNC41MDcsNC41MDcsMCwwLDAsMy4wNjEsOS41MDlaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVHdpdHRlciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVHdpdHRlclwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS45MTMsNS4zMjJhMS4wMzQsMS4wMzQsMCwwLDEsLjgzNywxLjYyOUwxOS43MDgsOC40MzJjLS4wNjQsNS4wODYtMS43NjUsOC41MzktNS4wNTYsMTAuMjY0QTEwLjkxNywxMC45MTcsMCwwLDEsOS42LDE5LjgzNWExMi4yMzMsMTIuMjMzLDAsMCwxLTYuMi0xLjUyNC43Ni43NiwwLDAsMS0uMzE3LS44Ljc2OC43NjgsMCwwLDEsLjYzLS42LDIwLjYsMjAuNiwwLDAsMCwzLjc0NS0uODg2QzIsMTMuNSwzLjE5LDcuODI0LDMuNzEsNi4wODFhMS4wMjgsMS4wMjgsMCwwLDEsMS43MjktLjQyMiw5LjkzMSw5LjkzMSwwLDAsMCw1Ljk5NSwyLjk1QTQuMTg4LDQuMTg4LDAsMCwxLDEyLjcyNSw1LjNhNC4xMjUsNC4xMjUsMCwwLDEsNS43LjAyWk00LjUyMSwxNy43OTRjMS44NjIuODcyLDYuMjI2LDEuODE5LDkuNjY3LjAxNiwyLjk1NS0xLjU0OSw0LjQ3Ni00LjczMiw0LjUyMS05LjQ2MWEuNzcxLjc3MSwwLDAsMSwuMTQyLS40MzZsMS4wODEtMS41MzgtLjA0MS0uMDUzYy0uNTE4LS4wMDctMS4wMjktLjAxNC0xLjU1LDBhLjgzNS44MzUsMCwwLDEtLjU0Ny0uMjIxLDMuMTMsMy4xMywwLDAsMC00LjM4My0uMDcyLDMuMTc0LDMuMTc0LDAsMCwwLS45MzUsMi44Ny42NDYuNjQ2LDAsMCwxLS4xNTQuNTQ1LjU5MS41OTEsMCwwLDEtLjUxNi4yMDVBMTAuOTI0LDEwLjkyNCwwLDAsMSw0LjcyMiw2LjM1NGMtLjY3LDIuMDc4LTEuNTIsNy4wOTQsMy44NjksOS4wNjVhLjYzMi42MzIsMCwwLDEsLjQxNi41MzguNjI1LjYyNSwwLDAsMS0uMy42QTEzLjE3OCwxMy4xNzgsMCwwLDEsNC41MjEsMTcuNzk0Wk0xMS44NzUsOC42NWgwWm03Ljc5My0uMTYxLDAsMFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lVbWJyZWxsYSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVW1icmVsbGFcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuNSw0LjA2di0uNWEuNTA5LjUwOSwwLDAsMC0uMTUtLjM1LjQ4My40ODMsMCwwLDAtLjcsMCwuNDkxLjQ5MSwwLDAsMC0uMTUuMzV2LjVhOC40MSw4LjQxLDAsMCwwLTcuODgsNy44Mi45NzYuOTc2LDAsMCwwLC4yNy43NCwxLjAyOSwxLjAyOSwwLDAsMCwuNzQuMzJIMTEuNXY1LjIyYTEuNjUzLDEuNjUzLDAsMCwxLS42MiwxLjU0QTEuNTI4LDEuNTI4LDAsMCwxLDguNSwxOC41NGEuNS41LDAsMCwwLTEsMCwyLjQzMywyLjQzMywwLDAsMCwyLjQzLDIuNCwyLjQ1LDIuNDUsMCwwLDAsMi41Ny0yLjI5Yy4wOC0xLjM5LDAtMi44MSwwLTQuMlYxMi45NGg2Ljg3YTEuMDI5LDEuMDI5LDAsMCwwLC43NC0uMzIuOTc2Ljk3NiwwLDAsMCwuMjctLjc0QTguNDEsOC40MSwwLDAsMCwxMi41LDQuMDZabTYuODcsNy44OC0xNC43NS4wMWE3LjQsNy40LDAsMCwxLDE0Ljc2LS4wMkMxOS4zOCwxMS45NCwxOS4zOCwxMS45NCwxOS4zNywxMS45NFpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lVbmRvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJVbmRvXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjkzOSwxMy42N0E3Ljk1OCw3Ljk1OCwwLDAsMSw3LjgsMTkuNzRhOC4wNjEsOC4wNjEsMCwwLDEtMy43Ny02Ljc3LjUuNSwwLDAsMSwxLDAsNi45NzYsNi45NzYsMCwwLDAsMTEsNS43LDYuOTY5LDYuOTY5LDAsMCwwLTEtMTEuOTcsMTAuMDc1LDEwLjA3NSwwLDAsMC00LjY0LS42OVY3LjQ2YS41LjUsMCwwLDEtLjgxLjM5TDcuMTA5LDUuOWEuNS41LDAsMCwxLDAtLjc5TDkuNiwzLjE3YS41LjUsMCwwLDEsLjguNFY1LjAxYy43MS0uMDEsMS40My0uMDMsMi4xMy4wMmE3Ljk4NSw3Ljk4NSwwLDAsMSw3LjQxLDguNjRaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVW5sb2NrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJVbmxvY2tcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy40NCw5LjMzaC0xLjFjMC0uOTcuMDEtMS45NSwwLTIuOTJBNC4zNDMsNC4zNDMsMCwwLDAsOC4zNiw0LjA0Yy0uMzYuNTMuNTEsMS4wMy44Ny41YTMuMzY1LDMuMzY1LDAsMCwxLDUuMjMtLjM5YzEuMDQsMS4xMS44OCwyLjU3Ljg4LDMuOTZWOS4zM0g2LjU2YTIuNSwyLjUsMCwwLDAtMi41LDIuNXY3LjYxYTIuNTA3LDIuNTA3LDAsMCwwLDIuNSwyLjVIMTcuNDRhMi41MDcsMi41MDcsMCwwLDAsMi41LTIuNVYxMS44M0EyLjUsMi41LDAsMCwwLDE3LjQ0LDkuMzNabTEuNSwxMC4xMWExLjUxMSwxLjUxMSwwLDAsMS0xLjUsMS41SDYuNTZhMS41MTEsMS41MTEsMCwwLDEtMS41LTEuNVYxMS44M2ExLjUsMS41LDAsMCwxLDEuNS0xLjVIMTcuNDRhMS41LDEuNSwwLDAsMSwxLjUsMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMywxNC45NWEuOTg0Ljk4NCwwLDAsMS0uNS44NnYxLjVhLjUuNSwwLDAsMS0xLDB2LTEuNWEuOTg0Ljk4NCwwLDAsMS0uNS0uODYsMSwxLDAsMCwxLDIsMFpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVVucmVhZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwidW5yZWFkXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAuMTgyLDYuMzE0YTEwLjIxNSwxMC4yMTUsMCwwLDEsNy45LDEuNzgyLDkuMTQ1LDkuMTQ1LDAsMCwxLDIuNSwyLjgxNywxLjg3NSwxLjg3NSwwLDAsMSwuMDgyLDIuMDI0LDkuMjY2LDkuMjY2LDAsMCwxLTEuNDg1LDIuMDA4Yy0uNDQ2LjQ2NC4yNiwxLjE3Mi43MDcuNzA3LDEuMS0xLjE0NCwyLjUzMy0yLjg2LDEuOS00LjU1NGE4Ljg0NSw4Ljg0NSwwLDAsMC0yLjcyMS0zLjVBMTEuMjQzLDExLjI0MywwLDAsMCw5LjkxNiw1LjM1Yy0uNjMzLjExLS4zNjQsMS4wNzQuMjY2Ljk2NFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuODI0LDE5LjExcS0zLjA0NS0zLjA0NS02LjA5LTYuMDhjLS45My0uOTMtMS44NS0xLjg2LTIuNzctMi43N1E4Ljg0OSw4LjE0NSw2Ljc1NCw2LjA0TDQuODk0LDQuMThjLS40NS0uNDUtMS4xNi4yNi0uNzEuNzFsMS45LDEuOWExMC40MiwxMC40MiwwLDAsMC0zLjIyLDMuMTIsMy43NDMsMy43NDMsMCwwLDAtLjgsMi4yOCw0LjU4MSw0LjU4MSwwLDAsMCwuOTksMi4xNywxMC45MjUsMTAuOTI1LDAsMCwwLDguMTgsNC41QTExLjM3OSwxMS4zNzksMCwwLDAsMTcsMTcuNzFsLjI1LjI1LDEuODYsMS44NkMxOS41NjQsMjAuMjcsMjAuMjc0LDE5LjU2LDE5LjgyNCwxOS4xMVptLTEwLjMtOC44OGMuMjUuMjQuNDkuNDkuNzMuNzNBMi4wMzksMi4wMzksMCwwLDAsMTIsMTQuMDNhMi4wMjMsMi4wMjMsMCwwLDAsMS4wNC0uMjhjLjI1LjI0LjQ5LjQ5LjczLjczYTMuMDQ3LDMuMDQ3LDAsMCwxLTQuMjUtNC4yNVptLTMuNyw1LjZhOS41NTgsOS41NTgsMCwwLDEtMS44MS0xLjg0Yy0uNTMtLjcxLTEuMTktMS42Mi0uODUtMi41NWE4LjM0OCw4LjM0OCwwLDAsMSwzLjY1LTMuOTJjLjY3LjY3LDEuMzQsMS4zMywyLDJhNC4wNCw0LjA0LDAsMCwwLDUuNjcsNS42N2MuNi41OSwxLjE5LDEuMTksMS43OCwxLjc4QTEwLjQsMTAuNCwwLDAsMSw1LjgyNCwxNS44M1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVVzYiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVXNiXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNDQsOC4zNTVIMTguMzF2LS4xNGExLjQ0MywxLjQ0MywwLDAsMC0xLjQ0LTEuNDVINy4yOWE1LjIzNSw1LjIzNSwwLDAsMCwwLDEwLjQ3aDkuNThhMS40NDMsMS40NDMsMCwwLDAsMS40NC0xLjQ1di0uMTRoMi4xM2ExLjUxMSwxLjUxMSwwLDAsMCwxLjUtMS41VjkuODU1QTEuNSwxLjUsMCwwLDAsMjAuNDQsOC4zNTVabS0zLjEzLDcuNDNhLjQ0Ni40NDYsMCwwLDEtLjQ0LjQ1SDcuMjlhNC4yMzUsNC4yMzUsMCwwLDEsMC04LjQ3aDkuNThhLjQ0Ni40NDYsMCwwLDEsLjQ0LjQ1Wm0zLjYzLTEuNjRhLjUwOC41MDgsMCwwLDEtLjUuNUgxOC4zMVY5LjM1NWgyLjEzYS41LjUsMCwwLDEsLjUuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNi4yOSwxMy40NDRBMS40NDYsMS40NDYsMCwxLDEsNy43MzgsMTIsMS40NDcsMS40NDcsMCwwLDEsNi4yOSwxMy40NDRabTAtMS44OTJBLjQ0Ni40NDYsMCwxLDAsNi43MzgsMTIsLjQ0Ni40NDYsMCwwLDAsNi4yOSwxMS41NTJaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lVc2VyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJVc2VyXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNDM4LDIxLjkzN0g2LjU2MmEyLjUsMi41LDAsMCwxLTIuNS0yLjVWMTguNjFjMC0zLjk2OSwzLjU2MS03LjIsNy45MzgtNy4yczcuOTM4LDMuMjI5LDcuOTM4LDcuMnYuODI3QTIuNSwyLjUsMCwwLDEsMTcuNDM4LDIxLjkzN1pNMTIsMTIuNDEyYy0zLjgyNiwwLTYuOTM4LDIuNzgtNi45MzgsNi4ydi44MjdhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE3LjQzOGExLjUsMS41LDAsMCwwLDEuNS0xLjVWMTguNjFDMTguOTM4LDE1LjE5MiwxNS44MjYsMTIuNDEyLDEyLDEyLjQxMlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsOS45MTFhMy45MjQsMy45MjQsMCwxLDEsMy45MjMtMy45MjRBMy45MjcsMy45MjcsMCwwLDEsMTIsOS45MTFabTAtNi44NDdhMi45MjQsMi45MjQsMCwxLDAsMi45MjMsMi45MjNBMi45MjYsMi45MjYsMCwwLDAsMTIsMy4wNjRaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lWYXVsdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmF1bHRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNS45MzUsNi4wNkg4LjA2NWEyLDIsMCwwLDAtMiwydjZhMS45OTMsMS45OTMsMCwwLDAsMiwyaDcuODdhMiwyLDAsMCwwLDItMnYtNkEyLjAwNiwyLjAwNiwwLDAsMCwxNS45MzUsNi4wNlptMSw4YTEsMSwwLDAsMS0xLDFIOC4wNjVhLjk5Ljk5LDAsMCwxLTEtMXYtNmExLDEsMCwwLDEsMS0xaDcuODdhMSwxLDAsMCwxLDEsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM1LDMuMDZINS41NjVhMi41MDcsMi41MDcsMCwwLDAtMi41LDIuNXYxMWEyLjUsMi41LDAsMCwwLDIuNSwyLjV2LjM4YTEuNSwxLjUsMCwwLDAsMS41LDEuNWgxLjQzYTEuNSwxLjUsMCwwLDAsMS41LTEuNXYtLjM4aDR2LjM4YTEuNSwxLjUsMCwwLDAsMS41LDEuNWgxLjQ0YTEuNSwxLjUsMCwwLDAsMS41LTEuNXYtLjM4YTIuNSwyLjUsMCwwLDAsMi41LTIuNXYtMTFBMi41MDcsMi41MDcsMCwwLDAsMTguNDM1LDMuMDZaTTguOTk1LDE5LjQ0YS41LjUsMCwwLDEtLjUuNUg3LjA2NWEuNS41LDAsMCwxLS41LS41di0uMzhoMi40M1ptOC40NCwwYS41LjUsMCwwLDEtLjUuNUgxNS41YS41MDguNTA4LDAsMCwxLS41LS41di0uMzhoMi40NFptMi41LTIuODhhMS41LDEuNSwwLDAsMS0xLjUsMS41SDUuNTY1YTEuNSwxLjUsMCwwLDEtMS41LTEuNXYtMTFhMS41LDEuNSwwLDAsMSwxLjUtMS41aDEyLjg3YTEuNSwxLjUsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuMjY1LDEwLjU2aC0uNjFBMS42NTYsMS42NTYsMCwwLDAsMTIuNSw5LjRWOC43OWEuNDkxLjQ5MSwwLDAsMC0uNS0uNDguNS41LDAsMCwwLS41LjQ4VjkuNGExLjY1NiwxLjY1NiwwLDAsMC0xLjE2LDEuMTZoLS42MWEuNS41LDAsMCwwLS40OC41LjQ5MS40OTEsMCwwLDAsLjQ4LjVoLjYxYTEuNjU2LDEuNjU2LDAsMCwwLDEuMTYsMS4xNnYuNjJhLjQ4OS40ODksMCwwLDAsLjUuNDcuNDgzLjQ4MywwLDAsMCwuNS0uNDd2LS42MmExLjYyMiwxLjYyMiwwLDAsMCwxLjE2LTEuMTZoLjYxYS40ODUuNDg1LDAsMCwwLC40OC0uNUEuNDkxLjQ5MSwwLDAsMCwxNC4yNjUsMTAuNTZaTTEyLDExLjgxYS43NS43NSwwLDEsMSwuNzUtLjc1QS43NDkuNzQ5LDAsMCwxLDEyLDExLjgxWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVmlhbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmlhbFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC43NzksOS40NDFsLS40OC0uNDdMMTUuMDM5LDMuN2wtLjQ4LS40OGEuNS41LDAsMCwwLS43LDAsLjUuNSwwLDAsMCwwLC43MWwuNDcuNDhMNC4xNTksMTQuNTgxYTMuNjk0LDMuNjk0LDAsMCwwLDAsNS4yMmwuMDQuMDRhMy43MDYsMy43MDYsMCwwLDAsNS4yMywwTDE5LjYsOS42NzFsLjQ3LjQ4YS41Mi41MiwwLDAsMCwuNzEsMEEuNTEzLjUxMywwLDAsMCwyMC43NzksOS40NDFabS0xMi4wNiw5LjY5YTIuNywyLjcsMCwwLDEtMy44MSwwbC0uMDQtLjA0YTIuNywyLjcsMCwwLDEsMC0zLjgxbDEuNy0xLjdoNy43MVptNi41Ni02LjU1SDcuNTY5bDcuNDctNy40NiwzLjg1LDMuODVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVmlkZW9PZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlZpZGVvX09mZlwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjc4Myw5LjUxdjYuNTNhLjUuNSwwLDAsMS0xLDBWOS42YzAtLjg1LjA2LTEuNzIsMC0yLjU3LS4wMy0uMzctLjI3LS41LS42MS0uMy0uMzkuMjItLjc2LjUxLTEuMTMuNzYtLjczLjQ5LTEuNDcuOTktMi4yLDEuNDksMCwuNzEtLjAxLDEuNDEtLjAxLDIuMTFhLjUuNSwwLDAsMS0xLDBWOS4xMmMwLS41OC4wMS0xLjE2LDAtMS43NGExLjUyNCwxLjUyNCwwLDAsMC0xLjU2LTEuNWMtMS4yMi0uMDEtMi40MywwLTMuNjUsMGEuNS41LDAsMCwxLDAtMWgyLjEzYy42LDAsMS4yMi0uMDUsMS44MS4wMWEyLjU0LDIuNTQsMCwwLDEsMi4yNywyLjVjMCwuMTMuMDEuMjYsMCwuMzkuNzctLjUzLDEuNTUtMS4wNSwyLjMyLTEuNTdhMi40NjYsMi40NjYsMCwwLDEsMS4yNi0uNiwxLjM2NCwxLjM2NCwwLDAsMSwxLjM3LDEuMzZDMjAuODEzLDcuODEsMjAuNzgzLDguNjcsMjAuNzgzLDkuNTFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5Ljc3MywxOS4wOHEtNi41LTYuNTEtMTIuOTktMTNjLS42Mi0uNjItMS4yNC0xLjI0LTEuODctMS44Ni0uNDUtLjQ2LTEuMTYuMjUtLjcuNzFsLjI4LjI4QTIuNDY4LDIuNDY4LDAsMCwwLDMuMiw3LjM4djkuMjRhMi41LDIuNSwwLDAsMCwyLjUsMi41aDcuNjNhMi41LDIuNSwwLDAsMCwyLjUtMi41di0uMDdsMS4zNywxLjM3Yy42Mi42MiwxLjI0LDEuMjQsMS44NywxLjg2QS41LjUsMCwwLDAsMTkuNzczLDE5LjA4Wm0tNC45NC0yLjQ2YTEuNSwxLjUsMCwwLDEtMS41LDEuNUg1LjdhMS41LDEuNSwwLDAsMS0xLjUtMS41VjcuMzhhMS41LDEuNSwwLDAsMSwxLjA0LTEuNDJsOS41OSw5LjU5WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVmlkZW9PbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmlkZW9fT25cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuMDUsNS4wNWExLjQzMywxLjQzMywwLDAsMC0xLjQ4LjA4TDE2LjI1LDcuMzdWNi41NmEyLjUsMi41LDAsMCwwLTIuNS0yLjVINC42OWEyLjUsMi41LDAsMCwwLTIuNSwyLjVWMTcuNDRhMi41LDIuNSwwLDAsMCwyLjUsMi41aDkuMDZhMi41LDIuNSwwLDAsMCwyLjUtMi41di0uODFsMy4zMiwyLjI0YTEuNSwxLjUsMCwwLDAsLjgxLjI0LDEuNDE0LDEuNDE0LDAsMCwwLDEuNDMtMS40M1Y2LjMyQTEuNDM3LDEuNDM3LDAsMCwwLDIxLjA1LDUuMDVabS01LjgsMTIuMzlhMS41LDEuNSwwLDAsMS0xLjUsMS41SDQuNjlhMS41LDEuNSwwLDAsMS0xLjUtMS41VjYuNTZhMS41LDEuNSwwLDAsMSwxLjUtMS41aDkuMDZhMS41LDEuNSwwLDAsMSwxLjUsMS41Wm01LjU2LjI0YS40MTUuNDE1LDAsMCwxLS4yMy4zOC40MjUuNDI1LDAsMCwxLS40NS0uMDJsLTMuODgtMi42MlY4LjU4bDMuODgtMi42MmEuNDI1LjQyNSwwLDAsMSwuNDUtLjAyLjQxNS40MTUsMCwwLDEsLjIzLjM4WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVZpZXdCb2FyZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmlld19Cb2FyZFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNywyMC45MzZINS41NjNhMi41LDIuNSwwLDAsMS0yLjUtMi41VjUuNTYyYTIuNSwyLjUsMCwwLDEsMi41LTIuNUgxOC40MzdhMi41LDIuNSwwLDAsMSwyLjUsMi41VjE4LjQzNkEyLjUsMi41LDAsMCwxLDE4LjQzNywyMC45MzZaTTUuNTYzLDQuMDYyYTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40MzZhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE4LjQzN2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWNS41NjJhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi41LDE0LjU0NGEuNS41LDAsMCwxLTEsMHYtOGgwYS41LjUsMCwwLDEsMSwwWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi43MTcsMTIuNDUzYS41LjUsMCwwLDEtMSwwVjYuNTQ0aDBhLjUuNSwwLDAsMSwxLDBaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTguMjgsNi41NDRhLjUuNSwwLDAsMC0xLDBoMHY0YS41LjUsMCwwLDAsMSwwWlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpVmlld0NvbHVtbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmlld19Db2x1bW5cIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDQsMy4wNkg1LjU2YTIuNTA3LDIuNTA3LDAsMCwwLTIuNSwyLjVWMTguNDRhMi41MTQsMi41MTQsMCwwLDAsMi41LDIuNUgxOC40NGEyLjUxNCwyLjUxNCwwLDAsMCwyLjUtMi41VjUuNTZBMi41MDcsMi41MDcsMCwwLDAsMTguNDQsMy4wNlpNOC42NywxOS45NEg1LjU2YTEuNTExLDEuNTExLDAsMCwxLTEuNS0xLjVWNS41NmExLjUsMS41LDAsMCwxLDEuNS0xLjVIOC42N1ptMS0xNS44OGg0LjY2VjE5Ljk0SDkuNjdaTTE5Ljk0LDE4LjQ0YTEuNTExLDEuNTExLDAsMCwxLTEuNSwxLjVIMTUuMzNWNC4wNmgzLjExYTEuNSwxLjUsMCwwLDEsMS41LDEuNVpcIn0sXCJjaGlsZFwiOltdfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lWaWV3TGlzdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmlld19MaXN0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDM2LDIwLjkzN0g1LjU2MmEyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjNhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE4LjQzNmEyLjUsMi41LDAsMCwxLDIuNSwyLjVWMTguNDM3QTIuNSwyLjUsMCwwLDEsMTguNDM2LDIwLjkzN1pNNS41NjIsNC4wNjNhMS41LDEuNSwwLDAsMC0xLjUsMS41VjE4LjQzN2ExLjUsMS41LDAsMCwwLDEuNSwxLjVIMTguNDM2YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY1LjU2M2ExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYuNTQ0LDguMjgzaDBhLjUxOS41MTksMCwwLDEtLjM1My0uMTQ3LjUuNSwwLDAsMSwwLS43MDcuNTEyLjUxMiwwLDAsMSwuMzUzLS4xNDZINy41NWEuNTE2LjUxNiwwLDAsMSwuMzUzLjE0Ni41LjUsMCwwLDEsLjE0Ny4zNTQuNS41LDAsMCwxLS41LjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYuNTQ0LDEyLjVoMGEuNTIzLjUyMywwLDAsMS0uMzUzLS4xNDYuNS41LDAsMCwxLDAtLjcwOC41MTYuNTE2LDAsMCwxLC4zNTMtLjE0Nkg3LjU1YS41MjEuNTIxLDAsMCwxLC4zNTMuMTQ2LjUuNSwwLDAsMSwwLC43MDguNTE2LjUxNiwwLDAsMS0uMzUzLjE0NlpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNi41NDQsMTYuNzJoMGEuNTE5LjUxOSwwLDAsMS0uMzUzLS4xNDcuNS41LDAsMCwxLDAtLjcwNy41MTYuNTE2LDAsMCwxLC4zNTMtLjE0Nkg3LjU1YS41MTYuNTE2LDAsMCwxLC4zNTMuMTQ2LjUuNSwwLDAsMSwuMTQ3LjM1NC41LjUsMCwwLDEtLjUuNVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAuNTU0LDguMjgxaDBhLjUuNSwwLDAsMSwwLTFoNi45YS41LjUsMCwwLDEsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMC41NTQsMTIuNWgwYS41LjUsMCwwLDEsMC0xaDYuOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAuNTU0LDE2LjcxOGgwYS41LjUsMCwwLDEsMC0xaDYuOWEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVZpZXdUYWJsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmlld19UYWJsZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC40NCwzLjA2SDUuNTZhMi41MDcsMi41MDcsMCwwLDAtMi41LDIuNVYxOC40NGEyLjUwNywyLjUwNywwLDAsMCwyLjUsMi41SDE4LjQ0YTIuNTE0LDIuNTE0LDAsMCwwLDIuNS0yLjVWNS41NkEyLjUxNCwyLjUxNCwwLDAsMCwxOC40NCwzLjA2Wk04LjcxLDE5Ljk0SDUuNTZhMS41LDEuNSwwLDAsMS0xLjUtMS41VjE1LjMzSDguNzFabTAtNS42MUg0LjA2VjkuNjdIOC43MVptMC01LjY2SDQuMDZWNS41NmExLjUsMS41LDAsMCwxLDEuNS0xLjVIOC43MVptMTEuMjMsOS43N2ExLjUxMSwxLjUxMSwwLDAsMS0xLjUsMS41SDkuNzFWMTUuMzNIMTkuOTRabTAtNC4xMUg5LjcxVjkuNjdIMTkuOTRabTAtNS42Nkg5LjcxVjQuMDZoOC43M2ExLjUxMSwxLjUxMSwwLDAsMSwxLjUsMS41WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVZpZXdUaW1lbGluZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmlld19UaW1lbGluZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQzNiwyMC45NEg1LjU2MmEyLjUsMi41LDAsMCwxLTIuNS0yLjVWNS41NjdhMi41LDIuNSwwLDAsMSwyLjUtMi41SDE4LjQzNmEyLjUsMi41LDAsMCwxLDIuNSwyLjVWMTguNDRBMi41LDIuNSwwLDAsMSwxOC40MzYsMjAuOTRaTTUuNTYyLDQuMDY3YTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxOC40NGExLjUsMS41LDAsMCwwLDEuNSwxLjVIMTguNDM2YTEuNSwxLjUsMCwwLDAsMS41LTEuNVY1LjU2N2ExLjUsMS41LDAsMCwwLTEuNS0xLjVaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYuNTQ0LDguMjg3aDBhLjUuNSwwLDAsMSwwLTFIMTJhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkuMjcxLDEyLjVoMGEuNS41LDAsMCwxLDAtMWg1LjQ1NGEuNS41LDAsMCwxLDAsMVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIsMTYuNzI0aDBhLjUuNSwwLDAsMSwwLTFoNS40NTVhLjUuNSwwLDAsMSwwLDFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lWaXJ1cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVmlydXNcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS44NiwxOS45MDVhLjQ4NS40ODUsMCwwLDAsLjM1LjE1LjQ2OS40NjksMCwwLDAsLjM1LS4xNS40ODMuNDgzLDAsMCwwLDAtLjdsLS41My0uNTMsMS43NC0xLjc0YTYuNDI2LDYuNDI2LDAsMCwwLDMuNzMsMS41NHYyLjQ2aC0uNzVhLjUuNSwwLDAsMCwwLDFoMi41YS41LjUsMCwxLDAsMC0xSDEyLjV2LTIuNDZhNi40MjYsNi40MjYsMCwwLDAsMy43My0xLjU0bDEuNzQsMS43NC0uNTMuNTNhLjQ4My40ODMsMCwwLDAsMCwuNy40NjkuNDY5LDAsMCwwLC4zNS4xNS40ODUuNDg1LDAsMCwwLC4zNS0uMTVsMS43Ny0xLjc2YS41MTMuNTEzLDAsMCwwLDAtLjcxLjUuNSwwLDAsMC0uNzEsMGwtLjUyLjUzLTEuNzQtMS43NGE2LjQzNSw2LjQzNSwwLDAsMCwxLjU0LTMuNzNoMi40NnYuNzVhLjUuNSwwLDAsMCwuNS41LjUuNSwwLDAsMCwuNS0uNXYtMi41YS41MDguNTA4LDAsMCwwLS41LS41LjUuNSwwLDAsMC0uNS41di43NUgxOC40OGE2LjQxOCw2LjQxOCwwLDAsMC0xLjU1LTMuNzJsMS43NS0xLjc0LjUyLjUzYS41MDguNTA4LDAsMCwwLC4zNi4xNS41LjUsMCwwLDAsLjM1LS4xNS41MTMuNTEzLDAsMCwwLDAtLjcxbC0xLjc3LTEuNzdhLjUuNSwwLDAsMC0uNywwLC41LjUsMCwwLDAsMCwuNzFsLjUzLjUzLTEuNzQsMS43NGE2LjM4Miw2LjM4MiwwLDAsMC0zLjczLTEuNTVWMy4wNjVoLjc1YS41LjUsMCwwLDAsLjUtLjUuNS41LDAsMCwwLS41LS41aC0yLjVhLjUuNSwwLDAsMC0uNS41LjUuNSwwLDAsMCwuNS41aC43NXYyLjQ1YTYuMzgyLDYuMzgyLDAsMCwwLTMuNzMsMS41NUw2LjAzLDUuMzI1bC41My0uNTNhLjUuNSwwLDAsMCwwLS43MS41LjUsMCwwLDAtLjcsMEw0LjA5LDUuODU1YS41MTMuNTEzLDAsMCwwLDAsLjcxLjUuNSwwLDAsMCwuMzUuMTUuNTA4LjUwOCwwLDAsMCwuMzYtLjE1bC41Mi0uNTMsMS43NSwxLjc0QTYuNDE4LDYuNDE4LDAsMCwwLDUuNTIsMTEuNUgzLjA2di0uNzVhLjUuNSwwLDAsMC0uNS0uNS41MDguNTA4LDAsMCwwLS41LjV2Mi41YS41LjUsMCwwLDAsLjUuNS41LjUsMCwwLDAsLjUtLjVWMTIuNUg1LjUyYTYuNDM1LDYuNDM1LDAsMCwwLDEuNTQsMy43M2wtMS43NCwxLjc0LS41Mi0uNTNhLjUuNSwwLDAsMC0uNzEsMCwuNTEzLjUxMywwLDAsMCwwLC43MVptMTAuMDMtNC4wMkE1LjUsNS41LDAsMSwxLDE3LjUsMTIsNS40NDgsNS40NDgsMCwwLDEsMTUuODksMTUuODg1WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVZvaWNlbWFpbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiVm9pY2VtYWlsXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjQzNSw3LjVhNC41LDQuNSwwLDAsMC0yLjgyLDhIOS4zODVhNC40OTQsNC40OTQsMCwxLDAtMi44MiwxaDEwLjg3YTQuNSw0LjUsMCwwLDAsMC05Wk0zLjA2NSwxMmEzLjUsMy41LDAsMSwxLDMuNTYsMy41aC0uMDZBMy41LDMuNSwwLDAsMSwzLjA2NSwxMlptMTQuMzcsMy41aC0uMDZhMy41MywzLjUzLDAsMSwxLC4wNiwwWlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVZvbHVtZUhpZ2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlZvbHVtZV9IaWdoXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuODE2LDE5LjkzN2ExLjQ0NiwxLjQ0NiwwLDAsMS0uNzE3LS4xOTRMOS40MywxNy42MjNhMy4yNTcsMy4yNTcsMCwwLDAtMS42MjUtLjQzNEg0LjQzOWEyLjM3OSwyLjM3OSwwLDAsMS0yLjM3NS0yLjM3NlY5LjE4N0EyLjM3OCwyLjM3OCwwLDAsMSw0LjQzOSw2LjgxMkg3LjgwNUEzLjI1NywzLjI1NywwLDAsMCw5LjQzLDYuMzc2TDEzLjEsNC4yNTlBMS40MzcsMS40MzcsMCwwLDEsMTUuMjU1LDUuNVYxOC41YTEuNDI0LDEuNDI0LDAsMCwxLS43MTgsMS4yNDVBMS40NDUsMS40NDUsMCwwLDEsMTMuODE2LDE5LjkzN1pNNC40MzksNy44MTJBMS4zNzcsMS4zNzcsMCwwLDAsMy4wNjQsOS4xODd2NS42MjZhMS4zNzgsMS4zNzgsMCwwLDAsMS4zNzUsMS4zNzZINy44MDVhNC4yNTQsNC4yNTQsMCwwLDEsMi4xMjUuNTY5TDEzLjYsMTguODc2YS40MzkuNDM5LDAsMCwwLC42NTctLjM4VjUuNWEuNDM4LjQzOCwwLDAsMC0uNjU3LS4zNzlMOS45Myw3LjI0MmE0LjI1MSw0LjI1MSwwLDAsMS0yLjEyNS41N1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNDA3LDYuMjYyYTcuNzksNy43OSwwLDAsMSwuMDIxLDExLjQ3NmMtLjQ3NC40MzcuMjM1LDEuMTQzLjcwNy43MDdhOC43OTMsOC43OTMsMCwwLDAtLjAyMS0xMi44OWMtLjQ3NC0uNDM0LTEuMTg0LjI3Mi0uNzA3LjcwN1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuOTEsOS4wMzFhNC4wMjEsNC4wMjEsMCwwLDEsLjAxMiw1LjkzOGMtLjQ3NC40MzguMjM0LDEuMTQzLjcwNy43MDdhNS4wMjUsNS4wMjUsMCwwLDAtLjAxMi03LjM1MmMtLjQ3NC0uNDM0LTEuMTgzLjI3Mi0uNzA3LjcwN1pcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVZvbHVtZU11dGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlZvbHVtZV9NdXRlXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuODE3LDE5LjkzNmExLjQyNCwxLjQyNCwwLDAsMS0uNzE5LS4yTDkuNDMsMTcuNjI0YTMuMjU0LDMuMjU0LDAsMCwwLTEuNjI1LS40MzZINC40NGEyLjM3NywyLjM3NywwLDAsMS0yLjM3NS0yLjM3NVY5LjE4N0EyLjM3OCwyLjM3OCwwLDAsMSw0LjQ0LDYuODExSDcuODA1QTMuMjU3LDMuMjU3LDAsMCwwLDkuNDMsNi4zNzdMMTMuMSw0LjI1OUExLjQzOCwxLjQzOCwwLDAsMSwxNS4yNTUsNS41VjE4LjVhMS40MjMsMS40MjMsMCwwLDEtLjcxOCwxLjI0NUExLjQzOSwxLjQzOSwwLDAsMSwxMy44MTcsMTkuOTM2Wk00LjQ0LDcuODExQTEuMzc3LDEuMzc3LDAsMCwwLDMuMDY1LDkuMTg3djUuNjI2QTEuMzc3LDEuMzc3LDAsMCwwLDQuNDQsMTYuMTg4SDcuODA1YTQuMjQ3LDQuMjQ3LDAsMCwxLDIuMTI1LjU3MUwxMy42LDE4Ljg3NmEuNDM3LjQzNywwLDAsMCwuNDM5LDAsLjQzMy40MzMsMCwwLDAsLjIxOC0uMzc5VjUuNWEuNDM4LjQzOCwwLDAsMC0uNjU3LS4zNzlMOS45Myw3LjI0MmE0LjI1LDQuMjUsMCwwLDEtMi4xMjUuNTY5WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy42MDYsMTQuNDQ1YS41LjUsMCwwLDEtLjctLjcxMWMuMTctLjE2OS4zNC0uMzQ5LjUyLS41MmwxLjIxLTEuMjA5Yy0uNTctLjU4MS0xLjE1LTEuMTYxLTEuNzMtMS43NGEuNS41LDAsMCwxLC43LS43MWwxLjc0LDEuNzM5LDEuNzQtMS43MzlhLjUuNSwwLDAsMSwuNy43MWwtMS43MywxLjc0LDEuNzMsMS43MjlhLjUuNSwwLDAsMS0uNy43MTFMMTkuMzQzLDEyLjdaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lWb2x1bWUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIlZvbHVtZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy44NDksMjAuOTM0YTEuNTU1LDEuNTU1LDAsMCwxLS43ODEtLjIxMmwtNC4xNi0yLjRhMy43NjksMy43NjksMCwwLDAtMS44NzctLjVINy4yMTRhMi42MzEsMi42MzEsMCwwLDEtMi42MjgtMi42MjdWOC44MDlBMi42MzEsMi42MzEsMCwwLDEsNy4yMTQsNi4xODJoMy44MTdhMy43NDcsMy43NDcsMCwwLDAsMS44NzctLjVsNC4xNi0yLjRhMS41NjQsMS41NjQsMCwwLDEsMi4zNDYsMS4zNTRWMTkuMzY5YTEuNTcsMS41NywwLDAsMS0xLjU2NSwxLjU2NVpNNy4yMTQsNy4xODJBMS42MywxLjYzLDAsMCwwLDUuNTg2LDguODA5djYuMzgyYTEuNjI5LDEuNjI5LDAsMCwwLDEuNjI4LDEuNjI3aDMuODE3YTQuNzU2LDQuNzU2LDAsMCwxLDIuMzc3LjYzN2w0LjE2LDIuNGEuNTQzLjU0MywwLDAsMCwuNTYzLDAsLjU1My41NTMsMCwwLDAsLjI4My0uNDg3VjQuNjMyYS41NjUuNTY1LDAsMCwwLS44NDYtLjQ4OWwtNC4xNiwyLjRhNC43NTMsNC43NTMsMCwwLDEtMi4zNzcuNjM3WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVdhbGxldCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiV2FsbGV0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNDM1LDQuMDY1SDQuNTY1YTIuNSwyLjUsMCwwLDAtMi41LDIuNXYxMC44N2EyLjUsMi41LDAsMCwwLDIuNSwyLjVoMTQuODdhMi41LDIuNSwwLDAsMCwyLjUtMi41VjYuNTY1QTIuNSwyLjUsMCwwLDAsMTkuNDM1LDQuMDY1Wm0xLjUsOS45M2gtNi40MmEyLDIsMCwwLDEsMC00aDYuNDJabS02LjQyLTVhMywzLDAsMCwwLDAsNmg2LjQydjIuNDRhMS41LDEuNSwwLDAsMS0xLjUsMS41SDQuNTY1YTEuNSwxLjUsMCwwLDEtMS41LTEuNVY2LjU2NWExLjUsMS41LDAsMCwxLDEuNS0xLjVoMTQuODdhMS41LDEuNSwwLDAsMSwxLjUsMS41djIuNDNaXCJ9LFwiY2hpbGRcIjpbXX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTQuNTE5XCIsXCJjeVwiOlwiMTEuOTk2XCIsXCJyXCI6XCIxXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lXYXJuaW5nIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJXYXJuaW5nXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7fSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi41LDguNzUyYS41LjUsMCwwLDAtMSwwaDB2NmEuNS41LDAsMCwwLDEsMFpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMS45OTlcIixcImN5XCI6XCIxNi43MzZcIixcInJcIjpcIjAuNVwifSxcImNoaWxkXCI6W119XX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjY0MiwyMC45MzRINS4zODVBMi41LDIuNSwwLDAsMSwzLjE2MywxNy4yOUw5Ljc5Miw0LjQyMWEyLjUsMi41LDAsMCwxLDQuNDQ0LDBMMjAuODY1LDE3LjI5YTIuNSwyLjUsMCwwLDEtMi4yMjMsMy42NDRaTTEyLjAxNCw0LjA2NWExLjQ3OCwxLjQ3OCwwLDAsMC0xLjMzNC44MTRMNC4wNTIsMTcuNzQ4YTEuNSwxLjUsMCwwLDAsMS4zMzMsMi4xODZIMTguNjQyYTEuNSwxLjUsMCwwLDAsMS4zMzQtMi4xODZMMTMuMzQ4LDQuODc5QTEuNDc4LDEuNDc4LDAsMCwwLDEyLjAxNCw0LjA2NVpcIn0sXCJjaGlsZFwiOltdfV19XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVdhdmVQdWxzZTEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIldhdmVfUHVsc2VfMVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04Ljk3NCwxOGgwYTEuNDQ2LDEuNDQ2LDAsMCwxLTEuMjU5LS45NzJMNS44NzIsMTIuODgzYy0uMTE1LS4yNi0uMjYyLS4zNzgtLjM0OS0uMzc4SDIuNTYyYS41LjUsMCwxLDEsMC0xSDUuNTIzYTEuNDQ0LDEuNDQ0LDAsMCwxLDEuMjYzLjk3MmwxLjgzOSw0LjE0NWMuMTE2LjI2MS4yNTguMzc4LjM0OS4zNzhoMGMuMDg4LDAsLjIyOS0uMTEzLjM0NC0uMzY4TDEzLjcsNi45NTZBMS40MjMsMS40MjMsMCwwLDEsMTQuOTU4LDZoMGExLjQ0OSwxLjQ0OSwwLDAsMSwxLjI2Ljk3NWwxLjgzOSw0LjE1MWMuMTEuMjQ5LjI1OS4zNzkuMzQ5LjM3OWgzLjAyOGEuNS41LDAsMCwxLDAsMUgxOC40MWExLjQ0NCwxLjQ0NCwwLDAsMS0xLjI2My0uOTc1TDE1LjMwOCw3LjM3OWMtLjExNi0uMjYxLS4yNTktLjM3OC0uMzUtLjM3OWgwYy0uMDg4LDAtLjIyOS4xMTQtLjM0NC4zNjhsLTQuMzg1LDkuNjc2QTEuNDM3LDEuNDM3LDAsMCwxLDguOTc0LDE4WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVdoZWF0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJXaGVhdFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNS4yNDcsMTMuODM2YTMuMTE1LDMuMTE1LDAsMCwwLC43OS0yLjc4LDEuMDUzLDEuMDUzLDAsMCwwLS44LS44MSwzLjEsMy4xLDAsMCwwLC44LTIuNzksMS4wNjEsMS4wNjEsMCwwLDAtLjgyLS44MiwzLjIxMSwzLjIxMSwwLDAsMC0yLjA0LjI1QTMuMDksMy4wOSwwLDAsMCwxNCw0LjgxNmEzLjEsMy4xLDAsMCwwLTEuNDEtMi41NywxLjA0MywxLjA0MywwLDAsMC0xLjE2LS4wMUEzLjEyNCwzLjEyNCwwLDAsMCwxMCw0LjgxNmEzLjA1MiwzLjA1MiwwLDAsMCwuODMsMi4wNywzLjE1NCwzLjE1NCwwLDAsMC0yLjA0LS4yNSwxLjA0OCwxLjA0OCwwLDAsMC0uODIuODIsMy4xLDMuMSwwLDAsMCwuNzksMi43OSwxLjA0MSwxLjA0MSwwLDAsMC0uNzkuODEsMy4xMSwzLjExLDAsMCwwLC43OCwyLjc4LDEuMDcxLDEuMDcxLDAsMCwwLS43OC44MiwzLjAzMSwzLjAzMSwwLDAsMCwzLDMuNywyLjQzNiwyLjQzNiwwLDAsMCwuNTMtLjA1djMuMTVhLjUuNSwwLDAsMCwxLDB2LTMuMTVhMi40NjksMi40NjksMCwwLDAsLjU0LjA1LDMuMDU0LDMuMDU0LDAsMCwwLDIuMTctLjg4LDMuMTI0LDMuMTI0LDAsMCwwLC44My0yLjgyQTEuMDgzLDEuMDgzLDAsMCwwLDE1LjI0NywxMy44MzZabS0zLjgzLDMuNDhhMi4xMiwyLjEyLDAsMCwxLTEuOTItLjU1LDIuMDQxLDIuMDQxLDAsMCwxLS41MS0xLjk2LDIuNTU4LDIuNTU4LDAsMCwxLC40Ny0uMDQsMS45ODQsMS45ODQsMCwwLDEsMS40NS41OUEyLjAxMSwyLjAxMSwwLDAsMSwxMS40MTcsMTcuMzE2Wm0wLTMuNmEyLjExMiwyLjExMiwwLDAsMS0xLjkyLS41NSwyLjAyMiwyLjAyMiwwLDAsMS0uNTEtMS45NSwxLjkzLDEuOTMsMCwwLDEsLjQ3LS4wNSwxLjk4NCwxLjk4NCwwLDAsMSwxLjQ1LjU5QTIuMDExLDIuMDExLDAsMCwxLDExLjQxNywxMy43MTZabTAtMy42YTIuMTEyLDIuMTEyLDAsMCwxLTEuOTItLjU1LDIuMDIyLDIuMDIyLDAsMCwxLS41MS0xLjk1LDIuNTkyLDIuNTkyLDAsMCwxLC40Ny0uMDUsMS45ODQsMS45ODQsMCwwLDEsMS40NS41OUEyLjAxMSwyLjAxMSwwLDAsMSwxMS40MTcsMTAuMTE2Wm0uNTYtMy41NUEyLjEsMi4xLDAsMCwxLDExLDQuODE2YTIuMDA1LDIuMDA1LDAsMCwxLDEuMDQtMS43NEEyLjEsMi4xLDAsMCwxLDEzLDQuODE2LDIuMDU0LDIuMDU0LDAsMCwxLDExLjk3Nyw2LjU2NlptMi41MywxMC4yYTIuMDcyLDIuMDcyLDAsMCwxLTEuOTYuNTEsMi4zODQsMi4zODQsMCwwLDEtLjA1LS40NXYtLjAyYTIuMDY1LDIuMDY1LDAsMCwxLC41OS0xLjQ2LDEuOTksMS45OSwwLDAsMSwxLjQtLjU3LDIuMjc5LDIuMjc5LDAsMCwxLC41Ny4wN0EyLjE0LDIuMTQsMCwwLDEsMTQuNTA3LDE2Ljc2NlptMC0zLjZhMi4wNDcsMi4wNDcsMCwwLDEtMS45Ni41MSwyLjM4NCwyLjM4NCwwLDAsMS0uMDUtLjQ1di0uMDJhMi4wMjQsMi4wMjQsMCwwLDEsLjU5LTEuNDUsMS45NTcsMS45NTcsMCwwLDEsMS40LS41OCwyLjg2MywyLjg2MywwLDAsMSwuNTcuMDdBMi4xNCwyLjE0LDAsMCwxLDE0LjUwNywxMy4xNjZabTAtMy42YTIuMDI0LDIuMDI0LDAsMCwxLTEuOTYuNTEsMi4zODQsMi4zODQsMCwwLDEtLjA1LS40NXYtLjAyYTIuMDI0LDIuMDI0LDAsMCwxLC41OS0xLjQ1LDEuOTU1LDEuOTU1LDAsMCwxLDEuNDEtLjU3LDIuMjU5LDIuMjU5LDAsMCwxLC41Ni4wN0EyLjEyLDIuMTIsMCwwLDEsMTQuNTA3LDkuNTY2WlwifSxcImNoaWxkXCI6W119XX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBDaVdpZmlPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIldpLUZpX09mZlwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwLjM3LDYuNTY0YTEyLjM5MiwxMi4zOTIsMCwwLDEsMTAuNzEsMy45M2MuNDM2LjQ3NiwxLjE0MS0uMjMzLjcwOC0uNzA4QTEzLjMyNCwxMy4zMjQsMCwwLDAsMTAuMzcsNS41NjRjLS42MzEuMDc2LS42MzgsMS4wNzcsMCwxWlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMy45MDcsMTAuMjgzQTguNjQxLDguNjQxLDAsMCwxLDE4LjM0OSwxMi45Yy40MzQuNDc3LDEuMTM5LS4yMzIuNzA3LS43MDdhOS41ODYsOS41ODYsMCwwLDAtNC44ODMtMi44NzFjLS42MjYtLjE0Ni0uODkzLjgxOC0uMjY2Ljk2NVpcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMi4wMDNcIixcImN5XCI6XCIxNi45MjJcIixcInJcIjpcIjEuMTJcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNzczLDE5LjA2YS41LjUsMCwwLDEtLjcxLjcxbC01Ljg0LTUuODRBNC40NzgsNC40NzgsMCwwLDAsOC43LDE1LjI0Yy0uNDMuNDgtMS4xNC0uMjMtLjcxLS43YTUuNDcsNS40NywwLDAsMSw0LjA2LTEuNzhsLTIuMzctMi4zN2E4LjY5Myw4LjY5MywwLDAsMC00LjAzLDIuNTNjLS40My40OC0xLjEzLS4yMy0uNy0uNzFBOS40MzksOS40MzksMCwwLDEsOC44OTMsOS42TDYuODgzLDcuNTlhMTIuNTU3LDEyLjU1NywwLDAsMC0zLjk2LDIuOTQuNS41LDAsMSwxLS43LS43MSwxMy4xMDksMTMuMTA5LDAsMCwxLDMuOTEtMi45OGwtMS45LTEuOWEuNS41LDAsMCwxLC43MS0uNzFaXCJ9LFwiY2hpbGRcIjpbXX1dfV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gQ2lXaWZpT24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e1wiaWRcIjpcIldpLUZpX09uXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJnXCIsXCJhdHRyXCI6e30sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMi45MjIsMTAuNzc3YTEyLjE5NCwxMi4xOTQsMCwwLDEsMTguMTU1LS4wMzRjLjQzNi40NzYsMS4xNDEtLjIzMy43MDctLjcwN2ExMy4xODksMTMuMTg5LDAsMCwwLTE5LjU2OS4wMzRjLS40MzIuNDc1LjI3MywxLjE4NC43MDcuNzA3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01LjY1NCwxMy4xNjlhOC42MTUsOC42MTUsMCwwLDEsMTIuNjkxLS4wMjRjLjQzNy40NzUsMS4xNDMtLjIzNC43MDctLjcwN2E5LjYyMSw5LjYyMSwwLDAsMC0xNC4xMDYuMDI0Yy0uNDMzLjQ3NC4yNzIsMS4xODQuNzA4LjcwN1pcIn0sXCJjaGlsZFwiOltdfSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC43LDE1LjQ5MmE0LjQ3LDQuNDcsMCwwLDEsNi42LS4wMTNjLjQzOC40NzQsMS4xNDMtLjIzNS43MDctLjcwN2E1LjQ3NSw1LjQ3NSwwLDAsMC04LjAxNS4wMTNjLS40MzQuNDc0LjI3MSwxLjE4My43MDcuNzA3WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjExLjk5OVwiLFwiY3lcIjpcIjE3LjE3MlwiLFwiclwiOlwiMS4xMlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpWW91dHViZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiWW91dHViZVwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjQzNywxOS45MzdINC41NjJhMi41LDIuNSwwLDAsMS0yLjUtMi41VjYuNTYzYTIuNSwyLjUsMCwwLDEsMi41LTIuNUgxOS40MzdhMi41LDIuNSwwLDAsMSwyLjUsMi41VjE3LjQzN0EyLjUsMi41LDAsMCwxLDE5LjQzNywxOS45MzdaTTQuNTYyLDUuMDYzYTEuNSwxLjUsMCwwLDAtMS41LDEuNVYxNy40MzdhMS41LDEuNSwwLDAsMCwxLjUsMS41SDE5LjQzN2ExLjUsMS41LDAsMCwwLDEuNS0xLjVWNi41NjNhMS41LDEuNSwwLDAsMC0xLjUtMS41WlwifSxcImNoaWxkXCI6W119LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC41NjgsMTEuMTQ5LDEwLjYsOC40MzJhMS4wMzIsMS4wMzIsMCwwLDAtMS42MTQuODUxdjUuNDM0YTEuMDMyLDEuMDMyLDAsMCwwLDEuNjE0Ljg1MWwzLjk3Mi0yLjcxN0ExLjAzMSwxLjAzMSwwLDAsMCwxNC41NjgsMTEuMTQ5WlwifSxcImNoaWxkXCI6W119XX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpWm9vbUluIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOntcImlkXCI6XCJab29tX0luXCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjI3OSwxNy4wMzljLTEuMzk2LDEuMjA5IC0zLjIxNiwxLjk0MSAtNS4yMDYsMS45NDFjLTQuMzkzLDAgLTcuOTYsLTMuNTY3IC03Ljk2LC03Ljk2Yy0wLC00LjM5MyAzLjU2NywtNy45NiA3Ljk2LC03Ljk2YzQuMzkzLDAgNy45NiwzLjU2NyA3Ljk2LDcuOTZjLTAsMi4wNDQgLTAuNzcyLDMuOTA5IC0yLjA0LDUuMzE5bDAuMTY1LDAuMTY1YzEuMTk0LDEuMTk0IDIuMzg4LDIuMzg4IDMuNTgzLDMuNTgyYzAuNDU1LDAuNDU2IC0wLjI1MiwxLjE2MyAtMC43MDcsMC43MDhsLTMuNzU1LC0zLjc1NVptMS43NTQsLTYuMDE5Yy0wLC0zLjg0MSAtMy4xMTksLTYuOTYgLTYuOTYsLTYuOTZjLTMuODQyLDAgLTYuOTYsMy4xMTkgLTYuOTYsNi45NmMtMCwzLjg0MSAzLjExOCw2Ljk2IDYuOTYsNi45NmMzLjg0MSwwIDYuOTYsLTMuMTE5IDYuOTYsLTYuOTZabS03LjQ2LDAuNWwtMS41LDBjLTAuNjQ1LDAgLTAuNjQzLC0xIC0wLC0xbDEuNSwwbC0wLC0xLjVjLTAsLTAuNjQ1IDEsLTAuNjQzIDEsMGwtMCwxLjVsMS41LDBjMC42NDUsMCAwLjY0MywxIC0wLDFsLTEuNSwwbC0wLDEuNWMtMCwwLjY0NSAtMSwwLjY0MyAtMSwwbC0wLC0xLjVaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIENpWm9vbU91dCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImdcIixcImF0dHJcIjp7XCJpZFwiOlwiWm9vbV9PdXRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuMjc5LDE3LjAzOWMtMS4zOTYsMS4yMDkgLTMuMjE2LDEuOTQxIC01LjIwNiwxLjk0MWMtNC4zOTMsMCAtNy45NiwtMy41NjcgLTcuOTYsLTcuOTZjLTAsLTQuMzkzIDMuNTY3LC03Ljk2IDcuOTYsLTcuOTZjNC4zOTMsMCA3Ljk2LDMuNTY3IDcuOTYsNy45NmMtMCwyLjA0NCAtMC43NzIsMy45MDkgLTIuMDQsNS4zMTlsMC4xNjUsMC4xNjVjMS4xOTQsMS4xOTQgMi4zODgsMi4zODggMy41ODMsMy41ODJjMC40NTUsMC40NTYgLTAuMjUyLDEuMTYzIC0wLjcwNywwLjcwOGwtMy43NTUsLTMuNzU1Wm0xLjc1NCwtNi4wMTljLTAsLTMuODQxIC0zLjExOSwtNi45NiAtNi45NiwtNi45NmMtMy44NDIsMCAtNi45NiwzLjExOSAtNi45Niw2Ljk2Yy0wLDMuODQxIDMuMTE4LDYuOTYgNi45Niw2Ljk2YzMuODQxLDAgNi45NiwtMy4xMTkgNi45NiwtNi45NlptLTQuOTYsLTAuNWMwLjY0NSwwIDAuNjQzLDEgLTAsMWwtNCwwYy0wLjY0NSwwIC0wLjY0MywtMSAtMCwtMWw0LDBaXCJ9LFwiY2hpbGRcIjpbXX1dfV19KShwcm9wcyk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-icons/ci/index.mjs\n"));

/***/ })

});