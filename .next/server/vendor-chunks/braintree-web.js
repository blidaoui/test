"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/braintree-web";
exports.ids = ["vendor-chunks/braintree-web"];
exports.modules = {

/***/ "(ssr)/./node_modules/braintree-web/apple-pay/apple-pay.js":
/*!***********************************************************!*\
  !*** ./node_modules/braintree-web/apple-pay/apple-pay.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/apple-pay/errors.js\");\nvar methods = __webpack_require__(/*! ../lib/methods */ \"(ssr)/./node_modules/braintree-web/lib/methods.js\");\nvar convertMethodsToError = __webpack_require__(/*! ../lib/convert-methods-to-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\n\n/**\n * @typedef {object} ApplePay~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {object} details Additional details.\n * @property {string} details.cardType Type of card, ex: Visa, MasterCard.\n * @property {string} details.cardHolderName The name of the card holder.\n * @property {string} details.dpanLastTwo Last two digits of card number.\n * @property {string} description A human-readable description.\n * @property {string} type The payment method type, always `ApplePayCard`.\n * @property {object} binData Information about the card based on the bin.\n * @property {string} binData.commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.countryOfIssuance The country of issuance.\n * @property {string} binData.debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.issuingBank The issuing bank.\n * @property {string} binData.payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.productId The product id.\n */\n\n/**\n * An Apple Pay Payment Authorization Event object.\n * @typedef {object} ApplePayPaymentAuthorizedEvent\n * @external ApplePayPaymentAuthorizedEvent\n * @see {@link https://developer.apple.com/reference/applepayjs/applepaypaymentauthorizedevent ApplePayPaymentAuthorizedEvent}\n */\n\n/**\n * An Apple Pay Payment Request object.\n * @typedef {object} ApplePayPaymentRequest\n * @external ApplePayPaymentRequest\n * @see {@link https://developer.apple.com/reference/applepayjs/1916082-applepay_js_data_types/paymentrequest PaymentRequest}\n */\n\n/**\n * @class\n * @param {object} options Options\n * @description <strong>You cannot use this constructor directly. Use {@link module:braintree-web/apple-pay.create|braintree.applePay.create} instead.</strong>\n * @classdesc This class represents an Apple Pay component. Instances of this class have methods for validating the merchant server and tokenizing payments.\n */\nfunction ApplePay(options) {\n  this._instantiatedWithClient = Boolean(!options.useDeferredClient);\n  this._client = options.client;\n  this._createPromise = options.createPromise;\n\n  if (this._client) {\n    this._setMerchantIdentifier();\n  }\n}\n\nApplePay.prototype._waitForClient = function () {\n  if (this._client) {\n    return Promise.resolve();\n  }\n\n  return this._createPromise.then(\n    function (client) {\n      this._client = client;\n\n      this._setMerchantIdentifier();\n    }.bind(this)\n  );\n};\n\nApplePay.prototype._setMerchantIdentifier = function () {\n  var applePayConfig =\n    this._client.getConfiguration().gatewayConfiguration.applePayWeb;\n\n  if (!applePayConfig) {\n    return;\n  }\n  /**\n   * @name ApplePay#merchantIdentifier\n   * @description A special merchant ID which represents the merchant association with Braintree. Required when using `ApplePaySession.canMakePaymentsWithActiveCard`.\n   * @example\n   * var promise = ApplePaySession.canMakePaymentsWithActiveCard(applePayInstance.merchantIdentifier);\n   * promise.then(function (canMakePaymentsWithActiveCard) {\n   *   if (canMakePaymentsWithActiveCard) {\n   *     // Set up Apple Pay buttons\n   *   }\n   * });\n   */\n  Object.defineProperty(this, \"merchantIdentifier\", {\n    value: applePayConfig.merchantIdentifier,\n    configurable: false,\n    writable: false,\n  });\n};\n\n/**\n * Merges a payment request with Braintree defaults to return an {external:ApplePayPaymentRequest}.\n *\n * The following properties are assigned to `paymentRequest` if not already defined. Their default values come from the Braintree gateway.\n * - `countryCode`\n * - `currencyCode`\n * - `merchantCapabilities`\n * - `supportedNetworks`\n * @public\n * @param {external:ApplePayPaymentRequest} paymentRequest The payment request details to apply on top of those from Braintree.\n * @returns {external:ApplePayPaymentRequest|Promise} The decorated `paymentRequest` object. If `useDeferredClient` is used along with an `authorization`, this method will return a promise that resolves with the `paymentRequest` object.\n * @example\n * var applePay = require('braintree-web/apple-pay');\n *\n * applePay.create({client: clientInstance}, function (applePayErr, applePayInstance) {\n *   if (applePayErr) {\n *     // Handle error here\n *     return;\n *   }\n *\n *   var paymentRequest = applePayInstance.createPaymentRequest({\n *     total: {\n *       label: 'My Company',\n *       amount: '19.99'\n *     }\n *   });\n *\n *   var session = new ApplePaySession(3, paymentRequest);\n *\n *   // ...\n * @example <caption>With deferred client</caption>\n * var applePay = require('braintree-web/apple-pay');\n *\n * applePay.create({\n *   authorization: 'client-token-or-tokenization-key',\n *   useDeferredClient: true\n * }, function (applePayErr, applePayInstance) {\n *   if (applePayErr) {\n *     // Handle error here\n *     return;\n *   }\n *\n *   applePayInstance.createPaymentRequest({\n *     total: {\n *       label: 'My Company',\n *       amount: '19.99'\n *     }\n *   }).then(function (paymentRequest) {\n *     var session = new ApplePaySession(3, paymentRequest);\n *\n *     // ...\n *   });\n */\nApplePay.prototype.createPaymentRequest = function (paymentRequest) {\n  if (this._instantiatedWithClient) {\n    return this._createPaymentRequestSynchronously(paymentRequest);\n  }\n\n  return this._waitForClient().then(\n    function () {\n      return this._createPaymentRequestSynchronously(paymentRequest);\n    }.bind(this)\n  );\n};\n\nApplePay.prototype._createPaymentRequestSynchronously = function (\n  paymentRequest\n) {\n  var applePay =\n    this._client.getConfiguration().gatewayConfiguration.applePayWeb;\n  var defaults = {\n    countryCode: applePay.countryCode,\n    currencyCode: applePay.currencyCode,\n    merchantCapabilities: applePay.merchantCapabilities || [\"supports3DS\"],\n    supportedNetworks: applePay.supportedNetworks.map(function (network) {\n      return network === \"mastercard\" ? \"masterCard\" : network;\n    }),\n  };\n\n  return Object.assign({}, defaults, paymentRequest);\n};\n\n/**\n * Validates your merchant website, as required by `ApplePaySession` before payment can be authorized.\n * @public\n * @param {object} options Options\n * @param {string} options.validationURL The validationURL from an `ApplePayValidateMerchantEvent`.\n * @param {string} options.displayName The canonical name for your store. Use a non-localized name. This parameter should be a UTF-8 string that is a maximum of 64 characters. The system may display this name to the user.\n * @param {callback} [callback] The second argument, <code>data</code>, is the Apple Pay merchant session object. If no callback is provided, `performValidation` returns a promise.\n * Pass the merchant session to your Apple Pay session's `completeMerchantValidation` method.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * var applePay = require('braintree-web/apple-pay');\n *\n * applePay.create({client: clientInstance}, function (applePayErr, applePayInstance) {\n *   if (applePayErr) {\n *     // Handle error here\n *     return;\n *   }\n *\n *   var paymentRequest = applePayInstance.createPaymentRequest({\n *     total: {\n *       label: 'My Company',\n *       amount: '19.99'\n *     }\n *   });\n *   var session = new ApplePaySession(3, paymentRequest);\n *\n *   session.onvalidatemerchant = function (event) {\n *     applePayInstance.performValidation({\n *       validationURL: event.validationURL,\n *       displayName: 'My Great Store'\n *     }, function (validationErr, validationData) {\n *       if (validationErr) {\n *         console.error(validationErr);\n *         session.abort();\n *         return;\n *       }\n *\n *       session.completeMerchantValidation(validationData);\n *     });\n *   };\n * });\n */\nApplePay.prototype.performValidation = function (options) {\n  var self = this;\n\n  if (!options || !options.validationURL) {\n    return Promise.reject(\n      new BraintreeError(errors.APPLE_PAY_VALIDATION_URL_REQUIRED)\n    );\n  }\n\n  return this._waitForClient()\n    .then(function () {\n      var applePayWebSession = {\n        validationUrl: options.validationURL,\n        domainName: options.domainName || window.location.hostname,\n        merchantIdentifier:\n          options.merchantIdentifier || self.merchantIdentifier,\n      };\n\n      if (options.displayName != null) {\n        applePayWebSession.displayName = options.displayName;\n      }\n\n      return self._client.request({\n        method: \"post\",\n        endpoint: \"apple_pay_web/sessions\",\n        data: {\n          _meta: { source: \"apple-pay\" },\n          applePayWebSession: applePayWebSession,\n        },\n      });\n    })\n    .then(function (response) {\n      analytics.sendEvent(self._client, \"applepay.performValidation.succeeded\");\n\n      return Promise.resolve(response);\n    })\n    .catch(function (err) {\n      analytics.sendEvent(self._client, \"applepay.performValidation.failed\");\n\n      if (err.code === \"CLIENT_REQUEST_ERROR\") {\n        return Promise.reject(\n          new BraintreeError({\n            type: errors.APPLE_PAY_MERCHANT_VALIDATION_FAILED.type,\n            code: errors.APPLE_PAY_MERCHANT_VALIDATION_FAILED.code,\n            message: errors.APPLE_PAY_MERCHANT_VALIDATION_FAILED.message,\n            details: {\n              originalError: err.details.originalError,\n            },\n          })\n        );\n      }\n\n      return Promise.reject(\n        new BraintreeError({\n          type: errors.APPLE_PAY_MERCHANT_VALIDATION_NETWORK.type,\n          code: errors.APPLE_PAY_MERCHANT_VALIDATION_NETWORK.code,\n          message: errors.APPLE_PAY_MERCHANT_VALIDATION_NETWORK.message,\n          details: {\n            originalError: err,\n          },\n        })\n      );\n    });\n};\n\n/**\n * Tokenizes an Apple Pay payment. This will likely be called in your `ApplePaySession`'s `onpaymentauthorized` callback.\n * @public\n * @param {object} options Options\n * @param {object} options.token The `payment.token` property of an {@link external:ApplePayPaymentAuthorizedEvent}.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link ApplePay~tokenizePayload|tokenizePayload}. If no callback is provided, `tokenize` returns a promise that resolves with a {@link ApplePay~tokenizePayload|tokenizePayload}.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * var applePay = require('braintree-web/apple-pay');\n *\n * applePay.create({client: clientInstance}, function (applePayErr, applePayInstance) {\n *   if (applePayErr) {\n *     // Handle error here\n *     return;\n *   }\n *\n *   var paymentRequest = applePayInstance.createPaymentRequest({\n *     total: {\n *       label: 'My Company',\n *       amount: '19.99'\n *     }\n *   });\n *   var session = new ApplePaySession(3, paymentRequest);\n *\n *   session.onpaymentauthorized = function (event) {\n *     applePayInstance.tokenize({\n *       token: event.payment.token\n *     }, function (tokenizeErr, tokenizedPayload) {\n *       if (tokenizeErr) {\n *         session.completePayment(ApplePaySession.STATUS_FAILURE);\n *         return;\n *       }\n *       // Send the tokenizedPayload to your server here!\n *\n *       // Once the transaction is complete, call completePayment\n *       // to close the Apple Pay sheet\n *       session.completePayment(ApplePaySession.STATUS_SUCCESS);\n *     });\n *   };\n *\n *   // ...\n * });\n */\nApplePay.prototype.tokenize = function (options) {\n  var self = this;\n\n  if (!options.token) {\n    return Promise.reject(\n      new BraintreeError(errors.APPLE_PAY_PAYMENT_TOKEN_REQUIRED)\n    );\n  }\n\n  return this._waitForClient()\n    .then(function () {\n      return self._client.request({\n        method: \"post\",\n        endpoint: \"payment_methods/apple_payment_tokens\",\n        data: {\n          _meta: {\n            source: \"apple-pay\",\n          },\n          applePaymentToken: Object.assign({}, options.token, {\n            // The gateway requires this key to be base64-encoded.\n            paymentData: btoa(JSON.stringify(options.token.paymentData)),\n          }),\n        },\n      });\n    })\n    .then(function (response) {\n      analytics.sendEvent(self._client, \"applepay.tokenize.succeeded\");\n\n      return Promise.resolve(response.applePayCards[0]);\n    })\n    .catch(function (err) {\n      analytics.sendEvent(self._client, \"applepay.tokenize.failed\");\n\n      return Promise.reject(\n        new BraintreeError({\n          type: errors.APPLE_PAY_TOKENIZATION.type,\n          code: errors.APPLE_PAY_TOKENIZATION.code,\n          message: errors.APPLE_PAY_TOKENIZATION.message,\n          details: {\n            originalError: err,\n          },\n        })\n      );\n    });\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/apple-pay.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * applePayInstance.teardown();\n * @example <caption>With callback</caption>\n * applePayInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nApplePay.prototype.teardown = function () {\n  convertMethodsToError(this, methods(ApplePay.prototype));\n\n  return Promise.resolve();\n};\n\nmodule.exports = wrapPromise.wrapPrototype(ApplePay);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/apple-pay/apple-pay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/apple-pay/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/braintree-web/apple-pay/errors.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.Apple Pay - Creation Error Codes\n * @description Errors that occur when [creating the Apple Pay component](./module-braintree-web_apple-pay.html#.create).\n * @property {MERCHANT} APPLE_PAY_NOT_ENABLED Occurs when the authorization used is not authorized to process Apple Pay.\n */\n\n/**\n * @name BraintreeError.Apple Pay - performValidation Error Codes\n * @description Errors that occur when [validating](./ApplePay.html#performValidation).\n * @property {MERCHANT} APPLE_PAY_VALIDATION_URL_REQUIRED Occurs when the `validationURL` option is not passed in.\n * @property {MERCHANT} APPLE_PAY_MERCHANT_VALIDATION_FAILED Occurs when the website domain has not been registered in the Braintree control panel.\n * @property {NETWORK} APPLE_PAY_MERCHANT_VALIDATION_NETWORK Occurs when an unknown network error occurs.\n */\n\n/**\n * @name BraintreeError.Apple Pay - tokenize Error Codes\n * @description Errors that occur when [tokenizing](./ApplePay.html#tokenize).\n * @property {MERCHANT} APPLE_PAY_PAYMENT_TOKEN_REQUIRED Occurs when the `token` option is not passed in.\n * @property {NETWORK} APPLE_PAY_TOKENIZATION Occurs when an unknown network error occurs.\n */\n\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  APPLE_PAY_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"APPLE_PAY_NOT_ENABLED\",\n    message: \"Apple Pay is not enabled for this merchant.\",\n  },\n  APPLE_PAY_VALIDATION_URL_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"APPLE_PAY_VALIDATION_URL_REQUIRED\",\n    message: \"performValidation must be called with a validationURL.\",\n  },\n  APPLE_PAY_MERCHANT_VALIDATION_NETWORK: {\n    type: BraintreeError.types.NETWORK,\n    code: \"APPLE_PAY_MERCHANT_VALIDATION_NETWORK\",\n    message: \"A network error occurred when validating the Apple Pay merchant.\",\n  },\n  APPLE_PAY_MERCHANT_VALIDATION_FAILED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"APPLE_PAY_MERCHANT_VALIDATION_FAILED\",\n    message:\n      \"Make sure you have registered your domain name in the Braintree Control Panel.\",\n  },\n  APPLE_PAY_PAYMENT_TOKEN_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"APPLE_PAY_PAYMENT_TOKEN_REQUIRED\",\n    message: \"tokenize must be called with a payment token.\",\n  },\n  APPLE_PAY_TOKENIZATION: {\n    type: BraintreeError.types.NETWORK,\n    code: \"APPLE_PAY_TOKENIZATION\",\n    message: \"A network error occurred when processing the Apple Pay payment.\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9hcHBsZS1wYXkvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLGNBQWMsVUFBVTtBQUN4Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFVBQVU7QUFDeEIsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsU0FBUztBQUN2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFVBQVU7QUFDeEIsY0FBYyxTQUFTO0FBQ3ZCOztBQUVBLHFCQUFxQixtQkFBTyxDQUFDLHlGQUF3Qjs7QUFFckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2FwcGxlLXBheS9lcnJvcnMuanM/MGFiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAbmFtZSBCcmFpbnRyZWVFcnJvci5BcHBsZSBQYXkgLSBDcmVhdGlvbiBFcnJvciBDb2Rlc1xuICogQGRlc2NyaXB0aW9uIEVycm9ycyB0aGF0IG9jY3VyIHdoZW4gW2NyZWF0aW5nIHRoZSBBcHBsZSBQYXkgY29tcG9uZW50XSguL21vZHVsZS1icmFpbnRyZWUtd2ViX2FwcGxlLXBheS5odG1sIy5jcmVhdGUpLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gQVBQTEVfUEFZX05PVF9FTkFCTEVEIE9jY3VycyB3aGVuIHRoZSBhdXRob3JpemF0aW9uIHVzZWQgaXMgbm90IGF1dGhvcml6ZWQgdG8gcHJvY2VzcyBBcHBsZSBQYXkuXG4gKi9cblxuLyoqXG4gKiBAbmFtZSBCcmFpbnRyZWVFcnJvci5BcHBsZSBQYXkgLSBwZXJmb3JtVmFsaWRhdGlvbiBFcnJvciBDb2Rlc1xuICogQGRlc2NyaXB0aW9uIEVycm9ycyB0aGF0IG9jY3VyIHdoZW4gW3ZhbGlkYXRpbmddKC4vQXBwbGVQYXkuaHRtbCNwZXJmb3JtVmFsaWRhdGlvbikuXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBBUFBMRV9QQVlfVkFMSURBVElPTl9VUkxfUkVRVUlSRUQgT2NjdXJzIHdoZW4gdGhlIGB2YWxpZGF0aW9uVVJMYCBvcHRpb24gaXMgbm90IHBhc3NlZCBpbi5cbiAqIEBwcm9wZXJ0eSB7TUVSQ0hBTlR9IEFQUExFX1BBWV9NRVJDSEFOVF9WQUxJREFUSU9OX0ZBSUxFRCBPY2N1cnMgd2hlbiB0aGUgd2Vic2l0ZSBkb21haW4gaGFzIG5vdCBiZWVuIHJlZ2lzdGVyZWQgaW4gdGhlIEJyYWludHJlZSBjb250cm9sIHBhbmVsLlxuICogQHByb3BlcnR5IHtORVRXT1JLfSBBUFBMRV9QQVlfTUVSQ0hBTlRfVkFMSURBVElPTl9ORVRXT1JLIE9jY3VycyB3aGVuIGFuIHVua25vd24gbmV0d29yayBlcnJvciBvY2N1cnMuXG4gKi9cblxuLyoqXG4gKiBAbmFtZSBCcmFpbnRyZWVFcnJvci5BcHBsZSBQYXkgLSB0b2tlbml6ZSBFcnJvciBDb2Rlc1xuICogQGRlc2NyaXB0aW9uIEVycm9ycyB0aGF0IG9jY3VyIHdoZW4gW3Rva2VuaXppbmddKC4vQXBwbGVQYXkuaHRtbCN0b2tlbml6ZSkuXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBBUFBMRV9QQVlfUEFZTUVOVF9UT0tFTl9SRVFVSVJFRCBPY2N1cnMgd2hlbiB0aGUgYHRva2VuYCBvcHRpb24gaXMgbm90IHBhc3NlZCBpbi5cbiAqIEBwcm9wZXJ0eSB7TkVUV09SS30gQVBQTEVfUEFZX1RPS0VOSVpBVElPTiBPY2N1cnMgd2hlbiBhbiB1bmtub3duIG5ldHdvcmsgZXJyb3Igb2NjdXJzLlxuICovXG5cbnZhciBCcmFpbnRyZWVFcnJvciA9IHJlcXVpcmUoXCIuLi9saWIvYnJhaW50cmVlLWVycm9yXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQVBQTEVfUEFZX05PVF9FTkFCTEVEOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJBUFBMRV9QQVlfTk9UX0VOQUJMRURcIixcbiAgICBtZXNzYWdlOiBcIkFwcGxlIFBheSBpcyBub3QgZW5hYmxlZCBmb3IgdGhpcyBtZXJjaGFudC5cIixcbiAgfSxcbiAgQVBQTEVfUEFZX1ZBTElEQVRJT05fVVJMX1JFUVVJUkVEOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJBUFBMRV9QQVlfVkFMSURBVElPTl9VUkxfUkVRVUlSRURcIixcbiAgICBtZXNzYWdlOiBcInBlcmZvcm1WYWxpZGF0aW9uIG11c3QgYmUgY2FsbGVkIHdpdGggYSB2YWxpZGF0aW9uVVJMLlwiLFxuICB9LFxuICBBUFBMRV9QQVlfTUVSQ0hBTlRfVkFMSURBVElPTl9ORVRXT1JLOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTkVUV09SSyxcbiAgICBjb2RlOiBcIkFQUExFX1BBWV9NRVJDSEFOVF9WQUxJREFUSU9OX05FVFdPUktcIixcbiAgICBtZXNzYWdlOiBcIkEgbmV0d29yayBlcnJvciBvY2N1cnJlZCB3aGVuIHZhbGlkYXRpbmcgdGhlIEFwcGxlIFBheSBtZXJjaGFudC5cIixcbiAgfSxcbiAgQVBQTEVfUEFZX01FUkNIQU5UX1ZBTElEQVRJT05fRkFJTEVEOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJBUFBMRV9QQVlfTUVSQ0hBTlRfVkFMSURBVElPTl9GQUlMRURcIixcbiAgICBtZXNzYWdlOlxuICAgICAgXCJNYWtlIHN1cmUgeW91IGhhdmUgcmVnaXN0ZXJlZCB5b3VyIGRvbWFpbiBuYW1lIGluIHRoZSBCcmFpbnRyZWUgQ29udHJvbCBQYW5lbC5cIixcbiAgfSxcbiAgQVBQTEVfUEFZX1BBWU1FTlRfVE9LRU5fUkVRVUlSRUQ6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5NRVJDSEFOVCxcbiAgICBjb2RlOiBcIkFQUExFX1BBWV9QQVlNRU5UX1RPS0VOX1JFUVVJUkVEXCIsXG4gICAgbWVzc2FnZTogXCJ0b2tlbml6ZSBtdXN0IGJlIGNhbGxlZCB3aXRoIGEgcGF5bWVudCB0b2tlbi5cIixcbiAgfSxcbiAgQVBQTEVfUEFZX1RPS0VOSVpBVElPTjoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk5FVFdPUkssXG4gICAgY29kZTogXCJBUFBMRV9QQVlfVE9LRU5JWkFUSU9OXCIsXG4gICAgbWVzc2FnZTogXCJBIG5ldHdvcmsgZXJyb3Igb2NjdXJyZWQgd2hlbiBwcm9jZXNzaW5nIHRoZSBBcHBsZSBQYXkgcGF5bWVudC5cIixcbiAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/apple-pay/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/apple-pay/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/braintree-web/apple-pay/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @module braintree-web/apple-pay\n * @description Accept Apple Pay on the Web. *This component is currently in beta and is subject to change.*\n */\n\nvar ApplePay = __webpack_require__(/*! ./apple-pay */ \"(ssr)/./node_modules/braintree-web/apple-pay/apple-pay.js\");\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar basicComponentVerification = __webpack_require__(/*! ../lib/basic-component-verification */ \"(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js\");\nvar createAssetsUrl = __webpack_require__(/*! ../lib/create-assets-url */ \"(ssr)/./node_modules/braintree-web/lib/create-assets-url.js\");\nvar createDeferredClient = __webpack_require__(/*! ../lib/create-deferred-client */ \"(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/apple-pay/errors.js\");\nvar VERSION = \"3.99.0\";\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {boolean} [options.useDeferredClient] Used in conjunction with `authorization`, allows the Apple Pay instance to be available right away by fetching the client configuration in the background. When this option is used, {@link ApplePay#createPaymentRequest} will return a promise that resolves with the configuration instead of returning synchronously.\n * @param {callback} [callback] The second argument, `data`, is the {@link ApplePay} instance. If no callback is provided, `create` returns a promise that resolves with the {@link ApplePay} instance.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nfunction create(options) {\n  var name = \"Apple Pay\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var applePayInstance;\n      var createPromise = createDeferredClient\n        .create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: createAssetsUrl.create(options.authorization),\n          name: name,\n        })\n        .then(function (client) {\n          if (!client.getConfiguration().gatewayConfiguration.applePayWeb) {\n            return Promise.reject(\n              new BraintreeError(errors.APPLE_PAY_NOT_ENABLED)\n            );\n          }\n\n          analytics.sendEvent(client, \"applepay.initialized\");\n\n          return client;\n        });\n\n      options.createPromise = createPromise;\n      applePayInstance = new ApplePay(options);\n\n      if (!options.useDeferredClient) {\n        return createPromise.then(function (client) {\n          applePayInstance._client = client;\n\n          return applePayInstance;\n        });\n      }\n\n      return applePayInstance;\n    });\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `{@pkg version}`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9hcHBsZS1wYXkvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZUFBZSxtQkFBTyxDQUFDLDhFQUFhO0FBQ3BDLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFrQjtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyx5RkFBd0I7QUFDckQsaUNBQWlDLG1CQUFPLENBQUMsbUhBQXFDO0FBQzlFLHNCQUFzQixtQkFBTyxDQUFDLDZGQUEwQjtBQUN4RCwyQkFBMkIsbUJBQU8sQ0FBQyx1R0FBK0I7QUFDbEUsYUFBYSxtQkFBTyxDQUFDLHdFQUFVO0FBQy9CO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsa0dBQXlCOztBQUVuRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRLG9CQUFvQixjQUFjO0FBQ3JELFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVMsa05BQWtOLHFDQUFxQztBQUMzUSxXQUFXLFVBQVUsZ0RBQWdELGdCQUFnQix5RkFBeUYsZ0JBQWdCO0FBQzlMLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxTQUFTOztBQUVUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxhQUFhO0FBQ3RFLFlBQVk7QUFDWjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvYXBwbGUtcGF5L2luZGV4LmpzPzJmYWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQG1vZHVsZSBicmFpbnRyZWUtd2ViL2FwcGxlLXBheVxuICogQGRlc2NyaXB0aW9uIEFjY2VwdCBBcHBsZSBQYXkgb24gdGhlIFdlYi4gKlRoaXMgY29tcG9uZW50IGlzIGN1cnJlbnRseSBpbiBiZXRhIGFuZCBpcyBzdWJqZWN0IHRvIGNoYW5nZS4qXG4gKi9cblxudmFyIEFwcGxlUGF5ID0gcmVxdWlyZShcIi4vYXBwbGUtcGF5XCIpO1xudmFyIGFuYWx5dGljcyA9IHJlcXVpcmUoXCIuLi9saWIvYW5hbHl0aWNzXCIpO1xudmFyIEJyYWludHJlZUVycm9yID0gcmVxdWlyZShcIi4uL2xpYi9icmFpbnRyZWUtZXJyb3JcIik7XG52YXIgYmFzaWNDb21wb25lbnRWZXJpZmljYXRpb24gPSByZXF1aXJlKFwiLi4vbGliL2Jhc2ljLWNvbXBvbmVudC12ZXJpZmljYXRpb25cIik7XG52YXIgY3JlYXRlQXNzZXRzVXJsID0gcmVxdWlyZShcIi4uL2xpYi9jcmVhdGUtYXNzZXRzLXVybFwiKTtcbnZhciBjcmVhdGVEZWZlcnJlZENsaWVudCA9IHJlcXVpcmUoXCIuLi9saWIvY3JlYXRlLWRlZmVycmVkLWNsaWVudFwiKTtcbnZhciBlcnJvcnMgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG52YXIgVkVSU0lPTiA9IFwiMy45OS4wXCI7XG52YXIgd3JhcFByb21pc2UgPSByZXF1aXJlKFwiQGJyYWludHJlZS93cmFwLXByb21pc2VcIik7XG5cbi8qKlxuICogQHN0YXRpY1xuICogQGZ1bmN0aW9uIGNyZWF0ZVxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMgQ3JlYXRpb24gb3B0aW9uczpcbiAqIEBwYXJhbSB7Q2xpZW50fSBbb3B0aW9ucy5jbGllbnRdIEEge0BsaW5rIENsaWVudH0gaW5zdGFuY2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMuYXV0aG9yaXphdGlvbl0gQSB0b2tlbml6YXRpb25LZXkgb3IgY2xpZW50VG9rZW4uIENhbiBiZSB1c2VkIGluIHBsYWNlIG9mIGBvcHRpb25zLmNsaWVudGAuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnVzZURlZmVycmVkQ2xpZW50XSBVc2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYGF1dGhvcml6YXRpb25gLCBhbGxvd3MgdGhlIEFwcGxlIFBheSBpbnN0YW5jZSB0byBiZSBhdmFpbGFibGUgcmlnaHQgYXdheSBieSBmZXRjaGluZyB0aGUgY2xpZW50IGNvbmZpZ3VyYXRpb24gaW4gdGhlIGJhY2tncm91bmQuIFdoZW4gdGhpcyBvcHRpb24gaXMgdXNlZCwge0BsaW5rIEFwcGxlUGF5I2NyZWF0ZVBheW1lbnRSZXF1ZXN0fSB3aWxsIHJldHVybiBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBjb25maWd1cmF0aW9uIGluc3RlYWQgb2YgcmV0dXJuaW5nIHN5bmNocm9ub3VzbHkuXG4gKiBAcGFyYW0ge2NhbGxiYWNrfSBbY2FsbGJhY2tdIFRoZSBzZWNvbmQgYXJndW1lbnQsIGBkYXRhYCwgaXMgdGhlIHtAbGluayBBcHBsZVBheX0gaW5zdGFuY2UuIElmIG5vIGNhbGxiYWNrIGlzIHByb3ZpZGVkLCBgY3JlYXRlYCByZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHtAbGluayBBcHBsZVBheX0gaW5zdGFuY2UuXG4gKiBAcmV0dXJucyB7KFByb21pc2V8dm9pZCl9IFJldHVybnMgYSBwcm9taXNlIGlmIG5vIGNhbGxiYWNrIGlzIHByb3ZpZGVkLlxuICovXG5mdW5jdGlvbiBjcmVhdGUob3B0aW9ucykge1xuICB2YXIgbmFtZSA9IFwiQXBwbGUgUGF5XCI7XG5cbiAgcmV0dXJuIGJhc2ljQ29tcG9uZW50VmVyaWZpY2F0aW9uXG4gICAgLnZlcmlmeSh7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgY2xpZW50OiBvcHRpb25zLmNsaWVudCxcbiAgICAgIGF1dGhvcml6YXRpb246IG9wdGlvbnMuYXV0aG9yaXphdGlvbixcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBhcHBsZVBheUluc3RhbmNlO1xuICAgICAgdmFyIGNyZWF0ZVByb21pc2UgPSBjcmVhdGVEZWZlcnJlZENsaWVudFxuICAgICAgICAuY3JlYXRlKHtcbiAgICAgICAgICBhdXRob3JpemF0aW9uOiBvcHRpb25zLmF1dGhvcml6YXRpb24sXG4gICAgICAgICAgY2xpZW50OiBvcHRpb25zLmNsaWVudCxcbiAgICAgICAgICBkZWJ1Zzogb3B0aW9ucy5kZWJ1ZyxcbiAgICAgICAgICBhc3NldHNVcmw6IGNyZWF0ZUFzc2V0c1VybC5jcmVhdGUob3B0aW9ucy5hdXRob3JpemF0aW9uKSxcbiAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICB9KVxuICAgICAgICAudGhlbihmdW5jdGlvbiAoY2xpZW50KSB7XG4gICAgICAgICAgaWYgKCFjbGllbnQuZ2V0Q29uZmlndXJhdGlvbigpLmdhdGV3YXlDb25maWd1cmF0aW9uLmFwcGxlUGF5V2ViKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoXG4gICAgICAgICAgICAgIG5ldyBCcmFpbnRyZWVFcnJvcihlcnJvcnMuQVBQTEVfUEFZX05PVF9FTkFCTEVEKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBhbmFseXRpY3Muc2VuZEV2ZW50KGNsaWVudCwgXCJhcHBsZXBheS5pbml0aWFsaXplZFwiKTtcblxuICAgICAgICAgIHJldHVybiBjbGllbnQ7XG4gICAgICAgIH0pO1xuXG4gICAgICBvcHRpb25zLmNyZWF0ZVByb21pc2UgPSBjcmVhdGVQcm9taXNlO1xuICAgICAgYXBwbGVQYXlJbnN0YW5jZSA9IG5ldyBBcHBsZVBheShvcHRpb25zKTtcblxuICAgICAgaWYgKCFvcHRpb25zLnVzZURlZmVycmVkQ2xpZW50KSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVQcm9taXNlLnRoZW4oZnVuY3Rpb24gKGNsaWVudCkge1xuICAgICAgICAgIGFwcGxlUGF5SW5zdGFuY2UuX2NsaWVudCA9IGNsaWVudDtcblxuICAgICAgICAgIHJldHVybiBhcHBsZVBheUluc3RhbmNlO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFwcGxlUGF5SW5zdGFuY2U7XG4gICAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjcmVhdGU6IHdyYXBQcm9taXNlKGNyZWF0ZSksXG4gIC8qKlxuICAgKiBAZGVzY3JpcHRpb24gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiB0aGUgU0RLLCBpLmUuIGB7QHBrZyB2ZXJzaW9ufWAuXG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqL1xuICBWRVJTSU9OOiBWRVJTSU9OLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/apple-pay/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/client.js":
/*!*****************************************************!*\
  !*** ./node_modules/braintree-web/client/client.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BRAINTREE_VERSION = (__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/braintree-web/client/constants.js\").BRAINTREE_VERSION);\n\nvar GraphQL = __webpack_require__(/*! ./request/graphql */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/index.js\");\nvar request = __webpack_require__(/*! ./request */ \"(ssr)/./node_modules/braintree-web/client/request/index.js\");\nvar isVerifiedDomain = __webpack_require__(/*! ../lib/is-verified-domain */ \"(ssr)/./node_modules/braintree-web/lib/is-verified-domain.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar convertToBraintreeError = __webpack_require__(/*! ../lib/convert-to-braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-to-braintree-error.js\");\nvar getGatewayConfiguration = (__webpack_require__(/*! ./get-configuration */ \"(ssr)/./node_modules/braintree-web/client/get-configuration.js\").getConfiguration);\nvar createAuthorizationData = __webpack_require__(/*! ../lib/create-authorization-data */ \"(ssr)/./node_modules/braintree-web/lib/create-authorization-data.js\");\nvar addMetadata = __webpack_require__(/*! ../lib/add-metadata */ \"(ssr)/./node_modules/braintree-web/lib/add-metadata.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar once = __webpack_require__(/*! ../lib/once */ \"(ssr)/./node_modules/braintree-web/lib/once.js\");\nvar deferred = __webpack_require__(/*! ../lib/deferred */ \"(ssr)/./node_modules/braintree-web/lib/deferred.js\");\nvar assign = (__webpack_require__(/*! ../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/client/errors.js\");\nvar VERSION = (__webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").VERSION);\nvar GRAPHQL_URLS = (__webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").GRAPHQL_URLS);\nvar methods = __webpack_require__(/*! ../lib/methods */ \"(ssr)/./node_modules/braintree-web/lib/methods.js\");\nvar convertMethodsToError = __webpack_require__(/*! ../lib/convert-methods-to-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\");\nvar assets = __webpack_require__(/*! ../lib/assets */ \"(ssr)/./node_modules/braintree-web/lib/assets.js\");\nvar FRAUDNET_FNCLS = (__webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").FRAUDNET_FNCLS);\nvar FRAUDNET_SOURCE = (__webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").FRAUDNET_SOURCE);\nvar FRAUDNET_URL = (__webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").FRAUDNET_URL);\n\nvar cachedClients = {};\n\n/**\n * This object is returned by {@link Client#getConfiguration|getConfiguration}. This information is used extensively by other Braintree modules to properly configure themselves.\n * @typedef {object} Client~configuration\n * @property {object} client The braintree-web/client parameters.\n * @property {string} client.authorization A tokenizationKey or clientToken.\n * @property {object} gatewayConfiguration Gateway-supplied configuration.\n * @property {object} analyticsMetadata Analytics-specific data.\n * @property {string} analyticsMetadata.sessionId Uniquely identifies a browsing session.\n * @property {string} analyticsMetadata.sdkVersion The braintree.js version.\n * @property {string} analyticsMetadata.merchantAppId Identifies the merchant's web app.\n */\n\n/**\n * @class\n * @param {Client~configuration} configuration Options\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/client.create|braintree.client.create} instead.</strong>\n * @classdesc This class is required by many other Braintree components. It serves as the base API layer that communicates with our servers. It is also capable of being used to formulate direct calls to our servers, such as direct credit card tokenization. See {@link Client#request}.\n */\nfunction Client(configuration) {\n  var configurationJSON, gatewayConfiguration;\n\n  configuration = configuration || {};\n\n  configurationJSON = JSON.stringify(configuration);\n  gatewayConfiguration = configuration.gatewayConfiguration;\n\n  if (!gatewayConfiguration) {\n    throw new BraintreeError(errors.CLIENT_MISSING_GATEWAY_CONFIGURATION);\n  }\n\n  [\"assetsUrl\", \"clientApiUrl\", \"configUrl\"].forEach(function (property) {\n    if (\n      property in gatewayConfiguration &&\n      !isVerifiedDomain(gatewayConfiguration[property])\n    ) {\n      throw new BraintreeError({\n        type: errors.CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN.type,\n        code: errors.CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN.code,\n        message: property + \" property is on an invalid domain.\",\n      });\n    }\n  });\n\n  /**\n   * Returns a copy of the configuration values.\n   * @public\n   * @returns {Client~configuration} configuration\n   */\n  this.getConfiguration = function () {\n    return JSON.parse(configurationJSON);\n  };\n\n  this._request = request;\n  this._configuration = this.getConfiguration();\n\n  this._clientApiBaseUrl = gatewayConfiguration.clientApiUrl + \"/v1/\";\n\n  if (gatewayConfiguration.graphQL) {\n    if (!isVerifiedDomain(gatewayConfiguration.graphQL.url)) {\n      throw new BraintreeError({\n        type: errors.CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN.type,\n        code: errors.CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN.code,\n        message: \"graphQL.url property is on an invalid domain.\",\n      });\n    }\n\n    this._graphQL = new GraphQL({\n      graphQL: gatewayConfiguration.graphQL,\n    });\n  }\n}\n\nClient.initialize = function (options) {\n  var clientInstance, authData;\n  var promise = cachedClients[options.authorization];\n\n  if (promise) {\n    analytics.sendEvent(promise, \"custom.client.load.cached\");\n\n    return promise;\n  }\n\n  try {\n    authData = createAuthorizationData(options.authorization);\n  } catch (err) {\n    return Promise.reject(\n      new BraintreeError(errors.CLIENT_INVALID_AUTHORIZATION)\n    );\n  }\n\n  promise = getGatewayConfiguration(authData).then(function (configuration) {\n    if (options.debug) {\n      configuration.isDebug = true;\n    }\n\n    configuration.authorization = options.authorization;\n\n    clientInstance = new Client(configuration);\n\n    return clientInstance;\n  });\n\n  cachedClients[options.authorization] = promise;\n\n  analytics.sendEvent(promise, \"custom.client.load.initialized\");\n\n  return promise\n    .then(function (client) {\n      analytics.sendEvent(clientInstance, \"custom.client.load.succeeded\");\n\n      return client;\n    })\n    .catch(function (err) {\n      delete cachedClients[options.authorization];\n\n      return Promise.reject(err);\n    });\n};\n\n// Primarily used for testing the client initalization call\nClient.clearCache = function () {\n  cachedClients = {};\n};\n\nClient.prototype._findOrCreateFraudnetJSON = function (clientMetadataId) {\n  var el = document.querySelector('script[fncls=\"' + FRAUDNET_FNCLS + '\"]');\n  var config, additionalData, authorizationFingerprint, parameters;\n\n  if (!el) {\n    el = document.body.appendChild(document.createElement(\"script\"));\n    el.type = \"application/json\";\n    el.setAttribute(\"fncls\", FRAUDNET_FNCLS);\n  }\n\n  config = this.getConfiguration();\n  additionalData = {\n    rda_tenant: \"bt_card\", // eslint-disable-line camelcase\n    mid: config.gatewayConfiguration.merchantId,\n  };\n  authorizationFingerprint = config.authorizationFingerprint;\n\n  if (authorizationFingerprint) {\n    authorizationFingerprint.split(\"&\").forEach(function (pieces) {\n      var component = pieces.split(\"=\");\n\n      if (component[0] === \"customer_id\" && component.length > 1) {\n        additionalData.cid = component[1];\n      }\n    });\n  }\n\n  parameters = {\n    f: clientMetadataId.substr(0, 32),\n    fp: additionalData,\n    bu: false,\n    s: FRAUDNET_SOURCE,\n  };\n  el.text = JSON.stringify(parameters);\n};\n\n/**\n * Used by other modules to formulate all network requests to the Braintree gateway. It is also capable of being used directly from your own form to tokenize credit card information. However, be sure to satisfy PCI compliance if you use direct card tokenization.\n * @public\n * @param {object} options Request options:\n * @param {string} options.method HTTP method, e.g. \"get\" or \"post\".\n * @param {string} options.endpoint Endpoint path, e.g. \"payment_methods\".\n * @param {object} options.data Data to send with the request.\n * @param {number} [options.timeout=60000] Set a timeout (in milliseconds) for the request.\n * @param {callback} [callback] The second argument, <code>data</code>, is the returned server data.\n * @example\n * <caption>Direct Credit Card Tokenization</caption>\n * var createClient = require('braintree-web/client').create;\n *\n * createClient({\n *   authorization: CLIENT_AUTHORIZATION\n * }, function (createErr, clientInstance) {\n *   var form = document.getElementById('my-form-id');\n *   var data = {\n *     creditCard: {\n *       number: form['cc-number'].value,\n *       cvv: form['cc-cvv'].value,\n *       expirationDate: form['cc-expiration-date'].value,\n *       billingAddress: {\n *         postalCode: form['cc-postal-code'].value\n *       },\n *       options: {\n *         validate: false\n *       }\n *     }\n *   };\n *\n *   // Warning: For a merchant to be eligible for the easiest level of PCI compliance (SAQ A),\n *   // payment fields cannot be hosted on your checkout page.\n *   // For an alternative to the following, use Hosted Fields.\n *   clientInstance.request({\n *     endpoint: 'payment_methods/credit_cards',\n *     method: 'post',\n *     data: data\n *   }, function (requestErr, response) {\n *     // More detailed example of handling API errors: https://codepen.io/braintree/pen/MbwjdM\n *     if (requestErr) { throw new Error(requestErr); }\n *\n *     console.log('Got nonce:', response.creditCards[0].nonce);\n *   });\n * });\n * @example\n * <caption>Tokenizing Fields for AVS Checks</caption>\n * var createClient = require('braintree-web/client').create;\n *\n * createClient({\n *   authorization: CLIENT_AUTHORIZATION\n * }, function (createErr, clientInstance) {\n *   var form = document.getElementById('my-form-id');\n *   var data = {\n *     creditCard: {\n *       number: form['cc-number'].value,\n *       cvv: form['cc-cvv'].value,\n *       expirationDate: form['cc-date'].value,\n *       // The billing address can be checked with AVS rules.\n *       // See: https://articles.braintreepayments.com/support/guides/fraud-tools/basic/avs-cvv-rules\n *       billingAddress: {\n *         postalCode: form['cc-postal-code'].value,\n *         streetAddress: form['cc-street-address'].value,\n *         countryName: form['cc-country-name'].value,\n *         countryCodeAlpha2: form['cc-country-alpha2'].value,\n *         countryCodeAlpha3: form['cc-country-alpha3'].value,\n *         countryCodeNumeric: form['cc-country-numeric'].value\n *       },\n *       options: {\n *         validate: false\n *       }\n *     }\n *   };\n *\n *   // Warning: For a merchant to be eligible for the easiest level of PCI compliance (SAQ A),\n *   // payment fields cannot be hosted on your checkout page.\n *   // For an alternative to the following, use Hosted Fields.\n *   clientInstance.request({\n *     endpoint: 'payment_methods/credit_cards',\n *     method: 'post',\n *     data: data\n *   }, function (requestErr, response) {\n *     // More detailed example of handling API errors: https://codepen.io/braintree/pen/MbwjdM\n *     if (requestErr) { throw new Error(requestErr); }\n *\n *     console.log('Got nonce:', response.creditCards[0].nonce);\n *   });\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nClient.prototype.request = function (options, callback) {\n  var self = this; // eslint-disable-line no-invalid-this\n  var requestPromise = new Promise(function (resolve, reject) {\n    var optionName, api, baseUrl, requestOptions;\n    var shouldCollectData = Boolean(\n      options.endpoint === \"payment_methods/credit_cards\" &&\n        self.getConfiguration().gatewayConfiguration.creditCards\n          .collectDeviceData\n    );\n\n    if (options.api !== \"graphQLApi\") {\n      if (!options.method) {\n        optionName = \"options.method\";\n      } else if (!options.endpoint) {\n        optionName = \"options.endpoint\";\n      }\n    }\n\n    if (optionName) {\n      throw new BraintreeError({\n        type: errors.CLIENT_OPTION_REQUIRED.type,\n        code: errors.CLIENT_OPTION_REQUIRED.code,\n        message: optionName + \" is required when making a request.\",\n      });\n    }\n\n    if (\"api\" in options) {\n      api = options.api;\n    } else {\n      api = \"clientApi\";\n    }\n\n    requestOptions = {\n      method: options.method,\n      graphQL: self._graphQL,\n      timeout: options.timeout,\n      metadata: self._configuration.analyticsMetadata,\n    };\n\n    if (api === \"clientApi\") {\n      baseUrl = self._clientApiBaseUrl;\n\n      requestOptions.data = addMetadata(self._configuration, options.data);\n    } else if (api === \"graphQLApi\") {\n      baseUrl =\n        GRAPHQL_URLS[self._configuration.gatewayConfiguration.environment];\n      options.endpoint = \"\";\n      requestOptions.method = \"post\";\n      requestOptions.data = assign(\n        {\n          clientSdkMetadata: {\n            platform: self._configuration.analyticsMetadata.platform,\n            source: self._configuration.analyticsMetadata.source,\n            integration: self._configuration.analyticsMetadata.integration,\n            sessionId: self._configuration.analyticsMetadata.sessionId,\n            version: VERSION,\n          },\n        },\n        options.data\n      );\n\n      requestOptions.headers = getAuthorizationHeadersForGraphQL(\n        self._configuration\n      );\n    } else {\n      throw new BraintreeError({\n        type: errors.CLIENT_OPTION_INVALID.type,\n        code: errors.CLIENT_OPTION_INVALID.code,\n        message: \"options.api is invalid.\",\n      });\n    }\n\n    requestOptions.url = baseUrl + options.endpoint;\n    requestOptions.sendAnalyticsEvent = function (kind) {\n      analytics.sendEvent(self, kind);\n    };\n\n    self._request(requestOptions, function (err, data, status) {\n      var resolvedData, requestError;\n\n      requestError = formatRequestError(status, err);\n\n      if (requestError) {\n        reject(requestError);\n\n        return;\n      }\n\n      if (api === \"graphQLApi\" && data.errors) {\n        reject(\n          convertToBraintreeError(data.errors, {\n            type: errors.CLIENT_GRAPHQL_REQUEST_ERROR.type,\n            code: errors.CLIENT_GRAPHQL_REQUEST_ERROR.code,\n            message: errors.CLIENT_GRAPHQL_REQUEST_ERROR.message,\n          })\n        );\n\n        return;\n      }\n\n      resolvedData = assign({ _httpStatus: status }, data);\n\n      if (\n        shouldCollectData &&\n        resolvedData.creditCards &&\n        resolvedData.creditCards.length > 0\n      ) {\n        self._findOrCreateFraudnetJSON(resolvedData.creditCards[0].nonce);\n\n        assets.loadScript({\n          src: FRAUDNET_URL,\n          forceScriptReload: true,\n        });\n      }\n      resolve(resolvedData);\n    });\n  });\n\n  if (typeof callback === \"function\") {\n    callback = once(deferred(callback));\n\n    requestPromise\n      .then(function (response) {\n        callback(null, response, response._httpStatus);\n      })\n      .catch(function (err) {\n        var status = err && err.details && err.details.httpStatus;\n\n        callback(err, null, status);\n      });\n\n    return;\n  }\n\n  return requestPromise; // eslint-disable-line consistent-return\n};\n\n// eslint-disable-next-line consistent-return\nfunction formatRequestError(status, err) {\n  var requestError;\n\n  if (status === -1) {\n    requestError = new BraintreeError(errors.CLIENT_REQUEST_TIMEOUT);\n  } else if (status === 401) {\n    requestError = new BraintreeError(errors.CLIENT_AUTHORIZATION_INVALID);\n  } else if (status === 403) {\n    requestError = new BraintreeError(errors.CLIENT_AUTHORIZATION_INSUFFICIENT);\n  } else if (status === 429) {\n    requestError = new BraintreeError(errors.CLIENT_RATE_LIMITED);\n  } else if (status >= 500) {\n    requestError = new BraintreeError(errors.CLIENT_GATEWAY_NETWORK);\n  } else if (status < 200 || status >= 400) {\n    requestError = convertToBraintreeError(err, {\n      type: errors.CLIENT_REQUEST_ERROR.type,\n      code: errors.CLIENT_REQUEST_ERROR.code,\n      message: errors.CLIENT_REQUEST_ERROR.message,\n    });\n  }\n\n  if (requestError) {\n    requestError.details = requestError.details || {};\n    requestError.details.httpStatus = status;\n\n    return requestError;\n  }\n}\n\nClient.prototype.toJSON = function () {\n  return this.getConfiguration();\n};\n\n/**\n * Returns the Client version.\n * @public\n * @returns {String} The created client's version.\n * @example\n * var createClient = require('braintree-web/client').create;\n *\n * createClient({\n *   authorization: CLIENT_AUTHORIZATION\n * }, function (createErr, clientInstance) {\n *   console.log(clientInstance.getVersion()); // Ex: 1.0.0\n * });\n * @returns {void}\n */\nClient.prototype.getVersion = function () {\n  return VERSION;\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/client.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * clientInstance.teardown();\n * @example <caption>With callback</caption>\n * clientInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nClient.prototype.teardown = wrapPromise(function () {\n  var self = this; // eslint-disable-line no-invalid-this\n\n  delete cachedClients[self.getConfiguration().authorization];\n  convertMethodsToError(self, methods(Client.prototype));\n\n  return Promise.resolve();\n});\n\nfunction getAuthorizationHeadersForGraphQL(configuration) {\n  var token =\n    configuration.authorizationFingerprint || configuration.authorization;\n\n  return {\n    Authorization: \"Bearer \" + token,\n    \"Braintree-Version\": BRAINTREE_VERSION,\n  };\n}\n\nmodule.exports = Client;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHdCQUF3QixvSEFBd0M7O0FBRWhFLGNBQWMsbUJBQU8sQ0FBQyw2RkFBbUI7QUFDekMsY0FBYyxtQkFBTyxDQUFDLDZFQUFXO0FBQ2pDLHVCQUF1QixtQkFBTyxDQUFDLCtGQUEyQjtBQUMxRCxxQkFBcUIsbUJBQU8sQ0FBQyx5RkFBd0I7QUFDckQsOEJBQThCLG1CQUFPLENBQUMsK0dBQW1DO0FBQ3pFLDhCQUE4QixtSUFBK0M7QUFDN0UsOEJBQThCLG1CQUFPLENBQUMsNkdBQWtDO0FBQ3hFLGtCQUFrQixtQkFBTyxDQUFDLG1GQUFxQjtBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQyxrR0FBeUI7QUFDbkQsV0FBVyxtQkFBTyxDQUFDLG1FQUFhO0FBQ2hDLGVBQWUsbUJBQU8sQ0FBQywyRUFBaUI7QUFDeEMsYUFBYSxxR0FBK0I7QUFDNUMsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQWtCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQyxxRUFBVTtBQUMvQixjQUFjLDRHQUFtQztBQUNqRCxtQkFBbUIsaUhBQXdDO0FBQzNELGNBQWMsbUJBQU8sQ0FBQyx5RUFBZ0I7QUFDdEMsNEJBQTRCLG1CQUFPLENBQUMsMkdBQWlDO0FBQ3JFLGFBQWEsbUJBQU8sQ0FBQyx1RUFBZTtBQUNwQyxxQkFBcUIsbUhBQTBDO0FBQy9ELHNCQUFzQixvSEFBMkM7QUFDakUsbUJBQW1CLGlIQUF3Qzs7QUFFM0Q7O0FBRUE7QUFDQSwrQkFBK0IsK0NBQStDO0FBQzlFLGFBQWEsUUFBUTtBQUNyQixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEI7O0FBRUE7QUFDQTtBQUNBLFdBQVcsc0JBQXNCO0FBQ2pDLG1FQUFtRSxrRUFBa0U7QUFDckksc1FBQXNRLHFCQUFxQjtBQUMzUjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNCQUFzQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxNQUFNO0FBQ04sSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLE1BQU07QUFDTixJQUFJO0FBQ0osYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7O0FBRUEsOEJBQThCLHFCQUFxQjs7QUFFbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLE9BQU87O0FBRVA7QUFDQTs7QUFFQSx5QkFBeUI7QUFDekI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osK0NBQStDO0FBQy9DLElBQUk7QUFDSixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5Q0FBeUMsZ0RBQWdEO0FBQ3pGO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBLG1CQUFtQjs7QUFFbkI7QUFDQTs7QUFFQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvY2xpZW50L2NsaWVudC5qcz8yNWQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQlJBSU5UUkVFX1ZFUlNJT04gPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIikuQlJBSU5UUkVFX1ZFUlNJT047XG5cbnZhciBHcmFwaFFMID0gcmVxdWlyZShcIi4vcmVxdWVzdC9ncmFwaHFsXCIpO1xudmFyIHJlcXVlc3QgPSByZXF1aXJlKFwiLi9yZXF1ZXN0XCIpO1xudmFyIGlzVmVyaWZpZWREb21haW4gPSByZXF1aXJlKFwiLi4vbGliL2lzLXZlcmlmaWVkLWRvbWFpblwiKTtcbnZhciBCcmFpbnRyZWVFcnJvciA9IHJlcXVpcmUoXCIuLi9saWIvYnJhaW50cmVlLWVycm9yXCIpO1xudmFyIGNvbnZlcnRUb0JyYWludHJlZUVycm9yID0gcmVxdWlyZShcIi4uL2xpYi9jb252ZXJ0LXRvLWJyYWludHJlZS1lcnJvclwiKTtcbnZhciBnZXRHYXRld2F5Q29uZmlndXJhdGlvbiA9IHJlcXVpcmUoXCIuL2dldC1jb25maWd1cmF0aW9uXCIpLmdldENvbmZpZ3VyYXRpb247XG52YXIgY3JlYXRlQXV0aG9yaXphdGlvbkRhdGEgPSByZXF1aXJlKFwiLi4vbGliL2NyZWF0ZS1hdXRob3JpemF0aW9uLWRhdGFcIik7XG52YXIgYWRkTWV0YWRhdGEgPSByZXF1aXJlKFwiLi4vbGliL2FkZC1tZXRhZGF0YVwiKTtcbnZhciB3cmFwUHJvbWlzZSA9IHJlcXVpcmUoXCJAYnJhaW50cmVlL3dyYXAtcHJvbWlzZVwiKTtcbnZhciBvbmNlID0gcmVxdWlyZShcIi4uL2xpYi9vbmNlXCIpO1xudmFyIGRlZmVycmVkID0gcmVxdWlyZShcIi4uL2xpYi9kZWZlcnJlZFwiKTtcbnZhciBhc3NpZ24gPSByZXF1aXJlKFwiLi4vbGliL2Fzc2lnblwiKS5hc3NpZ247XG52YXIgYW5hbHl0aWNzID0gcmVxdWlyZShcIi4uL2xpYi9hbmFseXRpY3NcIik7XG52YXIgZXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xudmFyIFZFUlNJT04gPSByZXF1aXJlKFwiLi4vbGliL2NvbnN0YW50c1wiKS5WRVJTSU9OO1xudmFyIEdSQVBIUUxfVVJMUyA9IHJlcXVpcmUoXCIuLi9saWIvY29uc3RhbnRzXCIpLkdSQVBIUUxfVVJMUztcbnZhciBtZXRob2RzID0gcmVxdWlyZShcIi4uL2xpYi9tZXRob2RzXCIpO1xudmFyIGNvbnZlcnRNZXRob2RzVG9FcnJvciA9IHJlcXVpcmUoXCIuLi9saWIvY29udmVydC1tZXRob2RzLXRvLWVycm9yXCIpO1xudmFyIGFzc2V0cyA9IHJlcXVpcmUoXCIuLi9saWIvYXNzZXRzXCIpO1xudmFyIEZSQVVETkVUX0ZOQ0xTID0gcmVxdWlyZShcIi4uL2xpYi9jb25zdGFudHNcIikuRlJBVURORVRfRk5DTFM7XG52YXIgRlJBVURORVRfU09VUkNFID0gcmVxdWlyZShcIi4uL2xpYi9jb25zdGFudHNcIikuRlJBVURORVRfU09VUkNFO1xudmFyIEZSQVVETkVUX1VSTCA9IHJlcXVpcmUoXCIuLi9saWIvY29uc3RhbnRzXCIpLkZSQVVETkVUX1VSTDtcblxudmFyIGNhY2hlZENsaWVudHMgPSB7fTtcblxuLyoqXG4gKiBUaGlzIG9iamVjdCBpcyByZXR1cm5lZCBieSB7QGxpbmsgQ2xpZW50I2dldENvbmZpZ3VyYXRpb258Z2V0Q29uZmlndXJhdGlvbn0uIFRoaXMgaW5mb3JtYXRpb24gaXMgdXNlZCBleHRlbnNpdmVseSBieSBvdGhlciBCcmFpbnRyZWUgbW9kdWxlcyB0byBwcm9wZXJseSBjb25maWd1cmUgdGhlbXNlbHZlcy5cbiAqIEB0eXBlZGVmIHtvYmplY3R9IENsaWVudH5jb25maWd1cmF0aW9uXG4gKiBAcHJvcGVydHkge29iamVjdH0gY2xpZW50IFRoZSBicmFpbnRyZWUtd2ViL2NsaWVudCBwYXJhbWV0ZXJzLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IGNsaWVudC5hdXRob3JpemF0aW9uIEEgdG9rZW5pemF0aW9uS2V5IG9yIGNsaWVudFRva2VuLlxuICogQHByb3BlcnR5IHtvYmplY3R9IGdhdGV3YXlDb25maWd1cmF0aW9uIEdhdGV3YXktc3VwcGxpZWQgY29uZmlndXJhdGlvbi5cbiAqIEBwcm9wZXJ0eSB7b2JqZWN0fSBhbmFseXRpY3NNZXRhZGF0YSBBbmFseXRpY3Mtc3BlY2lmaWMgZGF0YS5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBhbmFseXRpY3NNZXRhZGF0YS5zZXNzaW9uSWQgVW5pcXVlbHkgaWRlbnRpZmllcyBhIGJyb3dzaW5nIHNlc3Npb24uXG4gKiBAcHJvcGVydHkge3N0cmluZ30gYW5hbHl0aWNzTWV0YWRhdGEuc2RrVmVyc2lvbiBUaGUgYnJhaW50cmVlLmpzIHZlcnNpb24uXG4gKiBAcHJvcGVydHkge3N0cmluZ30gYW5hbHl0aWNzTWV0YWRhdGEubWVyY2hhbnRBcHBJZCBJZGVudGlmaWVzIHRoZSBtZXJjaGFudCdzIHdlYiBhcHAuXG4gKi9cblxuLyoqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7Q2xpZW50fmNvbmZpZ3VyYXRpb259IGNvbmZpZ3VyYXRpb24gT3B0aW9uc1xuICogQGRlc2NyaXB0aW9uIDxzdHJvbmc+RG8gbm90IHVzZSB0aGlzIGNvbnN0cnVjdG9yIGRpcmVjdGx5LiBVc2Uge0BsaW5rIG1vZHVsZTpicmFpbnRyZWUtd2ViL2NsaWVudC5jcmVhdGV8YnJhaW50cmVlLmNsaWVudC5jcmVhdGV9IGluc3RlYWQuPC9zdHJvbmc+XG4gKiBAY2xhc3NkZXNjIFRoaXMgY2xhc3MgaXMgcmVxdWlyZWQgYnkgbWFueSBvdGhlciBCcmFpbnRyZWUgY29tcG9uZW50cy4gSXQgc2VydmVzIGFzIHRoZSBiYXNlIEFQSSBsYXllciB0aGF0IGNvbW11bmljYXRlcyB3aXRoIG91ciBzZXJ2ZXJzLiBJdCBpcyBhbHNvIGNhcGFibGUgb2YgYmVpbmcgdXNlZCB0byBmb3JtdWxhdGUgZGlyZWN0IGNhbGxzIHRvIG91ciBzZXJ2ZXJzLCBzdWNoIGFzIGRpcmVjdCBjcmVkaXQgY2FyZCB0b2tlbml6YXRpb24uIFNlZSB7QGxpbmsgQ2xpZW50I3JlcXVlc3R9LlxuICovXG5mdW5jdGlvbiBDbGllbnQoY29uZmlndXJhdGlvbikge1xuICB2YXIgY29uZmlndXJhdGlvbkpTT04sIGdhdGV3YXlDb25maWd1cmF0aW9uO1xuXG4gIGNvbmZpZ3VyYXRpb24gPSBjb25maWd1cmF0aW9uIHx8IHt9O1xuXG4gIGNvbmZpZ3VyYXRpb25KU09OID0gSlNPTi5zdHJpbmdpZnkoY29uZmlndXJhdGlvbik7XG4gIGdhdGV3YXlDb25maWd1cmF0aW9uID0gY29uZmlndXJhdGlvbi5nYXRld2F5Q29uZmlndXJhdGlvbjtcblxuICBpZiAoIWdhdGV3YXlDb25maWd1cmF0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEJyYWludHJlZUVycm9yKGVycm9ycy5DTElFTlRfTUlTU0lOR19HQVRFV0FZX0NPTkZJR1VSQVRJT04pO1xuICB9XG5cbiAgW1wiYXNzZXRzVXJsXCIsIFwiY2xpZW50QXBpVXJsXCIsIFwiY29uZmlnVXJsXCJdLmZvckVhY2goZnVuY3Rpb24gKHByb3BlcnR5KSB7XG4gICAgaWYgKFxuICAgICAgcHJvcGVydHkgaW4gZ2F0ZXdheUNvbmZpZ3VyYXRpb24gJiZcbiAgICAgICFpc1ZlcmlmaWVkRG9tYWluKGdhdGV3YXlDb25maWd1cmF0aW9uW3Byb3BlcnR5XSlcbiAgICApIHtcbiAgICAgIHRocm93IG5ldyBCcmFpbnRyZWVFcnJvcih7XG4gICAgICAgIHR5cGU6IGVycm9ycy5DTElFTlRfR0FURVdBWV9DT05GSUdVUkFUSU9OX0lOVkFMSURfRE9NQUlOLnR5cGUsXG4gICAgICAgIGNvZGU6IGVycm9ycy5DTElFTlRfR0FURVdBWV9DT05GSUdVUkFUSU9OX0lOVkFMSURfRE9NQUlOLmNvZGUsXG4gICAgICAgIG1lc3NhZ2U6IHByb3BlcnR5ICsgXCIgcHJvcGVydHkgaXMgb24gYW4gaW52YWxpZCBkb21haW4uXCIsXG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgY29weSBvZiB0aGUgY29uZmlndXJhdGlvbiB2YWx1ZXMuXG4gICAqIEBwdWJsaWNcbiAgICogQHJldHVybnMge0NsaWVudH5jb25maWd1cmF0aW9ufSBjb25maWd1cmF0aW9uXG4gICAqL1xuICB0aGlzLmdldENvbmZpZ3VyYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoY29uZmlndXJhdGlvbkpTT04pO1xuICB9O1xuXG4gIHRoaXMuX3JlcXVlc3QgPSByZXF1ZXN0O1xuICB0aGlzLl9jb25maWd1cmF0aW9uID0gdGhpcy5nZXRDb25maWd1cmF0aW9uKCk7XG5cbiAgdGhpcy5fY2xpZW50QXBpQmFzZVVybCA9IGdhdGV3YXlDb25maWd1cmF0aW9uLmNsaWVudEFwaVVybCArIFwiL3YxL1wiO1xuXG4gIGlmIChnYXRld2F5Q29uZmlndXJhdGlvbi5ncmFwaFFMKSB7XG4gICAgaWYgKCFpc1ZlcmlmaWVkRG9tYWluKGdhdGV3YXlDb25maWd1cmF0aW9uLmdyYXBoUUwudXJsKSkge1xuICAgICAgdGhyb3cgbmV3IEJyYWludHJlZUVycm9yKHtcbiAgICAgICAgdHlwZTogZXJyb3JzLkNMSUVOVF9HQVRFV0FZX0NPTkZJR1VSQVRJT05fSU5WQUxJRF9ET01BSU4udHlwZSxcbiAgICAgICAgY29kZTogZXJyb3JzLkNMSUVOVF9HQVRFV0FZX0NPTkZJR1VSQVRJT05fSU5WQUxJRF9ET01BSU4uY29kZSxcbiAgICAgICAgbWVzc2FnZTogXCJncmFwaFFMLnVybCBwcm9wZXJ0eSBpcyBvbiBhbiBpbnZhbGlkIGRvbWFpbi5cIixcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuX2dyYXBoUUwgPSBuZXcgR3JhcGhRTCh7XG4gICAgICBncmFwaFFMOiBnYXRld2F5Q29uZmlndXJhdGlvbi5ncmFwaFFMLFxuICAgIH0pO1xuICB9XG59XG5cbkNsaWVudC5pbml0aWFsaXplID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgdmFyIGNsaWVudEluc3RhbmNlLCBhdXRoRGF0YTtcbiAgdmFyIHByb21pc2UgPSBjYWNoZWRDbGllbnRzW29wdGlvbnMuYXV0aG9yaXphdGlvbl07XG5cbiAgaWYgKHByb21pc2UpIHtcbiAgICBhbmFseXRpY3Muc2VuZEV2ZW50KHByb21pc2UsIFwiY3VzdG9tLmNsaWVudC5sb2FkLmNhY2hlZFwiKTtcblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBhdXRoRGF0YSA9IGNyZWF0ZUF1dGhvcml6YXRpb25EYXRhKG9wdGlvbnMuYXV0aG9yaXphdGlvbik7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChcbiAgICAgIG5ldyBCcmFpbnRyZWVFcnJvcihlcnJvcnMuQ0xJRU5UX0lOVkFMSURfQVVUSE9SSVpBVElPTilcbiAgICApO1xuICB9XG5cbiAgcHJvbWlzZSA9IGdldEdhdGV3YXlDb25maWd1cmF0aW9uKGF1dGhEYXRhKS50aGVuKGZ1bmN0aW9uIChjb25maWd1cmF0aW9uKSB7XG4gICAgaWYgKG9wdGlvbnMuZGVidWcpIHtcbiAgICAgIGNvbmZpZ3VyYXRpb24uaXNEZWJ1ZyA9IHRydWU7XG4gICAgfVxuXG4gICAgY29uZmlndXJhdGlvbi5hdXRob3JpemF0aW9uID0gb3B0aW9ucy5hdXRob3JpemF0aW9uO1xuXG4gICAgY2xpZW50SW5zdGFuY2UgPSBuZXcgQ2xpZW50KGNvbmZpZ3VyYXRpb24pO1xuXG4gICAgcmV0dXJuIGNsaWVudEluc3RhbmNlO1xuICB9KTtcblxuICBjYWNoZWRDbGllbnRzW29wdGlvbnMuYXV0aG9yaXphdGlvbl0gPSBwcm9taXNlO1xuXG4gIGFuYWx5dGljcy5zZW5kRXZlbnQocHJvbWlzZSwgXCJjdXN0b20uY2xpZW50LmxvYWQuaW5pdGlhbGl6ZWRcIik7XG5cbiAgcmV0dXJuIHByb21pc2VcbiAgICAudGhlbihmdW5jdGlvbiAoY2xpZW50KSB7XG4gICAgICBhbmFseXRpY3Muc2VuZEV2ZW50KGNsaWVudEluc3RhbmNlLCBcImN1c3RvbS5jbGllbnQubG9hZC5zdWNjZWVkZWRcIik7XG5cbiAgICAgIHJldHVybiBjbGllbnQ7XG4gICAgfSlcbiAgICAuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICAgICAgZGVsZXRlIGNhY2hlZENsaWVudHNbb3B0aW9ucy5hdXRob3JpemF0aW9uXTtcblxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycik7XG4gICAgfSk7XG59O1xuXG4vLyBQcmltYXJpbHkgdXNlZCBmb3IgdGVzdGluZyB0aGUgY2xpZW50IGluaXRhbGl6YXRpb24gY2FsbFxuQ2xpZW50LmNsZWFyQ2FjaGUgPSBmdW5jdGlvbiAoKSB7XG4gIGNhY2hlZENsaWVudHMgPSB7fTtcbn07XG5cbkNsaWVudC5wcm90b3R5cGUuX2ZpbmRPckNyZWF0ZUZyYXVkbmV0SlNPTiA9IGZ1bmN0aW9uIChjbGllbnRNZXRhZGF0YUlkKSB7XG4gIHZhciBlbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3NjcmlwdFtmbmNscz1cIicgKyBGUkFVRE5FVF9GTkNMUyArICdcIl0nKTtcbiAgdmFyIGNvbmZpZywgYWRkaXRpb25hbERhdGEsIGF1dGhvcml6YXRpb25GaW5nZXJwcmludCwgcGFyYW1ldGVycztcblxuICBpZiAoIWVsKSB7XG4gICAgZWwgPSBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIikpO1xuICAgIGVsLnR5cGUgPSBcImFwcGxpY2F0aW9uL2pzb25cIjtcbiAgICBlbC5zZXRBdHRyaWJ1dGUoXCJmbmNsc1wiLCBGUkFVRE5FVF9GTkNMUyk7XG4gIH1cblxuICBjb25maWcgPSB0aGlzLmdldENvbmZpZ3VyYXRpb24oKTtcbiAgYWRkaXRpb25hbERhdGEgPSB7XG4gICAgcmRhX3RlbmFudDogXCJidF9jYXJkXCIsIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY2FtZWxjYXNlXG4gICAgbWlkOiBjb25maWcuZ2F0ZXdheUNvbmZpZ3VyYXRpb24ubWVyY2hhbnRJZCxcbiAgfTtcbiAgYXV0aG9yaXphdGlvbkZpbmdlcnByaW50ID0gY29uZmlnLmF1dGhvcml6YXRpb25GaW5nZXJwcmludDtcblxuICBpZiAoYXV0aG9yaXphdGlvbkZpbmdlcnByaW50KSB7XG4gICAgYXV0aG9yaXphdGlvbkZpbmdlcnByaW50LnNwbGl0KFwiJlwiKS5mb3JFYWNoKGZ1bmN0aW9uIChwaWVjZXMpIHtcbiAgICAgIHZhciBjb21wb25lbnQgPSBwaWVjZXMuc3BsaXQoXCI9XCIpO1xuXG4gICAgICBpZiAoY29tcG9uZW50WzBdID09PSBcImN1c3RvbWVyX2lkXCIgJiYgY29tcG9uZW50Lmxlbmd0aCA+IDEpIHtcbiAgICAgICAgYWRkaXRpb25hbERhdGEuY2lkID0gY29tcG9uZW50WzFdO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcGFyYW1ldGVycyA9IHtcbiAgICBmOiBjbGllbnRNZXRhZGF0YUlkLnN1YnN0cigwLCAzMiksXG4gICAgZnA6IGFkZGl0aW9uYWxEYXRhLFxuICAgIGJ1OiBmYWxzZSxcbiAgICBzOiBGUkFVRE5FVF9TT1VSQ0UsXG4gIH07XG4gIGVsLnRleHQgPSBKU09OLnN0cmluZ2lmeShwYXJhbWV0ZXJzKTtcbn07XG5cbi8qKlxuICogVXNlZCBieSBvdGhlciBtb2R1bGVzIHRvIGZvcm11bGF0ZSBhbGwgbmV0d29yayByZXF1ZXN0cyB0byB0aGUgQnJhaW50cmVlIGdhdGV3YXkuIEl0IGlzIGFsc28gY2FwYWJsZSBvZiBiZWluZyB1c2VkIGRpcmVjdGx5IGZyb20geW91ciBvd24gZm9ybSB0byB0b2tlbml6ZSBjcmVkaXQgY2FyZCBpbmZvcm1hdGlvbi4gSG93ZXZlciwgYmUgc3VyZSB0byBzYXRpc2Z5IFBDSSBjb21wbGlhbmNlIGlmIHlvdSB1c2UgZGlyZWN0IGNhcmQgdG9rZW5pemF0aW9uLlxuICogQHB1YmxpY1xuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMgUmVxdWVzdCBvcHRpb25zOlxuICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbnMubWV0aG9kIEhUVFAgbWV0aG9kLCBlLmcuIFwiZ2V0XCIgb3IgXCJwb3N0XCIuXG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5lbmRwb2ludCBFbmRwb2ludCBwYXRoLCBlLmcuIFwicGF5bWVudF9tZXRob2RzXCIuXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucy5kYXRhIERhdGEgdG8gc2VuZCB3aXRoIHRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLnRpbWVvdXQ9NjAwMDBdIFNldCBhIHRpbWVvdXQgKGluIG1pbGxpc2Vjb25kcykgZm9yIHRoZSByZXF1ZXN0LlxuICogQHBhcmFtIHtjYWxsYmFja30gW2NhbGxiYWNrXSBUaGUgc2Vjb25kIGFyZ3VtZW50LCA8Y29kZT5kYXRhPC9jb2RlPiwgaXMgdGhlIHJldHVybmVkIHNlcnZlciBkYXRhLlxuICogQGV4YW1wbGVcbiAqIDxjYXB0aW9uPkRpcmVjdCBDcmVkaXQgQ2FyZCBUb2tlbml6YXRpb248L2NhcHRpb24+XG4gKiB2YXIgY3JlYXRlQ2xpZW50ID0gcmVxdWlyZSgnYnJhaW50cmVlLXdlYi9jbGllbnQnKS5jcmVhdGU7XG4gKlxuICogY3JlYXRlQ2xpZW50KHtcbiAqICAgYXV0aG9yaXphdGlvbjogQ0xJRU5UX0FVVEhPUklaQVRJT05cbiAqIH0sIGZ1bmN0aW9uIChjcmVhdGVFcnIsIGNsaWVudEluc3RhbmNlKSB7XG4gKiAgIHZhciBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LWZvcm0taWQnKTtcbiAqICAgdmFyIGRhdGEgPSB7XG4gKiAgICAgY3JlZGl0Q2FyZDoge1xuICogICAgICAgbnVtYmVyOiBmb3JtWydjYy1udW1iZXInXS52YWx1ZSxcbiAqICAgICAgIGN2djogZm9ybVsnY2MtY3Z2J10udmFsdWUsXG4gKiAgICAgICBleHBpcmF0aW9uRGF0ZTogZm9ybVsnY2MtZXhwaXJhdGlvbi1kYXRlJ10udmFsdWUsXG4gKiAgICAgICBiaWxsaW5nQWRkcmVzczoge1xuICogICAgICAgICBwb3N0YWxDb2RlOiBmb3JtWydjYy1wb3N0YWwtY29kZSddLnZhbHVlXG4gKiAgICAgICB9LFxuICogICAgICAgb3B0aW9uczoge1xuICogICAgICAgICB2YWxpZGF0ZTogZmFsc2VcbiAqICAgICAgIH1cbiAqICAgICB9XG4gKiAgIH07XG4gKlxuICogICAvLyBXYXJuaW5nOiBGb3IgYSBtZXJjaGFudCB0byBiZSBlbGlnaWJsZSBmb3IgdGhlIGVhc2llc3QgbGV2ZWwgb2YgUENJIGNvbXBsaWFuY2UgKFNBUSBBKSxcbiAqICAgLy8gcGF5bWVudCBmaWVsZHMgY2Fubm90IGJlIGhvc3RlZCBvbiB5b3VyIGNoZWNrb3V0IHBhZ2UuXG4gKiAgIC8vIEZvciBhbiBhbHRlcm5hdGl2ZSB0byB0aGUgZm9sbG93aW5nLCB1c2UgSG9zdGVkIEZpZWxkcy5cbiAqICAgY2xpZW50SW5zdGFuY2UucmVxdWVzdCh7XG4gKiAgICAgZW5kcG9pbnQ6ICdwYXltZW50X21ldGhvZHMvY3JlZGl0X2NhcmRzJyxcbiAqICAgICBtZXRob2Q6ICdwb3N0JyxcbiAqICAgICBkYXRhOiBkYXRhXG4gKiAgIH0sIGZ1bmN0aW9uIChyZXF1ZXN0RXJyLCByZXNwb25zZSkge1xuICogICAgIC8vIE1vcmUgZGV0YWlsZWQgZXhhbXBsZSBvZiBoYW5kbGluZyBBUEkgZXJyb3JzOiBodHRwczovL2NvZGVwZW4uaW8vYnJhaW50cmVlL3Blbi9NYndqZE1cbiAqICAgICBpZiAocmVxdWVzdEVycikgeyB0aHJvdyBuZXcgRXJyb3IocmVxdWVzdEVycik7IH1cbiAqXG4gKiAgICAgY29uc29sZS5sb2coJ0dvdCBub25jZTonLCByZXNwb25zZS5jcmVkaXRDYXJkc1swXS5ub25jZSk7XG4gKiAgIH0pO1xuICogfSk7XG4gKiBAZXhhbXBsZVxuICogPGNhcHRpb24+VG9rZW5pemluZyBGaWVsZHMgZm9yIEFWUyBDaGVja3M8L2NhcHRpb24+XG4gKiB2YXIgY3JlYXRlQ2xpZW50ID0gcmVxdWlyZSgnYnJhaW50cmVlLXdlYi9jbGllbnQnKS5jcmVhdGU7XG4gKlxuICogY3JlYXRlQ2xpZW50KHtcbiAqICAgYXV0aG9yaXphdGlvbjogQ0xJRU5UX0FVVEhPUklaQVRJT05cbiAqIH0sIGZ1bmN0aW9uIChjcmVhdGVFcnIsIGNsaWVudEluc3RhbmNlKSB7XG4gKiAgIHZhciBmb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ215LWZvcm0taWQnKTtcbiAqICAgdmFyIGRhdGEgPSB7XG4gKiAgICAgY3JlZGl0Q2FyZDoge1xuICogICAgICAgbnVtYmVyOiBmb3JtWydjYy1udW1iZXInXS52YWx1ZSxcbiAqICAgICAgIGN2djogZm9ybVsnY2MtY3Z2J10udmFsdWUsXG4gKiAgICAgICBleHBpcmF0aW9uRGF0ZTogZm9ybVsnY2MtZGF0ZSddLnZhbHVlLFxuICogICAgICAgLy8gVGhlIGJpbGxpbmcgYWRkcmVzcyBjYW4gYmUgY2hlY2tlZCB3aXRoIEFWUyBydWxlcy5cbiAqICAgICAgIC8vIFNlZTogaHR0cHM6Ly9hcnRpY2xlcy5icmFpbnRyZWVwYXltZW50cy5jb20vc3VwcG9ydC9ndWlkZXMvZnJhdWQtdG9vbHMvYmFzaWMvYXZzLWN2di1ydWxlc1xuICogICAgICAgYmlsbGluZ0FkZHJlc3M6IHtcbiAqICAgICAgICAgcG9zdGFsQ29kZTogZm9ybVsnY2MtcG9zdGFsLWNvZGUnXS52YWx1ZSxcbiAqICAgICAgICAgc3RyZWV0QWRkcmVzczogZm9ybVsnY2Mtc3RyZWV0LWFkZHJlc3MnXS52YWx1ZSxcbiAqICAgICAgICAgY291bnRyeU5hbWU6IGZvcm1bJ2NjLWNvdW50cnktbmFtZSddLnZhbHVlLFxuICogICAgICAgICBjb3VudHJ5Q29kZUFscGhhMjogZm9ybVsnY2MtY291bnRyeS1hbHBoYTInXS52YWx1ZSxcbiAqICAgICAgICAgY291bnRyeUNvZGVBbHBoYTM6IGZvcm1bJ2NjLWNvdW50cnktYWxwaGEzJ10udmFsdWUsXG4gKiAgICAgICAgIGNvdW50cnlDb2RlTnVtZXJpYzogZm9ybVsnY2MtY291bnRyeS1udW1lcmljJ10udmFsdWVcbiAqICAgICAgIH0sXG4gKiAgICAgICBvcHRpb25zOiB7XG4gKiAgICAgICAgIHZhbGlkYXRlOiBmYWxzZVxuICogICAgICAgfVxuICogICAgIH1cbiAqICAgfTtcbiAqXG4gKiAgIC8vIFdhcm5pbmc6IEZvciBhIG1lcmNoYW50IHRvIGJlIGVsaWdpYmxlIGZvciB0aGUgZWFzaWVzdCBsZXZlbCBvZiBQQ0kgY29tcGxpYW5jZSAoU0FRIEEpLFxuICogICAvLyBwYXltZW50IGZpZWxkcyBjYW5ub3QgYmUgaG9zdGVkIG9uIHlvdXIgY2hlY2tvdXQgcGFnZS5cbiAqICAgLy8gRm9yIGFuIGFsdGVybmF0aXZlIHRvIHRoZSBmb2xsb3dpbmcsIHVzZSBIb3N0ZWQgRmllbGRzLlxuICogICBjbGllbnRJbnN0YW5jZS5yZXF1ZXN0KHtcbiAqICAgICBlbmRwb2ludDogJ3BheW1lbnRfbWV0aG9kcy9jcmVkaXRfY2FyZHMnLFxuICogICAgIG1ldGhvZDogJ3Bvc3QnLFxuICogICAgIGRhdGE6IGRhdGFcbiAqICAgfSwgZnVuY3Rpb24gKHJlcXVlc3RFcnIsIHJlc3BvbnNlKSB7XG4gKiAgICAgLy8gTW9yZSBkZXRhaWxlZCBleGFtcGxlIG9mIGhhbmRsaW5nIEFQSSBlcnJvcnM6IGh0dHBzOi8vY29kZXBlbi5pby9icmFpbnRyZWUvcGVuL01id2pkTVxuICogICAgIGlmIChyZXF1ZXN0RXJyKSB7IHRocm93IG5ldyBFcnJvcihyZXF1ZXN0RXJyKTsgfVxuICpcbiAqICAgICBjb25zb2xlLmxvZygnR290IG5vbmNlOicsIHJlc3BvbnNlLmNyZWRpdENhcmRzWzBdLm5vbmNlKTtcbiAqICAgfSk7XG4gKiB9KTtcbiAqIEByZXR1cm5zIHsoUHJvbWlzZXx2b2lkKX0gUmV0dXJucyBhIHByb21pc2UgaWYgbm8gY2FsbGJhY2sgaXMgcHJvdmlkZWQuXG4gKi9cbkNsaWVudC5wcm90b3R5cGUucmVxdWVzdCA9IGZ1bmN0aW9uIChvcHRpb25zLCBjYWxsYmFjaykge1xuICB2YXIgc2VsZiA9IHRoaXM7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8taW52YWxpZC10aGlzXG4gIHZhciByZXF1ZXN0UHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICB2YXIgb3B0aW9uTmFtZSwgYXBpLCBiYXNlVXJsLCByZXF1ZXN0T3B0aW9ucztcbiAgICB2YXIgc2hvdWxkQ29sbGVjdERhdGEgPSBCb29sZWFuKFxuICAgICAgb3B0aW9ucy5lbmRwb2ludCA9PT0gXCJwYXltZW50X21ldGhvZHMvY3JlZGl0X2NhcmRzXCIgJiZcbiAgICAgICAgc2VsZi5nZXRDb25maWd1cmF0aW9uKCkuZ2F0ZXdheUNvbmZpZ3VyYXRpb24uY3JlZGl0Q2FyZHNcbiAgICAgICAgICAuY29sbGVjdERldmljZURhdGFcbiAgICApO1xuXG4gICAgaWYgKG9wdGlvbnMuYXBpICE9PSBcImdyYXBoUUxBcGlcIikge1xuICAgICAgaWYgKCFvcHRpb25zLm1ldGhvZCkge1xuICAgICAgICBvcHRpb25OYW1lID0gXCJvcHRpb25zLm1ldGhvZFwiO1xuICAgICAgfSBlbHNlIGlmICghb3B0aW9ucy5lbmRwb2ludCkge1xuICAgICAgICBvcHRpb25OYW1lID0gXCJvcHRpb25zLmVuZHBvaW50XCI7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbk5hbWUpIHtcbiAgICAgIHRocm93IG5ldyBCcmFpbnRyZWVFcnJvcih7XG4gICAgICAgIHR5cGU6IGVycm9ycy5DTElFTlRfT1BUSU9OX1JFUVVJUkVELnR5cGUsXG4gICAgICAgIGNvZGU6IGVycm9ycy5DTElFTlRfT1BUSU9OX1JFUVVJUkVELmNvZGUsXG4gICAgICAgIG1lc3NhZ2U6IG9wdGlvbk5hbWUgKyBcIiBpcyByZXF1aXJlZCB3aGVuIG1ha2luZyBhIHJlcXVlc3QuXCIsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoXCJhcGlcIiBpbiBvcHRpb25zKSB7XG4gICAgICBhcGkgPSBvcHRpb25zLmFwaTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpID0gXCJjbGllbnRBcGlcIjtcbiAgICB9XG5cbiAgICByZXF1ZXN0T3B0aW9ucyA9IHtcbiAgICAgIG1ldGhvZDogb3B0aW9ucy5tZXRob2QsXG4gICAgICBncmFwaFFMOiBzZWxmLl9ncmFwaFFMLFxuICAgICAgdGltZW91dDogb3B0aW9ucy50aW1lb3V0LFxuICAgICAgbWV0YWRhdGE6IHNlbGYuX2NvbmZpZ3VyYXRpb24uYW5hbHl0aWNzTWV0YWRhdGEsXG4gICAgfTtcblxuICAgIGlmIChhcGkgPT09IFwiY2xpZW50QXBpXCIpIHtcbiAgICAgIGJhc2VVcmwgPSBzZWxmLl9jbGllbnRBcGlCYXNlVXJsO1xuXG4gICAgICByZXF1ZXN0T3B0aW9ucy5kYXRhID0gYWRkTWV0YWRhdGEoc2VsZi5fY29uZmlndXJhdGlvbiwgb3B0aW9ucy5kYXRhKTtcbiAgICB9IGVsc2UgaWYgKGFwaSA9PT0gXCJncmFwaFFMQXBpXCIpIHtcbiAgICAgIGJhc2VVcmwgPVxuICAgICAgICBHUkFQSFFMX1VSTFNbc2VsZi5fY29uZmlndXJhdGlvbi5nYXRld2F5Q29uZmlndXJhdGlvbi5lbnZpcm9ubWVudF07XG4gICAgICBvcHRpb25zLmVuZHBvaW50ID0gXCJcIjtcbiAgICAgIHJlcXVlc3RPcHRpb25zLm1ldGhvZCA9IFwicG9zdFwiO1xuICAgICAgcmVxdWVzdE9wdGlvbnMuZGF0YSA9IGFzc2lnbihcbiAgICAgICAge1xuICAgICAgICAgIGNsaWVudFNka01ldGFkYXRhOiB7XG4gICAgICAgICAgICBwbGF0Zm9ybTogc2VsZi5fY29uZmlndXJhdGlvbi5hbmFseXRpY3NNZXRhZGF0YS5wbGF0Zm9ybSxcbiAgICAgICAgICAgIHNvdXJjZTogc2VsZi5fY29uZmlndXJhdGlvbi5hbmFseXRpY3NNZXRhZGF0YS5zb3VyY2UsXG4gICAgICAgICAgICBpbnRlZ3JhdGlvbjogc2VsZi5fY29uZmlndXJhdGlvbi5hbmFseXRpY3NNZXRhZGF0YS5pbnRlZ3JhdGlvbixcbiAgICAgICAgICAgIHNlc3Npb25JZDogc2VsZi5fY29uZmlndXJhdGlvbi5hbmFseXRpY3NNZXRhZGF0YS5zZXNzaW9uSWQsXG4gICAgICAgICAgICB2ZXJzaW9uOiBWRVJTSU9OLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIG9wdGlvbnMuZGF0YVxuICAgICAgKTtcblxuICAgICAgcmVxdWVzdE9wdGlvbnMuaGVhZGVycyA9IGdldEF1dGhvcml6YXRpb25IZWFkZXJzRm9yR3JhcGhRTChcbiAgICAgICAgc2VsZi5fY29uZmlndXJhdGlvblxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEJyYWludHJlZUVycm9yKHtcbiAgICAgICAgdHlwZTogZXJyb3JzLkNMSUVOVF9PUFRJT05fSU5WQUxJRC50eXBlLFxuICAgICAgICBjb2RlOiBlcnJvcnMuQ0xJRU5UX09QVElPTl9JTlZBTElELmNvZGUsXG4gICAgICAgIG1lc3NhZ2U6IFwib3B0aW9ucy5hcGkgaXMgaW52YWxpZC5cIixcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJlcXVlc3RPcHRpb25zLnVybCA9IGJhc2VVcmwgKyBvcHRpb25zLmVuZHBvaW50O1xuICAgIHJlcXVlc3RPcHRpb25zLnNlbmRBbmFseXRpY3NFdmVudCA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgICBhbmFseXRpY3Muc2VuZEV2ZW50KHNlbGYsIGtpbmQpO1xuICAgIH07XG5cbiAgICBzZWxmLl9yZXF1ZXN0KHJlcXVlc3RPcHRpb25zLCBmdW5jdGlvbiAoZXJyLCBkYXRhLCBzdGF0dXMpIHtcbiAgICAgIHZhciByZXNvbHZlZERhdGEsIHJlcXVlc3RFcnJvcjtcblxuICAgICAgcmVxdWVzdEVycm9yID0gZm9ybWF0UmVxdWVzdEVycm9yKHN0YXR1cywgZXJyKTtcblxuICAgICAgaWYgKHJlcXVlc3RFcnJvcikge1xuICAgICAgICByZWplY3QocmVxdWVzdEVycm9yKTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChhcGkgPT09IFwiZ3JhcGhRTEFwaVwiICYmIGRhdGEuZXJyb3JzKSB7XG4gICAgICAgIHJlamVjdChcbiAgICAgICAgICBjb252ZXJ0VG9CcmFpbnRyZWVFcnJvcihkYXRhLmVycm9ycywge1xuICAgICAgICAgICAgdHlwZTogZXJyb3JzLkNMSUVOVF9HUkFQSFFMX1JFUVVFU1RfRVJST1IudHlwZSxcbiAgICAgICAgICAgIGNvZGU6IGVycm9ycy5DTElFTlRfR1JBUEhRTF9SRVFVRVNUX0VSUk9SLmNvZGUsXG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvcnMuQ0xJRU5UX0dSQVBIUUxfUkVRVUVTVF9FUlJPUi5tZXNzYWdlLFxuICAgICAgICAgIH0pXG4gICAgICAgICk7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZXNvbHZlZERhdGEgPSBhc3NpZ24oeyBfaHR0cFN0YXR1czogc3RhdHVzIH0sIGRhdGEpO1xuXG4gICAgICBpZiAoXG4gICAgICAgIHNob3VsZENvbGxlY3REYXRhICYmXG4gICAgICAgIHJlc29sdmVkRGF0YS5jcmVkaXRDYXJkcyAmJlxuICAgICAgICByZXNvbHZlZERhdGEuY3JlZGl0Q2FyZHMubGVuZ3RoID4gMFxuICAgICAgKSB7XG4gICAgICAgIHNlbGYuX2ZpbmRPckNyZWF0ZUZyYXVkbmV0SlNPTihyZXNvbHZlZERhdGEuY3JlZGl0Q2FyZHNbMF0ubm9uY2UpO1xuXG4gICAgICAgIGFzc2V0cy5sb2FkU2NyaXB0KHtcbiAgICAgICAgICBzcmM6IEZSQVVETkVUX1VSTCxcbiAgICAgICAgICBmb3JjZVNjcmlwdFJlbG9hZDogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXNvbHZlKHJlc29sdmVkRGF0YSk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2YgY2FsbGJhY2sgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIGNhbGxiYWNrID0gb25jZShkZWZlcnJlZChjYWxsYmFjaykpO1xuXG4gICAgcmVxdWVzdFByb21pc2VcbiAgICAgIC50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkge1xuICAgICAgICBjYWxsYmFjayhudWxsLCByZXNwb25zZSwgcmVzcG9uc2UuX2h0dHBTdGF0dXMpO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIHZhciBzdGF0dXMgPSBlcnIgJiYgZXJyLmRldGFpbHMgJiYgZXJyLmRldGFpbHMuaHR0cFN0YXR1cztcblxuICAgICAgICBjYWxsYmFjayhlcnIsIG51bGwsIHN0YXR1cyk7XG4gICAgICB9KTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIHJldHVybiByZXF1ZXN0UHJvbWlzZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBjb25zaXN0ZW50LXJldHVyblxufTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG5mdW5jdGlvbiBmb3JtYXRSZXF1ZXN0RXJyb3Ioc3RhdHVzLCBlcnIpIHtcbiAgdmFyIHJlcXVlc3RFcnJvcjtcblxuICBpZiAoc3RhdHVzID09PSAtMSkge1xuICAgIHJlcXVlc3RFcnJvciA9IG5ldyBCcmFpbnRyZWVFcnJvcihlcnJvcnMuQ0xJRU5UX1JFUVVFU1RfVElNRU9VVCk7XG4gIH0gZWxzZSBpZiAoc3RhdHVzID09PSA0MDEpIHtcbiAgICByZXF1ZXN0RXJyb3IgPSBuZXcgQnJhaW50cmVlRXJyb3IoZXJyb3JzLkNMSUVOVF9BVVRIT1JJWkFUSU9OX0lOVkFMSUQpO1xuICB9IGVsc2UgaWYgKHN0YXR1cyA9PT0gNDAzKSB7XG4gICAgcmVxdWVzdEVycm9yID0gbmV3IEJyYWludHJlZUVycm9yKGVycm9ycy5DTElFTlRfQVVUSE9SSVpBVElPTl9JTlNVRkZJQ0lFTlQpO1xuICB9IGVsc2UgaWYgKHN0YXR1cyA9PT0gNDI5KSB7XG4gICAgcmVxdWVzdEVycm9yID0gbmV3IEJyYWludHJlZUVycm9yKGVycm9ycy5DTElFTlRfUkFURV9MSU1JVEVEKTtcbiAgfSBlbHNlIGlmIChzdGF0dXMgPj0gNTAwKSB7XG4gICAgcmVxdWVzdEVycm9yID0gbmV3IEJyYWludHJlZUVycm9yKGVycm9ycy5DTElFTlRfR0FURVdBWV9ORVRXT1JLKTtcbiAgfSBlbHNlIGlmIChzdGF0dXMgPCAyMDAgfHwgc3RhdHVzID49IDQwMCkge1xuICAgIHJlcXVlc3RFcnJvciA9IGNvbnZlcnRUb0JyYWludHJlZUVycm9yKGVyciwge1xuICAgICAgdHlwZTogZXJyb3JzLkNMSUVOVF9SRVFVRVNUX0VSUk9SLnR5cGUsXG4gICAgICBjb2RlOiBlcnJvcnMuQ0xJRU5UX1JFUVVFU1RfRVJST1IuY29kZSxcbiAgICAgIG1lc3NhZ2U6IGVycm9ycy5DTElFTlRfUkVRVUVTVF9FUlJPUi5tZXNzYWdlLFxuICAgIH0pO1xuICB9XG5cbiAgaWYgKHJlcXVlc3RFcnJvcikge1xuICAgIHJlcXVlc3RFcnJvci5kZXRhaWxzID0gcmVxdWVzdEVycm9yLmRldGFpbHMgfHwge307XG4gICAgcmVxdWVzdEVycm9yLmRldGFpbHMuaHR0cFN0YXR1cyA9IHN0YXR1cztcblxuICAgIHJldHVybiByZXF1ZXN0RXJyb3I7XG4gIH1cbn1cblxuQ2xpZW50LnByb3RvdHlwZS50b0pTT04gPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmdldENvbmZpZ3VyYXRpb24oKTtcbn07XG5cbi8qKlxuICogUmV0dXJucyB0aGUgQ2xpZW50IHZlcnNpb24uXG4gKiBAcHVibGljXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBUaGUgY3JlYXRlZCBjbGllbnQncyB2ZXJzaW9uLlxuICogQGV4YW1wbGVcbiAqIHZhciBjcmVhdGVDbGllbnQgPSByZXF1aXJlKCdicmFpbnRyZWUtd2ViL2NsaWVudCcpLmNyZWF0ZTtcbiAqXG4gKiBjcmVhdGVDbGllbnQoe1xuICogICBhdXRob3JpemF0aW9uOiBDTElFTlRfQVVUSE9SSVpBVElPTlxuICogfSwgZnVuY3Rpb24gKGNyZWF0ZUVyciwgY2xpZW50SW5zdGFuY2UpIHtcbiAqICAgY29uc29sZS5sb2coY2xpZW50SW5zdGFuY2UuZ2V0VmVyc2lvbigpKTsgLy8gRXg6IDEuMC4wXG4gKiB9KTtcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5DbGllbnQucHJvdG90eXBlLmdldFZlcnNpb24gPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBWRVJTSU9OO1xufTtcblxuLyoqXG4gKiBDbGVhbmx5IHRlYXIgZG93biBhbnl0aGluZyBzZXQgdXAgYnkge0BsaW5rIG1vZHVsZTpicmFpbnRyZWUtd2ViL2NsaWVudC5jcmVhdGV8Y3JlYXRlfS5cbiAqIEBwdWJsaWNcbiAqIEBwYXJhbSB7Y2FsbGJhY2t9IFtjYWxsYmFja10gQ2FsbGVkIG9uY2UgdGVhcmRvd24gaXMgY29tcGxldGUuIE5vIGRhdGEgaXMgcmV0dXJuZWQgaWYgdGVhcmRvd24gY29tcGxldGVzIHN1Y2Nlc3NmdWxseS5cbiAqIEBleGFtcGxlXG4gKiBjbGllbnRJbnN0YW5jZS50ZWFyZG93bigpO1xuICogQGV4YW1wbGUgPGNhcHRpb24+V2l0aCBjYWxsYmFjazwvY2FwdGlvbj5cbiAqIGNsaWVudEluc3RhbmNlLnRlYXJkb3duKGZ1bmN0aW9uICgpIHtcbiAqICAgLy8gdGVhcmRvd24gaXMgY29tcGxldGVcbiAqIH0pO1xuICogQHJldHVybnMgeyhQcm9taXNlfHZvaWQpfSBSZXR1cm5zIGEgcHJvbWlzZSBpZiBubyBjYWxsYmFjayBpcyBwcm92aWRlZC5cbiAqL1xuQ2xpZW50LnByb3RvdHlwZS50ZWFyZG93biA9IHdyYXBQcm9taXNlKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHNlbGYgPSB0aGlzOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWludmFsaWQtdGhpc1xuXG4gIGRlbGV0ZSBjYWNoZWRDbGllbnRzW3NlbGYuZ2V0Q29uZmlndXJhdGlvbigpLmF1dGhvcml6YXRpb25dO1xuICBjb252ZXJ0TWV0aG9kc1RvRXJyb3Ioc2VsZiwgbWV0aG9kcyhDbGllbnQucHJvdG90eXBlKSk7XG5cbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xufSk7XG5cbmZ1bmN0aW9uIGdldEF1dGhvcml6YXRpb25IZWFkZXJzRm9yR3JhcGhRTChjb25maWd1cmF0aW9uKSB7XG4gIHZhciB0b2tlbiA9XG4gICAgY29uZmlndXJhdGlvbi5hdXRob3JpemF0aW9uRmluZ2VycHJpbnQgfHwgY29uZmlndXJhdGlvbi5hdXRob3JpemF0aW9uO1xuXG4gIHJldHVybiB7XG4gICAgQXV0aG9yaXphdGlvbjogXCJCZWFyZXIgXCIgKyB0b2tlbixcbiAgICBcIkJyYWludHJlZS1WZXJzaW9uXCI6IEJSQUlOVFJFRV9WRVJTSU9OLFxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENsaWVudDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/constants.js":
/*!********************************************************!*\
  !*** ./node_modules/braintree-web/client/constants.js ***!
  \********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n  BRAINTREE_VERSION: \"2018-05-10\",\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvY29uc3RhbnRzLmpzP2MwNWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBCUkFJTlRSRUVfVkVSU0lPTjogXCIyMDE4LTA1LTEwXCIsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/errors.js":
/*!*****************************************************!*\
  !*** ./node_modules/braintree-web/client/errors.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.Client - Internal Error Codes\n * @ignore\n * @description These codes should never be experienced by the merchant directly.\n * @property {MERCHANT} CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN An error to prevent client creation for domains that are not allowed in the JS.\n * @property {INTERNAL} CLIENT_MISSING_GATEWAY_CONFIGURATION Occurs when the client is created without a gateway configuration. Should never happen.\n */\n\n/**\n * @name BraintreeError.Client - Create Error Codes\n * @description Errors that may occur when [creating the client](./module-braintree-web_client.html#.create)\n * @property {MERCHANT} CLIENT_INVALID_AUTHORIZATION Occurs when client token cannot be parsed.\n */\n\n/**\n * @name BraintreeError.Client - Request Error Codes\n * @description Errors that may occur when [using the request method](./Client.html#request)\n * @property {MERCHANT} CLIENT_OPTION_REQUIRED An option required in the request method was not provided. Usually `options.method` or `options.endpoint`\n * @property {MERCHANT} CLIENT_OPTION_INVALID The request option provided is invalid.\n * @property {MERCHANT} CLIENT_GATEWAY_NETWORK The Braintree gateway could not be contacted.\n * @property {NETWORK} CLIENT_REQUEST_TIMEOUT The request took too long to complete and timed out.\n * @property {NETWORK} CLIENT_REQUEST_ERROR The response from a request had status 400 or greater.\n * @property {NETWORK} CLIENT_GRAPHQL_REQUEST_ERROR The response from a request to GraphQL contained an error.\n * @property {MERCHANT} CLIENT_RATE_LIMITED The response from a request had a status of 429, indicating rate limiting.\n * @property {MERCHANT} CLIENT_AUTHORIZATION_INSUFFICIENT The user associated with the client token or tokenization key does not have permissions to make the request.\n * @property {MERCHANT} CLIENT_AUTHORIZATION_INVALID The provided authorization could not be found. Either the client token has expired and a new client token must be generated or the tokenization key used is set to be inactive or has been deleted.\n */\n\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_GATEWAY_CONFIGURATION_INVALID_DOMAIN\",\n  },\n  CLIENT_OPTION_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_OPTION_REQUIRED\",\n  },\n  CLIENT_OPTION_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_OPTION_INVALID\",\n  },\n  CLIENT_MISSING_GATEWAY_CONFIGURATION: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"CLIENT_MISSING_GATEWAY_CONFIGURATION\",\n    message: \"Missing gatewayConfiguration.\",\n  },\n  CLIENT_INVALID_AUTHORIZATION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_INVALID_AUTHORIZATION\",\n    message:\n      \"Authorization is invalid. Make sure your client token or tokenization key is valid.\",\n  },\n  CLIENT_GATEWAY_NETWORK: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_GATEWAY_NETWORK\",\n    message: \"Cannot contact the gateway at this time.\",\n  },\n  CLIENT_REQUEST_TIMEOUT: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_REQUEST_TIMEOUT\",\n    message: \"Request timed out waiting for a reply.\",\n  },\n  CLIENT_REQUEST_ERROR: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_REQUEST_ERROR\",\n    message: \"There was a problem with your request.\",\n  },\n  CLIENT_GRAPHQL_REQUEST_ERROR: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_GRAPHQL_REQUEST_ERROR\",\n    message: \"There was a problem with your request.\",\n  },\n  CLIENT_RATE_LIMITED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_RATE_LIMITED\",\n    message: \"You are being rate-limited; please try again in a few minutes.\",\n  },\n  CLIENT_AUTHORIZATION_INSUFFICIENT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_AUTHORIZATION_INSUFFICIENT\",\n    message: \"The authorization used has insufficient privileges.\",\n  },\n  CLIENT_AUTHORIZATION_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"CLIENT_AUTHORIZATION_INVALID\",\n    message:\n      \"Either the client token has expired and a new one should be generated or the tokenization key has been deactivated or deleted.\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFVBQVU7QUFDeEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4QixjQUFjLFVBQVU7QUFDeEIsY0FBYyxTQUFTO0FBQ3ZCLGNBQWMsU0FBUztBQUN2QixjQUFjLFNBQVM7QUFDdkIsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4QixjQUFjLFVBQVU7QUFDeEI7O0FBRUEscUJBQXFCLG1CQUFPLENBQUMseUZBQXdCOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2NsaWVudC9lcnJvcnMuanM/YWM4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAbmFtZSBCcmFpbnRyZWVFcnJvci5DbGllbnQgLSBJbnRlcm5hbCBFcnJvciBDb2Rlc1xuICogQGlnbm9yZVxuICogQGRlc2NyaXB0aW9uIFRoZXNlIGNvZGVzIHNob3VsZCBuZXZlciBiZSBleHBlcmllbmNlZCBieSB0aGUgbWVyY2hhbnQgZGlyZWN0bHkuXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBDTElFTlRfR0FURVdBWV9DT05GSUdVUkFUSU9OX0lOVkFMSURfRE9NQUlOIEFuIGVycm9yIHRvIHByZXZlbnQgY2xpZW50IGNyZWF0aW9uIGZvciBkb21haW5zIHRoYXQgYXJlIG5vdCBhbGxvd2VkIGluIHRoZSBKUy5cbiAqIEBwcm9wZXJ0eSB7SU5URVJOQUx9IENMSUVOVF9NSVNTSU5HX0dBVEVXQVlfQ09ORklHVVJBVElPTiBPY2N1cnMgd2hlbiB0aGUgY2xpZW50IGlzIGNyZWF0ZWQgd2l0aG91dCBhIGdhdGV3YXkgY29uZmlndXJhdGlvbi4gU2hvdWxkIG5ldmVyIGhhcHBlbi5cbiAqL1xuXG4vKipcbiAqIEBuYW1lIEJyYWludHJlZUVycm9yLkNsaWVudCAtIENyZWF0ZSBFcnJvciBDb2Rlc1xuICogQGRlc2NyaXB0aW9uIEVycm9ycyB0aGF0IG1heSBvY2N1ciB3aGVuIFtjcmVhdGluZyB0aGUgY2xpZW50XSguL21vZHVsZS1icmFpbnRyZWUtd2ViX2NsaWVudC5odG1sIy5jcmVhdGUpXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBDTElFTlRfSU5WQUxJRF9BVVRIT1JJWkFUSU9OIE9jY3VycyB3aGVuIGNsaWVudCB0b2tlbiBjYW5ub3QgYmUgcGFyc2VkLlxuICovXG5cbi8qKlxuICogQG5hbWUgQnJhaW50cmVlRXJyb3IuQ2xpZW50IC0gUmVxdWVzdCBFcnJvciBDb2Rlc1xuICogQGRlc2NyaXB0aW9uIEVycm9ycyB0aGF0IG1heSBvY2N1ciB3aGVuIFt1c2luZyB0aGUgcmVxdWVzdCBtZXRob2RdKC4vQ2xpZW50Lmh0bWwjcmVxdWVzdClcbiAqIEBwcm9wZXJ0eSB7TUVSQ0hBTlR9IENMSUVOVF9PUFRJT05fUkVRVUlSRUQgQW4gb3B0aW9uIHJlcXVpcmVkIGluIHRoZSByZXF1ZXN0IG1ldGhvZCB3YXMgbm90IHByb3ZpZGVkLiBVc3VhbGx5IGBvcHRpb25zLm1ldGhvZGAgb3IgYG9wdGlvbnMuZW5kcG9pbnRgXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBDTElFTlRfT1BUSU9OX0lOVkFMSUQgVGhlIHJlcXVlc3Qgb3B0aW9uIHByb3ZpZGVkIGlzIGludmFsaWQuXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBDTElFTlRfR0FURVdBWV9ORVRXT1JLIFRoZSBCcmFpbnRyZWUgZ2F0ZXdheSBjb3VsZCBub3QgYmUgY29udGFjdGVkLlxuICogQHByb3BlcnR5IHtORVRXT1JLfSBDTElFTlRfUkVRVUVTVF9USU1FT1VUIFRoZSByZXF1ZXN0IHRvb2sgdG9vIGxvbmcgdG8gY29tcGxldGUgYW5kIHRpbWVkIG91dC5cbiAqIEBwcm9wZXJ0eSB7TkVUV09SS30gQ0xJRU5UX1JFUVVFU1RfRVJST1IgVGhlIHJlc3BvbnNlIGZyb20gYSByZXF1ZXN0IGhhZCBzdGF0dXMgNDAwIG9yIGdyZWF0ZXIuXG4gKiBAcHJvcGVydHkge05FVFdPUkt9IENMSUVOVF9HUkFQSFFMX1JFUVVFU1RfRVJST1IgVGhlIHJlc3BvbnNlIGZyb20gYSByZXF1ZXN0IHRvIEdyYXBoUUwgY29udGFpbmVkIGFuIGVycm9yLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gQ0xJRU5UX1JBVEVfTElNSVRFRCBUaGUgcmVzcG9uc2UgZnJvbSBhIHJlcXVlc3QgaGFkIGEgc3RhdHVzIG9mIDQyOSwgaW5kaWNhdGluZyByYXRlIGxpbWl0aW5nLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gQ0xJRU5UX0FVVEhPUklaQVRJT05fSU5TVUZGSUNJRU5UIFRoZSB1c2VyIGFzc29jaWF0ZWQgd2l0aCB0aGUgY2xpZW50IHRva2VuIG9yIHRva2VuaXphdGlvbiBrZXkgZG9lcyBub3QgaGF2ZSBwZXJtaXNzaW9ucyB0byBtYWtlIHRoZSByZXF1ZXN0LlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gQ0xJRU5UX0FVVEhPUklaQVRJT05fSU5WQUxJRCBUaGUgcHJvdmlkZWQgYXV0aG9yaXphdGlvbiBjb3VsZCBub3QgYmUgZm91bmQuIEVpdGhlciB0aGUgY2xpZW50IHRva2VuIGhhcyBleHBpcmVkIGFuZCBhIG5ldyBjbGllbnQgdG9rZW4gbXVzdCBiZSBnZW5lcmF0ZWQgb3IgdGhlIHRva2VuaXphdGlvbiBrZXkgdXNlZCBpcyBzZXQgdG8gYmUgaW5hY3RpdmUgb3IgaGFzIGJlZW4gZGVsZXRlZC5cbiAqL1xuXG52YXIgQnJhaW50cmVlRXJyb3IgPSByZXF1aXJlKFwiLi4vbGliL2JyYWludHJlZS1lcnJvclwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIENMSUVOVF9HQVRFV0FZX0NPTkZJR1VSQVRJT05fSU5WQUxJRF9ET01BSU46IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5NRVJDSEFOVCxcbiAgICBjb2RlOiBcIkNMSUVOVF9HQVRFV0FZX0NPTkZJR1VSQVRJT05fSU5WQUxJRF9ET01BSU5cIixcbiAgfSxcbiAgQ0xJRU5UX09QVElPTl9SRVFVSVJFRDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiQ0xJRU5UX09QVElPTl9SRVFVSVJFRFwiLFxuICB9LFxuICBDTElFTlRfT1BUSU9OX0lOVkFMSUQ6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5NRVJDSEFOVCxcbiAgICBjb2RlOiBcIkNMSUVOVF9PUFRJT05fSU5WQUxJRFwiLFxuICB9LFxuICBDTElFTlRfTUlTU0lOR19HQVRFV0FZX0NPTkZJR1VSQVRJT046IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5JTlRFUk5BTCxcbiAgICBjb2RlOiBcIkNMSUVOVF9NSVNTSU5HX0dBVEVXQVlfQ09ORklHVVJBVElPTlwiLFxuICAgIG1lc3NhZ2U6IFwiTWlzc2luZyBnYXRld2F5Q29uZmlndXJhdGlvbi5cIixcbiAgfSxcbiAgQ0xJRU5UX0lOVkFMSURfQVVUSE9SSVpBVElPTjoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiQ0xJRU5UX0lOVkFMSURfQVVUSE9SSVpBVElPTlwiLFxuICAgIG1lc3NhZ2U6XG4gICAgICBcIkF1dGhvcml6YXRpb24gaXMgaW52YWxpZC4gTWFrZSBzdXJlIHlvdXIgY2xpZW50IHRva2VuIG9yIHRva2VuaXphdGlvbiBrZXkgaXMgdmFsaWQuXCIsXG4gIH0sXG4gIENMSUVOVF9HQVRFV0FZX05FVFdPUks6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5ORVRXT1JLLFxuICAgIGNvZGU6IFwiQ0xJRU5UX0dBVEVXQVlfTkVUV09SS1wiLFxuICAgIG1lc3NhZ2U6IFwiQ2Fubm90IGNvbnRhY3QgdGhlIGdhdGV3YXkgYXQgdGhpcyB0aW1lLlwiLFxuICB9LFxuICBDTElFTlRfUkVRVUVTVF9USU1FT1VUOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTkVUV09SSyxcbiAgICBjb2RlOiBcIkNMSUVOVF9SRVFVRVNUX1RJTUVPVVRcIixcbiAgICBtZXNzYWdlOiBcIlJlcXVlc3QgdGltZWQgb3V0IHdhaXRpbmcgZm9yIGEgcmVwbHkuXCIsXG4gIH0sXG4gIENMSUVOVF9SRVFVRVNUX0VSUk9SOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTkVUV09SSyxcbiAgICBjb2RlOiBcIkNMSUVOVF9SRVFVRVNUX0VSUk9SXCIsXG4gICAgbWVzc2FnZTogXCJUaGVyZSB3YXMgYSBwcm9ibGVtIHdpdGggeW91ciByZXF1ZXN0LlwiLFxuICB9LFxuICBDTElFTlRfR1JBUEhRTF9SRVFVRVNUX0VSUk9SOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTkVUV09SSyxcbiAgICBjb2RlOiBcIkNMSUVOVF9HUkFQSFFMX1JFUVVFU1RfRVJST1JcIixcbiAgICBtZXNzYWdlOiBcIlRoZXJlIHdhcyBhIHByb2JsZW0gd2l0aCB5b3VyIHJlcXVlc3QuXCIsXG4gIH0sXG4gIENMSUVOVF9SQVRFX0xJTUlURUQ6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5NRVJDSEFOVCxcbiAgICBjb2RlOiBcIkNMSUVOVF9SQVRFX0xJTUlURURcIixcbiAgICBtZXNzYWdlOiBcIllvdSBhcmUgYmVpbmcgcmF0ZS1saW1pdGVkOyBwbGVhc2UgdHJ5IGFnYWluIGluIGEgZmV3IG1pbnV0ZXMuXCIsXG4gIH0sXG4gIENMSUVOVF9BVVRIT1JJWkFUSU9OX0lOU1VGRklDSUVOVDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiQ0xJRU5UX0FVVEhPUklaQVRJT05fSU5TVUZGSUNJRU5UXCIsXG4gICAgbWVzc2FnZTogXCJUaGUgYXV0aG9yaXphdGlvbiB1c2VkIGhhcyBpbnN1ZmZpY2llbnQgcHJpdmlsZWdlcy5cIixcbiAgfSxcbiAgQ0xJRU5UX0FVVEhPUklaQVRJT05fSU5WQUxJRDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiQ0xJRU5UX0FVVEhPUklaQVRJT05fSU5WQUxJRFwiLFxuICAgIG1lc3NhZ2U6XG4gICAgICBcIkVpdGhlciB0aGUgY2xpZW50IHRva2VuIGhhcyBleHBpcmVkIGFuZCBhIG5ldyBvbmUgc2hvdWxkIGJlIGdlbmVyYXRlZCBvciB0aGUgdG9rZW5pemF0aW9uIGtleSBoYXMgYmVlbiBkZWFjdGl2YXRlZCBvciBkZWxldGVkLlwiLFxuICB9LFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/get-configuration.js":
/*!****************************************************************!*\
  !*** ./node_modules/braintree-web/client/get-configuration.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar request = __webpack_require__(/*! ./request */ \"(ssr)/./node_modules/braintree-web/client/request/index.js\");\nvar uuid = __webpack_require__(/*! @braintree/uuid */ \"(ssr)/./node_modules/@braintree/uuid/index.js\");\nvar constants = __webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/client/errors.js\");\nvar GraphQL = __webpack_require__(/*! ./request/graphql */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/index.js\");\nvar GRAPHQL_URLS = (__webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").GRAPHQL_URLS);\nvar isDateStringBeforeOrOn = __webpack_require__(/*! ../lib/is-date-string-before-or-on */ \"(ssr)/./node_modules/braintree-web/lib/is-date-string-before-or-on.js\");\n\nvar BRAINTREE_VERSION = (__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/braintree-web/client/constants.js\").BRAINTREE_VERSION);\n\nfunction getConfiguration(authData) {\n  return new Promise(function (resolve, reject) {\n    var configuration, attrs, configUrl, reqOptions;\n    var sessionId = uuid();\n    var analyticsMetadata = {\n      merchantAppId: window.location.host,\n      platform: constants.PLATFORM,\n      sdkVersion: constants.VERSION,\n      source: constants.SOURCE,\n      // NEXT_MAJOR_VERSION remove one of these to not duplicate data. Target parity with mobile platforms approach.\n      integration: constants.INTEGRATION,\n      integrationType: constants.INTEGRATION,\n      sessionId: sessionId,\n    };\n\n    attrs = authData.attrs;\n    configUrl = authData.configUrl;\n\n    attrs._meta = analyticsMetadata;\n    attrs.braintreeLibraryVersion = constants.BRAINTREE_LIBRARY_VERSION;\n    attrs.configVersion = \"3\";\n\n    reqOptions = {\n      url: configUrl,\n      method: \"GET\",\n      data: attrs,\n    };\n\n    if (attrs.authorizationFingerprint && authData.graphQL) {\n      if (isDateStringBeforeOrOn(authData.graphQL.date, BRAINTREE_VERSION)) {\n        reqOptions.graphQL = new GraphQL({\n          graphQL: {\n            url: authData.graphQL.url,\n            features: [\"configuration\"],\n          },\n        });\n      }\n\n      reqOptions.metadata = analyticsMetadata;\n    } else if (attrs.tokenizationKey) {\n      reqOptions.graphQL = new GraphQL({\n        graphQL: {\n          url: GRAPHQL_URLS[authData.environment],\n          features: [\"configuration\"],\n        },\n      });\n\n      reqOptions.metadata = analyticsMetadata;\n    }\n\n    // NEXT_MAJOR_VERSION\n    // there are various issues with the config endpoint where the values returned\n    // do not match the values from the merchant account id passed into a client token\n    // we need to update the configuration request endpoint to be able to pass the\n    // correct values. The following ones are incorrect\n    // * applePayWeb - definitely supportedNetworks, which compiles all the card\n    //    networks from all the merchant accounts instead of providing just the\n    //    ones from the specified one. The same is probably true for ios apple pay\n    //    Also the merchantidentifier\n    // NEXT_MAJOR_VERSION Allow passing in merchant account id when creating the component\n    // to fetch the config for that merchant account id (particularly helpful when using\n    // a tokenization key for authorization)\n    request(reqOptions, function (err, response, status) {\n      var errorTemplate;\n\n      if (err) {\n        if (status === 403) {\n          errorTemplate = errors.CLIENT_AUTHORIZATION_INSUFFICIENT;\n        } else if (status === 401) {\n          errorTemplate = errors.CLIENT_AUTHORIZATION_INVALID;\n        } else {\n          errorTemplate = errors.CLIENT_GATEWAY_NETWORK;\n        }\n\n        reject(\n          new BraintreeError({\n            type: errorTemplate.type,\n            code: errorTemplate.code,\n            message: errorTemplate.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n\n        return;\n      }\n\n      configuration = {\n        authorizationType: attrs.tokenizationKey\n          ? \"TOKENIZATION_KEY\"\n          : \"CLIENT_TOKEN\",\n        authorizationFingerprint: attrs.authorizationFingerprint,\n        analyticsMetadata: analyticsMetadata,\n        gatewayConfiguration: response,\n      };\n\n      resolve(configuration);\n    });\n  });\n}\n\nmodule.exports = {\n  getConfiguration: wrapPromise(getConfiguration),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvZ2V0LWNvbmZpZ3VyYXRpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIscUJBQXFCLG1CQUFPLENBQUMseUZBQXdCO0FBQ3JELGtCQUFrQixtQkFBTyxDQUFDLGtHQUF5QjtBQUNuRCxjQUFjLG1CQUFPLENBQUMsNkVBQVc7QUFDakMsV0FBVyxtQkFBTyxDQUFDLHNFQUFpQjtBQUNwQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBa0I7QUFDMUMsYUFBYSxtQkFBTyxDQUFDLHFFQUFVO0FBQy9CLGNBQWMsbUJBQU8sQ0FBQyw2RkFBbUI7QUFDekMsbUJBQW1CLGlIQUF3QztBQUMzRCw2QkFBNkIsbUJBQU8sQ0FBQyxpSEFBb0M7O0FBRXpFLHdCQUF3QixvSEFBd0M7O0FBRWhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUOztBQUVBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87O0FBRVA7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLFVBQVU7QUFDVjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvZ2V0LWNvbmZpZ3VyYXRpb24uanM/MTBjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIEJyYWludHJlZUVycm9yID0gcmVxdWlyZShcIi4uL2xpYi9icmFpbnRyZWUtZXJyb3JcIik7XG52YXIgd3JhcFByb21pc2UgPSByZXF1aXJlKFwiQGJyYWludHJlZS93cmFwLXByb21pc2VcIik7XG52YXIgcmVxdWVzdCA9IHJlcXVpcmUoXCIuL3JlcXVlc3RcIik7XG52YXIgdXVpZCA9IHJlcXVpcmUoXCJAYnJhaW50cmVlL3V1aWRcIik7XG52YXIgY29uc3RhbnRzID0gcmVxdWlyZShcIi4uL2xpYi9jb25zdGFudHNcIik7XG52YXIgZXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xudmFyIEdyYXBoUUwgPSByZXF1aXJlKFwiLi9yZXF1ZXN0L2dyYXBocWxcIik7XG52YXIgR1JBUEhRTF9VUkxTID0gcmVxdWlyZShcIi4uL2xpYi9jb25zdGFudHNcIikuR1JBUEhRTF9VUkxTO1xudmFyIGlzRGF0ZVN0cmluZ0JlZm9yZU9yT24gPSByZXF1aXJlKFwiLi4vbGliL2lzLWRhdGUtc3RyaW5nLWJlZm9yZS1vci1vblwiKTtcblxudmFyIEJSQUlOVFJFRV9WRVJTSU9OID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpLkJSQUlOVFJFRV9WRVJTSU9OO1xuXG5mdW5jdGlvbiBnZXRDb25maWd1cmF0aW9uKGF1dGhEYXRhKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgdmFyIGNvbmZpZ3VyYXRpb24sIGF0dHJzLCBjb25maWdVcmwsIHJlcU9wdGlvbnM7XG4gICAgdmFyIHNlc3Npb25JZCA9IHV1aWQoKTtcbiAgICB2YXIgYW5hbHl0aWNzTWV0YWRhdGEgPSB7XG4gICAgICBtZXJjaGFudEFwcElkOiB3aW5kb3cubG9jYXRpb24uaG9zdCxcbiAgICAgIHBsYXRmb3JtOiBjb25zdGFudHMuUExBVEZPUk0sXG4gICAgICBzZGtWZXJzaW9uOiBjb25zdGFudHMuVkVSU0lPTixcbiAgICAgIHNvdXJjZTogY29uc3RhbnRzLlNPVVJDRSxcbiAgICAgIC8vIE5FWFRfTUFKT1JfVkVSU0lPTiByZW1vdmUgb25lIG9mIHRoZXNlIHRvIG5vdCBkdXBsaWNhdGUgZGF0YS4gVGFyZ2V0IHBhcml0eSB3aXRoIG1vYmlsZSBwbGF0Zm9ybXMgYXBwcm9hY2guXG4gICAgICBpbnRlZ3JhdGlvbjogY29uc3RhbnRzLklOVEVHUkFUSU9OLFxuICAgICAgaW50ZWdyYXRpb25UeXBlOiBjb25zdGFudHMuSU5URUdSQVRJT04sXG4gICAgICBzZXNzaW9uSWQ6IHNlc3Npb25JZCxcbiAgICB9O1xuXG4gICAgYXR0cnMgPSBhdXRoRGF0YS5hdHRycztcbiAgICBjb25maWdVcmwgPSBhdXRoRGF0YS5jb25maWdVcmw7XG5cbiAgICBhdHRycy5fbWV0YSA9IGFuYWx5dGljc01ldGFkYXRhO1xuICAgIGF0dHJzLmJyYWludHJlZUxpYnJhcnlWZXJzaW9uID0gY29uc3RhbnRzLkJSQUlOVFJFRV9MSUJSQVJZX1ZFUlNJT047XG4gICAgYXR0cnMuY29uZmlnVmVyc2lvbiA9IFwiM1wiO1xuXG4gICAgcmVxT3B0aW9ucyA9IHtcbiAgICAgIHVybDogY29uZmlnVXJsLFxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgZGF0YTogYXR0cnMsXG4gICAgfTtcblxuICAgIGlmIChhdHRycy5hdXRob3JpemF0aW9uRmluZ2VycHJpbnQgJiYgYXV0aERhdGEuZ3JhcGhRTCkge1xuICAgICAgaWYgKGlzRGF0ZVN0cmluZ0JlZm9yZU9yT24oYXV0aERhdGEuZ3JhcGhRTC5kYXRlLCBCUkFJTlRSRUVfVkVSU0lPTikpIHtcbiAgICAgICAgcmVxT3B0aW9ucy5ncmFwaFFMID0gbmV3IEdyYXBoUUwoe1xuICAgICAgICAgIGdyYXBoUUw6IHtcbiAgICAgICAgICAgIHVybDogYXV0aERhdGEuZ3JhcGhRTC51cmwsXG4gICAgICAgICAgICBmZWF0dXJlczogW1wiY29uZmlndXJhdGlvblwiXSxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmVxT3B0aW9ucy5tZXRhZGF0YSA9IGFuYWx5dGljc01ldGFkYXRhO1xuICAgIH0gZWxzZSBpZiAoYXR0cnMudG9rZW5pemF0aW9uS2V5KSB7XG4gICAgICByZXFPcHRpb25zLmdyYXBoUUwgPSBuZXcgR3JhcGhRTCh7XG4gICAgICAgIGdyYXBoUUw6IHtcbiAgICAgICAgICB1cmw6IEdSQVBIUUxfVVJMU1thdXRoRGF0YS5lbnZpcm9ubWVudF0sXG4gICAgICAgICAgZmVhdHVyZXM6IFtcImNvbmZpZ3VyYXRpb25cIl0sXG4gICAgICAgIH0sXG4gICAgICB9KTtcblxuICAgICAgcmVxT3B0aW9ucy5tZXRhZGF0YSA9IGFuYWx5dGljc01ldGFkYXRhO1xuICAgIH1cblxuICAgIC8vIE5FWFRfTUFKT1JfVkVSU0lPTlxuICAgIC8vIHRoZXJlIGFyZSB2YXJpb3VzIGlzc3VlcyB3aXRoIHRoZSBjb25maWcgZW5kcG9pbnQgd2hlcmUgdGhlIHZhbHVlcyByZXR1cm5lZFxuICAgIC8vIGRvIG5vdCBtYXRjaCB0aGUgdmFsdWVzIGZyb20gdGhlIG1lcmNoYW50IGFjY291bnQgaWQgcGFzc2VkIGludG8gYSBjbGllbnQgdG9rZW5cbiAgICAvLyB3ZSBuZWVkIHRvIHVwZGF0ZSB0aGUgY29uZmlndXJhdGlvbiByZXF1ZXN0IGVuZHBvaW50IHRvIGJlIGFibGUgdG8gcGFzcyB0aGVcbiAgICAvLyBjb3JyZWN0IHZhbHVlcy4gVGhlIGZvbGxvd2luZyBvbmVzIGFyZSBpbmNvcnJlY3RcbiAgICAvLyAqIGFwcGxlUGF5V2ViIC0gZGVmaW5pdGVseSBzdXBwb3J0ZWROZXR3b3Jrcywgd2hpY2ggY29tcGlsZXMgYWxsIHRoZSBjYXJkXG4gICAgLy8gICAgbmV0d29ya3MgZnJvbSBhbGwgdGhlIG1lcmNoYW50IGFjY291bnRzIGluc3RlYWQgb2YgcHJvdmlkaW5nIGp1c3QgdGhlXG4gICAgLy8gICAgb25lcyBmcm9tIHRoZSBzcGVjaWZpZWQgb25lLiBUaGUgc2FtZSBpcyBwcm9iYWJseSB0cnVlIGZvciBpb3MgYXBwbGUgcGF5XG4gICAgLy8gICAgQWxzbyB0aGUgbWVyY2hhbnRpZGVudGlmaWVyXG4gICAgLy8gTkVYVF9NQUpPUl9WRVJTSU9OIEFsbG93IHBhc3NpbmcgaW4gbWVyY2hhbnQgYWNjb3VudCBpZCB3aGVuIGNyZWF0aW5nIHRoZSBjb21wb25lbnRcbiAgICAvLyB0byBmZXRjaCB0aGUgY29uZmlnIGZvciB0aGF0IG1lcmNoYW50IGFjY291bnQgaWQgKHBhcnRpY3VsYXJseSBoZWxwZnVsIHdoZW4gdXNpbmdcbiAgICAvLyBhIHRva2VuaXphdGlvbiBrZXkgZm9yIGF1dGhvcml6YXRpb24pXG4gICAgcmVxdWVzdChyZXFPcHRpb25zLCBmdW5jdGlvbiAoZXJyLCByZXNwb25zZSwgc3RhdHVzKSB7XG4gICAgICB2YXIgZXJyb3JUZW1wbGF0ZTtcblxuICAgICAgaWYgKGVycikge1xuICAgICAgICBpZiAoc3RhdHVzID09PSA0MDMpIHtcbiAgICAgICAgICBlcnJvclRlbXBsYXRlID0gZXJyb3JzLkNMSUVOVF9BVVRIT1JJWkFUSU9OX0lOU1VGRklDSUVOVDtcbiAgICAgICAgfSBlbHNlIGlmIChzdGF0dXMgPT09IDQwMSkge1xuICAgICAgICAgIGVycm9yVGVtcGxhdGUgPSBlcnJvcnMuQ0xJRU5UX0FVVEhPUklaQVRJT05fSU5WQUxJRDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBlcnJvclRlbXBsYXRlID0gZXJyb3JzLkNMSUVOVF9HQVRFV0FZX05FVFdPUks7XG4gICAgICAgIH1cblxuICAgICAgICByZWplY3QoXG4gICAgICAgICAgbmV3IEJyYWludHJlZUVycm9yKHtcbiAgICAgICAgICAgIHR5cGU6IGVycm9yVGVtcGxhdGUudHlwZSxcbiAgICAgICAgICAgIGNvZGU6IGVycm9yVGVtcGxhdGUuY29kZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yVGVtcGxhdGUubWVzc2FnZSxcbiAgICAgICAgICAgIGRldGFpbHM6IHtcbiAgICAgICAgICAgICAgb3JpZ2luYWxFcnJvcjogZXJyLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uZmlndXJhdGlvbiA9IHtcbiAgICAgICAgYXV0aG9yaXphdGlvblR5cGU6IGF0dHJzLnRva2VuaXphdGlvbktleVxuICAgICAgICAgID8gXCJUT0tFTklaQVRJT05fS0VZXCJcbiAgICAgICAgICA6IFwiQ0xJRU5UX1RPS0VOXCIsXG4gICAgICAgIGF1dGhvcml6YXRpb25GaW5nZXJwcmludDogYXR0cnMuYXV0aG9yaXphdGlvbkZpbmdlcnByaW50LFxuICAgICAgICBhbmFseXRpY3NNZXRhZGF0YTogYW5hbHl0aWNzTWV0YWRhdGEsXG4gICAgICAgIGdhdGV3YXlDb25maWd1cmF0aW9uOiByZXNwb25zZSxcbiAgICAgIH07XG5cbiAgICAgIHJlc29sdmUoY29uZmlndXJhdGlvbik7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uZmlndXJhdGlvbjogd3JhcFByb21pc2UoZ2V0Q29uZmlndXJhdGlvbiksXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/get-configuration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/index.js":
/*!****************************************************!*\
  !*** ./node_modules/braintree-web/client/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar Client = __webpack_require__(/*! ./client */ \"(ssr)/./node_modules/braintree-web/client/client.js\");\nvar VERSION = \"3.99.0\";\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar sharedErrors = __webpack_require__(/*! ../lib/errors */ \"(ssr)/./node_modules/braintree-web/lib/errors.js\");\n\n/** @module braintree-web/client */\n\n/**\n * @function create\n * @description This function is the entry point for the <code>braintree.client</code> module. It is used for creating {@link Client} instances that service communication to Braintree servers.\n * @param {object} options Object containing all {@link Client} options:\n * @param {string} options.authorization A tokenizationKey or clientToken.\n * @param {callback} [callback] The second argument, <code>data</code>, is the {@link Client} instance.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * var createClient = require('braintree-web/client').create;\n *\n * createClient({\n *   authorization: CLIENT_AUTHORIZATION\n * }, function (createErr, clientInstance) {\n *   if (createErr) {\n *     if (createErr.code === 'CLIENT_AUTHORIZATION_INVALID') {\n *       // either the client token has expired, and a new one should be generated\n *       // or the tokenization key was deactivated or deleted\n *     } else {\n *       console.log('something went wrong creating the client instance', createErr);\n *     }\n *     return;\n *   }\n *\n *  // set up other components\n * });\n * @static\n */\nfunction create(options) {\n  if (!options.authorization) {\n    return Promise.reject(\n      new BraintreeError({\n        type: sharedErrors.INSTANTIATION_OPTION_REQUIRED.type,\n        code: sharedErrors.INSTANTIATION_OPTION_REQUIRED.code,\n        message:\n          \"options.authorization is required when instantiating a client.\",\n      })\n    );\n  }\n\n  return Client.initialize(options);\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `{@pkg version}`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIscUJBQXFCLG1CQUFPLENBQUMseUZBQXdCO0FBQ3JELGFBQWEsbUJBQU8sQ0FBQyxxRUFBVTtBQUMvQjtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLGtHQUF5QjtBQUNuRCxtQkFBbUIsbUJBQU8sQ0FBQyx1RUFBZTs7QUFFMUM7O0FBRUE7QUFDQTtBQUNBLHdIQUF3SCxjQUFjO0FBQ3RJLFdBQVcsUUFBUSwrQkFBK0IsY0FBYztBQUNoRSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVLDJEQUEyRCxjQUFjO0FBQzlGLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsYUFBYTtBQUN0RSxZQUFZO0FBQ1o7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2NsaWVudC9pbmRleC5qcz9lMjg4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQnJhaW50cmVlRXJyb3IgPSByZXF1aXJlKFwiLi4vbGliL2JyYWludHJlZS1lcnJvclwiKTtcbnZhciBDbGllbnQgPSByZXF1aXJlKFwiLi9jbGllbnRcIik7XG52YXIgVkVSU0lPTiA9IFwiMy45OS4wXCI7XG52YXIgd3JhcFByb21pc2UgPSByZXF1aXJlKFwiQGJyYWludHJlZS93cmFwLXByb21pc2VcIik7XG52YXIgc2hhcmVkRXJyb3JzID0gcmVxdWlyZShcIi4uL2xpYi9lcnJvcnNcIik7XG5cbi8qKiBAbW9kdWxlIGJyYWludHJlZS13ZWIvY2xpZW50ICovXG5cbi8qKlxuICogQGZ1bmN0aW9uIGNyZWF0ZVxuICogQGRlc2NyaXB0aW9uIFRoaXMgZnVuY3Rpb24gaXMgdGhlIGVudHJ5IHBvaW50IGZvciB0aGUgPGNvZGU+YnJhaW50cmVlLmNsaWVudDwvY29kZT4gbW9kdWxlLiBJdCBpcyB1c2VkIGZvciBjcmVhdGluZyB7QGxpbmsgQ2xpZW50fSBpbnN0YW5jZXMgdGhhdCBzZXJ2aWNlIGNvbW11bmljYXRpb24gdG8gQnJhaW50cmVlIHNlcnZlcnMuXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyBPYmplY3QgY29udGFpbmluZyBhbGwge0BsaW5rIENsaWVudH0gb3B0aW9uczpcbiAqIEBwYXJhbSB7c3RyaW5nfSBvcHRpb25zLmF1dGhvcml6YXRpb24gQSB0b2tlbml6YXRpb25LZXkgb3IgY2xpZW50VG9rZW4uXG4gKiBAcGFyYW0ge2NhbGxiYWNrfSBbY2FsbGJhY2tdIFRoZSBzZWNvbmQgYXJndW1lbnQsIDxjb2RlPmRhdGE8L2NvZGU+LCBpcyB0aGUge0BsaW5rIENsaWVudH0gaW5zdGFuY2UuXG4gKiBAcmV0dXJucyB7KFByb21pc2V8dm9pZCl9IFJldHVybnMgYSBwcm9taXNlIGlmIG5vIGNhbGxiYWNrIGlzIHByb3ZpZGVkLlxuICogQGV4YW1wbGVcbiAqIHZhciBjcmVhdGVDbGllbnQgPSByZXF1aXJlKCdicmFpbnRyZWUtd2ViL2NsaWVudCcpLmNyZWF0ZTtcbiAqXG4gKiBjcmVhdGVDbGllbnQoe1xuICogICBhdXRob3JpemF0aW9uOiBDTElFTlRfQVVUSE9SSVpBVElPTlxuICogfSwgZnVuY3Rpb24gKGNyZWF0ZUVyciwgY2xpZW50SW5zdGFuY2UpIHtcbiAqICAgaWYgKGNyZWF0ZUVycikge1xuICogICAgIGlmIChjcmVhdGVFcnIuY29kZSA9PT0gJ0NMSUVOVF9BVVRIT1JJWkFUSU9OX0lOVkFMSUQnKSB7XG4gKiAgICAgICAvLyBlaXRoZXIgdGhlIGNsaWVudCB0b2tlbiBoYXMgZXhwaXJlZCwgYW5kIGEgbmV3IG9uZSBzaG91bGQgYmUgZ2VuZXJhdGVkXG4gKiAgICAgICAvLyBvciB0aGUgdG9rZW5pemF0aW9uIGtleSB3YXMgZGVhY3RpdmF0ZWQgb3IgZGVsZXRlZFxuICogICAgIH0gZWxzZSB7XG4gKiAgICAgICBjb25zb2xlLmxvZygnc29tZXRoaW5nIHdlbnQgd3JvbmcgY3JlYXRpbmcgdGhlIGNsaWVudCBpbnN0YW5jZScsIGNyZWF0ZUVycik7XG4gKiAgICAgfVxuICogICAgIHJldHVybjtcbiAqICAgfVxuICpcbiAqICAvLyBzZXQgdXAgb3RoZXIgY29tcG9uZW50c1xuICogfSk7XG4gKiBAc3RhdGljXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZShvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucy5hdXRob3JpemF0aW9uKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFxuICAgICAgbmV3IEJyYWludHJlZUVycm9yKHtcbiAgICAgICAgdHlwZTogc2hhcmVkRXJyb3JzLklOU1RBTlRJQVRJT05fT1BUSU9OX1JFUVVJUkVELnR5cGUsXG4gICAgICAgIGNvZGU6IHNoYXJlZEVycm9ycy5JTlNUQU5USUFUSU9OX09QVElPTl9SRVFVSVJFRC5jb2RlLFxuICAgICAgICBtZXNzYWdlOlxuICAgICAgICAgIFwib3B0aW9ucy5hdXRob3JpemF0aW9uIGlzIHJlcXVpcmVkIHdoZW4gaW5zdGFudGlhdGluZyBhIGNsaWVudC5cIixcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBDbGllbnQuaW5pdGlhbGl6ZShvcHRpb25zKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZTogd3JhcFByb21pc2UoY3JlYXRlKSxcbiAgLyoqXG4gICAqIEBkZXNjcmlwdGlvbiBUaGUgY3VycmVudCB2ZXJzaW9uIG9mIHRoZSBTREssIGkuZS4gYHtAcGtnIHZlcnNpb259YC5cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICovXG4gIFZFUlNJT046IFZFUlNJT04sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/ajax-driver.js":
/*!******************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/ajax-driver.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar querystring = __webpack_require__(/*! ../../lib/querystring */ \"(ssr)/./node_modules/braintree-web/lib/querystring.js\");\nvar assign = (__webpack_require__(/*! ../../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar prepBody = __webpack_require__(/*! ./prep-body */ \"(ssr)/./node_modules/braintree-web/client/request/prep-body.js\");\nvar parseBody = __webpack_require__(/*! ./parse-body */ \"(ssr)/./node_modules/braintree-web/client/request/parse-body.js\");\nvar xhr = __webpack_require__(/*! ./xhr */ \"(ssr)/./node_modules/braintree-web/client/request/xhr.js\");\nvar isXHRAvailable = xhr.isAvailable;\nvar GraphQLRequest = __webpack_require__(/*! ./graphql/request */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/request.js\");\nvar DefaultRequest = __webpack_require__(/*! ./default-request */ \"(ssr)/./node_modules/braintree-web/client/request/default-request.js\");\n\nvar MAX_TCP_RETRYCOUNT = 1;\nvar TCP_PRECONNECT_BUG_STATUS_CODE = 408;\n\nfunction requestShouldRetry(status) {\n  return !status || status === TCP_PRECONNECT_BUG_STATUS_CODE;\n}\n\nfunction graphQLRequestShouldRetryWithClientApi(body) {\n  var errorClass =\n    !body.data &&\n    body.errors &&\n    body.errors[0] &&\n    body.errors[0].extensions &&\n    body.errors[0].extensions.errorClass;\n\n  return errorClass === \"UNKNOWN\" || errorClass === \"INTERNAL\";\n}\n\nfunction _requestWithRetry(options, tcpRetryCount, cb) {\n  var status, resBody, ajaxRequest, body, method, headers, parsedBody;\n  var url = options.url;\n  var graphQL = options.graphQL;\n  var timeout = options.timeout;\n  var req = xhr.getRequestObject();\n  var callback = cb;\n  var isGraphQLRequest = Boolean(\n    graphQL && graphQL.isGraphQLRequest(url, options.data)\n  );\n\n  options.headers = assign(\n    { \"Content-Type\": \"application/json\" },\n    options.headers\n  );\n\n  if (isGraphQLRequest) {\n    ajaxRequest = new GraphQLRequest(options);\n  } else {\n    ajaxRequest = new DefaultRequest(options);\n  }\n\n  url = ajaxRequest.getUrl();\n  body = ajaxRequest.getBody();\n  method = ajaxRequest.getMethod();\n  headers = ajaxRequest.getHeaders();\n\n  if (method === \"GET\") {\n    url = querystring.queryify(url, body);\n    body = null;\n  }\n\n  if (isXHRAvailable) {\n    req.onreadystatechange = function () {\n      if (req.readyState !== 4) {\n        return;\n      }\n\n      if (req.status === 0 && isGraphQLRequest) {\n        // If a merchant experiences a connection\n        // issue to the GraphQL endpoint (possibly\n        // due to a Content Security Policy), retry\n        // the request against the old client API.\n        delete options.graphQL;\n        _requestWithRetry(options, tcpRetryCount, cb);\n\n        return;\n      }\n\n      parsedBody = parseBody(req.responseText);\n      resBody = ajaxRequest.adaptResponseBody(parsedBody);\n      status = ajaxRequest.determineStatus(req.status, parsedBody);\n\n      if (status >= 400 || status < 200) {\n        if (\n          isGraphQLRequest &&\n          graphQLRequestShouldRetryWithClientApi(parsedBody)\n        ) {\n          delete options.graphQL;\n          _requestWithRetry(options, tcpRetryCount, cb);\n\n          return;\n        }\n\n        if (tcpRetryCount < MAX_TCP_RETRYCOUNT && requestShouldRetry(status)) {\n          tcpRetryCount++;\n          _requestWithRetry(options, tcpRetryCount, cb);\n\n          return;\n        }\n        callback(resBody || \"error\", null, status || 500);\n      } else {\n        callback(null, resBody, status);\n      }\n    };\n  } else {\n    if (options.headers) {\n      url = querystring.queryify(url, headers);\n    }\n\n    req.onload = function () {\n      callback(null, parseBody(req.responseText), req.status);\n    };\n\n    req.onerror = function () {\n      // XDomainRequest does not report a body or status for errors, so\n      // hardcode to 'error' and 500, respectively\n      callback(\"error\", null, 500);\n    };\n\n    // This must remain for IE9 to work\n    req.onprogress = function () {};\n\n    req.ontimeout = function () {\n      callback(\"timeout\", null, -1);\n    };\n  }\n\n  try {\n    req.open(method, url, true);\n  } catch (requestOpenError) {\n    // If a merchant has a Content Security Policy and they have\n    // not allowed our endpoints, some browsers may\n    // synchronously throw an error. If it is not a GraphQL\n    // request, we throw the error. If it is a GraphQL request\n    // we remove the GraphQL option and try the request against\n    // the old client API.\n    if (!isGraphQLRequest) {\n      throw requestOpenError;\n    }\n\n    delete options.graphQL;\n\n    _requestWithRetry(options, tcpRetryCount, cb);\n\n    return;\n  }\n\n  req.timeout = timeout;\n\n  if (isXHRAvailable) {\n    Object.keys(headers).forEach(function (headerKey) {\n      req.setRequestHeader(headerKey, headers[headerKey]);\n    });\n  }\n\n  try {\n    req.send(prepBody(method, body));\n  } catch (e) {\n    /* ignored */\n  }\n}\n\nfunction request(options, cb) {\n  _requestWithRetry(options, 0, cb);\n}\n\nmodule.exports = {\n  request: request,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9hamF4LWRyaXZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixrQkFBa0IsbUJBQU8sQ0FBQyxvRkFBdUI7QUFDakQsYUFBYSx3R0FBa0M7QUFDL0MsZUFBZSxtQkFBTyxDQUFDLG1GQUFhO0FBQ3BDLGdCQUFnQixtQkFBTyxDQUFDLHFGQUFjO0FBQ3RDLFVBQVUsbUJBQU8sQ0FBQyx1RUFBTztBQUN6QjtBQUNBLHFCQUFxQixtQkFBTyxDQUFDLCtGQUFtQjtBQUNoRCxxQkFBcUIsbUJBQU8sQ0FBQywrRkFBbUI7O0FBRWhEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLG9DQUFvQztBQUMxQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9hamF4LWRyaXZlci5qcz9kYzRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgcXVlcnlzdHJpbmcgPSByZXF1aXJlKFwiLi4vLi4vbGliL3F1ZXJ5c3RyaW5nXCIpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoXCIuLi8uLi9saWIvYXNzaWduXCIpLmFzc2lnbjtcbnZhciBwcmVwQm9keSA9IHJlcXVpcmUoXCIuL3ByZXAtYm9keVwiKTtcbnZhciBwYXJzZUJvZHkgPSByZXF1aXJlKFwiLi9wYXJzZS1ib2R5XCIpO1xudmFyIHhociA9IHJlcXVpcmUoXCIuL3hoclwiKTtcbnZhciBpc1hIUkF2YWlsYWJsZSA9IHhoci5pc0F2YWlsYWJsZTtcbnZhciBHcmFwaFFMUmVxdWVzdCA9IHJlcXVpcmUoXCIuL2dyYXBocWwvcmVxdWVzdFwiKTtcbnZhciBEZWZhdWx0UmVxdWVzdCA9IHJlcXVpcmUoXCIuL2RlZmF1bHQtcmVxdWVzdFwiKTtcblxudmFyIE1BWF9UQ1BfUkVUUllDT1VOVCA9IDE7XG52YXIgVENQX1BSRUNPTk5FQ1RfQlVHX1NUQVRVU19DT0RFID0gNDA4O1xuXG5mdW5jdGlvbiByZXF1ZXN0U2hvdWxkUmV0cnkoc3RhdHVzKSB7XG4gIHJldHVybiAhc3RhdHVzIHx8IHN0YXR1cyA9PT0gVENQX1BSRUNPTk5FQ1RfQlVHX1NUQVRVU19DT0RFO1xufVxuXG5mdW5jdGlvbiBncmFwaFFMUmVxdWVzdFNob3VsZFJldHJ5V2l0aENsaWVudEFwaShib2R5KSB7XG4gIHZhciBlcnJvckNsYXNzID1cbiAgICAhYm9keS5kYXRhICYmXG4gICAgYm9keS5lcnJvcnMgJiZcbiAgICBib2R5LmVycm9yc1swXSAmJlxuICAgIGJvZHkuZXJyb3JzWzBdLmV4dGVuc2lvbnMgJiZcbiAgICBib2R5LmVycm9yc1swXS5leHRlbnNpb25zLmVycm9yQ2xhc3M7XG5cbiAgcmV0dXJuIGVycm9yQ2xhc3MgPT09IFwiVU5LTk9XTlwiIHx8IGVycm9yQ2xhc3MgPT09IFwiSU5URVJOQUxcIjtcbn1cblxuZnVuY3Rpb24gX3JlcXVlc3RXaXRoUmV0cnkob3B0aW9ucywgdGNwUmV0cnlDb3VudCwgY2IpIHtcbiAgdmFyIHN0YXR1cywgcmVzQm9keSwgYWpheFJlcXVlc3QsIGJvZHksIG1ldGhvZCwgaGVhZGVycywgcGFyc2VkQm9keTtcbiAgdmFyIHVybCA9IG9wdGlvbnMudXJsO1xuICB2YXIgZ3JhcGhRTCA9IG9wdGlvbnMuZ3JhcGhRTDtcbiAgdmFyIHRpbWVvdXQgPSBvcHRpb25zLnRpbWVvdXQ7XG4gIHZhciByZXEgPSB4aHIuZ2V0UmVxdWVzdE9iamVjdCgpO1xuICB2YXIgY2FsbGJhY2sgPSBjYjtcbiAgdmFyIGlzR3JhcGhRTFJlcXVlc3QgPSBCb29sZWFuKFxuICAgIGdyYXBoUUwgJiYgZ3JhcGhRTC5pc0dyYXBoUUxSZXF1ZXN0KHVybCwgb3B0aW9ucy5kYXRhKVxuICApO1xuXG4gIG9wdGlvbnMuaGVhZGVycyA9IGFzc2lnbihcbiAgICB7IFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgb3B0aW9ucy5oZWFkZXJzXG4gICk7XG5cbiAgaWYgKGlzR3JhcGhRTFJlcXVlc3QpIHtcbiAgICBhamF4UmVxdWVzdCA9IG5ldyBHcmFwaFFMUmVxdWVzdChvcHRpb25zKTtcbiAgfSBlbHNlIHtcbiAgICBhamF4UmVxdWVzdCA9IG5ldyBEZWZhdWx0UmVxdWVzdChvcHRpb25zKTtcbiAgfVxuXG4gIHVybCA9IGFqYXhSZXF1ZXN0LmdldFVybCgpO1xuICBib2R5ID0gYWpheFJlcXVlc3QuZ2V0Qm9keSgpO1xuICBtZXRob2QgPSBhamF4UmVxdWVzdC5nZXRNZXRob2QoKTtcbiAgaGVhZGVycyA9IGFqYXhSZXF1ZXN0LmdldEhlYWRlcnMoKTtcblxuICBpZiAobWV0aG9kID09PSBcIkdFVFwiKSB7XG4gICAgdXJsID0gcXVlcnlzdHJpbmcucXVlcnlpZnkodXJsLCBib2R5KTtcbiAgICBib2R5ID0gbnVsbDtcbiAgfVxuXG4gIGlmIChpc1hIUkF2YWlsYWJsZSkge1xuICAgIHJlcS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAocmVxLnJlYWR5U3RhdGUgIT09IDQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVxLnN0YXR1cyA9PT0gMCAmJiBpc0dyYXBoUUxSZXF1ZXN0KSB7XG4gICAgICAgIC8vIElmIGEgbWVyY2hhbnQgZXhwZXJpZW5jZXMgYSBjb25uZWN0aW9uXG4gICAgICAgIC8vIGlzc3VlIHRvIHRoZSBHcmFwaFFMIGVuZHBvaW50IChwb3NzaWJseVxuICAgICAgICAvLyBkdWUgdG8gYSBDb250ZW50IFNlY3VyaXR5IFBvbGljeSksIHJldHJ5XG4gICAgICAgIC8vIHRoZSByZXF1ZXN0IGFnYWluc3QgdGhlIG9sZCBjbGllbnQgQVBJLlxuICAgICAgICBkZWxldGUgb3B0aW9ucy5ncmFwaFFMO1xuICAgICAgICBfcmVxdWVzdFdpdGhSZXRyeShvcHRpb25zLCB0Y3BSZXRyeUNvdW50LCBjYik7XG5cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBwYXJzZWRCb2R5ID0gcGFyc2VCb2R5KHJlcS5yZXNwb25zZVRleHQpO1xuICAgICAgcmVzQm9keSA9IGFqYXhSZXF1ZXN0LmFkYXB0UmVzcG9uc2VCb2R5KHBhcnNlZEJvZHkpO1xuICAgICAgc3RhdHVzID0gYWpheFJlcXVlc3QuZGV0ZXJtaW5lU3RhdHVzKHJlcS5zdGF0dXMsIHBhcnNlZEJvZHkpO1xuXG4gICAgICBpZiAoc3RhdHVzID49IDQwMCB8fCBzdGF0dXMgPCAyMDApIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgIGlzR3JhcGhRTFJlcXVlc3QgJiZcbiAgICAgICAgICBncmFwaFFMUmVxdWVzdFNob3VsZFJldHJ5V2l0aENsaWVudEFwaShwYXJzZWRCb2R5KVxuICAgICAgICApIHtcbiAgICAgICAgICBkZWxldGUgb3B0aW9ucy5ncmFwaFFMO1xuICAgICAgICAgIF9yZXF1ZXN0V2l0aFJldHJ5KG9wdGlvbnMsIHRjcFJldHJ5Q291bnQsIGNiKTtcblxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0Y3BSZXRyeUNvdW50IDwgTUFYX1RDUF9SRVRSWUNPVU5UICYmIHJlcXVlc3RTaG91bGRSZXRyeShzdGF0dXMpKSB7XG4gICAgICAgICAgdGNwUmV0cnlDb3VudCsrO1xuICAgICAgICAgIF9yZXF1ZXN0V2l0aFJldHJ5KG9wdGlvbnMsIHRjcFJldHJ5Q291bnQsIGNiKTtcblxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjYWxsYmFjayhyZXNCb2R5IHx8IFwiZXJyb3JcIiwgbnVsbCwgc3RhdHVzIHx8IDUwMCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYWxsYmFjayhudWxsLCByZXNCb2R5LCBzdGF0dXMpO1xuICAgICAgfVxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgaWYgKG9wdGlvbnMuaGVhZGVycykge1xuICAgICAgdXJsID0gcXVlcnlzdHJpbmcucXVlcnlpZnkodXJsLCBoZWFkZXJzKTtcbiAgICB9XG5cbiAgICByZXEub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgY2FsbGJhY2sobnVsbCwgcGFyc2VCb2R5KHJlcS5yZXNwb25zZVRleHQpLCByZXEuc3RhdHVzKTtcbiAgICB9O1xuXG4gICAgcmVxLm9uZXJyb3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBYRG9tYWluUmVxdWVzdCBkb2VzIG5vdCByZXBvcnQgYSBib2R5IG9yIHN0YXR1cyBmb3IgZXJyb3JzLCBzb1xuICAgICAgLy8gaGFyZGNvZGUgdG8gJ2Vycm9yJyBhbmQgNTAwLCByZXNwZWN0aXZlbHlcbiAgICAgIGNhbGxiYWNrKFwiZXJyb3JcIiwgbnVsbCwgNTAwKTtcbiAgICB9O1xuXG4gICAgLy8gVGhpcyBtdXN0IHJlbWFpbiBmb3IgSUU5IHRvIHdvcmtcbiAgICByZXEub25wcm9ncmVzcyA9IGZ1bmN0aW9uICgpIHt9O1xuXG4gICAgcmVxLm9udGltZW91dCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNhbGxiYWNrKFwidGltZW91dFwiLCBudWxsLCAtMSk7XG4gICAgfTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmVxLm9wZW4obWV0aG9kLCB1cmwsIHRydWUpO1xuICB9IGNhdGNoIChyZXF1ZXN0T3BlbkVycm9yKSB7XG4gICAgLy8gSWYgYSBtZXJjaGFudCBoYXMgYSBDb250ZW50IFNlY3VyaXR5IFBvbGljeSBhbmQgdGhleSBoYXZlXG4gICAgLy8gbm90IGFsbG93ZWQgb3VyIGVuZHBvaW50cywgc29tZSBicm93c2VycyBtYXlcbiAgICAvLyBzeW5jaHJvbm91c2x5IHRocm93IGFuIGVycm9yLiBJZiBpdCBpcyBub3QgYSBHcmFwaFFMXG4gICAgLy8gcmVxdWVzdCwgd2UgdGhyb3cgdGhlIGVycm9yLiBJZiBpdCBpcyBhIEdyYXBoUUwgcmVxdWVzdFxuICAgIC8vIHdlIHJlbW92ZSB0aGUgR3JhcGhRTCBvcHRpb24gYW5kIHRyeSB0aGUgcmVxdWVzdCBhZ2FpbnN0XG4gICAgLy8gdGhlIG9sZCBjbGllbnQgQVBJLlxuICAgIGlmICghaXNHcmFwaFFMUmVxdWVzdCkge1xuICAgICAgdGhyb3cgcmVxdWVzdE9wZW5FcnJvcjtcbiAgICB9XG5cbiAgICBkZWxldGUgb3B0aW9ucy5ncmFwaFFMO1xuXG4gICAgX3JlcXVlc3RXaXRoUmV0cnkob3B0aW9ucywgdGNwUmV0cnlDb3VudCwgY2IpO1xuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcmVxLnRpbWVvdXQgPSB0aW1lb3V0O1xuXG4gIGlmIChpc1hIUkF2YWlsYWJsZSkge1xuICAgIE9iamVjdC5rZXlzKGhlYWRlcnMpLmZvckVhY2goZnVuY3Rpb24gKGhlYWRlcktleSkge1xuICAgICAgcmVxLnNldFJlcXVlc3RIZWFkZXIoaGVhZGVyS2V5LCBoZWFkZXJzW2hlYWRlcktleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICByZXEuc2VuZChwcmVwQm9keShtZXRob2QsIGJvZHkpKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8qIGlnbm9yZWQgKi9cbiAgfVxufVxuXG5mdW5jdGlvbiByZXF1ZXN0KG9wdGlvbnMsIGNiKSB7XG4gIF9yZXF1ZXN0V2l0aFJldHJ5KG9wdGlvbnMsIDAsIGNiKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlcXVlc3Q6IHJlcXVlc3QsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/ajax-driver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/default-request.js":
/*!**********************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/default-request.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\nfunction DefaultRequest(options) {\n  this._url = options.url;\n  this._data = options.data;\n  this._method = options.method;\n  this._headers = options.headers;\n}\n\nDefaultRequest.prototype.getUrl = function () {\n  return this._url;\n};\n\nDefaultRequest.prototype.getBody = function () {\n  return this._data;\n};\n\nDefaultRequest.prototype.getMethod = function () {\n  return this._method;\n};\n\nDefaultRequest.prototype.getHeaders = function () {\n  return this._headers;\n};\n\nDefaultRequest.prototype.adaptResponseBody = function (parsedBody) {\n  return parsedBody;\n};\n\nDefaultRequest.prototype.determineStatus = function (status) {\n  return status;\n};\n\nmodule.exports = DefaultRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9kZWZhdWx0LXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2NsaWVudC9yZXF1ZXN0L2RlZmF1bHQtcmVxdWVzdC5qcz8zMjE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBEZWZhdWx0UmVxdWVzdChvcHRpb25zKSB7XG4gIHRoaXMuX3VybCA9IG9wdGlvbnMudXJsO1xuICB0aGlzLl9kYXRhID0gb3B0aW9ucy5kYXRhO1xuICB0aGlzLl9tZXRob2QgPSBvcHRpb25zLm1ldGhvZDtcbiAgdGhpcy5faGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcbn1cblxuRGVmYXVsdFJlcXVlc3QucHJvdG90eXBlLmdldFVybCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuX3VybDtcbn07XG5cbkRlZmF1bHRSZXF1ZXN0LnByb3RvdHlwZS5nZXRCb2R5ID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5fZGF0YTtcbn07XG5cbkRlZmF1bHRSZXF1ZXN0LnByb3RvdHlwZS5nZXRNZXRob2QgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl9tZXRob2Q7XG59O1xuXG5EZWZhdWx0UmVxdWVzdC5wcm90b3R5cGUuZ2V0SGVhZGVycyA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuX2hlYWRlcnM7XG59O1xuXG5EZWZhdWx0UmVxdWVzdC5wcm90b3R5cGUuYWRhcHRSZXNwb25zZUJvZHkgPSBmdW5jdGlvbiAocGFyc2VkQm9keSkge1xuICByZXR1cm4gcGFyc2VkQm9keTtcbn07XG5cbkRlZmF1bHRSZXF1ZXN0LnByb3RvdHlwZS5kZXRlcm1pbmVTdGF0dXMgPSBmdW5jdGlvbiAoc3RhdHVzKSB7XG4gIHJldHVybiBzdGF0dXM7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlZmF1bHRSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/default-request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/configuration.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/graphql/adapters/configuration.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar errorResponseAdapter = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/error.js\");\nvar assign = (__webpack_require__(/*! ../../../../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\n\n/* eslint-disable camelcase */\nvar cardTypeTransforms = {\n  creditCard: {\n    AMERICAN_EXPRESS: \"American Express\",\n    DISCOVER: \"Discover\",\n    INTERNATIONAL_MAESTRO: \"Maestro\",\n    JCB: \"JCB\",\n    MASTERCARD: \"MasterCard\",\n    SOLO: \"Solo\",\n    UK_MAESTRO: \"UK Maestro\",\n    UNION_PAY: \"UnionPay\",\n    VISA: \"Visa\",\n    ELO: \"Elo\",\n    HIPER: \"Hiper\",\n    HIPERCARD: \"Hipercard\",\n  },\n  applePayWeb: {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    DISCOVER: \"discover\",\n    AMERICAN_EXPRESS: \"amex\",\n    INTERNATIONAL_MAESTRO: \"maestro\",\n    ELO: \"elo\",\n  },\n  visaCheckout: {\n    VISA: \"Visa\",\n    MASTERCARD: \"MasterCard\",\n    DISCOVER: \"Discover\",\n    AMERICAN_EXPRESS: \"American Express\",\n  },\n  googlePay: {\n    VISA: \"visa\",\n    MASTERCARD: \"mastercard\",\n    DISCOVER: \"discover\",\n    AMERICAN_EXPRESS: \"amex\",\n    INTERNATIONAL_MAESTRO: \"maestro\",\n    ELO: \"elo\",\n  },\n  masterpass: {\n    VISA: \"visa\",\n    MASTERCARD: \"master\",\n    DISCOVER: \"discover\",\n    AMERICAN_EXPRESS: \"amex\",\n    DINERS: \"diners\",\n    INTERNATIONAL_MAESTRO: \"maestro\",\n    JCB: \"jcb\",\n  },\n};\n/* eslint-enable camelcase */\n\nfunction configurationResponseAdapter(responseBody, ctx) {\n  var adaptedResponse;\n\n  if (responseBody.data && !responseBody.errors) {\n    adaptedResponse = adaptConfigurationResponseBody(responseBody, ctx);\n  } else {\n    adaptedResponse = errorResponseAdapter(responseBody);\n  }\n\n  return adaptedResponse;\n}\n\nfunction adaptConfigurationResponseBody(body, ctx) {\n  var configuration = body.data.clientConfiguration;\n  var response;\n\n  response = {\n    environment: configuration.environment.toLowerCase(),\n    clientApiUrl: configuration.clientApiUrl,\n    assetsUrl: configuration.assetsUrl,\n    analytics: {\n      url: configuration.analyticsUrl,\n    },\n    merchantId: configuration.merchantId,\n    venmo: \"off\",\n  };\n\n  if (configuration.supportedFeatures) {\n    response.graphQL = {\n      url: ctx._graphQL._config.url,\n      features: configuration.supportedFeatures.map(function (feature) {\n        return feature.toLowerCase();\n      }),\n    };\n  }\n\n  if (configuration.braintreeApi) {\n    response.braintreeApi = configuration.braintreeApi;\n  }\n\n  if (configuration.applePayWeb) {\n    response.applePayWeb = configuration.applePayWeb;\n    response.applePayWeb.supportedNetworks = mapCardTypes(\n      configuration.applePayWeb.supportedCardBrands,\n      cardTypeTransforms.applePayWeb\n    );\n\n    delete response.applePayWeb.supportedCardBrands;\n  }\n\n  if (configuration.ideal) {\n    response.ideal = configuration.ideal;\n  }\n\n  if (configuration.kount) {\n    response.kount = {\n      kountMerchantId: configuration.kount.merchantId,\n    };\n  }\n\n  if (configuration.creditCard) {\n    response.challenges = configuration.creditCard.challenges.map(function (\n      challenge\n    ) {\n      return challenge.toLowerCase();\n    });\n\n    response.creditCards = {\n      supportedCardTypes: mapCardTypes(\n        configuration.creditCard.supportedCardBrands,\n        cardTypeTransforms.creditCard\n      ),\n    };\n    response.threeDSecureEnabled = configuration.creditCard.threeDSecureEnabled;\n    response.threeDSecure = configuration.creditCard.threeDSecure;\n  } else {\n    response.challenges = [];\n    response.creditCards = {\n      supportedCardTypes: [],\n    };\n    response.threeDSecureEnabled = false;\n  }\n\n  if (configuration.googlePay) {\n    response.androidPay = {\n      displayName: configuration.googlePay.displayName,\n      enabled: true,\n      environment: configuration.googlePay.environment.toLowerCase(),\n      googleAuthorizationFingerprint:\n        configuration.googlePay.googleAuthorization,\n      paypalClientId: configuration.googlePay.paypalClientId,\n      supportedNetworks: mapCardTypes(\n        configuration.googlePay.supportedCardBrands,\n        cardTypeTransforms.googlePay\n      ),\n    };\n  }\n\n  if (configuration.venmo) {\n    response.payWithVenmo = {\n      merchantId: configuration.venmo.merchantId,\n      accessToken: configuration.venmo.accessToken,\n      environment: configuration.venmo.environment.toLowerCase(),\n      enrichedCustomerDataEnabled:\n        configuration.venmo.enrichedCustomerDataEnabled,\n    };\n  }\n\n  if (configuration.paypal) {\n    response.paypalEnabled = true;\n    response.paypal = assign({}, configuration.paypal);\n    response.paypal.currencyIsoCode = response.paypal.currencyCode;\n    response.paypal.environment = response.paypal.environment.toLowerCase();\n\n    delete response.paypal.currencyCode;\n  } else {\n    response.paypalEnabled = false;\n  }\n\n  if (configuration.unionPay) {\n    response.unionPay = {\n      enabled: true,\n      merchantAccountId: configuration.unionPay.merchantAccountId,\n    };\n  }\n\n  if (configuration.visaCheckout) {\n    response.visaCheckout = {\n      apikey: configuration.visaCheckout.apiKey,\n      encryptionKey: configuration.visaCheckout.encryptionKey,\n      externalClientId: configuration.visaCheckout.externalClientId,\n      supportedCardTypes: mapCardTypes(\n        configuration.visaCheckout.supportedCardBrands,\n        cardTypeTransforms.visaCheckout\n      ),\n    };\n  }\n\n  if (configuration.masterpass) {\n    response.masterpass = {\n      merchantCheckoutId: configuration.masterpass.merchantCheckoutId,\n      supportedNetworks: mapCardTypes(\n        configuration.masterpass.supportedCardBrands,\n        cardTypeTransforms.masterpass\n      ),\n    };\n  }\n\n  if (configuration.usBankAccount) {\n    response.usBankAccount = {\n      routeId: configuration.usBankAccount.routeId,\n      plaid: {\n        publicKey: configuration.usBankAccount.plaidPublicKey,\n      },\n    };\n  }\n\n  return response;\n}\n\nfunction mapCardTypes(cardTypes, cardTypeTransformMap) {\n  return cardTypes.reduce(function (acc, type) {\n    if (cardTypeTransformMap.hasOwnProperty(type)) {\n      return acc.concat(cardTypeTransformMap[type]);\n    }\n\n    return acc;\n  }, []);\n}\n\nmodule.exports = configurationResponseAdapter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/configuration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/credit-card-tokenization.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/graphql/adapters/credit-card-tokenization.js ***!
  \************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar errorResponseAdapter = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/error.js\");\n\nvar CARD_BRAND_MAP = {\n  /* eslint-disable camelcase */\n  AMERICAN_EXPRESS: \"American Express\",\n  DINERS: \"Discover\",\n  DISCOVER: \"Discover\",\n  ELO: \"Elo\",\n  HIPER: \"Hiper\",\n  HIPERCARD: \"Hipercard\",\n  INTERNATIONAL_MAESTRO: \"Maestro\",\n  JCB: \"JCB\",\n  MASTERCARD: \"MasterCard\",\n  UK_MAESTRO: \"Maestro\",\n  UNION_PAY: \"UnionPay\",\n  VISA: \"Visa\",\n  /* eslint-enable camelcase */\n};\n\nvar BIN_DATA_MAP = {\n  YES: \"Yes\",\n  NO: \"No\",\n  UNKNOWN: \"Unknown\",\n};\n\nvar AUTHENTICATION_INSIGHT_MAP = {\n  PSDTWO: \"psd2\",\n};\n\nfunction creditCardTokenizationResponseAdapter(responseBody) {\n  var adaptedResponse;\n\n  if (responseBody.data && !responseBody.errors) {\n    adaptedResponse = adaptTokenizeCreditCardResponseBody(responseBody);\n  } else {\n    adaptedResponse = errorResponseAdapter(responseBody);\n  }\n\n  return adaptedResponse;\n}\n\nfunction adaptTokenizeCreditCardResponseBody(body) {\n  var data = body.data.tokenizeCreditCard;\n  var creditCard = data.creditCard;\n  var lastTwo = creditCard.last4 ? creditCard.last4.substr(2, 4) : \"\";\n  var binData = creditCard.binData;\n  var response, regulationEnvironment;\n\n  if (binData) {\n    [\n      \"commercial\",\n      \"debit\",\n      \"durbinRegulated\",\n      \"healthcare\",\n      \"payroll\",\n      \"prepaid\",\n    ].forEach(function (key) {\n      if (binData[key]) {\n        binData[key] = BIN_DATA_MAP[binData[key]];\n      } else {\n        binData[key] = \"Unknown\";\n      }\n    });\n\n    [\"issuingBank\", \"countryOfIssuance\", \"productId\"].forEach(function (key) {\n      if (!binData[key]) {\n        binData[key] = \"Unknown\";\n      }\n    });\n  }\n\n  response = {\n    creditCards: [\n      {\n        binData: binData,\n        consumed: false,\n        description: lastTwo ? \"ending in \" + lastTwo : \"\",\n        nonce: data.token,\n        details: {\n          cardholderName: creditCard.cardholderName,\n          expirationMonth: creditCard.expirationMonth,\n          expirationYear: creditCard.expirationYear,\n          bin: creditCard.bin || \"\",\n          cardType: CARD_BRAND_MAP[creditCard.brandCode] || \"Unknown\",\n          lastFour: creditCard.last4 || \"\",\n          lastTwo: lastTwo,\n        },\n        type: \"CreditCard\",\n        threeDSecureInfo: null,\n      },\n    ],\n  };\n\n  if (data.authenticationInsight) {\n    regulationEnvironment =\n      data.authenticationInsight.customerAuthenticationRegulationEnvironment;\n    response.creditCards[0].authenticationInsight = {\n      regulationEnvironment:\n        AUTHENTICATION_INSIGHT_MAP[regulationEnvironment] ||\n        regulationEnvironment.toLowerCase(),\n    };\n  }\n\n  return response;\n}\n\nmodule.exports = creditCardTokenizationResponseAdapter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9ncmFwaHFsL2FkYXB0ZXJzL2NyZWRpdC1jYXJkLXRva2VuaXphdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiwyQkFBMkIsbUJBQU8sQ0FBQyw0RkFBUzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2NsaWVudC9yZXF1ZXN0L2dyYXBocWwvYWRhcHRlcnMvY3JlZGl0LWNhcmQtdG9rZW5pemF0aW9uLmpzPzliZjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBlcnJvclJlc3BvbnNlQWRhcHRlciA9IHJlcXVpcmUoXCIuL2Vycm9yXCIpO1xuXG52YXIgQ0FSRF9CUkFORF9NQVAgPSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIGNhbWVsY2FzZSAqL1xuICBBTUVSSUNBTl9FWFBSRVNTOiBcIkFtZXJpY2FuIEV4cHJlc3NcIixcbiAgRElORVJTOiBcIkRpc2NvdmVyXCIsXG4gIERJU0NPVkVSOiBcIkRpc2NvdmVyXCIsXG4gIEVMTzogXCJFbG9cIixcbiAgSElQRVI6IFwiSGlwZXJcIixcbiAgSElQRVJDQVJEOiBcIkhpcGVyY2FyZFwiLFxuICBJTlRFUk5BVElPTkFMX01BRVNUUk86IFwiTWFlc3Ryb1wiLFxuICBKQ0I6IFwiSkNCXCIsXG4gIE1BU1RFUkNBUkQ6IFwiTWFzdGVyQ2FyZFwiLFxuICBVS19NQUVTVFJPOiBcIk1hZXN0cm9cIixcbiAgVU5JT05fUEFZOiBcIlVuaW9uUGF5XCIsXG4gIFZJU0E6IFwiVmlzYVwiLFxuICAvKiBlc2xpbnQtZW5hYmxlIGNhbWVsY2FzZSAqL1xufTtcblxudmFyIEJJTl9EQVRBX01BUCA9IHtcbiAgWUVTOiBcIlllc1wiLFxuICBOTzogXCJOb1wiLFxuICBVTktOT1dOOiBcIlVua25vd25cIixcbn07XG5cbnZhciBBVVRIRU5USUNBVElPTl9JTlNJR0hUX01BUCA9IHtcbiAgUFNEVFdPOiBcInBzZDJcIixcbn07XG5cbmZ1bmN0aW9uIGNyZWRpdENhcmRUb2tlbml6YXRpb25SZXNwb25zZUFkYXB0ZXIocmVzcG9uc2VCb2R5KSB7XG4gIHZhciBhZGFwdGVkUmVzcG9uc2U7XG5cbiAgaWYgKHJlc3BvbnNlQm9keS5kYXRhICYmICFyZXNwb25zZUJvZHkuZXJyb3JzKSB7XG4gICAgYWRhcHRlZFJlc3BvbnNlID0gYWRhcHRUb2tlbml6ZUNyZWRpdENhcmRSZXNwb25zZUJvZHkocmVzcG9uc2VCb2R5KTtcbiAgfSBlbHNlIHtcbiAgICBhZGFwdGVkUmVzcG9uc2UgPSBlcnJvclJlc3BvbnNlQWRhcHRlcihyZXNwb25zZUJvZHkpO1xuICB9XG5cbiAgcmV0dXJuIGFkYXB0ZWRSZXNwb25zZTtcbn1cblxuZnVuY3Rpb24gYWRhcHRUb2tlbml6ZUNyZWRpdENhcmRSZXNwb25zZUJvZHkoYm9keSkge1xuICB2YXIgZGF0YSA9IGJvZHkuZGF0YS50b2tlbml6ZUNyZWRpdENhcmQ7XG4gIHZhciBjcmVkaXRDYXJkID0gZGF0YS5jcmVkaXRDYXJkO1xuICB2YXIgbGFzdFR3byA9IGNyZWRpdENhcmQubGFzdDQgPyBjcmVkaXRDYXJkLmxhc3Q0LnN1YnN0cigyLCA0KSA6IFwiXCI7XG4gIHZhciBiaW5EYXRhID0gY3JlZGl0Q2FyZC5iaW5EYXRhO1xuICB2YXIgcmVzcG9uc2UsIHJlZ3VsYXRpb25FbnZpcm9ubWVudDtcblxuICBpZiAoYmluRGF0YSkge1xuICAgIFtcbiAgICAgIFwiY29tbWVyY2lhbFwiLFxuICAgICAgXCJkZWJpdFwiLFxuICAgICAgXCJkdXJiaW5SZWd1bGF0ZWRcIixcbiAgICAgIFwiaGVhbHRoY2FyZVwiLFxuICAgICAgXCJwYXlyb2xsXCIsXG4gICAgICBcInByZXBhaWRcIixcbiAgICBdLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgaWYgKGJpbkRhdGFba2V5XSkge1xuICAgICAgICBiaW5EYXRhW2tleV0gPSBCSU5fREFUQV9NQVBbYmluRGF0YVtrZXldXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJpbkRhdGFba2V5XSA9IFwiVW5rbm93blwiO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgW1wiaXNzdWluZ0JhbmtcIiwgXCJjb3VudHJ5T2ZJc3N1YW5jZVwiLCBcInByb2R1Y3RJZFwiXS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmICghYmluRGF0YVtrZXldKSB7XG4gICAgICAgIGJpbkRhdGFba2V5XSA9IFwiVW5rbm93blwiO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgcmVzcG9uc2UgPSB7XG4gICAgY3JlZGl0Q2FyZHM6IFtcbiAgICAgIHtcbiAgICAgICAgYmluRGF0YTogYmluRGF0YSxcbiAgICAgICAgY29uc3VtZWQ6IGZhbHNlLFxuICAgICAgICBkZXNjcmlwdGlvbjogbGFzdFR3byA/IFwiZW5kaW5nIGluIFwiICsgbGFzdFR3byA6IFwiXCIsXG4gICAgICAgIG5vbmNlOiBkYXRhLnRva2VuLFxuICAgICAgICBkZXRhaWxzOiB7XG4gICAgICAgICAgY2FyZGhvbGRlck5hbWU6IGNyZWRpdENhcmQuY2FyZGhvbGRlck5hbWUsXG4gICAgICAgICAgZXhwaXJhdGlvbk1vbnRoOiBjcmVkaXRDYXJkLmV4cGlyYXRpb25Nb250aCxcbiAgICAgICAgICBleHBpcmF0aW9uWWVhcjogY3JlZGl0Q2FyZC5leHBpcmF0aW9uWWVhcixcbiAgICAgICAgICBiaW46IGNyZWRpdENhcmQuYmluIHx8IFwiXCIsXG4gICAgICAgICAgY2FyZFR5cGU6IENBUkRfQlJBTkRfTUFQW2NyZWRpdENhcmQuYnJhbmRDb2RlXSB8fCBcIlVua25vd25cIixcbiAgICAgICAgICBsYXN0Rm91cjogY3JlZGl0Q2FyZC5sYXN0NCB8fCBcIlwiLFxuICAgICAgICAgIGxhc3RUd286IGxhc3RUd28sXG4gICAgICAgIH0sXG4gICAgICAgIHR5cGU6IFwiQ3JlZGl0Q2FyZFwiLFxuICAgICAgICB0aHJlZURTZWN1cmVJbmZvOiBudWxsLFxuICAgICAgfSxcbiAgICBdLFxuICB9O1xuXG4gIGlmIChkYXRhLmF1dGhlbnRpY2F0aW9uSW5zaWdodCkge1xuICAgIHJlZ3VsYXRpb25FbnZpcm9ubWVudCA9XG4gICAgICBkYXRhLmF1dGhlbnRpY2F0aW9uSW5zaWdodC5jdXN0b21lckF1dGhlbnRpY2F0aW9uUmVndWxhdGlvbkVudmlyb25tZW50O1xuICAgIHJlc3BvbnNlLmNyZWRpdENhcmRzWzBdLmF1dGhlbnRpY2F0aW9uSW5zaWdodCA9IHtcbiAgICAgIHJlZ3VsYXRpb25FbnZpcm9ubWVudDpcbiAgICAgICAgQVVUSEVOVElDQVRJT05fSU5TSUdIVF9NQVBbcmVndWxhdGlvbkVudmlyb25tZW50XSB8fFxuICAgICAgICByZWd1bGF0aW9uRW52aXJvbm1lbnQudG9Mb3dlckNhc2UoKSxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWRpdENhcmRUb2tlbml6YXRpb25SZXNwb25zZUFkYXB0ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/credit-card-tokenization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/error.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/graphql/adapters/error.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("\n\nfunction errorResponseAdapter(responseBody) {\n  var response;\n  var errorClass =\n    responseBody.errors &&\n    responseBody.errors[0] &&\n    responseBody.errors[0].extensions &&\n    responseBody.errors[0].extensions.errorClass;\n\n  if (errorClass === \"VALIDATION\") {\n    response = userErrorResponseAdapter(responseBody);\n  } else if (errorClass) {\n    response = errorWithClassResponseAdapter(responseBody);\n  } else {\n    response = {\n      error: { message: \"There was a problem serving your request\" },\n      fieldErrors: [],\n    };\n  }\n\n  return response;\n}\n\nfunction errorWithClassResponseAdapter(responseBody) {\n  return {\n    error: { message: responseBody.errors[0].message },\n    fieldErrors: [],\n  };\n}\n\nfunction userErrorResponseAdapter(responseBody) {\n  var fieldErrors = buildFieldErrors(responseBody.errors);\n\n  if (fieldErrors.length === 0) {\n    return { error: { message: responseBody.errors[0].message } };\n  }\n\n  return {\n    error: { message: getLegacyMessage(fieldErrors) },\n    fieldErrors: fieldErrors,\n  };\n}\n\nfunction buildFieldErrors(errors) {\n  var fieldErrors = [];\n\n  errors.forEach(function (error) {\n    if (!(error.extensions && error.extensions.inputPath)) {\n      return;\n    }\n    addFieldError(error.extensions.inputPath.slice(1), error, fieldErrors);\n  });\n\n  return fieldErrors;\n}\n\nfunction addFieldError(inputPath, errorDetail, fieldErrors) {\n  var fieldError;\n  var legacyCode = errorDetail.extensions.legacyCode;\n  var inputField = inputPath[0];\n\n  if (inputPath.length === 1) {\n    fieldErrors.push({\n      code: legacyCode,\n      field: inputField,\n      message: errorDetail.message,\n    });\n\n    return;\n  }\n\n  fieldErrors.forEach(function (candidate) {\n    if (candidate.field === inputField) {\n      fieldError = candidate;\n    }\n  });\n\n  if (!fieldError) {\n    fieldError = { field: inputField, fieldErrors: [] };\n    fieldErrors.push(fieldError);\n  }\n\n  addFieldError(inputPath.slice(1), errorDetail, fieldError.fieldErrors);\n}\n\nfunction getLegacyMessage(errors) {\n  var legacyMessages = {\n    creditCard: \"Credit card is invalid\",\n  };\n\n  var field = errors[0].field;\n\n  return legacyMessages[field];\n}\n\nmodule.exports = errorResponseAdapter;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9ncmFwaHFsL2FkYXB0ZXJzL2Vycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxlQUFlLHFEQUFxRDtBQUNwRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYSx5Q0FBeUM7QUFDdEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxhQUFhLFNBQVM7QUFDdEI7O0FBRUE7QUFDQSxhQUFhLHdDQUF3QztBQUNyRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2NsaWVudC9yZXF1ZXN0L2dyYXBocWwvYWRhcHRlcnMvZXJyb3IuanM/NjJiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gZXJyb3JSZXNwb25zZUFkYXB0ZXIocmVzcG9uc2VCb2R5KSB7XG4gIHZhciByZXNwb25zZTtcbiAgdmFyIGVycm9yQ2xhc3MgPVxuICAgIHJlc3BvbnNlQm9keS5lcnJvcnMgJiZcbiAgICByZXNwb25zZUJvZHkuZXJyb3JzWzBdICYmXG4gICAgcmVzcG9uc2VCb2R5LmVycm9yc1swXS5leHRlbnNpb25zICYmXG4gICAgcmVzcG9uc2VCb2R5LmVycm9yc1swXS5leHRlbnNpb25zLmVycm9yQ2xhc3M7XG5cbiAgaWYgKGVycm9yQ2xhc3MgPT09IFwiVkFMSURBVElPTlwiKSB7XG4gICAgcmVzcG9uc2UgPSB1c2VyRXJyb3JSZXNwb25zZUFkYXB0ZXIocmVzcG9uc2VCb2R5KTtcbiAgfSBlbHNlIGlmIChlcnJvckNsYXNzKSB7XG4gICAgcmVzcG9uc2UgPSBlcnJvcldpdGhDbGFzc1Jlc3BvbnNlQWRhcHRlcihyZXNwb25zZUJvZHkpO1xuICB9IGVsc2Uge1xuICAgIHJlc3BvbnNlID0ge1xuICAgICAgZXJyb3I6IHsgbWVzc2FnZTogXCJUaGVyZSB3YXMgYSBwcm9ibGVtIHNlcnZpbmcgeW91ciByZXF1ZXN0XCIgfSxcbiAgICAgIGZpZWxkRXJyb3JzOiBbXSxcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuXG5mdW5jdGlvbiBlcnJvcldpdGhDbGFzc1Jlc3BvbnNlQWRhcHRlcihyZXNwb25zZUJvZHkpIHtcbiAgcmV0dXJuIHtcbiAgICBlcnJvcjogeyBtZXNzYWdlOiByZXNwb25zZUJvZHkuZXJyb3JzWzBdLm1lc3NhZ2UgfSxcbiAgICBmaWVsZEVycm9yczogW10sXG4gIH07XG59XG5cbmZ1bmN0aW9uIHVzZXJFcnJvclJlc3BvbnNlQWRhcHRlcihyZXNwb25zZUJvZHkpIHtcbiAgdmFyIGZpZWxkRXJyb3JzID0gYnVpbGRGaWVsZEVycm9ycyhyZXNwb25zZUJvZHkuZXJyb3JzKTtcblxuICBpZiAoZmllbGRFcnJvcnMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIHsgZXJyb3I6IHsgbWVzc2FnZTogcmVzcG9uc2VCb2R5LmVycm9yc1swXS5tZXNzYWdlIH0gfTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZXJyb3I6IHsgbWVzc2FnZTogZ2V0TGVnYWN5TWVzc2FnZShmaWVsZEVycm9ycykgfSxcbiAgICBmaWVsZEVycm9yczogZmllbGRFcnJvcnMsXG4gIH07XG59XG5cbmZ1bmN0aW9uIGJ1aWxkRmllbGRFcnJvcnMoZXJyb3JzKSB7XG4gIHZhciBmaWVsZEVycm9ycyA9IFtdO1xuXG4gIGVycm9ycy5mb3JFYWNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgIGlmICghKGVycm9yLmV4dGVuc2lvbnMgJiYgZXJyb3IuZXh0ZW5zaW9ucy5pbnB1dFBhdGgpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGFkZEZpZWxkRXJyb3IoZXJyb3IuZXh0ZW5zaW9ucy5pbnB1dFBhdGguc2xpY2UoMSksIGVycm9yLCBmaWVsZEVycm9ycyk7XG4gIH0pO1xuXG4gIHJldHVybiBmaWVsZEVycm9ycztcbn1cblxuZnVuY3Rpb24gYWRkRmllbGRFcnJvcihpbnB1dFBhdGgsIGVycm9yRGV0YWlsLCBmaWVsZEVycm9ycykge1xuICB2YXIgZmllbGRFcnJvcjtcbiAgdmFyIGxlZ2FjeUNvZGUgPSBlcnJvckRldGFpbC5leHRlbnNpb25zLmxlZ2FjeUNvZGU7XG4gIHZhciBpbnB1dEZpZWxkID0gaW5wdXRQYXRoWzBdO1xuXG4gIGlmIChpbnB1dFBhdGgubGVuZ3RoID09PSAxKSB7XG4gICAgZmllbGRFcnJvcnMucHVzaCh7XG4gICAgICBjb2RlOiBsZWdhY3lDb2RlLFxuICAgICAgZmllbGQ6IGlucHV0RmllbGQsXG4gICAgICBtZXNzYWdlOiBlcnJvckRldGFpbC5tZXNzYWdlLFxuICAgIH0pO1xuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZmllbGRFcnJvcnMuZm9yRWFjaChmdW5jdGlvbiAoY2FuZGlkYXRlKSB7XG4gICAgaWYgKGNhbmRpZGF0ZS5maWVsZCA9PT0gaW5wdXRGaWVsZCkge1xuICAgICAgZmllbGRFcnJvciA9IGNhbmRpZGF0ZTtcbiAgICB9XG4gIH0pO1xuXG4gIGlmICghZmllbGRFcnJvcikge1xuICAgIGZpZWxkRXJyb3IgPSB7IGZpZWxkOiBpbnB1dEZpZWxkLCBmaWVsZEVycm9yczogW10gfTtcbiAgICBmaWVsZEVycm9ycy5wdXNoKGZpZWxkRXJyb3IpO1xuICB9XG5cbiAgYWRkRmllbGRFcnJvcihpbnB1dFBhdGguc2xpY2UoMSksIGVycm9yRGV0YWlsLCBmaWVsZEVycm9yLmZpZWxkRXJyb3JzKTtcbn1cblxuZnVuY3Rpb24gZ2V0TGVnYWN5TWVzc2FnZShlcnJvcnMpIHtcbiAgdmFyIGxlZ2FjeU1lc3NhZ2VzID0ge1xuICAgIGNyZWRpdENhcmQ6IFwiQ3JlZGl0IGNhcmQgaXMgaW52YWxpZFwiLFxuICB9O1xuXG4gIHZhciBmaWVsZCA9IGVycm9yc1swXS5maWVsZDtcblxuICByZXR1cm4gbGVnYWN5TWVzc2FnZXNbZmllbGRdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGVycm9yUmVzcG9uc2VBZGFwdGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/graphql/generators/configuration.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/graphql/generators/configuration.js ***!
  \***************************************************************************************/
/***/ ((module) => {

eval("\n\nvar CONFIGURATION_QUERY =\n  \"query ClientConfiguration { \" +\n  \"  clientConfiguration { \" +\n  \"    analyticsUrl \" +\n  \"    environment \" +\n  \"    merchantId \" +\n  \"    assetsUrl \" +\n  \"    clientApiUrl \" +\n  \"    creditCard { \" +\n  \"      supportedCardBrands \" +\n  \"      challenges \" +\n  \"      threeDSecureEnabled \" +\n  \"      threeDSecure { \" +\n  \"        cardinalAuthenticationJWT \" +\n  \"      } \" +\n  \"    } \" +\n  \"    applePayWeb { \" +\n  \"      countryCode \" +\n  \"      currencyCode \" +\n  \"      merchantIdentifier \" +\n  \"      supportedCardBrands \" +\n  \"    } \" +\n  \"    googlePay { \" +\n  \"      displayName \" +\n  \"      supportedCardBrands \" +\n  \"      environment \" +\n  \"      googleAuthorization \" +\n  \"      paypalClientId \" +\n  \"    } \" +\n  \"    ideal { \" +\n  \"      routeId \" +\n  \"      assetsUrl \" +\n  \"    } \" +\n  \"    kount { \" +\n  \"      merchantId \" +\n  \"    } \" +\n  \"    masterpass { \" +\n  \"      merchantCheckoutId \" +\n  \"      supportedCardBrands \" +\n  \"    } \" +\n  \"    paypal { \" +\n  \"      displayName \" +\n  \"      clientId \" +\n  \"      assetsUrl \" +\n  \"      environment \" +\n  \"      environmentNoNetwork \" +\n  \"      unvettedMerchant \" +\n  \"      braintreeClientId \" +\n  \"      billingAgreementsEnabled \" +\n  \"      merchantAccountId \" +\n  \"      currencyCode \" +\n  \"      payeeEmail \" +\n  \"    } \" +\n  \"    unionPay { \" +\n  \"      merchantAccountId \" +\n  \"    } \" +\n  \"    usBankAccount { \" +\n  \"      routeId \" +\n  \"      plaidPublicKey \" +\n  \"    } \" +\n  \"    venmo { \" +\n  \"      merchantId \" +\n  \"      accessToken \" +\n  \"      environment \" +\n  \"      enrichedCustomerDataEnabled\" +\n  \"    } \" +\n  \"    visaCheckout { \" +\n  \"      apiKey \" +\n  \"      externalClientId \" +\n  \"      supportedCardBrands \" +\n  \"    } \" +\n  \"    braintreeApi { \" +\n  \"      accessToken \" +\n  \"      url \" +\n  \"    } \" +\n  \"    supportedFeatures \" +\n  \"  } \" +\n  \"}\";\n\nfunction configuration() {\n  return {\n    query: CONFIGURATION_QUERY,\n    operationName: \"ClientConfiguration\",\n  };\n}\n\nmodule.exports = configuration;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9ncmFwaHFsL2dlbmVyYXRvcnMvY29uZmlndXJhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBLCtCQUErQjtBQUMvQiwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNULHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxlQUFlO0FBQ2Y7QUFDQTtBQUNBLFNBQVM7QUFDVCxlQUFlO0FBQ2Y7QUFDQSxTQUFTO0FBQ1Qsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsa0JBQWtCO0FBQ2xCO0FBQ0EsU0FBUztBQUNULHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0EsU0FBUztBQUNULGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQLElBQUk7O0FBRUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2NsaWVudC9yZXF1ZXN0L2dyYXBocWwvZ2VuZXJhdG9ycy9jb25maWd1cmF0aW9uLmpzP2FjNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBDT05GSUdVUkFUSU9OX1FVRVJZID1cbiAgXCJxdWVyeSBDbGllbnRDb25maWd1cmF0aW9uIHsgXCIgK1xuICBcIiAgY2xpZW50Q29uZmlndXJhdGlvbiB7IFwiICtcbiAgXCIgICAgYW5hbHl0aWNzVXJsIFwiICtcbiAgXCIgICAgZW52aXJvbm1lbnQgXCIgK1xuICBcIiAgICBtZXJjaGFudElkIFwiICtcbiAgXCIgICAgYXNzZXRzVXJsIFwiICtcbiAgXCIgICAgY2xpZW50QXBpVXJsIFwiICtcbiAgXCIgICAgY3JlZGl0Q2FyZCB7IFwiICtcbiAgXCIgICAgICBzdXBwb3J0ZWRDYXJkQnJhbmRzIFwiICtcbiAgXCIgICAgICBjaGFsbGVuZ2VzIFwiICtcbiAgXCIgICAgICB0aHJlZURTZWN1cmVFbmFibGVkIFwiICtcbiAgXCIgICAgICB0aHJlZURTZWN1cmUgeyBcIiArXG4gIFwiICAgICAgICBjYXJkaW5hbEF1dGhlbnRpY2F0aW9uSldUIFwiICtcbiAgXCIgICAgICB9IFwiICtcbiAgXCIgICAgfSBcIiArXG4gIFwiICAgIGFwcGxlUGF5V2ViIHsgXCIgK1xuICBcIiAgICAgIGNvdW50cnlDb2RlIFwiICtcbiAgXCIgICAgICBjdXJyZW5jeUNvZGUgXCIgK1xuICBcIiAgICAgIG1lcmNoYW50SWRlbnRpZmllciBcIiArXG4gIFwiICAgICAgc3VwcG9ydGVkQ2FyZEJyYW5kcyBcIiArXG4gIFwiICAgIH0gXCIgK1xuICBcIiAgICBnb29nbGVQYXkgeyBcIiArXG4gIFwiICAgICAgZGlzcGxheU5hbWUgXCIgK1xuICBcIiAgICAgIHN1cHBvcnRlZENhcmRCcmFuZHMgXCIgK1xuICBcIiAgICAgIGVudmlyb25tZW50IFwiICtcbiAgXCIgICAgICBnb29nbGVBdXRob3JpemF0aW9uIFwiICtcbiAgXCIgICAgICBwYXlwYWxDbGllbnRJZCBcIiArXG4gIFwiICAgIH0gXCIgK1xuICBcIiAgICBpZGVhbCB7IFwiICtcbiAgXCIgICAgICByb3V0ZUlkIFwiICtcbiAgXCIgICAgICBhc3NldHNVcmwgXCIgK1xuICBcIiAgICB9IFwiICtcbiAgXCIgICAga291bnQgeyBcIiArXG4gIFwiICAgICAgbWVyY2hhbnRJZCBcIiArXG4gIFwiICAgIH0gXCIgK1xuICBcIiAgICBtYXN0ZXJwYXNzIHsgXCIgK1xuICBcIiAgICAgIG1lcmNoYW50Q2hlY2tvdXRJZCBcIiArXG4gIFwiICAgICAgc3VwcG9ydGVkQ2FyZEJyYW5kcyBcIiArXG4gIFwiICAgIH0gXCIgK1xuICBcIiAgICBwYXlwYWwgeyBcIiArXG4gIFwiICAgICAgZGlzcGxheU5hbWUgXCIgK1xuICBcIiAgICAgIGNsaWVudElkIFwiICtcbiAgXCIgICAgICBhc3NldHNVcmwgXCIgK1xuICBcIiAgICAgIGVudmlyb25tZW50IFwiICtcbiAgXCIgICAgICBlbnZpcm9ubWVudE5vTmV0d29yayBcIiArXG4gIFwiICAgICAgdW52ZXR0ZWRNZXJjaGFudCBcIiArXG4gIFwiICAgICAgYnJhaW50cmVlQ2xpZW50SWQgXCIgK1xuICBcIiAgICAgIGJpbGxpbmdBZ3JlZW1lbnRzRW5hYmxlZCBcIiArXG4gIFwiICAgICAgbWVyY2hhbnRBY2NvdW50SWQgXCIgK1xuICBcIiAgICAgIGN1cnJlbmN5Q29kZSBcIiArXG4gIFwiICAgICAgcGF5ZWVFbWFpbCBcIiArXG4gIFwiICAgIH0gXCIgK1xuICBcIiAgICB1bmlvblBheSB7IFwiICtcbiAgXCIgICAgICBtZXJjaGFudEFjY291bnRJZCBcIiArXG4gIFwiICAgIH0gXCIgK1xuICBcIiAgICB1c0JhbmtBY2NvdW50IHsgXCIgK1xuICBcIiAgICAgIHJvdXRlSWQgXCIgK1xuICBcIiAgICAgIHBsYWlkUHVibGljS2V5IFwiICtcbiAgXCIgICAgfSBcIiArXG4gIFwiICAgIHZlbm1vIHsgXCIgK1xuICBcIiAgICAgIG1lcmNoYW50SWQgXCIgK1xuICBcIiAgICAgIGFjY2Vzc1Rva2VuIFwiICtcbiAgXCIgICAgICBlbnZpcm9ubWVudCBcIiArXG4gIFwiICAgICAgZW5yaWNoZWRDdXN0b21lckRhdGFFbmFibGVkXCIgK1xuICBcIiAgICB9IFwiICtcbiAgXCIgICAgdmlzYUNoZWNrb3V0IHsgXCIgK1xuICBcIiAgICAgIGFwaUtleSBcIiArXG4gIFwiICAgICAgZXh0ZXJuYWxDbGllbnRJZCBcIiArXG4gIFwiICAgICAgc3VwcG9ydGVkQ2FyZEJyYW5kcyBcIiArXG4gIFwiICAgIH0gXCIgK1xuICBcIiAgICBicmFpbnRyZWVBcGkgeyBcIiArXG4gIFwiICAgICAgYWNjZXNzVG9rZW4gXCIgK1xuICBcIiAgICAgIHVybCBcIiArXG4gIFwiICAgIH0gXCIgK1xuICBcIiAgICBzdXBwb3J0ZWRGZWF0dXJlcyBcIiArXG4gIFwiICB9IFwiICtcbiAgXCJ9XCI7XG5cbmZ1bmN0aW9uIGNvbmZpZ3VyYXRpb24oKSB7XG4gIHJldHVybiB7XG4gICAgcXVlcnk6IENPTkZJR1VSQVRJT05fUVVFUlksXG4gICAgb3BlcmF0aW9uTmFtZTogXCJDbGllbnRDb25maWd1cmF0aW9uXCIsXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29uZmlndXJhdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/graphql/generators/configuration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/graphql/generators/credit-card-tokenization.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/graphql/generators/credit-card-tokenization.js ***!
  \**************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar assign = (__webpack_require__(/*! ../../../../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\n\nfunction createMutation(config) {\n  var hasAuthenticationInsight = config.hasAuthenticationInsight;\n  var mutation = \"mutation TokenizeCreditCard($input: TokenizeCreditCardInput!\";\n\n  if (hasAuthenticationInsight) {\n    mutation += \", $authenticationInsightInput: AuthenticationInsightInput!\";\n  }\n\n  mutation +=\n    \") { \" +\n    \"  tokenizeCreditCard(input: $input) { \" +\n    \"    token \" +\n    \"    creditCard { \" +\n    \"      bin \" +\n    \"      brandCode \" +\n    \"      last4 \" +\n    \"      cardholderName \" +\n    \"      expirationMonth\" +\n    \"      expirationYear\" +\n    \"      binData { \" +\n    \"        prepaid \" +\n    \"        healthcare \" +\n    \"        debit \" +\n    \"        durbinRegulated \" +\n    \"        commercial \" +\n    \"        payroll \" +\n    \"        issuingBank \" +\n    \"        countryOfIssuance \" +\n    \"        productId \" +\n    \"      } \" +\n    \"    } \";\n\n  if (hasAuthenticationInsight) {\n    mutation +=\n      \"    authenticationInsight(input: $authenticationInsightInput) {\" +\n      \"      customerAuthenticationRegulationEnvironment\" +\n      \"    }\";\n  }\n\n  mutation += \"  } }\";\n\n  return mutation;\n}\n\nfunction createCreditCardTokenizationBody(body, options) {\n  var cc = body.creditCard;\n  var billingAddress = cc && cc.billingAddress;\n  var expDate = cc && cc.expirationDate;\n  var expirationMonth =\n    cc && (cc.expirationMonth || (expDate && expDate.split(\"/\")[0].trim()));\n  var expirationYear =\n    cc && (cc.expirationYear || (expDate && expDate.split(\"/\")[1].trim()));\n  var variables = {\n    input: {\n      creditCard: {\n        number: cc && cc.number,\n        expirationMonth: expirationMonth,\n        expirationYear: expirationYear,\n        cvv: cc && cc.cvv,\n        cardholderName: cc && cc.cardholderName,\n      },\n      options: {},\n    },\n  };\n\n  if (options.hasAuthenticationInsight) {\n    variables.authenticationInsightInput = {\n      merchantAccountId: body.merchantAccountId,\n    };\n  }\n\n  if (billingAddress) {\n    variables.input.creditCard.billingAddress = billingAddress;\n  }\n\n  variables.input = addValidationRule(body, variables.input);\n\n  return variables;\n}\n\nfunction addValidationRule(body, input) {\n  var validate;\n\n  if (\n    body.creditCard &&\n    body.creditCard.options &&\n    typeof body.creditCard.options.validate === \"boolean\"\n  ) {\n    validate = body.creditCard.options.validate;\n  } else if (\n    (body.authorizationFingerprint && body.tokenizationKey) ||\n    body.authorizationFingerprint\n  ) {\n    validate = true;\n  } else if (body.tokenizationKey) {\n    validate = false;\n  }\n\n  if (typeof validate === \"boolean\") {\n    input.options = assign(\n      {\n        validate: validate,\n      },\n      input.options\n    );\n  }\n\n  return input;\n}\n\nfunction creditCardTokenization(body) {\n  var options = {\n    hasAuthenticationInsight: Boolean(\n      body.authenticationInsight && body.merchantAccountId\n    ),\n  };\n\n  return {\n    query: createMutation(options),\n    variables: createCreditCardTokenizationBody(body, options),\n    operationName: \"TokenizeCreditCard\",\n  };\n}\n\nmodule.exports = creditCardTokenization;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9ncmFwaHFsL2dlbmVyYXRvcnMvY3JlZGl0LWNhcmQtdG9rZW5pemF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsOEdBQXdDOztBQUVyRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUztBQUNULDJDQUEyQztBQUMzQztBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7O0FBRVg7QUFDQTtBQUNBLHNFQUFzRTtBQUN0RTtBQUNBLFlBQVk7QUFDWjs7QUFFQSxvQkFBb0I7O0FBRXBCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsaUJBQWlCO0FBQ2pCLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9ncmFwaHFsL2dlbmVyYXRvcnMvY3JlZGl0LWNhcmQtdG9rZW5pemF0aW9uLmpzPzdjMjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBhc3NpZ24gPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vbGliL2Fzc2lnblwiKS5hc3NpZ247XG5cbmZ1bmN0aW9uIGNyZWF0ZU11dGF0aW9uKGNvbmZpZykge1xuICB2YXIgaGFzQXV0aGVudGljYXRpb25JbnNpZ2h0ID0gY29uZmlnLmhhc0F1dGhlbnRpY2F0aW9uSW5zaWdodDtcbiAgdmFyIG11dGF0aW9uID0gXCJtdXRhdGlvbiBUb2tlbml6ZUNyZWRpdENhcmQoJGlucHV0OiBUb2tlbml6ZUNyZWRpdENhcmRJbnB1dCFcIjtcblxuICBpZiAoaGFzQXV0aGVudGljYXRpb25JbnNpZ2h0KSB7XG4gICAgbXV0YXRpb24gKz0gXCIsICRhdXRoZW50aWNhdGlvbkluc2lnaHRJbnB1dDogQXV0aGVudGljYXRpb25JbnNpZ2h0SW5wdXQhXCI7XG4gIH1cblxuICBtdXRhdGlvbiArPVxuICAgIFwiKSB7IFwiICtcbiAgICBcIiAgdG9rZW5pemVDcmVkaXRDYXJkKGlucHV0OiAkaW5wdXQpIHsgXCIgK1xuICAgIFwiICAgIHRva2VuIFwiICtcbiAgICBcIiAgICBjcmVkaXRDYXJkIHsgXCIgK1xuICAgIFwiICAgICAgYmluIFwiICtcbiAgICBcIiAgICAgIGJyYW5kQ29kZSBcIiArXG4gICAgXCIgICAgICBsYXN0NCBcIiArXG4gICAgXCIgICAgICBjYXJkaG9sZGVyTmFtZSBcIiArXG4gICAgXCIgICAgICBleHBpcmF0aW9uTW9udGhcIiArXG4gICAgXCIgICAgICBleHBpcmF0aW9uWWVhclwiICtcbiAgICBcIiAgICAgIGJpbkRhdGEgeyBcIiArXG4gICAgXCIgICAgICAgIHByZXBhaWQgXCIgK1xuICAgIFwiICAgICAgICBoZWFsdGhjYXJlIFwiICtcbiAgICBcIiAgICAgICAgZGViaXQgXCIgK1xuICAgIFwiICAgICAgICBkdXJiaW5SZWd1bGF0ZWQgXCIgK1xuICAgIFwiICAgICAgICBjb21tZXJjaWFsIFwiICtcbiAgICBcIiAgICAgICAgcGF5cm9sbCBcIiArXG4gICAgXCIgICAgICAgIGlzc3VpbmdCYW5rIFwiICtcbiAgICBcIiAgICAgICAgY291bnRyeU9mSXNzdWFuY2UgXCIgK1xuICAgIFwiICAgICAgICBwcm9kdWN0SWQgXCIgK1xuICAgIFwiICAgICAgfSBcIiArXG4gICAgXCIgICAgfSBcIjtcblxuICBpZiAoaGFzQXV0aGVudGljYXRpb25JbnNpZ2h0KSB7XG4gICAgbXV0YXRpb24gKz1cbiAgICAgIFwiICAgIGF1dGhlbnRpY2F0aW9uSW5zaWdodChpbnB1dDogJGF1dGhlbnRpY2F0aW9uSW5zaWdodElucHV0KSB7XCIgK1xuICAgICAgXCIgICAgICBjdXN0b21lckF1dGhlbnRpY2F0aW9uUmVndWxhdGlvbkVudmlyb25tZW50XCIgK1xuICAgICAgXCIgICAgfVwiO1xuICB9XG5cbiAgbXV0YXRpb24gKz0gXCIgIH0gfVwiO1xuXG4gIHJldHVybiBtdXRhdGlvbjtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ3JlZGl0Q2FyZFRva2VuaXphdGlvbkJvZHkoYm9keSwgb3B0aW9ucykge1xuICB2YXIgY2MgPSBib2R5LmNyZWRpdENhcmQ7XG4gIHZhciBiaWxsaW5nQWRkcmVzcyA9IGNjICYmIGNjLmJpbGxpbmdBZGRyZXNzO1xuICB2YXIgZXhwRGF0ZSA9IGNjICYmIGNjLmV4cGlyYXRpb25EYXRlO1xuICB2YXIgZXhwaXJhdGlvbk1vbnRoID1cbiAgICBjYyAmJiAoY2MuZXhwaXJhdGlvbk1vbnRoIHx8IChleHBEYXRlICYmIGV4cERhdGUuc3BsaXQoXCIvXCIpWzBdLnRyaW0oKSkpO1xuICB2YXIgZXhwaXJhdGlvblllYXIgPVxuICAgIGNjICYmIChjYy5leHBpcmF0aW9uWWVhciB8fCAoZXhwRGF0ZSAmJiBleHBEYXRlLnNwbGl0KFwiL1wiKVsxXS50cmltKCkpKTtcbiAgdmFyIHZhcmlhYmxlcyA9IHtcbiAgICBpbnB1dDoge1xuICAgICAgY3JlZGl0Q2FyZDoge1xuICAgICAgICBudW1iZXI6IGNjICYmIGNjLm51bWJlcixcbiAgICAgICAgZXhwaXJhdGlvbk1vbnRoOiBleHBpcmF0aW9uTW9udGgsXG4gICAgICAgIGV4cGlyYXRpb25ZZWFyOiBleHBpcmF0aW9uWWVhcixcbiAgICAgICAgY3Z2OiBjYyAmJiBjYy5jdnYsXG4gICAgICAgIGNhcmRob2xkZXJOYW1lOiBjYyAmJiBjYy5jYXJkaG9sZGVyTmFtZSxcbiAgICAgIH0sXG4gICAgICBvcHRpb25zOiB7fSxcbiAgICB9LFxuICB9O1xuXG4gIGlmIChvcHRpb25zLmhhc0F1dGhlbnRpY2F0aW9uSW5zaWdodCkge1xuICAgIHZhcmlhYmxlcy5hdXRoZW50aWNhdGlvbkluc2lnaHRJbnB1dCA9IHtcbiAgICAgIG1lcmNoYW50QWNjb3VudElkOiBib2R5Lm1lcmNoYW50QWNjb3VudElkLFxuICAgIH07XG4gIH1cblxuICBpZiAoYmlsbGluZ0FkZHJlc3MpIHtcbiAgICB2YXJpYWJsZXMuaW5wdXQuY3JlZGl0Q2FyZC5iaWxsaW5nQWRkcmVzcyA9IGJpbGxpbmdBZGRyZXNzO1xuICB9XG5cbiAgdmFyaWFibGVzLmlucHV0ID0gYWRkVmFsaWRhdGlvblJ1bGUoYm9keSwgdmFyaWFibGVzLmlucHV0KTtcblxuICByZXR1cm4gdmFyaWFibGVzO1xufVxuXG5mdW5jdGlvbiBhZGRWYWxpZGF0aW9uUnVsZShib2R5LCBpbnB1dCkge1xuICB2YXIgdmFsaWRhdGU7XG5cbiAgaWYgKFxuICAgIGJvZHkuY3JlZGl0Q2FyZCAmJlxuICAgIGJvZHkuY3JlZGl0Q2FyZC5vcHRpb25zICYmXG4gICAgdHlwZW9mIGJvZHkuY3JlZGl0Q2FyZC5vcHRpb25zLnZhbGlkYXRlID09PSBcImJvb2xlYW5cIlxuICApIHtcbiAgICB2YWxpZGF0ZSA9IGJvZHkuY3JlZGl0Q2FyZC5vcHRpb25zLnZhbGlkYXRlO1xuICB9IGVsc2UgaWYgKFxuICAgIChib2R5LmF1dGhvcml6YXRpb25GaW5nZXJwcmludCAmJiBib2R5LnRva2VuaXphdGlvbktleSkgfHxcbiAgICBib2R5LmF1dGhvcml6YXRpb25GaW5nZXJwcmludFxuICApIHtcbiAgICB2YWxpZGF0ZSA9IHRydWU7XG4gIH0gZWxzZSBpZiAoYm9keS50b2tlbml6YXRpb25LZXkpIHtcbiAgICB2YWxpZGF0ZSA9IGZhbHNlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWxpZGF0ZSA9PT0gXCJib29sZWFuXCIpIHtcbiAgICBpbnB1dC5vcHRpb25zID0gYXNzaWduKFxuICAgICAge1xuICAgICAgICB2YWxpZGF0ZTogdmFsaWRhdGUsXG4gICAgICB9LFxuICAgICAgaW5wdXQub3B0aW9uc1xuICAgICk7XG4gIH1cblxuICByZXR1cm4gaW5wdXQ7XG59XG5cbmZ1bmN0aW9uIGNyZWRpdENhcmRUb2tlbml6YXRpb24oYm9keSkge1xuICB2YXIgb3B0aW9ucyA9IHtcbiAgICBoYXNBdXRoZW50aWNhdGlvbkluc2lnaHQ6IEJvb2xlYW4oXG4gICAgICBib2R5LmF1dGhlbnRpY2F0aW9uSW5zaWdodCAmJiBib2R5Lm1lcmNoYW50QWNjb3VudElkXG4gICAgKSxcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHF1ZXJ5OiBjcmVhdGVNdXRhdGlvbihvcHRpb25zKSxcbiAgICB2YXJpYWJsZXM6IGNyZWF0ZUNyZWRpdENhcmRUb2tlbml6YXRpb25Cb2R5KGJvZHksIG9wdGlvbnMpLFxuICAgIG9wZXJhdGlvbk5hbWU6IFwiVG9rZW5pemVDcmVkaXRDYXJkXCIsXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlZGl0Q2FyZFRva2VuaXphdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/graphql/generators/credit-card-tokenization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/graphql/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/graphql/index.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar features = {\n  tokenize_credit_cards: \"payment_methods/credit_cards\", // eslint-disable-line camelcase\n  configuration: \"configuration\",\n};\n\nvar disallowedInputPaths = [\"creditCard.options.unionPayEnrollment\"];\n\nfunction GraphQL(config) {\n  this._config = config.graphQL;\n}\n\nGraphQL.prototype.getGraphQLEndpoint = function () {\n  return this._config.url;\n};\n\nGraphQL.prototype.isGraphQLRequest = function (url, body) {\n  var featureEnabled;\n  var path = this.getClientApiPath(url);\n\n  if (!this._isGraphQLEnabled() || !path) {\n    return false;\n  }\n\n  featureEnabled = this._config.features.some(function (feature) {\n    return features[feature] === path;\n  });\n\n  if (containsDisallowedlistedKeys(body)) {\n    return false;\n  }\n\n  return featureEnabled;\n};\n\nGraphQL.prototype.getClientApiPath = function (url) {\n  var path;\n  var clientApiPrefix = \"/client_api/v1/\";\n  var pathParts = url.split(clientApiPrefix);\n\n  if (pathParts.length > 1) {\n    path = pathParts[1].split(\"?\")[0];\n  }\n\n  return path;\n};\n\nGraphQL.prototype._isGraphQLEnabled = function () {\n  return Boolean(this._config);\n};\n\nfunction containsDisallowedlistedKeys(body) {\n  return disallowedInputPaths.some(function (keys) {\n    var value = keys.split(\".\").reduce(function (accumulator, key) {\n      return accumulator && accumulator[key];\n    }, body);\n\n    return value !== undefined; // eslint-disable-line no-undefined\n  });\n}\n\nmodule.exports = GraphQL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9ncmFwaHFsL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMLGdDQUFnQztBQUNoQyxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvY2xpZW50L3JlcXVlc3QvZ3JhcGhxbC9pbmRleC5qcz8wZTA5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgZmVhdHVyZXMgPSB7XG4gIHRva2VuaXplX2NyZWRpdF9jYXJkczogXCJwYXltZW50X21ldGhvZHMvY3JlZGl0X2NhcmRzXCIsIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgY2FtZWxjYXNlXG4gIGNvbmZpZ3VyYXRpb246IFwiY29uZmlndXJhdGlvblwiLFxufTtcblxudmFyIGRpc2FsbG93ZWRJbnB1dFBhdGhzID0gW1wiY3JlZGl0Q2FyZC5vcHRpb25zLnVuaW9uUGF5RW5yb2xsbWVudFwiXTtcblxuZnVuY3Rpb24gR3JhcGhRTChjb25maWcpIHtcbiAgdGhpcy5fY29uZmlnID0gY29uZmlnLmdyYXBoUUw7XG59XG5cbkdyYXBoUUwucHJvdG90eXBlLmdldEdyYXBoUUxFbmRwb2ludCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuX2NvbmZpZy51cmw7XG59O1xuXG5HcmFwaFFMLnByb3RvdHlwZS5pc0dyYXBoUUxSZXF1ZXN0ID0gZnVuY3Rpb24gKHVybCwgYm9keSkge1xuICB2YXIgZmVhdHVyZUVuYWJsZWQ7XG4gIHZhciBwYXRoID0gdGhpcy5nZXRDbGllbnRBcGlQYXRoKHVybCk7XG5cbiAgaWYgKCF0aGlzLl9pc0dyYXBoUUxFbmFibGVkKCkgfHwgIXBhdGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmZWF0dXJlRW5hYmxlZCA9IHRoaXMuX2NvbmZpZy5mZWF0dXJlcy5zb21lKGZ1bmN0aW9uIChmZWF0dXJlKSB7XG4gICAgcmV0dXJuIGZlYXR1cmVzW2ZlYXR1cmVdID09PSBwYXRoO1xuICB9KTtcblxuICBpZiAoY29udGFpbnNEaXNhbGxvd2VkbGlzdGVkS2V5cyhib2R5KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBmZWF0dXJlRW5hYmxlZDtcbn07XG5cbkdyYXBoUUwucHJvdG90eXBlLmdldENsaWVudEFwaVBhdGggPSBmdW5jdGlvbiAodXJsKSB7XG4gIHZhciBwYXRoO1xuICB2YXIgY2xpZW50QXBpUHJlZml4ID0gXCIvY2xpZW50X2FwaS92MS9cIjtcbiAgdmFyIHBhdGhQYXJ0cyA9IHVybC5zcGxpdChjbGllbnRBcGlQcmVmaXgpO1xuXG4gIGlmIChwYXRoUGFydHMubGVuZ3RoID4gMSkge1xuICAgIHBhdGggPSBwYXRoUGFydHNbMV0uc3BsaXQoXCI/XCIpWzBdO1xuICB9XG5cbiAgcmV0dXJuIHBhdGg7XG59O1xuXG5HcmFwaFFMLnByb3RvdHlwZS5faXNHcmFwaFFMRW5hYmxlZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIEJvb2xlYW4odGhpcy5fY29uZmlnKTtcbn07XG5cbmZ1bmN0aW9uIGNvbnRhaW5zRGlzYWxsb3dlZGxpc3RlZEtleXMoYm9keSkge1xuICByZXR1cm4gZGlzYWxsb3dlZElucHV0UGF0aHMuc29tZShmdW5jdGlvbiAoa2V5cykge1xuICAgIHZhciB2YWx1ZSA9IGtleXMuc3BsaXQoXCIuXCIpLnJlZHVjZShmdW5jdGlvbiAoYWNjdW11bGF0b3IsIGtleSkge1xuICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yICYmIGFjY3VtdWxhdG9yW2tleV07XG4gICAgfSwgYm9keSk7XG5cbiAgICByZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZmluZWRcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gR3JhcGhRTDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/graphql/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/graphql/request.js":
/*!**********************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/graphql/request.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BRAINTREE_VERSION = (__webpack_require__(/*! ../../constants */ \"(ssr)/./node_modules/braintree-web/client/constants.js\").BRAINTREE_VERSION);\n\nvar assign = (__webpack_require__(/*! ../../../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar snakeCaseToCamelCase = __webpack_require__(/*! ../../../lib/snake-case-to-camel-case */ \"(ssr)/./node_modules/braintree-web/lib/snake-case-to-camel-case.js\");\n\nvar creditCardTokenizationBodyGenerator = __webpack_require__(/*! ./generators/credit-card-tokenization */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/generators/credit-card-tokenization.js\");\nvar creditCardTokenizationResponseAdapter = __webpack_require__(/*! ./adapters/credit-card-tokenization */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/credit-card-tokenization.js\");\n\nvar configurationBodyGenerator = __webpack_require__(/*! ./generators/configuration */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/generators/configuration.js\");\nvar configurationResponseAdapter = __webpack_require__(/*! ./adapters/configuration */ \"(ssr)/./node_modules/braintree-web/client/request/graphql/adapters/configuration.js\");\n\nvar generators = {\n  \"payment_methods/credit_cards\": creditCardTokenizationBodyGenerator,\n  configuration: configurationBodyGenerator,\n};\nvar adapters = {\n  \"payment_methods/credit_cards\": creditCardTokenizationResponseAdapter,\n  configuration: configurationResponseAdapter,\n};\n\nfunction GraphQLRequest(options) {\n  var clientApiPath = options.graphQL.getClientApiPath(options.url);\n\n  this._graphQL = options.graphQL;\n  this._data = options.data;\n  this._method = options.method;\n  this._headers = options.headers;\n  this._clientSdkMetadata = {\n    source: options.metadata.source,\n    integration: options.metadata.integration,\n    sessionId: options.metadata.sessionId,\n  };\n  this._sendAnalyticsEvent = options.sendAnalyticsEvent || Function.prototype;\n\n  this._generator = generators[clientApiPath];\n  this._adapter = adapters[clientApiPath];\n\n  this._sendAnalyticsEvent(\"graphql.init\");\n}\n\nGraphQLRequest.prototype.getUrl = function () {\n  return this._graphQL.getGraphQLEndpoint();\n};\n\nGraphQLRequest.prototype.getBody = function () {\n  var formattedBody = formatBodyKeys(this._data);\n  var generatedBody = this._generator(formattedBody);\n  var body = assign(\n    { clientSdkMetadata: this._clientSdkMetadata },\n    generatedBody\n  );\n\n  return JSON.stringify(body);\n};\n\nGraphQLRequest.prototype.getMethod = function () {\n  return \"POST\";\n};\n\nGraphQLRequest.prototype.getHeaders = function () {\n  var authorization, headers;\n\n  if (this._data.authorizationFingerprint) {\n    this._sendAnalyticsEvent(\"graphql.authorization-fingerprint\");\n    authorization = this._data.authorizationFingerprint;\n  } else {\n    this._sendAnalyticsEvent(\"graphql.tokenization-key\");\n    authorization = this._data.tokenizationKey;\n  }\n\n  headers = {\n    Authorization: \"Bearer \" + authorization,\n    \"Braintree-Version\": BRAINTREE_VERSION,\n  };\n\n  return assign({}, this._headers, headers);\n};\n\nGraphQLRequest.prototype.adaptResponseBody = function (parsedBody) {\n  return this._adapter(parsedBody, this);\n};\n\nGraphQLRequest.prototype.determineStatus = function (\n  httpStatus,\n  parsedResponse\n) {\n  var status, errorClass;\n\n  if (httpStatus === 200) {\n    errorClass =\n      parsedResponse.errors &&\n      parsedResponse.errors[0] &&\n      parsedResponse.errors[0].extensions &&\n      parsedResponse.errors[0].extensions.errorClass;\n\n    if (parsedResponse.data && !parsedResponse.errors) {\n      status = 200;\n    } else if (errorClass === \"VALIDATION\") {\n      status = 422;\n    } else if (errorClass === \"AUTHORIZATION\") {\n      status = 403;\n    } else if (errorClass === \"AUTHENTICATION\") {\n      status = 401;\n    } else if (isGraphQLError(errorClass, parsedResponse)) {\n      status = 403;\n    } else {\n      status = 500;\n    }\n  } else if (!httpStatus) {\n    status = 500;\n  } else {\n    status = httpStatus;\n  }\n\n  this._sendAnalyticsEvent(\"graphql.status.\" + httpStatus);\n  this._sendAnalyticsEvent(\"graphql.determinedStatus.\" + status);\n\n  return status;\n};\n\nfunction isGraphQLError(errorClass, parsedResponse) {\n  return !errorClass && parsedResponse.errors[0].message;\n}\n\nfunction formatBodyKeys(originalBody) {\n  var body = {};\n\n  Object.keys(originalBody).forEach(function (key) {\n    var camelCaseKey = snakeCaseToCamelCase(key);\n\n    if (typeof originalBody[key] === \"object\") {\n      body[camelCaseKey] = formatBodyKeys(originalBody[key]);\n    } else if (typeof originalBody[key] === \"number\") {\n      body[camelCaseKey] = String(originalBody[key]);\n    } else {\n      body[camelCaseKey] = originalBody[key];\n    }\n  });\n\n  return body;\n}\n\nmodule.exports = GraphQLRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9ncmFwaHFsL3JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsd0JBQXdCLHdIQUE0Qzs7QUFFcEUsYUFBYSwyR0FBcUM7QUFDbEQsMkJBQTJCLG1CQUFPLENBQUMsaUhBQXVDOztBQUUxRSwwQ0FBMEMsbUJBQU8sQ0FBQywrSUFBdUM7QUFDekYsNENBQTRDLG1CQUFPLENBQUMsMklBQXFDOztBQUV6RixpQ0FBaUMsbUJBQU8sQ0FBQyx5SEFBNEI7QUFDckUsbUNBQW1DLG1CQUFPLENBQUMscUhBQTBCOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNENBQTRDO0FBQ2xEO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQjtBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2NsaWVudC9yZXF1ZXN0L2dyYXBocWwvcmVxdWVzdC5qcz9iY2Y3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQlJBSU5UUkVFX1ZFUlNJT04gPSByZXF1aXJlKFwiLi4vLi4vY29uc3RhbnRzXCIpLkJSQUlOVFJFRV9WRVJTSU9OO1xuXG52YXIgYXNzaWduID0gcmVxdWlyZShcIi4uLy4uLy4uL2xpYi9hc3NpZ25cIikuYXNzaWduO1xudmFyIHNuYWtlQ2FzZVRvQ2FtZWxDYXNlID0gcmVxdWlyZShcIi4uLy4uLy4uL2xpYi9zbmFrZS1jYXNlLXRvLWNhbWVsLWNhc2VcIik7XG5cbnZhciBjcmVkaXRDYXJkVG9rZW5pemF0aW9uQm9keUdlbmVyYXRvciA9IHJlcXVpcmUoXCIuL2dlbmVyYXRvcnMvY3JlZGl0LWNhcmQtdG9rZW5pemF0aW9uXCIpO1xudmFyIGNyZWRpdENhcmRUb2tlbml6YXRpb25SZXNwb25zZUFkYXB0ZXIgPSByZXF1aXJlKFwiLi9hZGFwdGVycy9jcmVkaXQtY2FyZC10b2tlbml6YXRpb25cIik7XG5cbnZhciBjb25maWd1cmF0aW9uQm9keUdlbmVyYXRvciA9IHJlcXVpcmUoXCIuL2dlbmVyYXRvcnMvY29uZmlndXJhdGlvblwiKTtcbnZhciBjb25maWd1cmF0aW9uUmVzcG9uc2VBZGFwdGVyID0gcmVxdWlyZShcIi4vYWRhcHRlcnMvY29uZmlndXJhdGlvblwiKTtcblxudmFyIGdlbmVyYXRvcnMgPSB7XG4gIFwicGF5bWVudF9tZXRob2RzL2NyZWRpdF9jYXJkc1wiOiBjcmVkaXRDYXJkVG9rZW5pemF0aW9uQm9keUdlbmVyYXRvcixcbiAgY29uZmlndXJhdGlvbjogY29uZmlndXJhdGlvbkJvZHlHZW5lcmF0b3IsXG59O1xudmFyIGFkYXB0ZXJzID0ge1xuICBcInBheW1lbnRfbWV0aG9kcy9jcmVkaXRfY2FyZHNcIjogY3JlZGl0Q2FyZFRva2VuaXphdGlvblJlc3BvbnNlQWRhcHRlcixcbiAgY29uZmlndXJhdGlvbjogY29uZmlndXJhdGlvblJlc3BvbnNlQWRhcHRlcixcbn07XG5cbmZ1bmN0aW9uIEdyYXBoUUxSZXF1ZXN0KG9wdGlvbnMpIHtcbiAgdmFyIGNsaWVudEFwaVBhdGggPSBvcHRpb25zLmdyYXBoUUwuZ2V0Q2xpZW50QXBpUGF0aChvcHRpb25zLnVybCk7XG5cbiAgdGhpcy5fZ3JhcGhRTCA9IG9wdGlvbnMuZ3JhcGhRTDtcbiAgdGhpcy5fZGF0YSA9IG9wdGlvbnMuZGF0YTtcbiAgdGhpcy5fbWV0aG9kID0gb3B0aW9ucy5tZXRob2Q7XG4gIHRoaXMuX2hlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnM7XG4gIHRoaXMuX2NsaWVudFNka01ldGFkYXRhID0ge1xuICAgIHNvdXJjZTogb3B0aW9ucy5tZXRhZGF0YS5zb3VyY2UsXG4gICAgaW50ZWdyYXRpb246IG9wdGlvbnMubWV0YWRhdGEuaW50ZWdyYXRpb24sXG4gICAgc2Vzc2lvbklkOiBvcHRpb25zLm1ldGFkYXRhLnNlc3Npb25JZCxcbiAgfTtcbiAgdGhpcy5fc2VuZEFuYWx5dGljc0V2ZW50ID0gb3B0aW9ucy5zZW5kQW5hbHl0aWNzRXZlbnQgfHwgRnVuY3Rpb24ucHJvdG90eXBlO1xuXG4gIHRoaXMuX2dlbmVyYXRvciA9IGdlbmVyYXRvcnNbY2xpZW50QXBpUGF0aF07XG4gIHRoaXMuX2FkYXB0ZXIgPSBhZGFwdGVyc1tjbGllbnRBcGlQYXRoXTtcblxuICB0aGlzLl9zZW5kQW5hbHl0aWNzRXZlbnQoXCJncmFwaHFsLmluaXRcIik7XG59XG5cbkdyYXBoUUxSZXF1ZXN0LnByb3RvdHlwZS5nZXRVcmwgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLl9ncmFwaFFMLmdldEdyYXBoUUxFbmRwb2ludCgpO1xufTtcblxuR3JhcGhRTFJlcXVlc3QucHJvdG90eXBlLmdldEJvZHkgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBmb3JtYXR0ZWRCb2R5ID0gZm9ybWF0Qm9keUtleXModGhpcy5fZGF0YSk7XG4gIHZhciBnZW5lcmF0ZWRCb2R5ID0gdGhpcy5fZ2VuZXJhdG9yKGZvcm1hdHRlZEJvZHkpO1xuICB2YXIgYm9keSA9IGFzc2lnbihcbiAgICB7IGNsaWVudFNka01ldGFkYXRhOiB0aGlzLl9jbGllbnRTZGtNZXRhZGF0YSB9LFxuICAgIGdlbmVyYXRlZEJvZHlcbiAgKTtcblxuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoYm9keSk7XG59O1xuXG5HcmFwaFFMUmVxdWVzdC5wcm90b3R5cGUuZ2V0TWV0aG9kID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gXCJQT1NUXCI7XG59O1xuXG5HcmFwaFFMUmVxdWVzdC5wcm90b3R5cGUuZ2V0SGVhZGVycyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGF1dGhvcml6YXRpb24sIGhlYWRlcnM7XG5cbiAgaWYgKHRoaXMuX2RhdGEuYXV0aG9yaXphdGlvbkZpbmdlcnByaW50KSB7XG4gICAgdGhpcy5fc2VuZEFuYWx5dGljc0V2ZW50KFwiZ3JhcGhxbC5hdXRob3JpemF0aW9uLWZpbmdlcnByaW50XCIpO1xuICAgIGF1dGhvcml6YXRpb24gPSB0aGlzLl9kYXRhLmF1dGhvcml6YXRpb25GaW5nZXJwcmludDtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLl9zZW5kQW5hbHl0aWNzRXZlbnQoXCJncmFwaHFsLnRva2VuaXphdGlvbi1rZXlcIik7XG4gICAgYXV0aG9yaXphdGlvbiA9IHRoaXMuX2RhdGEudG9rZW5pemF0aW9uS2V5O1xuICB9XG5cbiAgaGVhZGVycyA9IHtcbiAgICBBdXRob3JpemF0aW9uOiBcIkJlYXJlciBcIiArIGF1dGhvcml6YXRpb24sXG4gICAgXCJCcmFpbnRyZWUtVmVyc2lvblwiOiBCUkFJTlRSRUVfVkVSU0lPTixcbiAgfTtcblxuICByZXR1cm4gYXNzaWduKHt9LCB0aGlzLl9oZWFkZXJzLCBoZWFkZXJzKTtcbn07XG5cbkdyYXBoUUxSZXF1ZXN0LnByb3RvdHlwZS5hZGFwdFJlc3BvbnNlQm9keSA9IGZ1bmN0aW9uIChwYXJzZWRCb2R5KSB7XG4gIHJldHVybiB0aGlzLl9hZGFwdGVyKHBhcnNlZEJvZHksIHRoaXMpO1xufTtcblxuR3JhcGhRTFJlcXVlc3QucHJvdG90eXBlLmRldGVybWluZVN0YXR1cyA9IGZ1bmN0aW9uIChcbiAgaHR0cFN0YXR1cyxcbiAgcGFyc2VkUmVzcG9uc2Vcbikge1xuICB2YXIgc3RhdHVzLCBlcnJvckNsYXNzO1xuXG4gIGlmIChodHRwU3RhdHVzID09PSAyMDApIHtcbiAgICBlcnJvckNsYXNzID1cbiAgICAgIHBhcnNlZFJlc3BvbnNlLmVycm9ycyAmJlxuICAgICAgcGFyc2VkUmVzcG9uc2UuZXJyb3JzWzBdICYmXG4gICAgICBwYXJzZWRSZXNwb25zZS5lcnJvcnNbMF0uZXh0ZW5zaW9ucyAmJlxuICAgICAgcGFyc2VkUmVzcG9uc2UuZXJyb3JzWzBdLmV4dGVuc2lvbnMuZXJyb3JDbGFzcztcblxuICAgIGlmIChwYXJzZWRSZXNwb25zZS5kYXRhICYmICFwYXJzZWRSZXNwb25zZS5lcnJvcnMpIHtcbiAgICAgIHN0YXR1cyA9IDIwMDtcbiAgICB9IGVsc2UgaWYgKGVycm9yQ2xhc3MgPT09IFwiVkFMSURBVElPTlwiKSB7XG4gICAgICBzdGF0dXMgPSA0MjI7XG4gICAgfSBlbHNlIGlmIChlcnJvckNsYXNzID09PSBcIkFVVEhPUklaQVRJT05cIikge1xuICAgICAgc3RhdHVzID0gNDAzO1xuICAgIH0gZWxzZSBpZiAoZXJyb3JDbGFzcyA9PT0gXCJBVVRIRU5USUNBVElPTlwiKSB7XG4gICAgICBzdGF0dXMgPSA0MDE7XG4gICAgfSBlbHNlIGlmIChpc0dyYXBoUUxFcnJvcihlcnJvckNsYXNzLCBwYXJzZWRSZXNwb25zZSkpIHtcbiAgICAgIHN0YXR1cyA9IDQwMztcbiAgICB9IGVsc2Uge1xuICAgICAgc3RhdHVzID0gNTAwO1xuICAgIH1cbiAgfSBlbHNlIGlmICghaHR0cFN0YXR1cykge1xuICAgIHN0YXR1cyA9IDUwMDtcbiAgfSBlbHNlIHtcbiAgICBzdGF0dXMgPSBodHRwU3RhdHVzO1xuICB9XG5cbiAgdGhpcy5fc2VuZEFuYWx5dGljc0V2ZW50KFwiZ3JhcGhxbC5zdGF0dXMuXCIgKyBodHRwU3RhdHVzKTtcbiAgdGhpcy5fc2VuZEFuYWx5dGljc0V2ZW50KFwiZ3JhcGhxbC5kZXRlcm1pbmVkU3RhdHVzLlwiICsgc3RhdHVzKTtcblxuICByZXR1cm4gc3RhdHVzO1xufTtcblxuZnVuY3Rpb24gaXNHcmFwaFFMRXJyb3IoZXJyb3JDbGFzcywgcGFyc2VkUmVzcG9uc2UpIHtcbiAgcmV0dXJuICFlcnJvckNsYXNzICYmIHBhcnNlZFJlc3BvbnNlLmVycm9yc1swXS5tZXNzYWdlO1xufVxuXG5mdW5jdGlvbiBmb3JtYXRCb2R5S2V5cyhvcmlnaW5hbEJvZHkpIHtcbiAgdmFyIGJvZHkgPSB7fTtcblxuICBPYmplY3Qua2V5cyhvcmlnaW5hbEJvZHkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBjYW1lbENhc2VLZXkgPSBzbmFrZUNhc2VUb0NhbWVsQ2FzZShrZXkpO1xuXG4gICAgaWYgKHR5cGVvZiBvcmlnaW5hbEJvZHlba2V5XSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgYm9keVtjYW1lbENhc2VLZXldID0gZm9ybWF0Qm9keUtleXMob3JpZ2luYWxCb2R5W2tleV0pO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIG9yaWdpbmFsQm9keVtrZXldID09PSBcIm51bWJlclwiKSB7XG4gICAgICBib2R5W2NhbWVsQ2FzZUtleV0gPSBTdHJpbmcob3JpZ2luYWxCb2R5W2tleV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBib2R5W2NhbWVsQ2FzZUtleV0gPSBvcmlnaW5hbEJvZHlba2V5XTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBib2R5O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdyYXBoUUxSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/graphql/request.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/index.js":
/*!************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar once = __webpack_require__(/*! ../../lib/once */ \"(ssr)/./node_modules/braintree-web/lib/once.js\");\nvar AJAXDriver = __webpack_require__(/*! ./ajax-driver */ \"(ssr)/./node_modules/braintree-web/client/request/ajax-driver.js\");\n\nmodule.exports = function (options, cb) {\n  cb = once(cb || Function.prototype);\n  options.method = (options.method || \"GET\").toUpperCase();\n  options.timeout = options.timeout == null ? 60000 : options.timeout;\n  options.data = options.data || {};\n\n  AJAXDriver.request(options, cb);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixXQUFXLG1CQUFPLENBQUMsc0VBQWdCO0FBQ25DLGlCQUFpQixtQkFBTyxDQUFDLHVGQUFlOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvY2xpZW50L3JlcXVlc3QvaW5kZXguanM/MGE2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIG9uY2UgPSByZXF1aXJlKFwiLi4vLi4vbGliL29uY2VcIik7XG52YXIgQUpBWERyaXZlciA9IHJlcXVpcmUoXCIuL2FqYXgtZHJpdmVyXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcHRpb25zLCBjYikge1xuICBjYiA9IG9uY2UoY2IgfHwgRnVuY3Rpb24ucHJvdG90eXBlKTtcbiAgb3B0aW9ucy5tZXRob2QgPSAob3B0aW9ucy5tZXRob2QgfHwgXCJHRVRcIikudG9VcHBlckNhc2UoKTtcbiAgb3B0aW9ucy50aW1lb3V0ID0gb3B0aW9ucy50aW1lb3V0ID09IG51bGwgPyA2MDAwMCA6IG9wdGlvbnMudGltZW91dDtcbiAgb3B0aW9ucy5kYXRhID0gb3B0aW9ucy5kYXRhIHx8IHt9O1xuXG4gIEFKQVhEcml2ZXIucmVxdWVzdChvcHRpb25zLCBjYik7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/parse-body.js":
/*!*****************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/parse-body.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (body) {\n  try {\n    body = JSON.parse(body);\n  } catch (e) {\n    /* ignored */\n  }\n\n  return body;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9wYXJzZS1ib2R5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvY2xpZW50L3JlcXVlc3QvcGFyc2UtYm9keS5qcz9mZWE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChib2R5KSB7XG4gIHRyeSB7XG4gICAgYm9keSA9IEpTT04ucGFyc2UoYm9keSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvKiBpZ25vcmVkICovXG4gIH1cblxuICByZXR1cm4gYm9keTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/parse-body.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/prep-body.js":
/*!****************************************************************!*\
  !*** ./node_modules/braintree-web/client/request/prep-body.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (method, body) {\n  if (typeof method !== \"string\") {\n    throw new Error(\"Method must be a string\");\n  }\n\n  if (method.toLowerCase() !== \"get\" && body != null) {\n    body = typeof body === \"string\" ? body : JSON.stringify(body);\n  }\n\n  return body;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC9wcmVwLWJvZHkuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvY2xpZW50L3JlcXVlc3QvcHJlcC1ib2R5LmpzPzQ2MmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG1ldGhvZCwgYm9keSkge1xuICBpZiAodHlwZW9mIG1ldGhvZCAhPT0gXCJzdHJpbmdcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIk1ldGhvZCBtdXN0IGJlIGEgc3RyaW5nXCIpO1xuICB9XG5cbiAgaWYgKG1ldGhvZC50b0xvd2VyQ2FzZSgpICE9PSBcImdldFwiICYmIGJvZHkgIT0gbnVsbCkge1xuICAgIGJvZHkgPSB0eXBlb2YgYm9keSA9PT0gXCJzdHJpbmdcIiA/IGJvZHkgOiBKU09OLnN0cmluZ2lmeShib2R5KTtcbiAgfVxuXG4gIHJldHVybiBib2R5O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/prep-body.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/client/request/xhr.js":
/*!**********************************************************!*\
  !*** ./node_modules/braintree-web/client/request/xhr.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("\n\nvar isXHRAvailable =\n  typeof window !== \"undefined\" &&\n  window.XMLHttpRequest &&\n  \"withCredentials\" in new window.XMLHttpRequest();\n\nfunction getRequestObject() {\n  return isXHRAvailable\n    ? new window.XMLHttpRequest()\n    : new window.XDomainRequest();\n}\n\nmodule.exports = {\n  isAvailable: isXHRAvailable,\n  getRequestObject: getRequestObject,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC94aHIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9jbGllbnQvcmVxdWVzdC94aHIuanM/ZGJhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzWEhSQXZhaWxhYmxlID1cbiAgdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICB3aW5kb3cuWE1MSHR0cFJlcXVlc3QgJiZcbiAgXCJ3aXRoQ3JlZGVudGlhbHNcIiBpbiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XG5cbmZ1bmN0aW9uIGdldFJlcXVlc3RPYmplY3QoKSB7XG4gIHJldHVybiBpc1hIUkF2YWlsYWJsZVxuICAgID8gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCgpXG4gICAgOiBuZXcgd2luZG93LlhEb21haW5SZXF1ZXN0KCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0F2YWlsYWJsZTogaXNYSFJBdmFpbGFibGUsXG4gIGdldFJlcXVlc3RPYmplY3Q6IGdldFJlcXVlc3RPYmplY3QsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/client/request/xhr.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/google-payment/errors.js":
/*!*************************************************************!*\
  !*** ./node_modules/braintree-web/google-payment/errors.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.Google Payment - Creation Error Codes\n * @description Errors that occur when [creating the Google Payment component](./module-braintree-web_google-payment.html#.create).\n * @property {MERCHANT} GOOGLE_PAYMENT_NOT_ENABLED Occurs when Google Pay is not enabled on the Braintree control panel.\n * @property {MERCHANT} GOOGLE_PAYMENT_UNSUPPORTED_VERSION Occurs when a Google Pay version is used that is not supported by the Braintree SDK.\n */\n\n/**\n * @name BraintreeError.Google Payment - parseResponse Error Codes\n * @description Errors that occur when [parsing the response from Google](./GooglePayment.html#parseResponse).\n * @property {UNKNOWN} GOOGLE_PAYMENT_GATEWAY_ERROR Occurs when Google Pay could not be tokenized.\n */\n\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  GOOGLE_PAYMENT_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"GOOGLE_PAYMENT_NOT_ENABLED\",\n    message: \"Google Pay is not enabled for this merchant.\",\n  },\n  GOOGLE_PAYMENT_GATEWAY_ERROR: {\n    code: \"GOOGLE_PAYMENT_GATEWAY_ERROR\",\n    message:\n      \"There was an error when tokenizing the Google Pay payment method.\",\n    type: BraintreeError.types.UNKNOWN,\n  },\n  GOOGLE_PAYMENT_UNSUPPORTED_VERSION: {\n    code: \"GOOGLE_PAYMENT_UNSUPPORTED_VERSION\",\n    type: BraintreeError.types.MERCHANT,\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9nb29nbGUtcGF5bWVudC9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFNBQVM7QUFDdkI7O0FBRUEscUJBQXFCLG1CQUFPLENBQUMseUZBQXdCOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2dvb2dsZS1wYXltZW50L2Vycm9ycy5qcz9kMzc0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEBuYW1lIEJyYWludHJlZUVycm9yLkdvb2dsZSBQYXltZW50IC0gQ3JlYXRpb24gRXJyb3IgQ29kZXNcbiAqIEBkZXNjcmlwdGlvbiBFcnJvcnMgdGhhdCBvY2N1ciB3aGVuIFtjcmVhdGluZyB0aGUgR29vZ2xlIFBheW1lbnQgY29tcG9uZW50XSguL21vZHVsZS1icmFpbnRyZWUtd2ViX2dvb2dsZS1wYXltZW50Lmh0bWwjLmNyZWF0ZSkuXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBHT09HTEVfUEFZTUVOVF9OT1RfRU5BQkxFRCBPY2N1cnMgd2hlbiBHb29nbGUgUGF5IGlzIG5vdCBlbmFibGVkIG9uIHRoZSBCcmFpbnRyZWUgY29udHJvbCBwYW5lbC5cbiAqIEBwcm9wZXJ0eSB7TUVSQ0hBTlR9IEdPT0dMRV9QQVlNRU5UX1VOU1VQUE9SVEVEX1ZFUlNJT04gT2NjdXJzIHdoZW4gYSBHb29nbGUgUGF5IHZlcnNpb24gaXMgdXNlZCB0aGF0IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIEJyYWludHJlZSBTREsuXG4gKi9cblxuLyoqXG4gKiBAbmFtZSBCcmFpbnRyZWVFcnJvci5Hb29nbGUgUGF5bWVudCAtIHBhcnNlUmVzcG9uc2UgRXJyb3IgQ29kZXNcbiAqIEBkZXNjcmlwdGlvbiBFcnJvcnMgdGhhdCBvY2N1ciB3aGVuIFtwYXJzaW5nIHRoZSByZXNwb25zZSBmcm9tIEdvb2dsZV0oLi9Hb29nbGVQYXltZW50Lmh0bWwjcGFyc2VSZXNwb25zZSkuXG4gKiBAcHJvcGVydHkge1VOS05PV059IEdPT0dMRV9QQVlNRU5UX0dBVEVXQVlfRVJST1IgT2NjdXJzIHdoZW4gR29vZ2xlIFBheSBjb3VsZCBub3QgYmUgdG9rZW5pemVkLlxuICovXG5cbnZhciBCcmFpbnRyZWVFcnJvciA9IHJlcXVpcmUoXCIuLi9saWIvYnJhaW50cmVlLWVycm9yXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgR09PR0xFX1BBWU1FTlRfTk9UX0VOQUJMRUQ6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5NRVJDSEFOVCxcbiAgICBjb2RlOiBcIkdPT0dMRV9QQVlNRU5UX05PVF9FTkFCTEVEXCIsXG4gICAgbWVzc2FnZTogXCJHb29nbGUgUGF5IGlzIG5vdCBlbmFibGVkIGZvciB0aGlzIG1lcmNoYW50LlwiLFxuICB9LFxuICBHT09HTEVfUEFZTUVOVF9HQVRFV0FZX0VSUk9SOiB7XG4gICAgY29kZTogXCJHT09HTEVfUEFZTUVOVF9HQVRFV0FZX0VSUk9SXCIsXG4gICAgbWVzc2FnZTpcbiAgICAgIFwiVGhlcmUgd2FzIGFuIGVycm9yIHdoZW4gdG9rZW5pemluZyB0aGUgR29vZ2xlIFBheSBwYXltZW50IG1ldGhvZC5cIixcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5VTktOT1dOLFxuICB9LFxuICBHT09HTEVfUEFZTUVOVF9VTlNVUFBPUlRFRF9WRVJTSU9OOiB7XG4gICAgY29kZTogXCJHT09HTEVfUEFZTUVOVF9VTlNVUFBPUlRFRF9WRVJTSU9OXCIsXG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/google-payment/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/google-payment/google-payment.js":
/*!*********************************************************************!*\
  !*** ./node_modules/braintree-web/google-payment/google-payment.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar assign = (__webpack_require__(/*! ../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar convertMethodsToError = __webpack_require__(/*! ../lib/convert-methods-to-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\");\nvar find = __webpack_require__(/*! ../lib/find */ \"(ssr)/./node_modules/braintree-web/lib/find.js\");\nvar generateGooglePayConfiguration = __webpack_require__(/*! ../lib/generate-google-pay-configuration */ \"(ssr)/./node_modules/braintree-web/lib/generate-google-pay-configuration.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/google-payment/errors.js\");\nvar methods = __webpack_require__(/*! ../lib/methods */ \"(ssr)/./node_modules/braintree-web/lib/methods.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\n\nvar CREATE_PAYMENT_DATA_REQUEST_METHODS = {\n  1: \"_createV1PaymentDataRequest\",\n  2: \"_createV2PaymentDataRequest\",\n};\n\n/**\n * @typedef {object} GooglePayment~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {object} details Additional account details.\n * @property {string} details.cardType Type of card, ex: Visa, MasterCard.\n * @property {string} details.lastFour Last four digits of card number.\n * @property {string} details.lastTwo Last two digits of card number.\n * @property {boolean} details.isNetworkTokenized True if the card is network tokenized.\n * @property {string} details.bin First six digits of card number.\n * @property {string} description A human-readable description.\n * @property {string} type The payment method type, `CreditCard` or `AndroidPayCard`.\n * @property {object} binData Information about the card based on the bin.\n * @property {string} binData.commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.countryOfIssuance The country of issuance.\n * @property {string} binData.debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.issuingBank The issuing bank.\n * @property {string} binData.payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.productId The product id.\n */\n\n/**\n * @class GooglePayment\n * @param {object} options Google Payment {@link module:braintree-web/google-payment.create create} options.\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/google-payment.create|braintree-web.google-payment.create} instead.</strong>\n * @classdesc This class represents a Google Payment component produced by {@link module:braintree-web/google-payment.create|braintree-web/google-payment.create}. Instances of this class have methods for initializing the Google Pay flow.\n */\nfunction GooglePayment(options) {\n  this._createPromise = options.createPromise;\n  this._client = options.client;\n  this._useDeferredClient = options.useDeferredClient;\n  // NEXT_MAJOR_VERSION this should be updated to 2 (or whatever the current latest version is)\n  this._googlePayVersion = options.googlePayVersion || 1;\n  this._googleMerchantId = options.googleMerchantId;\n\n  if (this._isUnsupportedGooglePayAPIVersion()) {\n    throw new BraintreeError({\n      code: errors.GOOGLE_PAYMENT_UNSUPPORTED_VERSION.code,\n      message:\n        \"The Braintree SDK does not support Google Pay version \" +\n        this._googlePayVersion +\n        \". Please upgrade the version of your Braintree SDK and contact support if this error persists.\",\n      type: errors.GOOGLE_PAYMENT_UNSUPPORTED_VERSION.type,\n    });\n  }\n}\n\nGooglePayment.prototype._waitForClient = function () {\n  if (this._client) {\n    return Promise.resolve();\n  }\n\n  return this._createPromise.then(\n    function (client) {\n      this._client = client;\n    }.bind(this)\n  );\n};\n\nGooglePayment.prototype._isUnsupportedGooglePayAPIVersion = function () {\n  // if we don't have createPaymentDatqRequest method for the specific\n  // API version, then the version is not supported\n  return !(this._googlePayVersion in CREATE_PAYMENT_DATA_REQUEST_METHODS);\n};\n\nGooglePayment.prototype._getDefaultConfig = function () {\n  if (!this._defaultConfig) {\n    this._defaultConfig = generateGooglePayConfiguration(\n      this._client.getConfiguration(),\n      this._googlePayVersion,\n      this._googleMerchantId\n    );\n  }\n\n  return this._defaultConfig;\n};\n\nGooglePayment.prototype._createV1PaymentDataRequest = function (\n  paymentDataRequest\n) {\n  var defaultConfig = this._getDefaultConfig();\n  var overrideCardNetworks =\n    paymentDataRequest.cardRequirements &&\n    paymentDataRequest.cardRequirements.allowedCardNetworks;\n  var defaultConfigCardNetworks =\n    defaultConfig.cardRequirements.allowedCardNetworks;\n  var allowedCardNetworks = overrideCardNetworks || defaultConfigCardNetworks;\n\n  paymentDataRequest = assign({}, defaultConfig, paymentDataRequest);\n\n  // this way we can preserve allowedCardNetworks from default integration\n  // if merchant did not pass any in `cardRequirements`\n  paymentDataRequest.cardRequirements.allowedCardNetworks = allowedCardNetworks;\n\n  return paymentDataRequest;\n};\n\nGooglePayment.prototype._createV2PaymentDataRequest = function (\n  paymentDataRequest\n) {\n  var defaultConfig = this._getDefaultConfig();\n\n  if (paymentDataRequest.allowedPaymentMethods) {\n    paymentDataRequest.allowedPaymentMethods.forEach(function (paymentMethod) {\n      var defaultPaymentMethod = find(\n        defaultConfig.allowedPaymentMethods,\n        \"type\",\n        paymentMethod.type\n      );\n\n      if (defaultPaymentMethod) {\n        applyDefaultsToPaymentMethodConfiguration(\n          paymentMethod,\n          defaultPaymentMethod\n        );\n      }\n    });\n  }\n\n  paymentDataRequest = assign({}, defaultConfig, paymentDataRequest);\n\n  return paymentDataRequest;\n};\n\n/**\n * Create a configuration object for use in the `loadPaymentData` method.\n *\n * **Note**: Version 1 of the Google Pay Api is deprecated and will become unsupported in a future version. Until then, version 1 will continue to be used by default, and version 1 schema parameters and overrides will remain functional on existing integrations. However, new integrations and all following examples will be presented in the GooglePay version 2 schema. See [Google Pay's upgrade guide](https://developers.google.com/pay/api/web/guides/resources/update-to-latest-version) to see how to update your integration.\n *\n * If `options.googlePayVersion === 2` was set during the initial {@link module:braintree-web/google-payment.create|create} call, overrides must match the Google Pay v2 schema to be valid.\n *\n * @public\n * @param {object} overrides The supplied parameters for creating the PaymentDataRequest object. Required parameters are:\n *  @param {object} overrides.transactionInfo Object according to the [Google Pay Transaction Info](https://developers.google.com/pay/api/web/reference/object#TransactionInfo) spec.\n *  Optionally, any of the parameters in the [PaymentDataRequest](https://developers.google.com/pay/api/web/reference/object#PaymentDataRequest) parameters can be overridden, but note that it is recommended only to override top level parameters to avoid squashing deeply nested configuration objects. An example can be found below showing how to safely edit these deeply nested objects.\n * @example\n * var paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({\n *   merchantInfo: {\n *     merchantId: 'my-merchant-id-from-google'\n *   },\n *   transactionInfo: {\n *     currencyCode: 'USD',\n *     totalPriceStatus: 'FINAL',\n *     totalPrice: '100.00'\n *   }\n * });\n *\n * // Update card payment methods to require billing address\n * var cardPaymentMethod = paymentDataRequest.allowedPaymentMethods;\n * cardPaymentMethod.parameters.billingAddressRequired = true;\n * cardPaymentMethod.parameters.billingAddressParameters = {\n *   format: 'FULL',\n *   phoneNumberRequired: true\n * };\n *\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * })\n *\n * paymentsClient.loadPaymentData(paymentDataRequest).then(function (response) {\n *   // handle response with googlePaymentInstance.parseResponse\n *   // (see below)\n * });\n * @example <caption>With deferred client</caption>\n * googlePaymentInstance.createPaymentDataRequest({\n *   merchantInfo: {\n *     merchantId: 'my-merchant-id-from-google'\n *   },\n *   transactionInfo: {\n *     currencyCode: 'USD',\n *     totalPriceStatus: 'FINAL',\n *     totalPrice: '100.00'\n *   }\n * }).then(function (paymentDataRequest) {\n *   // Update card payment methods to require billing address\n *   var cardPaymentMethod = paymentDataRequest.allowedPaymentMethods;\n *   cardPaymentMethod.parameters.billingAddressRequired = true;\n *   cardPaymentMethod.parameters.billingAddressParameters = {\n *     format: 'FULL',\n *     phoneNumberRequired: true\n *   };\n *\n *   var paymentsClient = new google.payments.api.PaymentsClient({\n *     environment: 'TEST' // or 'PRODUCTION'\n *   })\n *\n *   return paymentsClient.loadPaymentData(paymentDataRequest);\n * }).then(function (response) {\n *   // handle response with googlePaymentInstance.parseResponse\n *   // (see below)\n * });\n * @returns {object|Promise} Returns a configuration object for Google PaymentDataRequest. If instantiated with `useDeferredClient` and an `authorization` it will return a promise that resolves with the configuration.\n */\nGooglePayment.prototype.createPaymentDataRequest = function (overrides) {\n  if (!this._useDeferredClient) {\n    return this._createPaymentDataRequestSyncronously(overrides);\n  }\n\n  return this._waitForClient().then(\n    function () {\n      return this._createPaymentDataRequestSyncronously(overrides);\n    }.bind(this)\n  );\n};\n\nGooglePayment.prototype._createPaymentDataRequestSyncronously = function (\n  overrides\n) {\n  var paymentDataRequest = assign({}, overrides);\n  var version = this._googlePayVersion;\n  var createPaymentDataRequestMethod =\n    CREATE_PAYMENT_DATA_REQUEST_METHODS[version];\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"google-payment.v\" + version + \".createPaymentDataRequest\"\n  );\n\n  return this[createPaymentDataRequestMethod](paymentDataRequest);\n};\n\n/**\n * Parse the response from the tokenization.\n * @public\n * @param {object} response The response back from the Google Pay tokenization.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link GooglePay~tokenizePayload|tokenizePayload}. If no callback is provided, `parseResponse` returns a promise that resolves with a {@link GooglePayment~tokenizePayload|tokenizePayload}.\n * @example with callback\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * })\n *\n * paymentsClient.loadPaymentData(paymentDataRequestFromCreatePaymentDataRequest).then(function (response) {\n *   googlePaymentInstance.parseResponse(response, function (err, data) {\n *     if (err) {\n *       // handle errors\n *     }\n *     // send parsedResponse.nonce to your server\n *   });\n * });\n * @example with promise\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * })\n *\n * paymentsClient.loadPaymentData(paymentDataRequestFromCreatePaymentDataRequest).then(function (response) {\n *   return googlePaymentInstance.parseResponse(response);\n * }).then(function (parsedResponse) {\n *   // send parsedResponse.nonce to your server\n * }).catch(function (err) {\n *   // handle errors\n * });\n * @returns {(Promise|void)} Returns a promise that resolves the parsed response if no callback is provided.\n */\nGooglePayment.prototype.parseResponse = function (response) {\n  var self = this;\n\n  return Promise.resolve()\n    .then(function () {\n      var payload;\n      var rawResponse =\n        response.apiVersion === 2\n          ? response.paymentMethodData.tokenizationData.token\n          : response.paymentMethodToken.token;\n      var parsedResponse = JSON.parse(rawResponse);\n      var error = parsedResponse.error;\n\n      if (error) {\n        return Promise.reject(error);\n      }\n\n      analytics.sendEvent(\n        self._createPromise,\n        \"google-payment.parseResponse.succeeded\"\n      );\n\n      if (parsedResponse.paypalAccounts) {\n        payload = parsedResponse.paypalAccounts[0];\n        analytics.sendEvent(\n          self._createPromise,\n          \"google-payment.parseResponse.succeeded.paypal\"\n        );\n\n        return Promise.resolve({\n          nonce: payload.nonce,\n          type: payload.type,\n          description: payload.description,\n        });\n      }\n      payload = parsedResponse.androidPayCards[0];\n      analytics.sendEvent(\n        self._createPromise,\n        \"google-payment.parseResponse.succeeded.google-payment\"\n      );\n\n      return Promise.resolve({\n        nonce: payload.nonce,\n        type: payload.type,\n        description: payload.description,\n        details: {\n          cardType: payload.details.cardType,\n          lastFour: payload.details.lastFour,\n          lastTwo: payload.details.lastTwo,\n          isNetworkTokenized: payload.details.isNetworkTokenized,\n          bin: payload.details.bin,\n        },\n        binData: payload.binData,\n      });\n    })\n    .catch(function (error) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"google-payment.parseResponse.failed\"\n      );\n\n      return Promise.reject(\n        new BraintreeError({\n          code: errors.GOOGLE_PAYMENT_GATEWAY_ERROR.code,\n          message: errors.GOOGLE_PAYMENT_GATEWAY_ERROR.message,\n          type: errors.GOOGLE_PAYMENT_GATEWAY_ERROR.type,\n          details: {\n            originalError: error,\n          },\n        })\n      );\n    });\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/google-payment.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * googlePaymentInstance.teardown();\n * @example <caption>With callback</caption>\n * googlePaymentInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nGooglePayment.prototype.teardown = function () {\n  convertMethodsToError(this, methods(GooglePayment.prototype));\n\n  return Promise.resolve();\n};\n\nfunction applyDefaultsToPaymentMethodConfiguration(\n  merchantSubmittedPaymentMethod,\n  defaultPaymentMethod\n) {\n  Object.keys(defaultPaymentMethod).forEach(function (parameter) {\n    if (typeof defaultPaymentMethod[parameter] === \"object\") {\n      merchantSubmittedPaymentMethod[parameter] = assign(\n        {},\n        defaultPaymentMethod[parameter],\n        merchantSubmittedPaymentMethod[parameter]\n      );\n    } else {\n      merchantSubmittedPaymentMethod[parameter] =\n        merchantSubmittedPaymentMethod[parameter] ||\n        defaultPaymentMethod[parameter];\n    }\n  });\n}\n\nmodule.exports = wrapPromise.wrapPrototype(GooglePayment);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/google-payment/google-payment.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/google-payment/index.js":
/*!************************************************************!*\
  !*** ./node_modules/braintree-web/google-payment/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * @module braintree-web/google-payment\n * @description A component to integrate with Google Pay. The majority of the integration uses [Google's pay.js JavaScript file](https://pay.google.com/gp/p/js/pay.js). The Braintree component generates the configuration object necessary for Google Pay to initiate the Payment Request and parse the returned data to retrieve the payment method nonce which is used to process the transaction on the server.\n */\n\nvar GooglePayment = __webpack_require__(/*! ./google-payment */ \"(ssr)/./node_modules/braintree-web/google-payment/google-payment.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar createAssetsUrl = __webpack_require__(/*! ../lib/create-assets-url */ \"(ssr)/./node_modules/braintree-web/lib/create-assets-url.js\");\nvar createDeferredClient = __webpack_require__(/*! ../lib/create-deferred-client */ \"(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js\");\nvar basicComponentVerification = __webpack_require__(/*! ../lib/basic-component-verification */ \"(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar VERSION = \"3.99.0\";\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/google-payment/errors.js\");\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {boolean} [options.useDeferredClient] Used in conjunction with `authorization`, allows the Google Payment instance to be available right away by fetching the client configuration in the background. When this option is used, {@link GooglePayment#createPaymentDataRequest} will return a promise that resolves with the configuration instead of returning synchronously.\n * @param {number} [options.googlePayVersion] The version of the Google Pay API to use. Value of 2 is required to accept parameters documented [by Google](https://developers.google.com/pay/api/web/reference/object). Omit this parameter to use the deprecated Google Pay Version 1.\n * @param {string} [options.googleMerchantId] A Google merchant identifier issued after your website is approved by Google. Required when PaymentsClient is initialized with an environment property of PRODUCTION, but may be omitted in TEST environment.\n * @param {callback} [callback] The second argument, `data`, is the {@link GooglePayment} instance. If no callback is provided, `create` returns a promise that resolves with the {@link GooglePayment} instance.\n * @example <caption>Simple Example</caption>\n * // include https://pay.google.com/gp/p/js/pay.js in a script tag\n * // on your page to load the `google.payments.api.PaymentsClient` global object.\n *\n * var paymentButton = document.querySelector('#google-pay-button');\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * });\n *\n * braintree.client.create({\n *   authorization: 'tokenization-key-or-client-token'\n * }).then(function (clientInstance) {\n *   return braintree.googlePayment.create({\n *     client: clientInstance,\n *      googlePayVersion: 2,\n *      googleMerchantId: 'your-merchant-id-from-google'\n *   });\n * }).then(function (googlePaymentInstance) {\n *   paymentButton.addEventListener('click', function (event) {\n *     var paymentDataRequest;\n *\n *     event.preventDefault();\n *\n *     paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({\n *       transactionInfo: {\n *         currencyCode: 'USD',\n *         totalPriceStatus: 'FINAL',\n *         totalPrice: '100.00'\n *       }\n *     });\n *\n *     paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\n *       return googlePaymentInstance.parseResponse(paymentData);\n *     }).then(function (result) {\n *       // send result.nonce to your server\n *     }).catch(function (err) {\n *       // handle err\n *     });\n *   });\n * });\n * @example <caption>Check Browser and Customer Compatibility</caption>\n * var paymentsClient = new google.payments.api.PaymentsClient({\n *   environment: 'TEST' // or 'PRODUCTION'\n * });\n *\n * function setupGooglePayButton(googlePaymentInstance) {\n *   var button = document.createElement('button');\n *\n *   button.id = 'google-pay';\n *   button.appendChild(document.createTextNode('Google Pay'));\n *   button.addEventListener('click', function (event) {\n *     var paymentRequestData;\n *\n *     event.preventDefault();\n *\n *     paymentDataRequest = googlePaymentInstance.createPaymentDataRequest({\n *       transactionInfo: {\n *         currencyCode: 'USD',\n *         totalPriceStatus: 'FINAL',\n *         totalPrice: '100.00' // your amount\n *       }\n *     });\n *\n *     paymentsClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\n *       return googlePaymentInstance.parseResponse(paymentData);\n *       }).then(function (result) {\n *       // send result.nonce to your server\n *     }).catch(function (err) {\n *       // handle errors\n *     });\n *   });\n *\n *   document.getElementById('container').appendChild(button);\n * }\n *\n * braintree.client.create({\n *   authorization: 'tokenization-key-or-client-token'\n * }).then(function (clientInstance) {\n *   return braintree.googlePayment.create({\n *     client: clientInstance,\n *     googlePayVersion: 2,\n *     googleMerchantId: 'your-merchant-id-from-google'\n *   });\n * }).then(function (googlePaymentInstance) {\n *\n *   return paymentsClient.isReadyToPay({\n *     // see https://developers.google.com/pay/api/web/reference/object#IsReadyToPayRequest for all options\n *     apiVersion: 2,\n *     apiVersionMinor: 0,\n *     allowedPaymentMethods: googlePaymentInstance.createPaymentDataRequest().allowedPaymentMethods,\n *     existingPaymentMethodRequired: true\n *   });\n * }).then(function (response) {\n *   if (response.result) {\n *     setupGooglePayButton(googlePaymentInstance);\n *   }\n * }).catch(function (err) {\n *   // handle setup errors\n * });\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nfunction create(options) {\n  var name = \"Google Pay\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var createPromise, instance;\n\n      createPromise = createDeferredClient\n        .create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: createAssetsUrl.create(options.authorization),\n          name: name,\n        })\n        .then(function (client) {\n          var configuration = client.getConfiguration();\n\n          options.client = client;\n          if (!configuration.gatewayConfiguration.androidPay) {\n            return Promise.reject(\n              new BraintreeError(errors.GOOGLE_PAYMENT_NOT_ENABLED)\n            );\n          }\n\n          return client;\n        });\n\n      options.createPromise = createPromise;\n      instance = new GooglePayment(options);\n\n      if (!options.useDeferredClient) {\n        return createPromise.then(function (client) {\n          instance._client = client;\n\n          return instance;\n        });\n      }\n\n      return instance;\n    });\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `{@pkg version}`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/google-payment/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/external/attribute-validation-error.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/external/attribute-validation-error.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ../../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar errors = __webpack_require__(/*! ../shared/errors */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/errors.js\");\nvar allowedAttributes = (__webpack_require__(/*! ../shared/constants */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js\").allowedAttributes);\n\nfunction attributeValidationError(attribute, value) {\n  var err;\n\n  if (!allowedAttributes.hasOwnProperty(attribute)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED.type,\n      code: errors.HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED.code,\n      message:\n        'The \"' + attribute + '\" attribute is not supported in Hosted Fields.',\n    });\n  } else if (value != null && !_isValid(attribute, value)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED.type,\n      code: errors.HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED.code,\n      message:\n        'Value \"' +\n        value +\n        '\" is not allowed for \"' +\n        attribute +\n        '\" attribute.',\n    });\n  }\n\n  return err;\n}\n\nfunction _isValid(attribute, value) {\n  if (allowedAttributes[attribute] === \"string\") {\n    return typeof value === \"string\" || typeof value === \"number\";\n  } else if (allowedAttributes[attribute] === \"boolean\") {\n    return String(value) === \"true\" || String(value) === \"false\";\n  }\n\n  return false;\n}\n\nmodule.exports = attributeValidationError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL2V4dGVybmFsL2F0dHJpYnV0ZS12YWxpZGF0aW9uLWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHFCQUFxQixtQkFBTyxDQUFDLDRGQUEyQjtBQUN4RCxhQUFhLG1CQUFPLENBQUMsMkZBQWtCO0FBQ3ZDLHdCQUF3QiwwSUFBZ0Q7O0FBRXhFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2hvc3RlZC1maWVsZHMvZXh0ZXJuYWwvYXR0cmlidXRlLXZhbGlkYXRpb24tZXJyb3IuanM/YzM5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIEJyYWludHJlZUVycm9yID0gcmVxdWlyZShcIi4uLy4uL2xpYi9icmFpbnRyZWUtZXJyb3JcIik7XG52YXIgZXJyb3JzID0gcmVxdWlyZShcIi4uL3NoYXJlZC9lcnJvcnNcIik7XG52YXIgYWxsb3dlZEF0dHJpYnV0ZXMgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2NvbnN0YW50c1wiKS5hbGxvd2VkQXR0cmlidXRlcztcblxuZnVuY3Rpb24gYXR0cmlidXRlVmFsaWRhdGlvbkVycm9yKGF0dHJpYnV0ZSwgdmFsdWUpIHtcbiAgdmFyIGVycjtcblxuICBpZiAoIWFsbG93ZWRBdHRyaWJ1dGVzLmhhc093blByb3BlcnR5KGF0dHJpYnV0ZSkpIHtcbiAgICBlcnIgPSBuZXcgQnJhaW50cmVlRXJyb3Ioe1xuICAgICAgdHlwZTogZXJyb3JzLkhPU1RFRF9GSUVMRFNfQVRUUklCVVRFX05PVF9TVVBQT1JURUQudHlwZSxcbiAgICAgIGNvZGU6IGVycm9ycy5IT1NURURfRklFTERTX0FUVFJJQlVURV9OT1RfU1VQUE9SVEVELmNvZGUsXG4gICAgICBtZXNzYWdlOlxuICAgICAgICAnVGhlIFwiJyArIGF0dHJpYnV0ZSArICdcIiBhdHRyaWJ1dGUgaXMgbm90IHN1cHBvcnRlZCBpbiBIb3N0ZWQgRmllbGRzLicsXG4gICAgfSk7XG4gIH0gZWxzZSBpZiAodmFsdWUgIT0gbnVsbCAmJiAhX2lzVmFsaWQoYXR0cmlidXRlLCB2YWx1ZSkpIHtcbiAgICBlcnIgPSBuZXcgQnJhaW50cmVlRXJyb3Ioe1xuICAgICAgdHlwZTogZXJyb3JzLkhPU1RFRF9GSUVMRFNfQVRUUklCVVRFX1ZBTFVFX05PVF9BTExPV0VELnR5cGUsXG4gICAgICBjb2RlOiBlcnJvcnMuSE9TVEVEX0ZJRUxEU19BVFRSSUJVVEVfVkFMVUVfTk9UX0FMTE9XRUQuY29kZSxcbiAgICAgIG1lc3NhZ2U6XG4gICAgICAgICdWYWx1ZSBcIicgK1xuICAgICAgICB2YWx1ZSArXG4gICAgICAgICdcIiBpcyBub3QgYWxsb3dlZCBmb3IgXCInICtcbiAgICAgICAgYXR0cmlidXRlICtcbiAgICAgICAgJ1wiIGF0dHJpYnV0ZS4nLFxuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGVycjtcbn1cblxuZnVuY3Rpb24gX2lzVmFsaWQoYXR0cmlidXRlLCB2YWx1ZSkge1xuICBpZiAoYWxsb3dlZEF0dHJpYnV0ZXNbYXR0cmlidXRlXSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgfHwgdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiO1xuICB9IGVsc2UgaWYgKGFsbG93ZWRBdHRyaWJ1dGVzW2F0dHJpYnV0ZV0gPT09IFwiYm9vbGVhblwiKSB7XG4gICAgcmV0dXJuIFN0cmluZyh2YWx1ZSkgPT09IFwidHJ1ZVwiIHx8IFN0cmluZyh2YWx1ZSkgPT09IFwiZmFsc2VcIjtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhdHRyaWJ1dGVWYWxpZGF0aW9uRXJyb3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/external/attribute-validation-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/external/compose-url.js":
/*!**************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/external/compose-url.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar constants = __webpack_require__(/*! ../shared/constants */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js\");\nvar useMin = __webpack_require__(/*! ../../lib/use-min */ \"(ssr)/./node_modules/braintree-web/lib/use-min.js\");\n\nmodule.exports = function composeUrl(assetsUrl, componentId, isDebug) {\n  return (\n    assetsUrl +\n    \"/web/\" +\n    constants.VERSION +\n    \"/html/hosted-fields-frame\" +\n    useMin(isDebug) +\n    \".html#\" +\n    componentId\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL2V4dGVybmFsL2NvbXBvc2UtdXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLGlHQUFxQjtBQUM3QyxhQUFhLG1CQUFPLENBQUMsNEVBQW1COztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2hvc3RlZC1maWVsZHMvZXh0ZXJuYWwvY29tcG9zZS11cmwuanM/N2Y5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGNvbnN0YW50cyA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvY29uc3RhbnRzXCIpO1xudmFyIHVzZU1pbiA9IHJlcXVpcmUoXCIuLi8uLi9saWIvdXNlLW1pblwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21wb3NlVXJsKGFzc2V0c1VybCwgY29tcG9uZW50SWQsIGlzRGVidWcpIHtcbiAgcmV0dXJuIChcbiAgICBhc3NldHNVcmwgK1xuICAgIFwiL3dlYi9cIiArXG4gICAgY29uc3RhbnRzLlZFUlNJT04gK1xuICAgIFwiL2h0bWwvaG9zdGVkLWZpZWxkcy1mcmFtZVwiICtcbiAgICB1c2VNaW4oaXNEZWJ1ZykgK1xuICAgIFwiLmh0bWwjXCIgK1xuICAgIGNvbXBvbmVudElkXG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/external/compose-url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/external/focus-change.js":
/*!***************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/external/focus-change.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar directions = (__webpack_require__(/*! ../shared/constants */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js\").navigationDirections);\nvar browserDetection = __webpack_require__(/*! ../shared/browser-detection */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/browser-detection.js\");\nvar focusIntercept = __webpack_require__(/*! ../shared/focus-intercept */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/focus-intercept.js\");\nvar findParentTags = __webpack_require__(/*! ../shared/find-parent-tags */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/find-parent-tags.js\");\nvar userFocusableTagNames = [\"INPUT\", \"SELECT\", \"TEXTAREA\"];\n// Devices with software keyboards do not or cannot focus on input types\n// that do not require keyboard-based interaction.\nvar unfocusedInputTypes = [\n  \"hidden\",\n  \"button\",\n  \"reset\",\n  \"submit\",\n  \"checkbox\",\n  \"radio\",\n  \"file\",\n];\n\nfunction _isUserFocusableElement(element) {\n  if (!browserDetection.hasSoftwareKeyboard()) {\n    // on desktop browsers, the only input type that isn't focusable\n    // is the hidden input\n    return element.type !== \"hidden\";\n  }\n\n  return (\n    userFocusableTagNames.indexOf(element.tagName) > -1 &&\n    unfocusedInputTypes.indexOf(element.type) < 0\n  );\n}\n\nfunction _createNavigationHelper(direction, numberOfElementsInForm) {\n  switch (direction) {\n    case directions.BACK:\n      return {\n        checkIndexBounds: function (index) {\n          return index < 0;\n        },\n        indexChange: -1,\n      };\n    case directions.FORWARD:\n      return {\n        checkIndexBounds: function (index) {\n          return index > numberOfElementsInForm - 1;\n        },\n        indexChange: 1,\n      };\n    default:\n  }\n\n  return {};\n}\n\nfunction _findFirstFocusableElement(elementsInForm) {\n  var elementsIndex, element;\n\n  for (\n    elementsIndex = 0;\n    elementsIndex < elementsInForm.length;\n    elementsIndex++\n  ) {\n    element = elementsInForm[elementsIndex];\n\n    if (_isUserFocusableElement(element)) {\n      return element;\n    }\n  }\n\n  return null;\n}\n\nmodule.exports = {\n  removeExtraFocusElements: function (checkoutForm, onRemoveFocusIntercepts) {\n    var elements = Array.prototype.slice.call(checkoutForm.elements);\n    var firstFocusableInput = _findFirstFocusableElement(elements);\n    var lastFocusableInput = _findFirstFocusableElement(elements.reverse());\n\n    // these should never be identical, because there will at least be the\n    // before and the after input\n    [firstFocusableInput, lastFocusableInput].forEach(function (input) {\n      if (!input) {\n        return;\n      }\n\n      if (focusIntercept.matchFocusElement(input.getAttribute(\"id\"))) {\n        onRemoveFocusIntercepts(input.getAttribute(\"id\"));\n      }\n    });\n  },\n\n  createFocusChangeHandler: function (hostedFieldsId, callbacks) {\n    return function (data) {\n      var currentIndex, targetElement, checkoutForm, navHelper;\n      var sourceElement = document.getElementById(\n        \"bt-\" + data.field + \"-\" + data.direction + \"-\" + hostedFieldsId\n      );\n\n      if (!sourceElement) {\n        return;\n      }\n\n      checkoutForm = findParentTags(sourceElement, \"form\")[0];\n\n      if (document.forms.length < 1 || !checkoutForm) {\n        callbacks.onRemoveFocusIntercepts();\n\n        return;\n      }\n\n      checkoutForm = [].slice.call(checkoutForm.elements);\n      currentIndex = checkoutForm.indexOf(sourceElement);\n      navHelper = _createNavigationHelper(data.direction, checkoutForm.length);\n\n      do {\n        currentIndex += navHelper.indexChange;\n        if (navHelper.checkIndexBounds(currentIndex)) {\n          return;\n        }\n        targetElement = checkoutForm[currentIndex];\n      } while (!_isUserFocusableElement(targetElement));\n\n      if (focusIntercept.matchFocusElement(targetElement.getAttribute(\"id\"))) {\n        callbacks.onTriggerInputFocus(\n          targetElement.getAttribute(\"data-braintree-type\")\n        );\n      } else {\n        targetElement.focus();\n      }\n    };\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL2V4dGVybmFsL2ZvY3VzLWNoYW5nZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpQkFBaUIsNklBQW1EO0FBQ3BFLHVCQUF1QixtQkFBTyxDQUFDLGlIQUE2QjtBQUM1RCxxQkFBcUIsbUJBQU8sQ0FBQyw2R0FBMkI7QUFDeEQscUJBQXFCLG1CQUFPLENBQUMsK0dBQTRCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTs7QUFFUjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvaG9zdGVkLWZpZWxkcy9leHRlcm5hbC9mb2N1cy1jaGFuZ2UuanM/Mzg2NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGRpcmVjdGlvbnMgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2NvbnN0YW50c1wiKS5uYXZpZ2F0aW9uRGlyZWN0aW9ucztcbnZhciBicm93c2VyRGV0ZWN0aW9uID0gcmVxdWlyZShcIi4uL3NoYXJlZC9icm93c2VyLWRldGVjdGlvblwiKTtcbnZhciBmb2N1c0ludGVyY2VwdCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvZm9jdXMtaW50ZXJjZXB0XCIpO1xudmFyIGZpbmRQYXJlbnRUYWdzID0gcmVxdWlyZShcIi4uL3NoYXJlZC9maW5kLXBhcmVudC10YWdzXCIpO1xudmFyIHVzZXJGb2N1c2FibGVUYWdOYW1lcyA9IFtcIklOUFVUXCIsIFwiU0VMRUNUXCIsIFwiVEVYVEFSRUFcIl07XG4vLyBEZXZpY2VzIHdpdGggc29mdHdhcmUga2V5Ym9hcmRzIGRvIG5vdCBvciBjYW5ub3QgZm9jdXMgb24gaW5wdXQgdHlwZXNcbi8vIHRoYXQgZG8gbm90IHJlcXVpcmUga2V5Ym9hcmQtYmFzZWQgaW50ZXJhY3Rpb24uXG52YXIgdW5mb2N1c2VkSW5wdXRUeXBlcyA9IFtcbiAgXCJoaWRkZW5cIixcbiAgXCJidXR0b25cIixcbiAgXCJyZXNldFwiLFxuICBcInN1Ym1pdFwiLFxuICBcImNoZWNrYm94XCIsXG4gIFwicmFkaW9cIixcbiAgXCJmaWxlXCIsXG5dO1xuXG5mdW5jdGlvbiBfaXNVc2VyRm9jdXNhYmxlRWxlbWVudChlbGVtZW50KSB7XG4gIGlmICghYnJvd3NlckRldGVjdGlvbi5oYXNTb2Z0d2FyZUtleWJvYXJkKCkpIHtcbiAgICAvLyBvbiBkZXNrdG9wIGJyb3dzZXJzLCB0aGUgb25seSBpbnB1dCB0eXBlIHRoYXQgaXNuJ3QgZm9jdXNhYmxlXG4gICAgLy8gaXMgdGhlIGhpZGRlbiBpbnB1dFxuICAgIHJldHVybiBlbGVtZW50LnR5cGUgIT09IFwiaGlkZGVuXCI7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIHVzZXJGb2N1c2FibGVUYWdOYW1lcy5pbmRleE9mKGVsZW1lbnQudGFnTmFtZSkgPiAtMSAmJlxuICAgIHVuZm9jdXNlZElucHV0VHlwZXMuaW5kZXhPZihlbGVtZW50LnR5cGUpIDwgMFxuICApO1xufVxuXG5mdW5jdGlvbiBfY3JlYXRlTmF2aWdhdGlvbkhlbHBlcihkaXJlY3Rpb24sIG51bWJlck9mRWxlbWVudHNJbkZvcm0pIHtcbiAgc3dpdGNoIChkaXJlY3Rpb24pIHtcbiAgICBjYXNlIGRpcmVjdGlvbnMuQkFDSzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNoZWNrSW5kZXhCb3VuZHM6IGZ1bmN0aW9uIChpbmRleCkge1xuICAgICAgICAgIHJldHVybiBpbmRleCA8IDA7XG4gICAgICAgIH0sXG4gICAgICAgIGluZGV4Q2hhbmdlOiAtMSxcbiAgICAgIH07XG4gICAgY2FzZSBkaXJlY3Rpb25zLkZPUldBUkQ6XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjaGVja0luZGV4Qm91bmRzOiBmdW5jdGlvbiAoaW5kZXgpIHtcbiAgICAgICAgICByZXR1cm4gaW5kZXggPiBudW1iZXJPZkVsZW1lbnRzSW5Gb3JtIC0gMTtcbiAgICAgICAgfSxcbiAgICAgICAgaW5kZXhDaGFuZ2U6IDEsXG4gICAgICB9O1xuICAgIGRlZmF1bHQ6XG4gIH1cblxuICByZXR1cm4ge307XG59XG5cbmZ1bmN0aW9uIF9maW5kRmlyc3RGb2N1c2FibGVFbGVtZW50KGVsZW1lbnRzSW5Gb3JtKSB7XG4gIHZhciBlbGVtZW50c0luZGV4LCBlbGVtZW50O1xuXG4gIGZvciAoXG4gICAgZWxlbWVudHNJbmRleCA9IDA7XG4gICAgZWxlbWVudHNJbmRleCA8IGVsZW1lbnRzSW5Gb3JtLmxlbmd0aDtcbiAgICBlbGVtZW50c0luZGV4KytcbiAgKSB7XG4gICAgZWxlbWVudCA9IGVsZW1lbnRzSW5Gb3JtW2VsZW1lbnRzSW5kZXhdO1xuXG4gICAgaWYgKF9pc1VzZXJGb2N1c2FibGVFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlbW92ZUV4dHJhRm9jdXNFbGVtZW50czogZnVuY3Rpb24gKGNoZWNrb3V0Rm9ybSwgb25SZW1vdmVGb2N1c0ludGVyY2VwdHMpIHtcbiAgICB2YXIgZWxlbWVudHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChjaGVja291dEZvcm0uZWxlbWVudHMpO1xuICAgIHZhciBmaXJzdEZvY3VzYWJsZUlucHV0ID0gX2ZpbmRGaXJzdEZvY3VzYWJsZUVsZW1lbnQoZWxlbWVudHMpO1xuICAgIHZhciBsYXN0Rm9jdXNhYmxlSW5wdXQgPSBfZmluZEZpcnN0Rm9jdXNhYmxlRWxlbWVudChlbGVtZW50cy5yZXZlcnNlKCkpO1xuXG4gICAgLy8gdGhlc2Ugc2hvdWxkIG5ldmVyIGJlIGlkZW50aWNhbCwgYmVjYXVzZSB0aGVyZSB3aWxsIGF0IGxlYXN0IGJlIHRoZVxuICAgIC8vIGJlZm9yZSBhbmQgdGhlIGFmdGVyIGlucHV0XG4gICAgW2ZpcnN0Rm9jdXNhYmxlSW5wdXQsIGxhc3RGb2N1c2FibGVJbnB1dF0uZm9yRWFjaChmdW5jdGlvbiAoaW5wdXQpIHtcbiAgICAgIGlmICghaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoZm9jdXNJbnRlcmNlcHQubWF0Y2hGb2N1c0VsZW1lbnQoaW5wdXQuZ2V0QXR0cmlidXRlKFwiaWRcIikpKSB7XG4gICAgICAgIG9uUmVtb3ZlRm9jdXNJbnRlcmNlcHRzKGlucHV0LmdldEF0dHJpYnV0ZShcImlkXCIpKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSxcblxuICBjcmVhdGVGb2N1c0NoYW5nZUhhbmRsZXI6IGZ1bmN0aW9uIChob3N0ZWRGaWVsZHNJZCwgY2FsbGJhY2tzKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICB2YXIgY3VycmVudEluZGV4LCB0YXJnZXRFbGVtZW50LCBjaGVja291dEZvcm0sIG5hdkhlbHBlcjtcbiAgICAgIHZhciBzb3VyY2VFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXG4gICAgICAgIFwiYnQtXCIgKyBkYXRhLmZpZWxkICsgXCItXCIgKyBkYXRhLmRpcmVjdGlvbiArIFwiLVwiICsgaG9zdGVkRmllbGRzSWRcbiAgICAgICk7XG5cbiAgICAgIGlmICghc291cmNlRWxlbWVudCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNoZWNrb3V0Rm9ybSA9IGZpbmRQYXJlbnRUYWdzKHNvdXJjZUVsZW1lbnQsIFwiZm9ybVwiKVswXTtcblxuICAgICAgaWYgKGRvY3VtZW50LmZvcm1zLmxlbmd0aCA8IDEgfHwgIWNoZWNrb3V0Rm9ybSkge1xuICAgICAgICBjYWxsYmFja3Mub25SZW1vdmVGb2N1c0ludGVyY2VwdHMoKTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNoZWNrb3V0Rm9ybSA9IFtdLnNsaWNlLmNhbGwoY2hlY2tvdXRGb3JtLmVsZW1lbnRzKTtcbiAgICAgIGN1cnJlbnRJbmRleCA9IGNoZWNrb3V0Rm9ybS5pbmRleE9mKHNvdXJjZUVsZW1lbnQpO1xuICAgICAgbmF2SGVscGVyID0gX2NyZWF0ZU5hdmlnYXRpb25IZWxwZXIoZGF0YS5kaXJlY3Rpb24sIGNoZWNrb3V0Rm9ybS5sZW5ndGgpO1xuXG4gICAgICBkbyB7XG4gICAgICAgIGN1cnJlbnRJbmRleCArPSBuYXZIZWxwZXIuaW5kZXhDaGFuZ2U7XG4gICAgICAgIGlmIChuYXZIZWxwZXIuY2hlY2tJbmRleEJvdW5kcyhjdXJyZW50SW5kZXgpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRhcmdldEVsZW1lbnQgPSBjaGVja291dEZvcm1bY3VycmVudEluZGV4XTtcbiAgICAgIH0gd2hpbGUgKCFfaXNVc2VyRm9jdXNhYmxlRWxlbWVudCh0YXJnZXRFbGVtZW50KSk7XG5cbiAgICAgIGlmIChmb2N1c0ludGVyY2VwdC5tYXRjaEZvY3VzRWxlbWVudCh0YXJnZXRFbGVtZW50LmdldEF0dHJpYnV0ZShcImlkXCIpKSkge1xuICAgICAgICBjYWxsYmFja3Mub25UcmlnZ2VySW5wdXRGb2N1cyhcbiAgICAgICAgICB0YXJnZXRFbGVtZW50LmdldEF0dHJpYnV0ZShcImRhdGEtYnJhaW50cmVlLXR5cGVcIilcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRhcmdldEVsZW1lbnQuZm9jdXMoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/external/focus-change.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/external/get-styles-from-class.js":
/*!************************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/external/get-styles-from-class.js ***!
  \************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar allowedStyles = (__webpack_require__(/*! ../shared/constants */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js\").allowedStyles);\n\nmodule.exports = function getStylesFromClass(cssClass) {\n  var element = document.createElement(\"input\");\n  var styles = {};\n  var computedStyles;\n\n  if (cssClass[0] === \".\") {\n    cssClass = cssClass.substring(1);\n  }\n\n  element.className = cssClass;\n  element.style.display = \"none !important\";\n  element.style.position = \"fixed !important\";\n  element.style.left = \"-99999px !important\";\n  element.style.top = \"-99999px !important\";\n  document.body.appendChild(element);\n\n  computedStyles = window.getComputedStyle(element);\n\n  allowedStyles.forEach(function (style) {\n    var value = computedStyles[style];\n\n    if (value) {\n      styles[style] = value;\n    }\n  });\n\n  document.body.removeChild(element);\n\n  return styles;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL2V4dGVybmFsL2dldC1zdHlsZXMtZnJvbS1jbGFzcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixvQkFBb0Isc0lBQTRDOztBQUVoRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2hvc3RlZC1maWVsZHMvZXh0ZXJuYWwvZ2V0LXN0eWxlcy1mcm9tLWNsYXNzLmpzP2U4MjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBhbGxvd2VkU3R5bGVzID0gcmVxdWlyZShcIi4uL3NoYXJlZC9jb25zdGFudHNcIikuYWxsb3dlZFN0eWxlcztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRTdHlsZXNGcm9tQ2xhc3MoY3NzQ2xhc3MpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gIHZhciBzdHlsZXMgPSB7fTtcbiAgdmFyIGNvbXB1dGVkU3R5bGVzO1xuXG4gIGlmIChjc3NDbGFzc1swXSA9PT0gXCIuXCIpIHtcbiAgICBjc3NDbGFzcyA9IGNzc0NsYXNzLnN1YnN0cmluZygxKTtcbiAgfVxuXG4gIGVsZW1lbnQuY2xhc3NOYW1lID0gY3NzQ2xhc3M7XG4gIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZSAhaW1wb3J0YW50XCI7XG4gIGVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSBcImZpeGVkICFpbXBvcnRhbnRcIjtcbiAgZWxlbWVudC5zdHlsZS5sZWZ0ID0gXCItOTk5OTlweCAhaW1wb3J0YW50XCI7XG4gIGVsZW1lbnQuc3R5bGUudG9wID0gXCItOTk5OTlweCAhaW1wb3J0YW50XCI7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG5cbiAgY29tcHV0ZWRTdHlsZXMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbGVtZW50KTtcblxuICBhbGxvd2VkU3R5bGVzLmZvckVhY2goZnVuY3Rpb24gKHN0eWxlKSB7XG4gICAgdmFyIHZhbHVlID0gY29tcHV0ZWRTdHlsZXNbc3R5bGVdO1xuXG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICBzdHlsZXNbc3R5bGVdID0gdmFsdWU7XG4gICAgfVxuICB9KTtcblxuICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGVsZW1lbnQpO1xuXG4gIHJldHVybiBzdHlsZXM7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/external/get-styles-from-class.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/external/hosted-fields.js":
/*!****************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/external/hosted-fields.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar assign = (__webpack_require__(/*! ../../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar createAssetsUrl = __webpack_require__(/*! ../../lib/create-assets-url */ \"(ssr)/./node_modules/braintree-web/lib/create-assets-url.js\");\nvar isVerifiedDomain = __webpack_require__(/*! ../../lib/is-verified-domain */ \"(ssr)/./node_modules/braintree-web/lib/is-verified-domain.js\");\nvar Destructor = __webpack_require__(/*! ../../lib/destructor */ \"(ssr)/./node_modules/braintree-web/lib/destructor.js\");\nvar iFramer = __webpack_require__(/*! @braintree/iframer */ \"(ssr)/./node_modules/@braintree/iframer/dist/index.js\");\nvar Bus = __webpack_require__(/*! framebus */ \"(ssr)/./node_modules/framebus/dist/index.js\");\nvar createDeferredClient = __webpack_require__(/*! ../../lib/create-deferred-client */ \"(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js\");\nvar BraintreeError = __webpack_require__(/*! ../../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar composeUrl = __webpack_require__(/*! ./compose-url */ \"(ssr)/./node_modules/braintree-web/hosted-fields/external/compose-url.js\");\nvar getStylesFromClass = __webpack_require__(/*! ./get-styles-from-class */ \"(ssr)/./node_modules/braintree-web/hosted-fields/external/get-styles-from-class.js\");\nvar constants = __webpack_require__(/*! ../shared/constants */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js\");\nvar errors = __webpack_require__(/*! ../shared/errors */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/errors.js\");\nvar INTEGRATION_TIMEOUT_MS =\n  (__webpack_require__(/*! ../../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").INTEGRATION_TIMEOUT_MS);\nvar uuid = __webpack_require__(/*! @braintree/uuid */ \"(ssr)/./node_modules/@braintree/uuid/index.js\");\nvar findParentTags = __webpack_require__(/*! ../shared/find-parent-tags */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/find-parent-tags.js\");\nvar browserDetection = __webpack_require__(/*! ../shared/browser-detection */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/browser-detection.js\");\nvar events = constants.events;\nvar EventEmitter = __webpack_require__(/*! @braintree/event-emitter */ \"(ssr)/./node_modules/@braintree/event-emitter/dist/event-emitter.js\");\nvar injectFrame = __webpack_require__(/*! ./inject-frame */ \"(ssr)/./node_modules/braintree-web/hosted-fields/external/inject-frame.js\");\nvar analytics = __webpack_require__(/*! ../../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar allowedFields = constants.allowedFields;\nvar methods = __webpack_require__(/*! ../../lib/methods */ \"(ssr)/./node_modules/braintree-web/lib/methods.js\");\nvar shadow = __webpack_require__(/*! ../../lib/shadow */ \"(ssr)/./node_modules/braintree-web/lib/shadow.js\");\nvar findRootNode = __webpack_require__(/*! ../../lib/find-root-node */ \"(ssr)/./node_modules/braintree-web/lib/find-root-node.js\");\nvar convertMethodsToError = __webpack_require__(/*! ../../lib/convert-methods-to-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\");\nvar sharedErrors = __webpack_require__(/*! ../../lib/errors */ \"(ssr)/./node_modules/braintree-web/lib/errors.js\");\nvar getCardTypes = __webpack_require__(/*! ../shared/get-card-types */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/get-card-types.js\");\nvar attributeValidationError = __webpack_require__(/*! ./attribute-validation-error */ \"(ssr)/./node_modules/braintree-web/hosted-fields/external/attribute-validation-error.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar focusChange = __webpack_require__(/*! ./focus-change */ \"(ssr)/./node_modules/braintree-web/hosted-fields/external/focus-change.js\");\nvar destroyFocusIntercept = (__webpack_require__(/*! ../shared/focus-intercept */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/focus-intercept.js\").destroy);\n\nvar SAFARI_FOCUS_TIMEOUT = 5;\n\n/**\n * @typedef {object} HostedFields~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {object} authenticationInsight Info about the [regulatory environment](https://developer.paypal.com/braintree/docs/guides/3d-secure/advanced-options/javascript/v3#authentication-insight) of the tokenized card. Only available if `authenticationInsight.merchantAccountId` is passed in the `tokenize` method options.\n * @property {string} authenticationInsight.regulationEnvironment The [regulation environment](https://developer.paypal.com/braintree/docs/guides/3d-secure/advanced-options/javascript/v3#authentication-insight) for the tokenized card.\n * @property {object} details Additional account details.\n * @property {string} details.bin The BIN number of the card.\n * @property {string} details.cardType Type of card, ex: Visa, MasterCard.\n * @property {string} details.expirationMonth The expiration month of the card.\n * @property {string} details.expirationYear The expiration year of the card.\n * @property {string} details.cardholderName The cardholder name tokenized with the card.\n * @property {string} details.lastFour Last four digits of card number.\n * @property {string} details.lastTwo Last two digits of card number.\n * @property {string} description A human-readable description.\n * @property {string} type The payment method type, always `CreditCard`.\n * @property {object} binData Information about the card based on the bin.\n * @property {string} binData.commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.countryOfIssuance The country of issuance.\n * @property {string} binData.debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.issuingBank The issuing bank.\n * @property {string} binData.payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.productId The product id.\n */\n\n/**\n * @typedef {object} HostedFields~stateObject\n * @description The event payload sent from {@link HostedFields#on|on} or {@link HostedFields#getState|getState}.\n * @property {HostedFields~hostedFieldsCard[]} cards\n * This will return an array of potential {@link HostedFields~hostedFieldsCard|cards}. If the card type has been determined, the array will contain only one card.\n * Internally, Hosted Fields uses <a href=\"https://github.com/braintree/credit-card-type\">credit-card-type</a>,\n * an open-source card detection library.\n * @property {string} emittedBy\n * The name of the field associated with an event. This will not be included if returned by {@link HostedFields#getState|getState}. It will be one of the following strings:<br>\n * - `\"number\"`\n * - `\"cvv\"`\n * - `\"expirationDate\"`\n * - `\"expirationMonth\"`\n * - `\"expirationYear\"`\n * - `\"postalCode\"`\n * - `\"cardholderName\"`\n * @property {object} fields\n * @property {?HostedFields~hostedFieldsFieldData} fields.number {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the number field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.cvv {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the CVV field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.expirationDate {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the expiration date field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.expirationMonth {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the expiration month field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.expirationYear {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the expiration year field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.postalCode {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the postal code field, if it is present.\n * @property {?HostedFields~hostedFieldsFieldData} fields.cardholderName {@link HostedFields~hostedFieldsFieldData|hostedFieldsFieldData} for the cardholder name field, if it is present.\n */\n\n/**\n * @typedef {object} HostedFields~binPayload\n * @description The event payload sent from {@link HostedFields#on|on} when the {@link HostedFields#event:binAvailable|binAvailable} event is emitted.\n * @property {string} bin The first 6 digits of the card number.\n */\n\n/**\n * @typedef {object} HostedFields~hostedFieldsFieldData\n * @description Data about Hosted Fields fields, sent in {@link HostedFields~stateObject|stateObjects}.\n * @property {HTMLElement} container Reference to the container DOM element on your page associated with the current event.\n * @property {boolean} isFocused Whether or not the input is currently focused.\n * @property {boolean} isEmpty Whether or not the user has entered a value in the input.\n * @property {boolean} isPotentiallyValid\n * A determination based on the future validity of the input value.\n * This is helpful when a user is entering a card number and types <code>\"41\"</code>.\n * While that value is not valid for submission, it is still possible for\n * it to become a fully qualified entry. However, if the user enters <code>\"4x\"</code>\n * it is clear that the card number can never become valid and isPotentiallyValid will\n * return false.\n * @property {boolean} isValid Whether or not the value of the associated input is <i>fully</i> qualified for submission.\n */\n\n/**\n * @typedef {object} HostedFields~hostedFieldsCard\n * @description Information about the card type, sent in {@link HostedFields~stateObject|stateObjects}.\n * @property {string} type The code-friendly representation of the card type. It will be one of the following strings:\n * - `american-express`\n * - `diners-club`\n * - `discover`\n * - `jcb`\n * - `maestro`\n * - `master-card`\n * - `unionpay`\n * - `visa`\n * @property {string} niceType The pretty-printed card type. It will be one of the following strings:\n * - `American Express`\n * - `Diners Club`\n * - `Discover`\n * - `JCB`\n * - `Maestro`\n * - `MasterCard`\n * - `UnionPay`\n * - `Visa`\n * @property {object} code\n * This object contains data relevant to the security code requirements of the card brand.\n * For example, on a Visa card there will be a <code>CVV</code> of 3 digits, whereas an\n * American Express card requires a 4-digit <code>CID</code>.\n * @property {string} code.name <code>\"CVV\"</code> <code>\"CID\"</code> <code>\"CVC\"</code>\n * @property {number} code.size The expected length of the security code. Typically, this is 3 or 4.\n */\n\n/**\n * @name HostedFields#on\n * @function\n * @param {string} event The name of the event to which you are subscribing.\n * @param {function} handler A callback to handle the event.\n * @description Subscribes a handler function to a named event.\n *\n * **Events that emit a {@link HostedFields~stateObject|stateObject}.**\n * * {@link HostedFields#event:blur|blur}\n * * {@link HostedFields#event:focus|focus}\n * * {@link HostedFields#event:empty|empty}\n * * {@link HostedFields#event:notEmpty|notEmpty}\n * * {@link HostedFields#event:cardTypeChange|cardTypeChange}\n * * {@link HostedFields#event:validityChange|validityChange}\n * * {@link HostedFields#event:inputSubmitRequest|inputSubmitRequest}\n *\n * **Other Events**\n * * {@link HostedFields#event:binAvailable|binAvailable} - emits a {@link HostedFields~binPayload|bin payload}. Note: If you are using a [Referrer-Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy) header that prevents the origin from being sent, this event will not fire.\n * @example\n * <caption>Listening to a Hosted Field event, in this case 'focus'</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('focus', function (event) {\n *     console.log(event.emittedBy, 'has been focused');\n *   });\n * });\n * @returns {void}\n */\n\n/**\n * @name HostedFields#off\n * @function\n * @param {string} event The name of the event to which you are unsubscribing.\n * @param {function} handler The callback for the event you are unsubscribing from.\n * @description Unsubscribes the handler function to a named event.\n * @example\n * <caption>Subscribing and then unsubscribing from a Hosted Field event, in this case 'focus'</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   var callback = function (event) {\n *     console.log(event.emittedBy, 'has been focused');\n *   };\n *   hostedFieldsInstance.on('focus', callback);\n *\n *   // later on\n *   hostedFieldsInstance.off('focus', callback);\n * });\n * @returns {void}\n */\n\n/**\n * This event is emitted when the user requests submission of an input field, such as by pressing the Enter or Return key on their keyboard, or mobile equivalent.\n * @event HostedFields#inputSubmitRequest\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Clicking a submit button upon hitting Enter (or equivalent) within a Hosted Field</caption>\n * var hostedFields = require('braintree-web/hosted-fields');\n * var submitButton = document.querySelector('input[type=\"submit\"]');\n *\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('inputSubmitRequest', function () {\n *     // User requested submission, e.g. by pressing Enter or equivalent\n *     submitButton.click();\n *   });\n * });\n */\n\n/**\n * This event is emitted when a field transitions from having data to being empty.\n * @event HostedFields#empty\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to an empty event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('empty', function (event) {\n *     console.log(event.emittedBy, 'is now empty');\n *   });\n * });\n */\n\n/**\n * This event is emitted when a field transitions from being empty to having data.\n * @event HostedFields#notEmpty\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to an notEmpty event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('notEmpty', function (event) {\n *     console.log(event.emittedBy, 'is now not empty');\n *   });\n * });\n */\n\n/**\n * This event is emitted when a field loses focus.\n * @event HostedFields#blur\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to a blur event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('blur', function (event) {\n *     console.log(event.emittedBy, 'lost focus');\n *   });\n * });\n */\n\n/**\n * This event is emitted when a field gains focus.\n * @event HostedFields#focus\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to a focus event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('focus', function (event) {\n *     console.log(event.emittedBy, 'gained focus');\n *   });\n * });\n */\n\n/**\n * This event is emitted when activity within the number field has changed such that the possible card type has changed.\n * @event HostedFields#cardTypeChange\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to a cardTypeChange event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('cardTypeChange', function (event) {\n *     if (event.cards.length === 1) {\n *       console.log(event.cards[0].type);\n *     } else {\n *       console.log('Type of card not yet known');\n *     }\n *   });\n * });\n */\n\n/**\n * This event is emitted when the validity of a field has changed. Validity is represented in the {@link HostedFields~stateObject|stateObject} as two booleans: `isValid` and `isPotentiallyValid`.\n * @event HostedFields#validityChange\n * @type {HostedFields~stateObject}\n * @example\n * <caption>Listening to a validityChange event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('validityChange', function (event) {\n *     var field = event.fields[event.emittedBy];\n *\n *     if (field.isValid) {\n *       console.log(event.emittedBy, 'is fully valid');\n *     } else if (field.isPotentiallyValid) {\n *       console.log(event.emittedBy, 'is potentially valid');\n *     } else {\n *       console.log(event.emittedBy, 'is not valid');\n *     }\n *   });\n * });\n */\n\n/**\n * This event is emitted when the first 6 digits of the card number have been entered by the customer.\n * @event HostedFields#binAvailable\n * @type {string}\n * @example\n * <caption>Listening to a `binAvailable` event</caption>\n * hostedFields.create({ ... }, function (createErr, hostedFieldsInstance) {\n *   hostedFieldsInstance.on('binAvailable', function (event) {\n *     event.bin // send bin to 3rd party bin service\n *   });\n * });\n */\n\nfunction createInputEventHandler(fields) {\n  return function (eventData) {\n    var field;\n    var merchantPayload = eventData.merchantPayload;\n    var emittedBy = merchantPayload.emittedBy;\n    var container = fields[emittedBy].containerElement;\n\n    Object.keys(merchantPayload.fields).forEach(function (key) {\n      merchantPayload.fields[key].container = fields[key].containerElement;\n    });\n\n    field = merchantPayload.fields[emittedBy];\n\n    container.classList.toggle(\n      constants.externalClasses.FOCUSED,\n      field.isFocused\n    );\n    container.classList.toggle(constants.externalClasses.VALID, field.isValid);\n\n    container.classList.toggle(\n      constants.externalClasses.INVALID,\n      !field.isPotentiallyValid\n    );\n\n    // eslint-disable-next-line no-invalid-this\n    this._state = {\n      cards: merchantPayload.cards,\n      fields: merchantPayload.fields,\n    };\n\n    this._emit(eventData.type, merchantPayload); // eslint-disable-line no-invalid-this\n  };\n}\n\nfunction isVisibleEnough(node) {\n  var boundingBox = node.getBoundingClientRect();\n  var verticalMidpoint = Math.floor(boundingBox.height / 2);\n  var horizontalMidpoint = Math.floor(boundingBox.width / 2);\n\n  return (\n    boundingBox.top <\n      (window.innerHeight - verticalMidpoint ||\n        document.documentElement.clientHeight - verticalMidpoint) &&\n    boundingBox.right > horizontalMidpoint &&\n    boundingBox.bottom > verticalMidpoint &&\n    boundingBox.left <\n      (window.innerWidth - horizontalMidpoint ||\n        document.documentElement.clientWidth - horizontalMidpoint)\n  );\n}\n\n/**\n * @class HostedFields\n * @param {object} options The Hosted Fields {@link module:braintree-web/hosted-fields.create create} options.\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/hosted-fields.create|braintree-web.hosted-fields.create} instead.</strong>\n * @classdesc This class represents a Hosted Fields component produced by {@link module:braintree-web/hosted-fields.create|braintree-web/hosted-fields.create}. Instances of this class have methods for interacting with the input fields within Hosted Fields' iframes.\n */\nfunction HostedFields(options) {\n  var failureTimeout, clientConfig, assetsUrl, isDebug, hostedFieldsUrl;\n  var self = this;\n  var fields = {};\n  var frameReadyPromiseResolveFunctions = {};\n  var frameReadyPromises = [];\n  var componentId = uuid();\n\n  this._merchantConfigurationOptions = assign({}, options);\n\n  if (options.client) {\n    clientConfig = options.client.getConfiguration();\n    assetsUrl = clientConfig.gatewayConfiguration.assetsUrl;\n    isDebug = clientConfig.isDebug;\n  } else {\n    assetsUrl = createAssetsUrl.create(options.authorization);\n    isDebug = Boolean(options.isDebug);\n  }\n\n  this._clientPromise = createDeferredClient.create({\n    client: options.client,\n    authorization: options.authorization,\n    debug: isDebug,\n    assetsUrl: assetsUrl,\n    name: \"Hosted Fields\",\n  });\n\n  hostedFieldsUrl = composeUrl(assetsUrl, componentId, isDebug);\n\n  if (!options.fields || Object.keys(options.fields).length === 0) {\n    throw new BraintreeError({\n      type: sharedErrors.INSTANTIATION_OPTION_REQUIRED.type,\n      code: sharedErrors.INSTANTIATION_OPTION_REQUIRED.code,\n      message: \"options.fields is required when instantiating Hosted Fields.\",\n    });\n  }\n\n  EventEmitter.call(this);\n\n  this._injectedNodes = [];\n  this._destructor = new Destructor();\n  this._fields = fields;\n  this._state = {\n    fields: {},\n    cards: getCardTypes(\"\"),\n  };\n\n  this._bus = new Bus({\n    channel: componentId,\n    verifyDomain: isVerifiedDomain,\n    targetFrames: [window],\n  });\n\n  this._destructor.registerFunctionForTeardown(function () {\n    self._bus.teardown();\n  });\n\n  // NEXT_MAJOR_VERSION analytics events should have present tense verbs\n  if (!options.client) {\n    analytics.sendEvent(\n      this._clientPromise,\n      \"custom.hosted-fields.initialized.deferred-client\"\n    );\n  } else {\n    analytics.sendEvent(\n      this._clientPromise,\n      \"custom.hosted-fields.initialized\"\n    );\n  }\n\n  Object.keys(options.fields).forEach(\n    function (key) {\n      var field, externalContainer, internalContainer, frame, frameReadyPromise;\n\n      if (!constants.allowedFields.hasOwnProperty(key)) {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_INVALID_FIELD_KEY.type,\n          code: errors.HOSTED_FIELDS_INVALID_FIELD_KEY.code,\n          message: '\"' + key + '\" is not a valid field.',\n        });\n      }\n\n      field = options.fields[key];\n      // NEXT_MAJOR_VERSION remove selector as an option\n      // and simply make the API take a container\n      externalContainer = field.container || field.selector;\n\n      if (typeof externalContainer === \"string\") {\n        externalContainer = document.querySelector(externalContainer);\n      }\n\n      if (!externalContainer || externalContainer.nodeType !== 1) {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_INVALID_FIELD_SELECTOR.type,\n          code: errors.HOSTED_FIELDS_INVALID_FIELD_SELECTOR.code,\n          message: errors.HOSTED_FIELDS_INVALID_FIELD_SELECTOR.message,\n          details: {\n            fieldSelector: field.selector,\n            fieldContainer: field.container,\n            fieldKey: key,\n          },\n        });\n      } else if (\n        externalContainer.querySelector('iframe[name^=\"braintree-\"]')\n      ) {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME.type,\n          code: errors.HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME.code,\n          message: errors.HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME.message,\n          details: {\n            fieldSelector: field.selector,\n            fieldContainer: field.container,\n            fieldKey: key,\n          },\n        });\n      }\n\n      internalContainer = externalContainer;\n\n      if (shadow.isShadowElement(internalContainer)) {\n        internalContainer = shadow.transformToSlot(\n          internalContainer,\n          \"height: 100%\"\n        );\n      }\n\n      if (field.maxlength && typeof field.maxlength !== \"number\") {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.type,\n          code: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.code,\n          message: \"The value for maxlength must be a number.\",\n          details: {\n            fieldKey: key,\n          },\n        });\n      }\n\n      if (field.minlength && typeof field.minlength !== \"number\") {\n        throw new BraintreeError({\n          type: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.type,\n          code: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.code,\n          message: \"The value for minlength must be a number.\",\n          details: {\n            fieldKey: key,\n          },\n        });\n      }\n\n      frame = iFramer({\n        type: key,\n        name: \"braintree-hosted-field-\" + key,\n        style: constants.defaultIFrameStyle,\n        title:\n          field.iframeTitle ||\n          \"Secure Credit Card Frame - \" + constants.allowedFields[key].label,\n      });\n      this._bus.addTargetFrame(frame);\n\n      this._injectedNodes.push.apply(\n        this._injectedNodes,\n        injectFrame(componentId, frame, internalContainer, function () {\n          self.focus(key);\n        })\n      );\n\n      this._setupLabelFocus(key, externalContainer);\n      fields[key] = {\n        frameElement: frame,\n        containerElement: externalContainer,\n      };\n      frameReadyPromise = new Promise(function (resolve) {\n        frameReadyPromiseResolveFunctions[key] = resolve;\n      });\n      frameReadyPromises.push(frameReadyPromise);\n\n      this._state.fields[key] = {\n        isEmpty: true,\n        isValid: false,\n        isPotentiallyValid: true,\n        isFocused: false,\n        container: externalContainer,\n      };\n\n      // prevents loading the iframe from blocking the code\n      setTimeout(function () {\n        frame.src = hostedFieldsUrl;\n      }, 0);\n    }.bind(this)\n  );\n\n  if (this._merchantConfigurationOptions.styles) {\n    Object.keys(this._merchantConfigurationOptions.styles).forEach(function (\n      selector\n    ) {\n      var className = self._merchantConfigurationOptions.styles[selector];\n\n      if (typeof className === \"string\") {\n        self._merchantConfigurationOptions.styles[selector] =\n          getStylesFromClass(className);\n      }\n    });\n  }\n\n  this._bus.on(events.REMOVE_FOCUS_INTERCEPTS, function (data) {\n    destroyFocusIntercept(data && data.id);\n  });\n\n  this._bus.on(\n    events.TRIGGER_FOCUS_CHANGE,\n    focusChange.createFocusChangeHandler(componentId, {\n      onRemoveFocusIntercepts: function (element) {\n        self._bus.emit(events.REMOVE_FOCUS_INTERCEPTS, {\n          id: element,\n        });\n      },\n      onTriggerInputFocus: function (targetType) {\n        self.focus(targetType);\n      },\n    })\n  );\n\n  this._bus.on(events.READY_FOR_CLIENT, function (reply) {\n    self._clientPromise.then(function (client) {\n      reply(client);\n    });\n  });\n\n  this._bus.on(events.CARD_FORM_ENTRY_HAS_BEGUN, function () {\n    analytics.sendEvent(self._clientPromise, \"hosted-fields.input.started\");\n  });\n\n  this._bus.on(events.BIN_AVAILABLE, function (bin) {\n    self._emit(\"binAvailable\", {\n      bin: bin,\n    });\n  });\n\n  failureTimeout = setTimeout(function () {\n    analytics.sendEvent(\n      self._clientPromise,\n      \"custom.hosted-fields.load.timed-out\"\n    );\n    self._emit(\"timeout\");\n  }, INTEGRATION_TIMEOUT_MS);\n\n  Promise.all(frameReadyPromises).then(function (results) {\n    var reply = results[0];\n\n    clearTimeout(failureTimeout);\n    reply(\n      formatMerchantConfigurationForIframes(self._merchantConfigurationOptions)\n    );\n\n    self._cleanUpFocusIntercepts();\n\n    self._emit(\"ready\");\n  });\n\n  this._bus.on(events.FRAME_READY, function (data, reply) {\n    frameReadyPromiseResolveFunctions[data.field](reply);\n  });\n\n  this._bus.on(events.INPUT_EVENT, createInputEventHandler(fields).bind(this));\n\n  this._destructor.registerFunctionForTeardown(function () {\n    var j, node, parent;\n\n    for (j = 0; j < self._injectedNodes.length; j++) {\n      node = self._injectedNodes[j];\n      parent = node.parentNode;\n\n      parent.removeChild(node);\n\n      parent.classList.remove(\n        constants.externalClasses.FOCUSED,\n        constants.externalClasses.INVALID,\n        constants.externalClasses.VALID\n      );\n    }\n  });\n\n  this._destructor.registerFunctionForTeardown(function () {\n    destroyFocusIntercept();\n  });\n\n  this._destructor.registerFunctionForTeardown(function () {\n    var methodNames = methods(HostedFields.prototype).concat(\n      methods(EventEmitter.prototype)\n    );\n\n    convertMethodsToError(self, methodNames);\n  });\n}\n\nEventEmitter.createChild(HostedFields);\n\nHostedFields.prototype._setupLabelFocus = function (type, container) {\n  var labels, i;\n  var self = this;\n  var rootNode = findRootNode(container);\n\n  if (container.id == null) {\n    return;\n  }\n\n  function triggerFocus() {\n    self.focus(type);\n  }\n\n  // find any labels in the normal DOM\n  labels = Array.prototype.slice.call(\n    document.querySelectorAll('label[for=\"' + container.id + '\"]')\n  );\n  if (rootNode !== document) {\n    // find any labels within the shadow dom\n    labels = labels.concat(\n      Array.prototype.slice.call(\n        rootNode.querySelectorAll('label[for=\"' + container.id + '\"]')\n      )\n    );\n  }\n  // find any labels surrounding the container that don't also have the `for` attribute\n  labels = labels.concat(findParentTags(container, \"label\"));\n  // filter out any accidental duplicates\n  labels = labels.filter(function (label, index, arr) {\n    return arr.indexOf(label) === index;\n  });\n\n  for (i = 0; i < labels.length; i++) {\n    labels[i].addEventListener(\"click\", triggerFocus, false);\n  }\n\n  this._destructor.registerFunctionForTeardown(function () {\n    for (i = 0; i < labels.length; i++) {\n      labels[i].removeEventListener(\"click\", triggerFocus, false);\n    }\n  });\n};\n\nHostedFields.prototype._getAnyFieldContainer = function () {\n  var self = this;\n\n  return Object.keys(this._fields).reduce(function (found, field) {\n    return found || self._fields[field].containerElement;\n  }, null);\n};\n\nHostedFields.prototype._cleanUpFocusIntercepts = function () {\n  var iframeContainer, checkoutForm;\n\n  if (document.forms.length < 1) {\n    this._bus.emit(events.REMOVE_FOCUS_INTERCEPTS);\n  } else {\n    iframeContainer = this._getAnyFieldContainer();\n    checkoutForm = findParentTags(iframeContainer, \"form\")[0];\n\n    if (checkoutForm) {\n      focusChange.removeExtraFocusElements(\n        checkoutForm,\n        function (id) {\n          this._bus.emit(events.REMOVE_FOCUS_INTERCEPTS, {\n            id: id,\n          });\n        }.bind(this)\n      );\n    } else {\n      this._bus.emit(events.REMOVE_FOCUS_INTERCEPTS);\n    }\n  }\n};\n\nHostedFields.prototype._attachInvalidFieldContainersToError = function (err) {\n  if (\n    !(\n      err.details &&\n      err.details.invalidFieldKeys &&\n      err.details.invalidFieldKeys.length > 0\n    )\n  ) {\n    return;\n  }\n  err.details.invalidFields = {};\n  err.details.invalidFieldKeys.forEach(\n    function (field) {\n      err.details.invalidFields[field] = this._fields[field].containerElement;\n    }.bind(this)\n  );\n};\n\n/**\n * Get card verification challenges, such as requirements for cvv and postal code.\n * @public\n * @param {callback} [callback] Called on completion, containing an error if one occurred. If no callback is provided, `getChallenges` returns a promise.\n * @example\n * hostedFieldsInstance.getChallenges().then(function (challenges) {\n *   challenges // ['cvv', 'postal_code']\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.getChallenges = function () {\n  return this._clientPromise.then(function (client) {\n    return client.getConfiguration().gatewayConfiguration.challenges;\n  });\n};\n\n/**\n * Get supported card types configured in the Braintree Control Panel\n * @public\n * @param {callback} [callback] Called on completion, containing an error if one occurred. If no callback is provided, `getSupportedCardTypes` returns a promise.\n * @example\n * hostedFieldsInstance.getSupportedCardTypes().then(function (cardTypes) {\n *   cardTypes // ['Visa', 'American Express', 'Mastercard']\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.getSupportedCardTypes = function () {\n  return this._clientPromise.then(function (client) {\n    var cards = client\n      .getConfiguration()\n      .gatewayConfiguration.creditCards.supportedCardTypes.map(function (\n        cardType\n      ) {\n        if (cardType === \"MasterCard\") {\n          // Mastercard changed their branding. We can't update our\n          // config without creating a breaking change, so we just\n          // hard code the change here\n          return \"Mastercard\";\n        }\n\n        return cardType;\n      });\n\n    return cards;\n  });\n};\n\n/**\n * Cleanly remove anything set up by {@link module:braintree-web/hosted-fields.create|create}.\n * @public\n * @param {callback} [callback] Called on completion, containing an error if one occurred. No data is returned if teardown completes successfully. If no callback is provided, `teardown` returns a promise.\n * @example\n * hostedFieldsInstance.teardown(function (teardownErr) {\n *   if (teardownErr) {\n *     console.error('Could not tear down Hosted Fields!');\n *   } else {\n *     console.info('Hosted Fields has been torn down!');\n *   }\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.teardown = function () {\n  var self = this;\n\n  return new Promise(function (resolve, reject) {\n    self._destructor.teardown(function (err) {\n      analytics.sendEvent(\n        self._clientPromise,\n        \"custom.hosted-fields.teardown-completed\"\n      );\n\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\n/**\n * Tokenizes fields and returns a nonce payload.\n * @public\n * @param {object} [options] All tokenization options for the Hosted Fields component.\n * @param {boolean} [options.vault=false] When true, will vault the tokenized card. Cards will only be vaulted when using a client created with a client token that includes a customer ID. Note: merchants using Advanced Fraud Tools should not use this option, as device data will not be included.\n * @param {object} [options.authenticationInsight] Options for checking authentication insight - the [regulatory environment](https://developer.paypal.com/braintree/docs/guides/3d-secure/advanced-options/javascript/v3#authentication-insight) of the tokenized card.\n * @param {string} options.authenticationInsight.merchantAccountId The Braintree merchant account id to use to look up the authentication insight information.\n * @param {array} [options.fieldsToTokenize] By default, all fields will be tokenized. You may specify which fields specifically you wish to tokenize with this property. Valid options are `'number'`, `'cvv'`, `'expirationDate'`, `'expirationMonth'`, `'expirationYear'`, `'postalCode'`, `'cardholderName'`.\n * @param {string} [options.cardholderName] When supplied, the cardholder name to be tokenized with the contents of the fields.\n * @param {string} [options.billingAddress.postalCode] When supplied, this postal code will be tokenized along with the contents of the fields. If a postal code is provided as part of the Hosted Fields configuration, the value of the field will be tokenized and this value will be ignored.\n * @param {string} [options.billingAddress.firstName] When supplied, this customer first name will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.lastName] When supplied, this customer last name will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.company] When supplied, this company name will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.streetAddress] When supplied, this street address will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.extendedAddress] When supplied, this extended address will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.locality] When supplied, this locality (the city) will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.region] When supplied, this region (the state) will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.countryCodeNumeric] When supplied, this numeric country code will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.countryCodeAlpha2] When supplied, this alpha 2 representation of a country will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.countryCodeAlpha3] When supplied, this alpha 3 representation of a country will be tokenized along with the contents of the fields.\n * @param {string} [options.billingAddress.countryName] When supplied, this country name will be tokenized along with the contents of the fields.\n *\n * @param {callback} [callback] May be used as the only parameter of the function if no options are passed in. The second argument, <code>data</code>, is a {@link HostedFields~tokenizePayload|tokenizePayload}. If no callback is provided, `tokenize` returns a function that resolves with a {@link HostedFields~tokenizePayload|tokenizePayload}.\n * @example <caption>Tokenize a card</caption>\n * hostedFieldsInstance.tokenize(function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     switch (tokenizeErr.code) {\n *       case 'HOSTED_FIELDS_FIELDS_EMPTY':\n *         // occurs when none of the fields are filled in\n *         console.error('All fields are empty! Please fill out the form.');\n *         break;\n *       case 'HOSTED_FIELDS_FIELDS_INVALID':\n *         // occurs when certain fields do not pass client side validation\n *         console.error('Some fields are invalid:', tokenizeErr.details.invalidFieldKeys);\n *\n *         // you can also programmatically access the field containers for the invalid fields\n *         tokenizeErr.details.invalidFields.forEach(function (fieldContainer) {\n *           fieldContainer.className = 'invalid';\n *         });\n *         break;\n *       case 'HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE':\n *         // occurs when:\n *         //   * the client token used for client authorization was generated\n *         //     with a customer ID and the fail on duplicate payment method\n *         //     option is set to true\n *         //   * the card being tokenized has previously been vaulted (with any customer)\n *         // See: https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#options.fail_on_duplicate_payment_method\n *         console.error('This payment method already exists in your vault.');\n *         break;\n *       case 'HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED':\n *         // occurs when:\n *         //   * the client token used for client authorization was generated\n *         //     with a customer ID and the verify card option is set to true\n *         //     and you have credit card verification turned on in the Braintree\n *         //     control panel\n *         //   * the cvv does not pass verification (https://developer.paypal.com/braintree/docs/reference/general/testing#avs-and-cvv/cid-responses)\n *         // See: https://developer.paypal.com/braintree/docs/reference/request/client-token/generate#options.verify_card\n *         console.error('CVV did not pass verification');\n *         break;\n *       case 'HOSTED_FIELDS_FAILED_TOKENIZATION':\n *         // occurs for any other tokenization error on the server\n *         console.error('Tokenization failed server side. Is the card valid?');\n *         break;\n *       case 'HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR':\n *         // occurs when the Braintree gateway cannot be contacted\n *         console.error('Network error occurred when tokenizing.');\n *         break;\n *       default:\n *         console.error('Something bad happened!', tokenizeErr);\n *     }\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Tokenize and vault a card</caption>\n * hostedFieldsInstance.tokenize({\n *   vault: true\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Tokenize a card with non-Hosted Fields cardholder name</caption>\n * hostedFieldsInstance.tokenize({\n *   cardholderName: 'First Last'\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Tokenize a card with non-Hosted Fields postal code option</caption>\n * hostedFieldsInstance.tokenize({\n *   billingAddress: {\n *     postalCode: '11111'\n *   }\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Tokenize a card with additional billing address options</caption>\n * hostedFieldsInstance.tokenize({\n *   billingAddress: {\n *     firstName: 'First',\n *     lastName: 'Last',\n *     company: 'Company',\n *     streetAddress: '123 Street',\n *     extendedAddress: 'Unit 1',\n *     // passing just one of the country options is sufficient to\n *     // associate the card details with a particular country\n *     // valid country names and codes can be found here:\n *     // https://developer.paypal.com/braintree/docs/reference/general/countries/ruby#list-of-countries\n *     countryName: 'United States',\n *     countryCodeAlpha2: 'US',\n *     countryCodeAlpha3: 'USA',\n *     countryCodeNumeric: '840'\n *   }\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @example <caption>Allow tokenization with empty cardholder name field</caption>\n * var state = hostedFieldsInstance.getState();\n * var fields = Object.keys(state.fields);\n *\n * // normally, if you tried to tokenize an empty cardholder name field\n * // you would get an error, to allow making this field optional,\n * // tokenize all the fields except for the cardholder name field\n * // when the cardholder name field is empty. Otherwise, tokenize\n * // all the fields\n * if (state.fields.cardholderName.isEmpty) {\n *  fields = fields.filter(function (field) {\n *    return field !== 'cardholderName';\n *  });\n * }\n *\n * hostedFieldsInstance.tokenize({\n *  fieldsToTokenize: fields\n * }, function (tokenizeErr, payload) {\n *   if (tokenizeErr) {\n *     console.error(tokenizeErr);\n *   } else {\n *     console.log('Got nonce:', payload.nonce);\n *   }\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.tokenize = function (options) {\n  var self = this;\n\n  if (!options) {\n    options = {};\n  }\n\n  return new Promise(function (resolve, reject) {\n    self._bus.emit(events.TOKENIZATION_REQUEST, options, function (response) {\n      var err = response[0];\n      var payload = response[1];\n\n      if (err) {\n        self._attachInvalidFieldContainersToError(err);\n        reject(new BraintreeError(err));\n      } else {\n        resolve(payload);\n      }\n    });\n  });\n};\n\n/**\n * Add a class to a {@link module:braintree-web/hosted-fields~field field}. Useful for updating field styles when events occur elsewhere in your checkout.\n * @public\n * @param {string} field The field you wish to add a class to. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} classname The class to be added.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the class is added successfully.\n *\n * @example\n * hostedFieldsInstance.addClass('number', 'custom-class', function (addClassErr) {\n *   if (addClassErr) {\n *     console.error(addClassErr);\n *   }\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.addClass = function (field, classname) {\n  var err;\n\n  if (!allowedFields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        field +\n        '\" is not a valid field. You must use a valid field option when adding a class.',\n    });\n  } else if (!this._fields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot add class to \"' +\n        field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    this._bus.emit(events.ADD_CLASS, {\n      field: field,\n      classname: classname,\n    });\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Removes a class to a {@link module:braintree-web/hosted-fields~field field}. Useful for updating field styles when events occur elsewhere in your checkout.\n * @public\n * @param {string} field The field you wish to remove a class from. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} classname The class to be removed.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the class is removed successfully.\n *\n * @example\n * hostedFieldsInstance.addClass('number', 'custom-class', function (addClassErr) {\n *   if (addClassErr) {\n *     console.error(addClassErr);\n *     return;\n *   }\n *\n *   // some time later...\n *   hostedFieldsInstance.removeClass('number', 'custom-class');\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.removeClass = function (field, classname) {\n  var err;\n\n  if (!allowedFields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        field +\n        '\" is not a valid field. You must use a valid field option when removing a class.',\n    });\n  } else if (!this._fields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot remove class from \"' +\n        field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    this._bus.emit(events.REMOVE_CLASS, {\n      field: field,\n      classname: classname,\n    });\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Sets an attribute of a {@link module:braintree-web/hosted-fields~field field}.\n * Supported attributes are `aria-invalid`, `aria-required`, `disabled`, and `placeholder`.\n *\n * @public\n * @param {object} options The options for the attribute you wish to set.\n * @param {string} options.field The field to which you wish to add an attribute. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} options.attribute The name of the attribute you wish to add to the field.\n * @param {string} options.value The value for the attribute.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the attribute is set successfully.\n *\n * @example <caption>Set the placeholder attribute of a field</caption>\n * hostedFieldsInstance.setAttribute({\n *   field: 'number',\n *   attribute: 'placeholder',\n *   value: '1111 1111 1111 1111'\n * }, function (attributeErr) {\n *   if (attributeErr) {\n *     console.error(attributeErr);\n *   }\n * });\n *\n * @example <caption>Set the aria-required attribute of a field</caption>\n * hostedFieldsInstance.setAttribute({\n *   field: 'number',\n *   attribute: 'aria-required',\n *   value: true\n * }, function (attributeErr) {\n *   if (attributeErr) {\n *     console.error(attributeErr);\n *   }\n * });\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.setAttribute = function (options) {\n  var attributeErr, err;\n\n  if (!allowedFields.hasOwnProperty(options.field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        options.field +\n        '\" is not a valid field. You must use a valid field option when setting an attribute.',\n    });\n  } else if (!this._fields.hasOwnProperty(options.field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot set attribute for \"' +\n        options.field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    attributeErr = attributeValidationError(options.attribute, options.value);\n\n    if (attributeErr) {\n      err = attributeErr;\n    } else {\n      this._bus.emit(events.SET_ATTRIBUTE, {\n        field: options.field,\n        attribute: options.attribute,\n        value: options.value,\n      });\n    }\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Sets the month options for the expiration month field when presented as a select element.\n *\n * @public\n * @param {array} options An array of 12 entries corresponding to the 12 months.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the options are updated successfully. Errors if expirationMonth is not configured on the Hosted Fields instance or if the expirationMonth field is not configured to be a select input.\n *\n * @example <caption>Update the month options to spanish</caption>\n * hostedFieldsInstance.setMonthOptions([\n *   '01 - enero',\n *   '02 - febrero',\n *   '03 - marzo',\n *   '04 - abril',\n *   '05 - mayo',\n *   '06 - junio',\n *   '07 - julio',\n *   '08 - agosto',\n *   '09 - septiembre',\n *   '10 - octubre',\n *   '11 - noviembre',\n *   '12 - diciembre'\n * ]);\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.setMonthOptions = function (options) {\n  var self = this;\n  var merchantOptions = this._merchantConfigurationOptions.fields;\n  var errorMessage;\n\n  if (!merchantOptions.expirationMonth) {\n    errorMessage = \"Expiration month field must exist to use setMonthOptions.\";\n  } else if (!merchantOptions.expirationMonth.select) {\n    errorMessage = \"Expiration month field must be a select element.\";\n  }\n\n  if (errorMessage) {\n    return Promise.reject(\n      new BraintreeError({\n        type: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.type,\n        code: errors.HOSTED_FIELDS_FIELD_PROPERTY_INVALID.code,\n        message: errorMessage,\n      })\n    );\n  }\n\n  return new Promise(function (resolve) {\n    self._bus.emit(events.SET_MONTH_OPTIONS, options, resolve);\n  });\n};\n\n/**\n * Sets a visually hidden message (for screen readers) on a {@link module:braintree-web/hosted-fields~field field}.\n *\n * @public\n * @param {object} options The options for the attribute you wish to set.\n * @param {string} options.field The field to which you wish to add an attribute. Must be a valid {@link module:braintree-web/hosted-fields~field field}.\n * @param {string} options.message The message to set.\n *\n * @example <caption>Set an error message on a field</caption>\n * hostedFieldsInstance.setMessage({\n *   field: 'number',\n *   message: 'Invalid card number'\n * });\n *\n * @example <caption>Remove the message on a field</caption>\n * hostedFieldsInstance.setMessage({\n *   field: 'number',\n *   message: ''\n * });\n *\n * @returns {void}\n */\nHostedFields.prototype.setMessage = function (options) {\n  this._bus.emit(events.SET_MESSAGE, {\n    field: options.field,\n    message: options.message,\n  });\n};\n\n/**\n * Removes a supported attribute from a {@link module:braintree-web/hosted-fields~field field}.\n *\n * @public\n * @param {object} options The options for the attribute you wish to remove.\n * @param {string} options.field The field from which you wish to remove an attribute. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} options.attribute The name of the attribute you wish to remove from the field.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the attribute is removed successfully.\n *\n * @example <caption>Remove the placeholder attribute of a field</caption>\n * hostedFieldsInstance.removeAttribute({\n *   field: 'number',\n *   attribute: 'placeholder'\n * }, function (attributeErr) {\n *   if (attributeErr) {\n *     console.error(attributeErr);\n *   }\n * });\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.removeAttribute = function (options) {\n  var attributeErr, err;\n\n  if (!allowedFields.hasOwnProperty(options.field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        options.field +\n        '\" is not a valid field. You must use a valid field option when removing an attribute.',\n    });\n  } else if (!this._fields.hasOwnProperty(options.field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot remove attribute for \"' +\n        options.field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    attributeErr = attributeValidationError(options.attribute);\n\n    if (attributeErr) {\n      err = attributeErr;\n    } else {\n      this._bus.emit(events.REMOVE_ATTRIBUTE, {\n        field: options.field,\n        attribute: options.attribute,\n      });\n    }\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * @deprecated since version 3.8.0. Use {@link HostedFields#setAttribute|setAttribute} instead.\n *\n * @public\n * @param {string} field The field whose placeholder you wish to change. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {string} placeholder Will be used as the `placeholder` attribute of the input.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the placeholder updated successfully.\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nHostedFields.prototype.setPlaceholder = function (field, placeholder) {\n  return this.setAttribute({\n    field: field,\n    attribute: \"placeholder\",\n    value: placeholder,\n  });\n};\n\n/**\n * Clear the value of a {@link module:braintree-web/hosted-fields~field field}.\n * @public\n * @param {string} field The field you wish to clear. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the field cleared successfully.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * hostedFieldsInstance.clear('number', function (clearErr) {\n *   if (clearErr) {\n *     console.error(clearErr);\n *   }\n * });\n *\n * @example <caption>Clear several fields</caption>\n * hostedFieldsInstance.clear('number');\n * hostedFieldsInstance.clear('cvv');\n * hostedFieldsInstance.clear('expirationDate');\n */\nHostedFields.prototype.clear = function (field) {\n  var err;\n\n  if (!allowedFields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        field +\n        '\" is not a valid field. You must use a valid field option when clearing a field.',\n    });\n  } else if (!this._fields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot clear \"' +\n        field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    this._bus.emit(events.CLEAR_FIELD, {\n      field: field,\n    });\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Programmatically focus a {@link module:braintree-web/hosted-fields~field field}.\n * @public\n * @param {string} field The field you want to focus. Must be a valid {@link module:braintree-web/hosted-fields~fieldOptions fieldOption}.\n * @param {callback} [callback] Callback executed on completion, containing an error if one occurred. No data is returned if the field focused successfully.\n * @returns {void}\n * @example\n * hostedFieldsInstance.focus('number', function (focusErr) {\n *   if (focusErr) {\n *     console.error(focusErr);\n *   }\n * });\n * @example <caption>Using an event listener</caption>\n * myElement.addEventListener('click', function (e) {\n *   // In Firefox, the focus method can be suppressed\n *   //   if the element has a tabindex property or the element\n *   //   is an anchor link with an href property.\n *   e.preventDefault();\n *   hostedFieldsInstance.focus('number');\n * });\n */\nHostedFields.prototype.focus = function (field) {\n  var err;\n  var fieldConfig = this._fields[field];\n\n  if (!allowedFields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_INVALID.type,\n      code: errors.HOSTED_FIELDS_FIELD_INVALID.code,\n      message:\n        '\"' +\n        field +\n        '\" is not a valid field. You must use a valid field option when focusing a field.',\n    });\n  } else if (!this._fields.hasOwnProperty(field)) {\n    err = new BraintreeError({\n      type: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.type,\n      code: errors.HOSTED_FIELDS_FIELD_NOT_PRESENT.code,\n      message:\n        'Cannot focus \"' +\n        field +\n        '\" field because it is not part of the current Hosted Fields options.',\n    });\n  } else {\n    fieldConfig.frameElement.focus();\n\n    this._bus.emit(events.TRIGGER_INPUT_FOCUS, {\n      field: field,\n    });\n\n    if (browserDetection.isIos()) {\n      // Inputs outside of the viewport don't always scroll into view on\n      // focus in iOS Safari. 5ms timeout gives the browser a chance to\n      // do the right thing and prevents stuttering.\n      setTimeout(function () {\n        if (!isVisibleEnough(fieldConfig.containerElement)) {\n          fieldConfig.containerElement.scrollIntoView();\n        }\n      }, SAFARI_FOCUS_TIMEOUT);\n    }\n  }\n\n  if (err) {\n    return Promise.reject(err);\n  }\n\n  return Promise.resolve();\n};\n\n/**\n * Returns an {@link HostedFields~stateObject|object} that includes the state of all fields and possible card types.\n * @public\n * @returns {object} {@link HostedFields~stateObject|stateObject}\n * @example <caption>Check if all fields are valid</caption>\n * var state = hostedFieldsInstance.getState();\n *\n * var formValid = Object.keys(state.fields).every(function (key) {\n *   return state.fields[key].isValid;\n * });\n */\nHostedFields.prototype.getState = function () {\n  return this._state;\n};\n\n// React adds decorations to DOM nodes that cause\n// circular dependencies, so we remove them from the\n// config before sending it to the iframes. However,\n// we don't want to mutate the original object that\n// was passed in, so we create fresh objects via assign\nfunction formatMerchantConfigurationForIframes(config) {\n  var formattedConfig = assign({}, config);\n\n  formattedConfig.fields = assign({}, formattedConfig.fields);\n  Object.keys(formattedConfig.fields).forEach(function (field) {\n    formattedConfig.fields[field] = assign({}, formattedConfig.fields[field]);\n    delete formattedConfig.fields[field].container;\n  });\n\n  return formattedConfig;\n}\n\nmodule.exports = wrapPromise.wrapPrototype(HostedFields);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/external/hosted-fields.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/external/inject-frame.js":
/*!***************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/external/inject-frame.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar focusIntercept = __webpack_require__(/*! ../shared/focus-intercept */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/focus-intercept.js\");\nvar directions = (__webpack_require__(/*! ../shared/constants */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js\").navigationDirections);\n\nmodule.exports = function injectFrame(id, frame, container, focusHandler) {\n  var frameType = frame.getAttribute(\"type\");\n  var clearboth = document.createElement(\"div\");\n  var fragment = document.createDocumentFragment();\n  var focusInterceptBefore = focusIntercept.generate(\n    id,\n    frameType,\n    directions.BACK,\n    focusHandler\n  );\n  var focusInterceptAfter = focusIntercept.generate(\n    id,\n    frameType,\n    directions.FORWARD,\n    focusHandler\n  );\n\n  clearboth.style.clear = \"both\";\n\n  fragment.appendChild(focusInterceptBefore);\n  fragment.appendChild(frame);\n  fragment.appendChild(focusInterceptAfter);\n  fragment.appendChild(clearboth);\n\n  container.appendChild(fragment);\n\n  return [frame, clearboth];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL2V4dGVybmFsL2luamVjdC1mcmFtZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixxQkFBcUIsbUJBQU8sQ0FBQyw2R0FBMkI7QUFDeEQsaUJBQWlCLDZJQUFtRDs7QUFFcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL2V4dGVybmFsL2luamVjdC1mcmFtZS5qcz9iZmE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgZm9jdXNJbnRlcmNlcHQgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2ZvY3VzLWludGVyY2VwdFwiKTtcbnZhciBkaXJlY3Rpb25zID0gcmVxdWlyZShcIi4uL3NoYXJlZC9jb25zdGFudHNcIikubmF2aWdhdGlvbkRpcmVjdGlvbnM7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5qZWN0RnJhbWUoaWQsIGZyYW1lLCBjb250YWluZXIsIGZvY3VzSGFuZGxlcikge1xuICB2YXIgZnJhbWVUeXBlID0gZnJhbWUuZ2V0QXR0cmlidXRlKFwidHlwZVwiKTtcbiAgdmFyIGNsZWFyYm90aCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHZhciBmcmFnbWVudCA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgdmFyIGZvY3VzSW50ZXJjZXB0QmVmb3JlID0gZm9jdXNJbnRlcmNlcHQuZ2VuZXJhdGUoXG4gICAgaWQsXG4gICAgZnJhbWVUeXBlLFxuICAgIGRpcmVjdGlvbnMuQkFDSyxcbiAgICBmb2N1c0hhbmRsZXJcbiAgKTtcbiAgdmFyIGZvY3VzSW50ZXJjZXB0QWZ0ZXIgPSBmb2N1c0ludGVyY2VwdC5nZW5lcmF0ZShcbiAgICBpZCxcbiAgICBmcmFtZVR5cGUsXG4gICAgZGlyZWN0aW9ucy5GT1JXQVJELFxuICAgIGZvY3VzSGFuZGxlclxuICApO1xuXG4gIGNsZWFyYm90aC5zdHlsZS5jbGVhciA9IFwiYm90aFwiO1xuXG4gIGZyYWdtZW50LmFwcGVuZENoaWxkKGZvY3VzSW50ZXJjZXB0QmVmb3JlKTtcbiAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoZnJhbWUpO1xuICBmcmFnbWVudC5hcHBlbmRDaGlsZChmb2N1c0ludGVyY2VwdEFmdGVyKTtcbiAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoY2xlYXJib3RoKTtcblxuICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZnJhZ21lbnQpO1xuXG4gIHJldHVybiBbZnJhbWUsIGNsZWFyYm90aF07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/external/inject-frame.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/** @module braintree-web/hosted-fields */\n\nvar HostedFields = __webpack_require__(/*! ./external/hosted-fields */ \"(ssr)/./node_modules/braintree-web/hosted-fields/external/hosted-fields.js\");\nvar basicComponentVerification = __webpack_require__(/*! ../lib/basic-component-verification */ \"(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js\");\nvar errors = __webpack_require__(/*! ./shared/errors */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/errors.js\");\nvar supportsInputFormatting = __webpack_require__(/*! restricted-input/supports-input-formatting */ \"(ssr)/./node_modules/restricted-input/supports-input-formatting.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar VERSION = \"3.99.0\";\n\n/**\n * Fields used in {@link module:braintree-web/hosted-fields~fieldOptions fields options}\n * @typedef {object} field\n * @property {string} selector Deprecated: Now an alias for `options.container`.\n * @property {(string|HTMLElement)} container A DOM node or CSS selector to find the container where the hosted field will be inserted.\n * @property {string} [placeholder] Will be used as the `placeholder` attribute of the input. If `placeholder` is not natively supported by the browser, it will be polyfilled.\n * @property {string} [type] Will be used as the `type` attribute of the input. To mask `cvv` input, for instance, `type: \"password\"` can be used.\n * @property {string} [iframeTitle] The title used for the iframe containing the credit card input. By default, this will be `Secure Credit Card Frame - <the name of the specific field>`.\n * @property {string} [internalLabel] Each Hosted Field iframe has a hidden label that is used by screen readers to identify the input. The `internalLabel` property can be used to customize the field for localization purposes. The default values are:\n * * number: Credit Card Number\n * * cvv: CVV\n * * expirationDate: Expiration Date\n * * expirationMonth: Expiration Month\n * * expirationYear: Expiration Year\n * * postalCode: Postal Code\n * * cardholderName: Cardholder Name\n * @property {boolean} [formatInput=true] Enable or disable automatic formatting on this field.\n * @property {(object|boolean)} [maskInput=false] Enable or disable input masking when input is not focused. If set to `true` instead of an object, the defaults for the `maskInput` parameters will be used.\n * @property {string} [maskInput.character=•] The character to use when masking the input. The default character ('•') uses a unicode symbol, so the webpage must support UTF-8 characters when using the default.\n * @property {Boolean} [maskInput.showLastFour=false] Only applicable for the credit card field. Whether or not to show the last 4 digits of the card when masking.\n * @property {(object|boolean)} [select] If truthy, this field becomes a `<select>` dropdown list. This can only be used for `expirationMonth` and `expirationYear` fields. If you do not use a `placeholder` property for the field, the current month/year will be the default selected value.\n * @property {string[]} [select.options] An array of 12 strings, one per month. This can only be used for the `expirationMonth` field. For example, the array can look like `['01 - January', '02 - February', ...]`.\n * @property {number} [maxCardLength] This option applies only to the number field. Allows a limit to the length of the card number, even if the card brand may support numbers of a greater length. If the value passed is greater than the max length for a card brand, the smaller number of the 2 values will be used. For example, is `maxCardLength` is set to 16, but an American Express card is entered (which has a max card length of 15), a max card length of 15 will be used.\n * @property {number} [maxlength] This option applies only to the CVV and postal code fields. Will be used as the `maxlength` attribute of the input. The primary use cases for the `maxlength` option are: limiting the length of the CVV input for CVV-only verifications when the card type is known and setting the length of the postal code input when cards are coming from a known region. The default `maxlength` for the postal code input is `10`.\n * @property {number} [minlength=3] This option applies only to the cvv and postal code fields. Will be used as the `minlength` attribute of the input.\n * For postal code fields, the default value is 3, representing the Icelandic postal code length. This option's primary use case is to increase the `minlength`, e.g. for US customers, the postal code `minlength` can be set to 5.\n * For cvv fields, the default value is 3. The `minlength` attribute only applies to integrations capturing a cvv without a number field.\n * @property {string} [prefill] A value to prefill the field with. For example, when creating an update card form, you can prefill the expiration date fields with the old expiration date data.\n * @property {boolean} [rejectUnsupportedCards=false] Deprecated since version 3.46.0, use `supportedCardBrands` instead. Only allow card types that your merchant account is able to process. Unsupported card types will invalidate the card form. e.g. if you only process Visa cards, a customer entering a American Express card would get an invalid card field. This can only be used for the `number` field.\n * @property {object} [supportedCardBrands] Override card brands that are supported by the card form. Pass `'card-brand-id': true` to override the default in the merchant configuration and enable a card brand. Pass `'card-brand-id': false` to disable a card brand. Unsupported card types will invalidate the card form. e.g. if you only process Visa cards, a customer entering an American Express card would get an invalid card field. This can only be used for the  `number` field. (Note: only allow card types that your merchant account is actually able to process.)\n *\n * Valid card brand ids are:\n * * visa\n * * mastercard\n * * american-express\n * * diners-club\n * * discover\n * * jcb\n * * union-pay\n * * maestro\n * * elo\n * * mir\n * * hiper\n * * hipercard\n */\n\n/**\n * An object that has {@link module:braintree-web/hosted-fields~field field objects} for each field. Used in {@link module:braintree-web/hosted-fields~create create}.\n * @typedef {object} fieldOptions\n * @property {field} [number] A field for card number.\n * @property {field} [expirationDate] A field for expiration date in `MM/YYYY` or `MM/YY` format. This should not be used with the `expirationMonth` and `expirationYear` properties.\n * @property {field} [expirationMonth] A field for expiration month in `MM` format. This should be used with the `expirationYear` property.\n * @property {field} [expirationYear] A field for expiration year in `YYYY` or `YY` format. This should be used with the `expirationMonth` property.\n * @property {field} [cvv] A field for 3 or 4 digit card verification code (like CVV or CID). If you wish to create a CVV-only payment method nonce to verify a card already stored in your Vault, omit all other fields to only collect CVV.\n * @property {field} [postalCode] A field for postal or region code.\n * @property {field} [cardholderName] A field for the cardholder name on the customer's credit card.\n */\n\n/**\n * An object that represents CSS that will be applied in each hosted field. This object looks similar to CSS. Typically, these styles involve fonts (such as `font-family` or `color`).\n *\n * You may also pass the name of a class on your site that contains the styles you would like to apply. The style properties will be automatically pulled off the class and applied to the Hosted Fields inputs. Note: this is recommended for `input` elements only. If using a `select` for the expiration date, unexpected styling may occur.\n *\n * These are the CSS properties that Hosted Fields supports. Any other CSS should be specified on your page and outside of any Braintree configuration. Trying to set unsupported properties will fail and put a warning in the console.\n *\n * Supported CSS properties are:\n * `appearance`\n * `box-shadow`\n * `color`\n * `direction`\n * `font-family`\n * `font-size-adjust`\n * `font-size`\n * `font-stretch`\n * `font-style`\n * `font-variant-alternates`\n * `font-variant-caps`\n * `font-variant-east-asian`\n * `font-variant-ligatures`\n * `font-variant-numeric`\n * `font-variant`\n * `font-weight`\n * `font`\n * `letter-spacing`\n * `line-height`\n * `opacity`\n * `outline`\n * `margin`\n * `margin-top`\n * `margin-right`\n * `margin-bottom`\n * `margin-left`\n * `padding`\n * `padding-top`\n * `padding-right`\n * `padding-bottom`\n * `padding-left`\n * `text-align`\n * `text-shadow`\n * `transition`\n * `-moz-appearance`\n * `-moz-box-shadow`\n * `-moz-osx-font-smoothing`\n * `-moz-tap-highlight-color`\n * `-moz-transition`\n * `-webkit-appearance`\n * `-webkit-box-shadow`\n * `-webkit-font-smoothing`\n * `-webkit-tap-highlight-color`\n * `-webkit-transition`\n * @typedef {object} styleOptions\n */\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {fieldOptions} options.fields A {@link module:braintree-web/hosted-fields~fieldOptions set of options for each field}.\n * @param {styleOptions} [options.styles] {@link module:braintree-web/hosted-fields~styleOptions Styles} applied to each field.\n * @param {boolean} [options.preventAutofill=false] When true, browsers will not try to prompt the customer to autofill their credit card information.\n * @param {callback} [callback] The second argument, `data`, is the {@link HostedFields} instance. If no callback is provided, `create` returns a promise that resolves with the {@link HostedFields} instance.\n * @returns {void}\n * @example\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   styles: {\n *     'input': {\n *       'font-size': '16pt',\n *       'color': '#3A3A3A'\n *     },\n *     '.number': {\n *       'font-family': 'monospace'\n *     },\n *     '.valid': {\n *       'color': 'green'\n *     }\n *   },\n *   fields: {\n *     number: {\n *       container: '#card-number'\n *     },\n *     cvv: {\n *       container: '#cvv',\n *       placeholder: '•••'\n *     },\n *     expirationDate: {\n *       container: '#expiration-date'\n *     }\n *   }\n * }, callback);\n * @example <caption>With cardholder name</caption>\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   fields: {\n *     number: {\n *       container: '#card-number'\n *     },\n *     cardholderName: {\n *       container: '#cardholder-name'\n *     },\n *     cvv: {\n *       container: '#cvv',\n *     },\n *     expirationDate: {\n *       container: '#expiration-date'\n *     }\n *   }\n * }, callback);\n * @example <caption>Applying styles with a class name</caption>\n * // in document head\n * <style>\n *   .braintree-input-class {\n *     color: black;\n *   }\n *   .braintree-valid-class {\n *     color: green;\n *   }\n *   .braintree-invalid-class {\n *     color: red;\n *   }\n * </style>\n * // in a script tag\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   styles: {\n *     'input': 'braintree-input-class',\n *     '.invalid': 'braintree-invalid-class',\n *     '.valid': {\n *       // you can also use the object syntax alongside\n *       // the class name syntax\n *       color: green;\n *     }\n *   },\n *   fields: {\n *     number: {\n *       container: '#card-number'\n *     },\n *     // etc...\n *   }\n * }, callback);\n * @example <caption>Right to Left Language Support</caption>\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   styles: {\n *     'input': {\n *       // other styles\n *       direction: 'rtl'\n *     },\n *   },\n *   fields: {\n *     number: {\n *       container: '#card-number',\n *       // Credit card formatting is not currently supported\n *       // with RTL languages, so we need to turn it off for the number input\n *       formatInput: false\n *     },\n *     cvv: {\n *       container: '#cvv',\n *       placeholder: '•••'\n *     },\n *     expirationDate: {\n *       container: '#expiration-date',\n *       type: 'month'\n *     }\n *   }\n * }, callback);\n * @example <caption>Setting up Hosted Fields to tokenize CVV only</caption>\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   fields: {\n *     // Only add the `cvv` option.\n *     cvv: {\n *       container: '#cvv',\n *       placeholder: '•••'\n *     }\n *   }\n * }, callback);\n * @example <caption>Creating an expiration date update form with prefilled data</caption>\n * var storedCreditCardInformation = {\n *   // get this info from your server\n *   // with a payment method lookup\n *   month: '09',\n *   year: '2017'\n * };\n *\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   fields: {\n *     expirationMonth: {\n *       container: '#expiration-month',\n *       prefill: storedCreditCardInformation.month\n *     },\n *     expirationYear: {\n *       container: '#expiration-year',\n *       prefill: storedCreditCardInformation.year\n *     }\n *   }\n * }, callback);\n * @example <caption>Validate the card form for supported card types</caption>\n * braintree.hostedFields.create({\n *   client: clientInstance,\n *   fields: {\n *     number: {\n *       container: '#card-number',\n *       supportedCardBrands: {\n *         visa: false, // prevents Visas from showing up as valid even when the Braintree control panel is configured to allow them\n *         'diners-club': true // allow Diners Club cards to be valid (processed as Discover cards on the Braintree backend)\n *       }\n *     },\n *     cvv: {\n *       container: '#cvv',\n *       placeholder: '•••'\n *     },\n *     expirationDate: {\n *       container: '#expiration-date',\n *       type: 'month'\n *     }\n *   },\n * }, callback);\n */\nfunction create(options) {\n  return basicComponentVerification\n    .verify({\n      name: \"Hosted Fields\",\n      authorization: options.authorization,\n      client: options.client,\n    })\n    .then(function () {\n      var integration = new HostedFields(options);\n\n      return new Promise(function (resolve, reject) {\n        integration.on(\"ready\", function () {\n          resolve(integration);\n        });\n        integration.on(\"timeout\", function () {\n          reject(new BraintreeError(errors.HOSTED_FIELDS_TIMEOUT));\n        });\n      });\n    });\n}\n\nmodule.exports = {\n  /**\n   * @static\n   * @function supportsInputFormatting\n   * @description Returns false if input formatting will be automatically disabled due to browser incompatibility. Otherwise, returns true. For a list of unsupported browsers, [go here](https://github.com/braintree/restricted-input/blob/main/README.md#browsers-where-formatting-is-turned-off-automatically).\n   * @returns {Boolean} Returns false if input formatting will be automatically disabled due to browser incompatibility. Otherwise, returns true.\n   * @example\n   * <caption>Conditionally choosing split expiration date inputs if formatting is unavailable</caption>\n   * var canFormat = braintree.hostedFields.supportsInputFormatting();\n   * var fields = {\n   *   number: {\n   *     container: '#card-number'\n   *   },\n   *   cvv: {\n   *     container: '#cvv'\n   *   }\n   * };\n   *\n   * if (canFormat) {\n   *   fields.expirationDate = {\n   *     selection: '#expiration-date'\n   *   };\n   *   functionToCreateAndInsertExpirationDateDivToForm();\n   * } else {\n   *   fields.expirationMonth = {\n   *     selection: '#expiration-month'\n   *   };\n   *   fields.expirationYear = {\n   *     selection: '#expiration-year'\n   *   };\n   *   functionToCreateAndInsertExpirationMonthAndYearDivsToForm();\n   * }\n   *\n   * braintree.hostedFields.create({\n   *   client: clientInstance,\n   *   styles: {\n   *     // Styles\n   *   },\n   *   fields: fields\n   * }, callback);\n   */\n  supportsInputFormatting: supportsInputFormatting,\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `{@pkg version}`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/shared/browser-detection.js":
/*!******************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/shared/browser-detection.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isAndroid = __webpack_require__(/*! @braintree/browser-detection/is-android */ \"(ssr)/./node_modules/@braintree/browser-detection/is-android.js\");\nvar isChromeOS = __webpack_require__(/*! @braintree/browser-detection/is-chrome-os */ \"(ssr)/./node_modules/@braintree/browser-detection/is-chrome-os.js\");\nvar isIos = __webpack_require__(/*! @braintree/browser-detection/is-ios */ \"(ssr)/./node_modules/@braintree/browser-detection/is-ios.js\");\nvar isChrome = __webpack_require__(/*! @braintree/browser-detection/is-chrome */ \"(ssr)/./node_modules/@braintree/browser-detection/is-chrome.js\");\n\nfunction hasSoftwareKeyboard() {\n  return isAndroid() || isChromeOS() || isIos();\n}\n\nfunction isChromeIos() {\n  return isChrome() && isIos();\n}\n\nmodule.exports = {\n  isAndroid: isAndroid,\n  isChromeOS: isChromeOS,\n  isChromeIos: isChromeIos,\n  isFirefox: __webpack_require__(/*! @braintree/browser-detection/is-firefox */ \"(ssr)/./node_modules/@braintree/browser-detection/is-firefox.js\"),\n  isIos: isIos,\n  isIosWebview: __webpack_require__(/*! @braintree/browser-detection/is-ios-webview */ \"(ssr)/./node_modules/@braintree/browser-detection/is-ios-webview.js\"),\n  hasSoftwareKeyboard: hasSoftwareKeyboard,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9icm93c2VyLWRldGVjdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixnQkFBZ0IsbUJBQU8sQ0FBQyxnSEFBeUM7QUFDakUsaUJBQWlCLG1CQUFPLENBQUMsb0hBQTJDO0FBQ3BFLFlBQVksbUJBQU8sQ0FBQyx3R0FBcUM7QUFDekQsZUFBZSxtQkFBTyxDQUFDLDhHQUF3Qzs7QUFFL0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbUJBQU8sQ0FBQyxnSEFBeUM7QUFDOUQ7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyx3SEFBNkM7QUFDckU7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9icm93c2VyLWRldGVjdGlvbi5qcz9jZjE5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNBbmRyb2lkID0gcmVxdWlyZShcIkBicmFpbnRyZWUvYnJvd3Nlci1kZXRlY3Rpb24vaXMtYW5kcm9pZFwiKTtcbnZhciBpc0Nocm9tZU9TID0gcmVxdWlyZShcIkBicmFpbnRyZWUvYnJvd3Nlci1kZXRlY3Rpb24vaXMtY2hyb21lLW9zXCIpO1xudmFyIGlzSW9zID0gcmVxdWlyZShcIkBicmFpbnRyZWUvYnJvd3Nlci1kZXRlY3Rpb24vaXMtaW9zXCIpO1xudmFyIGlzQ2hyb21lID0gcmVxdWlyZShcIkBicmFpbnRyZWUvYnJvd3Nlci1kZXRlY3Rpb24vaXMtY2hyb21lXCIpO1xuXG5mdW5jdGlvbiBoYXNTb2Z0d2FyZUtleWJvYXJkKCkge1xuICByZXR1cm4gaXNBbmRyb2lkKCkgfHwgaXNDaHJvbWVPUygpIHx8IGlzSW9zKCk7XG59XG5cbmZ1bmN0aW9uIGlzQ2hyb21lSW9zKCkge1xuICByZXR1cm4gaXNDaHJvbWUoKSAmJiBpc0lvcygpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNBbmRyb2lkOiBpc0FuZHJvaWQsXG4gIGlzQ2hyb21lT1M6IGlzQ2hyb21lT1MsXG4gIGlzQ2hyb21lSW9zOiBpc0Nocm9tZUlvcyxcbiAgaXNGaXJlZm94OiByZXF1aXJlKFwiQGJyYWludHJlZS9icm93c2VyLWRldGVjdGlvbi9pcy1maXJlZm94XCIpLFxuICBpc0lvczogaXNJb3MsXG4gIGlzSW9zV2VidmlldzogcmVxdWlyZShcIkBicmFpbnRyZWUvYnJvd3Nlci1kZXRlY3Rpb24vaXMtaW9zLXdlYnZpZXdcIiksXG4gIGhhc1NvZnR3YXJlS2V5Ym9hcmQ6IGhhc1NvZnR3YXJlS2V5Ym9hcmQsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/shared/browser-detection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/shared/constants.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar enumerate = __webpack_require__(/*! ../../lib/enumerate */ \"(ssr)/./node_modules/braintree-web/lib/enumerate.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/errors.js\");\nvar VERSION = \"3.99.0\";\n\nvar constants = {\n  VERSION: VERSION,\n  maxExpirationYearAge: 19,\n  externalEvents: {\n    FOCUS: \"focus\",\n    BLUR: \"blur\",\n    EMPTY: \"empty\",\n    NOT_EMPTY: \"notEmpty\",\n    VALIDITY_CHANGE: \"validityChange\",\n    CARD_TYPE_CHANGE: \"cardTypeChange\",\n  },\n  defaultMaxLengths: {\n    number: 19,\n    postalCode: 8,\n    expirationDate: 7,\n    expirationMonth: 2,\n    expirationYear: 4,\n    cvv: 3,\n  },\n  externalClasses: {\n    FOCUSED: \"braintree-hosted-fields-focused\",\n    INVALID: \"braintree-hosted-fields-invalid\",\n    VALID: \"braintree-hosted-fields-valid\",\n  },\n  navigationDirections: {\n    BACK: \"before\",\n    FORWARD: \"after\",\n  },\n  defaultIFrameStyle: {\n    border: \"none\",\n    width: \"100%\",\n    height: \"100%\",\n    float: \"left\",\n  },\n  tokenizationErrorCodes: {\n    81724: errors.HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE,\n    // NEXT_MAJOR_VERSION this error triggers for both AVS and CVV errors\n    // but the code name implies that it would only trigger for CVV verification\n    // failures\n    81736: errors.HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED,\n  },\n  allowedStyles: [\n    \"-moz-appearance\",\n    \"-moz-box-shadow\",\n    \"-moz-osx-font-smoothing\",\n    \"-moz-tap-highlight-color\",\n    \"-moz-transition\",\n    \"-webkit-appearance\",\n    \"-webkit-box-shadow\",\n    \"-webkit-font-smoothing\",\n    \"-webkit-tap-highlight-color\",\n    \"-webkit-transition\",\n    \"appearance\",\n    \"box-shadow\",\n    \"color\",\n    \"direction\",\n    \"font\",\n    \"font-family\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-variant\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-weight\",\n    \"letter-spacing\",\n    \"line-height\",\n    \"margin\",\n    \"margin-top\",\n    \"margin-right\",\n    \"margin-bottom\",\n    \"margin-left\",\n    \"opacity\",\n    \"outline\",\n    \"padding\",\n    \"padding-top\",\n    \"padding-right\",\n    \"padding-bottom\",\n    \"padding-left\",\n    \"text-align\",\n    \"text-shadow\",\n    \"transition\",\n  ],\n  allowedFields: {\n    cardholderName: {\n      name: \"cardholder-name\",\n      label: \"Cardholder Name\",\n    },\n    number: {\n      name: \"credit-card-number\",\n      label: \"Credit Card Number\",\n    },\n    cvv: {\n      name: \"cvv\",\n      label: \"CVV\",\n    },\n    expirationDate: {\n      name: \"expiration\",\n      label: \"Expiration Date\",\n    },\n    expirationMonth: {\n      name: \"expiration-month\",\n      label: \"Expiration Month\",\n    },\n    expirationYear: {\n      name: \"expiration-year\",\n      label: \"Expiration Year\",\n    },\n    postalCode: {\n      name: \"postal-code\",\n      label: \"Postal Code\",\n    },\n  },\n  allowedAttributes: {\n    \"aria-invalid\": \"boolean\",\n    \"aria-required\": \"boolean\",\n    disabled: \"boolean\",\n    placeholder: \"string\",\n  },\n  autocompleteMappings: {\n    \"cardholder-name\": \"cc-name\",\n    \"credit-card-number\": \"cc-number\",\n    expiration: \"cc-exp\",\n    \"expiration-month\": \"cc-exp-month\",\n    \"expiration-year\": \"cc-exp-year\",\n    cvv: \"cc-csc\",\n    \"postal-code\": \"billing postal-code\",\n  },\n};\n\nconstants.events = enumerate(\n  [\n    \"ADD_CLASS\",\n    \"AUTOFILL_DATA_AVAILABLE\",\n    \"BIN_AVAILABLE\",\n    \"CARD_FORM_ENTRY_HAS_BEGUN\",\n    \"CLEAR_FIELD\",\n    \"CONFIGURATION\",\n    \"FRAME_READY\",\n    \"INPUT_EVENT\",\n    \"READY_FOR_CLIENT\",\n    \"REMOVE_ATTRIBUTE\",\n    \"REMOVE_CLASS\",\n    \"REMOVE_FOCUS_INTERCEPTS\",\n    \"SET_ATTRIBUTE\",\n    \"SET_MESSAGE\",\n    \"SET_MONTH_OPTIONS\",\n    \"TOKENIZATION_REQUEST\",\n    \"TRIGGER_FOCUS_CHANGE\",\n    \"TRIGGER_INPUT_FOCUS\",\n    \"VALIDATE_STRICT\",\n  ],\n  \"hosted-fields:\"\n);\n\nmodule.exports = constants;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0JBQWdCLG1CQUFPLENBQUMsZ0ZBQXFCO0FBQzdDLGFBQWEsbUJBQU8sQ0FBQyxtRkFBVTtBQUMvQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9jb25zdGFudHMuanM/NzIzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGVudW1lcmF0ZSA9IHJlcXVpcmUoXCIuLi8uLi9saWIvZW51bWVyYXRlXCIpO1xudmFyIGVycm9ycyA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbnZhciBWRVJTSU9OID0gXCIzLjk5LjBcIjtcblxudmFyIGNvbnN0YW50cyA9IHtcbiAgVkVSU0lPTjogVkVSU0lPTixcbiAgbWF4RXhwaXJhdGlvblllYXJBZ2U6IDE5LFxuICBleHRlcm5hbEV2ZW50czoge1xuICAgIEZPQ1VTOiBcImZvY3VzXCIsXG4gICAgQkxVUjogXCJibHVyXCIsXG4gICAgRU1QVFk6IFwiZW1wdHlcIixcbiAgICBOT1RfRU1QVFk6IFwibm90RW1wdHlcIixcbiAgICBWQUxJRElUWV9DSEFOR0U6IFwidmFsaWRpdHlDaGFuZ2VcIixcbiAgICBDQVJEX1RZUEVfQ0hBTkdFOiBcImNhcmRUeXBlQ2hhbmdlXCIsXG4gIH0sXG4gIGRlZmF1bHRNYXhMZW5ndGhzOiB7XG4gICAgbnVtYmVyOiAxOSxcbiAgICBwb3N0YWxDb2RlOiA4LFxuICAgIGV4cGlyYXRpb25EYXRlOiA3LFxuICAgIGV4cGlyYXRpb25Nb250aDogMixcbiAgICBleHBpcmF0aW9uWWVhcjogNCxcbiAgICBjdnY6IDMsXG4gIH0sXG4gIGV4dGVybmFsQ2xhc3Nlczoge1xuICAgIEZPQ1VTRUQ6IFwiYnJhaW50cmVlLWhvc3RlZC1maWVsZHMtZm9jdXNlZFwiLFxuICAgIElOVkFMSUQ6IFwiYnJhaW50cmVlLWhvc3RlZC1maWVsZHMtaW52YWxpZFwiLFxuICAgIFZBTElEOiBcImJyYWludHJlZS1ob3N0ZWQtZmllbGRzLXZhbGlkXCIsXG4gIH0sXG4gIG5hdmlnYXRpb25EaXJlY3Rpb25zOiB7XG4gICAgQkFDSzogXCJiZWZvcmVcIixcbiAgICBGT1JXQVJEOiBcImFmdGVyXCIsXG4gIH0sXG4gIGRlZmF1bHRJRnJhbWVTdHlsZToge1xuICAgIGJvcmRlcjogXCJub25lXCIsXG4gICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgZmxvYXQ6IFwibGVmdFwiLFxuICB9LFxuICB0b2tlbml6YXRpb25FcnJvckNvZGVzOiB7XG4gICAgODE3MjQ6IGVycm9ycy5IT1NURURfRklFTERTX1RPS0VOSVpBVElPTl9GQUlMX09OX0RVUExJQ0FURSxcbiAgICAvLyBORVhUX01BSk9SX1ZFUlNJT04gdGhpcyBlcnJvciB0cmlnZ2VycyBmb3IgYm90aCBBVlMgYW5kIENWViBlcnJvcnNcbiAgICAvLyBidXQgdGhlIGNvZGUgbmFtZSBpbXBsaWVzIHRoYXQgaXQgd291bGQgb25seSB0cmlnZ2VyIGZvciBDVlYgdmVyaWZpY2F0aW9uXG4gICAgLy8gZmFpbHVyZXNcbiAgICA4MTczNjogZXJyb3JzLkhPU1RFRF9GSUVMRFNfVE9LRU5JWkFUSU9OX0NWVl9WRVJJRklDQVRJT05fRkFJTEVELFxuICB9LFxuICBhbGxvd2VkU3R5bGVzOiBbXG4gICAgXCItbW96LWFwcGVhcmFuY2VcIixcbiAgICBcIi1tb3otYm94LXNoYWRvd1wiLFxuICAgIFwiLW1vei1vc3gtZm9udC1zbW9vdGhpbmdcIixcbiAgICBcIi1tb3otdGFwLWhpZ2hsaWdodC1jb2xvclwiLFxuICAgIFwiLW1vei10cmFuc2l0aW9uXCIsXG4gICAgXCItd2Via2l0LWFwcGVhcmFuY2VcIixcbiAgICBcIi13ZWJraXQtYm94LXNoYWRvd1wiLFxuICAgIFwiLXdlYmtpdC1mb250LXNtb290aGluZ1wiLFxuICAgIFwiLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yXCIsXG4gICAgXCItd2Via2l0LXRyYW5zaXRpb25cIixcbiAgICBcImFwcGVhcmFuY2VcIixcbiAgICBcImJveC1zaGFkb3dcIixcbiAgICBcImNvbG9yXCIsXG4gICAgXCJkaXJlY3Rpb25cIixcbiAgICBcImZvbnRcIixcbiAgICBcImZvbnQtZmFtaWx5XCIsXG4gICAgXCJmb250LXNpemVcIixcbiAgICBcImZvbnQtc2l6ZS1hZGp1c3RcIixcbiAgICBcImZvbnQtc3RyZXRjaFwiLFxuICAgIFwiZm9udC1zdHlsZVwiLFxuICAgIFwiZm9udC12YXJpYW50XCIsXG4gICAgXCJmb250LXZhcmlhbnQtYWx0ZXJuYXRlc1wiLFxuICAgIFwiZm9udC12YXJpYW50LWNhcHNcIixcbiAgICBcImZvbnQtdmFyaWFudC1lYXN0LWFzaWFuXCIsXG4gICAgXCJmb250LXZhcmlhbnQtbGlnYXR1cmVzXCIsXG4gICAgXCJmb250LXZhcmlhbnQtbnVtZXJpY1wiLFxuICAgIFwiZm9udC13ZWlnaHRcIixcbiAgICBcImxldHRlci1zcGFjaW5nXCIsXG4gICAgXCJsaW5lLWhlaWdodFwiLFxuICAgIFwibWFyZ2luXCIsXG4gICAgXCJtYXJnaW4tdG9wXCIsXG4gICAgXCJtYXJnaW4tcmlnaHRcIixcbiAgICBcIm1hcmdpbi1ib3R0b21cIixcbiAgICBcIm1hcmdpbi1sZWZ0XCIsXG4gICAgXCJvcGFjaXR5XCIsXG4gICAgXCJvdXRsaW5lXCIsXG4gICAgXCJwYWRkaW5nXCIsXG4gICAgXCJwYWRkaW5nLXRvcFwiLFxuICAgIFwicGFkZGluZy1yaWdodFwiLFxuICAgIFwicGFkZGluZy1ib3R0b21cIixcbiAgICBcInBhZGRpbmctbGVmdFwiLFxuICAgIFwidGV4dC1hbGlnblwiLFxuICAgIFwidGV4dC1zaGFkb3dcIixcbiAgICBcInRyYW5zaXRpb25cIixcbiAgXSxcbiAgYWxsb3dlZEZpZWxkczoge1xuICAgIGNhcmRob2xkZXJOYW1lOiB7XG4gICAgICBuYW1lOiBcImNhcmRob2xkZXItbmFtZVwiLFxuICAgICAgbGFiZWw6IFwiQ2FyZGhvbGRlciBOYW1lXCIsXG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgIG5hbWU6IFwiY3JlZGl0LWNhcmQtbnVtYmVyXCIsXG4gICAgICBsYWJlbDogXCJDcmVkaXQgQ2FyZCBOdW1iZXJcIixcbiAgICB9LFxuICAgIGN2djoge1xuICAgICAgbmFtZTogXCJjdnZcIixcbiAgICAgIGxhYmVsOiBcIkNWVlwiLFxuICAgIH0sXG4gICAgZXhwaXJhdGlvbkRhdGU6IHtcbiAgICAgIG5hbWU6IFwiZXhwaXJhdGlvblwiLFxuICAgICAgbGFiZWw6IFwiRXhwaXJhdGlvbiBEYXRlXCIsXG4gICAgfSxcbiAgICBleHBpcmF0aW9uTW9udGg6IHtcbiAgICAgIG5hbWU6IFwiZXhwaXJhdGlvbi1tb250aFwiLFxuICAgICAgbGFiZWw6IFwiRXhwaXJhdGlvbiBNb250aFwiLFxuICAgIH0sXG4gICAgZXhwaXJhdGlvblllYXI6IHtcbiAgICAgIG5hbWU6IFwiZXhwaXJhdGlvbi15ZWFyXCIsXG4gICAgICBsYWJlbDogXCJFeHBpcmF0aW9uIFllYXJcIixcbiAgICB9LFxuICAgIHBvc3RhbENvZGU6IHtcbiAgICAgIG5hbWU6IFwicG9zdGFsLWNvZGVcIixcbiAgICAgIGxhYmVsOiBcIlBvc3RhbCBDb2RlXCIsXG4gICAgfSxcbiAgfSxcbiAgYWxsb3dlZEF0dHJpYnV0ZXM6IHtcbiAgICBcImFyaWEtaW52YWxpZFwiOiBcImJvb2xlYW5cIixcbiAgICBcImFyaWEtcmVxdWlyZWRcIjogXCJib29sZWFuXCIsXG4gICAgZGlzYWJsZWQ6IFwiYm9vbGVhblwiLFxuICAgIHBsYWNlaG9sZGVyOiBcInN0cmluZ1wiLFxuICB9LFxuICBhdXRvY29tcGxldGVNYXBwaW5nczoge1xuICAgIFwiY2FyZGhvbGRlci1uYW1lXCI6IFwiY2MtbmFtZVwiLFxuICAgIFwiY3JlZGl0LWNhcmQtbnVtYmVyXCI6IFwiY2MtbnVtYmVyXCIsXG4gICAgZXhwaXJhdGlvbjogXCJjYy1leHBcIixcbiAgICBcImV4cGlyYXRpb24tbW9udGhcIjogXCJjYy1leHAtbW9udGhcIixcbiAgICBcImV4cGlyYXRpb24teWVhclwiOiBcImNjLWV4cC15ZWFyXCIsXG4gICAgY3Z2OiBcImNjLWNzY1wiLFxuICAgIFwicG9zdGFsLWNvZGVcIjogXCJiaWxsaW5nIHBvc3RhbC1jb2RlXCIsXG4gIH0sXG59O1xuXG5jb25zdGFudHMuZXZlbnRzID0gZW51bWVyYXRlKFxuICBbXG4gICAgXCJBRERfQ0xBU1NcIixcbiAgICBcIkFVVE9GSUxMX0RBVEFfQVZBSUxBQkxFXCIsXG4gICAgXCJCSU5fQVZBSUxBQkxFXCIsXG4gICAgXCJDQVJEX0ZPUk1fRU5UUllfSEFTX0JFR1VOXCIsXG4gICAgXCJDTEVBUl9GSUVMRFwiLFxuICAgIFwiQ09ORklHVVJBVElPTlwiLFxuICAgIFwiRlJBTUVfUkVBRFlcIixcbiAgICBcIklOUFVUX0VWRU5UXCIsXG4gICAgXCJSRUFEWV9GT1JfQ0xJRU5UXCIsXG4gICAgXCJSRU1PVkVfQVRUUklCVVRFXCIsXG4gICAgXCJSRU1PVkVfQ0xBU1NcIixcbiAgICBcIlJFTU9WRV9GT0NVU19JTlRFUkNFUFRTXCIsXG4gICAgXCJTRVRfQVRUUklCVVRFXCIsXG4gICAgXCJTRVRfTUVTU0FHRVwiLFxuICAgIFwiU0VUX01PTlRIX09QVElPTlNcIixcbiAgICBcIlRPS0VOSVpBVElPTl9SRVFVRVNUXCIsXG4gICAgXCJUUklHR0VSX0ZPQ1VTX0NIQU5HRVwiLFxuICAgIFwiVFJJR0dFUl9JTlBVVF9GT0NVU1wiLFxuICAgIFwiVkFMSURBVEVfU1RSSUNUXCIsXG4gIF0sXG4gIFwiaG9zdGVkLWZpZWxkczpcIlxuKTtcblxubW9kdWxlLmV4cG9ydHMgPSBjb25zdGFudHM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/shared/errors.js":
/*!*******************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/shared/errors.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.Hosted Fields - Creation Error Codes\n * @description Errors that occur when [creating the Hosted Fields component](./module-braintree-web_hosted-fields.html#.create).\n * @property {UNKNOWN} HOSTED_FIELDS_TIMEOUT Occurs when Hosted Fields does not finish setting up within 60 seconds.\n * @property {MERCHANT} HOSTED_FIELDS_INVALID_FIELD_KEY Occurs when Hosted Fields is instantiated with an invalid Field option.\n * @property {MERCHANT} HOSTED_FIELDS_INVALID_FIELD_SELECTOR Occurs when Hosted Fields given a field selector that is not valid.\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME Occurs when Hosted Fields given a field selector that already contains an iframe.\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_PROPERTY_INVALID Occurs when a field configuration option is not valid.\n */\n\n/**\n * @name BraintreeError.Hosted Fields - Field Manipulation Error Codes\n * @description Errors that occur when modifying fields through [`addClass`](./HostedFields.html#addClass), [`removeClass`](./HostedFields.html#removeClass), [`setAttribute`](./HostedFields.html#setAttribute), [`removeAttribute`](./HostedFields.html#removeAttribute), [`clear`](./HostedFields.html#clear), [`focus`](./HostedFields.html#focus), and [`setMonthOptions`](./HostedFields.html#setMonthOptions).\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_INVALID Occurs when attempting to modify a field that is not a valid Hosted Fields option.\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_NOT_PRESENT Occurs when attempting to modify a field that is not configured with Hosted Fields.\n * @property {MERCHANT} HOSTED_FIELDS_FIELD_PROPERTY_INVALID Occurs when a field configuration option is not valid.\n */\n\n/**\n * @name BraintreeError.Hosted Fields - Set Attribute Error Codes\n * @description Errors that occur when using the [`setAttribute` method](./HostedFields.html#setAttribute)\n * @property {MERCHANT} HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED Occurs when trying to set an attribute that is not supported to be set.\n * @property {MERCHANT} HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED Occurs when the type of value for an attribute is not allowed to be set.\n */\n\n/**\n * @name BraintreeError.Hosted Fields - Tokenize Error Codes\n * @description Errors that occur when [tokenizing the card details with Hosted Fields](./HostedFields.html#tokenize).\n * @property {NETWORK} HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR Occurs when the Braintree gateway cannot be contacted.\n * @property {CUSTOMER} HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE Occurs when attempting to vault a card, but the client token being used is configured to fail if the card already exists in the vault.\n * @property {CUSTOMER} HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED Occurs when cvv verification is turned on in the Braintree control panel.\n * @property {CUSTOMER} HOSTED_FIELDS_FAILED_TOKENIZATION Occurs when the credit card details were sent to Braintree, but failed to tokenize.\n * @property {CUSTOMER} HOSTED_FIELDS_FIELDS_EMPTY Occurs when all the Hosted Fields inputs are empty.\n * @property {CUSTOMER} HOSTED_FIELDS_FIELDS_INVALID Occurs when one ore more fields are invalid.\n */\n\nvar BraintreeError = __webpack_require__(/*! ../../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  HOSTED_FIELDS_TIMEOUT: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"HOSTED_FIELDS_TIMEOUT\",\n    message: \"Hosted Fields timed out when attempting to set up.\",\n  },\n  HOSTED_FIELDS_INVALID_FIELD_KEY: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_INVALID_FIELD_KEY\",\n  },\n  HOSTED_FIELDS_INVALID_FIELD_SELECTOR: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_INVALID_FIELD_SELECTOR\",\n    message: \"Selector does not reference a valid DOM node.\",\n  },\n  HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_FIELD_DUPLICATE_IFRAME\",\n    message: \"Element already contains a Braintree iframe.\",\n  },\n  HOSTED_FIELDS_FIELD_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_FIELD_INVALID\",\n  },\n  HOSTED_FIELDS_FIELD_NOT_PRESENT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_FIELD_NOT_PRESENT\",\n  },\n  HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR: {\n    type: BraintreeError.types.NETWORK,\n    code: \"HOSTED_FIELDS_TOKENIZATION_NETWORK_ERROR\",\n    message: \"A tokenization network error occurred.\",\n  },\n  HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_TOKENIZATION_FAIL_ON_DUPLICATE\",\n    message: \"This credit card already exists in the merchant's vault.\",\n  },\n  HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_TOKENIZATION_CVV_VERIFICATION_FAILED\",\n    message: \"CVV verification failed during tokenization.\",\n  },\n  HOSTED_FIELDS_FAILED_TOKENIZATION: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_FAILED_TOKENIZATION\",\n    message: \"The supplied card data failed tokenization.\",\n  },\n  HOSTED_FIELDS_FIELDS_EMPTY: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_FIELDS_EMPTY\",\n    message: \"All fields are empty. Cannot tokenize empty card fields.\",\n  },\n  HOSTED_FIELDS_FIELDS_INVALID: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"HOSTED_FIELDS_FIELDS_INVALID\",\n    message:\n      \"Some payment input fields are invalid. Cannot tokenize invalid card fields.\",\n  },\n  HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_ATTRIBUTE_NOT_SUPPORTED\",\n  },\n  HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_ATTRIBUTE_VALUE_NOT_ALLOWED\",\n  },\n  HOSTED_FIELDS_FIELD_PROPERTY_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"HOSTED_FIELDS_FIELD_PROPERTY_INVALID\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/shared/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/shared/find-parent-tags.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/shared/find-parent-tags.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("\n\nfunction findParentTags(element, tag) {\n  var parent = element.parentNode;\n  var parents = [];\n\n  while (parent != null) {\n    if (parent.tagName != null && parent.tagName.toLowerCase() === tag) {\n      parents.push(parent);\n    }\n\n    parent = parent.parentNode;\n  }\n\n  return parents;\n}\n\nmodule.exports = findParentTags;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9maW5kLXBhcmVudC10YWdzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvaG9zdGVkLWZpZWxkcy9zaGFyZWQvZmluZC1wYXJlbnQtdGFncy5qcz8xNmMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBmaW5kUGFyZW50VGFncyhlbGVtZW50LCB0YWcpIHtcbiAgdmFyIHBhcmVudCA9IGVsZW1lbnQucGFyZW50Tm9kZTtcbiAgdmFyIHBhcmVudHMgPSBbXTtcblxuICB3aGlsZSAocGFyZW50ICE9IG51bGwpIHtcbiAgICBpZiAocGFyZW50LnRhZ05hbWUgIT0gbnVsbCAmJiBwYXJlbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSB0YWcpIHtcbiAgICAgIHBhcmVudHMucHVzaChwYXJlbnQpO1xuICAgIH1cblxuICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnROb2RlO1xuICB9XG5cbiAgcmV0dXJuIHBhcmVudHM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmluZFBhcmVudFRhZ3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/shared/find-parent-tags.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/shared/focus-intercept.js":
/*!****************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/shared/focus-intercept.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar browserDetection = __webpack_require__(/*! ./browser-detection */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/browser-detection.js\");\nvar constants = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/braintree-web/hosted-fields/shared/constants.js\");\nvar allowedFields = Object.keys(constants.allowedFields);\nvar directions = constants.navigationDirections;\n\nvar focusIntercept = {\n  generate: function (hostedFieldsId, type, direction, handler) {\n    var input = document.createElement(\"input\");\n    var focusInterceptStyles = {\n      border: \"none !important\",\n      display: \"block !important\",\n      height: \"1px !important\",\n      left: \"-1px !important\",\n      opacity: \"0 !important\",\n      position: \"absolute !important\",\n      top: \"-1px !important\",\n      width: \"1px !important\",\n    };\n    var shouldCreateFocusIntercept =\n      browserDetection.hasSoftwareKeyboard() || browserDetection.isFirefox();\n\n    if (!shouldCreateFocusIntercept) {\n      return document.createDocumentFragment();\n    }\n\n    input.setAttribute(\"aria-hidden\", \"true\");\n    input.setAttribute(\"autocomplete\", \"off\");\n    input.setAttribute(\"data-braintree-direction\", direction);\n    input.setAttribute(\"data-braintree-type\", type);\n    input.setAttribute(\n      \"id\",\n      \"bt-\" + type + \"-\" + direction + \"-\" + hostedFieldsId\n    );\n    input.setAttribute(\n      \"style\",\n      JSON.stringify(focusInterceptStyles)\n        .replace(/[{}\"]/g, \"\")\n        .replace(/,/g, \";\")\n    );\n\n    input.classList.add(\"focus-intercept\");\n\n    input.addEventListener(\"focus\", function (event) {\n      handler(event);\n\n      /*\n        Certain browsers without software keyboards (Firefox, Internet\n        Explorer) need the focus intercept inputs that get inserted\n        around the actual input to blur themselves, otherwise the\n        browser gets confused about what should have focus. Can't\n        apply this to browsers with software keyboards however,\n        because it blurs everything, and focus on the actual input is\n        also lost.\n      */\n      if (!browserDetection.hasSoftwareKeyboard()) {\n        input.blur();\n      }\n    });\n\n    return input;\n  },\n  destroy: function (idString) {\n    var focusInputs;\n\n    if (!idString) {\n      focusInputs = document.querySelectorAll(\"[data-braintree-direction]\");\n      focusInputs = [].slice.call(focusInputs);\n    } else {\n      focusInputs = [document.getElementById(idString)];\n    }\n\n    focusInputs.forEach(function (node) {\n      if (\n        node &&\n        node.nodeType === 1 &&\n        focusIntercept.matchFocusElement(node.getAttribute(\"id\"))\n      ) {\n        node.parentNode.removeChild(node);\n      }\n    });\n  },\n  matchFocusElement: function (idString) {\n    var idComponents, hasBTPrefix, isAllowedType, isValidDirection;\n\n    if (!idString) {\n      return false;\n    }\n\n    idComponents = idString.split(\"-\");\n\n    if (idComponents.length < 4) {\n      return false;\n    }\n\n    hasBTPrefix = idComponents[0] === \"bt\";\n    isAllowedType = allowedFields.indexOf(idComponents[1]) > -1;\n    isValidDirection =\n      idComponents[2] === directions.BACK ||\n      idComponents[2] === directions.FORWARD;\n\n    return Boolean(hasBTPrefix && isAllowedType && isValidDirection);\n  },\n};\n\nmodule.exports = focusIntercept;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9mb2N1cy1pbnRlcmNlcHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsdUJBQXVCLG1CQUFPLENBQUMseUdBQXFCO0FBQ3BELGdCQUFnQixtQkFBTyxDQUFDLHlGQUFhO0FBQ3JDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLHlCQUF5QjtBQUN6Qjs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9mb2N1cy1pbnRlcmNlcHQuanM/YjIzZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGJyb3dzZXJEZXRlY3Rpb24gPSByZXF1aXJlKFwiLi9icm93c2VyLWRldGVjdGlvblwiKTtcbnZhciBjb25zdGFudHMgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG52YXIgYWxsb3dlZEZpZWxkcyA9IE9iamVjdC5rZXlzKGNvbnN0YW50cy5hbGxvd2VkRmllbGRzKTtcbnZhciBkaXJlY3Rpb25zID0gY29uc3RhbnRzLm5hdmlnYXRpb25EaXJlY3Rpb25zO1xuXG52YXIgZm9jdXNJbnRlcmNlcHQgPSB7XG4gIGdlbmVyYXRlOiBmdW5jdGlvbiAoaG9zdGVkRmllbGRzSWQsIHR5cGUsIGRpcmVjdGlvbiwgaGFuZGxlcikge1xuICAgIHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICB2YXIgZm9jdXNJbnRlcmNlcHRTdHlsZXMgPSB7XG4gICAgICBib3JkZXI6IFwibm9uZSAhaW1wb3J0YW50XCIsXG4gICAgICBkaXNwbGF5OiBcImJsb2NrICFpbXBvcnRhbnRcIixcbiAgICAgIGhlaWdodDogXCIxcHggIWltcG9ydGFudFwiLFxuICAgICAgbGVmdDogXCItMXB4ICFpbXBvcnRhbnRcIixcbiAgICAgIG9wYWNpdHk6IFwiMCAhaW1wb3J0YW50XCIsXG4gICAgICBwb3NpdGlvbjogXCJhYnNvbHV0ZSAhaW1wb3J0YW50XCIsXG4gICAgICB0b3A6IFwiLTFweCAhaW1wb3J0YW50XCIsXG4gICAgICB3aWR0aDogXCIxcHggIWltcG9ydGFudFwiLFxuICAgIH07XG4gICAgdmFyIHNob3VsZENyZWF0ZUZvY3VzSW50ZXJjZXB0ID1cbiAgICAgIGJyb3dzZXJEZXRlY3Rpb24uaGFzU29mdHdhcmVLZXlib2FyZCgpIHx8IGJyb3dzZXJEZXRlY3Rpb24uaXNGaXJlZm94KCk7XG5cbiAgICBpZiAoIXNob3VsZENyZWF0ZUZvY3VzSW50ZXJjZXB0KSB7XG4gICAgICByZXR1cm4gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuICAgIH1cblxuICAgIGlucHV0LnNldEF0dHJpYnV0ZShcImFyaWEtaGlkZGVuXCIsIFwidHJ1ZVwiKTtcbiAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXCJhdXRvY29tcGxldGVcIiwgXCJvZmZcIik7XG4gICAgaW5wdXQuc2V0QXR0cmlidXRlKFwiZGF0YS1icmFpbnRyZWUtZGlyZWN0aW9uXCIsIGRpcmVjdGlvbik7XG4gICAgaW5wdXQuc2V0QXR0cmlidXRlKFwiZGF0YS1icmFpbnRyZWUtdHlwZVwiLCB0eXBlKTtcbiAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoXG4gICAgICBcImlkXCIsXG4gICAgICBcImJ0LVwiICsgdHlwZSArIFwiLVwiICsgZGlyZWN0aW9uICsgXCItXCIgKyBob3N0ZWRGaWVsZHNJZFxuICAgICk7XG4gICAgaW5wdXQuc2V0QXR0cmlidXRlKFxuICAgICAgXCJzdHlsZVwiLFxuICAgICAgSlNPTi5zdHJpbmdpZnkoZm9jdXNJbnRlcmNlcHRTdHlsZXMpXG4gICAgICAgIC5yZXBsYWNlKC9be31cIl0vZywgXCJcIilcbiAgICAgICAgLnJlcGxhY2UoLywvZywgXCI7XCIpXG4gICAgKTtcblxuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQoXCJmb2N1cy1pbnRlcmNlcHRcIik7XG5cbiAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiZm9jdXNcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBoYW5kbGVyKGV2ZW50KTtcblxuICAgICAgLypcbiAgICAgICAgQ2VydGFpbiBicm93c2VycyB3aXRob3V0IHNvZnR3YXJlIGtleWJvYXJkcyAoRmlyZWZveCwgSW50ZXJuZXRcbiAgICAgICAgRXhwbG9yZXIpIG5lZWQgdGhlIGZvY3VzIGludGVyY2VwdCBpbnB1dHMgdGhhdCBnZXQgaW5zZXJ0ZWRcbiAgICAgICAgYXJvdW5kIHRoZSBhY3R1YWwgaW5wdXQgdG8gYmx1ciB0aGVtc2VsdmVzLCBvdGhlcndpc2UgdGhlXG4gICAgICAgIGJyb3dzZXIgZ2V0cyBjb25mdXNlZCBhYm91dCB3aGF0IHNob3VsZCBoYXZlIGZvY3VzLiBDYW4ndFxuICAgICAgICBhcHBseSB0aGlzIHRvIGJyb3dzZXJzIHdpdGggc29mdHdhcmUga2V5Ym9hcmRzIGhvd2V2ZXIsXG4gICAgICAgIGJlY2F1c2UgaXQgYmx1cnMgZXZlcnl0aGluZywgYW5kIGZvY3VzIG9uIHRoZSBhY3R1YWwgaW5wdXQgaXNcbiAgICAgICAgYWxzbyBsb3N0LlxuICAgICAgKi9cbiAgICAgIGlmICghYnJvd3NlckRldGVjdGlvbi5oYXNTb2Z0d2FyZUtleWJvYXJkKCkpIHtcbiAgICAgICAgaW5wdXQuYmx1cigpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGlucHV0O1xuICB9LFxuICBkZXN0cm95OiBmdW5jdGlvbiAoaWRTdHJpbmcpIHtcbiAgICB2YXIgZm9jdXNJbnB1dHM7XG5cbiAgICBpZiAoIWlkU3RyaW5nKSB7XG4gICAgICBmb2N1c0lucHV0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJbZGF0YS1icmFpbnRyZWUtZGlyZWN0aW9uXVwiKTtcbiAgICAgIGZvY3VzSW5wdXRzID0gW10uc2xpY2UuY2FsbChmb2N1c0lucHV0cyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGZvY3VzSW5wdXRzID0gW2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkU3RyaW5nKV07XG4gICAgfVxuXG4gICAgZm9jdXNJbnB1dHMuZm9yRWFjaChmdW5jdGlvbiAobm9kZSkge1xuICAgICAgaWYgKFxuICAgICAgICBub2RlICYmXG4gICAgICAgIG5vZGUubm9kZVR5cGUgPT09IDEgJiZcbiAgICAgICAgZm9jdXNJbnRlcmNlcHQubWF0Y2hGb2N1c0VsZW1lbnQobm9kZS5nZXRBdHRyaWJ1dGUoXCJpZFwiKSlcbiAgICAgICkge1xuICAgICAgICBub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobm9kZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sXG4gIG1hdGNoRm9jdXNFbGVtZW50OiBmdW5jdGlvbiAoaWRTdHJpbmcpIHtcbiAgICB2YXIgaWRDb21wb25lbnRzLCBoYXNCVFByZWZpeCwgaXNBbGxvd2VkVHlwZSwgaXNWYWxpZERpcmVjdGlvbjtcblxuICAgIGlmICghaWRTdHJpbmcpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZENvbXBvbmVudHMgPSBpZFN0cmluZy5zcGxpdChcIi1cIik7XG5cbiAgICBpZiAoaWRDb21wb25lbnRzLmxlbmd0aCA8IDQpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBoYXNCVFByZWZpeCA9IGlkQ29tcG9uZW50c1swXSA9PT0gXCJidFwiO1xuICAgIGlzQWxsb3dlZFR5cGUgPSBhbGxvd2VkRmllbGRzLmluZGV4T2YoaWRDb21wb25lbnRzWzFdKSA+IC0xO1xuICAgIGlzVmFsaWREaXJlY3Rpb24gPVxuICAgICAgaWRDb21wb25lbnRzWzJdID09PSBkaXJlY3Rpb25zLkJBQ0sgfHxcbiAgICAgIGlkQ29tcG9uZW50c1syXSA9PT0gZGlyZWN0aW9ucy5GT1JXQVJEO1xuXG4gICAgcmV0dXJuIEJvb2xlYW4oaGFzQlRQcmVmaXggJiYgaXNBbGxvd2VkVHlwZSAmJiBpc1ZhbGlkRGlyZWN0aW9uKTtcbiAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZm9jdXNJbnRlcmNlcHQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/shared/focus-intercept.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/hosted-fields/shared/get-card-types.js":
/*!***************************************************************************!*\
  !*** ./node_modules/braintree-web/hosted-fields/shared/get-card-types.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar creditCardType = __webpack_require__(/*! credit-card-type */ \"(ssr)/./node_modules/credit-card-type/dist/index.js\");\n\nmodule.exports = function (number) {\n  var results = creditCardType(number);\n\n  results.forEach(function (card) {\n    // NEXT_MAJOR_VERSION credit-card-type fixed the mastercard enum\n    // but we still pass master-card in the braintree API\n    // in a major version bump, we can remove this and\n    // this will be mastercard instead of master-card\n    if (card.type === \"mastercard\") {\n      card.type = \"master-card\";\n    }\n  });\n\n  return results;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9nZXQtY2FyZC10eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixxQkFBcUIsbUJBQU8sQ0FBQyw2RUFBa0I7O0FBRS9DO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9ob3N0ZWQtZmllbGRzL3NoYXJlZC9nZXQtY2FyZC10eXBlcy5qcz80ZDA5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgY3JlZGl0Q2FyZFR5cGUgPSByZXF1aXJlKFwiY3JlZGl0LWNhcmQtdHlwZVwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobnVtYmVyKSB7XG4gIHZhciByZXN1bHRzID0gY3JlZGl0Q2FyZFR5cGUobnVtYmVyKTtcblxuICByZXN1bHRzLmZvckVhY2goZnVuY3Rpb24gKGNhcmQpIHtcbiAgICAvLyBORVhUX01BSk9SX1ZFUlNJT04gY3JlZGl0LWNhcmQtdHlwZSBmaXhlZCB0aGUgbWFzdGVyY2FyZCBlbnVtXG4gICAgLy8gYnV0IHdlIHN0aWxsIHBhc3MgbWFzdGVyLWNhcmQgaW4gdGhlIGJyYWludHJlZSBBUElcbiAgICAvLyBpbiBhIG1ham9yIHZlcnNpb24gYnVtcCwgd2UgY2FuIHJlbW92ZSB0aGlzIGFuZFxuICAgIC8vIHRoaXMgd2lsbCBiZSBtYXN0ZXJjYXJkIGluc3RlYWQgb2YgbWFzdGVyLWNhcmRcbiAgICBpZiAoY2FyZC50eXBlID09PSBcIm1hc3RlcmNhcmRcIikge1xuICAgICAgY2FyZC50eXBlID0gXCJtYXN0ZXItY2FyZFwiO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIHJlc3VsdHM7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/hosted-fields/shared/get-card-types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/add-metadata.js":
/*!********************************************************!*\
  !*** ./node_modules/braintree-web/lib/add-metadata.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar createAuthorizationData = __webpack_require__(/*! ./create-authorization-data */ \"(ssr)/./node_modules/braintree-web/lib/create-authorization-data.js\");\nvar jsonClone = __webpack_require__(/*! ./json-clone */ \"(ssr)/./node_modules/braintree-web/lib/json-clone.js\");\nvar constants = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\");\n\nfunction addMetadata(configuration, data) {\n  var key;\n  var attrs = data ? jsonClone(data) : {};\n  var authAttrs = createAuthorizationData(configuration.authorization).attrs;\n  var _meta = jsonClone(configuration.analyticsMetadata);\n\n  attrs.braintreeLibraryVersion = constants.BRAINTREE_LIBRARY_VERSION;\n\n  for (key in attrs._meta) {\n    if (attrs._meta.hasOwnProperty(key)) {\n      _meta[key] = attrs._meta[key];\n    }\n  }\n\n  attrs._meta = _meta;\n\n  if (authAttrs.tokenizationKey) {\n    attrs.tokenizationKey = authAttrs.tokenizationKey;\n  } else {\n    attrs.authorizationFingerprint = authAttrs.authorizationFingerprint;\n  }\n\n  return attrs;\n}\n\nmodule.exports = addMetadata;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvYWRkLW1ldGFkYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLDhCQUE4QixtQkFBTyxDQUFDLHdHQUE2QjtBQUNuRSxnQkFBZ0IsbUJBQU8sQ0FBQywwRUFBYztBQUN0QyxnQkFBZ0IsbUJBQU8sQ0FBQyx3RUFBYTs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9hZGQtbWV0YWRhdGEuanM/YjUwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGNyZWF0ZUF1dGhvcml6YXRpb25EYXRhID0gcmVxdWlyZShcIi4vY3JlYXRlLWF1dGhvcml6YXRpb24tZGF0YVwiKTtcbnZhciBqc29uQ2xvbmUgPSByZXF1aXJlKFwiLi9qc29uLWNsb25lXCIpO1xudmFyIGNvbnN0YW50cyA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcblxuZnVuY3Rpb24gYWRkTWV0YWRhdGEoY29uZmlndXJhdGlvbiwgZGF0YSkge1xuICB2YXIga2V5O1xuICB2YXIgYXR0cnMgPSBkYXRhID8ganNvbkNsb25lKGRhdGEpIDoge307XG4gIHZhciBhdXRoQXR0cnMgPSBjcmVhdGVBdXRob3JpemF0aW9uRGF0YShjb25maWd1cmF0aW9uLmF1dGhvcml6YXRpb24pLmF0dHJzO1xuICB2YXIgX21ldGEgPSBqc29uQ2xvbmUoY29uZmlndXJhdGlvbi5hbmFseXRpY3NNZXRhZGF0YSk7XG5cbiAgYXR0cnMuYnJhaW50cmVlTGlicmFyeVZlcnNpb24gPSBjb25zdGFudHMuQlJBSU5UUkVFX0xJQlJBUllfVkVSU0lPTjtcblxuICBmb3IgKGtleSBpbiBhdHRycy5fbWV0YSkge1xuICAgIGlmIChhdHRycy5fbWV0YS5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBfbWV0YVtrZXldID0gYXR0cnMuX21ldGFba2V5XTtcbiAgICB9XG4gIH1cblxuICBhdHRycy5fbWV0YSA9IF9tZXRhO1xuXG4gIGlmIChhdXRoQXR0cnMudG9rZW5pemF0aW9uS2V5KSB7XG4gICAgYXR0cnMudG9rZW5pemF0aW9uS2V5ID0gYXV0aEF0dHJzLnRva2VuaXphdGlvbktleTtcbiAgfSBlbHNlIHtcbiAgICBhdHRycy5hdXRob3JpemF0aW9uRmluZ2VycHJpbnQgPSBhdXRoQXR0cnMuYXV0aG9yaXphdGlvbkZpbmdlcnByaW50O1xuICB9XG5cbiAgcmV0dXJuIGF0dHJzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFkZE1ldGFkYXRhO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/add-metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/analytics.js":
/*!*****************************************************!*\
  !*** ./node_modules/braintree-web/lib/analytics.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar constants = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\");\nvar addMetadata = __webpack_require__(/*! ./add-metadata */ \"(ssr)/./node_modules/braintree-web/lib/add-metadata.js\");\n\nfunction sendAnalyticsEvent(clientInstanceOrPromise, kind, callback) {\n  var timestamp = Date.now(); // milliseconds\n\n  return Promise.resolve(clientInstanceOrPromise)\n    .then(function (client) {\n      var timestampInPromise = Date.now();\n      var configuration = client.getConfiguration();\n      var request = client._request;\n      var url = configuration.gatewayConfiguration.analytics.url;\n      var data = {\n        analytics: [\n          {\n            kind: constants.ANALYTICS_PREFIX + kind,\n            isAsync:\n              Math.floor(timestampInPromise / 1000) !==\n              Math.floor(timestamp / 1000),\n            timestamp: timestamp,\n          },\n        ],\n      };\n\n      request(\n        {\n          url: url,\n          method: \"post\",\n          data: addMetadata(configuration, data),\n          timeout: constants.ANALYTICS_REQUEST_TIMEOUT_MS,\n        },\n        callback\n      );\n    })\n    .catch(function (err) {\n      // for all non-test cases, we don't provide a callback,\n      // so this error will always be swallowed. In this case,\n      // that's fine, it should only error when the deferred\n      // client fails to set up, in which case we don't want\n      // that error to report over and over again via these\n      // deferred analytics events\n      if (callback) {\n        callback(err);\n      }\n    });\n}\n\nmodule.exports = {\n  sendEvent: sendAnalyticsEvent,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvYW5hbHl0aWNzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFhO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLDhFQUFnQjs7QUFFMUM7QUFDQSw4QkFBOEI7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2FuYWx5dGljcy5qcz83YzA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgY29uc3RhbnRzID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xudmFyIGFkZE1ldGFkYXRhID0gcmVxdWlyZShcIi4vYWRkLW1ldGFkYXRhXCIpO1xuXG5mdW5jdGlvbiBzZW5kQW5hbHl0aWNzRXZlbnQoY2xpZW50SW5zdGFuY2VPclByb21pc2UsIGtpbmQsIGNhbGxiYWNrKSB7XG4gIHZhciB0aW1lc3RhbXAgPSBEYXRlLm5vdygpOyAvLyBtaWxsaXNlY29uZHNcblxuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGNsaWVudEluc3RhbmNlT3JQcm9taXNlKVxuICAgIC50aGVuKGZ1bmN0aW9uIChjbGllbnQpIHtcbiAgICAgIHZhciB0aW1lc3RhbXBJblByb21pc2UgPSBEYXRlLm5vdygpO1xuICAgICAgdmFyIGNvbmZpZ3VyYXRpb24gPSBjbGllbnQuZ2V0Q29uZmlndXJhdGlvbigpO1xuICAgICAgdmFyIHJlcXVlc3QgPSBjbGllbnQuX3JlcXVlc3Q7XG4gICAgICB2YXIgdXJsID0gY29uZmlndXJhdGlvbi5nYXRld2F5Q29uZmlndXJhdGlvbi5hbmFseXRpY3MudXJsO1xuICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgIGFuYWx5dGljczogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGtpbmQ6IGNvbnN0YW50cy5BTkFMWVRJQ1NfUFJFRklYICsga2luZCxcbiAgICAgICAgICAgIGlzQXN5bmM6XG4gICAgICAgICAgICAgIE1hdGguZmxvb3IodGltZXN0YW1wSW5Qcm9taXNlIC8gMTAwMCkgIT09XG4gICAgICAgICAgICAgIE1hdGguZmxvb3IodGltZXN0YW1wIC8gMTAwMCksXG4gICAgICAgICAgICB0aW1lc3RhbXA6IHRpbWVzdGFtcCxcbiAgICAgICAgICB9LFxuICAgICAgICBdLFxuICAgICAgfTtcblxuICAgICAgcmVxdWVzdChcbiAgICAgICAge1xuICAgICAgICAgIHVybDogdXJsLFxuICAgICAgICAgIG1ldGhvZDogXCJwb3N0XCIsXG4gICAgICAgICAgZGF0YTogYWRkTWV0YWRhdGEoY29uZmlndXJhdGlvbiwgZGF0YSksXG4gICAgICAgICAgdGltZW91dDogY29uc3RhbnRzLkFOQUxZVElDU19SRVFVRVNUX1RJTUVPVVRfTVMsXG4gICAgICAgIH0sXG4gICAgICAgIGNhbGxiYWNrXG4gICAgICApO1xuICAgIH0pXG4gICAgLmNhdGNoKGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIC8vIGZvciBhbGwgbm9uLXRlc3QgY2FzZXMsIHdlIGRvbid0IHByb3ZpZGUgYSBjYWxsYmFjayxcbiAgICAgIC8vIHNvIHRoaXMgZXJyb3Igd2lsbCBhbHdheXMgYmUgc3dhbGxvd2VkLiBJbiB0aGlzIGNhc2UsXG4gICAgICAvLyB0aGF0J3MgZmluZSwgaXQgc2hvdWxkIG9ubHkgZXJyb3Igd2hlbiB0aGUgZGVmZXJyZWRcbiAgICAgIC8vIGNsaWVudCBmYWlscyB0byBzZXQgdXAsIGluIHdoaWNoIGNhc2Ugd2UgZG9uJ3Qgd2FudFxuICAgICAgLy8gdGhhdCBlcnJvciB0byByZXBvcnQgb3ZlciBhbmQgb3ZlciBhZ2FpbiB2aWEgdGhlc2VcbiAgICAgIC8vIGRlZmVycmVkIGFuYWx5dGljcyBldmVudHNcbiAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgfVxuICAgIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2VuZEV2ZW50OiBzZW5kQW5hbHl0aWNzRXZlbnQsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/analytics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/assets.js":
/*!**************************************************!*\
  !*** ./node_modules/braintree-web/lib/assets.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar loadScript = __webpack_require__(/*! @braintree/asset-loader/load-script */ \"(ssr)/./node_modules/@braintree/asset-loader/load-script.js\");\n\nmodule.exports = {\n  loadScript: loadScript,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvYXNzZXRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGlCQUFpQixtQkFBTyxDQUFDLHdHQUFxQzs7QUFFOUQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9hc3NldHMuanM/MTkzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGxvYWRTY3JpcHQgPSByZXF1aXJlKFwiQGJyYWludHJlZS9hc3NldC1sb2FkZXIvbG9hZC1zY3JpcHRcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBsb2FkU2NyaXB0OiBsb2FkU2NyaXB0LFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/assets.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/assign.js":
/*!**************************************************!*\
  !*** ./node_modules/braintree-web/lib/assign.js ***!
  \**************************************************/
/***/ ((module) => {

eval("\n\nvar assignNormalized =\n  typeof Object.assign === \"function\" ? Object.assign : assignPolyfill;\n\nfunction assignPolyfill(destination) {\n  var i, source, key;\n\n  for (i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      if (source.hasOwnProperty(key)) {\n        destination[key] = source[key];\n      }\n    }\n  }\n\n  return destination;\n}\n\nmodule.exports = {\n  assign: assignNormalized,\n  _assign: assignPolyfill,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvYXNzaWduLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxjQUFjLHNCQUFzQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9hc3NpZ24uanM/N2NkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGFzc2lnbk5vcm1hbGl6ZWQgPVxuICB0eXBlb2YgT2JqZWN0LmFzc2lnbiA9PT0gXCJmdW5jdGlvblwiID8gT2JqZWN0LmFzc2lnbiA6IGFzc2lnblBvbHlmaWxsO1xuXG5mdW5jdGlvbiBhc3NpZ25Qb2x5ZmlsbChkZXN0aW5hdGlvbikge1xuICB2YXIgaSwgc291cmNlLCBrZXk7XG5cbiAgZm9yIChpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTtcbiAgICBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICAgIGlmIChzb3VyY2UuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBkZXN0aW5hdGlvbltrZXldID0gc291cmNlW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRlc3RpbmF0aW9uO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgYXNzaWduOiBhc3NpZ25Ob3JtYWxpemVkLFxuICBfYXNzaWduOiBhc3NpZ25Qb2x5ZmlsbCxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/assign.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js":
/*!************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/basic-component-verification.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ./braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar sharedErrors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/lib/errors.js\");\nvar VERSION = \"3.99.0\";\n\nfunction basicComponentVerification(options) {\n  var client, authorization, name;\n\n  if (!options) {\n    return Promise.reject(\n      new BraintreeError({\n        type: sharedErrors.INVALID_USE_OF_INTERNAL_FUNCTION.type,\n        code: sharedErrors.INVALID_USE_OF_INTERNAL_FUNCTION.code,\n        message:\n          \"Options must be passed to basicComponentVerification function.\",\n      })\n    );\n  }\n\n  name = options.name;\n  client = options.client;\n  authorization = options.authorization;\n\n  if (!client && !authorization) {\n    return Promise.reject(\n      new BraintreeError({\n        type: sharedErrors.INSTANTIATION_OPTION_REQUIRED.type,\n        code: sharedErrors.INSTANTIATION_OPTION_REQUIRED.code,\n        // NEXT_MAJOR_VERSION in major version, we expose passing in authorization for all components\n        // instead of passing in a client instance. Leave this a silent feature for now.\n        message: \"options.client is required when instantiating \" + name + \".\",\n      })\n    );\n  }\n\n  if (!authorization && client.getVersion() !== VERSION) {\n    return Promise.reject(\n      new BraintreeError({\n        type: sharedErrors.INCOMPATIBLE_VERSIONS.type,\n        code: sharedErrors.INCOMPATIBLE_VERSIONS.code,\n        message:\n          \"Client (version \" +\n          client.getVersion() +\n          \") and \" +\n          name +\n          \" (version \" +\n          VERSION +\n          \") components must be from the same SDK version.\",\n      })\n    );\n  }\n\n  return Promise.resolve();\n}\n\nmodule.exports = {\n  verify: basicComponentVerification,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvYmFzaWMtY29tcG9uZW50LXZlcmlmaWNhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBbUI7QUFDaEQsbUJBQW1CLG1CQUFPLENBQUMsa0VBQVU7QUFDckM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvYmFzaWMtY29tcG9uZW50LXZlcmlmaWNhdGlvbi5qcz9mMmE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQnJhaW50cmVlRXJyb3IgPSByZXF1aXJlKFwiLi9icmFpbnRyZWUtZXJyb3JcIik7XG52YXIgc2hhcmVkRXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xudmFyIFZFUlNJT04gPSBcIjMuOTkuMFwiO1xuXG5mdW5jdGlvbiBiYXNpY0NvbXBvbmVudFZlcmlmaWNhdGlvbihvcHRpb25zKSB7XG4gIHZhciBjbGllbnQsIGF1dGhvcml6YXRpb24sIG5hbWU7XG5cbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFxuICAgICAgbmV3IEJyYWludHJlZUVycm9yKHtcbiAgICAgICAgdHlwZTogc2hhcmVkRXJyb3JzLklOVkFMSURfVVNFX09GX0lOVEVSTkFMX0ZVTkNUSU9OLnR5cGUsXG4gICAgICAgIGNvZGU6IHNoYXJlZEVycm9ycy5JTlZBTElEX1VTRV9PRl9JTlRFUk5BTF9GVU5DVElPTi5jb2RlLFxuICAgICAgICBtZXNzYWdlOlxuICAgICAgICAgIFwiT3B0aW9ucyBtdXN0IGJlIHBhc3NlZCB0byBiYXNpY0NvbXBvbmVudFZlcmlmaWNhdGlvbiBmdW5jdGlvbi5cIixcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIG5hbWUgPSBvcHRpb25zLm5hbWU7XG4gIGNsaWVudCA9IG9wdGlvbnMuY2xpZW50O1xuICBhdXRob3JpemF0aW9uID0gb3B0aW9ucy5hdXRob3JpemF0aW9uO1xuXG4gIGlmICghY2xpZW50ICYmICFhdXRob3JpemF0aW9uKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFxuICAgICAgbmV3IEJyYWludHJlZUVycm9yKHtcbiAgICAgICAgdHlwZTogc2hhcmVkRXJyb3JzLklOU1RBTlRJQVRJT05fT1BUSU9OX1JFUVVJUkVELnR5cGUsXG4gICAgICAgIGNvZGU6IHNoYXJlZEVycm9ycy5JTlNUQU5USUFUSU9OX09QVElPTl9SRVFVSVJFRC5jb2RlLFxuICAgICAgICAvLyBORVhUX01BSk9SX1ZFUlNJT04gaW4gbWFqb3IgdmVyc2lvbiwgd2UgZXhwb3NlIHBhc3NpbmcgaW4gYXV0aG9yaXphdGlvbiBmb3IgYWxsIGNvbXBvbmVudHNcbiAgICAgICAgLy8gaW5zdGVhZCBvZiBwYXNzaW5nIGluIGEgY2xpZW50IGluc3RhbmNlLiBMZWF2ZSB0aGlzIGEgc2lsZW50IGZlYXR1cmUgZm9yIG5vdy5cbiAgICAgICAgbWVzc2FnZTogXCJvcHRpb25zLmNsaWVudCBpcyByZXF1aXJlZCB3aGVuIGluc3RhbnRpYXRpbmcgXCIgKyBuYW1lICsgXCIuXCIsXG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBpZiAoIWF1dGhvcml6YXRpb24gJiYgY2xpZW50LmdldFZlcnNpb24oKSAhPT0gVkVSU0lPTikge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChcbiAgICAgIG5ldyBCcmFpbnRyZWVFcnJvcih7XG4gICAgICAgIHR5cGU6IHNoYXJlZEVycm9ycy5JTkNPTVBBVElCTEVfVkVSU0lPTlMudHlwZSxcbiAgICAgICAgY29kZTogc2hhcmVkRXJyb3JzLklOQ09NUEFUSUJMRV9WRVJTSU9OUy5jb2RlLFxuICAgICAgICBtZXNzYWdlOlxuICAgICAgICAgIFwiQ2xpZW50ICh2ZXJzaW9uIFwiICtcbiAgICAgICAgICBjbGllbnQuZ2V0VmVyc2lvbigpICtcbiAgICAgICAgICBcIikgYW5kIFwiICtcbiAgICAgICAgICBuYW1lICtcbiAgICAgICAgICBcIiAodmVyc2lvbiBcIiArXG4gICAgICAgICAgVkVSU0lPTiArXG4gICAgICAgICAgXCIpIGNvbXBvbmVudHMgbXVzdCBiZSBmcm9tIHRoZSBzYW1lIFNESyB2ZXJzaW9uLlwiLFxuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdmVyaWZ5OiBiYXNpY0NvbXBvbmVudFZlcmlmaWNhdGlvbixcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/batch-execute-functions.js":
/*!*******************************************************************!*\
  !*** ./node_modules/braintree-web/lib/batch-execute-functions.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar once = __webpack_require__(/*! ./once */ \"(ssr)/./node_modules/braintree-web/lib/once.js\");\n\nfunction call(fn, callback) {\n  var isSync = fn.length === 0;\n\n  if (isSync) {\n    fn();\n    callback(null);\n  } else {\n    fn(callback);\n  }\n}\n\nmodule.exports = function (functions, cb) {\n  var i;\n  var length = functions.length;\n  var remaining = length;\n  var callback = once(cb);\n\n  if (length === 0) {\n    callback(null);\n\n    return;\n  }\n\n  function finish(err) {\n    if (err) {\n      callback(err);\n\n      return;\n    }\n\n    remaining -= 1;\n    if (remaining === 0) {\n      callback(null);\n    }\n  }\n\n  for (i = 0; i < length; i++) {\n    call(functions[i], finish);\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvYmF0Y2gtZXhlY3V0ZS1mdW5jdGlvbnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsV0FBVyxtQkFBTyxDQUFDLDhEQUFROztBQUUzQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxjQUFjLFlBQVk7QUFDMUI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9iYXRjaC1leGVjdXRlLWZ1bmN0aW9ucy5qcz82Mjg2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgb25jZSA9IHJlcXVpcmUoXCIuL29uY2VcIik7XG5cbmZ1bmN0aW9uIGNhbGwoZm4sIGNhbGxiYWNrKSB7XG4gIHZhciBpc1N5bmMgPSBmbi5sZW5ndGggPT09IDA7XG5cbiAgaWYgKGlzU3luYykge1xuICAgIGZuKCk7XG4gICAgY2FsbGJhY2sobnVsbCk7XG4gIH0gZWxzZSB7XG4gICAgZm4oY2FsbGJhY2spO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZ1bmN0aW9ucywgY2IpIHtcbiAgdmFyIGk7XG4gIHZhciBsZW5ndGggPSBmdW5jdGlvbnMubGVuZ3RoO1xuICB2YXIgcmVtYWluaW5nID0gbGVuZ3RoO1xuICB2YXIgY2FsbGJhY2sgPSBvbmNlKGNiKTtcblxuICBpZiAobGVuZ3RoID09PSAwKSB7XG4gICAgY2FsbGJhY2sobnVsbCk7XG5cbiAgICByZXR1cm47XG4gIH1cblxuICBmdW5jdGlvbiBmaW5pc2goZXJyKSB7XG4gICAgaWYgKGVycikge1xuICAgICAgY2FsbGJhY2soZXJyKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHJlbWFpbmluZyAtPSAxO1xuICAgIGlmIChyZW1haW5pbmcgPT09IDApIHtcbiAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgIH1cbiAgfVxuXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGNhbGwoZnVuY3Rpb25zW2ldLCBmaW5pc2gpO1xuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/batch-execute-functions.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/braintree-error.js":
/*!***********************************************************!*\
  !*** ./node_modules/braintree-web/lib/braintree-error.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar enumerate = __webpack_require__(/*! ./enumerate */ \"(ssr)/./node_modules/braintree-web/lib/enumerate.js\");\n\n/**\n * @class\n * @global\n * @param {object} options Construction options\n * @classdesc This class is used to report error conditions, frequently as the first parameter to callbacks throughout the Braintree SDK.\n * @description <strong>You cannot use this constructor directly. Interact with instances of this class through {@link callback callbacks}.</strong>\n */\nfunction BraintreeError(options) {\n  if (!BraintreeError.types.hasOwnProperty(options.type)) {\n    throw new Error(options.type + \" is not a valid type.\");\n  }\n\n  if (!options.code) {\n    throw new Error(\"Error code required.\");\n  }\n\n  if (!options.message) {\n    throw new Error(\"Error message required.\");\n  }\n\n  this.name = \"BraintreeError\";\n\n  /**\n   * @type {string}\n   * @description A code that corresponds to specific errors.\n   */\n  this.code = options.code;\n\n  /**\n   * @type {string}\n   * @description A short description of the error.\n   */\n  this.message = options.message;\n\n  /**\n   * @type {BraintreeError.types}\n   * @description The type of error.\n   */\n  this.type = options.type;\n\n  /**\n   * @type {object=}\n   * @description Additional information about the error, such as an underlying network error response.\n   */\n  this.details = options.details;\n}\n\nBraintreeError.prototype = Object.create(Error.prototype);\nBraintreeError.prototype.constructor = BraintreeError;\n\n/**\n * Enum for {@link BraintreeError} types.\n * @name BraintreeError.types\n * @enum\n * @readonly\n * @memberof BraintreeError\n * @property {string} CUSTOMER An error caused by the customer.\n * @property {string} MERCHANT An error that is actionable by the merchant.\n * @property {string} NETWORK An error due to a network problem.\n * @property {string} INTERNAL An error caused by Braintree code.\n * @property {string} UNKNOWN An error where the origin is unknown.\n */\nBraintreeError.types = enumerate([\n  \"CUSTOMER\",\n  \"MERCHANT\",\n  \"NETWORK\",\n  \"INTERNAL\",\n  \"UNKNOWN\",\n]);\n\nBraintreeError.findRootError = function (err) {\n  if (\n    err instanceof BraintreeError &&\n    err.details &&\n    err.details.originalError\n  ) {\n    return BraintreeError.findRootError(err.details.originalError);\n  }\n\n  return err;\n};\n\nmodule.exports = BraintreeError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvYnJhaW50cmVlLWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFhOztBQUVyQztBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkI7QUFDQSxpSEFBaUgseUJBQXlCO0FBQzFJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QixjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9icmFpbnRyZWUtZXJyb3IuanM/MjE2YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGVudW1lcmF0ZSA9IHJlcXVpcmUoXCIuL2VudW1lcmF0ZVwiKTtcblxuLyoqXG4gKiBAY2xhc3NcbiAqIEBnbG9iYWxcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIENvbnN0cnVjdGlvbiBvcHRpb25zXG4gKiBAY2xhc3NkZXNjIFRoaXMgY2xhc3MgaXMgdXNlZCB0byByZXBvcnQgZXJyb3IgY29uZGl0aW9ucywgZnJlcXVlbnRseSBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyIHRvIGNhbGxiYWNrcyB0aHJvdWdob3V0IHRoZSBCcmFpbnRyZWUgU0RLLlxuICogQGRlc2NyaXB0aW9uIDxzdHJvbmc+WW91IGNhbm5vdCB1c2UgdGhpcyBjb25zdHJ1Y3RvciBkaXJlY3RseS4gSW50ZXJhY3Qgd2l0aCBpbnN0YW5jZXMgb2YgdGhpcyBjbGFzcyB0aHJvdWdoIHtAbGluayBjYWxsYmFjayBjYWxsYmFja3N9Ljwvc3Ryb25nPlxuICovXG5mdW5jdGlvbiBCcmFpbnRyZWVFcnJvcihvcHRpb25zKSB7XG4gIGlmICghQnJhaW50cmVlRXJyb3IudHlwZXMuaGFzT3duUHJvcGVydHkob3B0aW9ucy50eXBlKSkge1xuICAgIHRocm93IG5ldyBFcnJvcihvcHRpb25zLnR5cGUgKyBcIiBpcyBub3QgYSB2YWxpZCB0eXBlLlwiKTtcbiAgfVxuXG4gIGlmICghb3B0aW9ucy5jb2RlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgY29kZSByZXF1aXJlZC5cIik7XG4gIH1cblxuICBpZiAoIW9wdGlvbnMubWVzc2FnZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yIG1lc3NhZ2UgcmVxdWlyZWQuXCIpO1xuICB9XG5cbiAgdGhpcy5uYW1lID0gXCJCcmFpbnRyZWVFcnJvclwiO1xuXG4gIC8qKlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb24gQSBjb2RlIHRoYXQgY29ycmVzcG9uZHMgdG8gc3BlY2lmaWMgZXJyb3JzLlxuICAgKi9cbiAgdGhpcy5jb2RlID0gb3B0aW9ucy5jb2RlO1xuXG4gIC8qKlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb24gQSBzaG9ydCBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IuXG4gICAqL1xuICB0aGlzLm1lc3NhZ2UgPSBvcHRpb25zLm1lc3NhZ2U7XG5cbiAgLyoqXG4gICAqIEB0eXBlIHtCcmFpbnRyZWVFcnJvci50eXBlc31cbiAgICogQGRlc2NyaXB0aW9uIFRoZSB0eXBlIG9mIGVycm9yLlxuICAgKi9cbiAgdGhpcy50eXBlID0gb3B0aW9ucy50eXBlO1xuXG4gIC8qKlxuICAgKiBAdHlwZSB7b2JqZWN0PX1cbiAgICogQGRlc2NyaXB0aW9uIEFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVycm9yLCBzdWNoIGFzIGFuIHVuZGVybHlpbmcgbmV0d29yayBlcnJvciByZXNwb25zZS5cbiAgICovXG4gIHRoaXMuZGV0YWlscyA9IG9wdGlvbnMuZGV0YWlscztcbn1cblxuQnJhaW50cmVlRXJyb3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShFcnJvci5wcm90b3R5cGUpO1xuQnJhaW50cmVlRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQnJhaW50cmVlRXJyb3I7XG5cbi8qKlxuICogRW51bSBmb3Ige0BsaW5rIEJyYWludHJlZUVycm9yfSB0eXBlcy5cbiAqIEBuYW1lIEJyYWludHJlZUVycm9yLnR5cGVzXG4gKiBAZW51bVxuICogQHJlYWRvbmx5XG4gKiBAbWVtYmVyb2YgQnJhaW50cmVlRXJyb3JcbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBDVVNUT01FUiBBbiBlcnJvciBjYXVzZWQgYnkgdGhlIGN1c3RvbWVyLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IE1FUkNIQU5UIEFuIGVycm9yIHRoYXQgaXMgYWN0aW9uYWJsZSBieSB0aGUgbWVyY2hhbnQuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gTkVUV09SSyBBbiBlcnJvciBkdWUgdG8gYSBuZXR3b3JrIHByb2JsZW0uXG4gKiBAcHJvcGVydHkge3N0cmluZ30gSU5URVJOQUwgQW4gZXJyb3IgY2F1c2VkIGJ5IEJyYWludHJlZSBjb2RlLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IFVOS05PV04gQW4gZXJyb3Igd2hlcmUgdGhlIG9yaWdpbiBpcyB1bmtub3duLlxuICovXG5CcmFpbnRyZWVFcnJvci50eXBlcyA9IGVudW1lcmF0ZShbXG4gIFwiQ1VTVE9NRVJcIixcbiAgXCJNRVJDSEFOVFwiLFxuICBcIk5FVFdPUktcIixcbiAgXCJJTlRFUk5BTFwiLFxuICBcIlVOS05PV05cIixcbl0pO1xuXG5CcmFpbnRyZWVFcnJvci5maW5kUm9vdEVycm9yID0gZnVuY3Rpb24gKGVycikge1xuICBpZiAoXG4gICAgZXJyIGluc3RhbmNlb2YgQnJhaW50cmVlRXJyb3IgJiZcbiAgICBlcnIuZGV0YWlscyAmJlxuICAgIGVyci5kZXRhaWxzLm9yaWdpbmFsRXJyb3JcbiAgKSB7XG4gICAgcmV0dXJuIEJyYWludHJlZUVycm9yLmZpbmRSb290RXJyb3IoZXJyLmRldGFpbHMub3JpZ2luYWxFcnJvcik7XG4gIH1cblxuICByZXR1cm4gZXJyO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBCcmFpbnRyZWVFcnJvcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/braintree-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/braintree-web/lib/constants.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\nvar VERSION = \"3.99.0\";\nvar PLATFORM = \"web\";\n\nvar CLIENT_API_URLS = {\n  production: \"https://api.braintreegateway.com:443\",\n  sandbox: \"https://api.sandbox.braintreegateway.com:443\",\n};\n\nvar ASSETS_URLS = {\n  production: \"https://assets.braintreegateway.com\",\n  sandbox: \"https://assets.braintreegateway.com\",\n};\n\nvar GRAPHQL_URLS = {\n  production: \"https://payments.braintree-api.com/graphql\",\n  sandbox: \"https://payments.sandbox.braintree-api.com/graphql\",\n};\n\nmodule.exports = {\n  ANALYTICS_PREFIX: PLATFORM + \".\",\n  ANALYTICS_REQUEST_TIMEOUT_MS: 2000,\n  ASSETS_URLS: ASSETS_URLS,\n  CLIENT_API_URLS: CLIENT_API_URLS,\n  FRAUDNET_SOURCE: \"BRAINTREE_SIGNIN\",\n  FRAUDNET_FNCLS: \"fnparams-dede7cc5-15fd-4c75-a9f4-36c430ee3a99\",\n  FRAUDNET_URL: \"https://c.paypal.com/da/r/fb.js\",\n  BUS_CONFIGURATION_REQUEST_EVENT: \"BUS_CONFIGURATION_REQUEST\",\n  GRAPHQL_URLS: GRAPHQL_URLS,\n  INTEGRATION_TIMEOUT_MS: 60000,\n  VERSION: VERSION,\n  INTEGRATION: \"custom\",\n  SOURCE: \"client\",\n  PLATFORM: PLATFORM,\n  BRAINTREE_LIBRARY_VERSION: \"braintree/\" + PLATFORM + \"/\" + VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvY29uc3RhbnRzLmpzPzBlYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBWRVJTSU9OID0gXCIzLjk5LjBcIjtcbnZhciBQTEFURk9STSA9IFwid2ViXCI7XG5cbnZhciBDTElFTlRfQVBJX1VSTFMgPSB7XG4gIHByb2R1Y3Rpb246IFwiaHR0cHM6Ly9hcGkuYnJhaW50cmVlZ2F0ZXdheS5jb206NDQzXCIsXG4gIHNhbmRib3g6IFwiaHR0cHM6Ly9hcGkuc2FuZGJveC5icmFpbnRyZWVnYXRld2F5LmNvbTo0NDNcIixcbn07XG5cbnZhciBBU1NFVFNfVVJMUyA9IHtcbiAgcHJvZHVjdGlvbjogXCJodHRwczovL2Fzc2V0cy5icmFpbnRyZWVnYXRld2F5LmNvbVwiLFxuICBzYW5kYm94OiBcImh0dHBzOi8vYXNzZXRzLmJyYWludHJlZWdhdGV3YXkuY29tXCIsXG59O1xuXG52YXIgR1JBUEhRTF9VUkxTID0ge1xuICBwcm9kdWN0aW9uOiBcImh0dHBzOi8vcGF5bWVudHMuYnJhaW50cmVlLWFwaS5jb20vZ3JhcGhxbFwiLFxuICBzYW5kYm94OiBcImh0dHBzOi8vcGF5bWVudHMuc2FuZGJveC5icmFpbnRyZWUtYXBpLmNvbS9ncmFwaHFsXCIsXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQU5BTFlUSUNTX1BSRUZJWDogUExBVEZPUk0gKyBcIi5cIixcbiAgQU5BTFlUSUNTX1JFUVVFU1RfVElNRU9VVF9NUzogMjAwMCxcbiAgQVNTRVRTX1VSTFM6IEFTU0VUU19VUkxTLFxuICBDTElFTlRfQVBJX1VSTFM6IENMSUVOVF9BUElfVVJMUyxcbiAgRlJBVURORVRfU09VUkNFOiBcIkJSQUlOVFJFRV9TSUdOSU5cIixcbiAgRlJBVURORVRfRk5DTFM6IFwiZm5wYXJhbXMtZGVkZTdjYzUtMTVmZC00Yzc1LWE5ZjQtMzZjNDMwZWUzYTk5XCIsXG4gIEZSQVVETkVUX1VSTDogXCJodHRwczovL2MucGF5cGFsLmNvbS9kYS9yL2ZiLmpzXCIsXG4gIEJVU19DT05GSUdVUkFUSU9OX1JFUVVFU1RfRVZFTlQ6IFwiQlVTX0NPTkZJR1VSQVRJT05fUkVRVUVTVFwiLFxuICBHUkFQSFFMX1VSTFM6IEdSQVBIUUxfVVJMUyxcbiAgSU5URUdSQVRJT05fVElNRU9VVF9NUzogNjAwMDAsXG4gIFZFUlNJT046IFZFUlNJT04sXG4gIElOVEVHUkFUSU9OOiBcImN1c3RvbVwiLFxuICBTT1VSQ0U6IFwiY2xpZW50XCIsXG4gIFBMQVRGT1JNOiBQTEFURk9STSxcbiAgQlJBSU5UUkVFX0xJQlJBUllfVkVSU0lPTjogXCJicmFpbnRyZWUvXCIgKyBQTEFURk9STSArIFwiL1wiICsgVkVSU0lPTixcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js":
/*!********************************************************************!*\
  !*** ./node_modules/braintree-web/lib/convert-methods-to-error.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ./braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar sharedErrors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/lib/errors.js\");\n\nmodule.exports = function (instance, methodNames) {\n  methodNames.forEach(function (methodName) {\n    instance[methodName] = function () {\n      throw new BraintreeError({\n        type: sharedErrors.METHOD_CALLED_AFTER_TEARDOWN.type,\n        code: sharedErrors.METHOD_CALLED_AFTER_TEARDOWN.code,\n        message: methodName + \" cannot be called after teardown.\",\n      });\n    };\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvY29udmVydC1tZXRob2RzLXRvLWVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHFCQUFxQixtQkFBTyxDQUFDLG9GQUFtQjtBQUNoRCxtQkFBbUIsbUJBQU8sQ0FBQyxrRUFBVTs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2NvbnZlcnQtbWV0aG9kcy10by1lcnJvci5qcz8zMjhiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQnJhaW50cmVlRXJyb3IgPSByZXF1aXJlKFwiLi9icmFpbnRyZWUtZXJyb3JcIik7XG52YXIgc2hhcmVkRXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgbWV0aG9kTmFtZXMpIHtcbiAgbWV0aG9kTmFtZXMuZm9yRWFjaChmdW5jdGlvbiAobWV0aG9kTmFtZSkge1xuICAgIGluc3RhbmNlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24gKCkge1xuICAgICAgdGhyb3cgbmV3IEJyYWludHJlZUVycm9yKHtcbiAgICAgICAgdHlwZTogc2hhcmVkRXJyb3JzLk1FVEhPRF9DQUxMRURfQUZURVJfVEVBUkRPV04udHlwZSxcbiAgICAgICAgY29kZTogc2hhcmVkRXJyb3JzLk1FVEhPRF9DQUxMRURfQUZURVJfVEVBUkRPV04uY29kZSxcbiAgICAgICAgbWVzc2FnZTogbWV0aG9kTmFtZSArIFwiIGNhbm5vdCBiZSBjYWxsZWQgYWZ0ZXIgdGVhcmRvd24uXCIsXG4gICAgICB9KTtcbiAgICB9O1xuICB9KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/convert-to-braintree-error.js":
/*!**********************************************************************!*\
  !*** ./node_modules/braintree-web/lib/convert-to-braintree-error.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ./braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nfunction convertToBraintreeError(originalErr, btErrorObject) {\n  if (originalErr instanceof BraintreeError) {\n    return originalErr;\n  }\n\n  return new BraintreeError({\n    type: btErrorObject.type,\n    code: btErrorObject.code,\n    message: btErrorObject.message,\n    details: {\n      originalError: originalErr,\n    },\n  });\n}\n\nmodule.exports = convertToBraintreeError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvY29udmVydC10by1icmFpbnRyZWUtZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIscUJBQXFCLG1CQUFPLENBQUMsb0ZBQW1COztBQUVoRDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9jb252ZXJ0LXRvLWJyYWludHJlZS1lcnJvci5qcz84NmM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQnJhaW50cmVlRXJyb3IgPSByZXF1aXJlKFwiLi9icmFpbnRyZWUtZXJyb3JcIik7XG5cbmZ1bmN0aW9uIGNvbnZlcnRUb0JyYWludHJlZUVycm9yKG9yaWdpbmFsRXJyLCBidEVycm9yT2JqZWN0KSB7XG4gIGlmIChvcmlnaW5hbEVyciBpbnN0YW5jZW9mIEJyYWludHJlZUVycm9yKSB7XG4gICAgcmV0dXJuIG9yaWdpbmFsRXJyO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBCcmFpbnRyZWVFcnJvcih7XG4gICAgdHlwZTogYnRFcnJvck9iamVjdC50eXBlLFxuICAgIGNvZGU6IGJ0RXJyb3JPYmplY3QuY29kZSxcbiAgICBtZXNzYWdlOiBidEVycm9yT2JqZWN0Lm1lc3NhZ2UsXG4gICAgZGV0YWlsczoge1xuICAgICAgb3JpZ2luYWxFcnJvcjogb3JpZ2luYWxFcnIsXG4gICAgfSxcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udmVydFRvQnJhaW50cmVlRXJyb3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/convert-to-braintree-error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/create-assets-url.js":
/*!*************************************************************!*\
  !*** ./node_modules/braintree-web/lib/create-assets-url.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar ASSETS_URLS = (__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").ASSETS_URLS);\n\nfunction createAssetsUrl(authorization) {\n  return ASSETS_URLS.production;\n}\n/* eslint-enable */\n\nmodule.exports = {\n  create: createAssetsUrl,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvY3JlYXRlLWFzc2V0cy11cmwuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsa0JBQWtCLDJHQUFrQzs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9jcmVhdGUtYXNzZXRzLXVybC5qcz81MDE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQVNTRVRTX1VSTFMgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIikuQVNTRVRTX1VSTFM7XG5cbmZ1bmN0aW9uIGNyZWF0ZUFzc2V0c1VybChhdXRob3JpemF0aW9uKSB7XG4gIHJldHVybiBBU1NFVFNfVVJMUy5wcm9kdWN0aW9uO1xufVxuLyogZXNsaW50LWVuYWJsZSAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlOiBjcmVhdGVBc3NldHNVcmwsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/create-assets-url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/create-authorization-data.js":
/*!*********************************************************************!*\
  !*** ./node_modules/braintree-web/lib/create-authorization-data.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar atob = (__webpack_require__(/*! ../lib/vendor/polyfill */ \"(ssr)/./node_modules/braintree-web/lib/vendor/polyfill.js\").atob);\nvar CLIENT_API_URLS = (__webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").CLIENT_API_URLS);\n\nfunction _isTokenizationKey(str) {\n  return /^[a-zA-Z0-9]+_[a-zA-Z0-9]+_[a-zA-Z0-9_]+$/.test(str);\n}\n\nfunction _parseTokenizationKey(tokenizationKey) {\n  var tokens = tokenizationKey.split(\"_\");\n  var environment = tokens[0];\n  var merchantId = tokens.slice(2).join(\"_\");\n\n  return {\n    merchantId: merchantId,\n    environment: environment,\n  };\n}\n\nfunction createAuthorizationData(authorization) {\n  var parsedClientToken, parsedTokenizationKey;\n  var data = {\n    attrs: {},\n    configUrl: \"\",\n  };\n\n  if (_isTokenizationKey(authorization)) {\n    parsedTokenizationKey = _parseTokenizationKey(authorization);\n    data.environment = parsedTokenizationKey.environment;\n    data.attrs.tokenizationKey = authorization;\n    data.configUrl =\n      CLIENT_API_URLS[parsedTokenizationKey.environment] +\n      \"/merchants/\" +\n      parsedTokenizationKey.merchantId +\n      \"/client_api/v1/configuration\";\n  } else {\n    parsedClientToken = JSON.parse(atob(authorization));\n    data.environment = parsedClientToken.environment;\n    data.attrs.authorizationFingerprint =\n      parsedClientToken.authorizationFingerprint;\n    data.configUrl = parsedClientToken.configUrl;\n    data.graphQL = parsedClientToken.graphQL;\n  }\n\n  return data;\n}\n\nmodule.exports = createAuthorizationData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvY3JlYXRlLWF1dGhvcml6YXRpb24tZGF0YS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixXQUFXLHFIQUFzQztBQUNqRCxzQkFBc0Isb0hBQTJDOztBQUVqRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvY3JlYXRlLWF1dGhvcml6YXRpb24tZGF0YS5qcz9mMmExIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgYXRvYiA9IHJlcXVpcmUoXCIuLi9saWIvdmVuZG9yL3BvbHlmaWxsXCIpLmF0b2I7XG52YXIgQ0xJRU5UX0FQSV9VUkxTID0gcmVxdWlyZShcIi4uL2xpYi9jb25zdGFudHNcIikuQ0xJRU5UX0FQSV9VUkxTO1xuXG5mdW5jdGlvbiBfaXNUb2tlbml6YXRpb25LZXkoc3RyKSB7XG4gIHJldHVybiAvXlthLXpBLVowLTldK19bYS16QS1aMC05XStfW2EtekEtWjAtOV9dKyQvLnRlc3Qoc3RyKTtcbn1cblxuZnVuY3Rpb24gX3BhcnNlVG9rZW5pemF0aW9uS2V5KHRva2VuaXphdGlvbktleSkge1xuICB2YXIgdG9rZW5zID0gdG9rZW5pemF0aW9uS2V5LnNwbGl0KFwiX1wiKTtcbiAgdmFyIGVudmlyb25tZW50ID0gdG9rZW5zWzBdO1xuICB2YXIgbWVyY2hhbnRJZCA9IHRva2Vucy5zbGljZSgyKS5qb2luKFwiX1wiKTtcblxuICByZXR1cm4ge1xuICAgIG1lcmNoYW50SWQ6IG1lcmNoYW50SWQsXG4gICAgZW52aXJvbm1lbnQ6IGVudmlyb25tZW50LFxuICB9O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVBdXRob3JpemF0aW9uRGF0YShhdXRob3JpemF0aW9uKSB7XG4gIHZhciBwYXJzZWRDbGllbnRUb2tlbiwgcGFyc2VkVG9rZW5pemF0aW9uS2V5O1xuICB2YXIgZGF0YSA9IHtcbiAgICBhdHRyczoge30sXG4gICAgY29uZmlnVXJsOiBcIlwiLFxuICB9O1xuXG4gIGlmIChfaXNUb2tlbml6YXRpb25LZXkoYXV0aG9yaXphdGlvbikpIHtcbiAgICBwYXJzZWRUb2tlbml6YXRpb25LZXkgPSBfcGFyc2VUb2tlbml6YXRpb25LZXkoYXV0aG9yaXphdGlvbik7XG4gICAgZGF0YS5lbnZpcm9ubWVudCA9IHBhcnNlZFRva2VuaXphdGlvbktleS5lbnZpcm9ubWVudDtcbiAgICBkYXRhLmF0dHJzLnRva2VuaXphdGlvbktleSA9IGF1dGhvcml6YXRpb247XG4gICAgZGF0YS5jb25maWdVcmwgPVxuICAgICAgQ0xJRU5UX0FQSV9VUkxTW3BhcnNlZFRva2VuaXphdGlvbktleS5lbnZpcm9ubWVudF0gK1xuICAgICAgXCIvbWVyY2hhbnRzL1wiICtcbiAgICAgIHBhcnNlZFRva2VuaXphdGlvbktleS5tZXJjaGFudElkICtcbiAgICAgIFwiL2NsaWVudF9hcGkvdjEvY29uZmlndXJhdGlvblwiO1xuICB9IGVsc2Uge1xuICAgIHBhcnNlZENsaWVudFRva2VuID0gSlNPTi5wYXJzZShhdG9iKGF1dGhvcml6YXRpb24pKTtcbiAgICBkYXRhLmVudmlyb25tZW50ID0gcGFyc2VkQ2xpZW50VG9rZW4uZW52aXJvbm1lbnQ7XG4gICAgZGF0YS5hdHRycy5hdXRob3JpemF0aW9uRmluZ2VycHJpbnQgPVxuICAgICAgcGFyc2VkQ2xpZW50VG9rZW4uYXV0aG9yaXphdGlvbkZpbmdlcnByaW50O1xuICAgIGRhdGEuY29uZmlnVXJsID0gcGFyc2VkQ2xpZW50VG9rZW4uY29uZmlnVXJsO1xuICAgIGRhdGEuZ3JhcGhRTCA9IHBhcnNlZENsaWVudFRva2VuLmdyYXBoUUw7XG4gIH1cblxuICByZXR1cm4gZGF0YTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVBdXRob3JpemF0aW9uRGF0YTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/create-authorization-data.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js":
/*!******************************************************************!*\
  !*** ./node_modules/braintree-web/lib/create-deferred-client.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ./braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar assets = __webpack_require__(/*! ./assets */ \"(ssr)/./node_modules/braintree-web/lib/assets.js\");\nvar sharedErrors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/lib/errors.js\");\n\nvar VERSION = \"3.99.0\";\n\nfunction createDeferredClient(options) {\n  var promise = Promise.resolve();\n\n  if (options.client) {\n    return Promise.resolve(options.client);\n  }\n\n  if (!(window.braintree && window.braintree.client)) {\n    promise = assets\n      .loadScript({\n        src: options.assetsUrl + \"/web/\" + VERSION + \"/js/client.min.js\",\n      })\n      .catch(function (err) {\n        return Promise.reject(\n          new BraintreeError({\n            type: sharedErrors.CLIENT_SCRIPT_FAILED_TO_LOAD.type,\n            code: sharedErrors.CLIENT_SCRIPT_FAILED_TO_LOAD.code,\n            message: sharedErrors.CLIENT_SCRIPT_FAILED_TO_LOAD.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      });\n  }\n\n  return promise.then(function () {\n    if (window.braintree.client.VERSION !== VERSION) {\n      return Promise.reject(\n        new BraintreeError({\n          type: sharedErrors.INCOMPATIBLE_VERSIONS.type,\n          code: sharedErrors.INCOMPATIBLE_VERSIONS.code,\n          message:\n            \"Client (version \" +\n            window.braintree.client.VERSION +\n            \") and \" +\n            options.name +\n            \" (version \" +\n            VERSION +\n            \") components must be from the same SDK version.\",\n        })\n      );\n    }\n\n    return window.braintree.client.create({\n      authorization: options.authorization,\n      debug: options.debug,\n    });\n  });\n}\n\nmodule.exports = {\n  create: createDeferredClient,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvY3JlYXRlLWRlZmVycmVkLWNsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBbUI7QUFDaEQsYUFBYSxtQkFBTyxDQUFDLGtFQUFVO0FBQy9CLG1CQUFtQixtQkFBTyxDQUFDLGtFQUFVOztBQUVyQzs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2NyZWF0ZS1kZWZlcnJlZC1jbGllbnQuanM/YWVmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIEJyYWludHJlZUVycm9yID0gcmVxdWlyZShcIi4vYnJhaW50cmVlLWVycm9yXCIpO1xudmFyIGFzc2V0cyA9IHJlcXVpcmUoXCIuL2Fzc2V0c1wiKTtcbnZhciBzaGFyZWRFcnJvcnMgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5cbnZhciBWRVJTSU9OID0gXCIzLjk5LjBcIjtcblxuZnVuY3Rpb24gY3JlYXRlRGVmZXJyZWRDbGllbnQob3B0aW9ucykge1xuICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSgpO1xuXG4gIGlmIChvcHRpb25zLmNsaWVudCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUob3B0aW9ucy5jbGllbnQpO1xuICB9XG5cbiAgaWYgKCEod2luZG93LmJyYWludHJlZSAmJiB3aW5kb3cuYnJhaW50cmVlLmNsaWVudCkpIHtcbiAgICBwcm9taXNlID0gYXNzZXRzXG4gICAgICAubG9hZFNjcmlwdCh7XG4gICAgICAgIHNyYzogb3B0aW9ucy5hc3NldHNVcmwgKyBcIi93ZWIvXCIgKyBWRVJTSU9OICsgXCIvanMvY2xpZW50Lm1pbi5qc1wiLFxuICAgICAgfSlcbiAgICAgIC5jYXRjaChmdW5jdGlvbiAoZXJyKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChcbiAgICAgICAgICBuZXcgQnJhaW50cmVlRXJyb3Ioe1xuICAgICAgICAgICAgdHlwZTogc2hhcmVkRXJyb3JzLkNMSUVOVF9TQ1JJUFRfRkFJTEVEX1RPX0xPQUQudHlwZSxcbiAgICAgICAgICAgIGNvZGU6IHNoYXJlZEVycm9ycy5DTElFTlRfU0NSSVBUX0ZBSUxFRF9UT19MT0FELmNvZGUsXG4gICAgICAgICAgICBtZXNzYWdlOiBzaGFyZWRFcnJvcnMuQ0xJRU5UX1NDUklQVF9GQUlMRURfVE9fTE9BRC5tZXNzYWdlLFxuICAgICAgICAgICAgZGV0YWlsczoge1xuICAgICAgICAgICAgICBvcmlnaW5hbEVycm9yOiBlcnIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgIGlmICh3aW5kb3cuYnJhaW50cmVlLmNsaWVudC5WRVJTSU9OICE9PSBWRVJTSU9OKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoXG4gICAgICAgIG5ldyBCcmFpbnRyZWVFcnJvcih7XG4gICAgICAgICAgdHlwZTogc2hhcmVkRXJyb3JzLklOQ09NUEFUSUJMRV9WRVJTSU9OUy50eXBlLFxuICAgICAgICAgIGNvZGU6IHNoYXJlZEVycm9ycy5JTkNPTVBBVElCTEVfVkVSU0lPTlMuY29kZSxcbiAgICAgICAgICBtZXNzYWdlOlxuICAgICAgICAgICAgXCJDbGllbnQgKHZlcnNpb24gXCIgK1xuICAgICAgICAgICAgd2luZG93LmJyYWludHJlZS5jbGllbnQuVkVSU0lPTiArXG4gICAgICAgICAgICBcIikgYW5kIFwiICtcbiAgICAgICAgICAgIG9wdGlvbnMubmFtZSArXG4gICAgICAgICAgICBcIiAodmVyc2lvbiBcIiArXG4gICAgICAgICAgICBWRVJTSU9OICtcbiAgICAgICAgICAgIFwiKSBjb21wb25lbnRzIG11c3QgYmUgZnJvbSB0aGUgc2FtZSBTREsgdmVyc2lvbi5cIixcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHdpbmRvdy5icmFpbnRyZWUuY2xpZW50LmNyZWF0ZSh7XG4gICAgICBhdXRob3JpemF0aW9uOiBvcHRpb25zLmF1dGhvcml6YXRpb24sXG4gICAgICBkZWJ1Zzogb3B0aW9ucy5kZWJ1ZyxcbiAgICB9KTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjcmVhdGU6IGNyZWF0ZURlZmVycmVkQ2xpZW50LFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/deferred.js":
/*!****************************************************!*\
  !*** ./node_modules/braintree-web/lib/deferred.js ***!
  \****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (fn) {\n  return function () {\n    // IE9 doesn't support passing arguments to setTimeout so we have to emulate it.\n    var args = arguments;\n\n    setTimeout(function () {\n      fn.apply(null, args);\n    }, 1);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZGVmZXJyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9kZWZlcnJlZC5qcz85YTk1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIC8vIElFOSBkb2Vzbid0IHN1cHBvcnQgcGFzc2luZyBhcmd1bWVudHMgdG8gc2V0VGltZW91dCBzbyB3ZSBoYXZlIHRvIGVtdWxhdGUgaXQuXG4gICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgIGZuLmFwcGx5KG51bGwsIGFyZ3MpO1xuICAgIH0sIDEpO1xuICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/deferred.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/destructor.js":
/*!******************************************************!*\
  !*** ./node_modules/braintree-web/lib/destructor.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar batchExecuteFunctions = __webpack_require__(/*! ./batch-execute-functions */ \"(ssr)/./node_modules/braintree-web/lib/batch-execute-functions.js\");\n\nfunction Destructor() {\n  this._teardownRegistry = [];\n\n  this._isTearingDown = false;\n}\n\nDestructor.prototype.registerFunctionForTeardown = function (fn) {\n  if (typeof fn === \"function\") {\n    this._teardownRegistry.push(fn);\n  }\n};\n\nDestructor.prototype.teardown = function (callback) {\n  if (this._isTearingDown) {\n    callback(new Error(\"Destructor is already tearing down\"));\n\n    return;\n  }\n\n  this._isTearingDown = true;\n\n  batchExecuteFunctions(\n    this._teardownRegistry,\n    function (err) {\n      this._teardownRegistry = [];\n      this._isTearingDown = false;\n\n      if (typeof callback === \"function\") {\n        callback(err);\n      }\n    }.bind(this)\n  );\n};\n\nmodule.exports = Destructor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZGVzdHJ1Y3Rvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYiw0QkFBNEIsbUJBQU8sQ0FBQyxvR0FBMkI7O0FBRS9EO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2Rlc3RydWN0b3IuanM/NmUxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGJhdGNoRXhlY3V0ZUZ1bmN0aW9ucyA9IHJlcXVpcmUoXCIuL2JhdGNoLWV4ZWN1dGUtZnVuY3Rpb25zXCIpO1xuXG5mdW5jdGlvbiBEZXN0cnVjdG9yKCkge1xuICB0aGlzLl90ZWFyZG93blJlZ2lzdHJ5ID0gW107XG5cbiAgdGhpcy5faXNUZWFyaW5nRG93biA9IGZhbHNlO1xufVxuXG5EZXN0cnVjdG9yLnByb3RvdHlwZS5yZWdpc3RlckZ1bmN0aW9uRm9yVGVhcmRvd24gPSBmdW5jdGlvbiAoZm4pIHtcbiAgaWYgKHR5cGVvZiBmbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdGhpcy5fdGVhcmRvd25SZWdpc3RyeS5wdXNoKGZuKTtcbiAgfVxufTtcblxuRGVzdHJ1Y3Rvci5wcm90b3R5cGUudGVhcmRvd24gPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgaWYgKHRoaXMuX2lzVGVhcmluZ0Rvd24pIHtcbiAgICBjYWxsYmFjayhuZXcgRXJyb3IoXCJEZXN0cnVjdG9yIGlzIGFscmVhZHkgdGVhcmluZyBkb3duXCIpKTtcblxuICAgIHJldHVybjtcbiAgfVxuXG4gIHRoaXMuX2lzVGVhcmluZ0Rvd24gPSB0cnVlO1xuXG4gIGJhdGNoRXhlY3V0ZUZ1bmN0aW9ucyhcbiAgICB0aGlzLl90ZWFyZG93blJlZ2lzdHJ5LFxuICAgIGZ1bmN0aW9uIChlcnIpIHtcbiAgICAgIHRoaXMuX3RlYXJkb3duUmVnaXN0cnkgPSBbXTtcbiAgICAgIHRoaXMuX2lzVGVhcmluZ0Rvd24gPSBmYWxzZTtcblxuICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICB9XG4gICAgfS5iaW5kKHRoaXMpXG4gICk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlc3RydWN0b3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/destructor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/enumerate.js":
/*!*****************************************************!*\
  !*** ./node_modules/braintree-web/lib/enumerate.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\nfunction enumerate(values, prefix) {\n  prefix = prefix == null ? \"\" : prefix;\n\n  return values.reduce(function (enumeration, value) {\n    enumeration[value] = prefix + value;\n\n    return enumeration;\n  }, {});\n}\n\nmodule.exports = enumerate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZW51bWVyYXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLEdBQUcsSUFBSTtBQUNQOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9lbnVtZXJhdGUuanM/MDU4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gZW51bWVyYXRlKHZhbHVlcywgcHJlZml4KSB7XG4gIHByZWZpeCA9IHByZWZpeCA9PSBudWxsID8gXCJcIiA6IHByZWZpeDtcblxuICByZXR1cm4gdmFsdWVzLnJlZHVjZShmdW5jdGlvbiAoZW51bWVyYXRpb24sIHZhbHVlKSB7XG4gICAgZW51bWVyYXRpb25bdmFsdWVdID0gcHJlZml4ICsgdmFsdWU7XG5cbiAgICByZXR1cm4gZW51bWVyYXRpb247XG4gIH0sIHt9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbnVtZXJhdGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/enumerate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/errors.js":
/*!**************************************************!*\
  !*** ./node_modules/braintree-web/lib/errors.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.Shared Internal Error Codes\n * @ignore\n * @description These codes should never be experienced by the merchant directly.\n * @property {INTERNAL} INVALID_USE_OF_INTERNAL_FUNCTION Occurs when the client is created without a gateway configuration. Should never happen.\n */\n\n/**\n * @name BraintreeError.Shared Errors - Component Creation Error Codes\n * @description Errors that occur when creating components.\n * @property {MERCHANT} INSTANTIATION_OPTION_REQUIRED Occurs when a component is created that is missing a required option.\n * @property {MERCHANT} INCOMPATIBLE_VERSIONS Occurs when a component is created with a client with a different version than the component.\n * @property {NETWORK} CLIENT_SCRIPT_FAILED_TO_LOAD Occurs when a component attempts to load the Braintree client script, but the request fails.\n */\n\n/**\n * @name BraintreeError.Shared Errors - Component Instance Error Codes\n * @description Errors that occur when using instances of components.\n * @property {MERCHANT} METHOD_CALLED_AFTER_TEARDOWN Occurs when a method is called on a component instance after it has been torn down.\n */\n\nvar BraintreeError = __webpack_require__(/*! ./braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  INVALID_USE_OF_INTERNAL_FUNCTION: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"INVALID_USE_OF_INTERNAL_FUNCTION\",\n  },\n  INSTANTIATION_OPTION_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"INSTANTIATION_OPTION_REQUIRED\",\n  },\n  INCOMPATIBLE_VERSIONS: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"INCOMPATIBLE_VERSIONS\",\n  },\n  CLIENT_SCRIPT_FAILED_TO_LOAD: {\n    type: BraintreeError.types.NETWORK,\n    code: \"CLIENT_SCRIPT_FAILED_TO_LOAD\",\n    message: \"Braintree client script could not be loaded.\",\n  },\n  METHOD_CALLED_AFTER_TEARDOWN: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"METHOD_CALLED_AFTER_TEARDOWN\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsVUFBVTtBQUN4QixjQUFjLFVBQVU7QUFDeEIsY0FBYyxTQUFTO0FBQ3ZCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsVUFBVTtBQUN4Qjs7QUFFQSxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBbUI7O0FBRWhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9lcnJvcnMuanM/Y2Y0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBAbmFtZSBCcmFpbnRyZWVFcnJvci5TaGFyZWQgSW50ZXJuYWwgRXJyb3IgQ29kZXNcbiAqIEBpZ25vcmVcbiAqIEBkZXNjcmlwdGlvbiBUaGVzZSBjb2RlcyBzaG91bGQgbmV2ZXIgYmUgZXhwZXJpZW5jZWQgYnkgdGhlIG1lcmNoYW50IGRpcmVjdGx5LlxuICogQHByb3BlcnR5IHtJTlRFUk5BTH0gSU5WQUxJRF9VU0VfT0ZfSU5URVJOQUxfRlVOQ1RJT04gT2NjdXJzIHdoZW4gdGhlIGNsaWVudCBpcyBjcmVhdGVkIHdpdGhvdXQgYSBnYXRld2F5IGNvbmZpZ3VyYXRpb24uIFNob3VsZCBuZXZlciBoYXBwZW4uXG4gKi9cblxuLyoqXG4gKiBAbmFtZSBCcmFpbnRyZWVFcnJvci5TaGFyZWQgRXJyb3JzIC0gQ29tcG9uZW50IENyZWF0aW9uIEVycm9yIENvZGVzXG4gKiBAZGVzY3JpcHRpb24gRXJyb3JzIHRoYXQgb2NjdXIgd2hlbiBjcmVhdGluZyBjb21wb25lbnRzLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gSU5TVEFOVElBVElPTl9PUFRJT05fUkVRVUlSRUQgT2NjdXJzIHdoZW4gYSBjb21wb25lbnQgaXMgY3JlYXRlZCB0aGF0IGlzIG1pc3NpbmcgYSByZXF1aXJlZCBvcHRpb24uXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBJTkNPTVBBVElCTEVfVkVSU0lPTlMgT2NjdXJzIHdoZW4gYSBjb21wb25lbnQgaXMgY3JlYXRlZCB3aXRoIGEgY2xpZW50IHdpdGggYSBkaWZmZXJlbnQgdmVyc2lvbiB0aGFuIHRoZSBjb21wb25lbnQuXG4gKiBAcHJvcGVydHkge05FVFdPUkt9IENMSUVOVF9TQ1JJUFRfRkFJTEVEX1RPX0xPQUQgT2NjdXJzIHdoZW4gYSBjb21wb25lbnQgYXR0ZW1wdHMgdG8gbG9hZCB0aGUgQnJhaW50cmVlIGNsaWVudCBzY3JpcHQsIGJ1dCB0aGUgcmVxdWVzdCBmYWlscy5cbiAqL1xuXG4vKipcbiAqIEBuYW1lIEJyYWludHJlZUVycm9yLlNoYXJlZCBFcnJvcnMgLSBDb21wb25lbnQgSW5zdGFuY2UgRXJyb3IgQ29kZXNcbiAqIEBkZXNjcmlwdGlvbiBFcnJvcnMgdGhhdCBvY2N1ciB3aGVuIHVzaW5nIGluc3RhbmNlcyBvZiBjb21wb25lbnRzLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gTUVUSE9EX0NBTExFRF9BRlRFUl9URUFSRE9XTiBPY2N1cnMgd2hlbiBhIG1ldGhvZCBpcyBjYWxsZWQgb24gYSBjb21wb25lbnQgaW5zdGFuY2UgYWZ0ZXIgaXQgaGFzIGJlZW4gdG9ybiBkb3duLlxuICovXG5cbnZhciBCcmFpbnRyZWVFcnJvciA9IHJlcXVpcmUoXCIuL2JyYWludHJlZS1lcnJvclwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIElOVkFMSURfVVNFX09GX0lOVEVSTkFMX0ZVTkNUSU9OOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuSU5URVJOQUwsXG4gICAgY29kZTogXCJJTlZBTElEX1VTRV9PRl9JTlRFUk5BTF9GVU5DVElPTlwiLFxuICB9LFxuICBJTlNUQU5USUFUSU9OX09QVElPTl9SRVFVSVJFRDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiSU5TVEFOVElBVElPTl9PUFRJT05fUkVRVUlSRURcIixcbiAgfSxcbiAgSU5DT01QQVRJQkxFX1ZFUlNJT05TOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJJTkNPTVBBVElCTEVfVkVSU0lPTlNcIixcbiAgfSxcbiAgQ0xJRU5UX1NDUklQVF9GQUlMRURfVE9fTE9BRDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk5FVFdPUkssXG4gICAgY29kZTogXCJDTElFTlRfU0NSSVBUX0ZBSUxFRF9UT19MT0FEXCIsXG4gICAgbWVzc2FnZTogXCJCcmFpbnRyZWUgY2xpZW50IHNjcmlwdCBjb3VsZCBub3QgYmUgbG9hZGVkLlwiLFxuICB9LFxuICBNRVRIT0RfQ0FMTEVEX0FGVEVSX1RFQVJET1dOOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJNRVRIT0RfQ0FMTEVEX0FGVEVSX1RFQVJET1dOXCIsXG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/find-root-node.js":
/*!**********************************************************!*\
  !*** ./node_modules/braintree-web/lib/find-root-node.js ***!
  \**********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function findRootNode(element) {\n  while (element.parentNode) {\n    element = element.parentNode;\n  }\n\n  return element;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZmluZC1yb290LW5vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZmluZC1yb290LW5vZGUuanM/ZGEwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBmaW5kUm9vdE5vZGUoZWxlbWVudCkge1xuICB3aGlsZSAoZWxlbWVudC5wYXJlbnROb2RlKSB7XG4gICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZTtcbiAgfVxuXG4gIHJldHVybiBlbGVtZW50O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/find-root-node.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/find.js":
/*!************************************************!*\
  !*** ./node_modules/braintree-web/lib/find.js ***!
  \************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (array, key, value) {\n  var i;\n\n  for (i = 0; i < array.length; i++) {\n    if (array[i].hasOwnProperty(key) && array[i][key] === value) {\n      return array[i];\n    }\n  }\n\n  return null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZmluZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBLGNBQWMsa0JBQWtCO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2ZpbmQuanM/N2U3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYXJyYXksIGtleSwgdmFsdWUpIHtcbiAgdmFyIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGFycmF5W2ldLmhhc093blByb3BlcnR5KGtleSkgJiYgYXJyYXlbaV1ba2V5XSA9PT0gdmFsdWUpIHtcbiAgICAgIHJldHVybiBhcnJheVtpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/find.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/external/frame-service.js":
/*!********************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/external/frame-service.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Popup = __webpack_require__(/*! ./strategies/popup */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/index.js\");\nvar PopupBridge = __webpack_require__(/*! ./strategies/popup-bridge */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup-bridge.js\");\nvar Modal = __webpack_require__(/*! ./strategies/modal */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/modal.js\");\nvar Bus = __webpack_require__(/*! framebus */ \"(ssr)/./node_modules/framebus/dist/index.js\");\nvar events = __webpack_require__(/*! ../shared/events */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/shared/events.js\");\nvar errors = __webpack_require__(/*! ../shared/errors */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/shared/errors.js\");\nvar constants = __webpack_require__(/*! ../shared/constants */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/shared/constants.js\");\nvar uuid = __webpack_require__(/*! @braintree/uuid */ \"(ssr)/./node_modules/@braintree/uuid/index.js\");\nvar iFramer = __webpack_require__(/*! @braintree/iframer */ \"(ssr)/./node_modules/@braintree/iframer/dist/index.js\");\nvar BraintreeError = __webpack_require__(/*! ../../braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar browserDetection = __webpack_require__(/*! ../shared/browser-detection */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/shared/browser-detection.js\");\nvar assign = (__webpack_require__(/*! ./../../assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar BUS_CONFIGURATION_REQUEST_EVENT =\n  (__webpack_require__(/*! ../../constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").BUS_CONFIGURATION_REQUEST_EVENT);\n\nvar REQUIRED_CONFIG_KEYS = [\"name\", \"dispatchFrameUrl\", \"openFrameUrl\"];\n\nfunction noop() {}\n\nfunction _validateFrameConfiguration(options) {\n  if (!options) {\n    throw new Error(\"Valid configuration is required\");\n  }\n\n  REQUIRED_CONFIG_KEYS.forEach(function (key) {\n    if (!options.hasOwnProperty(key)) {\n      throw new Error(\"A valid frame \" + key + \" must be provided\");\n    }\n  });\n\n  if (!/^[\\w_]+$/.test(options.name)) {\n    throw new Error(\"A valid frame name must be provided\");\n  }\n}\n\nfunction FrameService(options) {\n  _validateFrameConfiguration(options);\n\n  this._serviceId = uuid().replace(/-/g, \"\");\n\n  this._options = {\n    name: options.name + \"_\" + this._serviceId,\n    dispatchFrameUrl: options.dispatchFrameUrl,\n    openFrameUrl: options.openFrameUrl,\n    height: options.height,\n    width: options.width,\n    top: options.top,\n    left: options.left,\n  };\n  this.state = options.state || {};\n\n  this._bus = new Bus({ channel: this._serviceId });\n  this._setBusEvents();\n}\n\nFrameService.prototype.initialize = function (callback) {\n  var dispatchFrameReadyHandler = function () {\n    callback();\n    this._bus.off(events.DISPATCH_FRAME_READY, dispatchFrameReadyHandler);\n  }.bind(this);\n\n  this._bus.on(events.DISPATCH_FRAME_READY, dispatchFrameReadyHandler);\n  this._writeDispatchFrame();\n};\n\nFrameService.prototype._writeDispatchFrame = function () {\n  var frameName = constants.DISPATCH_FRAME_NAME + \"_\" + this._serviceId;\n  var frameSrc = this._options.dispatchFrameUrl;\n\n  this._dispatchFrame = iFramer({\n    \"aria-hidden\": true,\n    name: frameName,\n    title: frameName,\n    src: frameSrc,\n    class: constants.DISPATCH_FRAME_CLASS,\n    height: 0,\n    width: 0,\n    style: {\n      position: \"absolute\",\n      left: \"-9999px\",\n    },\n  });\n\n  document.body.appendChild(this._dispatchFrame);\n};\n\nFrameService.prototype._setBusEvents = function () {\n  this._bus.on(\n    events.DISPATCH_FRAME_REPORT,\n    function (res, reply) {\n      if (this._onCompleteCallback) {\n        this._onCompleteCallback.call(null, res.err, res.payload);\n      }\n      this._frame.close();\n\n      this._onCompleteCallback = null;\n\n      if (reply) {\n        reply();\n      }\n    }.bind(this)\n  );\n\n  this._bus.on(\n    BUS_CONFIGURATION_REQUEST_EVENT,\n    function (reply) {\n      reply(this.state);\n    }.bind(this)\n  );\n};\n\nFrameService.prototype.open = function (options, callback) {\n  options = options || {};\n  this._frame = this._getFrameForEnvironment(options);\n\n  this._frame.initialize(callback);\n\n  if (this._frame instanceof PopupBridge) {\n    // Frameservice loads a spinner then redirects to the final destination url.\n    // For Popupbridge it doesn't have the same rules around popups since it's deferred to the mobile side\n    // therefore, skips the regular open path and instead uses `#redirect` to handle things\n    return;\n  }\n\n  assign(this.state, options.state);\n\n  this._onCompleteCallback = callback;\n  this._frame.open();\n\n  if (this.isFrameClosed()) {\n    this._cleanupFrame();\n\n    if (callback) {\n      callback(new BraintreeError(errors.FRAME_SERVICE_FRAME_OPEN_FAILED));\n    }\n\n    return;\n  }\n  this._pollForPopupClose();\n};\n\nFrameService.prototype.redirect = function (url) {\n  if (this._frame && !this.isFrameClosed()) {\n    this._frame.redirect(url);\n  }\n};\n\nFrameService.prototype.close = function () {\n  if (!this.isFrameClosed()) {\n    this._frame.close();\n  }\n};\n\nFrameService.prototype.focus = function () {\n  if (!this.isFrameClosed()) {\n    this._frame.focus();\n  }\n};\n\nFrameService.prototype.createHandler = function (options) {\n  options = options || {};\n\n  return {\n    close: function () {\n      if (options.beforeClose) {\n        options.beforeClose();\n      }\n\n      this.close();\n    }.bind(this),\n    focus: function () {\n      if (options.beforeFocus) {\n        options.beforeFocus();\n      }\n\n      this.focus();\n    }.bind(this),\n  };\n};\n\nFrameService.prototype.createNoopHandler = function () {\n  return {\n    close: noop,\n    focus: noop,\n  };\n};\n\nFrameService.prototype.teardown = function () {\n  this.close();\n  this._dispatchFrame.parentNode.removeChild(this._dispatchFrame);\n  this._dispatchFrame = null;\n  this._cleanupFrame();\n};\n\nFrameService.prototype.isFrameClosed = function () {\n  return this._frame == null || this._frame.isClosed();\n};\n\nFrameService.prototype._cleanupFrame = function () {\n  this._frame = null;\n  clearInterval(this._popupInterval);\n  this._popupInterval = null;\n};\n\nFrameService.prototype._pollForPopupClose = function () {\n  this._popupInterval = setInterval(\n    function () {\n      if (this.isFrameClosed()) {\n        this._cleanupFrame();\n        if (this._onCompleteCallback) {\n          this._onCompleteCallback(\n            new BraintreeError(errors.FRAME_SERVICE_FRAME_CLOSED)\n          );\n        }\n      }\n    }.bind(this),\n    constants.POPUP_POLL_INTERVAL\n  );\n\n  return this._popupInterval;\n};\n\nFrameService.prototype._getFrameForEnvironment = function (options) {\n  var usePopup = browserDetection.supportsPopups();\n  var popupBridgeExists = Boolean(window.popupBridge);\n\n  var initOptions = assign({}, this._options, options);\n\n  if (popupBridgeExists) {\n    return new PopupBridge(initOptions);\n  } else if (usePopup) {\n    return new Popup(initOptions);\n  }\n\n  return new Modal(initOptions);\n};\n\nmodule.exports = FrameService;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/external/frame-service.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/external/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/external/index.js ***!
  \************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar FrameService = __webpack_require__(/*! ./frame-service */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/external/frame-service.js\");\n\n/**\n * @ignore\n * @function create\n * Initializing FrameService should be done at the point when the component is created, so it is ready whenever a component needs to open a popup window.\n * Browsers have varying rules around what constitutes and async action worth blocking a popup for, but the likes of Safari\n * will block the popup if `frameService#create` is invoked during any asynchronous process (such as an API request to tokenize payment details).\n *\n * The process of setting up the dispatch frame and subsequent framebus communications via event listeners are considered async by Safari's standards.\n *\n * @param {object} options The options provided to frameservice\n * @param {string} options.name The name to use for identifying the various pieces associated with frameservice.\n * @param {string} options.dispatchFrameUrl The static asset to load for use as the dispatch frame. This allows for secure communication between the iframe and the popup, since they are on the same asset domain (usually checkout.paypal.com or assets.braintreegateway.com)\n * @param {string} options.openFrameUrl The url to load in the popup. Sometimes it is the case that you'll need info that comes _after_ the popup loads in which case we load the `landing-frame` that's a loading spinner then redirect to the proper/final destination. See the PayPal component for an example.\n * Otherwise if all the info needed is ready up-front, then you can forego a landing frame and go straight to the final destination.\n * @param {string} [options.height] The desired popup height.\n * @param {string} [options.width] The desired popup width.\n * @param {string} [options.top] The desired top value of the popup for positioning.\n * @param {string} [options.left] The desired left value of the popup for positioning.\n * @param {object} [options.state] Seems to be dead code, but allows for injecting data in to popup. NEXT_MAJOR_VERSION remove this param if no usage exists.\n * @param {function} callback The function to invoke once the frameservice is created and ready to use. FrameService instance is returned.\n */\nmodule.exports = {\n  create: function createFrameService(options, callback) {\n    var frameService = new FrameService(options);\n\n    frameService.initialize(function () {\n      callback(frameService);\n    });\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9leHRlcm5hbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixtQkFBbUIsbUJBQU8sQ0FBQyx1R0FBaUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9mcmFtZS1zZXJ2aWNlL2V4dGVybmFsL2luZGV4LmpzPzU1MzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBGcmFtZVNlcnZpY2UgPSByZXF1aXJlKFwiLi9mcmFtZS1zZXJ2aWNlXCIpO1xuXG4vKipcbiAqIEBpZ25vcmVcbiAqIEBmdW5jdGlvbiBjcmVhdGVcbiAqIEluaXRpYWxpemluZyBGcmFtZVNlcnZpY2Ugc2hvdWxkIGJlIGRvbmUgYXQgdGhlIHBvaW50IHdoZW4gdGhlIGNvbXBvbmVudCBpcyBjcmVhdGVkLCBzbyBpdCBpcyByZWFkeSB3aGVuZXZlciBhIGNvbXBvbmVudCBuZWVkcyB0byBvcGVuIGEgcG9wdXAgd2luZG93LlxuICogQnJvd3NlcnMgaGF2ZSB2YXJ5aW5nIHJ1bGVzIGFyb3VuZCB3aGF0IGNvbnN0aXR1dGVzIGFuZCBhc3luYyBhY3Rpb24gd29ydGggYmxvY2tpbmcgYSBwb3B1cCBmb3IsIGJ1dCB0aGUgbGlrZXMgb2YgU2FmYXJpXG4gKiB3aWxsIGJsb2NrIHRoZSBwb3B1cCBpZiBgZnJhbWVTZXJ2aWNlI2NyZWF0ZWAgaXMgaW52b2tlZCBkdXJpbmcgYW55IGFzeW5jaHJvbm91cyBwcm9jZXNzIChzdWNoIGFzIGFuIEFQSSByZXF1ZXN0IHRvIHRva2VuaXplIHBheW1lbnQgZGV0YWlscykuXG4gKlxuICogVGhlIHByb2Nlc3Mgb2Ygc2V0dGluZyB1cCB0aGUgZGlzcGF0Y2ggZnJhbWUgYW5kIHN1YnNlcXVlbnQgZnJhbWVidXMgY29tbXVuaWNhdGlvbnMgdmlhIGV2ZW50IGxpc3RlbmVycyBhcmUgY29uc2lkZXJlZCBhc3luYyBieSBTYWZhcmkncyBzdGFuZGFyZHMuXG4gKlxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMgVGhlIG9wdGlvbnMgcHJvdmlkZWQgdG8gZnJhbWVzZXJ2aWNlXG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5uYW1lIFRoZSBuYW1lIHRvIHVzZSBmb3IgaWRlbnRpZnlpbmcgdGhlIHZhcmlvdXMgcGllY2VzIGFzc29jaWF0ZWQgd2l0aCBmcmFtZXNlcnZpY2UuXG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5kaXNwYXRjaEZyYW1lVXJsIFRoZSBzdGF0aWMgYXNzZXQgdG8gbG9hZCBmb3IgdXNlIGFzIHRoZSBkaXNwYXRjaCBmcmFtZS4gVGhpcyBhbGxvd3MgZm9yIHNlY3VyZSBjb21tdW5pY2F0aW9uIGJldHdlZW4gdGhlIGlmcmFtZSBhbmQgdGhlIHBvcHVwLCBzaW5jZSB0aGV5IGFyZSBvbiB0aGUgc2FtZSBhc3NldCBkb21haW4gKHVzdWFsbHkgY2hlY2tvdXQucGF5cGFsLmNvbSBvciBhc3NldHMuYnJhaW50cmVlZ2F0ZXdheS5jb20pXG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5vcGVuRnJhbWVVcmwgVGhlIHVybCB0byBsb2FkIGluIHRoZSBwb3B1cC4gU29tZXRpbWVzIGl0IGlzIHRoZSBjYXNlIHRoYXQgeW91J2xsIG5lZWQgaW5mbyB0aGF0IGNvbWVzIF9hZnRlcl8gdGhlIHBvcHVwIGxvYWRzIGluIHdoaWNoIGNhc2Ugd2UgbG9hZCB0aGUgYGxhbmRpbmctZnJhbWVgIHRoYXQncyBhIGxvYWRpbmcgc3Bpbm5lciB0aGVuIHJlZGlyZWN0IHRvIHRoZSBwcm9wZXIvZmluYWwgZGVzdGluYXRpb24uIFNlZSB0aGUgUGF5UGFsIGNvbXBvbmVudCBmb3IgYW4gZXhhbXBsZS5cbiAqIE90aGVyd2lzZSBpZiBhbGwgdGhlIGluZm8gbmVlZGVkIGlzIHJlYWR5IHVwLWZyb250LCB0aGVuIHlvdSBjYW4gZm9yZWdvIGEgbGFuZGluZyBmcmFtZSBhbmQgZ28gc3RyYWlnaHQgdG8gdGhlIGZpbmFsIGRlc3RpbmF0aW9uLlxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmhlaWdodF0gVGhlIGRlc2lyZWQgcG9wdXAgaGVpZ2h0LlxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLndpZHRoXSBUaGUgZGVzaXJlZCBwb3B1cCB3aWR0aC5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy50b3BdIFRoZSBkZXNpcmVkIHRvcCB2YWx1ZSBvZiB0aGUgcG9wdXAgZm9yIHBvc2l0aW9uaW5nLlxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmxlZnRdIFRoZSBkZXNpcmVkIGxlZnQgdmFsdWUgb2YgdGhlIHBvcHVwIGZvciBwb3NpdGlvbmluZy5cbiAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9ucy5zdGF0ZV0gU2VlbXMgdG8gYmUgZGVhZCBjb2RlLCBidXQgYWxsb3dzIGZvciBpbmplY3RpbmcgZGF0YSBpbiB0byBwb3B1cC4gTkVYVF9NQUpPUl9WRVJTSU9OIHJlbW92ZSB0aGlzIHBhcmFtIGlmIG5vIHVzYWdlIGV4aXN0cy5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBpbnZva2Ugb25jZSB0aGUgZnJhbWVzZXJ2aWNlIGlzIGNyZWF0ZWQgYW5kIHJlYWR5IHRvIHVzZS4gRnJhbWVTZXJ2aWNlIGluc3RhbmNlIGlzIHJldHVybmVkLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGVGcmFtZVNlcnZpY2Uob3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICB2YXIgZnJhbWVTZXJ2aWNlID0gbmV3IEZyYW1lU2VydmljZShvcHRpb25zKTtcblxuICAgIGZyYW1lU2VydmljZS5pbml0aWFsaXplKGZ1bmN0aW9uICgpIHtcbiAgICAgIGNhbGxiYWNrKGZyYW1lU2VydmljZSk7XG4gICAgfSk7XG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/external/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/modal.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/external/strategies/modal.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar iFramer = __webpack_require__(/*! @braintree/iframer */ \"(ssr)/./node_modules/@braintree/iframer/dist/index.js\");\nvar assign = (__webpack_require__(/*! ../../../assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar browserDetection = __webpack_require__(/*! ../../shared/browser-detection */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/shared/browser-detection.js\");\n\nvar ELEMENT_STYLES = {\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  bottom: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  outline: \"none\",\n  zIndex: 20001,\n  background: \"#FFFFFF\",\n};\n\nfunction noop() {}\n\n/**\n *\n * We should not ever really use the Modal. Modals are _like_  popups, but the key difference is that the customer can't actually verify it's app domain and thus secure/valid. Old PP sdk (./src/paypal) uses this\n * to get info from webviews (e.g. facebook).\n */\n\nfunction Modal(options) {\n  this._closed = null;\n  this._frame = null;\n  this._options = options || {};\n  this._container = this._options.container || document.body;\n}\n\nModal.prototype.initialize = noop;\n\nModal.prototype.open = function () {\n  var iframerConfig = {\n    src: this._options.openFrameUrl,\n    name: this._options.name,\n    scrolling: \"yes\",\n    height: \"100%\",\n    width: \"100%\",\n    style: assign({}, ELEMENT_STYLES),\n    title: \"Lightbox Frame\",\n  };\n\n  if (browserDetection.isIos()) {\n    // WKWebView has buggy behavior when scrolling a fixed position modal. The workaround is to lock scrolling in\n    // the background. When modal is closed, we restore scrolling and return to the previous scroll position.\n    if (browserDetection.isIosWKWebview()) {\n      this._lockScrolling();\n      // Allows WKWebView to scroll all the way down to bottom\n      iframerConfig.style = {};\n    }\n\n    this._el = document.createElement(\"div\");\n\n    assign(this._el.style, ELEMENT_STYLES, {\n      height: \"100%\",\n      width: \"100%\",\n      overflow: \"auto\",\n      \"-webkit-overflow-scrolling\": \"touch\",\n    });\n\n    this._frame = iFramer(iframerConfig);\n    this._el.appendChild(this._frame);\n  } else {\n    this._el = this._frame = iFramer(iframerConfig);\n  }\n  this._closed = false;\n\n  this._container.appendChild(this._el);\n};\n\nModal.prototype.focus = noop;\n\nModal.prototype.close = function () {\n  this._container.removeChild(this._el);\n  this._frame = null;\n  this._closed = true;\n  if (browserDetection.isIosWKWebview()) {\n    this._unlockScrolling();\n  }\n};\n\nModal.prototype.isClosed = function () {\n  return Boolean(this._closed);\n};\n\nModal.prototype.redirect = function (redirectUrl) {\n  this._frame.src = redirectUrl;\n};\n\nModal.prototype._unlockScrolling = function () {\n  document.body.style.overflow = this._savedBodyProperties.overflowStyle;\n  document.body.style.position = this._savedBodyProperties.positionStyle;\n  window.scrollTo(\n    this._savedBodyProperties.left,\n    this._savedBodyProperties.top\n  );\n  delete this._savedBodyProperties;\n};\n\nModal.prototype._lockScrolling = function () {\n  var doc = document.documentElement;\n\n  // From https://stackoverflow.com/questions/9538868/prevent-body-from-scrolling-when-a-modal-is-opened#comment65626743_24727206\n  this._savedBodyProperties = {\n    left: (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\n    top: (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0),\n    overflowStyle: document.body.style.overflow,\n    positionStyle: document.body.style.position,\n  };\n  document.body.style.overflow = \"hidden\";\n  document.body.style.position = \"fixed\";\n  window.scrollTo(0, 0);\n};\n\nmodule.exports = Modal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9leHRlcm5hbC9zdHJhdGVnaWVzL21vZGFsLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGNBQWMsbUJBQU8sQ0FBQyxpRkFBb0I7QUFDMUMsYUFBYSx1R0FBaUM7QUFDOUMsdUJBQXVCLG1CQUFPLENBQUMsd0hBQWdDOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2ZyYW1lLXNlcnZpY2UvZXh0ZXJuYWwvc3RyYXRlZ2llcy9tb2RhbC5qcz85ZTZiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaUZyYW1lciA9IHJlcXVpcmUoXCJAYnJhaW50cmVlL2lmcmFtZXJcIik7XG52YXIgYXNzaWduID0gcmVxdWlyZShcIi4uLy4uLy4uL2Fzc2lnblwiKS5hc3NpZ247XG52YXIgYnJvd3NlckRldGVjdGlvbiA9IHJlcXVpcmUoXCIuLi8uLi9zaGFyZWQvYnJvd3Nlci1kZXRlY3Rpb25cIik7XG5cbnZhciBFTEVNRU5UX1NUWUxFUyA9IHtcbiAgcG9zaXRpb246IFwiZml4ZWRcIixcbiAgdG9wOiAwLFxuICBsZWZ0OiAwLFxuICBib3R0b206IDAsXG4gIHBhZGRpbmc6IDAsXG4gIG1hcmdpbjogMCxcbiAgYm9yZGVyOiAwLFxuICBvdXRsaW5lOiBcIm5vbmVcIixcbiAgekluZGV4OiAyMDAwMSxcbiAgYmFja2dyb3VuZDogXCIjRkZGRkZGXCIsXG59O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxuLyoqXG4gKlxuICogV2Ugc2hvdWxkIG5vdCBldmVyIHJlYWxseSB1c2UgdGhlIE1vZGFsLiBNb2RhbHMgYXJlIF9saWtlXyAgcG9wdXBzLCBidXQgdGhlIGtleSBkaWZmZXJlbmNlIGlzIHRoYXQgdGhlIGN1c3RvbWVyIGNhbid0IGFjdHVhbGx5IHZlcmlmeSBpdCdzIGFwcCBkb21haW4gYW5kIHRodXMgc2VjdXJlL3ZhbGlkLiBPbGQgUFAgc2RrICguL3NyYy9wYXlwYWwpIHVzZXMgdGhpc1xuICogdG8gZ2V0IGluZm8gZnJvbSB3ZWJ2aWV3cyAoZS5nLiBmYWNlYm9vaykuXG4gKi9cblxuZnVuY3Rpb24gTW9kYWwob3B0aW9ucykge1xuICB0aGlzLl9jbG9zZWQgPSBudWxsO1xuICB0aGlzLl9mcmFtZSA9IG51bGw7XG4gIHRoaXMuX29wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB0aGlzLl9jb250YWluZXIgPSB0aGlzLl9vcHRpb25zLmNvbnRhaW5lciB8fCBkb2N1bWVudC5ib2R5O1xufVxuXG5Nb2RhbC5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IG5vb3A7XG5cbk1vZGFsLnByb3RvdHlwZS5vcGVuID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaWZyYW1lckNvbmZpZyA9IHtcbiAgICBzcmM6IHRoaXMuX29wdGlvbnMub3BlbkZyYW1lVXJsLFxuICAgIG5hbWU6IHRoaXMuX29wdGlvbnMubmFtZSxcbiAgICBzY3JvbGxpbmc6IFwieWVzXCIsXG4gICAgaGVpZ2h0OiBcIjEwMCVcIixcbiAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgc3R5bGU6IGFzc2lnbih7fSwgRUxFTUVOVF9TVFlMRVMpLFxuICAgIHRpdGxlOiBcIkxpZ2h0Ym94IEZyYW1lXCIsXG4gIH07XG5cbiAgaWYgKGJyb3dzZXJEZXRlY3Rpb24uaXNJb3MoKSkge1xuICAgIC8vIFdLV2ViVmlldyBoYXMgYnVnZ3kgYmVoYXZpb3Igd2hlbiBzY3JvbGxpbmcgYSBmaXhlZCBwb3NpdGlvbiBtb2RhbC4gVGhlIHdvcmthcm91bmQgaXMgdG8gbG9jayBzY3JvbGxpbmcgaW5cbiAgICAvLyB0aGUgYmFja2dyb3VuZC4gV2hlbiBtb2RhbCBpcyBjbG9zZWQsIHdlIHJlc3RvcmUgc2Nyb2xsaW5nIGFuZCByZXR1cm4gdG8gdGhlIHByZXZpb3VzIHNjcm9sbCBwb3NpdGlvbi5cbiAgICBpZiAoYnJvd3NlckRldGVjdGlvbi5pc0lvc1dLV2VidmlldygpKSB7XG4gICAgICB0aGlzLl9sb2NrU2Nyb2xsaW5nKCk7XG4gICAgICAvLyBBbGxvd3MgV0tXZWJWaWV3IHRvIHNjcm9sbCBhbGwgdGhlIHdheSBkb3duIHRvIGJvdHRvbVxuICAgICAgaWZyYW1lckNvbmZpZy5zdHlsZSA9IHt9O1xuICAgIH1cblxuICAgIHRoaXMuX2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAgIGFzc2lnbih0aGlzLl9lbC5zdHlsZSwgRUxFTUVOVF9TVFlMRVMsIHtcbiAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICBvdmVyZmxvdzogXCJhdXRvXCIsXG4gICAgICBcIi13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nXCI6IFwidG91Y2hcIixcbiAgICB9KTtcblxuICAgIHRoaXMuX2ZyYW1lID0gaUZyYW1lcihpZnJhbWVyQ29uZmlnKTtcbiAgICB0aGlzLl9lbC5hcHBlbmRDaGlsZCh0aGlzLl9mcmFtZSk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5fZWwgPSB0aGlzLl9mcmFtZSA9IGlGcmFtZXIoaWZyYW1lckNvbmZpZyk7XG4gIH1cbiAgdGhpcy5fY2xvc2VkID0gZmFsc2U7XG5cbiAgdGhpcy5fY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuX2VsKTtcbn07XG5cbk1vZGFsLnByb3RvdHlwZS5mb2N1cyA9IG5vb3A7XG5cbk1vZGFsLnByb3RvdHlwZS5jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5fY29udGFpbmVyLnJlbW92ZUNoaWxkKHRoaXMuX2VsKTtcbiAgdGhpcy5fZnJhbWUgPSBudWxsO1xuICB0aGlzLl9jbG9zZWQgPSB0cnVlO1xuICBpZiAoYnJvd3NlckRldGVjdGlvbi5pc0lvc1dLV2VidmlldygpKSB7XG4gICAgdGhpcy5fdW5sb2NrU2Nyb2xsaW5nKCk7XG4gIH1cbn07XG5cbk1vZGFsLnByb3RvdHlwZS5pc0Nsb3NlZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIEJvb2xlYW4odGhpcy5fY2xvc2VkKTtcbn07XG5cbk1vZGFsLnByb3RvdHlwZS5yZWRpcmVjdCA9IGZ1bmN0aW9uIChyZWRpcmVjdFVybCkge1xuICB0aGlzLl9mcmFtZS5zcmMgPSByZWRpcmVjdFVybDtcbn07XG5cbk1vZGFsLnByb3RvdHlwZS5fdW5sb2NrU2Nyb2xsaW5nID0gZnVuY3Rpb24gKCkge1xuICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gdGhpcy5fc2F2ZWRCb2R5UHJvcGVydGllcy5vdmVyZmxvd1N0eWxlO1xuICBkb2N1bWVudC5ib2R5LnN0eWxlLnBvc2l0aW9uID0gdGhpcy5fc2F2ZWRCb2R5UHJvcGVydGllcy5wb3NpdGlvblN0eWxlO1xuICB3aW5kb3cuc2Nyb2xsVG8oXG4gICAgdGhpcy5fc2F2ZWRCb2R5UHJvcGVydGllcy5sZWZ0LFxuICAgIHRoaXMuX3NhdmVkQm9keVByb3BlcnRpZXMudG9wXG4gICk7XG4gIGRlbGV0ZSB0aGlzLl9zYXZlZEJvZHlQcm9wZXJ0aWVzO1xufTtcblxuTW9kYWwucHJvdG90eXBlLl9sb2NrU2Nyb2xsaW5nID0gZnVuY3Rpb24gKCkge1xuICB2YXIgZG9jID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG4gIC8vIEZyb20gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvOTUzODg2OC9wcmV2ZW50LWJvZHktZnJvbS1zY3JvbGxpbmctd2hlbi1hLW1vZGFsLWlzLW9wZW5lZCNjb21tZW50NjU2MjY3NDNfMjQ3MjcyMDZcbiAgdGhpcy5fc2F2ZWRCb2R5UHJvcGVydGllcyA9IHtcbiAgICBsZWZ0OiAod2luZG93LnBhZ2VYT2Zmc2V0IHx8IGRvYy5zY3JvbGxMZWZ0KSAtIChkb2MuY2xpZW50TGVmdCB8fCAwKSxcbiAgICB0b3A6ICh3aW5kb3cucGFnZVlPZmZzZXQgfHwgZG9jLnNjcm9sbFRvcCkgLSAoZG9jLmNsaWVudFRvcCB8fCAwKSxcbiAgICBvdmVyZmxvd1N0eWxlOiBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93LFxuICAgIHBvc2l0aW9uU3R5bGU6IGRvY3VtZW50LmJvZHkuc3R5bGUucG9zaXRpb24sXG4gIH07XG4gIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSBcImhpZGRlblwiO1xuICBkb2N1bWVudC5ib2R5LnN0eWxlLnBvc2l0aW9uID0gXCJmaXhlZFwiO1xuICB3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1vZGFsO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/modal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup-bridge.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/external/strategies/popup-bridge.js ***!
  \******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BraintreeError = __webpack_require__(/*! ../../../braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar errors = __webpack_require__(/*! ../../shared/errors */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/shared/errors.js\");\n\nfunction noop() {}\n\nfunction PopupBridge(options) {\n  this._closed = null;\n  this._options = options;\n}\n\nPopupBridge.prototype.initialize = function (callback) {\n  var self = this;\n\n  window.popupBridge.onComplete = function (err, payload) {\n    var popupDismissed = !payload && !err;\n\n    self._closed = true;\n\n    if (err || popupDismissed) {\n      // User clicked \"Done\" button of browser view\n      callback(new BraintreeError(errors.FRAME_SERVICE_FRAME_CLOSED));\n\n      return;\n    }\n    // User completed popup flow (includes success and cancel cases)\n    callback(null, payload);\n  };\n};\n\nPopupBridge.prototype.open = function (options) {\n  var url;\n\n  options = options || {};\n  url = options.openFrameUrl || this._options.openFrameUrl;\n\n  this._closed = false;\n  window.popupBridge.open(url);\n};\n\nPopupBridge.prototype.focus = noop;\n\nPopupBridge.prototype.close = noop;\n\nPopupBridge.prototype.isClosed = function () {\n  return Boolean(this._closed);\n};\n\nPopupBridge.prototype.redirect = function (redirectUrl) {\n  this.open({ openFrameUrl: redirectUrl });\n};\n\nmodule.exports = PopupBridge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9leHRlcm5hbC9zdHJhdGVnaWVzL3BvcHVwLWJyaWRnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixxQkFBcUIsbUJBQU8sQ0FBQywyRkFBMEI7QUFDdkQsYUFBYSxtQkFBTyxDQUFDLGtHQUFxQjs7QUFFMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLDJCQUEyQjtBQUN6Qzs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9leHRlcm5hbC9zdHJhdGVnaWVzL3BvcHVwLWJyaWRnZS5qcz9mYTQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgQnJhaW50cmVlRXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vYnJhaW50cmVlLWVycm9yXCIpO1xudmFyIGVycm9ycyA9IHJlcXVpcmUoXCIuLi8uLi9zaGFyZWQvZXJyb3JzXCIpO1xuXG5mdW5jdGlvbiBub29wKCkge31cblxuZnVuY3Rpb24gUG9wdXBCcmlkZ2Uob3B0aW9ucykge1xuICB0aGlzLl9jbG9zZWQgPSBudWxsO1xuICB0aGlzLl9vcHRpb25zID0gb3B0aW9ucztcbn1cblxuUG9wdXBCcmlkZ2UucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gIHdpbmRvdy5wb3B1cEJyaWRnZS5vbkNvbXBsZXRlID0gZnVuY3Rpb24gKGVyciwgcGF5bG9hZCkge1xuICAgIHZhciBwb3B1cERpc21pc3NlZCA9ICFwYXlsb2FkICYmICFlcnI7XG5cbiAgICBzZWxmLl9jbG9zZWQgPSB0cnVlO1xuXG4gICAgaWYgKGVyciB8fCBwb3B1cERpc21pc3NlZCkge1xuICAgICAgLy8gVXNlciBjbGlja2VkIFwiRG9uZVwiIGJ1dHRvbiBvZiBicm93c2VyIHZpZXdcbiAgICAgIGNhbGxiYWNrKG5ldyBCcmFpbnRyZWVFcnJvcihlcnJvcnMuRlJBTUVfU0VSVklDRV9GUkFNRV9DTE9TRUQpKTtcblxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBVc2VyIGNvbXBsZXRlZCBwb3B1cCBmbG93IChpbmNsdWRlcyBzdWNjZXNzIGFuZCBjYW5jZWwgY2FzZXMpXG4gICAgY2FsbGJhY2sobnVsbCwgcGF5bG9hZCk7XG4gIH07XG59O1xuXG5Qb3B1cEJyaWRnZS5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gIHZhciB1cmw7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHVybCA9IG9wdGlvbnMub3BlbkZyYW1lVXJsIHx8IHRoaXMuX29wdGlvbnMub3BlbkZyYW1lVXJsO1xuXG4gIHRoaXMuX2Nsb3NlZCA9IGZhbHNlO1xuICB3aW5kb3cucG9wdXBCcmlkZ2Uub3Blbih1cmwpO1xufTtcblxuUG9wdXBCcmlkZ2UucHJvdG90eXBlLmZvY3VzID0gbm9vcDtcblxuUG9wdXBCcmlkZ2UucHJvdG90eXBlLmNsb3NlID0gbm9vcDtcblxuUG9wdXBCcmlkZ2UucHJvdG90eXBlLmlzQ2xvc2VkID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gQm9vbGVhbih0aGlzLl9jbG9zZWQpO1xufTtcblxuUG9wdXBCcmlkZ2UucHJvdG90eXBlLnJlZGlyZWN0ID0gZnVuY3Rpb24gKHJlZGlyZWN0VXJsKSB7XG4gIHRoaXMub3Blbih7IG9wZW5GcmFtZVVybDogcmVkaXJlY3RVcmwgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBvcHVwQnJpZGdlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup-bridge.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/compose-options.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/external/strategies/popup/compose-options.js ***!
  \***************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar constants = __webpack_require__(/*! ../../../shared/constants */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/shared/constants.js\");\nvar position = __webpack_require__(/*! ./position */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/position.js\");\n\nfunction calculatePosition(type, userDefinedPosition, size) {\n  if (typeof userDefinedPosition !== \"undefined\") {\n    return userDefinedPosition;\n  }\n\n  return position[type](size);\n}\n\nmodule.exports = function composePopupOptions(options) {\n  var height = options.height || constants.DEFAULT_POPUP_HEIGHT;\n  var width = options.width || constants.DEFAULT_POPUP_WIDTH;\n  var top = calculatePosition(\"top\", options.top, height);\n  var left = calculatePosition(\"left\", options.left, width);\n\n  return [\n    constants.POPUP_BASE_OPTIONS,\n    \"height=\" + height,\n    \"width=\" + width,\n    \"top=\" + top,\n    \"left=\" + left,\n  ].join(\",\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9leHRlcm5hbC9zdHJhdGVnaWVzL3BvcHVwL2NvbXBvc2Utb3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixnQkFBZ0IsbUJBQU8sQ0FBQywyR0FBMkI7QUFDbkQsZUFBZSxtQkFBTyxDQUFDLDhHQUFZOztBQUVuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9leHRlcm5hbC9zdHJhdGVnaWVzL3BvcHVwL2NvbXBvc2Utb3B0aW9ucy5qcz8yN2NhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgY29uc3RhbnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL3NoYXJlZC9jb25zdGFudHNcIik7XG52YXIgcG9zaXRpb24gPSByZXF1aXJlKFwiLi9wb3NpdGlvblwiKTtcblxuZnVuY3Rpb24gY2FsY3VsYXRlUG9zaXRpb24odHlwZSwgdXNlckRlZmluZWRQb3NpdGlvbiwgc2l6ZSkge1xuICBpZiAodHlwZW9mIHVzZXJEZWZpbmVkUG9zaXRpb24gIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gdXNlckRlZmluZWRQb3NpdGlvbjtcbiAgfVxuXG4gIHJldHVybiBwb3NpdGlvblt0eXBlXShzaXplKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21wb3NlUG9wdXBPcHRpb25zKG9wdGlvbnMpIHtcbiAgdmFyIGhlaWdodCA9IG9wdGlvbnMuaGVpZ2h0IHx8IGNvbnN0YW50cy5ERUZBVUxUX1BPUFVQX0hFSUdIVDtcbiAgdmFyIHdpZHRoID0gb3B0aW9ucy53aWR0aCB8fCBjb25zdGFudHMuREVGQVVMVF9QT1BVUF9XSURUSDtcbiAgdmFyIHRvcCA9IGNhbGN1bGF0ZVBvc2l0aW9uKFwidG9wXCIsIG9wdGlvbnMudG9wLCBoZWlnaHQpO1xuICB2YXIgbGVmdCA9IGNhbGN1bGF0ZVBvc2l0aW9uKFwibGVmdFwiLCBvcHRpb25zLmxlZnQsIHdpZHRoKTtcblxuICByZXR1cm4gW1xuICAgIGNvbnN0YW50cy5QT1BVUF9CQVNFX09QVElPTlMsXG4gICAgXCJoZWlnaHQ9XCIgKyBoZWlnaHQsXG4gICAgXCJ3aWR0aD1cIiArIHdpZHRoLFxuICAgIFwidG9wPVwiICsgdG9wLFxuICAgIFwibGVmdD1cIiArIGxlZnQsXG4gIF0uam9pbihcIixcIik7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/compose-options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/index.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/external/strategies/popup/index.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar composeOptions = __webpack_require__(/*! ./compose-options */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/compose-options.js\");\n\nfunction noop() {}\n\nfunction Popup(options) {\n  this._frame = null;\n  this._options = options || {};\n}\n\nPopup.prototype.initialize = noop;\n\nPopup.prototype.open = function () {\n  this._frame = window.open(\n    this._options.openFrameUrl,\n    this._options.name,\n    composeOptions(this._options)\n  );\n};\n\nPopup.prototype.focus = function () {\n  this._frame.focus();\n};\n\nPopup.prototype.close = function () {\n  if (this._frame.closed) {\n    return;\n  }\n  this._frame.close();\n};\n\nPopup.prototype.isClosed = function () {\n  return !this._frame || Boolean(this._frame.closed);\n};\n\nPopup.prototype.redirect = function (redirectUrl) {\n  this._frame.location.href = redirectUrl;\n};\n\nmodule.exports = Popup;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9leHRlcm5hbC9zdHJhdGVnaWVzL3BvcHVwL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHFCQUFxQixtQkFBTyxDQUFDLDRIQUFtQjs7QUFFaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9mcmFtZS1zZXJ2aWNlL2V4dGVybmFsL3N0cmF0ZWdpZXMvcG9wdXAvaW5kZXguanM/ZGU0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGNvbXBvc2VPcHRpb25zID0gcmVxdWlyZShcIi4vY29tcG9zZS1vcHRpb25zXCIpO1xuXG5mdW5jdGlvbiBub29wKCkge31cblxuZnVuY3Rpb24gUG9wdXAob3B0aW9ucykge1xuICB0aGlzLl9mcmFtZSA9IG51bGw7XG4gIHRoaXMuX29wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xufVxuXG5Qb3B1cC5wcm90b3R5cGUuaW5pdGlhbGl6ZSA9IG5vb3A7XG5cblBvcHVwLnByb3RvdHlwZS5vcGVuID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9mcmFtZSA9IHdpbmRvdy5vcGVuKFxuICAgIHRoaXMuX29wdGlvbnMub3BlbkZyYW1lVXJsLFxuICAgIHRoaXMuX29wdGlvbnMubmFtZSxcbiAgICBjb21wb3NlT3B0aW9ucyh0aGlzLl9vcHRpb25zKVxuICApO1xufTtcblxuUG9wdXAucHJvdG90eXBlLmZvY3VzID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9mcmFtZS5mb2N1cygpO1xufTtcblxuUG9wdXAucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKCkge1xuICBpZiAodGhpcy5fZnJhbWUuY2xvc2VkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRoaXMuX2ZyYW1lLmNsb3NlKCk7XG59O1xuXG5Qb3B1cC5wcm90b3R5cGUuaXNDbG9zZWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhdGhpcy5fZnJhbWUgfHwgQm9vbGVhbih0aGlzLl9mcmFtZS5jbG9zZWQpO1xufTtcblxuUG9wdXAucHJvdG90eXBlLnJlZGlyZWN0ID0gZnVuY3Rpb24gKHJlZGlyZWN0VXJsKSB7XG4gIHRoaXMuX2ZyYW1lLmxvY2F0aW9uLmhyZWYgPSByZWRpcmVjdFVybDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUG9wdXA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/position.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/external/strategies/popup/position.js ***!
  \********************************************************************************************/
/***/ ((module) => {

eval("\n\nfunction top(height) {\n  var windowHeight =\n    window.outerHeight || document.documentElement.clientHeight;\n  var windowTop = window.screenY == null ? window.screenTop : window.screenY;\n\n  return center(windowHeight, height, windowTop);\n}\n\nfunction left(width) {\n  var windowWidth = window.outerWidth || document.documentElement.clientWidth;\n  var windowLeft = window.screenX == null ? window.screenLeft : window.screenX;\n\n  return center(windowWidth, width, windowLeft);\n}\n\nfunction center(windowMetric, popupMetric, offset) {\n  return (windowMetric - popupMetric) / 2 + offset;\n}\n\nmodule.exports = {\n  top: top,\n  left: left,\n  center: center,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9leHRlcm5hbC9zdHJhdGVnaWVzL3BvcHVwL3Bvc2l0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2ZyYW1lLXNlcnZpY2UvZXh0ZXJuYWwvc3RyYXRlZ2llcy9wb3B1cC9wb3NpdGlvbi5qcz82NmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiB0b3AoaGVpZ2h0KSB7XG4gIHZhciB3aW5kb3dIZWlnaHQgPVxuICAgIHdpbmRvdy5vdXRlckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICB2YXIgd2luZG93VG9wID0gd2luZG93LnNjcmVlblkgPT0gbnVsbCA/IHdpbmRvdy5zY3JlZW5Ub3AgOiB3aW5kb3cuc2NyZWVuWTtcblxuICByZXR1cm4gY2VudGVyKHdpbmRvd0hlaWdodCwgaGVpZ2h0LCB3aW5kb3dUb3ApO1xufVxuXG5mdW5jdGlvbiBsZWZ0KHdpZHRoKSB7XG4gIHZhciB3aW5kb3dXaWR0aCA9IHdpbmRvdy5vdXRlcldpZHRoIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDtcbiAgdmFyIHdpbmRvd0xlZnQgPSB3aW5kb3cuc2NyZWVuWCA9PSBudWxsID8gd2luZG93LnNjcmVlbkxlZnQgOiB3aW5kb3cuc2NyZWVuWDtcblxuICByZXR1cm4gY2VudGVyKHdpbmRvd1dpZHRoLCB3aWR0aCwgd2luZG93TGVmdCk7XG59XG5cbmZ1bmN0aW9uIGNlbnRlcih3aW5kb3dNZXRyaWMsIHBvcHVwTWV0cmljLCBvZmZzZXQpIHtcbiAgcmV0dXJuICh3aW5kb3dNZXRyaWMgLSBwb3B1cE1ldHJpYykgLyAyICsgb2Zmc2V0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdG9wOiB0b3AsXG4gIGxlZnQ6IGxlZnQsXG4gIGNlbnRlcjogY2VudGVyLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/external/strategies/popup/position.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/shared/browser-detection.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/shared/browser-detection.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = {\n  isIos: __webpack_require__(/*! @braintree/browser-detection/is-ios */ \"(ssr)/./node_modules/@braintree/browser-detection/is-ios.js\"),\n  isIosWKWebview: __webpack_require__(/*! @braintree/browser-detection/is-ios-wkwebview */ \"(ssr)/./node_modules/@braintree/browser-detection/is-ios-wkwebview.js\"),\n  supportsPopups: __webpack_require__(/*! @braintree/browser-detection/supports-popups */ \"(ssr)/./node_modules/@braintree/browser-detection/supports-popups.js\"),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9zaGFyZWQvYnJvd3Nlci1kZXRlY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSxTQUFTLG1CQUFPLENBQUMsd0dBQXFDO0FBQ3RELGtCQUFrQixtQkFBTyxDQUFDLDRIQUErQztBQUN6RSxrQkFBa0IsbUJBQU8sQ0FBQywwSEFBOEM7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2ZyYW1lLXNlcnZpY2Uvc2hhcmVkL2Jyb3dzZXItZGV0ZWN0aW9uLmpzPzBlM2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0lvczogcmVxdWlyZShcIkBicmFpbnRyZWUvYnJvd3Nlci1kZXRlY3Rpb24vaXMtaW9zXCIpLFxuICBpc0lvc1dLV2VidmlldzogcmVxdWlyZShcIkBicmFpbnRyZWUvYnJvd3Nlci1kZXRlY3Rpb24vaXMtaW9zLXdrd2Vidmlld1wiKSxcbiAgc3VwcG9ydHNQb3B1cHM6IHJlcXVpcmUoXCJAYnJhaW50cmVlL2Jyb3dzZXItZGV0ZWN0aW9uL3N1cHBvcnRzLXBvcHVwc1wiKSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/shared/browser-detection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/shared/constants.js":
/*!**************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/shared/constants.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n  DISPATCH_FRAME_NAME: \"dispatch\",\n  DISPATCH_FRAME_CLASS: \"braintree-dispatch-frame\",\n  POPUP_BASE_OPTIONS: \"resizable,scrollbars\",\n  DEFAULT_POPUP_WIDTH: 450,\n  DEFAULT_POPUP_HEIGHT: 535,\n  POPUP_POLL_INTERVAL: 100,\n  POPUP_CLOSE_TIMEOUT: 100,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9zaGFyZWQvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9zaGFyZWQvY29uc3RhbnRzLmpzP2E3ZWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBESVNQQVRDSF9GUkFNRV9OQU1FOiBcImRpc3BhdGNoXCIsXG4gIERJU1BBVENIX0ZSQU1FX0NMQVNTOiBcImJyYWludHJlZS1kaXNwYXRjaC1mcmFtZVwiLFxuICBQT1BVUF9CQVNFX09QVElPTlM6IFwicmVzaXphYmxlLHNjcm9sbGJhcnNcIixcbiAgREVGQVVMVF9QT1BVUF9XSURUSDogNDUwLFxuICBERUZBVUxUX1BPUFVQX0hFSUdIVDogNTM1LFxuICBQT1BVUF9QT0xMX0lOVEVSVkFMOiAxMDAsXG4gIFBPUFVQX0NMT1NFX1RJTUVPVVQ6IDEwMCxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/shared/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/shared/errors.js":
/*!***********************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/shared/errors.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.Popup Related Error Codes\n * @ignore\n * @description Errors that occur when using a component that opens a popup window.\n * @property {INTERNAL} FRAME_SERVICE_FRAME_CLOSED - Occurs when the frame is closed before tokenization can occur.\n * @property {INTERNAL} FRAME_SERVICE_FRAME_OPEN_FAILED - Occurs when the popup could not be opened.\n */\n\nvar BraintreeError = __webpack_require__(/*! ../../braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  FRAME_SERVICE_FRAME_CLOSED: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"FRAME_SERVICE_FRAME_CLOSED\",\n    message: \"Frame closed before tokenization could occur.\",\n  },\n  FRAME_SERVICE_FRAME_OPEN_FAILED: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"FRAME_SERVICE_FRAME_OPEN_FAILED\",\n    message: \"Frame failed to open.\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9zaGFyZWQvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4Qjs7QUFFQSxxQkFBcUIsbUJBQU8sQ0FBQyx3RkFBdUI7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2ZyYW1lLXNlcnZpY2Uvc2hhcmVkL2Vycm9ycy5qcz8xZWUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKipcbiAqIEBuYW1lIEJyYWludHJlZUVycm9yLlBvcHVwIFJlbGF0ZWQgRXJyb3IgQ29kZXNcbiAqIEBpZ25vcmVcbiAqIEBkZXNjcmlwdGlvbiBFcnJvcnMgdGhhdCBvY2N1ciB3aGVuIHVzaW5nIGEgY29tcG9uZW50IHRoYXQgb3BlbnMgYSBwb3B1cCB3aW5kb3cuXG4gKiBAcHJvcGVydHkge0lOVEVSTkFMfSBGUkFNRV9TRVJWSUNFX0ZSQU1FX0NMT1NFRCAtIE9jY3VycyB3aGVuIHRoZSBmcmFtZSBpcyBjbG9zZWQgYmVmb3JlIHRva2VuaXphdGlvbiBjYW4gb2NjdXIuXG4gKiBAcHJvcGVydHkge0lOVEVSTkFMfSBGUkFNRV9TRVJWSUNFX0ZSQU1FX09QRU5fRkFJTEVEIC0gT2NjdXJzIHdoZW4gdGhlIHBvcHVwIGNvdWxkIG5vdCBiZSBvcGVuZWQuXG4gKi9cblxudmFyIEJyYWludHJlZUVycm9yID0gcmVxdWlyZShcIi4uLy4uL2JyYWludHJlZS1lcnJvclwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEZSQU1FX1NFUlZJQ0VfRlJBTUVfQ0xPU0VEOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuSU5URVJOQUwsXG4gICAgY29kZTogXCJGUkFNRV9TRVJWSUNFX0ZSQU1FX0NMT1NFRFwiLFxuICAgIG1lc3NhZ2U6IFwiRnJhbWUgY2xvc2VkIGJlZm9yZSB0b2tlbml6YXRpb24gY291bGQgb2NjdXIuXCIsXG4gIH0sXG4gIEZSQU1FX1NFUlZJQ0VfRlJBTUVfT1BFTl9GQUlMRUQ6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5JTlRFUk5BTCxcbiAgICBjb2RlOiBcIkZSQU1FX1NFUlZJQ0VfRlJBTUVfT1BFTl9GQUlMRURcIixcbiAgICBtZXNzYWdlOiBcIkZyYW1lIGZhaWxlZCB0byBvcGVuLlwiLFxuICB9LFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/shared/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/frame-service/shared/events.js":
/*!***********************************************************************!*\
  !*** ./node_modules/braintree-web/lib/frame-service/shared/events.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar enumerate = __webpack_require__(/*! ../../enumerate */ \"(ssr)/./node_modules/braintree-web/lib/enumerate.js\");\n\nmodule.exports = enumerate(\n  [\"DISPATCH_FRAME_READY\", \"DISPATCH_FRAME_REPORT\"],\n  \"frameService:\"\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZnJhbWUtc2VydmljZS9zaGFyZWQvZXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLDRFQUFpQjs7QUFFekM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2ZyYW1lLXNlcnZpY2Uvc2hhcmVkL2V2ZW50cy5qcz9lY2FhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgZW51bWVyYXRlID0gcmVxdWlyZShcIi4uLy4uL2VudW1lcmF0ZVwiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBlbnVtZXJhdGUoXG4gIFtcIkRJU1BBVENIX0ZSQU1FX1JFQURZXCIsIFwiRElTUEFUQ0hfRlJBTUVfUkVQT1JUXCJdLFxuICBcImZyYW1lU2VydmljZTpcIlxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/frame-service/shared/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/generate-google-pay-configuration.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/braintree-web/lib/generate-google-pay-configuration.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar VERSION = \"3.99.0\";\nvar assign = (__webpack_require__(/*! ./assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\n\nfunction generateTokenizationParameters(configuration, overrides) {\n  var metadata = configuration.analyticsMetadata;\n  var basicTokenizationParameters = {\n    gateway: \"braintree\",\n    \"braintree:merchantId\": configuration.gatewayConfiguration.merchantId,\n    \"braintree:apiVersion\": \"v1\",\n    \"braintree:sdkVersion\": VERSION,\n    \"braintree:metadata\": JSON.stringify({\n      source: metadata.source,\n      integration: metadata.integration,\n      sessionId: metadata.sessionId,\n      version: VERSION,\n      platform: metadata.platform,\n    }),\n  };\n\n  return assign({}, basicTokenizationParameters, overrides);\n}\n\nmodule.exports = function (configuration, googlePayVersion, googleMerchantId) {\n  var data, paypalPaymentMethod;\n  var androidPayConfiguration = configuration.gatewayConfiguration.androidPay;\n  var environment =\n    configuration.gatewayConfiguration.environment === \"production\"\n      ? \"PRODUCTION\"\n      : \"TEST\";\n\n  if (googlePayVersion === 2) {\n    data = {\n      apiVersion: 2,\n      apiVersionMinor: 0,\n      environment: environment,\n      allowedPaymentMethods: [\n        {\n          type: \"CARD\",\n          parameters: {\n            allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n            allowedCardNetworks: androidPayConfiguration.supportedNetworks.map(\n              function (card) {\n                return card.toUpperCase();\n              }\n            ),\n          },\n          tokenizationSpecification: {\n            type: \"PAYMENT_GATEWAY\",\n            parameters: generateTokenizationParameters(configuration, {\n              \"braintree:authorizationFingerprint\":\n                androidPayConfiguration.googleAuthorizationFingerprint,\n            }),\n          },\n        },\n      ],\n    };\n\n    if (googleMerchantId) {\n      data.merchantInfo = {\n        merchantId: googleMerchantId,\n      };\n    }\n\n    if (androidPayConfiguration.paypalClientId) {\n      paypalPaymentMethod = {\n        type: \"PAYPAL\",\n        parameters: {\n          /* eslint-disable camelcase */\n          purchase_context: {\n            purchase_units: [\n              {\n                payee: {\n                  client_id: androidPayConfiguration.paypalClientId,\n                },\n                recurring_payment: true,\n              },\n            ],\n          },\n          /* eslint-enable camelcase */\n        },\n        tokenizationSpecification: {\n          type: \"PAYMENT_GATEWAY\",\n          parameters: generateTokenizationParameters(configuration, {\n            \"braintree:paypalClientId\": androidPayConfiguration.paypalClientId,\n          }),\n        },\n      };\n\n      data.allowedPaymentMethods.push(paypalPaymentMethod);\n    }\n  } else {\n    data = {\n      environment: environment,\n      allowedPaymentMethods: [\"CARD\", \"TOKENIZED_CARD\"],\n      paymentMethodTokenizationParameters: {\n        tokenizationType: \"PAYMENT_GATEWAY\",\n        parameters: generateTokenizationParameters(configuration, {\n          \"braintree:authorizationFingerprint\":\n            androidPayConfiguration.googleAuthorizationFingerprint,\n        }),\n      },\n      cardRequirements: {\n        allowedCardNetworks: androidPayConfiguration.supportedNetworks.map(\n          function (card) {\n            return card.toUpperCase();\n          }\n        ),\n      },\n    };\n\n    if (configuration.authorizationType === \"TOKENIZATION_KEY\") {\n      data.paymentMethodTokenizationParameters.parameters[\n        \"braintree:clientKey\"\n      ] = configuration.authorization;\n    }\n\n    if (googleMerchantId) {\n      data.merchantId = googleMerchantId;\n    }\n\n    if (googlePayVersion) {\n      data.apiVersion = googlePayVersion;\n    }\n  }\n\n  return data;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZ2VuZXJhdGUtZ29vZ2xlLXBheS1jb25maWd1cmF0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsYUFBYSxnR0FBMEI7O0FBRXZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBLGtCQUFrQjtBQUNsQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGVBQWU7QUFDZjtBQUNBLFdBQVc7QUFDWDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvZ2VuZXJhdGUtZ29vZ2xlLXBheS1jb25maWd1cmF0aW9uLmpzPzBhNzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBWRVJTSU9OID0gXCIzLjk5LjBcIjtcbnZhciBhc3NpZ24gPSByZXF1aXJlKFwiLi9hc3NpZ25cIikuYXNzaWduO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZVRva2VuaXphdGlvblBhcmFtZXRlcnMoY29uZmlndXJhdGlvbiwgb3ZlcnJpZGVzKSB7XG4gIHZhciBtZXRhZGF0YSA9IGNvbmZpZ3VyYXRpb24uYW5hbHl0aWNzTWV0YWRhdGE7XG4gIHZhciBiYXNpY1Rva2VuaXphdGlvblBhcmFtZXRlcnMgPSB7XG4gICAgZ2F0ZXdheTogXCJicmFpbnRyZWVcIixcbiAgICBcImJyYWludHJlZTptZXJjaGFudElkXCI6IGNvbmZpZ3VyYXRpb24uZ2F0ZXdheUNvbmZpZ3VyYXRpb24ubWVyY2hhbnRJZCxcbiAgICBcImJyYWludHJlZTphcGlWZXJzaW9uXCI6IFwidjFcIixcbiAgICBcImJyYWludHJlZTpzZGtWZXJzaW9uXCI6IFZFUlNJT04sXG4gICAgXCJicmFpbnRyZWU6bWV0YWRhdGFcIjogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgc291cmNlOiBtZXRhZGF0YS5zb3VyY2UsXG4gICAgICBpbnRlZ3JhdGlvbjogbWV0YWRhdGEuaW50ZWdyYXRpb24sXG4gICAgICBzZXNzaW9uSWQ6IG1ldGFkYXRhLnNlc3Npb25JZCxcbiAgICAgIHZlcnNpb246IFZFUlNJT04sXG4gICAgICBwbGF0Zm9ybTogbWV0YWRhdGEucGxhdGZvcm0sXG4gICAgfSksXG4gIH07XG5cbiAgcmV0dXJuIGFzc2lnbih7fSwgYmFzaWNUb2tlbml6YXRpb25QYXJhbWV0ZXJzLCBvdmVycmlkZXMpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjb25maWd1cmF0aW9uLCBnb29nbGVQYXlWZXJzaW9uLCBnb29nbGVNZXJjaGFudElkKSB7XG4gIHZhciBkYXRhLCBwYXlwYWxQYXltZW50TWV0aG9kO1xuICB2YXIgYW5kcm9pZFBheUNvbmZpZ3VyYXRpb24gPSBjb25maWd1cmF0aW9uLmdhdGV3YXlDb25maWd1cmF0aW9uLmFuZHJvaWRQYXk7XG4gIHZhciBlbnZpcm9ubWVudCA9XG4gICAgY29uZmlndXJhdGlvbi5nYXRld2F5Q29uZmlndXJhdGlvbi5lbnZpcm9ubWVudCA9PT0gXCJwcm9kdWN0aW9uXCJcbiAgICAgID8gXCJQUk9EVUNUSU9OXCJcbiAgICAgIDogXCJURVNUXCI7XG5cbiAgaWYgKGdvb2dsZVBheVZlcnNpb24gPT09IDIpIHtcbiAgICBkYXRhID0ge1xuICAgICAgYXBpVmVyc2lvbjogMixcbiAgICAgIGFwaVZlcnNpb25NaW5vcjogMCxcbiAgICAgIGVudmlyb25tZW50OiBlbnZpcm9ubWVudCxcbiAgICAgIGFsbG93ZWRQYXltZW50TWV0aG9kczogW1xuICAgICAgICB7XG4gICAgICAgICAgdHlwZTogXCJDQVJEXCIsXG4gICAgICAgICAgcGFyYW1ldGVyczoge1xuICAgICAgICAgICAgYWxsb3dlZEF1dGhNZXRob2RzOiBbXCJQQU5fT05MWVwiLCBcIkNSWVBUT0dSQU1fM0RTXCJdLFxuICAgICAgICAgICAgYWxsb3dlZENhcmROZXR3b3JrczogYW5kcm9pZFBheUNvbmZpZ3VyYXRpb24uc3VwcG9ydGVkTmV0d29ya3MubWFwKFxuICAgICAgICAgICAgICBmdW5jdGlvbiAoY2FyZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjYXJkLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICksXG4gICAgICAgICAgfSxcbiAgICAgICAgICB0b2tlbml6YXRpb25TcGVjaWZpY2F0aW9uOiB7XG4gICAgICAgICAgICB0eXBlOiBcIlBBWU1FTlRfR0FURVdBWVwiLFxuICAgICAgICAgICAgcGFyYW1ldGVyczogZ2VuZXJhdGVUb2tlbml6YXRpb25QYXJhbWV0ZXJzKGNvbmZpZ3VyYXRpb24sIHtcbiAgICAgICAgICAgICAgXCJicmFpbnRyZWU6YXV0aG9yaXphdGlvbkZpbmdlcnByaW50XCI6XG4gICAgICAgICAgICAgICAgYW5kcm9pZFBheUNvbmZpZ3VyYXRpb24uZ29vZ2xlQXV0aG9yaXphdGlvbkZpbmdlcnByaW50LFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfTtcblxuICAgIGlmIChnb29nbGVNZXJjaGFudElkKSB7XG4gICAgICBkYXRhLm1lcmNoYW50SW5mbyA9IHtcbiAgICAgICAgbWVyY2hhbnRJZDogZ29vZ2xlTWVyY2hhbnRJZCxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgaWYgKGFuZHJvaWRQYXlDb25maWd1cmF0aW9uLnBheXBhbENsaWVudElkKSB7XG4gICAgICBwYXlwYWxQYXltZW50TWV0aG9kID0ge1xuICAgICAgICB0eXBlOiBcIlBBWVBBTFwiLFxuICAgICAgICBwYXJhbWV0ZXJzOiB7XG4gICAgICAgICAgLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG4gICAgICAgICAgcHVyY2hhc2VfY29udGV4dDoge1xuICAgICAgICAgICAgcHVyY2hhc2VfdW5pdHM6IFtcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHBheWVlOiB7XG4gICAgICAgICAgICAgICAgICBjbGllbnRfaWQ6IGFuZHJvaWRQYXlDb25maWd1cmF0aW9uLnBheXBhbENsaWVudElkLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgcmVjdXJyaW5nX3BheW1lbnQ6IHRydWUsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgLyogZXNsaW50LWVuYWJsZSBjYW1lbGNhc2UgKi9cbiAgICAgICAgfSxcbiAgICAgICAgdG9rZW5pemF0aW9uU3BlY2lmaWNhdGlvbjoge1xuICAgICAgICAgIHR5cGU6IFwiUEFZTUVOVF9HQVRFV0FZXCIsXG4gICAgICAgICAgcGFyYW1ldGVyczogZ2VuZXJhdGVUb2tlbml6YXRpb25QYXJhbWV0ZXJzKGNvbmZpZ3VyYXRpb24sIHtcbiAgICAgICAgICAgIFwiYnJhaW50cmVlOnBheXBhbENsaWVudElkXCI6IGFuZHJvaWRQYXlDb25maWd1cmF0aW9uLnBheXBhbENsaWVudElkLFxuICAgICAgICAgIH0pLFxuICAgICAgICB9LFxuICAgICAgfTtcblxuICAgICAgZGF0YS5hbGxvd2VkUGF5bWVudE1ldGhvZHMucHVzaChwYXlwYWxQYXltZW50TWV0aG9kKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgZGF0YSA9IHtcbiAgICAgIGVudmlyb25tZW50OiBlbnZpcm9ubWVudCxcbiAgICAgIGFsbG93ZWRQYXltZW50TWV0aG9kczogW1wiQ0FSRFwiLCBcIlRPS0VOSVpFRF9DQVJEXCJdLFxuICAgICAgcGF5bWVudE1ldGhvZFRva2VuaXphdGlvblBhcmFtZXRlcnM6IHtcbiAgICAgICAgdG9rZW5pemF0aW9uVHlwZTogXCJQQVlNRU5UX0dBVEVXQVlcIixcbiAgICAgICAgcGFyYW1ldGVyczogZ2VuZXJhdGVUb2tlbml6YXRpb25QYXJhbWV0ZXJzKGNvbmZpZ3VyYXRpb24sIHtcbiAgICAgICAgICBcImJyYWludHJlZTphdXRob3JpemF0aW9uRmluZ2VycHJpbnRcIjpcbiAgICAgICAgICAgIGFuZHJvaWRQYXlDb25maWd1cmF0aW9uLmdvb2dsZUF1dGhvcml6YXRpb25GaW5nZXJwcmludCxcbiAgICAgICAgfSksXG4gICAgICB9LFxuICAgICAgY2FyZFJlcXVpcmVtZW50czoge1xuICAgICAgICBhbGxvd2VkQ2FyZE5ldHdvcmtzOiBhbmRyb2lkUGF5Q29uZmlndXJhdGlvbi5zdXBwb3J0ZWROZXR3b3Jrcy5tYXAoXG4gICAgICAgICAgZnVuY3Rpb24gKGNhcmQpIHtcbiAgICAgICAgICAgIHJldHVybiBjYXJkLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgICAgfVxuICAgICAgICApLFxuICAgICAgfSxcbiAgICB9O1xuXG4gICAgaWYgKGNvbmZpZ3VyYXRpb24uYXV0aG9yaXphdGlvblR5cGUgPT09IFwiVE9LRU5JWkFUSU9OX0tFWVwiKSB7XG4gICAgICBkYXRhLnBheW1lbnRNZXRob2RUb2tlbml6YXRpb25QYXJhbWV0ZXJzLnBhcmFtZXRlcnNbXG4gICAgICAgIFwiYnJhaW50cmVlOmNsaWVudEtleVwiXG4gICAgICBdID0gY29uZmlndXJhdGlvbi5hdXRob3JpemF0aW9uO1xuICAgIH1cblxuICAgIGlmIChnb29nbGVNZXJjaGFudElkKSB7XG4gICAgICBkYXRhLm1lcmNoYW50SWQgPSBnb29nbGVNZXJjaGFudElkO1xuICAgIH1cblxuICAgIGlmIChnb29nbGVQYXlWZXJzaW9uKSB7XG4gICAgICBkYXRhLmFwaVZlcnNpb24gPSBnb29nbGVQYXlWZXJzaW9uO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkYXRhO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/generate-google-pay-configuration.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/in-iframe.js":
/*!*****************************************************!*\
  !*** ./node_modules/braintree-web/lib/in-iframe.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function inIframe(win) {\n  win = win || window;\n\n  try {\n    return win.self !== win.top;\n  } catch (e) {\n    return true;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvaW4taWZyYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2luLWlmcmFtZS5qcz80NmJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluSWZyYW1lKHdpbikge1xuICB3aW4gPSB3aW4gfHwgd2luZG93O1xuXG4gIHRyeSB7XG4gICAgcmV0dXJuIHdpbi5zZWxmICE9PSB3aW4udG9wO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/in-iframe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/is-date-string-before-or-on.js":
/*!***********************************************************************!*\
  !*** ./node_modules/braintree-web/lib/is-date-string-before-or-on.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("\n\nfunction convertDateStringToDate(dateString) {\n  var splitDate = dateString.split(\"-\");\n\n  return new Date(splitDate[0], splitDate[1], splitDate[2]);\n}\n\nfunction isDateStringBeforeOrOn(firstDate, secondDate) {\n  return (\n    convertDateStringToDate(firstDate) <= convertDateStringToDate(secondDate)\n  );\n}\n\nmodule.exports = isDateStringBeforeOrOn;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvaXMtZGF0ZS1zdHJpbmctYmVmb3JlLW9yLW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9pcy1kYXRlLXN0cmluZy1iZWZvcmUtb3Itb24uanM/ODAwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gY29udmVydERhdGVTdHJpbmdUb0RhdGUoZGF0ZVN0cmluZykge1xuICB2YXIgc3BsaXREYXRlID0gZGF0ZVN0cmluZy5zcGxpdChcIi1cIik7XG5cbiAgcmV0dXJuIG5ldyBEYXRlKHNwbGl0RGF0ZVswXSwgc3BsaXREYXRlWzFdLCBzcGxpdERhdGVbMl0pO1xufVxuXG5mdW5jdGlvbiBpc0RhdGVTdHJpbmdCZWZvcmVPck9uKGZpcnN0RGF0ZSwgc2Vjb25kRGF0ZSkge1xuICByZXR1cm4gKFxuICAgIGNvbnZlcnREYXRlU3RyaW5nVG9EYXRlKGZpcnN0RGF0ZSkgPD0gY29udmVydERhdGVTdHJpbmdUb0RhdGUoc2Vjb25kRGF0ZSlcbiAgKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc0RhdGVTdHJpbmdCZWZvcmVPck9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/is-date-string-before-or-on.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/is-https.js":
/*!****************************************************!*\
  !*** ./node_modules/braintree-web/lib/is-https.js ***!
  \****************************************************/
/***/ ((module) => {

eval("\n\nfunction isHTTPS(protocol) {\n  protocol = protocol || window.location.protocol;\n\n  return protocol === \"https:\";\n}\n\nmodule.exports = {\n  isHTTPS: isHTTPS,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvaXMtaHR0cHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvaXMtaHR0cHMuanM/NWJjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gaXNIVFRQUyhwcm90b2NvbCkge1xuICBwcm90b2NvbCA9IHByb3RvY29sIHx8IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbDtcblxuICByZXR1cm4gcHJvdG9jb2wgPT09IFwiaHR0cHM6XCI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc0hUVFBTOiBpc0hUVFBTLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/is-https.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/is-verified-domain.js":
/*!**************************************************************!*\
  !*** ./node_modules/braintree-web/lib/is-verified-domain.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nvar parser;\nvar legalHosts = {\n  \"paypal.com\": 1,\n  \"braintreepayments.com\": 1,\n  \"braintreegateway.com\": 1,\n  \"braintree-api.com\": 1,\n};\n\nfunction stripSubdomains(domain) {\n  return domain.split(\".\").slice(-2).join(\".\");\n}\n\nfunction isVerifiedDomain(url) {\n  var mainDomain;\n\n  url = url.toLowerCase();\n\n  if (!/^https:/.test(url)) {\n    return false;\n  }\n\n  parser = parser || document.createElement(\"a\");\n  parser.href = url;\n  mainDomain = stripSubdomains(parser.hostname);\n\n  return legalHosts.hasOwnProperty(mainDomain);\n}\n\nmodule.exports = isVerifiedDomain;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvaXMtdmVyaWZpZWQtZG9tYWluLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvaXMtdmVyaWZpZWQtZG9tYWluLmpzPzQzOWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBwYXJzZXI7XG52YXIgbGVnYWxIb3N0cyA9IHtcbiAgXCJwYXlwYWwuY29tXCI6IDEsXG4gIFwiYnJhaW50cmVlcGF5bWVudHMuY29tXCI6IDEsXG4gIFwiYnJhaW50cmVlZ2F0ZXdheS5jb21cIjogMSxcbiAgXCJicmFpbnRyZWUtYXBpLmNvbVwiOiAxLFxufTtcblxuZnVuY3Rpb24gc3RyaXBTdWJkb21haW5zKGRvbWFpbikge1xuICByZXR1cm4gZG9tYWluLnNwbGl0KFwiLlwiKS5zbGljZSgtMikuam9pbihcIi5cIik7XG59XG5cbmZ1bmN0aW9uIGlzVmVyaWZpZWREb21haW4odXJsKSB7XG4gIHZhciBtYWluRG9tYWluO1xuXG4gIHVybCA9IHVybC50b0xvd2VyQ2FzZSgpO1xuXG4gIGlmICghL15odHRwczovLnRlc3QodXJsKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHBhcnNlciA9IHBhcnNlciB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcbiAgcGFyc2VyLmhyZWYgPSB1cmw7XG4gIG1haW5Eb21haW4gPSBzdHJpcFN1YmRvbWFpbnMocGFyc2VyLmhvc3RuYW1lKTtcblxuICByZXR1cm4gbGVnYWxIb3N0cy5oYXNPd25Qcm9wZXJ0eShtYWluRG9tYWluKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1ZlcmlmaWVkRG9tYWluO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/is-verified-domain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/json-clone.js":
/*!******************************************************!*\
  !*** ./node_modules/braintree-web/lib/json-clone.js ***!
  \******************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (value) {\n  return JSON.parse(JSON.stringify(value));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvanNvbi1jbG9uZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL2pzb24tY2xvbmUuanM/NWY3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/json-clone.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/methods.js":
/*!***************************************************!*\
  !*** ./node_modules/braintree-web/lib/methods.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (obj) {\n  return Object.keys(obj).filter(function (key) {\n    return typeof obj[key] === \"function\";\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvbWV0aG9kcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL21ldGhvZHMuanM/MTkxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhvYmopLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmpba2V5XSA9PT0gXCJmdW5jdGlvblwiO1xuICB9KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/methods.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/once.js":
/*!************************************************!*\
  !*** ./node_modules/braintree-web/lib/once.js ***!
  \************************************************/
/***/ ((module) => {

eval("\n\nfunction once(fn) {\n  var called = false;\n\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(null, arguments);\n    }\n  };\n}\n\nmodule.exports = once;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvb25jZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9vbmNlLmpzP2I2N2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIG9uY2UoZm4pIHtcbiAgdmFyIGNhbGxlZCA9IGZhbHNlO1xuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCFjYWxsZWQpIHtcbiAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgICBmbi5hcHBseShudWxsLCBhcmd1bWVudHMpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBvbmNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/once.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/querystring.js":
/*!*******************************************************!*\
  !*** ./node_modules/braintree-web/lib/querystring.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\n\nfunction _notEmpty(obj) {\n  var key;\n\n  for (key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/* eslint-disable no-mixed-operators */\nfunction _isArray(value) {\n  return (\n    (value &&\n      typeof value === \"object\" &&\n      typeof value.length === \"number\" &&\n      Object.prototype.toString.call(value) === \"[object Array]\") ||\n    false\n  );\n}\n/* eslint-enable no-mixed-operators */\n\nfunction hasQueryParams(url) {\n  url = url || window.location.href;\n\n  return /\\?/.test(url);\n}\n\nfunction parse(url) {\n  var query, params;\n\n  url = url || window.location.href;\n\n  if (!hasQueryParams(url)) {\n    return {};\n  }\n\n  query = url.split(\"?\")[1] || \"\";\n  query = query.replace(/#.*$/, \"\").split(\"&\");\n\n  params = query.reduce(function (toReturn, keyValue) {\n    var parts = keyValue.split(\"=\");\n    var key = decodeURIComponent(parts[0]);\n    var value = decodeURIComponent(parts[1]);\n\n    toReturn[key] = value;\n\n    return toReturn;\n  }, {});\n\n  return params;\n}\n\nfunction stringify(params, namespace) {\n  var k, v, p;\n  var query = [];\n\n  for (p in params) {\n    if (!params.hasOwnProperty(p)) {\n      continue;\n    }\n\n    v = params[p];\n\n    if (namespace) {\n      if (_isArray(params)) {\n        k = namespace + \"[]\";\n      } else {\n        k = namespace + \"[\" + p + \"]\";\n      }\n    } else {\n      k = p;\n    }\n    if (typeof v === \"object\") {\n      query.push(stringify(v, k));\n    } else {\n      query.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n    }\n  }\n\n  return query.join(\"&\");\n}\n\nfunction queryify(url, params) {\n  url = url || \"\";\n\n  if (params != null && typeof params === \"object\" && _notEmpty(params)) {\n    url += url.indexOf(\"?\") === -1 ? \"?\" : \"\";\n    url += url.indexOf(\"=\") !== -1 ? \"&\" : \"\";\n    url += stringify(params);\n  }\n\n  return url;\n}\n\nmodule.exports = {\n  parse: parse,\n  stringify: stringify,\n  queryify: queryify,\n  hasQueryParams: hasQueryParams,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvcXVlcnlzdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLEdBQUcsSUFBSTs7QUFFUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL3F1ZXJ5c3RyaW5nLmpzPzQ3ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9ub3RFbXB0eShvYmopIHtcbiAgdmFyIGtleTtcblxuICBmb3IgKGtleSBpbiBvYmopIHtcbiAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyogZXNsaW50LWRpc2FibGUgbm8tbWl4ZWQtb3BlcmF0b3JzICovXG5mdW5jdGlvbiBfaXNBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gKFxuICAgICh2YWx1ZSAmJlxuICAgICAgdHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmXG4gICAgICB0eXBlb2YgdmFsdWUubGVuZ3RoID09PSBcIm51bWJlclwiICYmXG4gICAgICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpID09PSBcIltvYmplY3QgQXJyYXldXCIpIHx8XG4gICAgZmFsc2VcbiAgKTtcbn1cbi8qIGVzbGludC1lbmFibGUgbm8tbWl4ZWQtb3BlcmF0b3JzICovXG5cbmZ1bmN0aW9uIGhhc1F1ZXJ5UGFyYW1zKHVybCkge1xuICB1cmwgPSB1cmwgfHwgd2luZG93LmxvY2F0aW9uLmhyZWY7XG5cbiAgcmV0dXJuIC9cXD8vLnRlc3QodXJsKTtcbn1cblxuZnVuY3Rpb24gcGFyc2UodXJsKSB7XG4gIHZhciBxdWVyeSwgcGFyYW1zO1xuXG4gIHVybCA9IHVybCB8fCB3aW5kb3cubG9jYXRpb24uaHJlZjtcblxuICBpZiAoIWhhc1F1ZXJ5UGFyYW1zKHVybCkpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICBxdWVyeSA9IHVybC5zcGxpdChcIj9cIilbMV0gfHwgXCJcIjtcbiAgcXVlcnkgPSBxdWVyeS5yZXBsYWNlKC8jLiokLywgXCJcIikuc3BsaXQoXCImXCIpO1xuXG4gIHBhcmFtcyA9IHF1ZXJ5LnJlZHVjZShmdW5jdGlvbiAodG9SZXR1cm4sIGtleVZhbHVlKSB7XG4gICAgdmFyIHBhcnRzID0ga2V5VmFsdWUuc3BsaXQoXCI9XCIpO1xuICAgIHZhciBrZXkgPSBkZWNvZGVVUklDb21wb25lbnQocGFydHNbMF0pO1xuICAgIHZhciB2YWx1ZSA9IGRlY29kZVVSSUNvbXBvbmVudChwYXJ0c1sxXSk7XG5cbiAgICB0b1JldHVybltrZXldID0gdmFsdWU7XG5cbiAgICByZXR1cm4gdG9SZXR1cm47XG4gIH0sIHt9KTtcblxuICByZXR1cm4gcGFyYW1zO1xufVxuXG5mdW5jdGlvbiBzdHJpbmdpZnkocGFyYW1zLCBuYW1lc3BhY2UpIHtcbiAgdmFyIGssIHYsIHA7XG4gIHZhciBxdWVyeSA9IFtdO1xuXG4gIGZvciAocCBpbiBwYXJhbXMpIHtcbiAgICBpZiAoIXBhcmFtcy5oYXNPd25Qcm9wZXJ0eShwKSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgdiA9IHBhcmFtc1twXTtcblxuICAgIGlmIChuYW1lc3BhY2UpIHtcbiAgICAgIGlmIChfaXNBcnJheShwYXJhbXMpKSB7XG4gICAgICAgIGsgPSBuYW1lc3BhY2UgKyBcIltdXCI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBrID0gbmFtZXNwYWNlICsgXCJbXCIgKyBwICsgXCJdXCI7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGsgPSBwO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHYgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIHF1ZXJ5LnB1c2goc3RyaW5naWZ5KHYsIGspKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcXVlcnkucHVzaChlbmNvZGVVUklDb21wb25lbnQoaykgKyBcIj1cIiArIGVuY29kZVVSSUNvbXBvbmVudCh2KSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHF1ZXJ5LmpvaW4oXCImXCIpO1xufVxuXG5mdW5jdGlvbiBxdWVyeWlmeSh1cmwsIHBhcmFtcykge1xuICB1cmwgPSB1cmwgfHwgXCJcIjtcblxuICBpZiAocGFyYW1zICE9IG51bGwgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiAmJiBfbm90RW1wdHkocGFyYW1zKSkge1xuICAgIHVybCArPSB1cmwuaW5kZXhPZihcIj9cIikgPT09IC0xID8gXCI/XCIgOiBcIlwiO1xuICAgIHVybCArPSB1cmwuaW5kZXhPZihcIj1cIikgIT09IC0xID8gXCImXCIgOiBcIlwiO1xuICAgIHVybCArPSBzdHJpbmdpZnkocGFyYW1zKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwYXJzZTogcGFyc2UsXG4gIHN0cmluZ2lmeTogc3RyaW5naWZ5LFxuICBxdWVyeWlmeTogcXVlcnlpZnksXG4gIGhhc1F1ZXJ5UGFyYW1zOiBoYXNRdWVyeVBhcmFtcyxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/querystring.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/shadow.js":
/*!**************************************************!*\
  !*** ./node_modules/braintree-web/lib/shadow.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar uuid = __webpack_require__(/*! @braintree/uuid */ \"(ssr)/./node_modules/@braintree/uuid/index.js\");\nvar findRootNode = __webpack_require__(/*! ./find-root-node */ \"(ssr)/./node_modules/braintree-web/lib/find-root-node.js\");\n\n// based on https://github.com/krakenjs/belter/blob/cdddc4f8ddb172d29db9e7e1ad1eeeacfb93e215/src/dom.js#L981-L1031\n// thanks @bluepnume\n\nfunction isShadowElement(element) {\n  element = findRootNode(element);\n\n  return element.toString() === \"[object ShadowRoot]\";\n}\n\nfunction getShadowHost(element) {\n  element = findRootNode(element);\n\n  if (!isShadowElement(element)) {\n    return null;\n  }\n\n  return element.host;\n}\n\nfunction transformToSlot(element, styles) {\n  var styleNode = findRootNode(element).querySelector(\"style\");\n  var shadowHost = getShadowHost(element);\n  var slotName = \"shadow-slot-\" + uuid();\n  var slot = document.createElement(\"slot\");\n  var slotProvider = document.createElement(\"div\");\n\n  slot.setAttribute(\"name\", slotName);\n  element.appendChild(slot);\n\n  slotProvider.setAttribute(\"slot\", slotName);\n  shadowHost.appendChild(slotProvider);\n\n  if (styles) {\n    if (!styleNode) {\n      styleNode = document.createElement(\"style\");\n      element.appendChild(styleNode);\n    }\n\n    styleNode.sheet.insertRule(\n      '::slotted([slot=\"' + slotName + '\"]) { ' + styles + \" }\"\n    );\n  }\n\n  if (isShadowElement(shadowHost)) {\n    return transformToSlot(slotProvider, styles);\n  }\n\n  return slotProvider;\n}\n\nmodule.exports = {\n  isShadowElement: isShadowElement,\n  getShadowHost: getShadowHost,\n  transformToSlot: transformToSlot,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvc2hhZG93LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFdBQVcsbUJBQU8sQ0FBQyxzRUFBaUI7QUFDcEMsbUJBQW1CLG1CQUFPLENBQUMsa0ZBQWtCOztBQUU3QztBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDhDQUE4QyxnQkFBZ0I7QUFDOUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL2xpYi9zaGFkb3cuanM/ZThmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIHV1aWQgPSByZXF1aXJlKFwiQGJyYWludHJlZS91dWlkXCIpO1xudmFyIGZpbmRSb290Tm9kZSA9IHJlcXVpcmUoXCIuL2ZpbmQtcm9vdC1ub2RlXCIpO1xuXG4vLyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20va3Jha2VuanMvYmVsdGVyL2Jsb2IvY2RkZGM0ZjhkZGIxNzJkMjlkYjllN2UxYWQxZWVlYWNmYjkzZTIxNS9zcmMvZG9tLmpzI0w5ODEtTDEwMzFcbi8vIHRoYW5rcyBAYmx1ZXBudW1lXG5cbmZ1bmN0aW9uIGlzU2hhZG93RWxlbWVudChlbGVtZW50KSB7XG4gIGVsZW1lbnQgPSBmaW5kUm9vdE5vZGUoZWxlbWVudCk7XG5cbiAgcmV0dXJuIGVsZW1lbnQudG9TdHJpbmcoKSA9PT0gXCJbb2JqZWN0IFNoYWRvd1Jvb3RdXCI7XG59XG5cbmZ1bmN0aW9uIGdldFNoYWRvd0hvc3QoZWxlbWVudCkge1xuICBlbGVtZW50ID0gZmluZFJvb3ROb2RlKGVsZW1lbnQpO1xuXG4gIGlmICghaXNTaGFkb3dFbGVtZW50KGVsZW1lbnQpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZWxlbWVudC5ob3N0O1xufVxuXG5mdW5jdGlvbiB0cmFuc2Zvcm1Ub1Nsb3QoZWxlbWVudCwgc3R5bGVzKSB7XG4gIHZhciBzdHlsZU5vZGUgPSBmaW5kUm9vdE5vZGUoZWxlbWVudCkucXVlcnlTZWxlY3RvcihcInN0eWxlXCIpO1xuICB2YXIgc2hhZG93SG9zdCA9IGdldFNoYWRvd0hvc3QoZWxlbWVudCk7XG4gIHZhciBzbG90TmFtZSA9IFwic2hhZG93LXNsb3QtXCIgKyB1dWlkKCk7XG4gIHZhciBzbG90ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNsb3RcIik7XG4gIHZhciBzbG90UHJvdmlkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuXG4gIHNsb3Quc2V0QXR0cmlidXRlKFwibmFtZVwiLCBzbG90TmFtZSk7XG4gIGVsZW1lbnQuYXBwZW5kQ2hpbGQoc2xvdCk7XG5cbiAgc2xvdFByb3ZpZGVyLnNldEF0dHJpYnV0ZShcInNsb3RcIiwgc2xvdE5hbWUpO1xuICBzaGFkb3dIb3N0LmFwcGVuZENoaWxkKHNsb3RQcm92aWRlcik7XG5cbiAgaWYgKHN0eWxlcykge1xuICAgIGlmICghc3R5bGVOb2RlKSB7XG4gICAgICBzdHlsZU5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gICAgICBlbGVtZW50LmFwcGVuZENoaWxkKHN0eWxlTm9kZSk7XG4gICAgfVxuXG4gICAgc3R5bGVOb2RlLnNoZWV0Lmluc2VydFJ1bGUoXG4gICAgICAnOjpzbG90dGVkKFtzbG90PVwiJyArIHNsb3ROYW1lICsgJ1wiXSkgeyAnICsgc3R5bGVzICsgXCIgfVwiXG4gICAgKTtcbiAgfVxuXG4gIGlmIChpc1NoYWRvd0VsZW1lbnQoc2hhZG93SG9zdCkpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtVG9TbG90KHNsb3RQcm92aWRlciwgc3R5bGVzKTtcbiAgfVxuXG4gIHJldHVybiBzbG90UHJvdmlkZXI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBpc1NoYWRvd0VsZW1lbnQ6IGlzU2hhZG93RWxlbWVudCxcbiAgZ2V0U2hhZG93SG9zdDogZ2V0U2hhZG93SG9zdCxcbiAgdHJhbnNmb3JtVG9TbG90OiB0cmFuc2Zvcm1Ub1Nsb3QsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/shadow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/snake-case-to-camel-case.js":
/*!********************************************************************!*\
  !*** ./node_modules/braintree-web/lib/snake-case-to-camel-case.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (snakeString) {\n  if (snakeString.indexOf(\"_\") === -1) {\n    return snakeString;\n  }\n\n  return snakeString.toLowerCase().replace(/(\\_\\w)/g, function (match) {\n    return match[1].toUpperCase();\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvc25ha2UtY2FzZS10by1jYW1lbC1jYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL3NuYWtlLWNhc2UtdG8tY2FtZWwtY2FzZS5qcz9hMzY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChzbmFrZVN0cmluZykge1xuICBpZiAoc25ha2VTdHJpbmcuaW5kZXhPZihcIl9cIikgPT09IC0xKSB7XG4gICAgcmV0dXJuIHNuYWtlU3RyaW5nO1xuICB9XG5cbiAgcmV0dXJuIHNuYWtlU3RyaW5nLnRvTG93ZXJDYXNlKCkucmVwbGFjZSgvKFxcX1xcdykvZywgZnVuY3Rpb24gKG1hdGNoKSB7XG4gICAgcmV0dXJuIG1hdGNoWzFdLnRvVXBwZXJDYXNlKCk7XG4gIH0pO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/snake-case-to-camel-case.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/use-min.js":
/*!***************************************************!*\
  !*** ./node_modules/braintree-web/lib/use-min.js ***!
  \***************************************************/
/***/ ((module) => {

eval("\n\nfunction useMin(isDebug) {\n  return isDebug ? \"\" : \".min\";\n}\n\nmodule.exports = useMin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvdXNlLW1pbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvbGliL3VzZS1taW4uanM/MDQzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gdXNlTWluKGlzRGVidWcpIHtcbiAgcmV0dXJuIGlzRGVidWcgPyBcIlwiIDogXCIubWluXCI7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdXNlTWluO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/use-min.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/lib/vendor/polyfill.js":
/*!***********************************************************!*\
  !*** ./node_modules/braintree-web/lib/vendor/polyfill.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("\n\n// NEXT_MAJOR_VERSION old versions of IE don't have atob, in the\n// next major version, we're dropping support for those versions\n// so we can eliminate the need to have this atob polyfill\nvar atobNormalized = typeof atob === \"function\" ? atob : atobPolyfill;\n\nfunction atobPolyfill(base64String) {\n  var a, b, c, b1, b2, b3, b4, i;\n  var base64Matcher = new RegExp(\n    \"^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})([=]{1,2})?$\"\n  );\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n  var result = \"\";\n\n  if (!base64Matcher.test(base64String)) {\n    throw new Error(\"Non base64 encoded input passed to window.atob polyfill\");\n  }\n\n  i = 0;\n  do {\n    b1 = characters.indexOf(base64String.charAt(i++));\n    b2 = characters.indexOf(base64String.charAt(i++));\n    b3 = characters.indexOf(base64String.charAt(i++));\n    b4 = characters.indexOf(base64String.charAt(i++));\n\n    a = ((b1 & 0x3f) << 2) | ((b2 >> 4) & 0x3);\n    b = ((b2 & 0xf) << 4) | ((b3 >> 2) & 0xf);\n    c = ((b3 & 0x3) << 6) | (b4 & 0x3f);\n\n    result +=\n      String.fromCharCode(a) +\n      (b ? String.fromCharCode(b) : \"\") +\n      (c ? String.fromCharCode(c) : \"\");\n  } while (i < base64String.length);\n\n  return result;\n}\n\nmodule.exports = {\n  atob: function (base64String) {\n    return atobNormalized.call(window, base64String);\n  },\n  _atob: atobPolyfill,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvdmVuZG9yL3BvbHlmaWxsLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixFQUFFLG1CQUFtQixFQUFFLGlCQUFpQixFQUFFLGdCQUFnQixFQUFFLE1BQU0sSUFBSTtBQUM3RjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9saWIvdmVuZG9yL3BvbHlmaWxsLmpzP2Y2ZDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIE5FWFRfTUFKT1JfVkVSU0lPTiBvbGQgdmVyc2lvbnMgb2YgSUUgZG9uJ3QgaGF2ZSBhdG9iLCBpbiB0aGVcbi8vIG5leHQgbWFqb3IgdmVyc2lvbiwgd2UncmUgZHJvcHBpbmcgc3VwcG9ydCBmb3IgdGhvc2UgdmVyc2lvbnNcbi8vIHNvIHdlIGNhbiBlbGltaW5hdGUgdGhlIG5lZWQgdG8gaGF2ZSB0aGlzIGF0b2IgcG9seWZpbGxcbnZhciBhdG9iTm9ybWFsaXplZCA9IHR5cGVvZiBhdG9iID09PSBcImZ1bmN0aW9uXCIgPyBhdG9iIDogYXRvYlBvbHlmaWxsO1xuXG5mdW5jdGlvbiBhdG9iUG9seWZpbGwoYmFzZTY0U3RyaW5nKSB7XG4gIHZhciBhLCBiLCBjLCBiMSwgYjIsIGIzLCBiNCwgaTtcbiAgdmFyIGJhc2U2NE1hdGNoZXIgPSBuZXcgUmVnRXhwKFxuICAgIFwiXig/OltBLVphLXowLTkrL117NH0pKig/OltBLVphLXowLTkrL117Mn09PXxbQS1aYS16MC05Ky9dezN9PXxbQS1aYS16MC05Ky9dezR9KShbPV17MSwyfSk/JFwiXG4gICk7XG4gIHZhciBjaGFyYWN0ZXJzID1cbiAgICBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89XCI7XG4gIHZhciByZXN1bHQgPSBcIlwiO1xuXG4gIGlmICghYmFzZTY0TWF0Y2hlci50ZXN0KGJhc2U2NFN0cmluZykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb24gYmFzZTY0IGVuY29kZWQgaW5wdXQgcGFzc2VkIHRvIHdpbmRvdy5hdG9iIHBvbHlmaWxsXCIpO1xuICB9XG5cbiAgaSA9IDA7XG4gIGRvIHtcbiAgICBiMSA9IGNoYXJhY3RlcnMuaW5kZXhPZihiYXNlNjRTdHJpbmcuY2hhckF0KGkrKykpO1xuICAgIGIyID0gY2hhcmFjdGVycy5pbmRleE9mKGJhc2U2NFN0cmluZy5jaGFyQXQoaSsrKSk7XG4gICAgYjMgPSBjaGFyYWN0ZXJzLmluZGV4T2YoYmFzZTY0U3RyaW5nLmNoYXJBdChpKyspKTtcbiAgICBiNCA9IGNoYXJhY3RlcnMuaW5kZXhPZihiYXNlNjRTdHJpbmcuY2hhckF0KGkrKykpO1xuXG4gICAgYSA9ICgoYjEgJiAweDNmKSA8PCAyKSB8ICgoYjIgPj4gNCkgJiAweDMpO1xuICAgIGIgPSAoKGIyICYgMHhmKSA8PCA0KSB8ICgoYjMgPj4gMikgJiAweGYpO1xuICAgIGMgPSAoKGIzICYgMHgzKSA8PCA2KSB8IChiNCAmIDB4M2YpO1xuXG4gICAgcmVzdWx0ICs9XG4gICAgICBTdHJpbmcuZnJvbUNoYXJDb2RlKGEpICtcbiAgICAgIChiID8gU3RyaW5nLmZyb21DaGFyQ29kZShiKSA6IFwiXCIpICtcbiAgICAgIChjID8gU3RyaW5nLmZyb21DaGFyQ29kZShjKSA6IFwiXCIpO1xuICB9IHdoaWxlIChpIDwgYmFzZTY0U3RyaW5nLmxlbmd0aCk7XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGF0b2I6IGZ1bmN0aW9uIChiYXNlNjRTdHJpbmcpIHtcbiAgICByZXR1cm4gYXRvYk5vcm1hbGl6ZWQuY2FsbCh3aW5kb3csIGJhc2U2NFN0cmluZyk7XG4gIH0sXG4gIF9hdG9iOiBhdG9iUG9seWZpbGwsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/lib/vendor/polyfill.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/paypal-checkout/errors.js":
/*!**************************************************************!*\
  !*** ./node_modules/braintree-web/paypal-checkout/errors.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.PayPal Checkout - Creation Error Codes\n * @description Errors that occur when [creating the PayPal Checkout component](./module-braintree-web_paypal-checkout.html#.create).\n * @property {MERCHANT} PAYPAL_NOT_ENABLED Occurs when PayPal is not enabled on the Braintree control panel.\n * @property {MERCHANT} PAYPAL_SANDBOX_ACCOUNT_NOT_LINKED Occurs only when testing in Sandbox, when a PayPal sandbox account is not linked to the merchant account in the Braintree control panel.\n */\n\n/**\n * @name BraintreeError.PayPal Checkout - createPayment Error Codes\n * @description Errors that occur when using the [`createPayment` method](./PayPalCheckout.html#createPayment).\n * @property {MERCHANT} PAYPAL_FLOW_OPTION_REQUIRED Occurs when a required option is missing.\n * @property {MERCHANT} PAYPAL_INVALID_PAYMENT_OPTION Occurs when an option contains an invalid value.\n * @property {NETWORK} PAYPAL_FLOW_FAILED Occurs when something goes wrong when initializing the flow.\n */\n\n/**\n * @name BraintreeError.PayPal Checkout - startVaultInitiatedCheckout Error Codes\n * @description Errors that occur when using the [`startVaultInitiatedCheckout` method](./PayPalCheckout.html#startVaultInitiatedCheckout).\n * @property {MERCHANT} PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED Occurs when a required param is missing when calling the method.\n * @property {MERCHANT} PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED Occurs when PayPal window could not be opened. This often occurs because the call to start the vault initiated flow was not triggered from a click event.\n * @property {CUSTOMER} PAYPAL_START_VAULT_INITIATED_CHECKOUT_CANCELED Occurs when a customer closes the PayPal flow before completion.\n * @property {MERCHANT} PAYPAL_START_VAULT_INITIATED_CHECKOUT_IN_PROGRESS Occurs when the flow is initialized while an authorization is already in progress.\n * @property {NETWORK} PAYPAL_START_VAULT_INITIATED_CHECKOUT_SETUP_FAILED Occurs when something went wrong setting up the flow.\n */\n\n/**\n * @name BraintreeError.PayPal Checkout - tokenizePayment Error Codes\n * @description Errors that occur when using the [`tokenizePayment` method](./PayPalCheckout.html#tokenizePayment).\n * @property {NETWORK} PAYPAL_ACCOUNT_TOKENIZATION_FAILED Occurs when PayPal account could not be tokenized.\n */\n\n/**\n * @name BraintreeError.Paypal Checkout - updatePayment Error Codes\n * @description Errors that occur when using the [`updatePayment` method](./PayPalCheckout.html#updatePayment).\n * @property {MERCHANT} PAYPAL_INVALID_PAYMENT_OPTION Occurs when an option contains an invalid value.\n * @property {MERCHANT} PAYPAL_MISSING_REQUIRED_OPTION Occurs when a required option is missing.\n * @property {NETWORK} PAYPAL_FLOW_FAILED Occurs when something goes wrong when initializing the flow or communicating with the server.\n */\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  PAYPAL_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_NOT_ENABLED\",\n    message: \"PayPal is not enabled for this merchant.\",\n  },\n  PAYPAL_SANDBOX_ACCOUNT_NOT_LINKED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_SANDBOX_ACCOUNT_NOT_LINKED\",\n    message:\n      \"A linked PayPal Sandbox account is required to use PayPal Checkout in Sandbox. See https://developer.paypal.com/braintree/docs/guides/paypal/testing-go-live#linked-paypal-testing for details on linking your PayPal sandbox with Braintree.\",\n  },\n  PAYPAL_ACCOUNT_TOKENIZATION_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"PAYPAL_ACCOUNT_TOKENIZATION_FAILED\",\n    message: \"Could not tokenize user's PayPal account.\",\n  },\n  PAYPAL_FLOW_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"PAYPAL_FLOW_FAILED\",\n    message: \"Could not initialize PayPal flow.\",\n  },\n  PAYPAL_FLOW_OPTION_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_FLOW_OPTION_REQUIRED\",\n    message: \"PayPal flow property is invalid or missing.\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_SETUP_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_SETUP_FAILED\",\n    message: \"Something went wrong when setting up the checkout workflow.\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED\",\n    message:\n      \"PayPal popup failed to open, make sure to initiate the vault checkout in response to a user action.\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_CANCELED\",\n    message: \"Customer closed PayPal popup before authorizing.\",\n  },\n  PAYPAL_START_VAULT_INITIATED_CHECKOUT_IN_PROGRESS: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_START_VAULT_INITIATED_CHECKOUT_IN_PROGRESS\",\n    message: \"Vault initiated checkout already in progress.\",\n  },\n  PAYPAL_INVALID_PAYMENT_OPTION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_INVALID_PAYMENT_OPTION\",\n    message: \"PayPal payment options are invalid.\",\n  },\n  PAYPAL_MISSING_REQUIRED_OPTION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"PAYPAL_MISSING_REQUIRED_OPTION\",\n    message: \"Missing required option.\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/paypal-checkout/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/paypal-checkout/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/braintree-web/paypal-checkout/index.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * @module braintree-web/paypal-checkout\n * @description A component to integrate with the [PayPal JS SDK](https://github.com/paypal/paypal-checkout-components).\n */\n\nvar basicComponentVerification = __webpack_require__(/*! ../lib/basic-component-verification */ \"(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar PayPalCheckout = __webpack_require__(/*! ./paypal-checkout */ \"(ssr)/./node_modules/braintree-web/paypal-checkout/paypal-checkout.js\");\nvar VERSION = \"3.99.0\";\n\n/**\n * @static\n * @function create\n * @description There are two ways to integrate the PayPal Checkout component. See the [PayPal Checkout constructor documentation](PayPalCheckout.html#PayPalCheckout) for more information and examples.\n *\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {string} [options.merchantAccountId] A non-default merchant account ID to use for tokenization.\n * @param {boolean} [options.autoSetDataUserIdToken=false] Whether or not to render the PayPal SDK button with a customer's vaulted PayPal account. Must be used in conjunction with a Client Token generated with a customer id.\n * @param {callback} [callback] The second argument, `data`, is the {@link PayPalCheckout} instance.\n * @example\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   // set up the PayPal JS SDK\n * }).catch(function (err) {\n *   console.error('Error!', err);\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nfunction create(options) {\n  var name = \"PayPal Checkout\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var instance = new PayPalCheckout(options);\n\n      return instance._initialize(options);\n    });\n}\n\n/**\n * @static\n * @function isSupported\n * @description Returns true if PayPal Checkout [supports this browser](index.html#browser-support-webviews).\n * @deprecated Previously, this method checked for Popup support in the browser. The PayPal JS SDK now falls back to a modal if popups are not supported.\n * @returns {Boolean} Returns true if PayPal Checkout supports this browser.\n */\nfunction isSupported() {\n  return true;\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  isSupported: isSupported,\n  /**\n   * @description The current version of the SDK, i.e. `{@pkg version}`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9wYXlwYWwtY2hlY2tvdXQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUMsbUJBQU8sQ0FBQyxtSEFBcUM7QUFDOUUsa0JBQWtCLG1CQUFPLENBQUMsa0dBQXlCO0FBQ25ELHFCQUFxQixtQkFBTyxDQUFDLGdHQUFtQjtBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUSxvQkFBb0IsY0FBYztBQUNyRCxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsU0FBUztBQUNwQixXQUFXLFVBQVUsZ0RBQWdELHNCQUFzQjtBQUMzRjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLE1BQU07QUFDTixJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0osYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELGFBQWE7QUFDdEUsWUFBWTtBQUNaO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9wYXlwYWwtY2hlY2tvdXQvaW5kZXguanM/NWFjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogQG1vZHVsZSBicmFpbnRyZWUtd2ViL3BheXBhbC1jaGVja291dFxuICogQGRlc2NyaXB0aW9uIEEgY29tcG9uZW50IHRvIGludGVncmF0ZSB3aXRoIHRoZSBbUGF5UGFsIEpTIFNES10oaHR0cHM6Ly9naXRodWIuY29tL3BheXBhbC9wYXlwYWwtY2hlY2tvdXQtY29tcG9uZW50cykuXG4gKi9cblxudmFyIGJhc2ljQ29tcG9uZW50VmVyaWZpY2F0aW9uID0gcmVxdWlyZShcIi4uL2xpYi9iYXNpYy1jb21wb25lbnQtdmVyaWZpY2F0aW9uXCIpO1xudmFyIHdyYXBQcm9taXNlID0gcmVxdWlyZShcIkBicmFpbnRyZWUvd3JhcC1wcm9taXNlXCIpO1xudmFyIFBheVBhbENoZWNrb3V0ID0gcmVxdWlyZShcIi4vcGF5cGFsLWNoZWNrb3V0XCIpO1xudmFyIFZFUlNJT04gPSBcIjMuOTkuMFwiO1xuXG4vKipcbiAqIEBzdGF0aWNcbiAqIEBmdW5jdGlvbiBjcmVhdGVcbiAqIEBkZXNjcmlwdGlvbiBUaGVyZSBhcmUgdHdvIHdheXMgdG8gaW50ZWdyYXRlIHRoZSBQYXlQYWwgQ2hlY2tvdXQgY29tcG9uZW50LiBTZWUgdGhlIFtQYXlQYWwgQ2hlY2tvdXQgY29uc3RydWN0b3IgZG9jdW1lbnRhdGlvbl0oUGF5UGFsQ2hlY2tvdXQuaHRtbCNQYXlQYWxDaGVja291dCkgZm9yIG1vcmUgaW5mb3JtYXRpb24gYW5kIGV4YW1wbGVzLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zIENyZWF0aW9uIG9wdGlvbnM6XG4gKiBAcGFyYW0ge0NsaWVudH0gW29wdGlvbnMuY2xpZW50XSBBIHtAbGluayBDbGllbnR9IGluc3RhbmNlLlxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLmF1dGhvcml6YXRpb25dIEEgdG9rZW5pemF0aW9uS2V5IG9yIGNsaWVudFRva2VuLiBDYW4gYmUgdXNlZCBpbiBwbGFjZSBvZiBgb3B0aW9ucy5jbGllbnRgLlxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLm1lcmNoYW50QWNjb3VudElkXSBBIG5vbi1kZWZhdWx0IG1lcmNoYW50IGFjY291bnQgSUQgdG8gdXNlIGZvciB0b2tlbml6YXRpb24uXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLmF1dG9TZXREYXRhVXNlcklkVG9rZW49ZmFsc2VdIFdoZXRoZXIgb3Igbm90IHRvIHJlbmRlciB0aGUgUGF5UGFsIFNESyBidXR0b24gd2l0aCBhIGN1c3RvbWVyJ3MgdmF1bHRlZCBQYXlQYWwgYWNjb3VudC4gTXVzdCBiZSB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggYSBDbGllbnQgVG9rZW4gZ2VuZXJhdGVkIHdpdGggYSBjdXN0b21lciBpZC5cbiAqIEBwYXJhbSB7Y2FsbGJhY2t9IFtjYWxsYmFja10gVGhlIHNlY29uZCBhcmd1bWVudCwgYGRhdGFgLCBpcyB0aGUge0BsaW5rIFBheVBhbENoZWNrb3V0fSBpbnN0YW5jZS5cbiAqIEBleGFtcGxlXG4gKiBicmFpbnRyZWUuY2xpZW50LmNyZWF0ZSh7XG4gKiAgIGF1dGhvcml6YXRpb246ICdhdXRob3JpemF0aW9uJ1xuICogfSkudGhlbihmdW5jdGlvbiAoY2xpZW50SW5zdGFuY2UpIHtcbiAqICAgcmV0dXJuIGJyYWludHJlZS5wYXlwYWxDaGVja291dC5jcmVhdGUoe1xuICogICAgIGNsaWVudDogY2xpZW50SW5zdGFuY2VcbiAqICAgfSk7XG4gKiB9KS50aGVuKGZ1bmN0aW9uIChwYXlwYWxDaGVja291dEluc3RhbmNlKSB7XG4gKiAgIC8vIHNldCB1cCB0aGUgUGF5UGFsIEpTIFNES1xuICogfSkuY2F0Y2goZnVuY3Rpb24gKGVycikge1xuICogICBjb25zb2xlLmVycm9yKCdFcnJvciEnLCBlcnIpO1xuICogfSk7XG4gKiBAcmV0dXJucyB7KFByb21pc2V8dm9pZCl9IFJldHVybnMgYSBwcm9taXNlIGlmIG5vIGNhbGxiYWNrIGlzIHByb3ZpZGVkLlxuICovXG5mdW5jdGlvbiBjcmVhdGUob3B0aW9ucykge1xuICB2YXIgbmFtZSA9IFwiUGF5UGFsIENoZWNrb3V0XCI7XG5cbiAgcmV0dXJuIGJhc2ljQ29tcG9uZW50VmVyaWZpY2F0aW9uXG4gICAgLnZlcmlmeSh7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgY2xpZW50OiBvcHRpb25zLmNsaWVudCxcbiAgICAgIGF1dGhvcml6YXRpb246IG9wdGlvbnMuYXV0aG9yaXphdGlvbixcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBQYXlQYWxDaGVja291dChvcHRpb25zKTtcblxuICAgICAgcmV0dXJuIGluc3RhbmNlLl9pbml0aWFsaXplKG9wdGlvbnMpO1xuICAgIH0pO1xufVxuXG4vKipcbiAqIEBzdGF0aWNcbiAqIEBmdW5jdGlvbiBpc1N1cHBvcnRlZFxuICogQGRlc2NyaXB0aW9uIFJldHVybnMgdHJ1ZSBpZiBQYXlQYWwgQ2hlY2tvdXQgW3N1cHBvcnRzIHRoaXMgYnJvd3Nlcl0oaW5kZXguaHRtbCNicm93c2VyLXN1cHBvcnQtd2Vidmlld3MpLlxuICogQGRlcHJlY2F0ZWQgUHJldmlvdXNseSwgdGhpcyBtZXRob2QgY2hlY2tlZCBmb3IgUG9wdXAgc3VwcG9ydCBpbiB0aGUgYnJvd3Nlci4gVGhlIFBheVBhbCBKUyBTREsgbm93IGZhbGxzIGJhY2sgdG8gYSBtb2RhbCBpZiBwb3B1cHMgYXJlIG5vdCBzdXBwb3J0ZWQuXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gUmV0dXJucyB0cnVlIGlmIFBheVBhbCBDaGVja291dCBzdXBwb3J0cyB0aGlzIGJyb3dzZXIuXG4gKi9cbmZ1bmN0aW9uIGlzU3VwcG9ydGVkKCkge1xuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNyZWF0ZTogd3JhcFByb21pc2UoY3JlYXRlKSxcbiAgaXNTdXBwb3J0ZWQ6IGlzU3VwcG9ydGVkLFxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgdGhlIFNESywgaS5lLiBge0Bwa2cgdmVyc2lvbn1gLlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgVkVSU0lPTjogVkVSU0lPTixcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/paypal-checkout/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/paypal-checkout/paypal-checkout.js":
/*!***********************************************************************!*\
  !*** ./node_modules/braintree-web/paypal-checkout/paypal-checkout.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar assign = (__webpack_require__(/*! ../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar createDeferredClient = __webpack_require__(/*! ../lib/create-deferred-client */ \"(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js\");\nvar createAssetsUrl = __webpack_require__(/*! ../lib/create-assets-url */ \"(ssr)/./node_modules/braintree-web/lib/create-assets-url.js\");\nvar ExtendedPromise = __webpack_require__(/*! @braintree/extended-promise */ \"(ssr)/./node_modules/@braintree/extended-promise/dist/index.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar convertToBraintreeError = __webpack_require__(/*! ../lib/convert-to-braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-to-braintree-error.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/paypal-checkout/errors.js\");\nvar constants = __webpack_require__(/*! ../paypal/shared/constants */ \"(ssr)/./node_modules/braintree-web/paypal/shared/constants.js\");\nvar frameService = __webpack_require__(/*! ../lib/frame-service/external */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/external/index.js\");\nvar createAuthorizationData = __webpack_require__(/*! ../lib/create-authorization-data */ \"(ssr)/./node_modules/braintree-web/lib/create-authorization-data.js\");\nvar methods = __webpack_require__(/*! ../lib/methods */ \"(ssr)/./node_modules/braintree-web/lib/methods.js\");\nvar useMin = __webpack_require__(/*! ../lib/use-min */ \"(ssr)/./node_modules/braintree-web/lib/use-min.js\");\nvar convertMethodsToError = __webpack_require__(/*! ../lib/convert-methods-to-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\");\nvar querystring = __webpack_require__(/*! ../lib/querystring */ \"(ssr)/./node_modules/braintree-web/lib/querystring.js\");\nvar VERSION = \"3.99.0\";\nvar INTEGRATION_TIMEOUT_MS = (__webpack_require__(/*! ../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").INTEGRATION_TIMEOUT_MS);\n\nvar REQUIRED_PARAMS_FOR_START_VAULT_INITIATED_CHECKOUT = [\n  \"amount\",\n  \"currency\",\n  \"vaultInitiatedCheckoutPaymentMethodToken\",\n];\n\nvar PAYPAL_SDK_PRELOAD_URL =\n  \"https://www.{ENV}paypal.com/smart/buttons/preload\";\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\n/**\n * PayPal Checkout tokenized payload. Returned in {@link PayPalCheckout#tokenizePayment}'s callback as the second argument, `data`.\n * @typedef {object} PayPalCheckout~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {string} type The payment method type, always `PayPalAccount`.\n * @property {object} details Additional PayPal account details.\n * @property {string} details.email User's email address.\n * @property {string} details.payerId User's payer ID, the unique identifier for each PayPal account.\n * @property {string} details.firstName User's given name.\n * @property {string} details.lastName User's surname.\n * @property {?string} details.countryCode User's 2 character country code.\n * @property {?string} details.phone User's phone number (e.g. 555-867-5309).\n * @property {?object} details.shippingAddress User's shipping address details, only available if shipping address is enabled.\n * @property {string} details.shippingAddress.recipientName Recipient of postage.\n * @property {string} details.shippingAddress.line1 Street number and name.\n * @property {string} details.shippingAddress.line2 Extended address.\n * @property {string} details.shippingAddress.city City or locality.\n * @property {string} details.shippingAddress.state State or region.\n * @property {string} details.shippingAddress.postalCode Postal code.\n * @property {string} details.shippingAddress.countryCode 2 character country code (e.g. US).\n * @property {?object} details.billingAddress User's billing address details.\n * Not available to all merchants; [contact support](https://developer.paypal.com/braintree/help) for details on eligibility and enabling this feature.\n * Alternatively, see `shippingAddress` above as an available client option.\n * @property {string} details.billingAddress.line1 Street number and name.\n * @property {string} details.billingAddress.line2 Extended address.\n * @property {string} details.billingAddress.city City or locality.\n * @property {string} details.billingAddress.state State or region.\n * @property {string} details.billingAddress.postalCode Postal code.\n * @property {string} details.billingAddress.countryCode 2 character country code (e.g. US).\n * @property {?object} creditFinancingOffered This property will only be present when the customer pays with PayPal Credit.\n * @property {object} creditFinancingOffered.totalCost This is the estimated total payment amount including interest and fees the user will pay during the lifetime of the loan.\n * @property {string} creditFinancingOffered.totalCost.value An amount defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm) for the given currency.\n * @property {string} creditFinancingOffered.totalCost.currency 3 letter currency code as defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm).\n * @property {number} creditFinancingOffered.term Length of financing terms in months.\n * @property {object} creditFinancingOffered.monthlyPayment This is the estimated amount per month that the customer will need to pay including fees and interest.\n * @property {string} creditFinancingOffered.monthlyPayment.value An amount defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm) for the given currency.\n * @property {string} creditFinancingOffered.monthlyPayment.currency 3 letter currency code as defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm).\n * @property {object} creditFinancingOffered.totalInterest Estimated interest or fees amount the payer will have to pay during the lifetime of the loan.\n * @property {string} creditFinancingOffered.totalInterest.value An amount defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm) for the given currency.\n * @property {string} creditFinancingOffered.totalInterest.currency 3 letter currency code as defined by [ISO 4217](https://www.iso.org/iso/home/standards/currency_codes.htm).\n * @property {boolean} creditFinancingOffered.payerAcceptance Status of whether the customer ultimately was approved for and chose to make the payment using the approved installment credit.\n * @property {boolean} creditFinancingOffered.cartAmountImmutable Indicates whether the cart amount is editable after payer's acceptance on PayPal side.\n */\n\n/**\n * @class\n * @param {object} options see {@link module:braintree-web/paypal-checkout.create|paypal-checkout.create}\n * @classdesc This class represents a PayPal Checkout component that coordinates with the {@link https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page|PayPal SDK}. Instances of this class can generate payment data and tokenize authorized payments.\n *\n * All UI (such as preventing actions on the parent page while authentication is in progress) is managed by the {@link https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page|PayPal SDK}. You must provide your PayPal `client-id` as a query parameter. You can [retrieve this value from the PayPal Dashboard](https://developer.paypal.com/docs/checkout/integrate/#1-get-paypal-rest-api-credentials).\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/paypal-checkout.create|braintree-web.paypal-checkout.create} instead.</strong>\n *\n * #### Integrate Checkout Flow with PayPal SDK\n *\n * You must have [PayPal's script, configured with various query parameters](https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page), loaded on your page:\n *\n * ```html\n * <script src=\"https://www.paypal.com/sdk/js?client-id=your-sandbox-or-prod-client-id\"></script>\n * <div id=\"paypal-button\"></div>\n * ```\n *\n * When passing values in the `createPayment` method, make sure they match the [corresponding parameters in the query parameters for the PayPal SDK script](https://developer.paypal.com/docs/checkout/reference/customize-sdk/).\n *\n * ```javascript\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   return paypal.Buttons({\n *     createOrder: function () {\n *       return paypalCheckoutInstance.createPayment({\n *         flow: 'checkout',\n *         currency: 'USD',\n *         amount: '10.00',\n *         intent: 'capture' // this value must either be `capture` or match the intent passed into the PayPal SDK intent query parameter\n *         // your other createPayment options here\n *       });\n *     },\n *\n *     onApprove: function (data, actions) {\n *       // some logic here before tokenization happens below\n *       return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n *         // Submit payload.nonce to your server\n *       });\n *     },\n *\n *     onCancel: function () {\n *       // handle case where user cancels\n *     },\n *\n *     onError: function (err) {\n *       // handle case where error occurs\n *     }\n *   }).render('#paypal-button');\n * }).catch(function (err) {\n *  console.error('Error!', err);\n * });\n * ```\n *\n * #### Integrate Vault Flow with PayPal SDK\n *\n * You must have [PayPal's script, configured with various query parameters](https://developer.paypal.com/docs/checkout/integrate/#2-add-the-paypal-script-to-your-web-page), loaded on your page:\n *\n * ```html\n * <script src=\"https://www.paypal.com/sdk/js?client-id=your-sandbox-or-prod-client-id&vault=true\"></script>\n * <div id=\"paypal-button\"></div>\n * ```\n *\n * When passing values in the `createPayment` method, make sure they match the [corresponding parameters in the query parameters for the PayPal SDK script](https://developer.paypal.com/docs/checkout/reference/customize-sdk/).\n *\n * ```javascript\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   return paypal.Buttons({\n *     createBillingAgreement: function () {\n *       return paypalCheckoutInstance.createPayment({\n *         flow: 'vault'\n *         // your other createPayment options here\n *       });\n *     },\n *\n *     onApprove: function (data, actions) {\n *       // some logic here before tokenization happens below\n *       return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n *         // Submit payload.nonce to your server\n *       });\n *     },\n *\n *     onCancel: function () {\n *       // handle case where user cancels\n *     },\n *\n *     onError: function (err) {\n *       // handle case where error occurs\n *     }\n *   }).render('#paypal-button');\n * }).catch(function (err) {\n *  console.error('Error!', err);\n * });\n * ```\n *\n * #### Integrate with Checkout.js (deprecated PayPal SDK)\n *\n * If you are creating a new PayPal integration, please follow the previous integration guide to use the current version of the PayPal SDK. Use this integration guide only as a reference if you are already integrated with Checkout.js.\n *\n * You must have PayPal's Checkout.js script loaded on your page.\n *\n * ```html\n * <script src=\"https://www.paypalobjects.com/api/checkout.js\" data-version-4 log-level=\"warn\"></script>\n * ```\n *\n * ```javascript\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   return paypal.Button.render({\n *     env: 'production', // or 'sandbox'\n *\n *     payment: function () {\n *       return paypalCheckoutInstance.createPayment({\n *         // your createPayment options here\n *       });\n *     },\n *\n *     onAuthorize: function (data, actions) {\n *       // some logic here before tokenization happens below\n *       return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n *         // Submit payload.nonce to your server\n *       });\n *     }\n *   }, '#paypal-button');\n * }).catch(function (err) {\n *  console.error('Error!', err);\n * });\n * ```\n */\nfunction PayPalCheckout(options) {\n  this._merchantAccountId = options.merchantAccountId;\n  // TODO remove this requirement for it to be opt in.\n  // This feature is not yet GA, so we're intentionally making\n  // it opt in and not publicly documenting it yet. Once it's\n  // GA, we can remove the requirement to opt in to it\n  this._autoSetDataUserIdToken = Boolean(options.autoSetDataUserIdToken);\n}\n\nPayPalCheckout.prototype._initialize = function (options) {\n  var config;\n\n  if (options.client) {\n    config = options.client.getConfiguration();\n    this._authorizationInformation = {\n      fingerprint: config.authorizationFingerprint,\n      environment: config.gatewayConfiguration.environment,\n    };\n  } else {\n    config = createAuthorizationData(options.authorization);\n    this._authorizationInformation = {\n      fingerprint: config.attrs.authorizationFingerprint,\n      environment: config.environment,\n    };\n  }\n\n  this._clientPromise = createDeferredClient\n    .create({\n      authorization: options.authorization,\n      client: options.client,\n      debug: options.debug,\n      assetsUrl: createAssetsUrl.create(options.authorization),\n      name: \"PayPal Checkout\",\n    })\n    .then(\n      function (client) {\n        this._configuration = client.getConfiguration();\n\n        // we skip these checks if a merchant account id is\n        // passed in, because the default merchant account\n        // may not have paypal enabled\n        if (!this._merchantAccountId) {\n          if (!this._configuration.gatewayConfiguration.paypalEnabled) {\n            this._setupError = new BraintreeError(errors.PAYPAL_NOT_ENABLED);\n          } else if (\n            this._configuration.gatewayConfiguration.paypal\n              .environmentNoNetwork === true\n          ) {\n            this._setupError = new BraintreeError(\n              errors.PAYPAL_SANDBOX_ACCOUNT_NOT_LINKED\n            );\n          }\n        }\n\n        if (this._setupError) {\n          return Promise.reject(this._setupError);\n        }\n\n        analytics.sendEvent(client, \"paypal-checkout.initialized\");\n        this._frameServicePromise = this._setupFrameService(client);\n\n        return client;\n      }.bind(this)\n    );\n\n  // if client was passed in, let config checks happen before\n  // resolving the instance. Otherwise, just resolve the instance\n  if (options.client) {\n    return this._clientPromise.then(\n      function () {\n        return this;\n      }.bind(this)\n    );\n  }\n\n  return Promise.resolve(this);\n};\n\nPayPalCheckout.prototype._setupFrameService = function (client) {\n  var frameServicePromise = new ExtendedPromise();\n  var config = client.getConfiguration();\n  var timeoutRef = setTimeout(function () {\n    analytics.sendEvent(client, \"paypal-checkout.frame-service.timed-out\");\n    frameServicePromise.reject(\n      new BraintreeError(\n        errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_SETUP_FAILED\n      )\n    );\n  }, INTEGRATION_TIMEOUT_MS);\n\n  this._assetsUrl =\n    config.gatewayConfiguration.paypal.assetsUrl + \"/web/\" + VERSION;\n  this._isDebug = config.isDebug;\n  // Note: this is using the static landing frame that the deprecated PayPal component builds and uses\n  this._loadingFrameUrl =\n    this._assetsUrl +\n    \"/html/paypal-landing-frame\" +\n    useMin(this._isDebug) +\n    \".html\";\n\n  frameService.create(\n    {\n      name: \"braintreepaypallanding\",\n      dispatchFrameUrl:\n        this._assetsUrl +\n        \"/html/dispatch-frame\" +\n        useMin(this._isDebug) +\n        \".html\",\n      openFrameUrl: this._loadingFrameUrl,\n    },\n    function (service) {\n      this._frameService = service;\n      clearTimeout(timeoutRef);\n\n      frameServicePromise.resolve();\n    }.bind(this)\n  );\n\n  return frameServicePromise;\n};\n\n/**\n * @typedef {object} PayPalCheckout~lineItem\n * @property {string} quantity Number of units of the item purchased. This value must be a whole number and can't be negative or zero.\n * @property {string} unitAmount Per-unit price of the item. Can include up to 2 decimal places. This value can't be negative or zero.\n * @property {string} name Item name. Maximum 127 characters.\n * @property {string} kind Indicates whether the line item is a debit (sale) or credit (refund) to the customer. Accepted values: `debit` and `credit`.\n * @property {?string} unitTaxAmount Per-unit tax price of the item. Can include up to 2 decimal places. This value can't be negative or zero.\n * @property {?string} description Item description. Maximum 127 characters.\n * @property {?string} productCode Product or UPC code for the item. Maximum 127 characters.\n * @property {?string} url The URL to product information.\n */\n\n/**\n * @typedef {object} PayPalCheckout~shippingOption\n * @property {string} id A unique ID that identifies a payer-selected shipping option.\n * @property {string} label A description that the payer sees, which helps them choose an appropriate shipping option. For example, `Free Shipping`, `USPS Priority Shipping`, `Expédition prioritaire USPS`, or `USPS yōuxiān fā huò`. Localize this description to the payer's locale.\n * @property {boolean} selected If `selected = true` is specified as part of the API request it represents the shipping option that the payee/merchant expects to be pre-selected for the payer when they first view the shipping options within the PayPal checkout experience. As part of the response if a shipping option has `selected = true` it represents the shipping option that the payer selected during the course of checkout with PayPal. Only 1 `shippingOption` can be set to `selected = true`.\n * @property {string} type The method by which the payer wants to get their items. The possible values are:\n * * `SHIPPING` - The payer intends to receive the items at a specified address.\n * * `PICKUP` - The payer intends to pick up the items at a specified address. For example, a store address.\n * @property {object} amount The shipping cost for the selected option.\n * @property {string} amount.currency The three-character ISO-4217 currency code. PayPal does not support all currencies.\n * @property {string} amount.value The amount the shipping option will cost. Includes the specified number of digits after decimal separator for the ISO-4217 currency code.\n */\n\n/**\n * Creates a PayPal payment ID or billing token using the given options. This is meant to be passed to the PayPal JS SDK.\n * When a {@link callback} is defined, the function returns undefined and invokes the callback with the id to be used with the PayPal JS SDK. Otherwise, it returns a Promise that resolves with the id.\n * @public\n * @param {object} options All options for the PayPalCheckout component.\n * @param {string} options.flow Set to 'checkout' for one-time payment flow, or 'vault' for Vault flow. If 'vault' is used with a client token generated with a customer ID, the PayPal account will be added to that customer as a saved payment method.\n * @param {string} [options.intent=authorize]\n * * `authorize` - Submits the transaction for authorization but not settlement.\n * * `order` - Validates the transaction without an authorization (i.e. without holding funds). Useful for authorizing and capturing funds up to 90 days after the order has been placed. Only available for Checkout flow.\n * * `capture` - Payment will be immediately submitted for settlement upon creating a transaction. `sale` can be used as an alias for this value.\n * @param {boolean} [options.offerCredit=false] Offers PayPal Credit as the default funding instrument for the transaction. If the customer isn't pre-approved for PayPal Credit, they will be prompted to apply for it.\n * @param {(string|number)} [options.amount] The amount of the transaction. Required when using the Checkout flow. Should not include shipping cost.\n * * Supports up to 2 digits after the decimal point\n * @param {string} [options.currency] The currency code of the amount, such as 'USD'. Required when using the Checkout flow.\n * @param {string} [options.displayName] The merchant name displayed inside of the PayPal lightbox; defaults to the company name on your Braintree account\n * @param {boolean} [options.requestBillingAgreement] If `true` and `flow = checkout`, the customer will be prompted to consent to a billing agreement during the checkout flow. This value is ignored when `flow = vault`.\n * @param {object} [options.billingAgreementDetails] When `requestBillingAgreement = true`, allows for details to be set for the billing agreement portion of the flow.\n * @param {string} [options.billingAgreementDetails.description] Description of the billing agreement to display to the customer.\n * @param {string} [options.vaultInitiatedCheckoutPaymentMethodToken] Use the payment method nonce representing a PayPal account with a Billing Agreement ID to create the payment and redirect the customer to select a new financial instrument. This option is only applicable to the `checkout` flow.\n * @param {shippingOption[]} [options.shippingOptions] List of shipping options offered by the payee or merchant to the payer to ship or pick up their items.\n * @param {boolean} [options.enableShippingAddress=false] Returns a shipping address object in {@link PayPal#tokenize}.\n * @param {object} [options.shippingAddressOverride] Allows you to pass a shipping address you have already collected into the PayPal payment flow.\n * @param {string} options.shippingAddressOverride.line1 Street address.\n * @param {string} [options.shippingAddressOverride.line2] Street address (extended).\n * @param {string} options.shippingAddressOverride.city City.\n * @param {string} options.shippingAddressOverride.state State.\n * @param {string} options.shippingAddressOverride.postalCode Postal code.\n * @param {string} options.shippingAddressOverride.countryCode Country.\n * @param {string} [options.shippingAddressOverride.phone] Phone number.\n * @param {string} [options.shippingAddressOverride.recipientName] Recipient's name.\n * @param {boolean} [options.shippingAddressEditable=true] Set to false to disable user editing of the shipping address.\n * @param {string} [options.billingAgreementDescription] Use this option to set the description of the preapproved payment agreement visible to customers in their PayPal profile during Vault flows. Max 255 characters.\n * @param {string} [options.landingPageType] Use this option to specify the PayPal page to display when a user lands on the PayPal site to complete the payment.\n * * `login` - A PayPal account login page is used.\n * * `billing` - A non-PayPal account landing page is used.\n * @param {lineItem[]} [options.lineItems] The {@link PayPalCheckout~lineItem|line items} for this transaction. It can include up to 249 line items.\n * @param {callback} [callback] The second argument is a PayPal `paymentId` or `billingToken` string, depending on whether `options.flow` is `checkout` or `vault`. This is also what is resolved by the promise if no callback is provided.\n * @example\n * // this paypal object is created by the PayPal JS SDK\n * // see https://github.com/paypal/paypal-checkout-components\n * paypal.Buttons({\n *   createOrder: function () {\n *     // when createPayment resolves, it is automatically passed to the PayPal JS SDK\n *     return paypalCheckoutInstance.createPayment({\n *       flow: 'checkout',\n *       amount: '10.00',\n *       currency: 'USD',\n *       intent: 'capture' // this value must either be `capture` or match the intent passed into the PayPal SDK intent query parameter\n *     });\n *   },\n *   // Add other options, e.g. onApproved, onCancel, onError\n * }).render('#paypal-button');\n *\n * @example\n * // shippingOptions are passed to createPayment. You can review the result from onAuthorize to determine which shipping option id was selected.\n * ```javascript\n * braintree.client.create({\n *   authorization: 'authorization'\n * }).then(function (clientInstance) {\n *   return braintree.paypalCheckout.create({\n *     client: clientInstance\n *   });\n * }).then(function (paypalCheckoutInstance) {\n *   return paypal.Button.render({\n *     env: 'production'\n *\n *     payment: function () {\n *       return paypalCheckoutInstance.createPayment({\n *         flow: 'checkout',\n *         amount: '10.00',\n *         currency: 'USD',\n *         shippingOptions: [\n *           {\n *             id: 'UUID-9',\n *             type: 'PICKUP',\n *             label: 'Store Location Five',\n *             selected: true,\n *             amount: {\n *               value: '1.00',\n *               currency: 'USD'\n *             }\n *           },\n *           {\n *             id: 'shipping-speed-fast',\n *             type: 'SHIPPING',\n *             label: 'Fast Shipping',\n *             selected: false,\n *             amount: {\n *               value: '1.00',\n *               currency: 'USD'\n *             }\n *           },\n *           {\n *             id: 'shipping-speed-slow',\n *             type: 'SHIPPING',\n *             label: 'Slow Shipping',\n *             selected: false,\n *             amount: {\n *               value: '1.00',\n *               currency: 'USD'\n *             }\n *           }\n *         ]\n *       });\n *     },\n *\n *     onAuthorize: function (data, actions) {\n *       return paypalCheckoutInstance.tokenizePayment(data).then(function (payload) {\n *         // Submit payload.nonce to your server\n *       });\n *     }\n *   }, '#paypal-button');\n * }).catch(function (err) {\n *  console.error('Error!', err);\n * });\n * ```\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.createPayment = function (options) {\n  if (!options || !constants.FLOW_ENDPOINTS.hasOwnProperty(options.flow)) {\n    return Promise.reject(\n      new BraintreeError(errors.PAYPAL_FLOW_OPTION_REQUIRED)\n    );\n  }\n\n  analytics.sendEvent(this._clientPromise, \"paypal-checkout.createPayment\");\n\n  return this._createPaymentResource(options).then(function (response) {\n    var flowToken, urlParams;\n\n    if (options.flow === \"checkout\") {\n      urlParams = querystring.parse(response.paymentResource.redirectUrl);\n      flowToken = urlParams.token;\n    } else {\n      flowToken = response.agreementSetup.tokenId;\n    }\n\n    return flowToken;\n  });\n};\n\nPayPalCheckout.prototype._createPaymentResource = function (options, config) {\n  var self = this;\n  var endpoint = \"paypal_hermes/\" + constants.FLOW_ENDPOINTS[options.flow];\n\n  delete this.intentFromCreatePayment;\n\n  config = config || {};\n\n  if (options.offerCredit === true) {\n    analytics.sendEvent(this._clientPromise, \"paypal-checkout.credit.offered\");\n  }\n\n  return this._clientPromise\n    .then(function (client) {\n      return client\n        .request({\n          endpoint: endpoint,\n          method: \"post\",\n          data: self._formatPaymentResourceData(options, config),\n        })\n        .then(function (data) {\n          self.intentFromCreatePayment = options.intent;\n\n          return data;\n        });\n    })\n    .catch(function (err) {\n      var status;\n\n      if (self._setupError) {\n        return Promise.reject(self._setupError);\n      }\n\n      status = err.details && err.details.httpStatus;\n\n      if (status === 422) {\n        return Promise.reject(\n          new BraintreeError({\n            type: errors.PAYPAL_INVALID_PAYMENT_OPTION.type,\n            code: errors.PAYPAL_INVALID_PAYMENT_OPTION.code,\n            message: errors.PAYPAL_INVALID_PAYMENT_OPTION.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      }\n\n      return Promise.reject(\n        convertToBraintreeError(err, {\n          type: errors.PAYPAL_FLOW_FAILED.type,\n          code: errors.PAYPAL_FLOW_FAILED.code,\n          message: errors.PAYPAL_FLOW_FAILED.message,\n        })\n      );\n    });\n};\n\n/**\n * Use this function to update {@link PayPalCheckout~lineItem|line items} and/or {@link PayPalCheckout~shippingOption|shipping options} associated with a PayPalCheckout flow (`paymentId`).\n * When a {@link callback} is defined, this function returns undefined and invokes the callback. The second callback argument, <code>data</code>, is the returned server data. If no callback is provided, `updatePayment` returns a promise that resolves with the server data.\n * @public\n * @param {object} options All options for the PayPalCheckout component.\n * @param {string} options.paymentId This should be PayPal `paymentId`.\n * @param {(string|number)} options.amount The amount of the transaction, including the amount of the selected shipping option, and all `line_items`.\n * * Supports up to 2 decimal digits.\n * @param {string} options.currency The currency code of the amount, such as 'USD'. Required when using the Checkout flow.\n * @param {shippingOption[]} [options.shippingOptions] List of {@link PayPalCheckout~shippingOption|shipping options} offered by the payee or merchant to the payer to ship or pick up their items.\n * @param {lineItem[]} [options.lineItems] The {@link PayPalCheckout~lineItem|line items} for this transaction. It can include up to 249 line items.\n * @param {callback} [callback] The second argument is a PayPal `paymentId` or `billingToken` string, depending on whether `options.flow` is `checkout` or `vault`. This is also what is resolved by the promise if no callback is provided.\n * @example\n * // this paypal object is created by the PayPal JS SDK\n * // see https://github.com/paypal/paypal-checkout-components\n * paypal.Buttons({\n *   createOrder: function () {\n *     // when createPayment resolves, it is automatically passed to the PayPal JS SDK\n *     return paypalCheckoutInstance.createPayment({\n *       //\n *     });\n *   },\n *   onShippingChange: function (data) {\n *     // Examine data and determine if the payment needs to be updated.\n *     // when updatePayment resolves, it is automatically passed to the PayPal JS SDK\n *     return paypalCheckoutInstance.updatePayment({\n *         paymentId: data.paymentId,\n *         amount: '15.00',\n *         currency: 'USD',\n *         shippingOptions: [\n *           {\n *             id: 'shipping-speed-fast',\n *             type: 'SHIPPING',\n *             label: 'Fast Shipping',\n *             selected: true,\n *             amount: {\n *               value: '5.00',\n *               currency: 'USD'\n *             }\n *           },\n *           {\n *             id: 'shipping-speed-slow',\n *             type: 'SHIPPING',\n *             label: 'Slow Shipping',\n *             selected: false,\n *             amount: {\n *               value: '1.00',\n *               currency: 'USD'\n *             }\n *           }\n *         ]\n *     });\n *   }\n *   // Add other options, e.g. onApproved, onCancel, onError\n * }).render('#paypal-button');\n *\n * ```\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.updatePayment = function (options) {\n  var self = this;\n  var endpoint = \"paypal_hermes/patch_payment_resource\";\n\n  if (!options || this._hasMissingOption(options, constants.REQUIRED_OPTIONS)) {\n    analytics.sendEvent(\n      self._clientPromise,\n      \"paypal-checkout.updatePayment.missing-options\"\n    );\n\n    return Promise.reject(\n      new BraintreeError(errors.PAYPAL_MISSING_REQUIRED_OPTION)\n    );\n  }\n\n  if (!this._verifyConsistentCurrency(options)) {\n    analytics.sendEvent(\n      self._clientPromise,\n      \"paypal-checkout.updatePayment.inconsistent-currencies\"\n    );\n\n    return Promise.reject(\n      new BraintreeError({\n        type: errors.PAYPAL_INVALID_PAYMENT_OPTION.type,\n        code: errors.PAYPAL_INVALID_PAYMENT_OPTION.code,\n        message: errors.PAYPAL_INVALID_PAYMENT_OPTION.message,\n        details: {\n          originalError: new Error(\n            \"One or more shipping option currencies differ from checkout currency.\"\n          ),\n        },\n      })\n    );\n  }\n\n  analytics.sendEvent(this._clientPromise, \"paypal-checkout.updatePayment\");\n\n  return this._clientPromise\n    .then(function (client) {\n      return client.request({\n        endpoint: endpoint,\n        method: \"post\",\n        data: self._formatUpdatePaymentData(options),\n      });\n    })\n    .catch(function (err) {\n      var status = err.details && err.details.httpStatus;\n\n      if (status === 422) {\n        analytics.sendEvent(\n          self._clientPromise,\n          \"paypal-checkout.updatePayment.invalid\"\n        );\n\n        return Promise.reject(\n          new BraintreeError({\n            type: errors.PAYPAL_INVALID_PAYMENT_OPTION.type,\n            code: errors.PAYPAL_INVALID_PAYMENT_OPTION.code,\n            message: errors.PAYPAL_INVALID_PAYMENT_OPTION.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      }\n\n      analytics.sendEvent(\n        self._clientPromise,\n        \"paypal-checkout.updatePayment.\" + errors.PAYPAL_FLOW_FAILED.code\n      );\n\n      return Promise.reject(\n        convertToBraintreeError(err, {\n          type: errors.PAYPAL_FLOW_FAILED.type,\n          code: errors.PAYPAL_FLOW_FAILED.code,\n          message: errors.PAYPAL_FLOW_FAILED.message,\n        })\n      );\n    });\n};\n\n/**\n * Initializes the PayPal checkout flow with a payment method nonce that represents a vaulted PayPal account.\n * When a {@link callback} is defined, the function returns undefined and invokes the callback with the id to be used with the PayPal JS SDK. Otherwise, it returns a Promise that resolves with the id.\n * @public\n * @ignore\n * @param {object} options These options are identical to the {@link PayPalCheckout#createPayment|options for creating a payment resource}, except for the following:\n * * `flow` cannot be set (will always be `'checkout'`)\n * * `amount`, `currency`, and `vaultInitiatedCheckoutPaymentMethodToken` are required instead of optional\n * * Additional configuration is available (listed below)\n * @param {boolean} [options.optOutOfModalBackdrop=false] By default, the webpage will darken and become unusable while the PayPal window is open. For full control of the UI, pass `true` for this option.\n * @param {callback} [callback] The second argument, <code>payload</code>, is a {@link PayPalCheckout~tokenizePayload|tokenizePayload}. If no callback is provided, the promise resolves with a {@link PayPalCheckout~tokenizePayload|tokenizePayload}.\n * @example\n * paypalCheckoutInstance.startVaultInitiatedCheckout({\n *   vaultInitiatedCheckoutPaymentMethodToken: 'nonce-that-represents-a-vaulted-paypal-account',\n *   amount: '10.00',\n *   currency: 'USD'\n * }).then(function (payload) {\n *   // send payload.nonce to your server\n * }).catch(function (err) {\n *   if (err.code === 'PAYPAL_POPUP_CLOSED') {\n *     // indicates that customer canceled by\n *     // manually closing the PayPal popup\n *   }\n *\n *   // handle other errors\n * });\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.startVaultInitiatedCheckout = function (options) {\n  var missingRequiredParam;\n  var self = this;\n\n  if (this._vaultInitiatedCheckoutInProgress) {\n    analytics.sendEvent(\n      this._clientPromise,\n      \"paypal-checkout.startVaultInitiatedCheckout.error.already-in-progress\"\n    );\n\n    return Promise.reject(\n      new BraintreeError(\n        errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_IN_PROGRESS\n      )\n    );\n  }\n\n  REQUIRED_PARAMS_FOR_START_VAULT_INITIATED_CHECKOUT.forEach(function (param) {\n    if (!options.hasOwnProperty(param)) {\n      missingRequiredParam = param;\n    }\n  });\n\n  if (missingRequiredParam) {\n    return Promise.reject(\n      new BraintreeError({\n        type: errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED.type,\n        code: errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_PARAM_REQUIRED.code,\n        message: \"Required param \" + missingRequiredParam + \" is missing.\",\n      })\n    );\n  }\n\n  this._vaultInitiatedCheckoutInProgress = true;\n  this._addModalBackdrop(options);\n\n  options = assign({}, options, {\n    flow: \"checkout\",\n  });\n\n  analytics.sendEvent(\n    this._clientPromise,\n    \"paypal-checkout.startVaultInitiatedCheckout.started\"\n  );\n\n  return this._waitForVaultInitiatedCheckoutDependencies()\n    .then(function () {\n      var frameCommunicationPromise = new ExtendedPromise();\n      var startVaultInitiatedCheckoutPromise = self\n        ._createPaymentResource(options, {\n          returnUrl: self._constructVaultCheckutUrl(\"redirect-frame\"),\n          cancelUrl: self._constructVaultCheckutUrl(\"cancel-frame\"),\n        })\n        .then(function (response) {\n          var redirectUrl = response.paymentResource.redirectUrl;\n\n          self._frameService.redirect(redirectUrl);\n\n          return frameCommunicationPromise;\n        });\n\n      self._frameService.open(\n        {},\n        self._createFrameServiceCallback(frameCommunicationPromise)\n      );\n\n      return startVaultInitiatedCheckoutPromise;\n    })\n    .catch(function (err) {\n      self._vaultInitiatedCheckoutInProgress = false;\n      self._removeModalBackdrop();\n\n      if (err.code === \"FRAME_SERVICE_FRAME_CLOSED\") {\n        analytics.sendEvent(\n          self._clientPromise,\n          \"paypal-checkout.startVaultInitiatedCheckout.canceled.by-customer\"\n        );\n\n        return Promise.reject(\n          new BraintreeError(\n            errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_CANCELED\n          )\n        );\n      }\n\n      if (self._frameService) {\n        self._frameService.close();\n      }\n\n      if (\n        err.code &&\n        err.code.indexOf(\"FRAME_SERVICE_FRAME_OPEN_FAILED\") > -1\n      ) {\n        analytics.sendEvent(\n          self._clientPromise,\n          \"paypal-checkout.startVaultInitiatedCheckout.failed.popup-not-opened\"\n        );\n\n        return Promise.reject(\n          new BraintreeError({\n            code: errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED\n              .code,\n            type: errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED\n              .type,\n            message:\n              errors.PAYPAL_START_VAULT_INITIATED_CHECKOUT_POPUP_OPEN_FAILED\n                .message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      }\n\n      return Promise.reject(err);\n    })\n    .then(function (response) {\n      self._frameService.close();\n      self._vaultInitiatedCheckoutInProgress = false;\n      self._removeModalBackdrop();\n      analytics.sendEvent(\n        self._clientPromise,\n        \"paypal-checkout.startVaultInitiatedCheckout.succeeded\"\n      );\n\n      return Promise.resolve(response);\n    });\n};\n\nPayPalCheckout.prototype._addModalBackdrop = function (options) {\n  if (options.optOutOfModalBackdrop) {\n    return;\n  }\n\n  if (!this._modalBackdrop) {\n    this._modalBackdrop = document.createElement(\"div\");\n    this._modalBackdrop.setAttribute(\n      \"data-braintree-paypal-vault-initiated-checkout-modal\",\n      true\n    );\n    this._modalBackdrop.style.position = \"fixed\";\n    this._modalBackdrop.style.top = 0;\n    this._modalBackdrop.style.bottom = 0;\n    this._modalBackdrop.style.left = 0;\n    this._modalBackdrop.style.right = 0;\n    this._modalBackdrop.style.zIndex = 9999;\n    this._modalBackdrop.style.background = \"black\";\n    this._modalBackdrop.style.opacity = \"0.7\";\n    this._modalBackdrop.addEventListener(\n      \"click\",\n      function () {\n        this.focusVaultInitiatedCheckoutWindow();\n      }.bind(this)\n    );\n  }\n\n  document.body.appendChild(this._modalBackdrop);\n};\n\nPayPalCheckout.prototype._removeModalBackdrop = function () {\n  if (!(this._modalBackdrop && this._modalBackdrop.parentNode)) {\n    return;\n  }\n\n  this._modalBackdrop.parentNode.removeChild(this._modalBackdrop);\n};\n\n/**\n * Closes the PayPal window if it is opened via `startVaultInitiatedCheckout`.\n * @public\n * @ignore\n * @param {callback} [callback] Gets called when window is closed.\n * @example\n * paypalCheckoutInstance.closeVaultInitiatedCheckoutWindow();\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.closeVaultInitiatedCheckoutWindow = function () {\n  if (this._vaultInitiatedCheckoutInProgress) {\n    analytics.sendEvent(\n      this._clientPromise,\n      \"paypal-checkout.startVaultInitiatedCheckout.canceled.by-merchant\"\n    );\n  }\n\n  return this._waitForVaultInitiatedCheckoutDependencies().then(\n    function () {\n      this._frameService.close();\n    }.bind(this)\n  );\n};\n\n/**\n * Focuses the PayPal window if it is opened via `startVaultInitiatedCheckout`.\n * @public\n * @ignore\n * @param {callback} [callback] Gets called when window is focused.\n * @example\n * paypalCheckoutInstance.focusVaultInitiatedCheckoutWindow();\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.focusVaultInitiatedCheckoutWindow = function () {\n  return this._waitForVaultInitiatedCheckoutDependencies().then(\n    function () {\n      this._frameService.focus();\n    }.bind(this)\n  );\n};\n\nPayPalCheckout.prototype._createFrameServiceCallback = function (\n  frameCommunicationPromise\n) {\n  var self = this;\n\n  // TODO when a merchant integrates an iOS or Android integration\n  // with a webview using the web SDK, we will have to add popupbridge\n  // support\n  return function (err, payload) {\n    if (err) {\n      frameCommunicationPromise.reject(err);\n    } else if (payload) {\n      self._frameService.redirect(self._loadingFrameUrl);\n      self\n        .tokenizePayment({\n          paymentToken: payload.token,\n          payerID: payload.PayerID,\n          paymentID: payload.paymentId,\n          orderID: payload.orderId,\n        })\n        .then(function (res) {\n          frameCommunicationPromise.resolve(res);\n        })\n        .catch(function (tokenizationError) {\n          frameCommunicationPromise.reject(tokenizationError);\n        });\n    }\n  };\n};\n\nPayPalCheckout.prototype._waitForVaultInitiatedCheckoutDependencies =\n  function () {\n    var self = this;\n\n    return this._clientPromise.then(function () {\n      return self._frameServicePromise;\n    });\n  };\n\nPayPalCheckout.prototype._constructVaultCheckutUrl = function (frameName) {\n  var serviceId = this._frameService._serviceId;\n\n  return (\n    this._assetsUrl +\n    \"/html/\" +\n    frameName +\n    useMin(this._isDebug) +\n    \".html?channel=\" +\n    serviceId\n  );\n};\n\n/**\n * Tokenizes the authorize data from the PayPal JS SDK when completing a buyer approval flow.\n * When a {@link callback} is defined, invokes the callback with {@link PayPalCheckout~tokenizePayload|tokenizePayload} and returns undefined. Otherwise, returns a Promise that resolves with a {@link PayPalCheckout~tokenizePayload|tokenizePayload}.\n * @public\n * @param {object} tokenizeOptions Tokens and IDs required to tokenize the payment.\n * @param {string} tokenizeOptions.payerId Payer ID returned by PayPal `onApproved` callback.\n * @param {string} [tokenizeOptions.paymentId] Payment ID returned by PayPal `onApproved` callback.\n * @param {string} [tokenizeOptions.billingToken] Billing Token returned by PayPal `onApproved` callback.\n * @param {boolean} [tokenizeOptions.vault=true] Whether or not to vault the resulting PayPal account (if using a client token generated with a customer id and the vault flow).\n * @param {callback} [callback] The second argument, <code>payload</code>, is a {@link PayPalCheckout~tokenizePayload|tokenizePayload}. If no callback is provided, the promise resolves with a {@link PayPalCheckout~tokenizePayload|tokenizePayload}.\n * @example <caption>Opt out of auto-vaulting behavior</caption>\n * // create the paypalCheckoutInstance with a client token generated with a customer id\n * paypal.Buttons({\n *   createBillingAgreement: function () {\n *     return paypalCheckoutInstance.createPayment({\n *       flow: 'vault'\n *       // your other createPayment options here\n *     });\n *   },\n *   onApproved: function (data) {\n *     data.vault = false;\n *\n *     return paypalCheckoutInstance.tokenizePayment(data);\n *   },\n *   // Add other options, e.g. onCancel, onError\n * }).render('#paypal-button');\n *\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.tokenizePayment = function (tokenizeOptions) {\n  var self = this;\n  var shouldVault = true;\n  var payload;\n  var options = {\n    flow:\n      tokenizeOptions.billingToken && !tokenizeOptions.paymentID\n        ? \"vault\"\n        : \"checkout\",\n    intent: tokenizeOptions.intent || this.intentFromCreatePayment,\n  };\n  var params = {\n    // The paymentToken provided by the PayPal JS SDK is the EC Token\n    ecToken: tokenizeOptions.paymentToken,\n    billingToken: tokenizeOptions.billingToken,\n    payerId: tokenizeOptions.payerID,\n    paymentId: tokenizeOptions.paymentID,\n    orderId: tokenizeOptions.orderID,\n    shippingOptionsId: tokenizeOptions.shippingOptionsId,\n  };\n\n  if (tokenizeOptions.hasOwnProperty(\"vault\")) {\n    shouldVault = tokenizeOptions.vault;\n  }\n\n  options.vault = shouldVault;\n\n  analytics.sendEvent(\n    this._clientPromise,\n    \"paypal-checkout.tokenization.started\"\n  );\n\n  return this._clientPromise\n    .then(function (client) {\n      return client.request({\n        endpoint: \"payment_methods/paypal_accounts\",\n        method: \"post\",\n        data: self._formatTokenizeData(options, params),\n      });\n    })\n    .then(function (response) {\n      payload = self._formatTokenizePayload(response);\n\n      analytics.sendEvent(\n        self._clientPromise,\n        \"paypal-checkout.tokenization.success\"\n      );\n      if (payload.creditFinancingOffered) {\n        analytics.sendEvent(\n          self._clientPromise,\n          \"paypal-checkout.credit.accepted\"\n        );\n      }\n\n      return payload;\n    })\n    .catch(function (err) {\n      if (self._setupError) {\n        return Promise.reject(self._setupError);\n      }\n\n      analytics.sendEvent(\n        self._clientPromise,\n        \"paypal-checkout.tokenization.failed\"\n      );\n\n      return Promise.reject(\n        convertToBraintreeError(err, {\n          type: errors.PAYPAL_ACCOUNT_TOKENIZATION_FAILED.type,\n          code: errors.PAYPAL_ACCOUNT_TOKENIZATION_FAILED.code,\n          message: errors.PAYPAL_ACCOUNT_TOKENIZATION_FAILED.message,\n        })\n      );\n    });\n};\n\n/**\n * Resolves with the PayPal client id to be used when loading the PayPal SDK.\n * @public\n * @param {callback} [callback] The second argument, <code>id</code>, is a the PayPal client id. If no callback is provided, the promise resolves with the PayPal client id.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * paypalCheckoutInstance.getClientId().then(function (id) {\n *  var script = document.createElement('script');\n *\n *  script.src = 'https://www.paypal.com/sdk/js?client-id=' + id;\n *  script.onload = function () {\n *    // setup the PayPal SDK\n *  };\n *\n *  document.body.appendChild(script);\n * });\n */\nPayPalCheckout.prototype.getClientId = function () {\n  return this._clientPromise.then(function (client) {\n    return client.getConfiguration().gatewayConfiguration.paypal.clientId;\n  });\n};\n\n/**\n * Resolves when the PayPal SDK has been successfully loaded onto the page.\n * @public\n * @param {object} [options] A configuration object to modify the query params and data-attributes on the PayPal SDK. A subset of the parameters are listed below. For a full list of query params, see the [PayPal docs](https://developer.paypal.com/docs/checkout/reference/customize-sdk/?mark=query#query-parameters).\n * @param {string} [options.client-id] By default, this will be the client id associated with the authorization used to create the Braintree component. When used in conjunction with passing `authorization` when creating the PayPal Checkout component, you can speed up the loading of the PayPal SDK.\n * @param {string} [options.intent=\"authorize\"] By default, the PayPal SDK defaults to an intent of `capture`. Since the default intent when calling {@link PayPalCheckout#createPayment|`createPayment`} is `authorize`, the PayPal SDK will be loaded with `intent=authorize`. If you wish to use a different intent when calling {@link PayPalCheckout#createPayment|`createPayment`}, make sure it matches here. If `sale` is used, it will be converted to `capture` for the PayPal SDK. If the `vault: true` param is used, `tokenize` will be passed as the default intent.\n * @param {string} [options.locale=en_US] Use this option to change the language, links, and terminology used in the PayPal flow. This locale will be used unless the buyer has set a preferred locale for their account. If an unsupported locale is supplied, a fallback locale (determined by buyer preference or browser data) will be used and no error will be thrown.\n *\n * Supported locales are:\n * `da_DK`,\n * `de_DE`,\n * `en_AU`,\n * `en_GB`,\n * `en_US`,\n * `es_ES`,\n * `fr_CA`,\n * `fr_FR`,\n * `id_ID`,\n * `it_IT`,\n * `ja_JP`,\n * `ko_KR`,\n * `nl_NL`,\n * `no_NO`,\n * `pl_PL`,\n * `pt_BR`,\n * `pt_PT`,\n * `ru_RU`,\n * `sv_SE`,\n * `th_TH`,\n * `zh_CN`,\n * `zh_HK`,\n * and `zh_TW`.\n *\n * @param {string} [options.currency=\"USD\"] If a currency is passed in {@link PayPalCheckout#createPayment|`createPayment`}, it must match the currency passed here.\n * @param {boolean} [options.vault] Must be `true` when using `flow: vault` in {@link PayPalCheckout#createPayment|`createPayment`}.\n * @param {string} [options.components=buttons] By default, the Braintree SDK will only load the PayPal smart buttons component. If you would like to load just the [messages component](https://developer.paypal.com/docs/business/checkout/add-capabilities/credit-messaging/), pass `messages`. If you would like to load both, pass `buttons,messages`\n * @param {object} [options.dataAttributes] The data attributes to apply to the script. Any data attribute can be passed. A subset of the parameters are listed below. For a full list of data attributes, see the [PayPal docs](https://developer.paypal.com/docs/checkout/reference/customize-sdk/#script-parameters).\n * @param {string} [options.dataAttributes.client-token] The client token to use in the script. (usually not needed)\n * @param {string} [options.dataAttributes.csp-nonce] See the [PayPal docs about content security nonces](https://developer.paypal.com/docs/checkout/reference/customize-sdk/#csp-nonce).\n * @param {callback} [callback] Called when the PayPal SDK has been loaded onto the page. The second argument is the PayPal Checkout instance. If no callback is provided, the promise resolves with the PayPal Checkout instance when the PayPal SDK has been loaded onto the page.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example <caption>Without options</caption>\n * paypalCheckoutInstance.loadPayPalSDK().then(function () {\n *   // window.paypal.Buttons is now available to use\n * });\n * @example <caption>With options</caption>\n * paypalCheckoutInstance.loadPayPalSDK({\n *   'client-id': 'PayPal Client Id', // Can speed up rendering time to hardcode this value\n *\n *   intent: 'capture', // Make sure this value matches the value in createPayment\n *   currency: 'USD', // Make sure this value matches the value in createPayment\n * }).then(function () {\n *   // window.paypal.Buttons is now available to use\n * });\n * @example <caption>With Vaulting</caption>\n * paypalCheckoutInstance.loadPayPalSDK({\n *   vault: true\n * }).then(function () {\n *   // window.paypal.Buttons is now available to use\n * });\n */\nPayPalCheckout.prototype.loadPayPalSDK = function (options) {\n  var idPromise, src;\n  var loadPromise = new ExtendedPromise();\n  var dataAttributes = (options && options.dataAttributes) || {};\n  var userIdToken =\n    dataAttributes[\"user-id-token\"] || dataAttributes[\"data-user-id-token\"];\n\n  if (!userIdToken) {\n    userIdToken =\n      this._authorizationInformation.fingerprint &&\n      this._authorizationInformation.fingerprint.split(\"?\")[0];\n  }\n\n  this._paypalScript = document.createElement(\"script\");\n\n  // NEXT_MAJOR_VERSION\n  // this options object should have 2 properties:\n  // * queryParams\n  // * dataAttributes\n  // should make organizing this better than squashing\n  // all the query params at the top level and extracting\n  // the data attributes\n  options = assign(\n    {},\n    {\n      components: \"buttons\",\n    },\n    options\n  );\n  delete options.dataAttributes;\n\n  // NEXT_MAJOR_VERSION if merchant passes an explicit intent,\n  // currency, amount, etc, save those for use in createPayment\n  // if no explicit param of that type is passed in when calling\n  // createPayment to reduce the number of items that need to be\n  // duplicated here and in createPayment\n  if (options.vault) {\n    options.intent = options.intent || \"tokenize\";\n  } else {\n    options.intent = options.intent || \"authorize\";\n    options.currency = options.currency || \"USD\";\n  }\n\n  src = \"https://www.paypal.com/sdk/js?\";\n  this._paypalScript.onload = function () {\n    loadPromise.resolve();\n  };\n\n  Object.keys(dataAttributes).forEach(\n    function (attribute) {\n      this._paypalScript.setAttribute(\n        \"data-\" + attribute.replace(/^data\\-/, \"\"),\n        dataAttributes[attribute]\n      );\n    }.bind(this)\n  );\n\n  if (options[\"client-id\"]) {\n    idPromise = Promise.resolve(options[\"client-id\"]);\n  } else {\n    idPromise = this.getClientId();\n  }\n\n  idPromise.then(\n    function (id) {\n      options[\"client-id\"] = id;\n\n      if (this._autoSetDataUserIdToken && userIdToken) {\n        this._paypalScript.setAttribute(\"data-user-id-token\", userIdToken);\n\n        // preloading improves the rendering time of the PayPal button\n        this._attachPreloadPixel({\n          id: id,\n          userIdToken: userIdToken,\n          amount: dataAttributes.amount,\n          currency: options.currency,\n          merchantId: options[\"merchant-id\"],\n        });\n      }\n\n      this._paypalScript.src = querystring.queryify(src, options);\n      document.head.insertBefore(\n        this._paypalScript,\n        document.head.firstElementChild\n      );\n    }.bind(this)\n  );\n\n  return loadPromise.then(\n    function () {\n      return this;\n    }.bind(this)\n  );\n};\n\nPayPalCheckout.prototype._attachPreloadPixel = function (options) {\n  var request;\n  var id = options.id;\n  var userIdToken = options.userIdToken;\n  var env = this._authorizationInformation.environment;\n  var subdomain = env === \"production\" ? \"\" : \"sandbox.\";\n  var url = PAYPAL_SDK_PRELOAD_URL.replace(\"{ENV}\", subdomain);\n  var preloadOptions = {\n    \"client-id\": id,\n    \"user-id-token\": userIdToken,\n  };\n\n  if (options.amount) {\n    preloadOptions.amount = options.amount;\n  }\n  if (options.currency) {\n    preloadOptions.currency = options.currency;\n  }\n  if (options.merchantId) {\n    preloadOptions[\"merchant-id\"] = options.merchantId;\n  }\n\n  request = new XMLHttpRequest();\n  request.open(\"GET\", querystring.queryify(url, preloadOptions));\n  request.send();\n};\n\nPayPalCheckout.prototype._formatPaymentResourceData = function (\n  options,\n  config\n) {\n  var key;\n  var gatewayConfiguration = this._configuration.gatewayConfiguration;\n  // NEXT_MAJOR_VERSION default value for intent in PayPal SDK is capture\n  // but our integrations default value is authorize. Default this to capture\n  // in the next major version.\n  var intent = options.intent;\n  var paymentResource = {\n    // returnUrl and cancelUrl are required in hermes create_payment_resource route\n    // but are not used by the PayPal sdk, except to redirect to an error page\n    returnUrl: config.returnUrl || \"https://www.paypal.com/checkoutnow/error\",\n    cancelUrl: config.cancelUrl || \"https://www.paypal.com/checkoutnow/error\",\n    offerPaypalCredit: options.offerCredit === true,\n    merchantAccountId: this._merchantAccountId,\n    experienceProfile: {\n      brandName: options.displayName || gatewayConfiguration.paypal.displayName,\n      localeCode: options.locale,\n      noShipping: (!options.enableShippingAddress).toString(),\n      addressOverride: options.shippingAddressEditable === false,\n      landingPageType: options.landingPageType,\n    },\n    shippingOptions: options.shippingOptions,\n  };\n\n  if (options.flow === \"checkout\") {\n    paymentResource.amount = options.amount;\n    paymentResource.currencyIsoCode = options.currency;\n    paymentResource.requestBillingAgreement = options.requestBillingAgreement;\n\n    if (intent) {\n      // 'sale' has been changed to 'capture' in PayPal's backend, but\n      // we use an old version with 'sale'. We provide capture as an alias\n      // to match the PayPal SDK\n      if (intent === \"capture\") {\n        intent = \"sale\";\n      }\n      paymentResource.intent = intent;\n    }\n\n    if (options.hasOwnProperty(\"lineItems\")) {\n      paymentResource.lineItems = options.lineItems;\n    }\n\n    if (options.hasOwnProperty(\"vaultInitiatedCheckoutPaymentMethodToken\")) {\n      paymentResource.vaultInitiatedCheckoutPaymentMethodToken =\n        options.vaultInitiatedCheckoutPaymentMethodToken;\n    }\n\n    if (options.hasOwnProperty(\"shippingOptions\")) {\n      paymentResource.shippingOptions = options.shippingOptions;\n    }\n\n    for (key in options.shippingAddressOverride) {\n      if (options.shippingAddressOverride.hasOwnProperty(key)) {\n        paymentResource[key] = options.shippingAddressOverride[key];\n      }\n    }\n\n    if (options.hasOwnProperty(\"billingAgreementDetails\")) {\n      paymentResource.billingAgreementDetails = options.billingAgreementDetails;\n    }\n  } else {\n    paymentResource.shippingAddress = options.shippingAddressOverride;\n\n    if (options.billingAgreementDescription) {\n      paymentResource.description = options.billingAgreementDescription;\n    }\n  }\n\n  // this needs to be set outside of the block where add it to the\n  // payment request so that a follow up tokenization call can use it,\n  // but if a second create payment resource call is made without\n  // the correlation id, we want to reset it to undefined so that the\n  // tokenization call does not use a stale correlation id\n  this._riskCorrelationId = options.riskCorrelationId;\n  if (options.riskCorrelationId) {\n    paymentResource.correlationId = this._riskCorrelationId;\n  }\n\n  return paymentResource;\n};\n\n/**\n * @ignore\n * @static\n * @function _verifyConsistentCurrency\n * Verifies that `options.currency` and the currencies for each `shippingOption` the same.\n * @param {object} options `options` provided for `updatePayment`.\n * @returns {boolean} true is currencies match (or no shipping options); false if currencies do not match.\n */\n\nPayPalCheckout.prototype._verifyConsistentCurrency = function (options) {\n  if (\n    options.currency &&\n    options.hasOwnProperty(\"shippingOptions\") &&\n    Array.isArray(options.shippingOptions)\n  ) {\n    return options.shippingOptions.every(function (item) {\n      return (\n        item.amount &&\n        item.amount.currency &&\n        options.currency.toLowerCase() === item.amount.currency.toLowerCase()\n      );\n    });\n  }\n\n  return true;\n};\n\n/**\n * @ignore\n * @static\n * @function _hasMissingOption\n * @param {object} options All options provided for intiating the PayPal flow.\n * @param {array} required A list of required inputs that must be include as part of the options.\n * @returns {boolean} Returns a boolean.\n */\n\nPayPalCheckout.prototype._hasMissingOption = function (options, required) {\n  var i, option;\n\n  required = required || [];\n\n  if (\n    !options.hasOwnProperty(\"amount\") &&\n    !options.hasOwnProperty(\"lineItems\")\n  ) {\n    return true;\n  }\n\n  for (i = 0; i < required.length; i++) {\n    option = required[i];\n\n    if (!options.hasOwnProperty(option)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nPayPalCheckout.prototype._formatUpdatePaymentData = function (options) {\n  var self = this;\n  var paymentResource = {\n    merchantAccountId: this._merchantAccountId,\n    paymentId: options.paymentId || options.orderId,\n    currencyIsoCode: options.currency,\n  };\n\n  if (options.hasOwnProperty(\"amount\")) {\n    paymentResource.amount = options.amount;\n  }\n\n  if (options.hasOwnProperty(\"lineItems\")) {\n    paymentResource.lineItems = options.lineItems;\n  }\n\n  if (options.hasOwnProperty(\"shippingOptions\")) {\n    paymentResource.shippingOptions = options.shippingOptions;\n  }\n\n  /* shippingAddress not supported yet */\n  if (options.hasOwnProperty(\"shippingAddress\")) {\n    analytics.sendEvent(\n      self._clientPromise,\n      \"paypal-checkout.updatePayment.shippingAddress.provided.by-the-merchant\"\n    );\n\n    paymentResource.line1 = options.shippingAddress.line1;\n\n    if (options.shippingAddress.hasOwnProperty(\"line2\")) {\n      paymentResource.line2 = options.shippingAddress.line2;\n    }\n\n    paymentResource.city = options.shippingAddress.city;\n    paymentResource.state = options.shippingAddress.state;\n    paymentResource.postalCode = options.shippingAddress.postalCode;\n    paymentResource.countryCode = options.shippingAddress.countryCode;\n\n    if (options.shippingAddress.hasOwnProperty(\"phone\")) {\n      paymentResource.phone = options.shippingAddress.phone;\n    }\n\n    if (options.shippingAddress.hasOwnProperty(\"recipientName\")) {\n      paymentResource.recipientName = options.shippingAddress.recipientName;\n    }\n  }\n\n  return paymentResource;\n};\n\nPayPalCheckout.prototype._formatTokenizeData = function (options, params) {\n  var clientConfiguration = this._configuration;\n  var gatewayConfiguration = clientConfiguration.gatewayConfiguration;\n  var isTokenizationKey =\n    clientConfiguration.authorizationType === \"TOKENIZATION_KEY\";\n  var isVaultFlow = options.flow === \"vault\";\n  var correlationId =\n    this._riskCorrelationId || params.billingToken || params.ecToken;\n  var data = {\n    paypalAccount: {\n      correlationId: correlationId,\n      options: {\n        validate: isVaultFlow && !isTokenizationKey && options.vault,\n      },\n    },\n  };\n\n  if (isVaultFlow) {\n    data.paypalAccount.billingAgreementToken = params.billingToken;\n  } else {\n    data.paypalAccount.paymentToken = params.paymentId || params.orderId;\n    data.paypalAccount.payerId = params.payerId;\n    data.paypalAccount.unilateral =\n      gatewayConfiguration.paypal.unvettedMerchant;\n\n    if (options.intent) {\n      data.paypalAccount.intent = options.intent;\n    }\n  }\n\n  if (this._merchantAccountId) {\n    data.merchantAccountId = this._merchantAccountId;\n  }\n\n  return data;\n};\n\nPayPalCheckout.prototype._formatTokenizePayload = function (response) {\n  var payload;\n  var account = {};\n\n  if (response.paypalAccounts) {\n    account = response.paypalAccounts[0];\n  }\n\n  payload = {\n    nonce: account.nonce,\n    details: {},\n    type: account.type,\n  };\n\n  if (account.details && account.details.payerInfo) {\n    payload.details = account.details.payerInfo;\n  }\n\n  if (account.details && account.details.creditFinancingOffered) {\n    payload.creditFinancingOffered = account.details.creditFinancingOffered;\n  }\n\n  if (account.details && account.details.shippingOptionId) {\n    payload.shippingOptionId = account.details.shippingOptionId;\n  }\n\n  if (account.details && account.details.cobrandedCardLabel) {\n    payload.cobrandedCardLabel = account.details.cobrandedCardLabel;\n  }\n\n  return payload;\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/paypal-checkout.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * paypalCheckoutInstance.teardown();\n * @example <caption>With callback</caption>\n * paypalCheckoutInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nPayPalCheckout.prototype.teardown = function () {\n  var self = this;\n\n  convertMethodsToError(this, methods(PayPalCheckout.prototype));\n\n  if (this._paypalScript && this._paypalScript.parentNode) {\n    this._paypalScript.parentNode.removeChild(this._paypalScript);\n  }\n\n  return this._frameServicePromise\n    .catch(function () {\n      // no need to error in teardown for an error setting up the frame service\n    })\n    .then(function () {\n      if (!self._frameService) {\n        return Promise.resolve();\n      }\n\n      return self._frameService.teardown();\n    });\n};\n\nmodule.exports = wrapPromise.wrapPrototype(PayPalCheckout);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/paypal-checkout/paypal-checkout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/paypal/shared/constants.js":
/*!***************************************************************!*\
  !*** ./node_modules/braintree-web/paypal/shared/constants.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n  LANDING_FRAME_NAME: \"braintreepaypallanding\",\n  FLOW_ENDPOINTS: {\n    checkout: \"create_payment_resource\",\n    vault: \"setup_billing_agreement\",\n  },\n  REQUIRED_OPTIONS: [\"paymentId\", \"currency\"],\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi9wYXlwYWwvc2hhcmVkL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvcGF5cGFsL3NoYXJlZC9jb25zdGFudHMuanM/ZDY1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIExBTkRJTkdfRlJBTUVfTkFNRTogXCJicmFpbnRyZWVwYXlwYWxsYW5kaW5nXCIsXG4gIEZMT1dfRU5EUE9JTlRTOiB7XG4gICAgY2hlY2tvdXQ6IFwiY3JlYXRlX3BheW1lbnRfcmVzb3VyY2VcIixcbiAgICB2YXVsdDogXCJzZXR1cF9iaWxsaW5nX2FncmVlbWVudFwiLFxuICB9LFxuICBSRVFVSVJFRF9PUFRJT05TOiBbXCJwYXltZW50SWRcIiwgXCJjdXJyZW5jeVwiXSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/paypal/shared/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/base.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/external/frameworks/base.js ***!
  \*******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar assign = (__webpack_require__(/*! ../../../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar analytics = __webpack_require__(/*! ../../../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar BraintreeError = __webpack_require__(/*! ../../../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar isVerifiedDomain = __webpack_require__(/*! ../../../lib/is-verified-domain */ \"(ssr)/./node_modules/braintree-web/lib/is-verified-domain.js\");\nvar ExtendedPromise = __webpack_require__(/*! @braintree/extended-promise */ \"(ssr)/./node_modules/@braintree/extended-promise/dist/index.js\");\nvar EventEmitter = __webpack_require__(/*! @braintree/event-emitter */ \"(ssr)/./node_modules/@braintree/event-emitter/dist/event-emitter.js\");\nvar errors = __webpack_require__(/*! ../../shared/errors */ \"(ssr)/./node_modules/braintree-web/three-d-secure/shared/errors.js\");\nvar iFramer = __webpack_require__(/*! @braintree/iframer */ \"(ssr)/./node_modules/@braintree/iframer/dist/index.js\");\nvar Bus = __webpack_require__(/*! framebus */ \"(ssr)/./node_modules/framebus/dist/index.js\");\nvar constants = __webpack_require__(/*! ../../shared/constants */ \"(ssr)/./node_modules/braintree-web/three-d-secure/shared/constants.js\");\nvar uuid = __webpack_require__(/*! @braintree/uuid */ \"(ssr)/./node_modules/@braintree/uuid/index.js\");\nvar events = __webpack_require__(/*! ../../shared/events */ \"(ssr)/./node_modules/braintree-web/three-d-secure/shared/events.js\");\nvar useMin = __webpack_require__(/*! ../../../lib/use-min */ \"(ssr)/./node_modules/braintree-web/lib/use-min.js\");\nvar BUS_CONFIGURATION_REQUEST_EVENT =\n  (__webpack_require__(/*! ../../../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").BUS_CONFIGURATION_REQUEST_EVENT);\n\nvar VERSION = \"3.99.0\";\nvar IFRAME_HEIGHT = 400;\nvar IFRAME_WIDTH = 400;\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\nfunction BaseFramework(options) {\n  EventEmitter.call(this);\n\n  this._client = options.client;\n  this._createPromise = options.createPromise;\n  this._createOptions = options;\n\n  if (this._client) {\n    this._isDebug = this._client.getConfiguration().isDebug;\n    this._assetsUrl =\n      this._client.getConfiguration().gatewayConfiguration.assetsUrl;\n  } else {\n    this._isDebug = Boolean(options.isDebug);\n    this._assetsUrl = options.assetsUrl;\n  }\n  this._assetsUrl = this._assetsUrl + \"/web/\" + VERSION;\n}\n\nEventEmitter.createChild(BaseFramework);\n\nBaseFramework.prototype._waitForClient = function () {\n  if (this._client) {\n    return Promise.resolve();\n  }\n\n  return this._createPromise.then(\n    function (client) {\n      this._client = client;\n    }.bind(this)\n  );\n};\n\nBaseFramework.prototype.setUpEventListeners = function () {\n  throw new BraintreeError(errors.THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED);\n};\n\nBaseFramework.prototype.verifyCard = function (options, privateOptions) {\n  var formattedOptions, error;\n  var self = this;\n\n  privateOptions = privateOptions || {};\n\n  error = this._checkForVerifyCardError(options, privateOptions);\n\n  if (error) {\n    return Promise.reject(error);\n  }\n\n  this._verifyCardInProgress = true;\n\n  formattedOptions = this._formatVerifyCardOptions(options);\n\n  return this._formatLookupData(formattedOptions)\n    .then(function (data) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.started\"\n      );\n\n      return self._performLookup(formattedOptions.nonce, data);\n    })\n    .then(function (response) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.3ds-version.\" +\n          response.lookup.threeDSecureVersion\n      );\n\n      return self._onLookupComplete(response, formattedOptions);\n    })\n    .then(function (response) {\n      return self.initializeChallengeWithLookupResponse(\n        response,\n        formattedOptions\n      );\n    })\n    .then(function (payload) {\n      self._resetVerificationState();\n\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.completed\"\n      );\n\n      return payload;\n    })\n    .catch(function (err) {\n      self._resetVerificationState();\n\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.failed\"\n      );\n\n      return Promise.reject(err);\n    });\n};\n\nBaseFramework.prototype._checkForFrameworkSpecificVerifyCardErrors =\n  function () {\n    throw new BraintreeError(errors.THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED);\n  };\n\nBaseFramework.prototype._presentChallenge = function () {\n  throw new BraintreeError(errors.THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED);\n};\n\nBaseFramework.prototype.prepareLookup = function () {\n  throw new BraintreeError(errors.THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED);\n};\n\nBaseFramework.prototype._resetVerificationState = function () {\n  this._verifyCardInProgress = false;\n  this._verifyCardPromisePlus = null;\n\n  if (typeof this._reloadThreeDSecure === \"function\") {\n    this._reloadThreeDSecure();\n  }\n};\n\nBaseFramework.prototype._performLookup = function (nonce, data) {\n  var self = this;\n  var url = \"payment_methods/\" + nonce + \"/three_d_secure/lookup\";\n\n  return this._waitForClient().then(function () {\n    return self._client\n      .request({\n        endpoint: url,\n        method: \"post\",\n        data: data,\n      })\n      .catch(function (err) {\n        var status = err && err.details && err.details.httpStatus;\n        var analyticsMessage = \"three-d-secure.verification-flow.lookup-failed\";\n        var lookupError;\n\n        if (status === 404) {\n          lookupError = errors.THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR;\n          analyticsMessage += \".404\";\n        } else if (status === 422) {\n          lookupError = errors.THREEDS_LOOKUP_VALIDATION_ERROR;\n          analyticsMessage += \".422\";\n        } else {\n          lookupError = errors.THREEDS_LOOKUP_ERROR;\n        }\n\n        analytics.sendEvent(self._createPromise, analyticsMessage);\n\n        return Promise.reject(\n          new BraintreeError({\n            type: lookupError.type,\n            code: lookupError.code,\n            message: lookupError.message,\n            details: {\n              originalError: err,\n            },\n          })\n        );\n      });\n  });\n};\n\nBaseFramework.prototype._checkForVerifyCardError = function (\n  options,\n  privateOptions\n) {\n  var errorOption;\n\n  if (this._verifyCardInProgress === true) {\n    return new BraintreeError(errors.THREEDS_AUTHENTICATION_IN_PROGRESS);\n  } else if (!options.nonce) {\n    errorOption = \"a nonce\";\n  } else if (!options.amount) {\n    errorOption = \"an amount\";\n  }\n\n  if (!errorOption) {\n    errorOption = this._checkForFrameworkSpecificVerifyCardErrors(\n      options,\n      privateOptions\n    );\n  }\n\n  if (errorOption) {\n    return new BraintreeError({\n      type: errors.THREEDS_MISSING_VERIFY_CARD_OPTION.type,\n      code: errors.THREEDS_MISSING_VERIFY_CARD_OPTION.code,\n      message: \"verifyCard options must include \" + errorOption + \".\",\n    });\n  }\n\n  return null;\n};\n\nBaseFramework.prototype.initializeChallengeWithLookupResponse = function (\n  lookupResponse,\n  options\n) {\n  var self = this;\n\n  options = options || {};\n\n  this._lookupPaymentMethod = lookupResponse.paymentMethod;\n\n  // sets this in the case that initializeChallengeWithLookupResponse is\n  // called as a standalone method from a server side lookup. In a normal\n  // verifyCard flow, this promise will already exist\n  self._verifyCardPromisePlus =\n    self._verifyCardPromisePlus || new ExtendedPromise();\n  self._handleLookupResponse(lookupResponse, options);\n\n  return self._verifyCardPromisePlus.then(function (payload) {\n    analytics.sendEvent(\n      self._createPromise,\n      \"three-d-secure.verification-flow.liability-shifted.\" +\n        String(payload.liabilityShifted)\n    );\n    analytics.sendEvent(\n      self._createPromise,\n      \"three-d-secure.verification-flow.liability-shift-possible.\" +\n        String(payload.liabilityShiftPossible)\n    );\n\n    return payload;\n  });\n};\n\nBaseFramework.prototype._handleLookupResponse = function (\n  lookupResponse,\n  options\n) {\n  var challengeShouldBePresented = Boolean(\n    lookupResponse.lookup && lookupResponse.lookup.acsUrl\n  );\n  var details;\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"three-d-secure.verification-flow.challenge-presented.\" +\n      String(challengeShouldBePresented)\n  );\n\n  if (challengeShouldBePresented) {\n    this._presentChallenge(lookupResponse, options);\n  } else {\n    details = this._formatAuthResponse(\n      lookupResponse.paymentMethod,\n      lookupResponse.threeDSecureInfo\n    );\n    details.verificationDetails = lookupResponse.threeDSecureInfo;\n\n    this._verifyCardPromisePlus.resolve(details);\n  }\n};\n\nBaseFramework.prototype._onLookupComplete = function (response) {\n  this._lookupPaymentMethod = response.paymentMethod;\n  this._verifyCardPromisePlus = new ExtendedPromise();\n\n  return Promise.resolve(response);\n};\n\nBaseFramework.prototype._formatAuthResponse = function (\n  paymentMethod,\n  threeDSecureInfo\n) {\n  return {\n    nonce: paymentMethod.nonce,\n    type: paymentMethod.type,\n    binData: paymentMethod.binData,\n    details: paymentMethod.details,\n    description:\n      paymentMethod.description &&\n      paymentMethod.description.replace(/\\+/g, \" \"),\n    liabilityShifted: threeDSecureInfo && threeDSecureInfo.liabilityShifted,\n    liabilityShiftPossible:\n      threeDSecureInfo && threeDSecureInfo.liabilityShiftPossible,\n    threeDSecureInfo: paymentMethod.threeDSecureInfo,\n  };\n};\n\nBaseFramework.prototype._formatVerifyCardOptions = function (options) {\n  return assign({}, options);\n};\n\nBaseFramework.prototype._formatLookupData = function (options) {\n  var data = {\n    amount: options.amount,\n  };\n\n  if (options.collectDeviceData === true) {\n    data.browserColorDepth = window.screen.colorDepth;\n    data.browserJavaEnabled = window.navigator.javaEnabled();\n    data.browserJavascriptEnabled = true;\n    data.browserLanguage = window.navigator.language;\n    data.browserScreenHeight = window.screen.height;\n    data.browserScreenWidth = window.screen.width;\n    data.browserTimeZone = new Date().getTimezoneOffset();\n    data.deviceChannel = \"Browser\";\n  }\n\n  return Promise.resolve(data);\n};\n\nBaseFramework.prototype._handleV1AuthResponse = function (data) {\n  var authResponse = JSON.parse(data.auth_response);\n\n  if (authResponse.success) {\n    this._verifyCardPromisePlus.resolve(\n      this._formatAuthResponse(\n        authResponse.paymentMethod,\n        authResponse.threeDSecureInfo\n      )\n    );\n  } else if (\n    authResponse.threeDSecureInfo &&\n    authResponse.threeDSecureInfo.liabilityShiftPossible\n  ) {\n    this._verifyCardPromisePlus.resolve(\n      this._formatAuthResponse(\n        this._lookupPaymentMethod,\n        authResponse.threeDSecureInfo\n      )\n    );\n  } else {\n    this._verifyCardPromisePlus.reject(\n      new BraintreeError({\n        type: BraintreeError.types.UNKNOWN,\n        code: \"UNKNOWN_AUTH_RESPONSE\",\n        message: authResponse.error.message,\n      })\n    );\n  }\n};\n\nBaseFramework.prototype.cancelVerifyCard = function () {\n  var response, threeDSecureInfo;\n\n  this._verifyCardInProgress = false;\n\n  if (!this._lookupPaymentMethod) {\n    return Promise.reject(\n      new BraintreeError(errors.THREEDS_NO_VERIFICATION_PAYLOAD)\n    );\n  }\n\n  threeDSecureInfo = this._lookupPaymentMethod.threeDSecureInfo;\n\n  response = assign({}, this._lookupPaymentMethod, {\n    liabilityShiftPossible:\n      threeDSecureInfo && threeDSecureInfo.liabilityShiftPossible,\n    liabilityShifted: threeDSecureInfo && threeDSecureInfo.liabilityShifted,\n    verificationDetails:\n      threeDSecureInfo && threeDSecureInfo.verificationDetails,\n  });\n\n  return Promise.resolve(response);\n};\n\nBaseFramework.prototype._setupV1Bus = function (options) {\n  var clientConfiguration = this._client.getConfiguration();\n  var parentURL = window.location.href.split(\"#\")[0];\n  var lookupResponse = options.lookupResponse;\n  var channel = uuid();\n  var bus = new Bus({\n    channel: channel,\n    verifyDomain: isVerifiedDomain,\n  });\n  var authenticationCompleteBaseUrl =\n    this._assetsUrl +\n    \"/html/three-d-secure-authentication-complete-frame.html?channel=\" +\n    encodeURIComponent(channel) +\n    \"&\";\n\n  bus.on(BUS_CONFIGURATION_REQUEST_EVENT, function (reply) {\n    reply({\n      clientConfiguration: clientConfiguration,\n      nonce: options.nonce,\n      acsUrl: lookupResponse.acsUrl,\n      pareq: lookupResponse.pareq,\n      termUrl:\n        lookupResponse.termUrl +\n        \"&three_d_secure_version=\" +\n        VERSION +\n        \"&authentication_complete_base_url=\" +\n        encodeURIComponent(authenticationCompleteBaseUrl),\n      md: lookupResponse.md,\n      parentUrl: parentURL,\n    });\n  });\n\n  bus.on(events.AUTHENTICATION_COMPLETE, options.handleAuthResponse);\n\n  return bus;\n};\n\nBaseFramework.prototype._setupV1Iframe = function (options) {\n  var url =\n    this._assetsUrl +\n    \"/html/three-d-secure-bank-frame\" +\n    useMin(this._isDebug) +\n    \".html?showLoader=\" +\n    options.showLoader;\n  var bankIframe = iFramer({\n    src: url,\n    height: IFRAME_HEIGHT,\n    width: IFRAME_WIDTH,\n    name: constants.LANDING_FRAME_NAME + \"_\" + this._v1Bus.channel,\n    title: \"3D Secure Authorization Frame\",\n  });\n\n  return bankIframe;\n};\n\nBaseFramework.prototype._setupV1Elements = function (options) {\n  this._v1Bus = this._setupV1Bus(options);\n  this._v1Iframe = this._setupV1Iframe(options);\n};\n\nBaseFramework.prototype._teardownV1Elements = function () {\n  if (this._v1Bus) {\n    this._v1Bus.teardown();\n    this._v1Bus = null;\n  }\n\n  if (this._v1Iframe && this._v1Iframe.parentNode) {\n    this._v1Iframe.parentNode.removeChild(this._v1Iframe);\n    this._v1Iframe = null;\n  }\n\n  if (this._onV1Keyup) {\n    document.removeEventListener(\"keyup\", this._onV1Keyup);\n    this._onV1Keyup = null;\n  }\n};\n\nBaseFramework.prototype.teardown = function () {\n  analytics.sendEvent(this._createPromise, \"three-d-secure.teardown-completed\");\n\n  this._teardownV1Elements();\n\n  return Promise.resolve();\n};\n\nmodule.exports = BaseFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/bootstrap3-modal.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/external/frameworks/bootstrap3-modal.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// NEXT_MAJOR_VERSION drop support for Bootstrap framework,\n// recomend using inline frame version and putting it in\n// the merchant's own bootstrap modal\n\nvar SongbirdFramework = __webpack_require__(/*! ./songbird */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/songbird.js\");\n\nfunction Bootstrap3ModalFramework(options) {\n  SongbirdFramework.call(this, options);\n}\n\nBootstrap3ModalFramework.prototype = Object.create(\n  SongbirdFramework.prototype,\n  {\n    constructor: SongbirdFramework,\n  }\n);\n\nBootstrap3ModalFramework.prototype._createV1IframeModalElement = function (\n  iframe\n) {\n  var modal = document.createElement(\"div\");\n\n  modal.innerHTML =\n    '<div class=\"modal fade in\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"CCAFrameModal-label\" aria-hidden=\"true\" style=\"display: block;\">' +\n    '<div class=\"modal-dialog\" style=\"width:440px;z-index:999999;\">' +\n    '<div class=\"modal-content\">' +\n    '<div class=\"modal-body\" data-braintree-v1-fallback-iframe-container>' +\n    '<button type=\"button\" data-braintree-v1-fallback-close-button class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">×</button>' +\n    \"</div>\" +\n    \"</div>\" +\n    \"</div>\" +\n    '<div data-braintree-v1-fallback-backdrop style=\"' +\n    \"position: fixed;\" +\n    \"cursor: pointer;\" +\n    \"z-index: 999998;\" +\n    \"top: 0;\" +\n    \"left: 0;\" +\n    \"width: 100%;\" +\n    \"height: 100%;\" +\n    '\"></div>' +\n    \"</div>\";\n\n  modal\n    .querySelector(\"[data-braintree-v1-fallback-iframe-container]\")\n    .appendChild(iframe);\n\n  return modal;\n};\n\nBootstrap3ModalFramework.prototype._createCardinalConfigurationOptions =\n  function (setupOptions) {\n    var options =\n      SongbirdFramework.prototype._createCardinalConfigurationOptions.call(\n        this,\n        setupOptions\n      );\n\n    options.payment.framework = \"bootstrap3\";\n\n    return options;\n  };\n\nmodule.exports = Bootstrap3ModalFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9leHRlcm5hbC9mcmFtZXdvcmtzL2Jvb3RzdHJhcDMtbW9kYWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7O0FBRUEsd0JBQXdCLG1CQUFPLENBQUMscUdBQVk7O0FBRTVDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwySUFBMkk7QUFDM0ksa0RBQWtELGVBQWU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIscUJBQXFCO0FBQ3JCLHFCQUFxQjtBQUNyQixZQUFZO0FBQ1osYUFBYTtBQUNiLGlCQUFpQjtBQUNqQixrQkFBa0I7QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL3RocmVlLWQtc2VjdXJlL2V4dGVybmFsL2ZyYW1ld29ya3MvYm9vdHN0cmFwMy1tb2RhbC5qcz80NjBmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gTkVYVF9NQUpPUl9WRVJTSU9OIGRyb3Agc3VwcG9ydCBmb3IgQm9vdHN0cmFwIGZyYW1ld29yayxcbi8vIHJlY29tZW5kIHVzaW5nIGlubGluZSBmcmFtZSB2ZXJzaW9uIGFuZCBwdXR0aW5nIGl0IGluXG4vLyB0aGUgbWVyY2hhbnQncyBvd24gYm9vdHN0cmFwIG1vZGFsXG5cbnZhciBTb25nYmlyZEZyYW1ld29yayA9IHJlcXVpcmUoXCIuL3NvbmdiaXJkXCIpO1xuXG5mdW5jdGlvbiBCb290c3RyYXAzTW9kYWxGcmFtZXdvcmsob3B0aW9ucykge1xuICBTb25nYmlyZEZyYW1ld29yay5jYWxsKHRoaXMsIG9wdGlvbnMpO1xufVxuXG5Cb290c3RyYXAzTW9kYWxGcmFtZXdvcmsucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShcbiAgU29uZ2JpcmRGcmFtZXdvcmsucHJvdG90eXBlLFxuICB7XG4gICAgY29uc3RydWN0b3I6IFNvbmdiaXJkRnJhbWV3b3JrLFxuICB9XG4pO1xuXG5Cb290c3RyYXAzTW9kYWxGcmFtZXdvcmsucHJvdG90eXBlLl9jcmVhdGVWMUlmcmFtZU1vZGFsRWxlbWVudCA9IGZ1bmN0aW9uIChcbiAgaWZyYW1lXG4pIHtcbiAgdmFyIG1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICBtb2RhbC5pbm5lckhUTUwgPVxuICAgICc8ZGl2IGNsYXNzPVwibW9kYWwgZmFkZSBpblwiIHRhYmluZGV4PVwiLTFcIiByb2xlPVwiZGlhbG9nXCIgYXJpYS1sYWJlbGxlZGJ5PVwiQ0NBRnJhbWVNb2RhbC1sYWJlbFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIHN0eWxlPVwiZGlzcGxheTogYmxvY2s7XCI+JyArXG4gICAgJzxkaXYgY2xhc3M9XCJtb2RhbC1kaWFsb2dcIiBzdHlsZT1cIndpZHRoOjQ0MHB4O3otaW5kZXg6OTk5OTk5O1wiPicgK1xuICAgICc8ZGl2IGNsYXNzPVwibW9kYWwtY29udGVudFwiPicgK1xuICAgICc8ZGl2IGNsYXNzPVwibW9kYWwtYm9keVwiIGRhdGEtYnJhaW50cmVlLXYxLWZhbGxiYWNrLWlmcmFtZS1jb250YWluZXI+JyArXG4gICAgJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGRhdGEtYnJhaW50cmVlLXYxLWZhbGxiYWNrLWNsb3NlLWJ1dHRvbiBjbGFzcz1cImNsb3NlXCIgZGF0YS1kaXNtaXNzPVwibW9kYWxcIiBhcmlhLWhpZGRlbj1cInRydWVcIj7DlzwvYnV0dG9uPicgK1xuICAgIFwiPC9kaXY+XCIgK1xuICAgIFwiPC9kaXY+XCIgK1xuICAgIFwiPC9kaXY+XCIgK1xuICAgICc8ZGl2IGRhdGEtYnJhaW50cmVlLXYxLWZhbGxiYWNrLWJhY2tkcm9wIHN0eWxlPVwiJyArXG4gICAgXCJwb3NpdGlvbjogZml4ZWQ7XCIgK1xuICAgIFwiY3Vyc29yOiBwb2ludGVyO1wiICtcbiAgICBcInotaW5kZXg6IDk5OTk5ODtcIiArXG4gICAgXCJ0b3A6IDA7XCIgK1xuICAgIFwibGVmdDogMDtcIiArXG4gICAgXCJ3aWR0aDogMTAwJTtcIiArXG4gICAgXCJoZWlnaHQ6IDEwMCU7XCIgK1xuICAgICdcIj48L2Rpdj4nICtcbiAgICBcIjwvZGl2PlwiO1xuXG4gIG1vZGFsXG4gICAgLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1icmFpbnRyZWUtdjEtZmFsbGJhY2staWZyYW1lLWNvbnRhaW5lcl1cIilcbiAgICAuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcblxuICByZXR1cm4gbW9kYWw7XG59O1xuXG5Cb290c3RyYXAzTW9kYWxGcmFtZXdvcmsucHJvdG90eXBlLl9jcmVhdGVDYXJkaW5hbENvbmZpZ3VyYXRpb25PcHRpb25zID1cbiAgZnVuY3Rpb24gKHNldHVwT3B0aW9ucykge1xuICAgIHZhciBvcHRpb25zID1cbiAgICAgIFNvbmdiaXJkRnJhbWV3b3JrLnByb3RvdHlwZS5fY3JlYXRlQ2FyZGluYWxDb25maWd1cmF0aW9uT3B0aW9ucy5jYWxsKFxuICAgICAgICB0aGlzLFxuICAgICAgICBzZXR1cE9wdGlvbnNcbiAgICAgICk7XG5cbiAgICBvcHRpb25zLnBheW1lbnQuZnJhbWV3b3JrID0gXCJib290c3RyYXAzXCI7XG5cbiAgICByZXR1cm4gb3B0aW9ucztcbiAgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBCb290c3RyYXAzTW9kYWxGcmFtZXdvcms7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/bootstrap3-modal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/cardinal-modal.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/external/frameworks/cardinal-modal.js ***!
  \*****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar SongbirdFramework = __webpack_require__(/*! ./songbird */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/songbird.js\");\n\nfunction CardinalModalFramework(options) {\n  SongbirdFramework.call(this, options);\n}\n\nCardinalModalFramework.prototype = Object.create(SongbirdFramework.prototype, {\n  constructor: SongbirdFramework,\n});\n\nCardinalModalFramework.prototype._createV1IframeModalElement = function (\n  iframe\n) {\n  var modal = document.createElement(\"div\");\n  var addCloseButton = Boolean(\n    this._createOptions &&\n      this._createOptions.cardinalSDKConfig &&\n      this._createOptions.cardinalSDKConfig.payment &&\n      this._createOptions.cardinalSDKConfig.payment.displayExitButton\n  );\n\n  modal.innerHTML =\n    '<div style=\"' +\n    \"position: fixed;\" +\n    \"z-index: 999999;\" +\n    \"top: 50%;\" +\n    \"left: 50%;\" +\n    \"padding: 24px 20px;\" +\n    \"transform: translate(-50%,-50%);\" +\n    \"border-radius: 2px;\" +\n    \"background: #fff;\" +\n    \"max-width: 100%;\" +\n    \"overflow: auto;\" +\n    '\">' +\n    \"<div>\" +\n    \"<button data-braintree-v1-fallback-close-button \" +\n    'style=\"' +\n    \"font-family: Helvetica,Arial,sans-serif;\" +\n    \"font-size: 25px;\" +\n    \"line-height: 12px;\" +\n    \"position: absolute;\" +\n    \"top: 2px;\" +\n    \"right: 0px;\" +\n    \"cursor: pointer;\" +\n    \"color: #999;\" +\n    \"border: 0;\" +\n    \"outline: none;\" +\n    \"background: none;\" +\n    '\" ' +\n    \"onMouseOver=\\\"this.style.color='#000'\\\" \" +\n    \"onMouseOut=\\\"this.style.color='#999'\\\"\" +\n    \">×</button>\" +\n    \"</div>\" +\n    // iframe container\n    '<div data-braintree-v1-fallback-iframe-container style=\"' +\n    \"height: 400px;\" +\n    '\"></div>' +\n    \"</div>\" +\n    // modal backdrop\n    '<div data-braintree-v1-fallback-backdrop style=\"' +\n    \"position: fixed;\" +\n    \"z-index: 999998;\" +\n    \"cursor: pointer;\" +\n    \"top: 0;\" +\n    \"left: 0;\" +\n    \"width: 100%;\" +\n    \"height: 100%;\" +\n    \"transition: opacity 1ms ease;\" +\n    \"background: rgba(0,0,0,.6);\" +\n    '\"></div>';\n\n  if (!addCloseButton) {\n    modal.querySelector(\n      \"[data-braintree-v1-fallback-close-button]\"\n    ).style.display = \"none\";\n  }\n  modal\n    .querySelector(\"[data-braintree-v1-fallback-iframe-container]\")\n    .appendChild(iframe);\n\n  return modal;\n};\n\nmodule.exports = CardinalModalFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9leHRlcm5hbC9mcmFtZXdvcmtzL2NhcmRpbmFsLW1vZGFsLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHdCQUF3QixtQkFBTyxDQUFDLHFHQUFZOztBQUU1QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixxQkFBcUI7QUFDckIsY0FBYztBQUNkLGVBQWU7QUFDZix3QkFBd0I7QUFDeEIscUNBQXFDO0FBQ3JDLHdCQUF3QjtBQUN4QixzQkFBc0I7QUFDdEIscUJBQXFCO0FBQ3JCLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QyxxQkFBcUI7QUFDckIsdUJBQXVCO0FBQ3ZCLHdCQUF3QjtBQUN4QixjQUFjO0FBQ2QsZ0JBQWdCO0FBQ2hCLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakIsZUFBZTtBQUNmLG1CQUFtQjtBQUNuQixzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIscUJBQXFCO0FBQ3JCLHFCQUFxQjtBQUNyQixZQUFZO0FBQ1osYUFBYTtBQUNiLGlCQUFpQjtBQUNqQixrQkFBa0I7QUFDbEIsa0NBQWtDO0FBQ2xDLGdDQUFnQztBQUNoQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvdGhyZWUtZC1zZWN1cmUvZXh0ZXJuYWwvZnJhbWV3b3Jrcy9jYXJkaW5hbC1tb2RhbC5qcz83YTk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgU29uZ2JpcmRGcmFtZXdvcmsgPSByZXF1aXJlKFwiLi9zb25nYmlyZFwiKTtcblxuZnVuY3Rpb24gQ2FyZGluYWxNb2RhbEZyYW1ld29yayhvcHRpb25zKSB7XG4gIFNvbmdiaXJkRnJhbWV3b3JrLmNhbGwodGhpcywgb3B0aW9ucyk7XG59XG5cbkNhcmRpbmFsTW9kYWxGcmFtZXdvcmsucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTb25nYmlyZEZyYW1ld29yay5wcm90b3R5cGUsIHtcbiAgY29uc3RydWN0b3I6IFNvbmdiaXJkRnJhbWV3b3JrLFxufSk7XG5cbkNhcmRpbmFsTW9kYWxGcmFtZXdvcmsucHJvdG90eXBlLl9jcmVhdGVWMUlmcmFtZU1vZGFsRWxlbWVudCA9IGZ1bmN0aW9uIChcbiAgaWZyYW1lXG4pIHtcbiAgdmFyIG1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgdmFyIGFkZENsb3NlQnV0dG9uID0gQm9vbGVhbihcbiAgICB0aGlzLl9jcmVhdGVPcHRpb25zICYmXG4gICAgICB0aGlzLl9jcmVhdGVPcHRpb25zLmNhcmRpbmFsU0RLQ29uZmlnICYmXG4gICAgICB0aGlzLl9jcmVhdGVPcHRpb25zLmNhcmRpbmFsU0RLQ29uZmlnLnBheW1lbnQgJiZcbiAgICAgIHRoaXMuX2NyZWF0ZU9wdGlvbnMuY2FyZGluYWxTREtDb25maWcucGF5bWVudC5kaXNwbGF5RXhpdEJ1dHRvblxuICApO1xuXG4gIG1vZGFsLmlubmVySFRNTCA9XG4gICAgJzxkaXYgc3R5bGU9XCInICtcbiAgICBcInBvc2l0aW9uOiBmaXhlZDtcIiArXG4gICAgXCJ6LWluZGV4OiA5OTk5OTk7XCIgK1xuICAgIFwidG9wOiA1MCU7XCIgK1xuICAgIFwibGVmdDogNTAlO1wiICtcbiAgICBcInBhZGRpbmc6IDI0cHggMjBweDtcIiArXG4gICAgXCJ0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpO1wiICtcbiAgICBcImJvcmRlci1yYWRpdXM6IDJweDtcIiArXG4gICAgXCJiYWNrZ3JvdW5kOiAjZmZmO1wiICtcbiAgICBcIm1heC13aWR0aDogMTAwJTtcIiArXG4gICAgXCJvdmVyZmxvdzogYXV0bztcIiArXG4gICAgJ1wiPicgK1xuICAgIFwiPGRpdj5cIiArXG4gICAgXCI8YnV0dG9uIGRhdGEtYnJhaW50cmVlLXYxLWZhbGxiYWNrLWNsb3NlLWJ1dHRvbiBcIiArXG4gICAgJ3N0eWxlPVwiJyArXG4gICAgXCJmb250LWZhbWlseTogSGVsdmV0aWNhLEFyaWFsLHNhbnMtc2VyaWY7XCIgK1xuICAgIFwiZm9udC1zaXplOiAyNXB4O1wiICtcbiAgICBcImxpbmUtaGVpZ2h0OiAxMnB4O1wiICtcbiAgICBcInBvc2l0aW9uOiBhYnNvbHV0ZTtcIiArXG4gICAgXCJ0b3A6IDJweDtcIiArXG4gICAgXCJyaWdodDogMHB4O1wiICtcbiAgICBcImN1cnNvcjogcG9pbnRlcjtcIiArXG4gICAgXCJjb2xvcjogIzk5OTtcIiArXG4gICAgXCJib3JkZXI6IDA7XCIgK1xuICAgIFwib3V0bGluZTogbm9uZTtcIiArXG4gICAgXCJiYWNrZ3JvdW5kOiBub25lO1wiICtcbiAgICAnXCIgJyArXG4gICAgXCJvbk1vdXNlT3Zlcj1cXFwidGhpcy5zdHlsZS5jb2xvcj0nIzAwMCdcXFwiIFwiICtcbiAgICBcIm9uTW91c2VPdXQ9XFxcInRoaXMuc3R5bGUuY29sb3I9JyM5OTknXFxcIlwiICtcbiAgICBcIj7DlzwvYnV0dG9uPlwiICtcbiAgICBcIjwvZGl2PlwiICtcbiAgICAvLyBpZnJhbWUgY29udGFpbmVyXG4gICAgJzxkaXYgZGF0YS1icmFpbnRyZWUtdjEtZmFsbGJhY2staWZyYW1lLWNvbnRhaW5lciBzdHlsZT1cIicgK1xuICAgIFwiaGVpZ2h0OiA0MDBweDtcIiArXG4gICAgJ1wiPjwvZGl2PicgK1xuICAgIFwiPC9kaXY+XCIgK1xuICAgIC8vIG1vZGFsIGJhY2tkcm9wXG4gICAgJzxkaXYgZGF0YS1icmFpbnRyZWUtdjEtZmFsbGJhY2stYmFja2Ryb3Agc3R5bGU9XCInICtcbiAgICBcInBvc2l0aW9uOiBmaXhlZDtcIiArXG4gICAgXCJ6LWluZGV4OiA5OTk5OTg7XCIgK1xuICAgIFwiY3Vyc29yOiBwb2ludGVyO1wiICtcbiAgICBcInRvcDogMDtcIiArXG4gICAgXCJsZWZ0OiAwO1wiICtcbiAgICBcIndpZHRoOiAxMDAlO1wiICtcbiAgICBcImhlaWdodDogMTAwJTtcIiArXG4gICAgXCJ0cmFuc2l0aW9uOiBvcGFjaXR5IDFtcyBlYXNlO1wiICtcbiAgICBcImJhY2tncm91bmQ6IHJnYmEoMCwwLDAsLjYpO1wiICtcbiAgICAnXCI+PC9kaXY+JztcblxuICBpZiAoIWFkZENsb3NlQnV0dG9uKSB7XG4gICAgbW9kYWwucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiW2RhdGEtYnJhaW50cmVlLXYxLWZhbGxiYWNrLWNsb3NlLWJ1dHRvbl1cIlxuICAgICkuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICB9XG4gIG1vZGFsXG4gICAgLnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1icmFpbnRyZWUtdjEtZmFsbGJhY2staWZyYW1lLWNvbnRhaW5lcl1cIilcbiAgICAuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcblxuICByZXR1cm4gbW9kYWw7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhcmRpbmFsTW9kYWxGcmFtZXdvcms7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/cardinal-modal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/external/frameworks/index.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar LegacyFramework = __webpack_require__(/*! ./legacy */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/legacy.js\");\nvar CardinalModalFramework = __webpack_require__(/*! ./cardinal-modal */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/cardinal-modal.js\");\nvar Bootstrap3ModalFramework = __webpack_require__(/*! ./bootstrap3-modal */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/bootstrap3-modal.js\");\nvar InlineIframeFramework = __webpack_require__(/*! ./inline-iframe */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/inline-iframe.js\");\n\nmodule.exports = {\n  legacy: LegacyFramework,\n  \"cardinal-modal\": CardinalModalFramework,\n  \"bootstrap3-modal\": Bootstrap3ModalFramework,\n  \"inline-iframe\": InlineIframeFramework,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9leHRlcm5hbC9mcmFtZXdvcmtzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHNCQUFzQixtQkFBTyxDQUFDLGlHQUFVO0FBQ3hDLDZCQUE2QixtQkFBTyxDQUFDLGlIQUFrQjtBQUN2RCwrQkFBK0IsbUJBQU8sQ0FBQyxxSEFBb0I7QUFDM0QsNEJBQTRCLG1CQUFPLENBQUMsK0dBQWlCOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvdGhyZWUtZC1zZWN1cmUvZXh0ZXJuYWwvZnJhbWV3b3Jrcy9pbmRleC5qcz81NTgzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgTGVnYWN5RnJhbWV3b3JrID0gcmVxdWlyZShcIi4vbGVnYWN5XCIpO1xudmFyIENhcmRpbmFsTW9kYWxGcmFtZXdvcmsgPSByZXF1aXJlKFwiLi9jYXJkaW5hbC1tb2RhbFwiKTtcbnZhciBCb290c3RyYXAzTW9kYWxGcmFtZXdvcmsgPSByZXF1aXJlKFwiLi9ib290c3RyYXAzLW1vZGFsXCIpO1xudmFyIElubGluZUlmcmFtZUZyYW1ld29yayA9IHJlcXVpcmUoXCIuL2lubGluZS1pZnJhbWVcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBsZWdhY3k6IExlZ2FjeUZyYW1ld29yayxcbiAgXCJjYXJkaW5hbC1tb2RhbFwiOiBDYXJkaW5hbE1vZGFsRnJhbWV3b3JrLFxuICBcImJvb3RzdHJhcDMtbW9kYWxcIjogQm9vdHN0cmFwM01vZGFsRnJhbWV3b3JrLFxuICBcImlubGluZS1pZnJhbWVcIjogSW5saW5lSWZyYW1lRnJhbWV3b3JrLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/inline-iframe.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/external/frameworks/inline-iframe.js ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar SongbirdFramework = __webpack_require__(/*! ./songbird */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/songbird.js\");\nvar BraintreeError = __webpack_require__(/*! ../../../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar errors = __webpack_require__(/*! ../../shared/errors */ \"(ssr)/./node_modules/braintree-web/three-d-secure/shared/errors.js\");\nvar enumerate = __webpack_require__(/*! ../../../lib/enumerate */ \"(ssr)/./node_modules/braintree-web/lib/enumerate.js\");\n\nfunction InlineIframeFramework(options) {\n  SongbirdFramework.call(this, options);\n}\n\nInlineIframeFramework.prototype = Object.create(SongbirdFramework.prototype, {\n  constructor: SongbirdFramework,\n});\n\nInlineIframeFramework.events = enumerate(\n  [\"AUTHENTICATION_IFRAME_AVAILABLE\"],\n  \"inline-iframe-framework:\"\n);\n\nInlineIframeFramework.prototype.setUpEventListeners = function (reply) {\n  SongbirdFramework.prototype.setUpEventListeners.call(this, reply);\n\n  this.on(\n    InlineIframeFramework.events.AUTHENTICATION_IFRAME_AVAILABLE,\n    function (payload, next) {\n      reply(\"authentication-iframe-available\", payload, next);\n    }\n  );\n};\n\nInlineIframeFramework.prototype._createCardinalConfigurationOptions = function (\n  setupOptions\n) {\n  var options =\n    SongbirdFramework.prototype._createCardinalConfigurationOptions.call(\n      this,\n      setupOptions\n    );\n\n  options.payment.framework = \"inline\";\n\n  return options;\n};\n\nInlineIframeFramework.prototype._addV1IframeToPage = function () {\n  this._emit(\n    InlineIframeFramework.events.AUTHENTICATION_IFRAME_AVAILABLE,\n    {\n      element: this._v1Modal,\n    },\n    function () {\n      // NOOP\n    }\n  );\n};\n\nInlineIframeFramework.prototype._setupFrameworkSpecificListeners = function () {\n  this.setCardinalListener(\"ui.inline.setup\", this._onInlineSetup.bind(this));\n};\n\nInlineIframeFramework.prototype._onInlineSetup = function (\n  htmlTemplate,\n  details,\n  resolve,\n  reject\n) {\n  var container, hasError;\n\n  if (!htmlTemplate || !details) {\n    hasError = true;\n  } else if (details.paymentType !== \"CCA\") {\n    hasError = true;\n  } else if (\n    !(details.data.mode === \"suppress\" || details.data.mode === \"static\")\n  ) {\n    hasError = true;\n  }\n\n  if (hasError) {\n    reject(new BraintreeError(errors.THREEDS_INLINE_IFRAME_DETAILS_INCORRECT));\n\n    return;\n  }\n\n  container = document.createElement(\"div\");\n  container.innerHTML = htmlTemplate;\n\n  if (details.data.mode === \"suppress\") {\n    container.style.display = \"none\";\n    document.body.appendChild(container);\n    resolve();\n  } else if (details.data.mode === \"static\") {\n    this._emit(\n      InlineIframeFramework.events.AUTHENTICATION_IFRAME_AVAILABLE,\n      {\n        element: container,\n      },\n      function () {\n        resolve();\n      }\n    );\n  }\n};\n\nmodule.exports = InlineIframeFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9leHRlcm5hbC9mcmFtZXdvcmtzL2lubGluZS1pZnJhbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsd0JBQXdCLG1CQUFPLENBQUMscUdBQVk7QUFDNUMscUJBQXFCLG1CQUFPLENBQUMsK0ZBQThCO0FBQzNELGFBQWEsbUJBQU8sQ0FBQywrRkFBcUI7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMsbUZBQXdCOztBQUVoRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9leHRlcm5hbC9mcmFtZXdvcmtzL2lubGluZS1pZnJhbWUuanM/NWUzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIFNvbmdiaXJkRnJhbWV3b3JrID0gcmVxdWlyZShcIi4vc29uZ2JpcmRcIik7XG52YXIgQnJhaW50cmVlRXJyb3IgPSByZXF1aXJlKFwiLi4vLi4vLi4vbGliL2JyYWludHJlZS1lcnJvclwiKTtcbnZhciBlcnJvcnMgPSByZXF1aXJlKFwiLi4vLi4vc2hhcmVkL2Vycm9yc1wiKTtcbnZhciBlbnVtZXJhdGUgPSByZXF1aXJlKFwiLi4vLi4vLi4vbGliL2VudW1lcmF0ZVwiKTtcblxuZnVuY3Rpb24gSW5saW5lSWZyYW1lRnJhbWV3b3JrKG9wdGlvbnMpIHtcbiAgU29uZ2JpcmRGcmFtZXdvcmsuY2FsbCh0aGlzLCBvcHRpb25zKTtcbn1cblxuSW5saW5lSWZyYW1lRnJhbWV3b3JrLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU29uZ2JpcmRGcmFtZXdvcmsucHJvdG90eXBlLCB7XG4gIGNvbnN0cnVjdG9yOiBTb25nYmlyZEZyYW1ld29yayxcbn0pO1xuXG5JbmxpbmVJZnJhbWVGcmFtZXdvcmsuZXZlbnRzID0gZW51bWVyYXRlKFxuICBbXCJBVVRIRU5USUNBVElPTl9JRlJBTUVfQVZBSUxBQkxFXCJdLFxuICBcImlubGluZS1pZnJhbWUtZnJhbWV3b3JrOlwiXG4pO1xuXG5JbmxpbmVJZnJhbWVGcmFtZXdvcmsucHJvdG90eXBlLnNldFVwRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAocmVwbHkpIHtcbiAgU29uZ2JpcmRGcmFtZXdvcmsucHJvdG90eXBlLnNldFVwRXZlbnRMaXN0ZW5lcnMuY2FsbCh0aGlzLCByZXBseSk7XG5cbiAgdGhpcy5vbihcbiAgICBJbmxpbmVJZnJhbWVGcmFtZXdvcmsuZXZlbnRzLkFVVEhFTlRJQ0FUSU9OX0lGUkFNRV9BVkFJTEFCTEUsXG4gICAgZnVuY3Rpb24gKHBheWxvYWQsIG5leHQpIHtcbiAgICAgIHJlcGx5KFwiYXV0aGVudGljYXRpb24taWZyYW1lLWF2YWlsYWJsZVwiLCBwYXlsb2FkLCBuZXh0KTtcbiAgICB9XG4gICk7XG59O1xuXG5JbmxpbmVJZnJhbWVGcmFtZXdvcmsucHJvdG90eXBlLl9jcmVhdGVDYXJkaW5hbENvbmZpZ3VyYXRpb25PcHRpb25zID0gZnVuY3Rpb24gKFxuICBzZXR1cE9wdGlvbnNcbikge1xuICB2YXIgb3B0aW9ucyA9XG4gICAgU29uZ2JpcmRGcmFtZXdvcmsucHJvdG90eXBlLl9jcmVhdGVDYXJkaW5hbENvbmZpZ3VyYXRpb25PcHRpb25zLmNhbGwoXG4gICAgICB0aGlzLFxuICAgICAgc2V0dXBPcHRpb25zXG4gICAgKTtcblxuICBvcHRpb25zLnBheW1lbnQuZnJhbWV3b3JrID0gXCJpbmxpbmVcIjtcblxuICByZXR1cm4gb3B0aW9ucztcbn07XG5cbklubGluZUlmcmFtZUZyYW1ld29yay5wcm90b3R5cGUuX2FkZFYxSWZyYW1lVG9QYWdlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLl9lbWl0KFxuICAgIElubGluZUlmcmFtZUZyYW1ld29yay5ldmVudHMuQVVUSEVOVElDQVRJT05fSUZSQU1FX0FWQUlMQUJMRSxcbiAgICB7XG4gICAgICBlbGVtZW50OiB0aGlzLl92MU1vZGFsLFxuICAgIH0sXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgLy8gTk9PUFxuICAgIH1cbiAgKTtcbn07XG5cbklubGluZUlmcmFtZUZyYW1ld29yay5wcm90b3R5cGUuX3NldHVwRnJhbWV3b3JrU3BlY2lmaWNMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuc2V0Q2FyZGluYWxMaXN0ZW5lcihcInVpLmlubGluZS5zZXR1cFwiLCB0aGlzLl9vbklubGluZVNldHVwLmJpbmQodGhpcykpO1xufTtcblxuSW5saW5lSWZyYW1lRnJhbWV3b3JrLnByb3RvdHlwZS5fb25JbmxpbmVTZXR1cCA9IGZ1bmN0aW9uIChcbiAgaHRtbFRlbXBsYXRlLFxuICBkZXRhaWxzLFxuICByZXNvbHZlLFxuICByZWplY3Rcbikge1xuICB2YXIgY29udGFpbmVyLCBoYXNFcnJvcjtcblxuICBpZiAoIWh0bWxUZW1wbGF0ZSB8fCAhZGV0YWlscykge1xuICAgIGhhc0Vycm9yID0gdHJ1ZTtcbiAgfSBlbHNlIGlmIChkZXRhaWxzLnBheW1lbnRUeXBlICE9PSBcIkNDQVwiKSB7XG4gICAgaGFzRXJyb3IgPSB0cnVlO1xuICB9IGVsc2UgaWYgKFxuICAgICEoZGV0YWlscy5kYXRhLm1vZGUgPT09IFwic3VwcHJlc3NcIiB8fCBkZXRhaWxzLmRhdGEubW9kZSA9PT0gXCJzdGF0aWNcIilcbiAgKSB7XG4gICAgaGFzRXJyb3IgPSB0cnVlO1xuICB9XG5cbiAgaWYgKGhhc0Vycm9yKSB7XG4gICAgcmVqZWN0KG5ldyBCcmFpbnRyZWVFcnJvcihlcnJvcnMuVEhSRUVEU19JTkxJTkVfSUZSQU1FX0RFVEFJTFNfSU5DT1JSRUNUKSk7XG5cbiAgICByZXR1cm47XG4gIH1cblxuICBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb250YWluZXIuaW5uZXJIVE1MID0gaHRtbFRlbXBsYXRlO1xuXG4gIGlmIChkZXRhaWxzLmRhdGEubW9kZSA9PT0gXCJzdXBwcmVzc1wiKSB7XG4gICAgY29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG4gICAgcmVzb2x2ZSgpO1xuICB9IGVsc2UgaWYgKGRldGFpbHMuZGF0YS5tb2RlID09PSBcInN0YXRpY1wiKSB7XG4gICAgdGhpcy5fZW1pdChcbiAgICAgIElubGluZUlmcmFtZUZyYW1ld29yay5ldmVudHMuQVVUSEVOVElDQVRJT05fSUZSQU1FX0FWQUlMQUJMRSxcbiAgICAgIHtcbiAgICAgICAgZWxlbWVudDogY29udGFpbmVyLFxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgfVxuICAgICk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSW5saW5lSWZyYW1lRnJhbWV3b3JrO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/inline-iframe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/legacy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/external/frameworks/legacy.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BaseFramework = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/base.js\");\nvar deferred = __webpack_require__(/*! ../../../lib/deferred */ \"(ssr)/./node_modules/braintree-web/lib/deferred.js\");\n\nfunction LegacyFramework(options) {\n  BaseFramework.call(this, options);\n}\n\nLegacyFramework.prototype = Object.create(BaseFramework.prototype, {\n  constructor: LegacyFramework,\n});\n\nLegacyFramework.prototype.setUpEventListeners = function () {\n  // noop\n};\n\nLegacyFramework.prototype.transformV1CustomerBillingAddress = function (\n  customer\n) {\n  customer.billingAddress.line1 = customer.billingAddress.streetAddress;\n  customer.billingAddress.line2 = customer.billingAddress.extendedAddress;\n  customer.billingAddress.city = customer.billingAddress.locality;\n  customer.billingAddress.state = customer.billingAddress.region;\n  customer.billingAddress.countryCode =\n    customer.billingAddress.countryCodeAlpha2;\n  delete customer.billingAddress.streetAddress;\n  delete customer.billingAddress.extendedAddress;\n  delete customer.billingAddress.locality;\n  delete customer.billingAddress.region;\n  delete customer.billingAddress.countryCodeAlpha2;\n\n  return customer;\n};\n\nLegacyFramework.prototype._createIframe = function (options) {\n  var self = this;\n\n  this._setupV1Elements({\n    nonce: options.nonce,\n    lookupResponse: options.lookupResponse,\n    showLoader: options.showLoader,\n    handleAuthResponse: function (data) {\n      self._handleAuthResponse(data, options);\n    },\n  });\n\n  return this._v1Iframe;\n};\n\nLegacyFramework.prototype._handleAuthResponse = function (data, options) {\n  this._v1Bus.teardown();\n\n  options.removeFrame();\n\n  // This also has to be in a setTimeout so it executes after the `removeFrame`.\n  deferred(\n    function () {\n      this._handleV1AuthResponse(data);\n    }.bind(this)\n  )();\n};\n\nLegacyFramework.prototype._checkForFrameworkSpecificVerifyCardErrors =\n  function (options) {\n    var errorOption;\n\n    if (typeof options.addFrame !== \"function\") {\n      errorOption = \"an addFrame function\";\n    } else if (typeof options.removeFrame !== \"function\") {\n      errorOption = \"a removeFrame function\";\n    }\n\n    return errorOption;\n  };\n\nLegacyFramework.prototype._formatVerifyCardOptions = function (options) {\n  var modifiedOptions = BaseFramework.prototype._formatVerifyCardOptions.call(\n    this,\n    options\n  );\n\n  modifiedOptions.addFrame = deferred(options.addFrame);\n  modifiedOptions.removeFrame = deferred(options.removeFrame);\n  modifiedOptions.showLoader = options.showLoader !== false;\n\n  return modifiedOptions;\n};\n\nLegacyFramework.prototype._formatLookupData = function (options) {\n  var self = this;\n\n  return BaseFramework.prototype._formatLookupData\n    .call(this, options)\n    .then(function (data) {\n      if (options.customer && options.customer.billingAddress) {\n        data.customer = self.transformV1CustomerBillingAddress(\n          options.customer\n        );\n      }\n\n      return data;\n    });\n};\n\nLegacyFramework.prototype._presentChallenge = function (\n  lookupResponse,\n  options\n) {\n  options.addFrame(\n    null,\n    this._createIframe({\n      showLoader: options.showLoader,\n      lookupResponse: lookupResponse.lookup,\n      nonce: lookupResponse.paymentMethod.nonce,\n      removeFrame: options.removeFrame,\n    })\n  );\n};\n\nmodule.exports = LegacyFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9leHRlcm5hbC9mcmFtZXdvcmtzL2xlZ2FjeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixvQkFBb0IsbUJBQU8sQ0FBQyw2RkFBUTtBQUNwQyxlQUFlLG1CQUFPLENBQUMsaUZBQXVCOztBQUU5QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvdGhyZWUtZC1zZWN1cmUvZXh0ZXJuYWwvZnJhbWV3b3Jrcy9sZWdhY3kuanM/ZWNlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIEJhc2VGcmFtZXdvcmsgPSByZXF1aXJlKFwiLi9iYXNlXCIpO1xudmFyIGRlZmVycmVkID0gcmVxdWlyZShcIi4uLy4uLy4uL2xpYi9kZWZlcnJlZFwiKTtcblxuZnVuY3Rpb24gTGVnYWN5RnJhbWV3b3JrKG9wdGlvbnMpIHtcbiAgQmFzZUZyYW1ld29yay5jYWxsKHRoaXMsIG9wdGlvbnMpO1xufVxuXG5MZWdhY3lGcmFtZXdvcmsucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShCYXNlRnJhbWV3b3JrLnByb3RvdHlwZSwge1xuICBjb25zdHJ1Y3RvcjogTGVnYWN5RnJhbWV3b3JrLFxufSk7XG5cbkxlZ2FjeUZyYW1ld29yay5wcm90b3R5cGUuc2V0VXBFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gbm9vcFxufTtcblxuTGVnYWN5RnJhbWV3b3JrLnByb3RvdHlwZS50cmFuc2Zvcm1WMUN1c3RvbWVyQmlsbGluZ0FkZHJlc3MgPSBmdW5jdGlvbiAoXG4gIGN1c3RvbWVyXG4pIHtcbiAgY3VzdG9tZXIuYmlsbGluZ0FkZHJlc3MubGluZTEgPSBjdXN0b21lci5iaWxsaW5nQWRkcmVzcy5zdHJlZXRBZGRyZXNzO1xuICBjdXN0b21lci5iaWxsaW5nQWRkcmVzcy5saW5lMiA9IGN1c3RvbWVyLmJpbGxpbmdBZGRyZXNzLmV4dGVuZGVkQWRkcmVzcztcbiAgY3VzdG9tZXIuYmlsbGluZ0FkZHJlc3MuY2l0eSA9IGN1c3RvbWVyLmJpbGxpbmdBZGRyZXNzLmxvY2FsaXR5O1xuICBjdXN0b21lci5iaWxsaW5nQWRkcmVzcy5zdGF0ZSA9IGN1c3RvbWVyLmJpbGxpbmdBZGRyZXNzLnJlZ2lvbjtcbiAgY3VzdG9tZXIuYmlsbGluZ0FkZHJlc3MuY291bnRyeUNvZGUgPVxuICAgIGN1c3RvbWVyLmJpbGxpbmdBZGRyZXNzLmNvdW50cnlDb2RlQWxwaGEyO1xuICBkZWxldGUgY3VzdG9tZXIuYmlsbGluZ0FkZHJlc3Muc3RyZWV0QWRkcmVzcztcbiAgZGVsZXRlIGN1c3RvbWVyLmJpbGxpbmdBZGRyZXNzLmV4dGVuZGVkQWRkcmVzcztcbiAgZGVsZXRlIGN1c3RvbWVyLmJpbGxpbmdBZGRyZXNzLmxvY2FsaXR5O1xuICBkZWxldGUgY3VzdG9tZXIuYmlsbGluZ0FkZHJlc3MucmVnaW9uO1xuICBkZWxldGUgY3VzdG9tZXIuYmlsbGluZ0FkZHJlc3MuY291bnRyeUNvZGVBbHBoYTI7XG5cbiAgcmV0dXJuIGN1c3RvbWVyO1xufTtcblxuTGVnYWN5RnJhbWV3b3JrLnByb3RvdHlwZS5fY3JlYXRlSWZyYW1lID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gIHRoaXMuX3NldHVwVjFFbGVtZW50cyh7XG4gICAgbm9uY2U6IG9wdGlvbnMubm9uY2UsXG4gICAgbG9va3VwUmVzcG9uc2U6IG9wdGlvbnMubG9va3VwUmVzcG9uc2UsXG4gICAgc2hvd0xvYWRlcjogb3B0aW9ucy5zaG93TG9hZGVyLFxuICAgIGhhbmRsZUF1dGhSZXNwb25zZTogZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgIHNlbGYuX2hhbmRsZUF1dGhSZXNwb25zZShkYXRhLCBvcHRpb25zKTtcbiAgICB9LFxuICB9KTtcblxuICByZXR1cm4gdGhpcy5fdjFJZnJhbWU7XG59O1xuXG5MZWdhY3lGcmFtZXdvcmsucHJvdG90eXBlLl9oYW5kbGVBdXRoUmVzcG9uc2UgPSBmdW5jdGlvbiAoZGF0YSwgb3B0aW9ucykge1xuICB0aGlzLl92MUJ1cy50ZWFyZG93bigpO1xuXG4gIG9wdGlvbnMucmVtb3ZlRnJhbWUoKTtcblxuICAvLyBUaGlzIGFsc28gaGFzIHRvIGJlIGluIGEgc2V0VGltZW91dCBzbyBpdCBleGVjdXRlcyBhZnRlciB0aGUgYHJlbW92ZUZyYW1lYC5cbiAgZGVmZXJyZWQoXG4gICAgZnVuY3Rpb24gKCkge1xuICAgICAgdGhpcy5faGFuZGxlVjFBdXRoUmVzcG9uc2UoZGF0YSk7XG4gICAgfS5iaW5kKHRoaXMpXG4gICkoKTtcbn07XG5cbkxlZ2FjeUZyYW1ld29yay5wcm90b3R5cGUuX2NoZWNrRm9yRnJhbWV3b3JrU3BlY2lmaWNWZXJpZnlDYXJkRXJyb3JzID1cbiAgZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgICB2YXIgZXJyb3JPcHRpb247XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuYWRkRnJhbWUgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgZXJyb3JPcHRpb24gPSBcImFuIGFkZEZyYW1lIGZ1bmN0aW9uXCI7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5yZW1vdmVGcmFtZSAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBlcnJvck9wdGlvbiA9IFwiYSByZW1vdmVGcmFtZSBmdW5jdGlvblwiO1xuICAgIH1cblxuICAgIHJldHVybiBlcnJvck9wdGlvbjtcbiAgfTtcblxuTGVnYWN5RnJhbWV3b3JrLnByb3RvdHlwZS5fZm9ybWF0VmVyaWZ5Q2FyZE9wdGlvbnMgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICB2YXIgbW9kaWZpZWRPcHRpb25zID0gQmFzZUZyYW1ld29yay5wcm90b3R5cGUuX2Zvcm1hdFZlcmlmeUNhcmRPcHRpb25zLmNhbGwoXG4gICAgdGhpcyxcbiAgICBvcHRpb25zXG4gICk7XG5cbiAgbW9kaWZpZWRPcHRpb25zLmFkZEZyYW1lID0gZGVmZXJyZWQob3B0aW9ucy5hZGRGcmFtZSk7XG4gIG1vZGlmaWVkT3B0aW9ucy5yZW1vdmVGcmFtZSA9IGRlZmVycmVkKG9wdGlvbnMucmVtb3ZlRnJhbWUpO1xuICBtb2RpZmllZE9wdGlvbnMuc2hvd0xvYWRlciA9IG9wdGlvbnMuc2hvd0xvYWRlciAhPT0gZmFsc2U7XG5cbiAgcmV0dXJuIG1vZGlmaWVkT3B0aW9ucztcbn07XG5cbkxlZ2FjeUZyYW1ld29yay5wcm90b3R5cGUuX2Zvcm1hdExvb2t1cERhdGEgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgcmV0dXJuIEJhc2VGcmFtZXdvcmsucHJvdG90eXBlLl9mb3JtYXRMb29rdXBEYXRhXG4gICAgLmNhbGwodGhpcywgb3B0aW9ucylcbiAgICAudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgaWYgKG9wdGlvbnMuY3VzdG9tZXIgJiYgb3B0aW9ucy5jdXN0b21lci5iaWxsaW5nQWRkcmVzcykge1xuICAgICAgICBkYXRhLmN1c3RvbWVyID0gc2VsZi50cmFuc2Zvcm1WMUN1c3RvbWVyQmlsbGluZ0FkZHJlc3MoXG4gICAgICAgICAgb3B0aW9ucy5jdXN0b21lclxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9KTtcbn07XG5cbkxlZ2FjeUZyYW1ld29yay5wcm90b3R5cGUuX3ByZXNlbnRDaGFsbGVuZ2UgPSBmdW5jdGlvbiAoXG4gIGxvb2t1cFJlc3BvbnNlLFxuICBvcHRpb25zXG4pIHtcbiAgb3B0aW9ucy5hZGRGcmFtZShcbiAgICBudWxsLFxuICAgIHRoaXMuX2NyZWF0ZUlmcmFtZSh7XG4gICAgICBzaG93TG9hZGVyOiBvcHRpb25zLnNob3dMb2FkZXIsXG4gICAgICBsb29rdXBSZXNwb25zZTogbG9va3VwUmVzcG9uc2UubG9va3VwLFxuICAgICAgbm9uY2U6IGxvb2t1cFJlc3BvbnNlLnBheW1lbnRNZXRob2Qubm9uY2UsXG4gICAgICByZW1vdmVGcmFtZTogb3B0aW9ucy5yZW1vdmVGcmFtZSxcbiAgICB9KVxuICApO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBMZWdhY3lGcmFtZXdvcms7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/legacy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/songbird.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/external/frameworks/songbird.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar BaseFramework = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/base.js\");\nvar assign = (__webpack_require__(/*! ../../../lib/assign */ \"(ssr)/./node_modules/braintree-web/lib/assign.js\").assign);\nvar deferred = __webpack_require__(/*! ../../../lib/deferred */ \"(ssr)/./node_modules/braintree-web/lib/deferred.js\");\nvar BraintreeError = __webpack_require__(/*! ../../../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar convertToBraintreeError = __webpack_require__(/*! ../../../lib/convert-to-braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-to-braintree-error.js\");\nvar analytics = __webpack_require__(/*! ../../../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar assets = __webpack_require__(/*! ../../../lib/assets */ \"(ssr)/./node_modules/braintree-web/lib/assets.js\");\nvar errors = __webpack_require__(/*! ../../shared/errors */ \"(ssr)/./node_modules/braintree-web/three-d-secure/shared/errors.js\");\nvar enumerate = __webpack_require__(/*! ../../../lib/enumerate */ \"(ssr)/./node_modules/braintree-web/lib/enumerate.js\");\nvar constants = __webpack_require__(/*! ../../shared/constants */ \"(ssr)/./node_modules/braintree-web/three-d-secure/shared/constants.js\");\nvar ExtendedPromise = __webpack_require__(/*! @braintree/extended-promise */ \"(ssr)/./node_modules/@braintree/extended-promise/dist/index.js\");\n\nvar INTEGRATION_TIMEOUT_MS =\n  (__webpack_require__(/*! ../../../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").INTEGRATION_TIMEOUT_MS);\nvar PLATFORM = (__webpack_require__(/*! ../../../lib/constants */ \"(ssr)/./node_modules/braintree-web/lib/constants.js\").PLATFORM);\nvar VERSION = \"3.99.0\";\nvar CUSTOMER_CANCELED_SONGBIRD_MODAL = \"01\";\nvar SONGBIRD_UI_EVENTS = [\n  \"ui.close\",\n  \"ui.render\",\n\n  // TODO these events are not documented in the\n  // client reference because so far we have\n  // not been able to trigger them in our testing\n  \"ui.renderHidden\",\n  \"ui.loading.close\",\n  \"ui.loading.render\",\n];\n\nvar SCA_EXEMPTION_TYPES = [\"low_value\", \"transaction_risk_analysis\"];\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\nfunction SongbirdFramework(options) {\n  BaseFramework.call(this, options);\n\n  this._useV1Fallback = false;\n  this._clientMetadata = {\n    requestedThreeDSecureVersion: \"2\",\n    sdkVersion: PLATFORM + \"/\" + VERSION,\n  };\n  this.originalSetupOptions = options;\n  this._getDfReferenceIdPromisePlus = new ExtendedPromise();\n  this.setupSongbird(options);\n  this._cardinalEvents = [];\n}\n\nSongbirdFramework.prototype = Object.create(BaseFramework.prototype, {\n  constructor: SongbirdFramework,\n});\n\nSongbirdFramework.events = enumerate(\n  [\n    \"LOOKUP_COMPLETE\",\n    \"CUSTOMER_CANCELED\",\n    \"UI.CLOSE\",\n    \"UI.RENDER\",\n    \"UI.RENDERHIDDEN\",\n    \"UI.LOADING.CLOSE\",\n    \"UI.LOADING.RENDER\",\n  ],\n  \"songbird-framework:\"\n);\n\nSongbirdFramework.prototype.setUpEventListeners = function (reply) {\n  this.on(SongbirdFramework.events.LOOKUP_COMPLETE, function (data, next) {\n    reply(\"lookup-complete\", data, next);\n  });\n  this.on(SongbirdFramework.events.CUSTOMER_CANCELED, function () {\n    reply(\"customer-canceled\");\n  });\n  this.on(SongbirdFramework.events[\"UI.CLOSE\"], function () {\n    reply(\"authentication-modal-close\");\n  });\n  this.on(SongbirdFramework.events[\"UI.RENDER\"], function () {\n    reply(\"authentication-modal-render\");\n  });\n  this.on(SongbirdFramework.events[\"UI.RENDERHIDDEN\"], function () {\n    reply(\"authentication-modal-render-hidden\");\n  });\n  this.on(SongbirdFramework.events[\"UI.LOADING.CLOSE\"], function () {\n    reply(\"authentication-modal-loader-close\");\n  });\n  this.on(SongbirdFramework.events[\"UI.LOADING.RENDER\"], function () {\n    reply(\"authentication-modal-loader-render\");\n  });\n};\n\nSongbirdFramework.prototype.prepareLookup = function (options) {\n  var data = assign({}, options);\n  var self = this;\n\n  return this.getDfReferenceId()\n    .then(function (id) {\n      data.dfReferenceId = id;\n    })\n    .then(function () {\n      return self._triggerCardinalBinProcess(options.bin);\n    })\n    .catch(function () {\n      // catch and ignore errors from looking up\n      // df reference and Cardinal bin process\n    })\n    .then(function () {\n      return self._waitForClient();\n    })\n    .then(function () {\n      data.clientMetadata = self._clientMetadata;\n      data.authorizationFingerprint =\n        self._client.getConfiguration().authorizationFingerprint;\n      data.braintreeLibraryVersion = \"braintree/web/\" + VERSION;\n\n      return data;\n    });\n};\n\nSongbirdFramework.prototype.initializeChallengeWithLookupResponse = function (\n  lookupResponse,\n  options\n) {\n  return this.setupSongbird().then(\n    function () {\n      return BaseFramework.prototype.initializeChallengeWithLookupResponse.call(\n        this,\n        lookupResponse,\n        options\n      );\n    }.bind(this)\n  );\n};\n\nSongbirdFramework.prototype.initiateV1Fallback = function (errorType) {\n  this._useV1Fallback = true;\n  this._removeSongbirdListeners();\n  analytics.sendEvent(\n    this._createPromise,\n    \"three-d-secure.v1-fallback.\" + errorType\n  );\n\n  if (this._songbirdPromise) {\n    this._songbirdPromise.resolve();\n  }\n};\n\nSongbirdFramework.prototype._triggerCardinalBinProcess = function (bin) {\n  var self = this;\n  var issuerStartTime = Date.now();\n\n  return window.Cardinal.trigger(\"bin.process\", bin).then(function (\n    binResults\n  ) {\n    self._clientMetadata.issuerDeviceDataCollectionTimeElapsed =\n      Date.now() - issuerStartTime;\n    self._clientMetadata.issuerDeviceDataCollectionResult =\n      binResults && binResults.Status;\n  });\n};\n\nSongbirdFramework.prototype.transformBillingAddress = function (\n  additionalInformation,\n  billingAddress\n) {\n  if (billingAddress) {\n    // map from public API to the API that the Gateway expects\n    extractAddressData(billingAddress, additionalInformation, \"billing\");\n    additionalInformation.billingPhoneNumber = billingAddress.phoneNumber;\n    additionalInformation.billingGivenName = billingAddress.givenName;\n    additionalInformation.billingSurname = billingAddress.surname;\n  }\n\n  return additionalInformation;\n};\n\nSongbirdFramework.prototype.transformShippingAddress = function (\n  additionalInformation\n) {\n  var shippingAddress = additionalInformation.shippingAddress;\n\n  if (shippingAddress) {\n    // map from public API to the API that the Gateway expects\n    extractAddressData(shippingAddress, additionalInformation, \"shipping\");\n\n    delete additionalInformation.shippingAddress;\n  }\n\n  return additionalInformation;\n};\n\nSongbirdFramework.prototype._createV1IframeModalElement = function (iframe) {\n  var modal = document.createElement(\"div\");\n\n  modal.innerHTML =\n    '<div data-braintree-v1-fallback-iframe-container=\"true\" style=\"' +\n    \"height: 400px;\" +\n    '\"></div>';\n  modal\n    .querySelector('[data-braintree-v1-fallback-iframe-container=\"true\"]')\n    .appendChild(iframe);\n\n  return modal;\n};\n\nSongbirdFramework.prototype._createV1IframeModal = function (iframe) {\n  var modal = this._createV1IframeModalElement(iframe);\n  var btn = modal.querySelector(\"[data-braintree-v1-fallback-close-button]\");\n  var backdrop = modal.querySelector(\"[data-braintree-v1-fallback-backdrop]\");\n  var self = this;\n\n  function closeHandler() {\n    modal.parentNode.removeChild(modal);\n    self.cancelVerifyCard(errors.THREEDS_CARDINAL_SDK_CANCELED);\n    document.removeEventListener(\"keyup\", self._onV1Keyup);\n    self._onV1Keyup = null;\n  }\n\n  this._onV1Keyup = function (e) {\n    if (e.key !== \"Escape\") {\n      return;\n    }\n\n    if (!modal.parentNode) {\n      // modal not on page\n      return;\n    }\n\n    closeHandler();\n  };\n\n  if (btn) {\n    btn.addEventListener(\"click\", closeHandler);\n  }\n\n  if (backdrop) {\n    backdrop.addEventListener(\"click\", closeHandler);\n  }\n\n  document.addEventListener(\"keyup\", this._onV1Keyup);\n\n  return modal;\n};\n\nSongbirdFramework.prototype._addV1IframeToPage = function () {\n  document.body.appendChild(this._v1Modal);\n};\n\nSongbirdFramework.prototype._handleAuthResponseFromV1Fallback = function (\n  data\n) {\n  this._teardownV1Elements();\n  this._v1Modal.parentNode.removeChild(this._v1Modal);\n  this._handleV1AuthResponse(data);\n};\n\nSongbirdFramework.prototype._presentChallengeWithV1Fallback = function (\n  lookupResponse\n) {\n  var self = this;\n\n  this._setupV1Elements({\n    lookupResponse: lookupResponse,\n    showLoader: true,\n    handleAuthResponse: function (data) {\n      self._handleAuthResponseFromV1Fallback(data);\n    },\n  });\n  this._v1Modal = this._createV1IframeModal(this._v1Iframe);\n  this._addV1IframeToPage();\n};\n\nSongbirdFramework.prototype.setupSongbird = function (setupOptions) {\n  var self = this;\n  var startTime = Date.now();\n\n  if (this._songbirdPromise) {\n    return this._songbirdPromise;\n  }\n\n  setupOptions = setupOptions || {};\n\n  this._songbirdPromise = new ExtendedPromise();\n  this._v2SetupFailureReason = \"reason-unknown\";\n\n  self\n    ._loadCardinalScript(setupOptions)\n    .then(function () {\n      if (!window.Cardinal) {\n        self._v2SetupFailureReason = \"cardinal-global-unavailable\";\n\n        return Promise.reject(\n          new BraintreeError(errors.THREEDS_CARDINAL_SDK_SETUP_FAILED)\n        );\n      }\n\n      return self._configureCardinalSdk({\n        setupOptions: setupOptions,\n        setupStartTime: startTime,\n      });\n    })\n    .catch(function (err) {\n      var error = convertToBraintreeError(err, {\n        type: errors.THREEDS_CARDINAL_SDK_SETUP_FAILED.type,\n        code: errors.THREEDS_CARDINAL_SDK_SETUP_FAILED.code,\n        message: errors.THREEDS_CARDINAL_SDK_SETUP_FAILED.message,\n      });\n\n      self._getDfReferenceIdPromisePlus.reject(error);\n\n      window.clearTimeout(self._songbirdSetupTimeoutReference);\n      analytics.sendEvent(\n        self._client,\n        \"three-d-secure.cardinal-sdk.init.setup-failed\"\n      );\n      self.initiateV1Fallback(\n        \"cardinal-sdk-setup-failed.\" + self._v2SetupFailureReason\n      );\n    });\n\n  return this._songbirdPromise;\n};\n\nSongbirdFramework.prototype._configureCardinalSdk = function (config) {\n  var self = this;\n\n  return this._waitForClient()\n    .then(function () {\n      var threeDSConfig =\n        self._client.getConfiguration().gatewayConfiguration.threeDSecure;\n\n      return threeDSConfig;\n    })\n    .then(function (threeDSConfig) {\n      var jwt = threeDSConfig.cardinalAuthenticationJWT;\n      var setupOptions = config.setupOptions;\n      var setupStartTime = config.setupStartTime;\n      var cardinalConfiguration =\n        self._createCardinalConfigurationOptions(setupOptions);\n\n      SONGBIRD_UI_EVENTS.forEach(function (eventName) {\n        self.setCardinalListener(eventName, function () {\n          self._emit(SongbirdFramework.events[eventName.toUpperCase()]);\n        });\n      });\n      self.setCardinalListener(\n        \"payments.setupComplete\",\n        self._createPaymentsSetupCompleteCallback()\n      );\n\n      self._setupFrameworkSpecificListeners();\n\n      window.Cardinal.configure(cardinalConfiguration);\n\n      window.Cardinal.setup(\"init\", {\n        jwt: jwt,\n      });\n\n      self._clientMetadata.cardinalDeviceDataCollectionTimeElapsed =\n        Date.now() - setupStartTime;\n\n      self.setCardinalListener(\n        \"payments.validated\",\n        self._createPaymentsValidatedCallback()\n      );\n    })\n    .catch(function (err) {\n      self._v2SetupFailureReason = \"cardinal-configuration-threw-error\";\n\n      return Promise.reject(err);\n    });\n};\n\nSongbirdFramework.prototype.setCardinalListener = function (eventName, cb) {\n  this._cardinalEvents.push(eventName);\n  window.Cardinal.on(eventName, cb);\n};\n\nSongbirdFramework.prototype._setupFrameworkSpecificListeners = function () {\n  // noop\n};\n\nSongbirdFramework.prototype._createCardinalConfigurationOptions = function (\n  setupOptions\n) {\n  var cardinalConfiguration = setupOptions.cardinalSDKConfig || {};\n  var paymentSettings = cardinalConfiguration.payment || {};\n\n  if (!cardinalConfiguration.logging && setupOptions.loggingEnabled) {\n    cardinalConfiguration.logging = {\n      level: \"verbose\",\n    };\n  }\n\n  cardinalConfiguration.payment = {};\n\n  if (paymentSettings.hasOwnProperty(\"displayLoading\")) {\n    cardinalConfiguration.payment.displayLoading =\n      paymentSettings.displayLoading;\n  }\n  if (paymentSettings.hasOwnProperty(\"displayExitButton\")) {\n    cardinalConfiguration.payment.displayExitButton =\n      paymentSettings.displayExitButton;\n  }\n\n  return cardinalConfiguration;\n};\n\nSongbirdFramework.prototype._loadCardinalScript = function (setupOptions) {\n  var self = this;\n\n  return this._waitForClient()\n    .then(function () {\n      var scriptSource = self._getCardinalScriptSource();\n\n      self._songbirdSetupTimeoutReference = window.setTimeout(function () {\n        analytics.sendEvent(\n          self._client,\n          \"three-d-secure.cardinal-sdk.init.setup-timeout\"\n        );\n        self.initiateV1Fallback(\"cardinal-sdk-setup-timeout\");\n      }, setupOptions.timeout || INTEGRATION_TIMEOUT_MS);\n\n      return assets.loadScript({ src: scriptSource });\n    })\n    .catch(function (err) {\n      self._v2SetupFailureReason = \"songbird-js-failed-to-load\";\n\n      return Promise.reject(\n        convertToBraintreeError(\n          err,\n          errors.THREEDS_CARDINAL_SDK_SCRIPT_LOAD_FAILED\n        )\n      );\n    });\n};\n\nSongbirdFramework.prototype._getCardinalScriptSource = function () {\n  var gatewayConfig = this._client.getConfiguration().gatewayConfiguration;\n\n  if (gatewayConfig && gatewayConfig.environment === \"production\") {\n    return constants.CARDINAL_SCRIPT_SOURCE.production;\n  }\n\n  return constants.CARDINAL_SCRIPT_SOURCE.sandbox;\n};\n\nSongbirdFramework.prototype._createPaymentsSetupCompleteCallback = function () {\n  var self = this;\n\n  return function (data) {\n    self._getDfReferenceIdPromisePlus.resolve(data.sessionId);\n\n    window.clearTimeout(self._songbirdSetupTimeoutReference);\n    analytics.sendEvent(\n      self._createPromise,\n      \"three-d-secure.cardinal-sdk.init.setup-completed\"\n    );\n\n    self._songbirdPromise.resolve();\n  };\n};\n\nSongbirdFramework.prototype.getDfReferenceId = function () {\n  return this._getDfReferenceIdPromisePlus;\n};\n\nSongbirdFramework.prototype._performJWTValidation = function (\n  rawCardinalSDKVerificationData,\n  jwt\n) {\n  var self = this;\n  var nonce = this._lookupPaymentMethod.nonce;\n  var url =\n    \"payment_methods/\" + nonce + \"/three_d_secure/authenticate_from_jwt\";\n  var cancelCode =\n    rawCardinalSDKVerificationData &&\n    rawCardinalSDKVerificationData.Payment &&\n    rawCardinalSDKVerificationData.Payment.ExtendedData &&\n    rawCardinalSDKVerificationData.Payment.ExtendedData.ChallengeCancel;\n\n  if (cancelCode) {\n    // see ChallengeCancel docs here for different values:\n    // https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/98315/Response+Objects\n    analytics.sendEvent(\n      this._createPromise,\n      \"three-d-secure.verification-flow.cardinal-sdk.cancel-code.\" + cancelCode\n    );\n\n    if (cancelCode === CUSTOMER_CANCELED_SONGBIRD_MODAL) {\n      this._emit(SongbirdFramework.events.CUSTOMER_CANCELED);\n    }\n  }\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"three-d-secure.verification-flow.upgrade-payment-method.started\"\n  );\n\n  return this._waitForClient()\n    .then(function () {\n      return self._client.request({\n        method: \"post\",\n        endpoint: url,\n        data: {\n          jwt: jwt,\n          paymentMethodNonce: nonce,\n        },\n      });\n    })\n    .then(function (response) {\n      var paymentMethod = response.paymentMethod || self._lookupPaymentMethod;\n      var formattedResponse = self._formatAuthResponse(\n        paymentMethod,\n        response.threeDSecureInfo\n      );\n\n      formattedResponse.rawCardinalSDKVerificationData =\n        rawCardinalSDKVerificationData;\n      analytics.sendEvent(\n        self._client,\n        \"three-d-secure.verification-flow.upgrade-payment-method.succeeded\"\n      );\n\n      return Promise.resolve(formattedResponse);\n    })\n    .catch(function (err) {\n      var error = new BraintreeError({\n        type: errors.THREEDS_JWT_AUTHENTICATION_FAILED.type,\n        code: errors.THREEDS_JWT_AUTHENTICATION_FAILED.code,\n        message: errors.THREEDS_JWT_AUTHENTICATION_FAILED.message,\n        details: {\n          originalError: err,\n        },\n      });\n\n      analytics.sendEvent(\n        self._client,\n        \"three-d-secure.verification-flow.upgrade-payment-method.errored\"\n      );\n\n      return Promise.reject(error);\n    });\n};\n\nSongbirdFramework.prototype._createPaymentsValidatedCallback = function () {\n  var self = this;\n\n  /**\n   * @param {object} data Response Data\n   * @see {@link https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/98315/Response+Objects#ResponseObjects-ObjectDefinition}\n   * @param {string} data.ActionCode The resulting state of the transaction.\n   * @param {boolean} data.Validated Represents whether transaction was successfully or not.\n   * @param {object} data.Payment Represents additional information about the verification.\n   * @param {number} data.ErrorNumber A non-zero value represents the error encountered while attempting the process the message request.\n   * @param {string} data.ErrorDescription Application error description for the associated error number.\n   * @param {string} validatedJwt Response JWT\n   * @returns {void}\n   * */\n  return function (data, validatedJwt) {\n    var formattedError;\n\n    if (self._useV1Fallback) {\n      // TODO since we've removed the listeners for the payments validated callback when initiating the v1 fallback,\n      // we should never get to this point. Leave this analtyics event in for now and review if that is indeed the\n      // case before removing this block.\n      analytics.sendEvent(\n        self._createPromise,\n        \"three-d-secure.verification-flow.cardinal-sdk.payments-validated-callback-called-in-v1-fallback-flow\"\n      );\n\n      return;\n    }\n\n    analytics.sendEvent(\n      self._createPromise,\n      \"three-d-secure.verification-flow.cardinal-sdk.action-code.\" +\n        data.ActionCode.toLowerCase()\n    );\n\n    if (!self._verifyCardPromisePlus) {\n      self.initiateV1Fallback(\n        \"cardinal-sdk-setup-error.number-\" + data.ErrorNumber\n      );\n\n      return;\n    }\n\n    switch (data.ActionCode) {\n      // Handle these scenarios based on liability shift information in the response.\n      case \"SUCCESS\":\n      case \"NOACTION\":\n      case \"FAILURE\":\n        self\n          ._performJWTValidation(data, validatedJwt)\n          .then(function (result) {\n            self._verifyCardPromisePlus.resolve(result);\n          })\n          .catch(function (err) {\n            self._verifyCardPromisePlus.reject(err);\n          });\n        break;\n\n      case \"ERROR\":\n        analytics.sendEvent(\n          self._createPromise,\n          \"three-d-secure.verification-flow.cardinal-sdk-error.\" +\n            data.ErrorNumber\n        );\n\n        switch (data.ErrorNumber) {\n          case 10001: // Cardinal Docs: Timeout when sending an /Init message\n          case 10002: // Cardinal Docs: Timeout when sending an /Start message\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_SETUP_TIMEDOUT\n            );\n            break;\n          case 10003: // Cardinal Docs: Timeout when sending an /Validate message. Although this code exists we do not yet have a flow where a validate message is sent to Midas. This error should not yet be triggered\n          case 10007: // Cardinal Docs: Timeout when sending an /Confirm message\n          case 10009: // Cardinal Docs: Timeout when sending an /Continue message\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_RESPONSE_TIMEDOUT\n            );\n            break;\n          case 10005: // Cardinal Docs: Songbird was started without a request jwt.\n          case 10006: // Cardinal Docs: This is a general configuration error. The description is populated by the specific configuration error that caused the error.\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_BAD_CONFIG\n            );\n            break;\n          case 10008: // Cardinal Docs: Songbird was initialized without a merchant JWT.\n          case 10010: // Cardinal Docs: The response JWT was\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_BAD_JWT\n            );\n            break;\n          case 10011:\n            // This may never get called, according to the Cardinal docs:\n            // The user has canceled the transaction. This is generally found in alternative\n            // payments that supply a cancel button on the payment brand side.\n            analytics.sendEvent(\n              self._createPromise,\n              \"three-d-secure.verification-flow.canceled\"\n            );\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_CANCELED\n            );\n            break;\n          default:\n            formattedError = new BraintreeError(\n              errors.THREEDS_CARDINAL_SDK_ERROR\n            );\n        }\n\n        formattedError.details = {\n          originalError: {\n            code: data.ErrorNumber,\n            description: data.ErrorDescription,\n          },\n        };\n\n        self._verifyCardPromisePlus.reject(formattedError);\n        break;\n\n      default:\n    }\n  };\n};\n\nSongbirdFramework.prototype._checkForVerifyCardError = function (\n  options,\n  privateOptions\n) {\n  if (!options.bin) {\n    return new BraintreeError({\n      type: errors.THREEDS_MISSING_VERIFY_CARD_OPTION.type,\n      code: errors.THREEDS_MISSING_VERIFY_CARD_OPTION.code,\n      message: \"verifyCard options must include a BIN.\",\n    });\n  }\n\n  return BaseFramework.prototype._checkForVerifyCardError.call(\n    this,\n    options,\n    privateOptions\n  );\n};\n\nSongbirdFramework.prototype._checkForFrameworkSpecificVerifyCardErrors =\n  function (options, privateOptions) {\n    var errorOption;\n\n    if (\n      typeof options.onLookupComplete !== \"function\" &&\n      !privateOptions.ignoreOnLookupCompleteRequirement\n    ) {\n      errorOption = \"an onLookupComplete function\";\n    }\n\n    return errorOption;\n  };\n\nSongbirdFramework.prototype._formatVerifyCardOptions = function (options) {\n  var modifiedOptions = BaseFramework.prototype._formatVerifyCardOptions.call(\n    this,\n    options\n  );\n  var additionalInformation = modifiedOptions.additionalInformation || {};\n\n  additionalInformation = this.transformBillingAddress(\n    additionalInformation,\n    options.billingAddress\n  );\n  additionalInformation = this.transformShippingAddress(additionalInformation);\n\n  if (options.onLookupComplete) {\n    modifiedOptions.onLookupComplete = deferred(options.onLookupComplete);\n  }\n  if (options.email) {\n    additionalInformation.email = options.email;\n  }\n  if (options.mobilePhoneNumber) {\n    additionalInformation.mobilePhoneNumber = options.mobilePhoneNumber;\n  }\n\n  modifiedOptions.additionalInformation = additionalInformation;\n\n  return modifiedOptions;\n};\n\nSongbirdFramework.prototype._onLookupComplete = function (\n  lookupResponse,\n  options\n) {\n  var self = this;\n\n  return BaseFramework.prototype._onLookupComplete\n    .call(this, lookupResponse)\n    .then(function (response) {\n      return new Promise(function (resolve, reject) {\n        // NEXT_MAJOR_VERSION format this response object to look like the mobile sdk response\n        // which is basically the lookup param at the top level with some additional accessors\n        response.requiresUserAuthentication = Boolean(\n          response.lookup && response.lookup.acsUrl\n        );\n\n        function next() {\n          resolve(response);\n        }\n\n        self._verifyCardPromisePlus.catch(reject);\n\n        // If both event and callback are mistakenly used together,\n        // prefer the callback when it is passed into the verifyCard options\n        if (options.onLookupComplete) {\n          options.onLookupComplete(response, next);\n        } else {\n          self._emit(SongbirdFramework.events.LOOKUP_COMPLETE, response, next);\n        }\n      });\n    });\n};\n\nSongbirdFramework.prototype._presentChallenge = function (lookupResponse) {\n  // transactionId is required for the Songbird flow, so if it\n  // does not exist, we fallback to the 3ds v1 flow\n  if (this._useV1Fallback || !lookupResponse.lookup.transactionId) {\n    this._presentChallengeWithV1Fallback(lookupResponse.lookup);\n\n    return;\n  }\n\n  // set up listener for ref id to call out to bt before calling verify callback\n  window.Cardinal.continue(\n    \"cca\",\n    {\n      AcsUrl: lookupResponse.lookup.acsUrl,\n      Payload: lookupResponse.lookup.pareq,\n    },\n    {\n      OrderDetails: { TransactionId: lookupResponse.lookup.transactionId },\n    }\n  );\n};\n\nSongbirdFramework.prototype._formatLookupData = function (options) {\n  var self = this;\n\n  return BaseFramework.prototype._formatLookupData\n    .call(this, options)\n    .then(function (data) {\n      data.additionalInfo = options.additionalInformation;\n\n      if (options.accountType) {\n        data.accountType = options.accountType;\n      }\n      if (options.challengeRequested) {\n        data.challengeRequested = options.challengeRequested;\n      }\n      if (options.requestedExemptionType) {\n        if (!SCA_EXEMPTION_TYPES.includes(options.requestedExemptionType)) {\n          throw new BraintreeError({\n            code: errors.THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID.code,\n            type: errors.THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID.type,\n            message:\n              \"requestedExemptionType `\" +\n              options.requestedExemptionType +\n              \"` is not a valid exemption. The accepted values are: `\" +\n              SCA_EXEMPTION_TYPES.join(\"`, `\") +\n              \"`\",\n          });\n        }\n        data.requestedExemptionType = options.requestedExemptionType;\n      }\n      if (options.customFields) {\n        data.customFields = options.customFields;\n      }\n      if (options.dataOnlyRequested) {\n        data.dataOnlyRequested = options.dataOnlyRequested;\n      }\n      if (options.exemptionRequested) {\n        data.exemptionRequested = options.exemptionRequested;\n      }\n      if (options.requestVisaDAF) {\n        data.requestVisaDAF = options.requestVisaDAF;\n      }\n      if (options.bin) {\n        data.bin = options.bin;\n      }\n      // NEXT_MAJOR_VERSION remove cardAdd in favor of cardAddChallengeRequested\n      if (options.cardAdd != null) {\n        data.cardAdd = options.cardAdd;\n      }\n      if (options.cardAddChallengeRequested != null) {\n        data.cardAdd = options.cardAddChallengeRequested;\n      }\n      if (options.merchantName) {\n        data.merchantName = options.merchantName;\n      }\n\n      return self.prepareLookup(data);\n    });\n};\n\nSongbirdFramework.prototype.cancelVerifyCard = function (verifyCardError) {\n  var self = this;\n\n  return BaseFramework.prototype.cancelVerifyCard\n    .call(this)\n    .then(function (response) {\n      if (self._verifyCardPromisePlus) {\n        verifyCardError =\n          verifyCardError ||\n          new BraintreeError(errors.THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT);\n\n        self._verifyCardPromisePlus.reject(verifyCardError);\n      }\n\n      return response;\n    });\n};\n\nSongbirdFramework.prototype._removeSongbirdListeners = function () {\n  this._cardinalEvents.forEach(function (eventName) {\n    window.Cardinal.off(eventName);\n  });\n\n  this._cardinalEvents = [];\n};\n\nSongbirdFramework.prototype.teardown = function () {\n  if (window.Cardinal) {\n    this._removeSongbirdListeners();\n  }\n\n  // we intentionally do not remove the Cardinal SDK\n  // from the page when tearing down. Subsequent\n  // component creations will be faster because\n  // the asset is already on the page\n\n  return BaseFramework.prototype.teardown.call(this);\n};\n\nSongbirdFramework.prototype._reloadThreeDSecure = function () {\n  var self = this;\n  var startTime = Date.now();\n\n  return self.teardown().then(function () {\n    self._configureCardinalSdk({\n      setupOptions: self.originalSetupOptions,\n      setupStartTime: startTime,\n    });\n  });\n};\n\nfunction extractAddressData(source, target, prefix) {\n  target[prefix + \"Line1\"] = source.streetAddress;\n  target[prefix + \"Line2\"] = source.extendedAddress;\n  target[prefix + \"Line3\"] = source.line3;\n  target[prefix + \"City\"] = source.locality;\n  target[prefix + \"State\"] = source.region;\n  target[prefix + \"PostalCode\"] = source.postalCode;\n  target[prefix + \"CountryCode\"] = source.countryCodeAlpha2;\n}\n\nmodule.exports = SongbirdFramework;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/songbird.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/external/three-d-secure.js":
/*!******************************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/external/three-d-secure.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar methods = __webpack_require__(/*! ../../lib/methods */ \"(ssr)/./node_modules/braintree-web/lib/methods.js\");\nvar convertMethodsToError = __webpack_require__(/*! ../../lib/convert-methods-to-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\");\nvar EventEmitter = __webpack_require__(/*! @braintree/event-emitter */ \"(ssr)/./node_modules/@braintree/event-emitter/dist/event-emitter.js\");\nvar FRAMEWORKS = __webpack_require__(/*! ./frameworks */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/frameworks/index.js\");\n\n/**\n * @deprecated\n * @callback ThreeDSecure~addFrameCallback\n * @param {?BraintreeError} [err] `null` or `undefined` if there was no error.\n * @param {HTMLIFrameElement} iframe An iframe element containing the bank's authentication page that you must put on your page.\n * @description **Deprecated** The callback used for options.addFrame in 3DS 1.0's {@link ThreeDSecure#verifyCard|verifyCard}.\n * @returns {void}\n */\n\n/**\n * @deprecated\n * @callback ThreeDSecure~removeFrameCallback\n * @description **Deprecated** The callback used for options.removeFrame in 3DS 1.0's {@link ThreeDSecure#verifyCard|verifyCard}.\n * @returns {void}\n */\n\n/**\n * @deprecated\n * @typedef {object} ThreeDSecure~verifyCardCustomerObject\n * @property {string} [customer.mobilePhoneNumber] The mobile phone number used for verification. Only numbers; remove dashes, parenthesis and other characters.\n * @property {string} [customer.email] The email used for verification.\n * @property {string} [customer.shippingMethod] The 2-digit string indicating the shipping method chosen for the transaction.\n * @property {string} [customer.billingAddress.firstName] The first name associated with the address.\n * @property {string} [customer.billingAddress.lastName] The last name associated with the address.\n * @property {string} [customer.billingAddress.streetAddress] Line 1 of the Address (eg. number, street, etc).\n * @property {string} [customer.billingAddress.extendedAddress] Line 2 of the Address (eg. suite, apt #, etc.).\n * @property {string} [customer.billingAddress.locality] The locality (city) name associated with the address.\n * @property {string} [customer.billingAddress.region] The 2 letter code for US states or an ISO-3166-2 country subdivision code of up to three letters.\n * @property {string} [customer.billingAddress.postalCode] The zip code or equivalent for countries that have them.\n * @property {string} [customer.billingAddress.countryCodeAlpha2] The 2 character country code.\n * @property {string} [customer.billingAddress.phoneNumber] The phone number associated with the address. Only numbers; remove dashes, parenthesis and other characters.\n * @description **Deprecated** Optional customer information to be passed to 3DS 1.0 for verification.\n */\n\n/**\n * @typedef {object} ThreeDSecure~verifyPayload\n * @property {string} nonce The new payment method nonce produced by the 3D Secure lookup. The original nonce passed into {@link ThreeDSecure#verifyCard|verifyCard} was consumed. This new nonce should be used to transact on your server.\n * @property {string} type The payment method type.\n * @property {object} details Additional account details.\n * @property {string} details.cardType Type of card, ex: Visa, MasterCard.\n * @property {string} details.lastFour Last four digits of card number.\n * @property {string} details.lastTwo Last two digits of card number.\n * @property {string} description A human-readable description.\n * @property {object} binData Information about the card based on the bin.\n * @property {string} binData.commercial Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.countryOfIssuance The country of issuance.\n * @property {string} binData.debit Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.durbinRegulated Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.healthcare Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.issuingBank The issuing bank.\n * @property {string} binData.payroll Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.prepaid Possible values: 'Yes', 'No', 'Unknown'.\n * @property {string} binData.productId The product id.\n * @property {boolean} liabilityShiftPossible *Deprecated:* Use `threeDSecureInfo.liabilityShiftPossible` instead.\n * @property {boolean} liabilityShifted *Deprecated:* Use `threeDSecureInfo.liabilityShifted` instead.\n * @property {object} threeDSecureInfo 3DS information about the card. Note: This information should be verified on the server by using the [payment method nonce find method](https://developer.paypal.com/braintree/docs/reference/request/payment-method-nonce/find). The values provided here are merely for convenience. Only values looked up on the server should determine the logic about how to process a transaction.\n * @property {string} threeDSecureInfo.acsTransactionId The transaction identifier from the issuing bank.\n * @property {string} threeDSecureInfo.cavv Cardholder authentication verification value or CAVV. The main encrypted message issuers and card networks use to verify authentication has occurred. Mastercard uses an AVV message and American Express uses an AEVV message, each of which should also be passed in the cavv parameter.\n * @property {string} threeDSecureInfo.dsTransactionId Transaction identifier resulting from 3D Secure 2 authentication.\n * @property {string} threeDSecureInfo.eciFlag The value of the electronic commerce indicator (ECI) flag, which indicates the outcome of the 3DS authentication. This will be a two-digit value.\n * @property {boolean} threeDSecureInfo.enrolled Indicates the status of 3D Secure authentication eligibility with the card issuer.\n * @property {boolean} threeDSecureInfo.liabilityShifted Indicates whether the liability for fraud has been shifted away from the merchant.\n * @property {boolean} threeDSecureInfo.liabilityShiftPossible Indicates whether liability shift is still possible on a retry.\n * @property {string} threeDSecureInfo.paresStatus Transaction status result identifier.\n * @property {string} threeDSecureInfo.status Indicates the outcome of the 3D Secure event.\n * @property {string} threeDSecureInfo.threeDSecureAuthenticationId ID of the 3D Secure authentication performed for this transaction. Do not provide this field as a transaction sale parameter if you are using the returned payment method nonce from the payload.\n * @property {string} threeDSecureInfo.threeDSecureServerTransactionId Transaction identifier provided by the issuing bank who recieved the 3D Secure event.\n * @property {string} threeDSecureInfo.threeDSecureVersion The version of 3D Secure authentication used for the transaction.\n * @property {string} threeDSecureInfo.xid Transaction identifier resulting from 3D Secure authentication. Uniquely identifies the transaction and sometimes required in the authorization message. This is a base64-encoded value. This field will no longer be used in 3D Secure 2 authentications for Visa and Mastercard, however it will be supported by American Express.\n * @property {string} threeDSecureInfo.lookup.transStatus Error code returned from the 3D Secure MPI provider.\n * @property {string} threeDSecureInfo.lookup.transStatusReason Description correlating to the transStatus error code.\n * @property {string} threeDSecureInfo.authentication.transStatus Error code returned from the 3D Secure MPI provider.\n * @property {string} threeDSecureInfo.authentication.transStatusReason Description correlating to the transStatus error code.\n * @property {object} rawCardinalSDKVerificationData The response back from the Cardinal SDK after verification has completed. See [Cardinal's Documentation](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/98315/Response+Objects) for more information. If the customer was not required to do a 3D Secure challenge, this object will not be available.\n */\n\n/**\n * @typedef {string} ThreeDSecure~prepareLookupPayload The client data to pass on when doing a server side lookup call.\n */\n\n/**\n * @typedef {object} ThreeDSecure~verificationData\n * @property {boolean} requiresUserAuthentication When `true`, the user will be presented with a 3D Secure challenge when calling `next` in the {@link ThreeDSecure#event:lookup-complete|`lookup-complete` event}.\n * @property {object} threeDSecureInfo Contains liability shift details.\n * @property {boolean} threeDSecureInfo.liabilityShiftPossible Indicates whether the card was eligible for 3D Secure.\n * @property {boolean} threeDSecureInfo.liabilityShifted Indicates whether the liability for fraud has been shifted away from the merchant.\n * @property {object} paymentMethod A {@link ThreeDSecure~verifyPayload|verifyPayload} object.\n * @property {object} lookup Details about the 3D Secure lookup.\n * @property {string} lookup.threeDSecureVersion The version of 3D Secure that will be used for the 3D Secure challenge.\n */\n\n/**\n * @typedef {object} ThreeDSecure~billingAddress\n * @property {string} [givenName] The first name associated with the billing address. (maximum length 50, ASCII characters)\n * @property {string} [surname] The last name associated with the billing address. (maximum length 50, ASCII characters)\n * @property {string} [phoneNumber] The phone number associated with the billing address. Only numbers; remove dashes, parenthesis and other characters.\n * @property {string} [streetAddress] Line 1 of the billing address (eg. number, street, etc). (maximum length 50)\n * @property {string} [extendedAddress] Line 2 of the billing address (eg. suite, apt #, etc.). (maximum length 50)\n * @property {string} [line3] Line 3 of the billing address if needed (eg. suite, apt #, etc). (maximum length 50)\n * @property {string} [locality] The locality (city) name associated with the billing address.\n * @property {string} [region] This field expects an ISO3166-2 subdivision code. The subdivision code is what follows the hyphen separator in the full ISO 3166-2 code. For example, the state of Ohio in the United States we expect \"OH\" as opposed to the full ISO 3166-2 code \"US-OH\".\n * @property {string} [postalCode] The zip code or equivalent for countries that have them.\n * @property {string} [countryCodeAlpha2] The 2 character country code.\n */\n\n/**\n * @typedef {object} ThreeDSecure~additionalInformation\n * @property {string} [workPhoneNumber] The work phone number used for verification. Only numbers; remove dashes, parenthesis and other characters. (maximum length 25)\n * @property {string} [shippingGivenName] The first name associated with the shipping address. (maximum length 50, ASCII characters)\n * @property {string} [shippingSurname] The last name associated with the shipping address. (maximum length 50, ASCII characters)\n * @property {object} [shippingAddress]\n * @property {string} [shippingAddress.streetAddress] Line 1 of the shipping address (eg. number, street, etc). (maximum length 50)\n * @property {string} [shippingAddress.extendedAddress] Line 2 of the shipping address (eg. suite, apt #, etc.). (maximum length 50)\n * @property {string} [shippingAddress.line3] Line 3 of the shipping address if needed (eg. suite, apt #, etc). (maximum length 50)\n * @property {string} [shippingAddress.locality] The locality (city) name associated with the shipping address. (maximum length 50)\n * @property {string} [shippingAddress.region] This field expects an ISO3166-2 subdivision code. The subdivision code is what follows the hyphen separator in the full ISO 3166-2 code. For example, the state of Ohio in the United States we expect \"OH\" as opposed to the full ISO 3166-2 code \"US-OH\".\n * @property {string} [shippingAddress.postalCode] The zip code or equivalent for countries that have them. (maximum length 10)\n * @property {string} [shippingAddress.countryCodeAlpha2] The 2 character country code. (maximum length 2)\n * @property {string} [shippingPhone] The phone number associated with the shipping address. Only numbers; remove dashes, parenthesis and other characters. (maximum length 20)\n * @property {string} [shippingMethod] The 2-digit string indicating the name of the shipping method chosen for the transaction. (maximum length 50) Possible values:\n * - `01` Same Day\n * - `02` Overnight / Expedited\n * - `03` Priority (2-3 Days)\n * - `04` Ground\n * - `05` Electronic Delivery\n * - `06` Ship to Store\n * @property {string} [shippingMethodIndicator] The 2-digit string indicating the shipping method chosen for the transaction Possible values.\n * - `01` Ship to cardholder billing address\n * - `02` Ship to another verified address on file with merchant\n * - `03` Ship to address that is different from billing address\n * - `04` Ship to store (store address should be populated on request)\n * - `05` Digital goods\n * - `06` Travel and event tickets, not shipped\n * - `07` Other\n * @property {string} [productCode] The 3-letter string representing the merchant product code. Possible values:\n * - `AIR` Airline\n * - `GEN` General Retail\n * - `DIG` Digital Goods\n * - `SVC` Services\n * - `RES` Restaurant\n * - `TRA` Travel\n * - `DSP` Cash Dispensing\n * - `REN` Car Rental\n * - `GAS` Fuel\n * - `LUX` Luxury Retail\n * - `ACC` Accommodation Retail\n * - `TBD` Other\n * @property {string} [deliveryTimeframe] The 2-digit number indicating the delivery time frame. Possible values:\n * - `01` Electronic delivery\n * - `02` Same day shipping\n * - `03` Overnight shipping\n * - `04` Two or more day shipping\n * @property {string} [deliveryEmail] For electronic delivery, email address to which the merchandise was delivered. (maximum length 254)\n * @property {string} [reorderindicator] The 2-digit number indicating whether the cardholder is reordering previously purchased merchandise. possible values:\n * - `01` First time ordered\n * - `02` Reordered\n * @property {string} [preorderIndicator] The 2-digit number indicating whether cardholder is placing an order with a future availability or release date. possible values:\n * - `01` Merchandise available\n * - `02` Future availability\n * @property {string} [preorderDate] The 8-digit number (format: YYYYMMDD) indicating expected date that a pre-ordered purchase will be available.\n * @property {string} [giftCardAmount] The purchase amount total for prepaid gift cards in major units. (maximum length 15)\n * @property {string} [giftCardCurrencyCode] ISO 4217 currency code for the gift card purchased. (maximum length 3)\n * @property {string} [giftCardCount] Total count of individual prepaid gift cards purchased. (maximum length 2)\n * @property {string} [accountAgeIndicator] The 2-digit value representing the length of time cardholder has had account. Possible values:\n * - `01` No Account\n * - `02` Created during transaction\n * - `03` Less than 30 days\n * - `04` 30-60 days\n * - `05` More than 60 days\n * @property {string} [accountCreateDate] The 8-digit number (format: YYYYMMDD) indicating the date the cardholder opened the account.\n * @property {string} [accountChangeIndicator] The 2-digit value representing the length of time since the last change to the cardholder account. This includes shipping address, new payment account or new user added. Possible values:\n * - `01` Changed during transaction\n * - `02` Less than 30 days\n * - `03` 30-60 days\n * - `04` More than 60 days\n * @property {string} [accountChangeDate] The 8-digit number (format: YYYYMMDD) indicating the date the cardholder's account was last changed. This includes changes to the billing or shipping address, new payment accounts or new users added.\n * @property {string} [accountPwdChangeIndicator] The 2-digit value representing the length of time since the cardholder changed or reset the password on the account. Possible values:\n * - `01` No change\n * - `02` Changed during transaction\n * - `03` Less than 30 days\n * - `04` 30-60 days\n * - `05` More than 60 days\n * @property {string} [accountPwdChangeDate] The 8-digit number (format: YYYYMMDD) indicating the date the cardholder last changed or reset password on account.\n * @property {string} [shippingAddressUsageIndicator] The 2-digit value indicating when the shipping address used for transaction was first used. Possible values:\n * - `01` This transaction\n * - `02` Less than 30 days\n * - `03` 30-60 days\n * - `04` More than 60 days\n * @property {string} [shippingAddressUsageDate] The 8-digit number (format: YYYYMMDD) indicating the date when the shipping address used for this transaction was first used.\n * @property {string} [transactionCountDay] Number of transactions (successful or abandoned) for this cardholder account within the last 24 hours. (maximum length 3)\n * @property {string} [transactionCountYear] Number of transactions (successful or abandoned) for this cardholder account within the last year. (maximum length 3)\n * @property {string} [addCardAttempts] Number of add card attempts in the last 24 hours. (maximum length 3)\n * @property {string} [accountPurchases] Number of purchases with this cardholder account during the previous six months.\n * @property {string} [fraudActivity] The 2-digit value indicating whether the merchant experienced suspicious activity (including previous fraud) on the account. Possible values:\n * - `01` No suspicious activity\n * - `02` Suspicious activity observed\n * @property {string} [shippingNameIndicator] The 2-digit value indicating if the cardholder name on the account is identical to the shipping name used for the transaction. Possible values:\n * - `01` Account and shipping name identical\n * - `02` Account and shipping name differ\n * @property {string} [paymentAccountIndicator] The 2-digit value indicating the length of time that the payment account was enrolled in the merchant account. Possible values:\n * - `01` No account (guest checkout)\n * - `02` During the transaction\n * - `03` Less than 30 days\n * - `04` 30-60 days\n * - `05` More than 60 days\n * @property {string} [paymentAccountAge] The 8-digit number (format: YYYYMMDD) indicating the date the payment account was added to the cardholder account.\n * @property {string} [acsWindowSize] The 2-digit number to set the challenge window size to display to the end cardholder.  The ACS will reply with content that is formatted appropriately to this window size to allow for the best user experience.  The sizes are width x height in pixels of the window displayed in the cardholder browser window. Possible values:\n * - `01` 250x400\n * - `02` 390x400\n * - `03` 500x600\n * - `04` 600x400\n * - `05` Full page\n * @property {string} [sdkMaxTimeout] The 2-digit number of minutes (minimum 05) to set the maximum amount of time for all 3DS 2.0 messages to be communicated between all components.\n * @property {string} [addressMatch] The 1-character value (Y/N) indicating whether cardholder billing and shipping addresses match.\n * @property {string} [accountId] Additional cardholder account information. (maximum length 64)\n * @property {string} [ipAddress] The IP address of the consumer. IPv4 and IPv6 are supported.\n * - only one IP address supported\n * - only numbers, letters, period '.' chars, or colons ':' are acceptable\n * @property {string} [orderDescription] Brief description of items purchased. (maximum length 256)\n * @property {string} [taxAmount] Unformatted tax amount without any decimalization (ie. $123.67 = 12367). (maximum length 20)\n * @property {string} [userAgent] The exact content of the HTTP user agent header. (maximum length 500)\n * @property {string} [authenticationIndicator] The 2-digit number indicating the type of authentication request. Possible values:\n *  - `01` Payment\n *  - `02` Recurring transaction\n *  - `03` Installment\n *  - `04` Add card\n *  - `05` Maintain card\n *  - `06` Cardholder verification as part of EMV token ID&V\n * @property {string} [installment] An integer value greater than 1 indicating the maximum number of permitted authorizations for installment payments. (maximum length 3)\n * @property {string} [purchaseDate] The 14-digit number (format: YYYYMMDDHHMMSS) indicating the date in UTC of original purchase.\n * @property {string} [recurringEnd] The 8-digit number (format: YYYYMMDD) indicating the date after which no further recurring authorizations should be performed.\n * @property {string} [recurringFrequency] Integer value indicating the minimum number of days between recurring authorizations. A frequency of monthly is indicated by the value 28. Multiple of 28 days will be used to indicate months (ex. 6 months = 168). (maximum length 3)\n */\n\n/**\n * @name ThreeDSecure#on\n * @function\n * @param {string} event The name of the event to which you are subscribing.\n * @param {function} handler A callback to handle the event.\n * @description Subscribes a handler function to a named event. The following events are available:\n *   * {@link ThreeDSecure#event:lookup-complete|lookup-complete}\n *   * {@link ThreeDSecure#event:customer-canceled|customer-canceled}\n *   * {@link ThreeDSecure#event:authentication-iframe-available|authentication-iframe-available}\n *   * {@link ThreeDSecure#event:authentication-modal-render|authentication-modal-render}\n *   * {@link ThreeDSecure#event:authentication-modal-close|authentication-modal-close}\n * @example\n * <caption>Listening to a 3D Secure event</caption>\n * braintree.threeDSecure.create({ ... }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('lookup-complete', function (data, next) {\n *     console.log('data from the lookup', data);\n *     next();\n *   });\n *   threeDSecureInstance.on('customer-canceled', function () {\n *     console.log('log that the customer canceled');\n *   });\n * });\n * @returns {void}\n */\n\n/**\n * @name ThreeDSecure#off\n * @function\n * @param {string} event The name of the event to which you are unsubscribing.\n * @param {function} handler The callback for the event you are unsubscribing from.\n * @description Unsubscribes the handler function to a named event.\n * @example\n * <caption>Subscribing and then unsubscribing from a 3D Secure eld event</caption>\n * braintree.threeDSecure.create({ ... }, function (createErr, threeDSecureInstance) {\n *   var lookupCallback = function (data, next) {\n *     console.log(data);\n *     next();\n *   };\n *   var cancelCallback = function () {\n *     // log the cancelation\n *     // or update UI\n *   };\n *\n *   threeDSecureInstance.on('lookup-complete', lookupCallback);\n *   threeDSecureInstance.on('customer-canceled', cancelCallback);\n *\n *   // later on\n *   threeDSecureInstance.off('lookup-complete', lookupCallback);\n *   threeDSecureInstance.off('customer-canceled', cancelCallback);\n * });\n * @returns {void}\n */\n\n/**\n * This event is emitted when the `2-inline-iframe` version is specified when creating the 3D Secure instance and the authentication iframe becomes available.\n * @event ThreeDSecure#authentication-iframe-available\n * @example\n * <caption>Listening for the authentication iframe to be available</caption>\n *   threeDSecureInstance.on('authentication-iframe-available', function (event, next) {\n *     document.body.appendChild(event.element); // add iframe element to page\n *\n *     next(); // let the SDK know the iframe is ready\n *   });\n * });\n */\n\n/**\n * This event is emitted when using the 3D Secure 2.0 flow and the initial lookup request completes. If this is not used, a `onLookupComplete` callback must be passed into the `verifyCard` method.\n * @event ThreeDSecure#lookup-complete\n * @example\n * <caption>Listening for when the lookup request is complete</caption>\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('lookup-complete', function (data, next) {\n *     // inspect the data\n *\n *     // call next when ready to proceed with the challenge\n *     next();\n *   });\n * });\n */\n\n/**\n * This event is emitted when using the 3D Secure 2.0 flow and the customer cancels the 3D Secure challenge.\n * @event ThreeDSecure#customer-canceled\n * @example\n * <caption>Listening for when the customer cancels the 3D Secure challenge</caption>\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('customer-canceled', function () {\n *     // the customer canceled the 3D Secure challenge\n *   });\n * });\n */\n\n/**\n * This event is emitted when using the 3D Secure 2.0 flow and the authentication modal closes, either because the authentication was completed or because the customer canceled the process.\n * @event ThreeDSecure#authentication-modal-close\n * @example\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('authentication-modal-close', function () {\n *     // the modal was closed\n *   });\n * });\n */\n\n/**\n * This event is emitted when using the 3D Secure 2.0 flow and the authentication modal is rendered.\n * @event ThreeDSecure#authentication-modal-render\n * @example\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createErr, threeDSecureInstance) {\n *   threeDSecureInstance.on('authentication-modal-render', function () {\n *     // the modal was rendered, presenting the authentication form to the customer\n *   });\n * });\n */\n\n/**\n * @class\n * @param {object} options 3D Secure {@link module:braintree-web/three-d-secure.create create} options\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/three-d-secure.create|braintree.threeDSecure.create} instead.</strong>\n * @classdesc This class represents a ThreeDSecure component produced by {@link module:braintree-web/three-d-secure.create|braintree.threeDSecure.create}. Instances of this class have a method for launching a 3D Secure authentication flow.\n *\n * If you use the Braintree SDK from within an iframe, you must not use the `sandbox` attribute on your iframe or the 3D Secure modal will not function correctly.\n *\n * **Note**: 3D Secure 2.0 is documented below and will become the default integration method in a future version of Braintree-web. Until then, version 1.0 will continue to be supported. To view 3D Secure 1.0 documentation, look at Braintree-web documentation from version [3.40.0](https://braintree.github.io/braintree-web/3.40.0/ThreeDSecure.html) and earlier, or upgrade your integration by referring to the [3D Secure 2.0 adoption guide](https://developer.paypal.com/braintree/docs/guides/3d-secure/migration/javascript/v3).\n */\nfunction ThreeDSecure(options) {\n  var self = this;\n  var Framework = FRAMEWORKS[options.framework];\n\n  EventEmitter.call(this);\n\n  this._framework = new Framework(options);\n  this._framework.setUpEventListeners(function () {\n    self._emit.apply(self, arguments);\n  });\n}\n\nEventEmitter.createChild(ThreeDSecure);\n// NEXT_MAJOR_VERSION remove exemptionRequested entirely in favor of `requestedExemptionType`\n/**\n * Launch the 3D Secure login flow, returning a nonce payload.\n *\n * @public\n * @param {object} options Options for card verification.\n * @param {string} options.nonce The nonce representing the card from a tokenization payload. For example, this can be a {@link HostedFields~tokenizePayload|tokenizePayload} returned by Hosted Fields under `payload.nonce`.\n * @param {string} options.bin The numeric Bank Identification Number (bin) of the card from a tokenization payload. For example, this can be a {@link HostedFields~tokenizePayload|tokenizePayload} returned by Hosted Fields under `payload.details.bin`.\n * @param {string} options.amount The amount of the transaction in the current merchant account's currency. This must be expressed in numbers with an optional decimal (using `.`) and precision up to the hundredths place. For example, if you're processing a transaction for 1.234,56 € then `amount` should be `1234.56`.\n * @param {string} [options.accountType] The account type for the card (if known). Accepted values: `credit` or `debit`.\n * @param {boolean} [options.cardAddChallengeRequested] If set to `true`, a card-add challenge will be requested from the issuer. If set to `false`, a card-add challenge will not be requested. If the param is missing, a card-add challenge will only be requested for $0 amount. An authentication created using this flag should only be used for vaulting operations (creation of customers' credit cards or payment methods) and not for creating transactions.\n * @param {boolean} [options.cardAdd] *Deprecated:* Use `cardAddChallengeRequested` instead.\n * @param {boolean} [options.challengeRequested] If set to true, an authentication challenge will be forced if possible.\n * @param {boolean} [options.dataOnlyRequested] Indicates whether to use the data only flow. In this flow, frictionless 3DS is ensured for Mastercard cardholders as the card scheme provides a risk score for the issuer to determine whether to approve. If data only is not supported by the processor, a validation error will be raised. Non-Mastercard cardholders will fallback to a normal 3DS flow.\n * @param {boolean} [options.exemptionRequested] *Deprecated:* Use `requestedExemptionType` instead.\n * @param {boolean} [options.requestVisaDAF] Request to use VISA Digital Authentication Framework. If set to true, a Visa DAF authenticated payment credential will be created and/or used for authentication if the merchant is eligible.\n * @param {string} [options.merchantName] Allows to override the merchant name that is shown in the challenge.\n * @param {string} [options.requestedExemptionType] If an exemption is requested and the exemption's conditions are satisfied, then it will be applied. The following supported exemptions are defined as per PSD2 regulation: `low_value`, `transaction_risk_analysis`\n * @param {object} [options.customFields] Object where each key is the name of a custom field which has been configured in the Control Panel. In the Control Panel you can configure 3D Secure Rules which trigger on certain values.\n * @param {function} [options.onLookupComplete] *Deprecated:* Use {@link ThreeDSecure#event:lookup-complete|`threeDSecureInstance.on('lookup-complete')`} instead. Function to execute when lookup completes. The first argument, `data`, is a {@link ThreeDSecure~verificationData|verificationData} object, and the second argument, `next`, is a callback. `next` must be called to continue.\n * @param {string} [options.email] The email used for verification. (maximum length 255)\n * @param {string} [options.mobilePhoneNumber] The mobile phone number used for verification. Only numbers; remove dashes, parenthesis and other characters. (maximum length 25)\n * @param {object} [options.billingAddress] An {@link ThreeDSecure~billingAddress|billingAddress} object for verification.\n * @param {object} [options.additionalInformation] An {@link ThreeDSecure~additionalInformation|additionalInformation} object for verification.\n * @param {object} [options.collectDeviceData] If set to `true`, device data such as browser screen dimensions, language and time zone is submitted with lookup data.\n * @param {object} [options.customer] **Deprecated** Customer information for use in 3DS 1.0 verifications. Can contain any subset of a {@link ThreeDSecure~verifyCardCustomerObject|verifyCardCustomerObject}. Only to be used for 3DS 1.0 integrations.\n * @param {callback} options.addFrame **Deprecated** This {@link ThreeDSecure~addFrameCallback|addFrameCallback} will be called when the bank frame needs to be added to your page. Only to be used for 3DS 1.0 integrations.\n * @param {callback} options.removeFrame **Deprecated** For use in 3DS 1.0 Flows. This {@link ThreeDSecure~removeFrameCallback|removeFrameCallback} will be called when the bank frame needs to be removed from your page. Only to be used in 3DS 1.0 integrations.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link ThreeDSecure~verifyPayload|verifyPayload}. If no callback is provided, it will return a promise that resolves {@link ThreeDSecure~verifyPayload|verifyPayload}.\n\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * <caption>Verifying a payment method nonce with 3DS 2.0</caption>\n * var my3DSContainer;\n *\n * // set up listener after initialization\n * threeDSecure.on(('lookup-complete', function (data, next) {\n *   // use `data` here, then call `next()`\n *   next();\n * });\n *\n * // call verifyCard after tokenizing a card\n * threeDSecure.verifyCard({\n *   amount: '123.45',\n *   nonce: hostedFieldsTokenizationPayload.nonce,\n *   bin: hostedFieldsTokenizationPayload.details.bin,\n *   email: 'test@example.com'\n *   billingAddress: {\n *     givenName: 'Jill',\n *     surname: 'Doe',\n *     phoneNumber: '8101234567',\n *     streetAddress: '555 Smith St.',\n *     extendedAddress: '#5',\n *     locality: 'Oakland',\n *     region: 'CA',\n *     postalCode: '12345',\n *     countryCodeAlpha2: 'US'\n *   },\n *   additionalInformation: {\n *     workPhoneNumber: '5555555555',\n *     shippingGivenName: 'Jill',\n *     shippingSurname: 'Doe',\n *     shippingAddress: {\n *       streetAddress: '555 Smith st',\n *       extendedAddress: '#5',\n *       locality: 'Oakland',\n *       region: 'CA',\n *       postalCode: '12345',\n *       countryCodeAlpha2: 'US'\n *     }\n *     shippingPhone: '8101234567'\n *   }\n * }, function (err, payload) {\n *   if (err) {\n *     console.error(err);\n *     return;\n *   }\n *\n *   if (payload.liabilityShifted) {\n *     // Liability has shifted\n *     submitNonceToServer(payload.nonce);\n *   } else if (payload.liabilityShiftPossible) {\n *     // Liability may still be shifted\n *     // Decide if you want to submit the nonce\n *   } else {\n *     // Liability has not shifted and will not shift\n *     // Decide if you want to submit the nonce\n *   }\n * });\n * @example\n * <caption>Verifying a payment method nonce with 3DS 2.0 with onLookupComplete callback</caption>\n * var my3DSContainer;\n *\n * threeDSecure.verifyCard({\n *   amount: '123.45',\n *   nonce: hostedFieldsTokenizationPayload.nonce,\n *   bin: hostedFieldsTokenizationPayload.details.bin,\n *   email: 'test@example.com'\n *   billingAddress: {\n *     givenName: 'Jill',\n *     surname: 'Doe',\n *     phoneNumber: '8101234567',\n *     streetAddress: '555 Smith St.',\n *     extendedAddress: '#5',\n *     locality: 'Oakland',\n *     region: 'CA',\n *     postalCode: '12345',\n *     countryCodeAlpha2: 'US'\n *   },\n *   additionalInformation: {\n *     workPhoneNumber: '5555555555',\n *     shippingGivenName: 'Jill',\n *     shippingSurname: 'Doe',\n *     shippingAddress: {\n *       streetAddress: '555 Smith st',\n *       extendedAddress: '#5',\n *       locality: 'Oakland',\n *       region: 'CA',\n *       postalCode: '12345',\n *       countryCodeAlpha2: 'US'\n *     }\n *     shippingPhone: '8101234567'\n *   },\n *   onLookupComplete: function (data, next) {\n *     // use `data` here, then call `next()`\n *     next();\n *   }\n * }, function (err, payload) {\n *   if (err) {\n *     console.error(err);\n *     return;\n *   }\n *\n *   if (payload.liabilityShifted) {\n *     // Liability has shifted\n *     submitNonceToServer(payload.nonce);\n *   } else if (payload.liabilityShiftPossible) {\n *     // Liability may still be shifted\n *     // Decide if you want to submit the nonce\n *   } else {\n *     // Liability has not shifted and will not shift\n *     // Decide if you want to submit the nonce\n *   }\n * });\n * @example\n * <caption>Handling 3DS lookup errors</caption>\n * var my3DSContainer;\n *\n * // set up listener after initialization\n * threeDSecure.on(('lookup-complete', function (data, next) {\n *   // use `data` here, then call `next()`\n *   next();\n * });\n *\n * // call verifyCard after tokenizing a card\n * threeDSecure.verifyCard({\n *   amount: '123.45',\n *   nonce: hostedFieldsTokenizationPayload.nonce,\n *   bin: hostedFieldsTokenizationPayload.details.bin,\n *   email: 'test@example.com',\n *   billingAddress: billingAddressFromCustomer,\n *   additionalInformation: additionalInfoFromCustomer\n * }, function (err, payload) {\n *   if (err) {\n *     if (err.code.indexOf('THREEDS_LOOKUP') === 0) {\n *       // an error occurred during the initial lookup request\n *\n *       if (err.code === 'THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR') {\n *         // either the passed payment method nonce does not exist\n *         // or it was already consumed before the lookup call was made\n *       } else if (err.code.indexOf('THREEDS_LOOKUP_VALIDATION') === 0) {\n *         // a validation error occurred\n *         // likely some non-ascii characters were included in the billing\n *         // address given name or surname fields, or the cardholdername field\n *\n *         // Instruct your user to check their data and try again\n *       } else {\n *         // an unknown lookup error occurred\n *       }\n *     } else {\n *       // some other kind of error\n *     }\n *     return;\n *   }\n *\n *   // handle success\n * });\n */\nThreeDSecure.prototype.verifyCard = function (options) {\n  var privateOptions;\n\n  if (this.hasListener(\"lookup-complete\")) {\n    privateOptions = {\n      ignoreOnLookupCompleteRequirement: true,\n    };\n  }\n\n  return this._framework.verifyCard(options, privateOptions);\n};\n\n/* eslint-disable-next-line valid-jsdoc */\n/**\n * Launch the iframe challenge using a 3D Secure lookup response from a server side lookup.\n *\n * @public\n * @param {(object|string)} lookupResponse The lookup response from the server side call to lookup the 3D Secure information. The raw string or a parsed object can be passed.\n * @returns {Promise} Returns a promise.\n * @example\n * var my3DSContainer;\n *\n * threeDSecure.initializeChallengeWithLookupResponse(lookupResponseFromServer).then(function (payload) {\n *   if (payload.liabilityShifted) {\n *     // Liability has shifted\n *     submitNonceToServer(payload.nonce);\n *   } else if (payload.liabilityShiftPossible) {\n *     // Liability may still be shifted\n *     // Decide if you want to submit the nonce\n *   } else {\n *     // Liability has not shifted and will not shift\n *     // Decide if you want to submit the nonce\n *   }\n * });\n */\nThreeDSecure.prototype.initializeChallengeWithLookupResponse = function (\n  lookupResponse\n) {\n  if (typeof lookupResponse === \"string\") {\n    lookupResponse = JSON.parse(lookupResponse);\n  }\n\n  return this._framework.initializeChallengeWithLookupResponse(lookupResponse);\n};\n\n/**\n * Gather the data needed for a 3D Secure lookup call.\n *\n * @public\n * @param {object} options Options for 3D Secure lookup.\n * @param {string} options.nonce The nonce representing the card from a tokenization payload. For example, this can be a {@link HostedFields~tokenizePayload|tokenizePayload} returned by Hosted Fields under `payload.nonce`.\n * @param {string} options.bin The numeric Bank Identification Number (bin) of the card from a tokenization payload. For example, this can be a {@link HostedFields~tokenizePayload|tokenizePayload} returned by Hosted Fields under `payload.details.bin`.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link ThreeDSecure~prepareLookupPayload|prepareLookupPayload}. If no callback is provided, it will return a promise that resolves {@link ThreeDSecure~prepareLookupPayload|prepareLookupPayload}.\n\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * <caption>Preparing data for a 3D Secure lookup</caption>\n * threeDSecure.prepareLookup({\n *   nonce: hostedFieldsTokenizationPayload.nonce,\n *   bin: hostedFieldsTokenizationPayload.details.bin\n * }, function (err, payload) {\n *   if (err) {\n *     console.error(err);\n *     return;\n *   }\n *\n *   // send payload to server to do server side lookup\n * });\n */\nThreeDSecure.prototype.prepareLookup = function (options) {\n  return this._framework.prepareLookup(options).then(function (data) {\n    return JSON.stringify(data);\n  });\n};\n\n/**\n * Cancel the 3DS flow and return the verification payload if available. If using 3D Secure version 2, this will not close the UI of the authentication modal. It is recommended that this method only be used in the {@link ThreeDSecure#event:lookup-complete|`lookup-complete`} event or the `onLookupComplete` callback.\n * @public\n * @param {callback} [callback] The second argument is a {@link ThreeDSecure~verifyPayload|verifyPayload}. If there is no verifyPayload (the initial lookup did not complete), an error will be returned. If no callback is passed, `cancelVerifyCard` will return a promise.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example <caption>Cancel the verification in `lookup-complete` event</caption>\n * // set up listener after instantiation\n * threeDSecure.on('lookup-complete', function (data, next) {\n *   // determine if you want to call next to start the challenge,\n *   // if not, call cancelVerifyCard\n *   threeDSecure.cancelVerifyCard(function (err, verifyPayload) {\n *     if (err) {\n *       // Handle error\n *       console.log(err.message); // No verification payload available\n *       return;\n *     }\n *\n *     verifyPayload.nonce; // The nonce returned from the 3ds lookup call\n *     verifyPayload.liabilityShifted; // boolean\n *     verifyPayload.liabilityShiftPossible; // boolean\n *   });\n * });\n *\n * // after tokenizing a credit card\n * threeDSecure.verifyCard({\n *   amount: '100.00',\n *   nonce: nonceFromTokenizationPayload,\n *   bin: binFromTokenizationPayload\n *   // other fields such as billing address\n * }, function (verifyError, payload) {\n *   if (verifyError) {\n *     if (verifyError.code === 'THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT ') {\n *       // flow was canceled by merchant, 3ds info can be found in the payload\n *       // for cancelVerifyCard\n *     }\n *   }\n * });\n * @example <caption>Cancel the verification in onLookupComplete callback</caption>\n * threeDSecure.verifyCard({\n *   amount: '100.00',\n *   nonce: nonceFromTokenizationPayload,\n *   bin: binFromTokenizationPayload,\n *   // other fields such as billing address\n *   onLookupComplete: function (data, next) {\n *     // determine if you want to call next to start the challenge,\n *     // if not, call cancelVerifyCard\n *     threeDSecure.cancelVerifyCard(function (err, verifyPayload) {\n *       if (err) {\n *         // Handle error\n *         console.log(err.message); // No verification payload available\n *         return;\n *       }\n *\n *       verifyPayload.nonce; // The nonce returned from the 3ds lookup call\n *       verifyPayload.liabilityShifted; // boolean\n *       verifyPayload.liabilityShiftPossible; // boolean\n *     });\n *   }\n * }, function (verifyError, payload) {\n *   if (verifyError) {\n *     if (verifyError.code === 'THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT ') {\n *       // flow was canceled by merchant, 3ds info can be found in the payload\n *       // for cancelVerifyCard\n *     }\n *   }\n * });\n * @example <caption>Cancel the verification in 3D Secure version 1</caption>\n * // unlike with v2, this will not cause `verifyCard` to error, it will simply\n * // never call the callback\n * threeDSecure.cancelVerifyCard(function (err, verifyPayload) {\n *   if (err) {\n *     // Handle error\n *     console.log(err.message); // No verification payload available\n *     return;\n *   }\n *\n *   verifyPayload.nonce; // The nonce returned from the 3ds lookup call\n *   verifyPayload.liabilityShifted; // boolean\n *   verifyPayload.liabilityShiftPossible; // boolean\n * });\n */\nThreeDSecure.prototype.cancelVerifyCard = function () {\n  return this._framework.cancelVerifyCard();\n};\n\n/**\n * Cleanly remove anything set up by {@link module:braintree-web/three-d-secure.create|create}, with the exception that the Cardinal SDK, on window.Cardinal, will remain.\n * @public\n * @param {callback} [callback] Called on completion. If no callback is passed, `teardown` will return a promise.\n * @example\n * threeDSecure.teardown();\n * @example <caption>With callback</caption>\n * threeDSecure.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nThreeDSecure.prototype.teardown = function () {\n  var methodNames = methods(ThreeDSecure.prototype).concat(\n    methods(EventEmitter.prototype)\n  );\n\n  convertMethodsToError(this, methodNames);\n\n  return this._framework.teardown();\n};\n\nmodule.exports = wrapPromise.wrapPrototype(ThreeDSecure);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/external/three-d-secure.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/index.js":
/*!************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/** @module braintree-web/three-d-secure */\n\nvar ThreeDSecure = __webpack_require__(/*! ./external/three-d-secure */ \"(ssr)/./node_modules/braintree-web/three-d-secure/external/three-d-secure.js\");\nvar isHTTPS = (__webpack_require__(/*! ../lib/is-https */ \"(ssr)/./node_modules/braintree-web/lib/is-https.js\").isHTTPS);\nvar basicComponentVerification = __webpack_require__(/*! ../lib/basic-component-verification */ \"(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js\");\nvar createDeferredClient = __webpack_require__(/*! ../lib/create-deferred-client */ \"(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js\");\nvar createAssetsUrl = __webpack_require__(/*! ../lib/create-assets-url */ \"(ssr)/./node_modules/braintree-web/lib/create-assets-url.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar errors = __webpack_require__(/*! ./shared/errors */ \"(ssr)/./node_modules/braintree-web/three-d-secure/shared/errors.js\");\nvar VERSION = \"3.99.0\";\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {object} [options.cardinalSDKConfig] A config for the underlying Cardinal SDK.\n * @param {object} [options.cardinalSDKConfig.logging] The logging configuration for the Cardinal SDK. See [Cardinal's documentation for the logging object](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/1409568/Configurations#Configurations-Logging) for more information.\n * @param {number} [options.cardinalSDKConfig.timeout] The time in milliseconds to wait before a request to Cardinal's API times out. See [Cardinal's documentation for root level configuration](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/1409568/Configurations#Configurations-RootLevelConfiguration) for more information.\n * @param {number} [options.cardinalSDKConfig.maxRequestRetries] How many times a request should be re-attempted to Cardinal's API before giving up as a failure. See [Cardinal's documentation for root level configuration](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/1409568/Configurations#Configurations-RootLevelConfiguration) for more information.\n * @param {object} [options.cardinalSDKConfig.payment] An object to describe how you want the user interactions to behave. Only a subset of the [Cardinal SDK payment configuration object](https://cardinaldocs.atlassian.net/wiki/spaces/CC/pages/1409568/Configurations#Configurations-Payment) are supported: `displayLoading` and `displayExitButton`.\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {(number|string)} [options.version=1] The version of 3D Secure to use. Possible options:\n * * 1 - The legacy 3D Secure v1.0 integration.\n * * 2 - A 3D Secure v2.0 integration that uses a modal to host the 3D Secure iframe.\n * * 2-bootstrap3-modal - A 3D Secure v2.0 integration that uses a modal styled with Bootstrap 3 styles to host the 3D Secure iframe. Requires having the Bootstrap 3 script files and stylesheets on your page.\n * * 2-inline-iframe - A 3D Secure v2.0 integration that provides the authentication iframe directly to the merchant.\n * @param {callback} [callback] The second argument, `data`, is the {@link ThreeDSecure} instance. If no callback is provided, it returns a promise that resolves the {@link ThreeDSecure} instance.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n@example\n * <caption>Creating a v2 3D Secure component using 2 version (Cardinal modal)</caption>\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2'\n * }, function (createError, threeDSecure) {\n *   // set up lookup-complete listener\n *   threeDSecure.on('lookup-complete', function (data, next) {\n *     // check lookup data\n *\n *     next();\n *   });\n *\n *   // using Hosted Fields, use `tokenize` to get back a credit card nonce\n *\n *   threeDSecure.verifyCard({\n *     nonce: nonceFromTokenizationPayload,,\n *     bin: binFromTokenizationPayload,\n *     amount: '100.00'\n *   }, function (verifyError, payload) {\n *     // inspect payload\n *     // send payload.nonce to your server\n *   });\n * });\n * @example\n * <caption>Creating a v2 3D Secure component using 2-bootstrap3-modal version</caption>\n * // must have the boostrap js, css and jquery files on your page\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2-bootstrap3-modal'\n * }, function (createError, threeDSecure) {\n *   // set up lookup-complete listener\n *   threeDSecure.on('lookup-complete', function (data, next) {\n *     // check lookup data\n *\n *     next();\n *   });\n *\n *   // using Hosted Fields, use `tokenize` to get back a credit card nonce\n *\n *   // challenge will be presented in a bootstrap 3 modal\n *   threeDSecure.verifyCard({\n *     nonce: nonceFromTokenizationPayload,\n *     bin: binFromTokenizationPayload,\n *     amount: '100.00'\n *   }, function (verifyError, payload) {\n *     // inspect payload\n *     // send payload.nonce to your server\n *   });\n * });\n * @example\n * <caption>Creating a v2 3D Secure component using 2-inline-iframe version</caption>\n * braintree.threeDSecure.create({\n *   client: clientInstance,\n *   version: '2-inline-iframe'\n * }, function (createError, threeDSecure) {\n *   // set up lookup-complete listener\n *   threeDSecure.on('lookup-complete', function (data, next) {\n *     // check lookup data\n *\n *     next();\n *   });\n *   // set up iframe listener\n *   threeDSecure.on('authentication-iframe-available', function (event, next) {\n *     var element = event.element; // an html element that contains the iframe\n *\n *     document.body.appendChild(element); // put it on your page\n *\n *     next(); // let the sdk know the element has been added to the page\n *   });\n *\n *   // using Hosted Fields, use `tokenize` to get back a credit card nonce\n *\n *   threeDSecure.verifyCard({\n *     nonce: nonceFromTokenizationPayload,,\n *     bin: binFromTokenizationPayload,\n *     amount: '100.00'\n *   }, function (verifyError, payload) {\n *     // inspect payload\n *     // send payload.nonce to your server\n *   });\n * });\n */\nfunction create(options) {\n  var name = \"3D Secure\";\n  var framework = getFramework(options);\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var assetsUrl = createAssetsUrl.create(options.authorization);\n      var createPromise = createDeferredClient\n        .create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: assetsUrl,\n          name: name,\n        })\n        .then(function (client) {\n          var error, isProduction;\n          var config = client.getConfiguration();\n          var gwConfig = config.gatewayConfiguration;\n\n          options.client = client;\n\n          if (!gwConfig.threeDSecureEnabled) {\n            error = errors.THREEDS_NOT_ENABLED;\n          }\n\n          if (config.authorizationType === \"TOKENIZATION_KEY\") {\n            error = errors.THREEDS_CAN_NOT_USE_TOKENIZATION_KEY;\n          }\n\n          isProduction = gwConfig.environment === \"production\";\n\n          if (isProduction && !isHTTPS()) {\n            error = errors.THREEDS_HTTPS_REQUIRED;\n          }\n\n          if (\n            framework !== \"legacy\" &&\n            !(\n              gwConfig.threeDSecure &&\n              gwConfig.threeDSecure.cardinalAuthenticationJWT\n            )\n          ) {\n            analytics.sendEvent(\n              options.client,\n              \"three-d-secure.initialization.failed.missing-cardinalAuthenticationJWT\"\n            );\n            error = errors.THREEDS_NOT_ENABLED_FOR_V2;\n          }\n\n          if (error) {\n            return Promise.reject(new BraintreeError(error));\n          }\n\n          analytics.sendEvent(options.client, \"three-d-secure.initialized\");\n\n          return client;\n        });\n      var instance = new ThreeDSecure({\n        client: options.client,\n        assetsUrl: assetsUrl,\n        createPromise: createPromise,\n        loggingEnabled: options.loggingEnabled,\n        cardinalSDKConfig: options.cardinalSDKConfig,\n        framework: framework,\n      });\n\n      if (options.client) {\n        return createPromise.then(function () {\n          return instance;\n        });\n      }\n\n      return instance;\n    });\n}\n\nfunction getFramework(options) {\n  var version = String(options.version || \"\");\n\n  if (!version || version === \"1\") {\n    throw new BraintreeError({\n      code: errors.THREEDS_UNSUPPORTED_VERSION.code,\n      type: errors.THREEDS_UNSUPPORTED_VERSION.type,\n      message: errors.THREEDS_UNSUPPORTED_VERSION.message,\n    });\n  }\n\n  switch (version) {\n    case \"2\":\n    case \"2-cardinal-modal\":\n      return \"cardinal-modal\";\n    case \"2-bootstrap3-modal\":\n      return \"bootstrap3-modal\";\n    case \"2-inline-iframe\":\n      return \"inline-iframe\";\n    default:\n      throw new BraintreeError({\n        code: errors.THREEDS_UNRECOGNIZED_VERSION.code,\n        type: errors.THREEDS_UNRECOGNIZED_VERSION.type,\n        message:\n          \"Version `\" +\n          options.version +\n          \"` is not a recognized version. You may need to update the version of your Braintree SDK to support this version.\",\n      });\n  }\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `{@pkg version}`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/shared/constants.js":
/*!***********************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/shared/constants.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n  LANDING_FRAME_NAME: \"braintreethreedsecurelanding\",\n  CARDINAL_SCRIPT_SOURCE: {\n    production: \"https://songbird.cardinalcommerce.com/edge/v1/songbird.js\",\n    sandbox: \"https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9zaGFyZWQvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvdGhyZWUtZC1zZWN1cmUvc2hhcmVkL2NvbnN0YW50cy5qcz9iODBkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgTEFORElOR19GUkFNRV9OQU1FOiBcImJyYWludHJlZXRocmVlZHNlY3VyZWxhbmRpbmdcIixcbiAgQ0FSRElOQUxfU0NSSVBUX1NPVVJDRToge1xuICAgIHByb2R1Y3Rpb246IFwiaHR0cHM6Ly9zb25nYmlyZC5jYXJkaW5hbGNvbW1lcmNlLmNvbS9lZGdlL3YxL3NvbmdiaXJkLmpzXCIsXG4gICAgc2FuZGJveDogXCJodHRwczovL3NvbmdiaXJkc3RhZy5jYXJkaW5hbGNvbW1lcmNlLmNvbS9lZGdlL3YxL3NvbmdiaXJkLmpzXCIsXG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/shared/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/shared/errors.js":
/*!********************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/shared/errors.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.3D Secure - Creation Error Codes\n * @description Errors that occur when [creating the 3D Secure component](./module-braintree-web_three-d-secure.html#.create).\n * @property {MERCHANT} THREEDS_NOT_ENABLED Occurs when 3D Secure is not enabled in the Braintree control panel.\n * @property {MERCHANT} THREEDS_CAN_NOT_USE_TOKENIZATION_KEY Occurs when 3D Secure component is created without a Client Token.\n * @property {MERCHANT} THREEDS_HTTPS_REQUIRED Occurs when 3D Secure component is created in production over HTTPS.\n * @property {MERCHANT} THREEDS_NOT_ENABLED_FOR_V2 Occurs when 3D Secure component is created with version 2 parameter, but merchant is not enabled to use version 2.\n * @property {MERCHANT} THREEDS_UNRECOGNIZED_VERSION Occurs when unrecognized version enum is passed into the create call.\n * @property {UNKNOWN} THREEDS_CARDINAL_SDK_SETUP_FAILED Occurs when Cardinal's Songbird.js library fails to setup for an unknown reason.\n * @property {NETWORK} THREEDS_CARDINAL_SDK_SCRIPT_LOAD_FAILED Occurs when using version 2 and Cardinal's Songbird.js script could not be loaded.\n * @property {UNKNOWN} THREEDS_CARDINAL_SDK_SETUP_TIMEDOUT Occurs when Cardinal's Songbird.js library takes longer than 60 seconds to set up.\n * @property {UNKNOWN} THREEDS_CARDINAL_SDK_RESPONSE_TIMEDOUT Occurs when Cardinal sends a response indicating a timeout on /Validate, /Confirm, or /Continue.\n * @property {MERCHANT} THREEDS_CARDINAL_SDK_BAD_CONFIG Occurs when there is no JWT in the request. Also when there's some other malformed aspect of config.\n * @property {MERCHANT} THREEDS_CARDINAL_SDK_BAD_JWT Occurs when a malformed config causes a either a missing response JWT or a malformed Cardinal response.\n * @property {UNKNOWN} THREEDS_CARDINAL_SDK_ERROR Occurs when a \"general error\" or a Cardinal hosted fields error happens. Description contains more details.\n * @property {CUSTOMER} THREEDS_CARDINAL_SDK_CANCELED Occurs when customer cancels the transaction mid-flow, usually with alt-pays that have their own cancel buttons.\n * @property {MERCHANT} THREEDS_UNSUPPORTED_VERSION Occurs when 3D Secure component is created with version 1 (or default version) parameter.\n */\n\n/**\n * @name BraintreeError.3D Secure - verifyCard Error Codes\n * @description Errors that occur when using the [`verifyCard` method](./ThreeDSecure.html#verifyCard).\n * @property {MERCHANT} THREEDS_AUTHENTICATION_IN_PROGRESS Occurs when another verification is already in progress.\n * @property {MERCHANT} THREEDS_MISSING_VERIFY_CARD_OPTION Occurs when a required option is missing.\n * @property {UNKNOWN} THREEDS_JWT_AUTHENTICATION_FAILED Occurs when something went wrong authenticating the JWT from the Cardinal SDK.\n * @property {MERCHANT} THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR Occurs when the supplied payment method nonce does not exist or the payment method nonce has already been consumed.\n * @property {CUSTOMER} THREEDS_LOOKUP_VALIDATION_ERROR Occurs when a validation error occurs during the 3D Secure lookup.\n * @property {UNKNOWN} THREEDS_LOOKUP_ERROR An unknown error occurred while attempting the 3D Secure lookup.\n * @property {MERCHANT} THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT Occurs when the 3D Secure flow is canceled by the merchant using `cancelVerifyCard` (3D Secure v2 flows only).\n * @property {UNKNOWN} THREEDS_INLINE_IFRAME_DETAILS_INCORRECT An unknown error occurred while attempting to use the inline iframe framework.\n * @property {MERCHANT} THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID Occurs when unrecognized exemption enum value is passed into verifyCard.\n */\n\n/**\n * @name BraintreeError.3D Secure - cancelVerifyCard Error Codes\n * @description Errors that occur when using the [`cancelVerifyCard` method](./ThreeDSecure.html#cancelVerifyCard).\n * @property {MERCHANT} THREEDS_NO_VERIFICATION_PAYLOAD Occurs when the 3D Secure flow is canceled, but there is no 3D Secure information available.\n */\n\n/**\n * @name BraintreeError.3D Secure - Internal Error Codes\n * @ignore\n * @description Errors that occur internally\n * @property {INTERNAL} THREEDS_TERM_URL_REQUIRES_BRAINTREE_DOMAIN Occurs when iframe is initialized on a non-verified domain.\n * @property {INTERNAL} THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED Occurs when a 3D Secure framework method is not implemented.\n */\n\nvar BraintreeError = __webpack_require__(/*! ../../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  THREEDS_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_NOT_ENABLED\",\n    message: \"3D Secure is not enabled for this merchant.\",\n  },\n  THREEDS_CAN_NOT_USE_TOKENIZATION_KEY: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_CAN_NOT_USE_TOKENIZATION_KEY\",\n    message: \"3D Secure can not use a tokenization key for authorization.\",\n  },\n  THREEDS_HTTPS_REQUIRED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_HTTPS_REQUIRED\",\n    message: \"3D Secure requires HTTPS.\",\n  },\n  THREEDS_NOT_ENABLED_FOR_V2: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_NOT_ENABLED_FOR_V2\",\n    message:\n      \"3D Secure version 2 is not enabled for this merchant. Contact Braintree Support for assistance at https://help.braintreepayments.com/\",\n  },\n  THREEDS_UNRECOGNIZED_VERSION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_UNRECOGNIZED_VERSION\",\n  },\n  THREEDS_CARDINAL_SDK_SETUP_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_CARDINAL_SDK_SETUP_FAILED\",\n    message: \"Something went wrong setting up Cardinal's Songbird.js library.\",\n  },\n  THREEDS_CARDINAL_SDK_SCRIPT_LOAD_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"THREEDS_CARDINAL_SDK_SCRIPT_LOAD_FAILED\",\n    message: \"Cardinal's Songbird.js library could not be loaded.\",\n  },\n  THREEDS_CARDINAL_SDK_SETUP_TIMEDOUT: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_CARDINAL_SDK_SETUP_TIMEDOUT\",\n    message: \"Cardinal's Songbird.js took too long to setup.\",\n  },\n  THREEDS_CARDINAL_SDK_RESPONSE_TIMEDOUT: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_CARDINAL_SDK_RESPONSE_TIMEDOUT\",\n    message: \"Cardinal's API took too long to respond.\",\n  },\n  THREEDS_CARDINAL_SDK_BAD_CONFIG: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_CARDINAL_SDK_BAD_CONFIG\",\n    message:\n      \"JWT or other required field missing. Please check your setup configuration.\",\n  },\n  THREEDS_CARDINAL_SDK_BAD_JWT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_CARDINAL_SDK_BAD_JWT\",\n    message:\n      \"Cardinal JWT missing or malformed. Please check your setup configuration.\",\n  },\n  THREEDS_CARDINAL_SDK_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_CARDINAL_SDK_ERROR\",\n    message:\n      \"A general error has occurred with Cardinal. See description for more information.\",\n  },\n  THREEDS_CARDINAL_SDK_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"THREEDS_CARDINAL_SDK_CANCELED\",\n    message: \"Canceled by user.\",\n  },\n  THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_VERIFY_CARD_CANCELED_BY_MERCHANT\",\n    message: \"3D Secure verfication canceled by merchant.\",\n  },\n  THREEDS_AUTHENTICATION_IN_PROGRESS: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_AUTHENTICATION_IN_PROGRESS\",\n    message:\n      \"Cannot call verifyCard while existing authentication is in progress.\",\n  },\n  THREEDS_MISSING_VERIFY_CARD_OPTION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_MISSING_VERIFY_CARD_OPTION\",\n  },\n  THREEDS_JWT_AUTHENTICATION_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_JWT_AUTHENTICATION_FAILED\",\n    message: \"Something went wrong authenticating the JWT from Cardinal\",\n  },\n  THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_LOOKUP_TOKENIZED_CARD_NOT_FOUND_ERROR\",\n    message:\n      \"Either the payment method nonce passed to `verifyCard` does not exist, or it was already consumed\",\n  },\n  THREEDS_LOOKUP_VALIDATION_ERROR: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"THREEDS_LOOKUP_VALIDATION_ERROR\",\n    message:\n      \"The data passed in `verifyCard` did not pass validation checks. See details for more info\",\n  },\n  THREEDS_LOOKUP_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_LOOKUP_ERROR\",\n    message: \"Something went wrong during the 3D Secure lookup\",\n  },\n  THREEDS_INLINE_IFRAME_DETAILS_INCORRECT: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"THREEDS_INLINE_IFRAME_DETAILS_INCORRECT\",\n    message:\n      \"Something went wrong when attempting to add the authentication iframe to the page.\",\n  },\n  THREEDS_NO_VERIFICATION_PAYLOAD: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_NO_VERIFICATION_PAYLOAD\",\n    message: \"No verification payload available.\",\n  },\n  THREEDS_TERM_URL_REQUIRES_BRAINTREE_DOMAIN: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"THREEDS_TERM_URL_REQUIRES_BRAINTREE_DOMAIN\",\n    message: \"Term Url must be on a Braintree domain.\",\n  },\n  THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED: {\n    type: BraintreeError.types.INTERNAL,\n    code: \"THREEDS_FRAMEWORK_METHOD_NOT_IMPLEMENTED\",\n    message: \"Method not implemented for this framework.\",\n  },\n  THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_REQUESTED_EXEMPTION_TYPE_INVALID\",\n    message: \"Requested Exemption Type is invalid.\",\n  },\n  THREEDS_UNSUPPORTED_VERSION: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"THREEDS_UNSUPPORTED_VERSION\",\n    message:\n      \"3D Secure `1` is deprecated and no longer supported. See available versions at https://braintree.github.io/braintree-web/current/module-braintree-web_three-d-secure.html#.create\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9zaGFyZWQvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLGNBQWMsVUFBVTtBQUN4QixjQUFjLFVBQVU7QUFDeEIsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4QixjQUFjLFVBQVU7QUFDeEIsY0FBYyxTQUFTO0FBQ3ZCLGNBQWMsU0FBUztBQUN2QixjQUFjLFNBQVM7QUFDdkIsY0FBYyxTQUFTO0FBQ3ZCLGNBQWMsVUFBVTtBQUN4QixjQUFjLFVBQVU7QUFDeEIsY0FBYyxTQUFTO0FBQ3ZCLGNBQWMsVUFBVTtBQUN4QixjQUFjLFVBQVU7QUFDeEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4QixjQUFjLFNBQVM7QUFDdkIsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4QixjQUFjLFNBQVM7QUFDdkIsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsU0FBUztBQUN2QixjQUFjLFVBQVU7QUFDeEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsVUFBVTtBQUN4Qjs7QUFFQSxxQkFBcUIsbUJBQU8sQ0FBQyw0RkFBMkI7O0FBRXhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9zaGFyZWQvZXJyb3JzLmpzP2JmZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQG5hbWUgQnJhaW50cmVlRXJyb3IuM0QgU2VjdXJlIC0gQ3JlYXRpb24gRXJyb3IgQ29kZXNcbiAqIEBkZXNjcmlwdGlvbiBFcnJvcnMgdGhhdCBvY2N1ciB3aGVuIFtjcmVhdGluZyB0aGUgM0QgU2VjdXJlIGNvbXBvbmVudF0oLi9tb2R1bGUtYnJhaW50cmVlLXdlYl90aHJlZS1kLXNlY3VyZS5odG1sIy5jcmVhdGUpLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19OT1RfRU5BQkxFRCBPY2N1cnMgd2hlbiAzRCBTZWN1cmUgaXMgbm90IGVuYWJsZWQgaW4gdGhlIEJyYWludHJlZSBjb250cm9sIHBhbmVsLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19DQU5fTk9UX1VTRV9UT0tFTklaQVRJT05fS0VZIE9jY3VycyB3aGVuIDNEIFNlY3VyZSBjb21wb25lbnQgaXMgY3JlYXRlZCB3aXRob3V0IGEgQ2xpZW50IFRva2VuLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19IVFRQU19SRVFVSVJFRCBPY2N1cnMgd2hlbiAzRCBTZWN1cmUgY29tcG9uZW50IGlzIGNyZWF0ZWQgaW4gcHJvZHVjdGlvbiBvdmVyIEhUVFBTLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19OT1RfRU5BQkxFRF9GT1JfVjIgT2NjdXJzIHdoZW4gM0QgU2VjdXJlIGNvbXBvbmVudCBpcyBjcmVhdGVkIHdpdGggdmVyc2lvbiAyIHBhcmFtZXRlciwgYnV0IG1lcmNoYW50IGlzIG5vdCBlbmFibGVkIHRvIHVzZSB2ZXJzaW9uIDIuXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBUSFJFRURTX1VOUkVDT0dOSVpFRF9WRVJTSU9OIE9jY3VycyB3aGVuIHVucmVjb2duaXplZCB2ZXJzaW9uIGVudW0gaXMgcGFzc2VkIGludG8gdGhlIGNyZWF0ZSBjYWxsLlxuICogQHByb3BlcnR5IHtVTktOT1dOfSBUSFJFRURTX0NBUkRJTkFMX1NES19TRVRVUF9GQUlMRUQgT2NjdXJzIHdoZW4gQ2FyZGluYWwncyBTb25nYmlyZC5qcyBsaWJyYXJ5IGZhaWxzIHRvIHNldHVwIGZvciBhbiB1bmtub3duIHJlYXNvbi5cbiAqIEBwcm9wZXJ0eSB7TkVUV09SS30gVEhSRUVEU19DQVJESU5BTF9TREtfU0NSSVBUX0xPQURfRkFJTEVEIE9jY3VycyB3aGVuIHVzaW5nIHZlcnNpb24gMiBhbmQgQ2FyZGluYWwncyBTb25nYmlyZC5qcyBzY3JpcHQgY291bGQgbm90IGJlIGxvYWRlZC5cbiAqIEBwcm9wZXJ0eSB7VU5LTk9XTn0gVEhSRUVEU19DQVJESU5BTF9TREtfU0VUVVBfVElNRURPVVQgT2NjdXJzIHdoZW4gQ2FyZGluYWwncyBTb25nYmlyZC5qcyBsaWJyYXJ5IHRha2VzIGxvbmdlciB0aGFuIDYwIHNlY29uZHMgdG8gc2V0IHVwLlxuICogQHByb3BlcnR5IHtVTktOT1dOfSBUSFJFRURTX0NBUkRJTkFMX1NES19SRVNQT05TRV9USU1FRE9VVCBPY2N1cnMgd2hlbiBDYXJkaW5hbCBzZW5kcyBhIHJlc3BvbnNlIGluZGljYXRpbmcgYSB0aW1lb3V0IG9uIC9WYWxpZGF0ZSwgL0NvbmZpcm0sIG9yIC9Db250aW51ZS5cbiAqIEBwcm9wZXJ0eSB7TUVSQ0hBTlR9IFRIUkVFRFNfQ0FSRElOQUxfU0RLX0JBRF9DT05GSUcgT2NjdXJzIHdoZW4gdGhlcmUgaXMgbm8gSldUIGluIHRoZSByZXF1ZXN0LiBBbHNvIHdoZW4gdGhlcmUncyBzb21lIG90aGVyIG1hbGZvcm1lZCBhc3BlY3Qgb2YgY29uZmlnLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19DQVJESU5BTF9TREtfQkFEX0pXVCBPY2N1cnMgd2hlbiBhIG1hbGZvcm1lZCBjb25maWcgY2F1c2VzIGEgZWl0aGVyIGEgbWlzc2luZyByZXNwb25zZSBKV1Qgb3IgYSBtYWxmb3JtZWQgQ2FyZGluYWwgcmVzcG9uc2UuXG4gKiBAcHJvcGVydHkge1VOS05PV059IFRIUkVFRFNfQ0FSRElOQUxfU0RLX0VSUk9SIE9jY3VycyB3aGVuIGEgXCJnZW5lcmFsIGVycm9yXCIgb3IgYSBDYXJkaW5hbCBob3N0ZWQgZmllbGRzIGVycm9yIGhhcHBlbnMuIERlc2NyaXB0aW9uIGNvbnRhaW5zIG1vcmUgZGV0YWlscy5cbiAqIEBwcm9wZXJ0eSB7Q1VTVE9NRVJ9IFRIUkVFRFNfQ0FSRElOQUxfU0RLX0NBTkNFTEVEIE9jY3VycyB3aGVuIGN1c3RvbWVyIGNhbmNlbHMgdGhlIHRyYW5zYWN0aW9uIG1pZC1mbG93LCB1c3VhbGx5IHdpdGggYWx0LXBheXMgdGhhdCBoYXZlIHRoZWlyIG93biBjYW5jZWwgYnV0dG9ucy5cbiAqIEBwcm9wZXJ0eSB7TUVSQ0hBTlR9IFRIUkVFRFNfVU5TVVBQT1JURURfVkVSU0lPTiBPY2N1cnMgd2hlbiAzRCBTZWN1cmUgY29tcG9uZW50IGlzIGNyZWF0ZWQgd2l0aCB2ZXJzaW9uIDEgKG9yIGRlZmF1bHQgdmVyc2lvbikgcGFyYW1ldGVyLlxuICovXG5cbi8qKlxuICogQG5hbWUgQnJhaW50cmVlRXJyb3IuM0QgU2VjdXJlIC0gdmVyaWZ5Q2FyZCBFcnJvciBDb2Rlc1xuICogQGRlc2NyaXB0aW9uIEVycm9ycyB0aGF0IG9jY3VyIHdoZW4gdXNpbmcgdGhlIFtgdmVyaWZ5Q2FyZGAgbWV0aG9kXSguL1RocmVlRFNlY3VyZS5odG1sI3ZlcmlmeUNhcmQpLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19BVVRIRU5USUNBVElPTl9JTl9QUk9HUkVTUyBPY2N1cnMgd2hlbiBhbm90aGVyIHZlcmlmaWNhdGlvbiBpcyBhbHJlYWR5IGluIHByb2dyZXNzLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19NSVNTSU5HX1ZFUklGWV9DQVJEX09QVElPTiBPY2N1cnMgd2hlbiBhIHJlcXVpcmVkIG9wdGlvbiBpcyBtaXNzaW5nLlxuICogQHByb3BlcnR5IHtVTktOT1dOfSBUSFJFRURTX0pXVF9BVVRIRU5USUNBVElPTl9GQUlMRUQgT2NjdXJzIHdoZW4gc29tZXRoaW5nIHdlbnQgd3JvbmcgYXV0aGVudGljYXRpbmcgdGhlIEpXVCBmcm9tIHRoZSBDYXJkaW5hbCBTREsuXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBUSFJFRURTX0xPT0tVUF9UT0tFTklaRURfQ0FSRF9OT1RfRk9VTkRfRVJST1IgT2NjdXJzIHdoZW4gdGhlIHN1cHBsaWVkIHBheW1lbnQgbWV0aG9kIG5vbmNlIGRvZXMgbm90IGV4aXN0IG9yIHRoZSBwYXltZW50IG1ldGhvZCBub25jZSBoYXMgYWxyZWFkeSBiZWVuIGNvbnN1bWVkLlxuICogQHByb3BlcnR5IHtDVVNUT01FUn0gVEhSRUVEU19MT09LVVBfVkFMSURBVElPTl9FUlJPUiBPY2N1cnMgd2hlbiBhIHZhbGlkYXRpb24gZXJyb3Igb2NjdXJzIGR1cmluZyB0aGUgM0QgU2VjdXJlIGxvb2t1cC5cbiAqIEBwcm9wZXJ0eSB7VU5LTk9XTn0gVEhSRUVEU19MT09LVVBfRVJST1IgQW4gdW5rbm93biBlcnJvciBvY2N1cnJlZCB3aGlsZSBhdHRlbXB0aW5nIHRoZSAzRCBTZWN1cmUgbG9va3VwLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19WRVJJRllfQ0FSRF9DQU5DRUxFRF9CWV9NRVJDSEFOVCBPY2N1cnMgd2hlbiB0aGUgM0QgU2VjdXJlIGZsb3cgaXMgY2FuY2VsZWQgYnkgdGhlIG1lcmNoYW50IHVzaW5nIGBjYW5jZWxWZXJpZnlDYXJkYCAoM0QgU2VjdXJlIHYyIGZsb3dzIG9ubHkpLlxuICogQHByb3BlcnR5IHtVTktOT1dOfSBUSFJFRURTX0lOTElORV9JRlJBTUVfREVUQUlMU19JTkNPUlJFQ1QgQW4gdW5rbm93biBlcnJvciBvY2N1cnJlZCB3aGlsZSBhdHRlbXB0aW5nIHRvIHVzZSB0aGUgaW5saW5lIGlmcmFtZSBmcmFtZXdvcmsuXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBUSFJFRURTX1JFUVVFU1RFRF9FWEVNUFRJT05fVFlQRV9JTlZBTElEIE9jY3VycyB3aGVuIHVucmVjb2duaXplZCBleGVtcHRpb24gZW51bSB2YWx1ZSBpcyBwYXNzZWQgaW50byB2ZXJpZnlDYXJkLlxuICovXG5cbi8qKlxuICogQG5hbWUgQnJhaW50cmVlRXJyb3IuM0QgU2VjdXJlIC0gY2FuY2VsVmVyaWZ5Q2FyZCBFcnJvciBDb2Rlc1xuICogQGRlc2NyaXB0aW9uIEVycm9ycyB0aGF0IG9jY3VyIHdoZW4gdXNpbmcgdGhlIFtgY2FuY2VsVmVyaWZ5Q2FyZGAgbWV0aG9kXSguL1RocmVlRFNlY3VyZS5odG1sI2NhbmNlbFZlcmlmeUNhcmQpLlxuICogQHByb3BlcnR5IHtNRVJDSEFOVH0gVEhSRUVEU19OT19WRVJJRklDQVRJT05fUEFZTE9BRCBPY2N1cnMgd2hlbiB0aGUgM0QgU2VjdXJlIGZsb3cgaXMgY2FuY2VsZWQsIGJ1dCB0aGVyZSBpcyBubyAzRCBTZWN1cmUgaW5mb3JtYXRpb24gYXZhaWxhYmxlLlxuICovXG5cbi8qKlxuICogQG5hbWUgQnJhaW50cmVlRXJyb3IuM0QgU2VjdXJlIC0gSW50ZXJuYWwgRXJyb3IgQ29kZXNcbiAqIEBpZ25vcmVcbiAqIEBkZXNjcmlwdGlvbiBFcnJvcnMgdGhhdCBvY2N1ciBpbnRlcm5hbGx5XG4gKiBAcHJvcGVydHkge0lOVEVSTkFMfSBUSFJFRURTX1RFUk1fVVJMX1JFUVVJUkVTX0JSQUlOVFJFRV9ET01BSU4gT2NjdXJzIHdoZW4gaWZyYW1lIGlzIGluaXRpYWxpemVkIG9uIGEgbm9uLXZlcmlmaWVkIGRvbWFpbi5cbiAqIEBwcm9wZXJ0eSB7SU5URVJOQUx9IFRIUkVFRFNfRlJBTUVXT1JLX01FVEhPRF9OT1RfSU1QTEVNRU5URUQgT2NjdXJzIHdoZW4gYSAzRCBTZWN1cmUgZnJhbWV3b3JrIG1ldGhvZCBpcyBub3QgaW1wbGVtZW50ZWQuXG4gKi9cblxudmFyIEJyYWludHJlZUVycm9yID0gcmVxdWlyZShcIi4uLy4uL2xpYi9icmFpbnRyZWUtZXJyb3JcIik7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBUSFJFRURTX05PVF9FTkFCTEVEOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJUSFJFRURTX05PVF9FTkFCTEVEXCIsXG4gICAgbWVzc2FnZTogXCIzRCBTZWN1cmUgaXMgbm90IGVuYWJsZWQgZm9yIHRoaXMgbWVyY2hhbnQuXCIsXG4gIH0sXG4gIFRIUkVFRFNfQ0FOX05PVF9VU0VfVE9LRU5JWkFUSU9OX0tFWToge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiVEhSRUVEU19DQU5fTk9UX1VTRV9UT0tFTklaQVRJT05fS0VZXCIsXG4gICAgbWVzc2FnZTogXCIzRCBTZWN1cmUgY2FuIG5vdCB1c2UgYSB0b2tlbml6YXRpb24ga2V5IGZvciBhdXRob3JpemF0aW9uLlwiLFxuICB9LFxuICBUSFJFRURTX0hUVFBTX1JFUVVJUkVEOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJUSFJFRURTX0hUVFBTX1JFUVVJUkVEXCIsXG4gICAgbWVzc2FnZTogXCIzRCBTZWN1cmUgcmVxdWlyZXMgSFRUUFMuXCIsXG4gIH0sXG4gIFRIUkVFRFNfTk9UX0VOQUJMRURfRk9SX1YyOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJUSFJFRURTX05PVF9FTkFCTEVEX0ZPUl9WMlwiLFxuICAgIG1lc3NhZ2U6XG4gICAgICBcIjNEIFNlY3VyZSB2ZXJzaW9uIDIgaXMgbm90IGVuYWJsZWQgZm9yIHRoaXMgbWVyY2hhbnQuIENvbnRhY3QgQnJhaW50cmVlIFN1cHBvcnQgZm9yIGFzc2lzdGFuY2UgYXQgaHR0cHM6Ly9oZWxwLmJyYWludHJlZXBheW1lbnRzLmNvbS9cIixcbiAgfSxcbiAgVEhSRUVEU19VTlJFQ09HTklaRURfVkVSU0lPTjoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiVEhSRUVEU19VTlJFQ09HTklaRURfVkVSU0lPTlwiLFxuICB9LFxuICBUSFJFRURTX0NBUkRJTkFMX1NES19TRVRVUF9GQUlMRUQ6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5VTktOT1dOLFxuICAgIGNvZGU6IFwiVEhSRUVEU19DQVJESU5BTF9TREtfU0VUVVBfRkFJTEVEXCIsXG4gICAgbWVzc2FnZTogXCJTb21ldGhpbmcgd2VudCB3cm9uZyBzZXR0aW5nIHVwIENhcmRpbmFsJ3MgU29uZ2JpcmQuanMgbGlicmFyeS5cIixcbiAgfSxcbiAgVEhSRUVEU19DQVJESU5BTF9TREtfU0NSSVBUX0xPQURfRkFJTEVEOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTkVUV09SSyxcbiAgICBjb2RlOiBcIlRIUkVFRFNfQ0FSRElOQUxfU0RLX1NDUklQVF9MT0FEX0ZBSUxFRFwiLFxuICAgIG1lc3NhZ2U6IFwiQ2FyZGluYWwncyBTb25nYmlyZC5qcyBsaWJyYXJ5IGNvdWxkIG5vdCBiZSBsb2FkZWQuXCIsXG4gIH0sXG4gIFRIUkVFRFNfQ0FSRElOQUxfU0RLX1NFVFVQX1RJTUVET1VUOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuVU5LTk9XTixcbiAgICBjb2RlOiBcIlRIUkVFRFNfQ0FSRElOQUxfU0RLX1NFVFVQX1RJTUVET1VUXCIsXG4gICAgbWVzc2FnZTogXCJDYXJkaW5hbCdzIFNvbmdiaXJkLmpzIHRvb2sgdG9vIGxvbmcgdG8gc2V0dXAuXCIsXG4gIH0sXG4gIFRIUkVFRFNfQ0FSRElOQUxfU0RLX1JFU1BPTlNFX1RJTUVET1VUOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuVU5LTk9XTixcbiAgICBjb2RlOiBcIlRIUkVFRFNfQ0FSRElOQUxfU0RLX1JFU1BPTlNFX1RJTUVET1VUXCIsXG4gICAgbWVzc2FnZTogXCJDYXJkaW5hbCdzIEFQSSB0b29rIHRvbyBsb25nIHRvIHJlc3BvbmQuXCIsXG4gIH0sXG4gIFRIUkVFRFNfQ0FSRElOQUxfU0RLX0JBRF9DT05GSUc6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5NRVJDSEFOVCxcbiAgICBjb2RlOiBcIlRIUkVFRFNfQ0FSRElOQUxfU0RLX0JBRF9DT05GSUdcIixcbiAgICBtZXNzYWdlOlxuICAgICAgXCJKV1Qgb3Igb3RoZXIgcmVxdWlyZWQgZmllbGQgbWlzc2luZy4gUGxlYXNlIGNoZWNrIHlvdXIgc2V0dXAgY29uZmlndXJhdGlvbi5cIixcbiAgfSxcbiAgVEhSRUVEU19DQVJESU5BTF9TREtfQkFEX0pXVDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiVEhSRUVEU19DQVJESU5BTF9TREtfQkFEX0pXVFwiLFxuICAgIG1lc3NhZ2U6XG4gICAgICBcIkNhcmRpbmFsIEpXVCBtaXNzaW5nIG9yIG1hbGZvcm1lZC4gUGxlYXNlIGNoZWNrIHlvdXIgc2V0dXAgY29uZmlndXJhdGlvbi5cIixcbiAgfSxcbiAgVEhSRUVEU19DQVJESU5BTF9TREtfRVJST1I6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5VTktOT1dOLFxuICAgIGNvZGU6IFwiVEhSRUVEU19DQVJESU5BTF9TREtfRVJST1JcIixcbiAgICBtZXNzYWdlOlxuICAgICAgXCJBIGdlbmVyYWwgZXJyb3IgaGFzIG9jY3VycmVkIHdpdGggQ2FyZGluYWwuIFNlZSBkZXNjcmlwdGlvbiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIixcbiAgfSxcbiAgVEhSRUVEU19DQVJESU5BTF9TREtfQ0FOQ0VMRUQ6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5DVVNUT01FUixcbiAgICBjb2RlOiBcIlRIUkVFRFNfQ0FSRElOQUxfU0RLX0NBTkNFTEVEXCIsXG4gICAgbWVzc2FnZTogXCJDYW5jZWxlZCBieSB1c2VyLlwiLFxuICB9LFxuICBUSFJFRURTX1ZFUklGWV9DQVJEX0NBTkNFTEVEX0JZX01FUkNIQU5UOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJUSFJFRURTX1ZFUklGWV9DQVJEX0NBTkNFTEVEX0JZX01FUkNIQU5UXCIsXG4gICAgbWVzc2FnZTogXCIzRCBTZWN1cmUgdmVyZmljYXRpb24gY2FuY2VsZWQgYnkgbWVyY2hhbnQuXCIsXG4gIH0sXG4gIFRIUkVFRFNfQVVUSEVOVElDQVRJT05fSU5fUFJPR1JFU1M6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5NRVJDSEFOVCxcbiAgICBjb2RlOiBcIlRIUkVFRFNfQVVUSEVOVElDQVRJT05fSU5fUFJPR1JFU1NcIixcbiAgICBtZXNzYWdlOlxuICAgICAgXCJDYW5ub3QgY2FsbCB2ZXJpZnlDYXJkIHdoaWxlIGV4aXN0aW5nIGF1dGhlbnRpY2F0aW9uIGlzIGluIHByb2dyZXNzLlwiLFxuICB9LFxuICBUSFJFRURTX01JU1NJTkdfVkVSSUZZX0NBUkRfT1BUSU9OOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJUSFJFRURTX01JU1NJTkdfVkVSSUZZX0NBUkRfT1BUSU9OXCIsXG4gIH0sXG4gIFRIUkVFRFNfSldUX0FVVEhFTlRJQ0FUSU9OX0ZBSUxFRDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLlVOS05PV04sXG4gICAgY29kZTogXCJUSFJFRURTX0pXVF9BVVRIRU5USUNBVElPTl9GQUlMRURcIixcbiAgICBtZXNzYWdlOiBcIlNvbWV0aGluZyB3ZW50IHdyb25nIGF1dGhlbnRpY2F0aW5nIHRoZSBKV1QgZnJvbSBDYXJkaW5hbFwiLFxuICB9LFxuICBUSFJFRURTX0xPT0tVUF9UT0tFTklaRURfQ0FSRF9OT1RfRk9VTkRfRVJST1I6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5NRVJDSEFOVCxcbiAgICBjb2RlOiBcIlRIUkVFRFNfTE9PS1VQX1RPS0VOSVpFRF9DQVJEX05PVF9GT1VORF9FUlJPUlwiLFxuICAgIG1lc3NhZ2U6XG4gICAgICBcIkVpdGhlciB0aGUgcGF5bWVudCBtZXRob2Qgbm9uY2UgcGFzc2VkIHRvIGB2ZXJpZnlDYXJkYCBkb2VzIG5vdCBleGlzdCwgb3IgaXQgd2FzIGFscmVhZHkgY29uc3VtZWRcIixcbiAgfSxcbiAgVEhSRUVEU19MT09LVVBfVkFMSURBVElPTl9FUlJPUjoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLkNVU1RPTUVSLFxuICAgIGNvZGU6IFwiVEhSRUVEU19MT09LVVBfVkFMSURBVElPTl9FUlJPUlwiLFxuICAgIG1lc3NhZ2U6XG4gICAgICBcIlRoZSBkYXRhIHBhc3NlZCBpbiBgdmVyaWZ5Q2FyZGAgZGlkIG5vdCBwYXNzIHZhbGlkYXRpb24gY2hlY2tzLiBTZWUgZGV0YWlscyBmb3IgbW9yZSBpbmZvXCIsXG4gIH0sXG4gIFRIUkVFRFNfTE9PS1VQX0VSUk9SOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuVU5LTk9XTixcbiAgICBjb2RlOiBcIlRIUkVFRFNfTE9PS1VQX0VSUk9SXCIsXG4gICAgbWVzc2FnZTogXCJTb21ldGhpbmcgd2VudCB3cm9uZyBkdXJpbmcgdGhlIDNEIFNlY3VyZSBsb29rdXBcIixcbiAgfSxcbiAgVEhSRUVEU19JTkxJTkVfSUZSQU1FX0RFVEFJTFNfSU5DT1JSRUNUOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuVU5LTk9XTixcbiAgICBjb2RlOiBcIlRIUkVFRFNfSU5MSU5FX0lGUkFNRV9ERVRBSUxTX0lOQ09SUkVDVFwiLFxuICAgIG1lc3NhZ2U6XG4gICAgICBcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdoZW4gYXR0ZW1wdGluZyB0byBhZGQgdGhlIGF1dGhlbnRpY2F0aW9uIGlmcmFtZSB0byB0aGUgcGFnZS5cIixcbiAgfSxcbiAgVEhSRUVEU19OT19WRVJJRklDQVRJT05fUEFZTE9BRDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiVEhSRUVEU19OT19WRVJJRklDQVRJT05fUEFZTE9BRFwiLFxuICAgIG1lc3NhZ2U6IFwiTm8gdmVyaWZpY2F0aW9uIHBheWxvYWQgYXZhaWxhYmxlLlwiLFxuICB9LFxuICBUSFJFRURTX1RFUk1fVVJMX1JFUVVJUkVTX0JSQUlOVFJFRV9ET01BSU46IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5JTlRFUk5BTCxcbiAgICBjb2RlOiBcIlRIUkVFRFNfVEVSTV9VUkxfUkVRVUlSRVNfQlJBSU5UUkVFX0RPTUFJTlwiLFxuICAgIG1lc3NhZ2U6IFwiVGVybSBVcmwgbXVzdCBiZSBvbiBhIEJyYWludHJlZSBkb21haW4uXCIsXG4gIH0sXG4gIFRIUkVFRFNfRlJBTUVXT1JLX01FVEhPRF9OT1RfSU1QTEVNRU5URUQ6IHtcbiAgICB0eXBlOiBCcmFpbnRyZWVFcnJvci50eXBlcy5JTlRFUk5BTCxcbiAgICBjb2RlOiBcIlRIUkVFRFNfRlJBTUVXT1JLX01FVEhPRF9OT1RfSU1QTEVNRU5URURcIixcbiAgICBtZXNzYWdlOiBcIk1ldGhvZCBub3QgaW1wbGVtZW50ZWQgZm9yIHRoaXMgZnJhbWV3b3JrLlwiLFxuICB9LFxuICBUSFJFRURTX1JFUVVFU1RFRF9FWEVNUFRJT05fVFlQRV9JTlZBTElEOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJUSFJFRURTX1JFUVVFU1RFRF9FWEVNUFRJT05fVFlQRV9JTlZBTElEXCIsXG4gICAgbWVzc2FnZTogXCJSZXF1ZXN0ZWQgRXhlbXB0aW9uIFR5cGUgaXMgaW52YWxpZC5cIixcbiAgfSxcbiAgVEhSRUVEU19VTlNVUFBPUlRFRF9WRVJTSU9OOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJUSFJFRURTX1VOU1VQUE9SVEVEX1ZFUlNJT05cIixcbiAgICBtZXNzYWdlOlxuICAgICAgXCIzRCBTZWN1cmUgYDFgIGlzIGRlcHJlY2F0ZWQgYW5kIG5vIGxvbmdlciBzdXBwb3J0ZWQuIFNlZSBhdmFpbGFibGUgdmVyc2lvbnMgYXQgaHR0cHM6Ly9icmFpbnRyZWUuZ2l0aHViLmlvL2JyYWludHJlZS13ZWIvY3VycmVudC9tb2R1bGUtYnJhaW50cmVlLXdlYl90aHJlZS1kLXNlY3VyZS5odG1sIy5jcmVhdGVcIixcbiAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/shared/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/three-d-secure/shared/events.js":
/*!********************************************************************!*\
  !*** ./node_modules/braintree-web/three-d-secure/shared/events.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar enumerate = __webpack_require__(/*! ../../lib/enumerate */ \"(ssr)/./node_modules/braintree-web/lib/enumerate.js\");\n\nmodule.exports = enumerate([\"AUTHENTICATION_COMPLETE\"], \"threedsecure:\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi90aHJlZS1kLXNlY3VyZS9zaGFyZWQvZXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLGdGQUFxQjs7QUFFN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvdGhyZWUtZC1zZWN1cmUvc2hhcmVkL2V2ZW50cy5qcz8yYjg0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgZW51bWVyYXRlID0gcmVxdWlyZShcIi4uLy4uL2xpYi9lbnVtZXJhdGVcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZW51bWVyYXRlKFtcIkFVVEhFTlRJQ0FUSU9OX0NPTVBMRVRFXCJdLCBcInRocmVlZHNlY3VyZTpcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/three-d-secure/shared/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/vault-manager/errors.js":
/*!************************************************************!*\
  !*** ./node_modules/braintree-web/vault-manager/errors.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.Vault Manager - deletePaymentMethod Error Codes\n * @description Errors that occur when using the [`deletePaymentMethod` method](./VaultManager.html#deletePaymentMethod).\n * @property {MERCHANT} VAULT_MANAGER_DELETE_PAYMENT_METHOD_NONCE_REQUIRES_CLIENT_TOKEN Occurs when vault manager is initialized with a tokenization key instead of a Client Token.\n * @property {MERCHANT} VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND Occurs when the specified payment method can not be found.\n * @property {UNKNOWN} VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR Occurs when there is an error attempting to delete the payment method.\n */\n\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  VAULT_MANAGER_DELETE_PAYMENT_METHOD_NONCE_REQUIRES_CLIENT_TOKEN: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VAULT_MANAGER_DELETE_PAYMENT_METHOD_NONCE_REQUIRES_CLIENT_TOKEN\",\n    message:\n      \"A client token with a customer id must be used to delete a payment method nonce.\",\n  },\n  VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND\",\n  },\n  VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92YXVsdC1tYW5hZ2VyL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQSxjQUFjLFVBQVU7QUFDeEIsY0FBYyxVQUFVO0FBQ3hCLGNBQWMsU0FBUztBQUN2Qjs7QUFFQSxxQkFBcUIsbUJBQU8sQ0FBQyx5RkFBd0I7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL3ZhdWx0LW1hbmFnZXIvZXJyb3JzLmpzP2M0OTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogQG5hbWUgQnJhaW50cmVlRXJyb3IuVmF1bHQgTWFuYWdlciAtIGRlbGV0ZVBheW1lbnRNZXRob2QgRXJyb3IgQ29kZXNcbiAqIEBkZXNjcmlwdGlvbiBFcnJvcnMgdGhhdCBvY2N1ciB3aGVuIHVzaW5nIHRoZSBbYGRlbGV0ZVBheW1lbnRNZXRob2RgIG1ldGhvZF0oLi9WYXVsdE1hbmFnZXIuaHRtbCNkZWxldGVQYXltZW50TWV0aG9kKS5cbiAqIEBwcm9wZXJ0eSB7TUVSQ0hBTlR9IFZBVUxUX01BTkFHRVJfREVMRVRFX1BBWU1FTlRfTUVUSE9EX05PTkNFX1JFUVVJUkVTX0NMSUVOVF9UT0tFTiBPY2N1cnMgd2hlbiB2YXVsdCBtYW5hZ2VyIGlzIGluaXRpYWxpemVkIHdpdGggYSB0b2tlbml6YXRpb24ga2V5IGluc3RlYWQgb2YgYSBDbGllbnQgVG9rZW4uXG4gKiBAcHJvcGVydHkge01FUkNIQU5UfSBWQVVMVF9NQU5BR0VSX1BBWU1FTlRfTUVUSE9EX05PTkNFX05PVF9GT1VORCBPY2N1cnMgd2hlbiB0aGUgc3BlY2lmaWVkIHBheW1lbnQgbWV0aG9kIGNhbiBub3QgYmUgZm91bmQuXG4gKiBAcHJvcGVydHkge1VOS05PV059IFZBVUxUX01BTkFHRVJfREVMRVRFX1BBWU1FTlRfTUVUSE9EX1VOS05PV05fRVJST1IgT2NjdXJzIHdoZW4gdGhlcmUgaXMgYW4gZXJyb3IgYXR0ZW1wdGluZyB0byBkZWxldGUgdGhlIHBheW1lbnQgbWV0aG9kLlxuICovXG5cbnZhciBCcmFpbnRyZWVFcnJvciA9IHJlcXVpcmUoXCIuLi9saWIvYnJhaW50cmVlLWVycm9yXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgVkFVTFRfTUFOQUdFUl9ERUxFVEVfUEFZTUVOVF9NRVRIT0RfTk9OQ0VfUkVRVUlSRVNfQ0xJRU5UX1RPS0VOOiB7XG4gICAgdHlwZTogQnJhaW50cmVlRXJyb3IudHlwZXMuTUVSQ0hBTlQsXG4gICAgY29kZTogXCJWQVVMVF9NQU5BR0VSX0RFTEVURV9QQVlNRU5UX01FVEhPRF9OT05DRV9SRVFVSVJFU19DTElFTlRfVE9LRU5cIixcbiAgICBtZXNzYWdlOlxuICAgICAgXCJBIGNsaWVudCB0b2tlbiB3aXRoIGEgY3VzdG9tZXIgaWQgbXVzdCBiZSB1c2VkIHRvIGRlbGV0ZSBhIHBheW1lbnQgbWV0aG9kIG5vbmNlLlwiLFxuICB9LFxuICBWQVVMVF9NQU5BR0VSX1BBWU1FTlRfTUVUSE9EX05PTkNFX05PVF9GT1VORDoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLk1FUkNIQU5ULFxuICAgIGNvZGU6IFwiVkFVTFRfTUFOQUdFUl9QQVlNRU5UX01FVEhPRF9OT05DRV9OT1RfRk9VTkRcIixcbiAgfSxcbiAgVkFVTFRfTUFOQUdFUl9ERUxFVEVfUEFZTUVOVF9NRVRIT0RfVU5LTk9XTl9FUlJPUjoge1xuICAgIHR5cGU6IEJyYWludHJlZUVycm9yLnR5cGVzLlVOS05PV04sXG4gICAgY29kZTogXCJWQVVMVF9NQU5BR0VSX0RFTEVURV9QQVlNRU5UX01FVEhPRF9VTktOT1dOX0VSUk9SXCIsXG4gIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/vault-manager/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/vault-manager/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/braintree-web/vault-manager/index.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/**\n * @module braintree-web/vault-manager\n * @description Manages customer's payment methods.\n */\n\nvar basicComponentVerification = __webpack_require__(/*! ../lib/basic-component-verification */ \"(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js\");\nvar createDeferredClient = __webpack_require__(/*! ../lib/create-deferred-client */ \"(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js\");\nvar createAssetsUrl = __webpack_require__(/*! ../lib/create-assets-url */ \"(ssr)/./node_modules/braintree-web/lib/create-assets-url.js\");\nvar VaultManager = __webpack_require__(/*! ./vault-manager */ \"(ssr)/./node_modules/braintree-web/vault-manager/vault-manager.js\");\nvar VERSION = \"3.99.0\";\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {callback} callback The second argument, `data`, is the {@link VaultManager} instance.\n * @returns {void}\n */\nfunction create(options) {\n  var name = \"Vault Manager\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      return new VaultManager({\n        createPromise: createDeferredClient.create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: createAssetsUrl.create(options.authorization),\n          name: name,\n        }),\n      });\n    });\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  /**\n   * @description The current version of the SDK, i.e. `{@pkg version}`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92YXVsdC1tYW5hZ2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDLG1CQUFPLENBQUMsbUhBQXFDO0FBQzlFLDJCQUEyQixtQkFBTyxDQUFDLHVHQUErQjtBQUNsRSxzQkFBc0IsbUJBQU8sQ0FBQyw2RkFBMEI7QUFDeEQsbUJBQW1CLG1CQUFPLENBQUMsMEZBQWlCO0FBQzVDO0FBQ0Esa0JBQWtCLG1CQUFPLENBQUMsa0dBQXlCOztBQUVuRDtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRLG9CQUFvQixjQUFjO0FBQ3JELFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVUsOENBQThDLG9CQUFvQjtBQUN2RixhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxhQUFhO0FBQ3RFLFlBQVk7QUFDWjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvdmF1bHQtbWFuYWdlci9pbmRleC5qcz9iY2ZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBAbW9kdWxlIGJyYWludHJlZS13ZWIvdmF1bHQtbWFuYWdlclxuICogQGRlc2NyaXB0aW9uIE1hbmFnZXMgY3VzdG9tZXIncyBwYXltZW50IG1ldGhvZHMuXG4gKi9cblxudmFyIGJhc2ljQ29tcG9uZW50VmVyaWZpY2F0aW9uID0gcmVxdWlyZShcIi4uL2xpYi9iYXNpYy1jb21wb25lbnQtdmVyaWZpY2F0aW9uXCIpO1xudmFyIGNyZWF0ZURlZmVycmVkQ2xpZW50ID0gcmVxdWlyZShcIi4uL2xpYi9jcmVhdGUtZGVmZXJyZWQtY2xpZW50XCIpO1xudmFyIGNyZWF0ZUFzc2V0c1VybCA9IHJlcXVpcmUoXCIuLi9saWIvY3JlYXRlLWFzc2V0cy11cmxcIik7XG52YXIgVmF1bHRNYW5hZ2VyID0gcmVxdWlyZShcIi4vdmF1bHQtbWFuYWdlclwiKTtcbnZhciBWRVJTSU9OID0gXCIzLjk5LjBcIjtcbnZhciB3cmFwUHJvbWlzZSA9IHJlcXVpcmUoXCJAYnJhaW50cmVlL3dyYXAtcHJvbWlzZVwiKTtcblxuLyoqXG4gKiBAc3RhdGljXG4gKiBAZnVuY3Rpb24gY3JlYXRlXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyBDcmVhdGlvbiBvcHRpb25zOlxuICogQHBhcmFtIHtDbGllbnR9IFtvcHRpb25zLmNsaWVudF0gQSB7QGxpbmsgQ2xpZW50fSBpbnN0YW5jZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy5hdXRob3JpemF0aW9uXSBBIHRva2VuaXphdGlvbktleSBvciBjbGllbnRUb2tlbi4gQ2FuIGJlIHVzZWQgaW4gcGxhY2Ugb2YgYG9wdGlvbnMuY2xpZW50YC5cbiAqIEBwYXJhbSB7Y2FsbGJhY2t9IGNhbGxiYWNrIFRoZSBzZWNvbmQgYXJndW1lbnQsIGBkYXRhYCwgaXMgdGhlIHtAbGluayBWYXVsdE1hbmFnZXJ9IGluc3RhbmNlLlxuICogQHJldHVybnMge3ZvaWR9XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZShvcHRpb25zKSB7XG4gIHZhciBuYW1lID0gXCJWYXVsdCBNYW5hZ2VyXCI7XG5cbiAgcmV0dXJuIGJhc2ljQ29tcG9uZW50VmVyaWZpY2F0aW9uXG4gICAgLnZlcmlmeSh7XG4gICAgICBuYW1lOiBuYW1lLFxuICAgICAgY2xpZW50OiBvcHRpb25zLmNsaWVudCxcbiAgICAgIGF1dGhvcml6YXRpb246IG9wdGlvbnMuYXV0aG9yaXphdGlvbixcbiAgICB9KVxuICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBuZXcgVmF1bHRNYW5hZ2VyKHtcbiAgICAgICAgY3JlYXRlUHJvbWlzZTogY3JlYXRlRGVmZXJyZWRDbGllbnQuY3JlYXRlKHtcbiAgICAgICAgICBhdXRob3JpemF0aW9uOiBvcHRpb25zLmF1dGhvcml6YXRpb24sXG4gICAgICAgICAgY2xpZW50OiBvcHRpb25zLmNsaWVudCxcbiAgICAgICAgICBkZWJ1Zzogb3B0aW9ucy5kZWJ1ZyxcbiAgICAgICAgICBhc3NldHNVcmw6IGNyZWF0ZUFzc2V0c1VybC5jcmVhdGUob3B0aW9ucy5hdXRob3JpemF0aW9uKSxcbiAgICAgICAgICBuYW1lOiBuYW1lLFxuICAgICAgICB9KSxcbiAgICAgIH0pO1xuICAgIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlOiB3cmFwUHJvbWlzZShjcmVhdGUpLFxuICAvKipcbiAgICogQGRlc2NyaXB0aW9uIFRoZSBjdXJyZW50IHZlcnNpb24gb2YgdGhlIFNESywgaS5lLiBge0Bwa2cgdmVyc2lvbn1gLlxuICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgKi9cbiAgVkVSU0lPTjogVkVSU0lPTixcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/vault-manager/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/vault-manager/vault-manager.js":
/*!*******************************************************************!*\
  !*** ./node_modules/braintree-web/vault-manager/vault-manager.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar errors = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/braintree-web/vault-manager/errors.js\");\nvar convertMethodsToError = __webpack_require__(/*! ../lib/convert-methods-to-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\");\nvar methods = __webpack_require__(/*! ../lib/methods */ \"(ssr)/./node_modules/braintree-web/lib/methods.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\n\nvar DELETE_PAYMENT_METHOD_MUTATION =\n  \"mutation DeletePaymentMethodFromSingleUseToken($input: DeletePaymentMethodFromSingleUseTokenInput!) {\" +\n  \"  deletePaymentMethodFromSingleUseToken(input: $input) {\" +\n  \"    clientMutationId\" +\n  \"  }\" +\n  \"}\";\n\n/**\n * @typedef {array} VaultManager~fetchPaymentMethodsPayload The customer's payment methods.\n * @property {object} paymentMethod The payment method object.\n * @property {string} paymentMethod.nonce A nonce that can be sent to your server to transact on the payment method.\n * @property {boolean} paymentMethod.default Whether or not this is the default payment method for the customer.\n * @property {object} paymentMethod.details Any additional details about the payment method. Varies depending on the type of payment method.\n * @property {string} paymentMethod.type A constant indicating the type of payment method.\n * @property {?string} paymentMethod.description Additional description about the payment method.\n * @property {?object} paymentMethod.binData Bin data about the payment method.\n *\n */\n\n/**\n * @class\n * @param {object} options Options\n * @description <strong>You cannot use this constructor directly. Use {@link module:braintree-web/vault-manager.create|braintree.vault-manager.create} instead.</strong>\n * @classdesc This class allows you to manage a customer's payment methods on the client.\n */\nfunction VaultManager(options) {\n  this._createPromise = options.createPromise;\n}\n\n/**\n * Fetches payment methods owned by the customer whose id was used to generate the client token used to create the {@link module:braintree-web/client|client}.\n * @public\n * @param {object} [options] Options for fetching payment methods.\n * @param {boolean} [options.defaultFirst = false] If `true`, the payment methods will be returned with the default payment method for the customer first. Otherwise, order is not guaranteed.\n * @param {callback} [callback] The second argument is a {@link VaultManager~fetchPaymentMethodsPayload|fetchPaymentMethodsPayload}. This is also what is resolved by the promise if no callback is provided.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * vaultManagerInstance.fetchPaymentMethods(function (err, paymentMethods) {\n *   paymentMethods.forEach(function (paymentMethod) {\n *     // add payment method to UI\n *     // paymentMethod.nonce <- transactable nonce associated with payment method\n *     // paymentMethod.details <- object with additional information about payment method\n *     // paymentMethod.type <- a constant signifying the type\n *   });\n * });\n */\nVaultManager.prototype.fetchPaymentMethods = function (options) {\n  var defaultFirst;\n\n  options = options || {};\n\n  defaultFirst = options.defaultFirst === true ? 1 : 0;\n\n  return this._createPromise\n    .then(function (client) {\n      return client.request({\n        endpoint: \"payment_methods\",\n        method: \"get\",\n        data: {\n          defaultFirst: defaultFirst,\n        },\n      });\n    })\n    .then(\n      function (paymentMethodsPayload) {\n        analytics.sendEvent(\n          this._createPromise,\n          \"vault-manager.fetch-payment-methods.succeeded\"\n        );\n\n        return paymentMethodsPayload.paymentMethods.map(\n          formatPaymentMethodPayload\n        );\n      }.bind(this)\n    );\n};\n\n/**\n * Deletes a payment method owned by the customer whose id was used to generate the client token used to create the {@link module:braintree-web/client|client}.\n * @public\n * @param {string} paymentMethodNonce The payment method nonce that references a vaulted payment method.\n * @param {callback} [callback] No data is returned if the operation is successful.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * vaultManagerInstance.deletePaymentMethod('nonce-to-delete', function (err) {\n *   // handle err if it exists\n * });\n */\nVaultManager.prototype.deletePaymentMethod = function (paymentMethodNonce) {\n  return this._createPromise.then(function (client) {\n    var usesClientToken =\n      client.getConfiguration().authorizationType === \"CLIENT_TOKEN\";\n\n    if (!usesClientToken) {\n      return Promise.reject(\n        new BraintreeError(\n          errors.VAULT_MANAGER_DELETE_PAYMENT_METHOD_NONCE_REQUIRES_CLIENT_TOKEN\n        )\n      );\n    }\n\n    return client\n      .request({\n        api: \"graphQLApi\",\n        data: {\n          query: DELETE_PAYMENT_METHOD_MUTATION,\n          variables: {\n            input: {\n              singleUseTokenId: paymentMethodNonce,\n            },\n          },\n          operationName: \"DeletePaymentMethodFromSingleUseToken\",\n        },\n      })\n      .then(function () {\n        analytics.sendEvent(\n          client,\n          \"vault-manager.delete-payment-method.succeeded\"\n        );\n\n        // noop to prevent sending back the raw graphql data\n      })\n      .catch(function (error) {\n        var originalError = error.details.originalError;\n        var formattedError;\n\n        analytics.sendEvent(\n          client,\n          \"vault-manager.delete-payment-method.failed\"\n        );\n\n        if (\n          originalError[0] &&\n          originalError[0].extensions.errorClass === \"NOT_FOUND\"\n        ) {\n          formattedError = new BraintreeError({\n            type: errors.VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND.type,\n            code: errors.VAULT_MANAGER_PAYMENT_METHOD_NONCE_NOT_FOUND.code,\n            message:\n              \"A payment method for payment method nonce `\" +\n              paymentMethodNonce +\n              \"` could not be found.\",\n            details: {\n              originalError: originalError,\n            },\n          });\n        }\n\n        if (!formattedError) {\n          formattedError = new BraintreeError({\n            type: errors.VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR.type,\n            code: errors.VAULT_MANAGER_DELETE_PAYMENT_METHOD_UNKNOWN_ERROR.code,\n            message:\n              \"An unknown error occured when attempting to delete the payment method assocaited with the payment method nonce `\" +\n              paymentMethodNonce +\n              \"`.\",\n            details: {\n              originalError: originalError,\n            },\n          });\n        }\n\n        return Promise.reject(formattedError);\n      });\n  });\n};\n\nfunction formatPaymentMethodPayload(paymentMethod) {\n  var formattedPaymentMethod = {\n    nonce: paymentMethod.nonce,\n    default: paymentMethod.default,\n    details: paymentMethod.details,\n    hasSubscription: paymentMethod.hasSubscription,\n    type: paymentMethod.type,\n  };\n\n  if (paymentMethod.description) {\n    formattedPaymentMethod.description = paymentMethod.description;\n  }\n\n  if (paymentMethod.binData) {\n    formattedPaymentMethod.binData = paymentMethod.binData;\n  }\n\n  return formattedPaymentMethod;\n}\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/vault-manager.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * vaultManagerInstance.teardown();\n * @example <caption>With callback</caption>\n * vaultManagerInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nVaultManager.prototype.teardown = function () {\n  convertMethodsToError(this, methods(VaultManager.prototype));\n\n  return Promise.resolve();\n};\n\nmodule.exports = wrapPromise.wrapPrototype(VaultManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/vault-manager/vault-manager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/external/index.js":
/*!************************************************************!*\
  !*** ./node_modules/braintree-web/venmo/external/index.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\nvar __importDefault =\n  (this && this.__importDefault) ||\n  function (mod) {\n    return mod && mod.__esModule ? mod : { default: mod };\n  };\nvar venmo_desktop_1 = __importDefault(__webpack_require__(/*! ./venmo-desktop */ \"(ssr)/./node_modules/braintree-web/venmo/external/venmo-desktop.js\"));\nmodule.exports = function createVenmoDesktop(options) {\n  var instance = new venmo_desktop_1.default(options);\n  return instance.initialize();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9leHRlcm5hbC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBLHNDQUFzQyxtQkFBTyxDQUFDLDJGQUFpQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9leHRlcm5hbC9pbmRleC5qcz8xMDQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9XG4gICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fFxuICBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIG1vZCAmJiBtb2QuX19lc01vZHVsZSA/IG1vZCA6IHsgZGVmYXVsdDogbW9kIH07XG4gIH07XG52YXIgdmVubW9fZGVza3RvcF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3Zlbm1vLWRlc2t0b3BcIikpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVWZW5tb0Rlc2t0b3Aob3B0aW9ucykge1xuICB2YXIgaW5zdGFuY2UgPSBuZXcgdmVubW9fZGVza3RvcF8xLmRlZmF1bHQob3B0aW9ucyk7XG4gIHJldHVybiBpbnN0YW5jZS5pbml0aWFsaXplKCk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/external/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/external/queries.js":
/*!**************************************************************!*\
  !*** ./node_modules/braintree-web/venmo/external/queries.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VENMO_PAYMENT_CONTEXT_STATUS_QUERY =\n  exports.LEGACY_VENMO_PAYMENT_CONTEXT_STATUS_QUERY =\n  exports.UPDATE_PAYMENT_CONTEXT_QUERY =\n  exports.LEGACY_UPDATE_PAYMENT_CONTEXT_QUERY =\n  exports.CREATE_PAYMENT_CONTEXT_QUERY =\n  exports.LEGACY_CREATE_PAYMENT_CONTEXT_QUERY =\n    void 0;\nexports.LEGACY_CREATE_PAYMENT_CONTEXT_QUERY =\n  \"mutation CreateVenmoQRCodePaymentContext($input: CreateVenmoQRCodePaymentContextInput!) {\\n  createVenmoQRCodePaymentContext(input: $input) {\\n    clientMutationId\\n    venmoQRCodePaymentContext {\\n      id\\n      merchantId\\n      createdAt\\n      expiresAt\\n    }\\n  }\\n}\";\nexports.CREATE_PAYMENT_CONTEXT_QUERY =\n  \"mutation CreateVenmoPaymentContext($input: CreateVenmoPaymentContextInput!) {\\n  createVenmoPaymentContext(input: $input) {\\n    clientMutationId\\n    venmoPaymentContext {\\n      id\\n      merchantId\\n      createdAt\\n      expiresAt\\n    }\\n  }\\n}\";\nexports.LEGACY_UPDATE_PAYMENT_CONTEXT_QUERY =\n  \"mutation UpdateVenmoQRCodePaymentContext($input: UpdateVenmoQRCodePaymentContextInput!) {\\n  updateVenmoQRCodePaymentContext(input: $input) {\\n    clientMutationId\\n  }\\n}\";\nexports.UPDATE_PAYMENT_CONTEXT_QUERY =\n  \"mutation UpdateVenmoPaymentContextStatus($input: UpdateVenmoPaymentContextStatusInput!) {\\n  updateVenmoPaymentContextStatus(input: $input) {\\n    clientMutationId\\n  }\\n}\";\nexports.LEGACY_VENMO_PAYMENT_CONTEXT_STATUS_QUERY =\n  \"query PaymentContext($id: ID!) {\\n  node(id: $id) {\\n    ... on VenmoQRCodePaymentContext {\\n      status\\n      paymentMethodId\\n      userName\\n    }\\n  }\\n}\";\nexports.VENMO_PAYMENT_CONTEXT_STATUS_QUERY =\n  \"query PaymentContext($id: ID!) {\\n  node(id: $id) {\\n    ... on VenmoPaymentContext {\\n      status\\n      paymentMethodId\\n      userName\\n      payerInfo {\\n        firstName\\n        lastName\\n        phoneNumber\\n        email\\n        externalId\\n        userName\\n        billingAddress {\\n          fullName\\n          addressLine1\\n          addressLine2\\n          adminArea1\\n          adminArea2\\n          postalCode\\n          countryCode\\n        }\\n        shippingAddress {\\n          fullName\\n          addressLine1\\n          addressLine2\\n          adminArea1\\n          adminArea2\\n          postalCode\\n          countryCode\\n        }\\n      }\\n    }\\n  }\\n}\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9leHRlcm5hbC9xdWVyaWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBDQUEwQztBQUMxQyxFQUFFLGlEQUFpRDtBQUNuRCxFQUFFLG9DQUFvQztBQUN0QyxFQUFFLDJDQUEyQztBQUM3QyxFQUFFLG9DQUFvQztBQUN0QyxFQUFFLDJDQUEyQztBQUM3QztBQUNBLDJDQUEyQztBQUMzQyw0RkFBNEYsb0RBQW9ELHVEQUF1RCxxRUFBcUUsS0FBSyxHQUFHO0FBQ3BSLG9DQUFvQztBQUNwQyxnRkFBZ0YsOENBQThDLGlEQUFpRCxxRUFBcUUsS0FBSyxHQUFHO0FBQzVQLDJDQUEyQztBQUMzQyw0RkFBNEYsb0RBQW9ELDJCQUEyQixHQUFHO0FBQzlLLG9DQUFvQztBQUNwQyw0RkFBNEYsb0RBQW9ELDJCQUEyQixHQUFHO0FBQzlLLGlEQUFpRDtBQUNqRCxtQ0FBbUMsbUJBQW1CLHdDQUF3Qyw0REFBNEQsS0FBSyxHQUFHO0FBQ2xLLDBDQUEwQztBQUMxQyxtQ0FBbUMsbUJBQW1CLGtDQUFrQyx3RUFBd0UseUlBQXlJLHdLQUF3SywyQkFBMkIsd0tBQXdLLFNBQVMsT0FBTyxLQUFLLEdBQUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvdmVubW8vZXh0ZXJuYWwvcXVlcmllcy5qcz83ZDlkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WRU5NT19QQVlNRU5UX0NPTlRFWFRfU1RBVFVTX1FVRVJZID1cbiAgZXhwb3J0cy5MRUdBQ1lfVkVOTU9fUEFZTUVOVF9DT05URVhUX1NUQVRVU19RVUVSWSA9XG4gIGV4cG9ydHMuVVBEQVRFX1BBWU1FTlRfQ09OVEVYVF9RVUVSWSA9XG4gIGV4cG9ydHMuTEVHQUNZX1VQREFURV9QQVlNRU5UX0NPTlRFWFRfUVVFUlkgPVxuICBleHBvcnRzLkNSRUFURV9QQVlNRU5UX0NPTlRFWFRfUVVFUlkgPVxuICBleHBvcnRzLkxFR0FDWV9DUkVBVEVfUEFZTUVOVF9DT05URVhUX1FVRVJZID1cbiAgICB2b2lkIDA7XG5leHBvcnRzLkxFR0FDWV9DUkVBVEVfUEFZTUVOVF9DT05URVhUX1FVRVJZID1cbiAgXCJtdXRhdGlvbiBDcmVhdGVWZW5tb1FSQ29kZVBheW1lbnRDb250ZXh0KCRpbnB1dDogQ3JlYXRlVmVubW9RUkNvZGVQYXltZW50Q29udGV4dElucHV0ISkge1xcbiAgY3JlYXRlVmVubW9RUkNvZGVQYXltZW50Q29udGV4dChpbnB1dDogJGlucHV0KSB7XFxuICAgIGNsaWVudE11dGF0aW9uSWRcXG4gICAgdmVubW9RUkNvZGVQYXltZW50Q29udGV4dCB7XFxuICAgICAgaWRcXG4gICAgICBtZXJjaGFudElkXFxuICAgICAgY3JlYXRlZEF0XFxuICAgICAgZXhwaXJlc0F0XFxuICAgIH1cXG4gIH1cXG59XCI7XG5leHBvcnRzLkNSRUFURV9QQVlNRU5UX0NPTlRFWFRfUVVFUlkgPVxuICBcIm11dGF0aW9uIENyZWF0ZVZlbm1vUGF5bWVudENvbnRleHQoJGlucHV0OiBDcmVhdGVWZW5tb1BheW1lbnRDb250ZXh0SW5wdXQhKSB7XFxuICBjcmVhdGVWZW5tb1BheW1lbnRDb250ZXh0KGlucHV0OiAkaW5wdXQpIHtcXG4gICAgY2xpZW50TXV0YXRpb25JZFxcbiAgICB2ZW5tb1BheW1lbnRDb250ZXh0IHtcXG4gICAgICBpZFxcbiAgICAgIG1lcmNoYW50SWRcXG4gICAgICBjcmVhdGVkQXRcXG4gICAgICBleHBpcmVzQXRcXG4gICAgfVxcbiAgfVxcbn1cIjtcbmV4cG9ydHMuTEVHQUNZX1VQREFURV9QQVlNRU5UX0NPTlRFWFRfUVVFUlkgPVxuICBcIm11dGF0aW9uIFVwZGF0ZVZlbm1vUVJDb2RlUGF5bWVudENvbnRleHQoJGlucHV0OiBVcGRhdGVWZW5tb1FSQ29kZVBheW1lbnRDb250ZXh0SW5wdXQhKSB7XFxuICB1cGRhdGVWZW5tb1FSQ29kZVBheW1lbnRDb250ZXh0KGlucHV0OiAkaW5wdXQpIHtcXG4gICAgY2xpZW50TXV0YXRpb25JZFxcbiAgfVxcbn1cIjtcbmV4cG9ydHMuVVBEQVRFX1BBWU1FTlRfQ09OVEVYVF9RVUVSWSA9XG4gIFwibXV0YXRpb24gVXBkYXRlVmVubW9QYXltZW50Q29udGV4dFN0YXR1cygkaW5wdXQ6IFVwZGF0ZVZlbm1vUGF5bWVudENvbnRleHRTdGF0dXNJbnB1dCEpIHtcXG4gIHVwZGF0ZVZlbm1vUGF5bWVudENvbnRleHRTdGF0dXMoaW5wdXQ6ICRpbnB1dCkge1xcbiAgICBjbGllbnRNdXRhdGlvbklkXFxuICB9XFxufVwiO1xuZXhwb3J0cy5MRUdBQ1lfVkVOTU9fUEFZTUVOVF9DT05URVhUX1NUQVRVU19RVUVSWSA9XG4gIFwicXVlcnkgUGF5bWVudENvbnRleHQoJGlkOiBJRCEpIHtcXG4gIG5vZGUoaWQ6ICRpZCkge1xcbiAgICAuLi4gb24gVmVubW9RUkNvZGVQYXltZW50Q29udGV4dCB7XFxuICAgICAgc3RhdHVzXFxuICAgICAgcGF5bWVudE1ldGhvZElkXFxuICAgICAgdXNlck5hbWVcXG4gICAgfVxcbiAgfVxcbn1cIjtcbmV4cG9ydHMuVkVOTU9fUEFZTUVOVF9DT05URVhUX1NUQVRVU19RVUVSWSA9XG4gIFwicXVlcnkgUGF5bWVudENvbnRleHQoJGlkOiBJRCEpIHtcXG4gIG5vZGUoaWQ6ICRpZCkge1xcbiAgICAuLi4gb24gVmVubW9QYXltZW50Q29udGV4dCB7XFxuICAgICAgc3RhdHVzXFxuICAgICAgcGF5bWVudE1ldGhvZElkXFxuICAgICAgdXNlck5hbWVcXG4gICAgICBwYXllckluZm8ge1xcbiAgICAgICAgZmlyc3ROYW1lXFxuICAgICAgICBsYXN0TmFtZVxcbiAgICAgICAgcGhvbmVOdW1iZXJcXG4gICAgICAgIGVtYWlsXFxuICAgICAgICBleHRlcm5hbElkXFxuICAgICAgICB1c2VyTmFtZVxcbiAgICAgICAgYmlsbGluZ0FkZHJlc3Mge1xcbiAgICAgICAgICBmdWxsTmFtZVxcbiAgICAgICAgICBhZGRyZXNzTGluZTFcXG4gICAgICAgICAgYWRkcmVzc0xpbmUyXFxuICAgICAgICAgIGFkbWluQXJlYTFcXG4gICAgICAgICAgYWRtaW5BcmVhMlxcbiAgICAgICAgICBwb3N0YWxDb2RlXFxuICAgICAgICAgIGNvdW50cnlDb2RlXFxuICAgICAgICB9XFxuICAgICAgICBzaGlwcGluZ0FkZHJlc3Mge1xcbiAgICAgICAgICBmdWxsTmFtZVxcbiAgICAgICAgICBhZGRyZXNzTGluZTFcXG4gICAgICAgICAgYWRkcmVzc0xpbmUyXFxuICAgICAgICAgIGFkbWluQXJlYTFcXG4gICAgICAgICAgYWRtaW5BcmVhMlxcbiAgICAgICAgICBwb3N0YWxDb2RlXFxuICAgICAgICAgIGNvdW50cnlDb2RlXFxuICAgICAgICB9XFxuICAgICAgfVxcbiAgICB9XFxuICB9XFxufVwiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/external/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/external/venmo-desktop.js":
/*!********************************************************************!*\
  !*** ./node_modules/braintree-web/venmo/external/venmo-desktop.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __assign =\n  (this && this.__assign) ||\n  function () {\n    __assign =\n      Object.assign ||\n      function (t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n      };\n    return __assign.apply(this, arguments);\n  };\nvar __importDefault =\n  (this && this.__importDefault) ||\n  function (mod) {\n    return mod && mod.__esModule ? mod : { default: mod };\n  };\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar framebus_1 = __importDefault(__webpack_require__(/*! framebus */ \"(ssr)/./node_modules/framebus/dist/index.js\"));\nvar iframer_1 = __importDefault(__webpack_require__(/*! @braintree/iframer */ \"(ssr)/./node_modules/@braintree/iframer/dist/index.js\"));\nvar uuid_1 = __importDefault(__webpack_require__(/*! @braintree/uuid */ \"(ssr)/./node_modules/@braintree/uuid/index.js\"));\nvar events_1 = __webpack_require__(/*! ../shared/events */ \"(ssr)/./node_modules/braintree-web/venmo/shared/events.js\");\nvar queries_1 = __webpack_require__(/*! ./queries */ \"(ssr)/./node_modules/braintree-web/venmo/external/queries.js\");\nvar VENMO_DESKTOP_POLLING_INTERVAL = 1000; // 1 second\nvar VISUAL_DELAY_BEFORE_SIGNALLING_COMPLETION = 2000; // 2 seconds\nvar VenmoDesktop = /** @class */ (function () {\n  function VenmoDesktop(options) {\n    this.isHidden = true;\n    this.env = options.environment;\n    this.id = uuid_1.default();\n    this.profileId = options.profileId;\n    this.displayName = options.displayName;\n    this.paymentMethodUsage = options.paymentMethodUsage;\n    this.shouldUseLegacyQRCodeMutation = !this.paymentMethodUsage;\n    var frameUrl = options.url + \"#\" + this.env + \"_\" + this.id;\n    this.bus = new framebus_1.default({\n      channel: this.id,\n      verifyDomain: options.verifyDomain,\n      targetFrames: [],\n    });\n    this.apiRequest = options.apiRequest;\n    this.sendEvent = options.sendEvent;\n    this.Promise = options.Promise;\n    this.alertBox = document.createElement(\"div\");\n    this.alertBox.setAttribute(\"data-venmo-desktop-id\", this.id);\n    this.alertBox.setAttribute(\"role\", \"alert\");\n    this.alertBox.style.position = \"fixed\";\n    this.alertBox.style.display = \"none\";\n    this.alertBox.style.height = \"1px\";\n    this.alertBox.style.width = \"1px\";\n    this.alertBox.style.overflow = \"hidden\";\n    this.alertBox.style.zIndex = \"0\";\n    this.iframe = iframer_1.default({\n      src: frameUrl,\n      name: \"venmo-desktop-iframe\",\n      style: {\n        display: \"none\",\n        position: \"fixed\",\n        top: \"0\",\n        bottom: \"0\",\n        right: \"0\",\n        left: \"0\",\n        height: \"100%\",\n        width: \"100%\",\n        zIndex: \"9999999\",\n      },\n      title: \"Venmo Desktop\",\n    });\n    this.bus.addTargetFrame(this.iframe);\n  }\n  VenmoDesktop.prototype.initialize = function () {\n    var _this = this;\n    return new this.Promise(function (resolve) {\n      _this.bus.on(events_1.VENMO_DESKTOP_IFRAME_READY, function () {\n        resolve(_this);\n      });\n      _this.bus.on(events_1.VENMO_DESKTOP_REQUEST_NEW_QR_CODE, function () {\n        _this.sendEvent(\"venmo.tokenize.desktop.restarted-from-error-view\");\n        _this.startPolling();\n      });\n      document.body.appendChild(_this.iframe);\n      document.body.appendChild(_this.alertBox);\n    });\n  };\n  VenmoDesktop.prototype.launchDesktopFlow = function () {\n    var _this = this;\n    this.isHidden = false;\n    var promise = new this.Promise(function (resolve, reject) {\n      _this.launchDesktopPromiseRejectFunction = reject;\n      var removeListeners = function () {\n        /* eslint-disable @typescript-eslint/no-use-before-define */\n        _this.bus.off(\n          events_1.VENMO_DESKTOP_CUSTOMER_CANCELED,\n          customerCancelledHandler\n        );\n        _this.bus.off(\n          events_1.VENMO_DESKTOP_UNKNOWN_ERROR,\n          unknownErrorHandler\n        );\n        /* eslint-enable @typescript-eslint/no-use-before-define */\n      };\n      var unknownErrorHandler = function (err) {\n        removeListeners();\n        _this.sendEvent(\"venmo.tokenize.desktop.unknown-error\");\n        reject({\n          allowUIToHandleError: false,\n          reason: \"UNKNOWN_ERROR\",\n          err: err,\n        });\n      };\n      var customerCancelledHandler = function () {\n        removeListeners();\n        _this.updateVenmoDesktopPaymentContext(\"CANCELED\");\n        _this.sendEvent(\n          \"venmo.tokenize.desktop.status-change.canceled-from-modal\"\n        );\n        reject({\n          allowUIToHandleError: false,\n          reason: \"CUSTOMER_CANCELED\",\n        });\n      };\n      _this.completedHandler = function (payload) {\n        removeListeners();\n        resolve(payload);\n      };\n      _this.bus.on(\n        events_1.VENMO_DESKTOP_CUSTOMER_CANCELED,\n        customerCancelledHandler\n      );\n      _this.bus.on(events_1.VENMO_DESKTOP_UNKNOWN_ERROR, unknownErrorHandler);\n    });\n    this.iframe.style.display = \"block\";\n    this.setAlert(\"Generating a QR code, get your Venmo app ready\");\n    this.iframe.focus();\n    this.startPolling();\n    return promise\n      .then(function (result) {\n        delete _this.venmoContextId;\n        delete _this.launchDesktopPromiseRejectFunction;\n        return result;\n      })\n      .catch(function (err) {\n        delete _this.venmoContextId;\n        delete _this.launchDesktopPromiseRejectFunction;\n        return _this.Promise.reject(err);\n      });\n  };\n  VenmoDesktop.prototype.triggerCompleted = function (result) {\n    var _this = this;\n    if (this.isHidden) {\n      return;\n    }\n    setTimeout(function () {\n      if (_this.completedHandler) {\n        _this.completedHandler(result);\n      }\n      delete _this.completedHandler;\n    }, VISUAL_DELAY_BEFORE_SIGNALLING_COMPLETION);\n  };\n  VenmoDesktop.prototype.triggerRejected = function (err) {\n    if (this.launchDesktopPromiseRejectFunction) {\n      this.launchDesktopPromiseRejectFunction(err);\n    }\n  };\n  VenmoDesktop.prototype.hideDesktopFlow = function () {\n    this.setAlert(\"\");\n    this.iframe.style.display = \"none\";\n    this.bus.emit(events_1.VENMO_DESKTOP_CLOSED_FROM_PARENT);\n    this.isHidden = true;\n  };\n  VenmoDesktop.prototype.displayError = function (message) {\n    if (this.isHidden) {\n      return;\n    }\n    this.bus.emit(events_1.VENMO_DESKTOP_DISPLAY_ERROR, {\n      message: message,\n    });\n    this.setAlert(message);\n  };\n  VenmoDesktop.prototype.displayQRCode = function (id, merchantId) {\n    if (this.isHidden) {\n      return;\n    }\n    this.bus.emit(events_1.VENMO_DESKTOP_DISPLAY_QR_CODE, {\n      id: id,\n      merchantId: merchantId,\n    });\n    this.setAlert(\"To scan the QR code, open your Venmo app\");\n  };\n  VenmoDesktop.prototype.authorize = function () {\n    if (this.isHidden) {\n      return;\n    }\n    this.bus.emit(events_1.VENMO_DESKTOP_AUTHORIZE);\n    this.setAlert(\"Venmo account authorized\");\n  };\n  VenmoDesktop.prototype.authorizing = function () {\n    if (this.isHidden) {\n      return;\n    }\n    this.bus.emit(events_1.VENMO_DESKTOP_AUTHORIZING);\n    this.setAlert(\"Authorize on your Venmo app\");\n  };\n  VenmoDesktop.prototype.startPolling = function () {\n    var _this = this;\n    return this.createVenmoDesktopPaymentContext()\n      .then(function (result) {\n        var expiresIn =\n          new Date(result.expiresAt).getTime() -\n          new Date(result.createdAt).getTime();\n        var expiredTime = Date.now() + expiresIn;\n        _this.displayQRCode(result.id, result.merchantId);\n        return _this.pollForStatusChange(result.status, expiredTime);\n      })\n      .then(function (result) {\n        if (!result) {\n          return;\n        }\n        // since we are manually adding a prepended @ sign\n        // we want to make sure that the username does not\n        // start giving us the @ sign up front in the future\n        var username = result.userName || \"\";\n        username = \"@\" + username.replace(\"@\", \"\");\n        _this.triggerCompleted({\n          paymentMethodNonce: result.paymentMethodId,\n          username: username,\n          payerInfo: result.payerInfo,\n          id: _this.venmoContextId || \"\",\n        });\n      })\n      .catch(function (err) {\n        if (err.allowUIToHandleError) {\n          // noop here and let the UI handle the customer error\n          return;\n        }\n        _this.sendEvent(\"venmo.tokenize.desktop.unhandled-error\");\n        _this.triggerRejected(err);\n      });\n  };\n  VenmoDesktop.prototype.pollForStatusChange = function (status, expiredTime) {\n    var _this = this;\n    if (!this.venmoContextId) {\n      return this.Promise.resolve();\n    }\n    if (Date.now() > expiredTime) {\n      return this.updateVenmoDesktopPaymentContext(\"EXPIRED\").then(function () {\n        _this.displayError(\"Something went wrong\");\n        _this.sendEvent(\"venmo.tokenize.desktop.status-change.sdk-timeout\");\n        return _this.Promise.reject({\n          allowUIToHandleError: true,\n          reason: \"TIMEOUT\",\n        });\n      });\n    }\n    return this.lookupVenmoDesktopPaymentContext().then(function (response) {\n      if (!_this.venmoContextId || !response) {\n        return _this.Promise.resolve();\n      }\n      var newStatus = response.status;\n      if (newStatus !== status) {\n        status = newStatus;\n        _this.sendEvent(\n          \"venmo.tokenize.desktop.status-change.\" + status.toLowerCase()\n        );\n        switch (status) {\n          case \"CREATED\":\n            // noop, no need to do anything here\n            // should never be able to get to this point\n            // but we'll keep it in to enumerate the statuses\n            break;\n          case \"EXPIRED\":\n          case \"FAILED\":\n          case \"CANCELED\":\n            var message =\n              status === \"CANCELED\"\n                ? \"The authorization was canceled\"\n                : \"Something went wrong\";\n            _this.displayError(message);\n            // these are all terminal states, so we end it here\n            return _this.Promise.reject({\n              allowUIToHandleError: true,\n              reason: status,\n            });\n          case \"SCANNED\":\n            _this.authorizing();\n            break;\n          case \"APPROVED\":\n            _this.authorize();\n            return _this.Promise.resolve(response);\n          default:\n          // any other statuses are irrelevant to the polling\n          // and can just be ignored\n        }\n      }\n      return new _this.Promise(function (resolve, reject) {\n        setTimeout(function () {\n          _this\n            .pollForStatusChange(status, expiredTime)\n            .then(resolve)\n            .catch(reject);\n        }, VENMO_DESKTOP_POLLING_INTERVAL);\n      });\n    });\n  };\n  VenmoDesktop.prototype.teardown = function () {\n    this.bus.teardown();\n    if (this.iframe.parentNode) {\n      this.iframe.parentNode.removeChild(this.iframe);\n    }\n    if (this.alertBox.parentNode) {\n      this.alertBox.parentNode.removeChild(this.alertBox);\n    }\n  };\n  VenmoDesktop.prototype.setAlert = function (message) {\n    this.alertBox.style.display = message ? \"block\" : \"none\";\n    this.alertBox.textContent = message;\n  };\n  VenmoDesktop.prototype.createPaymentContextFromGraphqlLegacyQRCodeMutation =\n    function (intent) {\n      return this.apiRequest(queries_1.LEGACY_CREATE_PAYMENT_CONTEXT_QUERY, {\n        input: {\n          environment: this.env,\n          intent: intent,\n        },\n      }).then(function (response) {\n        return response\n          .createVenmoQRCodePaymentContext.venmoQRCodePaymentContext;\n      });\n    };\n  VenmoDesktop.prototype.createPaymentContextFromGraphQL = function (intent) {\n    var input = {\n      intent: intent,\n      paymentMethodUsage: this.paymentMethodUsage,\n      customerClient: \"DESKTOP\",\n    };\n    if (this.profileId) {\n      input.merchantProfileId = this.profileId;\n    }\n    if (this.displayName) {\n      input.displayName = this.displayName;\n    }\n    return this.apiRequest(queries_1.CREATE_PAYMENT_CONTEXT_QUERY, {\n      input: input,\n    }).then(function (response) {\n      return response.createVenmoPaymentContext.venmoPaymentContext;\n    });\n  };\n  VenmoDesktop.prototype.createVenmoDesktopPaymentContext = function () {\n    var _this = this;\n    var contextPromise = this.shouldUseLegacyQRCodeMutation\n      ? this.createPaymentContextFromGraphqlLegacyQRCodeMutation(\"PAY_FROM_APP\")\n      : this.createPaymentContextFromGraphQL(\"PAY_FROM_APP\");\n    return contextPromise.then(function (context) {\n      _this.venmoContextId = context.id;\n      var merchantId = _this.profileId || context.merchantId;\n      return {\n        id: context.id,\n        status: context.status,\n        merchantId: merchantId,\n        createdAt: context.createdAt,\n        expiresAt: context.expiresAt,\n      };\n    });\n  };\n  VenmoDesktop.prototype.updateVenmoDesktopPaymentContext = function (\n    status,\n    additionalOptions\n  ) {\n    if (additionalOptions === void 0) {\n      additionalOptions = {};\n    }\n    if (!this.venmoContextId) {\n      return this.Promise.resolve();\n    }\n    var data = {\n      input: __assign(\n        { id: this.venmoContextId, status: status },\n        additionalOptions\n      ),\n    };\n    var query = this.shouldUseLegacyQRCodeMutation\n      ? queries_1.LEGACY_UPDATE_PAYMENT_CONTEXT_QUERY\n      : queries_1.UPDATE_PAYMENT_CONTEXT_QUERY;\n    return this.apiRequest(query, data).then(function () {\n      // noop so we can resolve without any data to match the type\n    });\n  };\n  VenmoDesktop.prototype.lookupVenmoDesktopPaymentContext = function () {\n    if (!this.venmoContextId) {\n      return this.Promise.resolve();\n    }\n    var query = this.shouldUseLegacyQRCodeMutation\n      ? queries_1.LEGACY_VENMO_PAYMENT_CONTEXT_STATUS_QUERY\n      : queries_1.VENMO_PAYMENT_CONTEXT_STATUS_QUERY;\n    return this.apiRequest(query, {\n      id: this.venmoContextId,\n    }).then(function (response) {\n      return response.node;\n    });\n  };\n  return VenmoDesktop;\n})();\nexports[\"default\"] = VenmoDesktop;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/external/venmo-desktop.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/index.js":
/*!***************************************************!*\
  !*** ./node_modules/braintree-web/venmo/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n/** @module braintree-web/venmo */\n\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar basicComponentVerification = __webpack_require__(/*! ../lib/basic-component-verification */ \"(ssr)/./node_modules/braintree-web/lib/basic-component-verification.js\");\nvar createDeferredClient = __webpack_require__(/*! ../lib/create-deferred-client */ \"(ssr)/./node_modules/braintree-web/lib/create-deferred-client.js\");\nvar createAssetsUrl = __webpack_require__(/*! ../lib/create-assets-url */ \"(ssr)/./node_modules/braintree-web/lib/create-assets-url.js\");\nvar errors = __webpack_require__(/*! ./shared/errors */ \"(ssr)/./node_modules/braintree-web/venmo/shared/errors.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar Venmo = __webpack_require__(/*! ./venmo */ \"(ssr)/./node_modules/braintree-web/venmo/venmo.js\");\nvar supportsVenmo = __webpack_require__(/*! ./shared/supports-venmo */ \"(ssr)/./node_modules/braintree-web/venmo/shared/supports-venmo.js\");\nvar VERSION = \"3.99.0\";\n\n/**\n * @typedef {object} Venmo~lineItem\n * @property {number} quantity Number of units of the item purchased. This value must be a whole number and can't be negative or zero.\n * @property {string} unitAmount Per-unit price of the item. Can include up to 2 decimal places. This value can't be negative or zero.\n * @property {string} name Item name. Maximum 127 characters.\n * @property {string} kind Indicates whether the line item is a debit (sale) or credit (refund) to the customer. Accepted values: `debit` and `credit`.\n * @property {?string} unitTaxAmount Per-unit tax price of the item. Can include up to 2 decimal places. This value can't be negative or zero.\n * @property {?string} description Item description. Maximum 127 characters.\n * @property {?string} productCode Product or UPC code for the item. Maximum 127 characters.\n * @property {?string} url The URL to product information.\n */\n\n/**\n * @static\n * @function create\n * @param {object} options Creation options:\n * @param {Client} [options.client] A {@link Client} instance.\n * @param {string} [options.authorization] A tokenizationKey or clientToken. Can be used in place of `options.client`.\n * @param {boolean} [options.allowNewBrowserTab=true] This should be set to false if your payment flow requires returning to the same tab, e.g. single page applications. Doing so causes {@link Venmo#isBrowserSupported|isBrowserSupported} to return true only for mobile web browsers that support returning from the Venmo app to the same tab.\n * @param {boolean} [options.allowWebviews=true] This should be set to false if your payment flow does not occur from within a webview that you control. Doing so causes {@link Venmo#isBrowserSupported|isBrowserSupported} to return true only for mobile web browsers that are not webviews.\n * @param {boolean} [options.ignoreHistoryChanges=false] When the Venmo app returns to the website, it will modify the hash of the url to include data about the tokenization. By default, the SDK will put the state of the hash back to where it was before the change was made. Pass `true` to handle the hash change instead of the SDK.\n * @param {string} [options.profileId] The Venmo profile ID to be used during payment authorization. Customers will see the business name and logo associated with this Venmo profile, and it will show up in the Venmo app as a \"Connected Merchant\". Venmo profile IDs can be found in the Braintree Control Panel. Omitting this value will use the default Venmo profile.\n * @param {string} [options.deepLinkReturnUrl] An override for the URL that the Venmo iOS app opens to return from an app switch.\n * @param {boolean} [options.requireManualReturn=false] When `true`, the customer will have to manually switch back to the browser/webview that is presenting Venmo to complete the payment.\n * @param {boolean} [options.useRedirectForIOS=false] Normally, the Venmo flow is launched using `window.open` and the Venmo app intercepts that call and opens the Venmo app instead. If the customer does not have the Venmo app installed, it opens the Venmo website in a new window and instructs the customer to install the app.\n \n * In iOS webviews and Safari View Controllers (a webview-like environment which is indistinguishable from Safari for JavaScript environments), this call to `window.open` will always fail to app switch to Venmo, resulting instead in a white screen. Because of this, an alternate approach is required to launch the Venmo flow.\n *\n * When `useRedirectForIOS` is `true` and the Venmo flow is started in an iOS environment, the Venmo flow will be started by setting `window.location.href` to the Venmo website (which will still be intercepted by the Venmo app and should be the same behavior as if `window.open` was called). However, if the customer does not have the Venmo app installed, the merchant page will instead be replaced with the Venmo website and the customer will need to use the browser's back button to return to the merchant's website. Ensure that your customer's checkout information will not be lost if they are navigated away from the website and return using the browser back button.\n *\n * Due to a bug in iOS's implementation of `window.open` in iOS webviews and Safari View Controllers, if `useRedirectForIOS` is not set to `true` and the flow is launched from an iOS webview or Safari View Controller, the customer will be presented with a blank screen, halting the flow and leaving the customer unable to return to the merchant's website. Setting `useRedirectForIOS` to `true` will allow the flow to continue, but the Venmo app will be unable to return back to the webview/Safari View Controller. It will instead open the merchant's site in a new window in the customer's browser, which means the merchant site must be able to process the Venmo payment. If the SDK is configured with `allowNewBrowserTab = false`, it is unlikely that the website is set up to process the Venmo payment from a new window.\n *\n * If processing the payment from a new window is not possible, use this flag in conjunction with `requireManualReturn` so that the customer may start the flow from a webview/Safari View Controller or their Safari browser and manually return to the place that originated the flow once the Venmo app has authorized the payment and instructed them to do so.\n * @param {string} [options.paymentMethodUsage] The intended usage for the Venmo payment method nonce. Possible options are:\n * * single_use - intended as a one time transaction\n * * multi_use - intended to be vaulted and used for multiple transactions\n * @param {string} [options.displayName] The business name that will be displayed in the Venmo app payment approval screen. Only applicable when used with `paymentMethodUsage` and used by merchants onboarded as PayFast channel partners.\n * @param {boolean} [options.allowDesktop] Used to support desktop users. When enabled, the default mode is to render a scannable QR-code customers scan with their phone's to approve via the mobile app.\n * @param {boolean} [options.allowDesktopWebLogin=false] When `true`, the customer will authorize payment via a window popup that allows them to sign in to their Venmo account. This is used explicitly for customers operating from desktop browsers wanting to avoid the QR Code flow.\n * @param {boolean} [options.mobileWebFallBack] Use this option when you want to use a web-login experience, such as if on mobile and the Venmo app isn't installed.\n * @param {boolean} [options.allowAndroidRecreation=true] This flag is for when your integration uses the [Android PopupBridge](https://github.com/braintree/popup-bridge-android). Setting this flag to false will avoid a page refresh when returning to your page after payment authorization. If not specified, it defaults to true and the Android activity will be recreated, resulting in a page refresh.\n * @param {boolean} [options.collectCustomerBillingAddress] When `true`, the customer's billing address will be collected and displayed on the Venmo paysheet (provided the Enriched Customer Data checkbox is also enabled for the merchant account).\n * @param {boolean} [options.collectCustomerShippingAddress] When `true`, the customer's shipping address will be collected and displayed on the Venmo paysheet (provided the Enriched Customer Data checkbox is also enabled for the merchant account).\n * @param {lineItem[]} [options.lineItems] The {@link Venmo~lineItem|line items} belonging to the transaction. It can include up to 249 line items.\n * @param {string} [options.subTotalAmount] The subtotal amount of the transaction, excluding taxes, discounts, and shipping.\n * @param {string} [options.discountAmount] The total discount amount applied on the transaction.\n * @param {string} [options.shippingAmount] Shipping amount to be charged for the transaction.\n * @param {string} [options.taxAmount] The total tax amount applied to the transaction. This value can't be negative or zero.\n * @param {string} [options.totalAmount] The grand total amount of the transaction.\n *\n * Note: This flow currently requires a full page redirect, which means to utilize this flow your page will need to be able to handle the checkout session across different pages.\n * @param {callback} [callback] The second argument, `data`, is the {@link Venmo} instance. If no callback is provided, `create` returns a promise that resolves with the {@link Venmo} instance.\n * @example\n * braintree.venmo.create({\n *   client: clientInstance\n * }).then(function (venmoInstance) {\n *   // venmoInstance is ready to be used.\n * }).catch(function (createErr) {\n *   console.error('Error creating Venmo instance', createErr);\n * });\n * @example <caption>Allow desktop flow to be used</caption>\n * braintree.venmo.create({\n *   client: clientInstance,\n *   allowDesktop: true\n * }).then(function (venmoInstance) {\n *   // venmoInstance is ready to be used.\n * }).catch(function (createErr) {\n *   console.error('Error creating Venmo instance', createErr);\n * });\n * @returns {(Promise|void)} Returns the Venmo instance.\n */\nfunction create(options) {\n  var name = \"Venmo\";\n\n  return basicComponentVerification\n    .verify({\n      name: name,\n      client: options.client,\n      authorization: options.authorization,\n    })\n    .then(function () {\n      var createPromise, instance;\n\n      if (options.profileId && typeof options.profileId !== \"string\") {\n        return Promise.reject(\n          new BraintreeError(errors.VENMO_INVALID_PROFILE_ID)\n        );\n      }\n\n      if (\n        options.deepLinkReturnUrl &&\n        typeof options.deepLinkReturnUrl !== \"string\"\n      ) {\n        return Promise.reject(\n          new BraintreeError(errors.VENMO_INVALID_DEEP_LINK_RETURN_URL)\n        );\n      }\n\n      createPromise = createDeferredClient\n        .create({\n          authorization: options.authorization,\n          client: options.client,\n          debug: options.debug,\n          assetsUrl: createAssetsUrl.create(options.authorization),\n          name: name,\n        })\n        .then(function (client) {\n          var configuration = client.getConfiguration();\n\n          options.client = client;\n\n          if (!configuration.gatewayConfiguration.payWithVenmo) {\n            return Promise.reject(new BraintreeError(errors.VENMO_NOT_ENABLED));\n          }\n\n          return client;\n        });\n\n      options.createPromise = createPromise;\n      instance = new Venmo(options);\n\n      analytics.sendEvent(createPromise, \"venmo.initialized\");\n\n      return createPromise.then(function () {\n        return instance;\n      });\n    });\n}\n\n/**\n * @static\n * @function isBrowserSupported\n * @param {object} [options] browser support options:\n * @param {boolean} [options.allowNewBrowserTab=true] This should be set to false if your payment flow requires returning to the same tab, e.g. single page applications.\n * @param {boolean} [options.allowWebviews=true] This should be set to false if your payment flow does not occur from within a webview that you control.\n * @example\n * if (braintree.venmo.isBrowserSupported()) {\n *   // set up Venmo\n * }\n * @example <caption>Explicitly require browser support returning to the same tab</caption>\n * if (braintree.venmo.isBrowserSupported({\n *   allowNewBrowserTab: false\n * })) {\n *   // set up Venmo\n * }\n * @example <caption>Explicitly set webviews as disallowed browsers</caption>\n * if (braintree.venmo.isBrowserSupported({\n *   allowWebviews: false\n * })) {\n *   // set up Venmo\n * }\n * @returns {boolean} Whether or not the browser supports Venmo.\n */\nfunction isBrowserSupported(options) {\n  return supportsVenmo.isBrowserSupported(options);\n}\n\nmodule.exports = {\n  create: wrapPromise(create),\n  isBrowserSupported: isBrowserSupported,\n  /**\n   * @description The current version of the SDK, i.e. `{@pkg version}`.\n   * @type {string}\n   */\n  VERSION: VERSION,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/shared/browser-detection.js":
/*!**********************************************************************!*\
  !*** ./node_modules/braintree-web/venmo/shared/browser-detection.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar isAndroid = __webpack_require__(/*! @braintree/browser-detection/is-android */ \"(ssr)/./node_modules/@braintree/browser-detection/is-android.js\");\nvar isChrome = __webpack_require__(/*! @braintree/browser-detection/is-chrome */ \"(ssr)/./node_modules/@braintree/browser-detection/is-chrome.js\");\nvar isIos = __webpack_require__(/*! @braintree/browser-detection/is-ios */ \"(ssr)/./node_modules/@braintree/browser-detection/is-ios.js\");\nvar isIosSafari = __webpack_require__(/*! @braintree/browser-detection/is-ios-safari */ \"(ssr)/./node_modules/@braintree/browser-detection/is-ios-safari.js\");\nvar isIosWebview = __webpack_require__(/*! @braintree/browser-detection/is-ios-webview */ \"(ssr)/./node_modules/@braintree/browser-detection/is-ios-webview.js\");\nvar isSamsung = __webpack_require__(/*! @braintree/browser-detection/is-samsung */ \"(ssr)/./node_modules/@braintree/browser-detection/is-samsung.js\");\n\nfunction isAndroidWebview() {\n  return (\n    isAndroid() && window.navigator.userAgent.toLowerCase().indexOf(\"wv\") > -1\n  );\n}\n\nfunction doesNotSupportWindowOpenInIos() {\n  if (!isIos()) {\n    return false;\n  }\n\n  return isIosWebview() || !isIosSafari();\n}\n\nfunction isFacebookOwnedBrowserOnAndroid() {\n  var ua = window.navigator.userAgent.toLowerCase();\n\n  // Huawei's Facebook useragent does not include Android\n  if (ua.indexOf(\"huawei\") > -1 && ua.indexOf(\"fban\") > -1) {\n    return true;\n  }\n\n  if (!isAndroid()) {\n    return false;\n  }\n\n  return ua.indexOf(\"fb_iab\") > -1 || ua.indexOf(\"instagram\") > -1;\n}\n\nfunction isIosChrome() {\n  return isIos() && isChrome();\n}\n\nmodule.exports = {\n  isAndroid: isAndroid,\n  isAndroidWebview: isAndroidWebview,\n  isChrome: isChrome,\n  isIos: isIos,\n  isIosChrome: isIosChrome,\n  isSamsung: isSamsung,\n  isIosSafari: isIosSafari,\n  isIosWebview: isIosWebview,\n  isFacebookOwnedBrowserOnAndroid: isFacebookOwnedBrowserOnAndroid,\n  doesNotSupportWindowOpenInIos: doesNotSupportWindowOpenInIos,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9zaGFyZWQvYnJvd3Nlci1kZXRlY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0JBQWdCLG1CQUFPLENBQUMsZ0hBQXlDO0FBQ2pFLGVBQWUsbUJBQU8sQ0FBQyw4R0FBd0M7QUFDL0QsWUFBWSxtQkFBTyxDQUFDLHdHQUFxQztBQUN6RCxrQkFBa0IsbUJBQU8sQ0FBQyxzSEFBNEM7QUFDdEUsbUJBQW1CLG1CQUFPLENBQUMsd0hBQTZDO0FBQ3hFLGdCQUFnQixtQkFBTyxDQUFDLGdIQUF5Qzs7QUFFakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9zaGFyZWQvYnJvd3Nlci1kZXRlY3Rpb24uanM/M2NiMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzQW5kcm9pZCA9IHJlcXVpcmUoXCJAYnJhaW50cmVlL2Jyb3dzZXItZGV0ZWN0aW9uL2lzLWFuZHJvaWRcIik7XG52YXIgaXNDaHJvbWUgPSByZXF1aXJlKFwiQGJyYWludHJlZS9icm93c2VyLWRldGVjdGlvbi9pcy1jaHJvbWVcIik7XG52YXIgaXNJb3MgPSByZXF1aXJlKFwiQGJyYWludHJlZS9icm93c2VyLWRldGVjdGlvbi9pcy1pb3NcIik7XG52YXIgaXNJb3NTYWZhcmkgPSByZXF1aXJlKFwiQGJyYWludHJlZS9icm93c2VyLWRldGVjdGlvbi9pcy1pb3Mtc2FmYXJpXCIpO1xudmFyIGlzSW9zV2VidmlldyA9IHJlcXVpcmUoXCJAYnJhaW50cmVlL2Jyb3dzZXItZGV0ZWN0aW9uL2lzLWlvcy13ZWJ2aWV3XCIpO1xudmFyIGlzU2Ftc3VuZyA9IHJlcXVpcmUoXCJAYnJhaW50cmVlL2Jyb3dzZXItZGV0ZWN0aW9uL2lzLXNhbXN1bmdcIik7XG5cbmZ1bmN0aW9uIGlzQW5kcm9pZFdlYnZpZXcoKSB7XG4gIHJldHVybiAoXG4gICAgaXNBbmRyb2lkKCkgJiYgd2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmRleE9mKFwid3ZcIikgPiAtMVxuICApO1xufVxuXG5mdW5jdGlvbiBkb2VzTm90U3VwcG9ydFdpbmRvd09wZW5JbklvcygpIHtcbiAgaWYgKCFpc0lvcygpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGlzSW9zV2VidmlldygpIHx8ICFpc0lvc1NhZmFyaSgpO1xufVxuXG5mdW5jdGlvbiBpc0ZhY2Vib29rT3duZWRCcm93c2VyT25BbmRyb2lkKCkge1xuICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpO1xuXG4gIC8vIEh1YXdlaSdzIEZhY2Vib29rIHVzZXJhZ2VudCBkb2VzIG5vdCBpbmNsdWRlIEFuZHJvaWRcbiAgaWYgKHVhLmluZGV4T2YoXCJodWF3ZWlcIikgPiAtMSAmJiB1YS5pbmRleE9mKFwiZmJhblwiKSA+IC0xKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAoIWlzQW5kcm9pZCgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHVhLmluZGV4T2YoXCJmYl9pYWJcIikgPiAtMSB8fCB1YS5pbmRleE9mKFwiaW5zdGFncmFtXCIpID4gLTE7XG59XG5cbmZ1bmN0aW9uIGlzSW9zQ2hyb21lKCkge1xuICByZXR1cm4gaXNJb3MoKSAmJiBpc0Nocm9tZSgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNBbmRyb2lkOiBpc0FuZHJvaWQsXG4gIGlzQW5kcm9pZFdlYnZpZXc6IGlzQW5kcm9pZFdlYnZpZXcsXG4gIGlzQ2hyb21lOiBpc0Nocm9tZSxcbiAgaXNJb3M6IGlzSW9zLFxuICBpc0lvc0Nocm9tZTogaXNJb3NDaHJvbWUsXG4gIGlzU2Ftc3VuZzogaXNTYW1zdW5nLFxuICBpc0lvc1NhZmFyaTogaXNJb3NTYWZhcmksXG4gIGlzSW9zV2VidmlldzogaXNJb3NXZWJ2aWV3LFxuICBpc0ZhY2Vib29rT3duZWRCcm93c2VyT25BbmRyb2lkOiBpc0ZhY2Vib29rT3duZWRCcm93c2VyT25BbmRyb2lkLFxuICBkb2VzTm90U3VwcG9ydFdpbmRvd09wZW5JbklvczogZG9lc05vdFN1cHBvcnRXaW5kb3dPcGVuSW5Jb3MsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/shared/browser-detection.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/shared/constants.js":
/*!**************************************************************!*\
  !*** ./node_modules/braintree-web/venmo/shared/constants.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Venmo shared constants\n * @typedef {object} Venmo~venmoConstants\n * @ignore\n * @property {string} VENMO_APP_OR_MOBILE_AUTH_URL A deep-linked url that will open the Venmo app if installed, or navigate to a Venmo web-login experience if the Venmo app is not present.\n * @property {string} VENMO_MOBILE_APP_AUTH_ONLY_URL A deep-linked url that leads to a Venmo dead-end page if the Venmo app is not installed (page asks customer to download the app).\n * @property {string} VENMO_WEB_LOGIN_URL A non-deeplinked url that leads to a Venmo login page. For use when explicitly wanting to avoid using the Venmo mobile app via a deep-linked url.\n */\nmodule.exports = {\n  DOCUMENT_VISIBILITY_CHANGE_EVENT_DELAY: 500,\n  DEFAULT_PROCESS_RESULTS_DELAY: 1000,\n  VENMO_APP_OR_MOBILE_AUTH_URL: \"https://venmo.com/go/checkout\",\n  VENMO_MOBILE_APP_AUTH_ONLY_URL: \"https://venmo.com/braintree/checkout\",\n  VENMO_WEB_LOGIN_URL: \"https://account.venmo.com/go/web\",\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9zaGFyZWQvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckI7QUFDQSxjQUFjLFFBQVE7QUFDdEIsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL3Zlbm1vL3NoYXJlZC9jb25zdGFudHMuanM/ODkxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBWZW5tbyBzaGFyZWQgY29uc3RhbnRzXG4gKiBAdHlwZWRlZiB7b2JqZWN0fSBWZW5tb352ZW5tb0NvbnN0YW50c1xuICogQGlnbm9yZVxuICogQHByb3BlcnR5IHtzdHJpbmd9IFZFTk1PX0FQUF9PUl9NT0JJTEVfQVVUSF9VUkwgQSBkZWVwLWxpbmtlZCB1cmwgdGhhdCB3aWxsIG9wZW4gdGhlIFZlbm1vIGFwcCBpZiBpbnN0YWxsZWQsIG9yIG5hdmlnYXRlIHRvIGEgVmVubW8gd2ViLWxvZ2luIGV4cGVyaWVuY2UgaWYgdGhlIFZlbm1vIGFwcCBpcyBub3QgcHJlc2VudC5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBWRU5NT19NT0JJTEVfQVBQX0FVVEhfT05MWV9VUkwgQSBkZWVwLWxpbmtlZCB1cmwgdGhhdCBsZWFkcyB0byBhIFZlbm1vIGRlYWQtZW5kIHBhZ2UgaWYgdGhlIFZlbm1vIGFwcCBpcyBub3QgaW5zdGFsbGVkIChwYWdlIGFza3MgY3VzdG9tZXIgdG8gZG93bmxvYWQgdGhlIGFwcCkuXG4gKiBAcHJvcGVydHkge3N0cmluZ30gVkVOTU9fV0VCX0xPR0lOX1VSTCBBIG5vbi1kZWVwbGlua2VkIHVybCB0aGF0IGxlYWRzIHRvIGEgVmVubW8gbG9naW4gcGFnZS4gRm9yIHVzZSB3aGVuIGV4cGxpY2l0bHkgd2FudGluZyB0byBhdm9pZCB1c2luZyB0aGUgVmVubW8gbW9iaWxlIGFwcCB2aWEgYSBkZWVwLWxpbmtlZCB1cmwuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0ge1xuICBET0NVTUVOVF9WSVNJQklMSVRZX0NIQU5HRV9FVkVOVF9ERUxBWTogNTAwLFxuICBERUZBVUxUX1BST0NFU1NfUkVTVUxUU19ERUxBWTogMTAwMCxcbiAgVkVOTU9fQVBQX09SX01PQklMRV9BVVRIX1VSTDogXCJodHRwczovL3Zlbm1vLmNvbS9nby9jaGVja291dFwiLFxuICBWRU5NT19NT0JJTEVfQVBQX0FVVEhfT05MWV9VUkw6IFwiaHR0cHM6Ly92ZW5tby5jb20vYnJhaW50cmVlL2NoZWNrb3V0XCIsXG4gIFZFTk1PX1dFQl9MT0dJTl9VUkw6IFwiaHR0cHM6Ly9hY2NvdW50LnZlbm1vLmNvbS9nby93ZWJcIixcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/shared/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/shared/errors.js":
/*!***********************************************************!*\
  !*** ./node_modules/braintree-web/venmo/shared/errors.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/**\n * @name BraintreeError.Venmo - Creation Error Codes\n * @description Errors that occur when [creating the Venmo component](./module-braintree-web_venmo.html#.create).\n * @property {MERCHANT} VENMO_NOT_ENABLED Occurs when Venmo is not enabled on the Braintree control panel.\n * @property {MERCHANT} VENMO_INVALID_PROFILE_ID Occurs when Venmo is initialized with a profile id, but it is invalid.\n * @property {UNKNOWN} VENMO_MOBILE_POLLING_SETUP_FAILED __Deprecated__ No longer returned. Use `VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED` instead.\n * @property {UNKNOWN} VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED Occurs when the request to set up a Venmo Payment Context object fails.\n */\n\n/**\n * @name BraintreeError.Venmo - tokenize Error Codes\n * @description Errors that occur when using the [`tokenize` method](./Venmo.html#tokenize).\n * @property {CUSTOMER} VENMO_APP_CANCELED Occurs when customer cancels flow from the Venmo app.\n * @property {UNKNOWN} VENMO_APP_FAILED Occurs when tokenization fails.\n * @property {CUSTOMER} VENMO_CANCELED Occurs when customer cancels the flow or Venmo app is not available.\n * @property {CUSTOMER} VENMO_CUSTOMER_CANCELED Occurs when customer cancels the flow.\n * @property {CUSTOMER} VENMO_DESKTOP_CANCELED Occurs when customer cancels the Venmo Desktop flow by closing the modal.\n * @property {UNKNOWN} VENMO_DESKTOP_UNKNOWN_ERROR Occurs when an unknown error causes the Venmo Desktop flow to fail.\n * @property {UNKNOWN} VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR Occurs when an unknown network error causes the mobile polling process to fail.\n * @property {CUSTOMER} VENMO_MOBILE_POLLING_TOKENIZATION_EXPIRED Occurs when the polling has expired and the payment cannot be completed.\n * @property {CUSTOMER} VENMO_MOBILE_POLLING_TOKENIZATION_CANCELED Occurs when the polling operation is canceled by the customer.\n * @property {CUSTOMER} VENMO_MOBILE_POLLING_TOKENIZATION_TIMEOUT Occurs when customer takes too long to complete payment.\n * @property {UNKNOWN} VENMO_MOBILE_POLLING_TOKENIZATION_FAILED Occurs if there is an unknown error during the mobile polling process.\n * @property {NETWORK} VENMO_NETWORK_ERROR Occurs when a network error causes a request to fail.\n * @property {MERCHANT} VENMO_TOKENIZATION_CANCELED_BY_MERCHANT Occurs when `cancelTokenization` is called while tokenization is in progress.\n * @property {UNKNOWN} VENMO_TOKENIZATION_FAILED Occurs when there is an unknown error during the web login experience.\n * @property {MERCHANT} VENMO_TOKENIZATION_REQUEST_ACTIVE Occurs when `tokenize` is called when the flow is already in progress.\n * @property {MERCHANT} VENMO_TOKENIZATION_REQUEST_NOT_ACTIVE Occurs when `cancelTokenization` is called when the flow is not in progress.\n * @property {MERCHANT} VENMO_ECD_DISABLED Occurs when the merchant tries to access customer details without enabling Enriched Customer Data.\n */\n\nvar BraintreeError = __webpack_require__(/*! ../../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\n\nmodule.exports = {\n  VENMO_NOT_ENABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_NOT_ENABLED\",\n    message: \"Venmo is not enabled for this merchant.\",\n  },\n  VENMO_TOKENIZATION_REQUEST_ACTIVE: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_TOKENIZATION_REQUEST_ACTIVE\",\n    message: \"Another tokenization request is active.\",\n  },\n  VENMO_TOKENIZATION_REQUEST_NOT_ACTIVE: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_TOKENIZATION_REQUEST_NOT_ACTIVE\",\n    message: \"No tokenization in progress.\",\n  },\n  VENMO_APP_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_APP_FAILED\",\n    message: \"Venmo app encountered a problem.\",\n  },\n  VENMO_APP_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_APP_CANCELED\",\n    message: \"Venmo app authorization was canceled.\",\n  },\n  VENMO_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_CANCELED\",\n    message:\n      \"User canceled Venmo authorization, or Venmo app is not available.\",\n  },\n  VENMO_CUSTOMER_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_CUSTOMER_CANCELED\",\n    message: \"User canceled Venmo authorization.\",\n  },\n  VENMO_NETWORK_ERROR: {\n    type: BraintreeError.types.NETWORK,\n    code: \"VENMO_NETWORK_ERROR\",\n    message: \"Something went wrong making the request\",\n  },\n  VENMO_DESKTOP_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_DESKTOP_CANCELED\",\n    message:\n      \"User canceled Venmo authorization by closing the Venmo Desktop modal.\",\n  },\n  VENMO_TOKENIZATION_CANCELED_BY_MERCHANT: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_TOKENIZATION_CANCELED_BY_MERCHANT\",\n    message: \"The Venmo tokenization was canceled by the merchant.\",\n  },\n  VENMO_DESKTOP_UNKNOWN_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_DESKTOP_UNKNOWN_ERROR\",\n    message: \"Something went wrong with the Venmo Desktop flow.\",\n  },\n  VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED: {\n    type: BraintreeError.types.NETWORK,\n    code: \"VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED\",\n    message: \"Something went wrong creating the Venmo Payment Context.\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR\",\n    message: \"Something went wrong during mobile polling.\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_EXPIRED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_EXPIRED\",\n    message: \"The Venmo authorization request is expired.\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_CANCELED: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_CANCELED\",\n    message: \"The Venmo authorization was canceled\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_TIMEOUT: {\n    type: BraintreeError.types.CUSTOMER,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_TIMEOUT\",\n    message: \"Customer took too long to authorize Venmo payment.\",\n  },\n  VENMO_MOBILE_POLLING_TOKENIZATION_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_MOBILE_POLLING_TOKENIZATION_FAILED\",\n    message: \"The Venmo authorization failed.\",\n  },\n  VENMO_INVALID_PROFILE_ID: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_INVALID_PROFILE_ID\",\n    message: \"Venmo profile ID is invalid.\",\n  },\n  VENMO_INVALID_DEEP_LINK_RETURN_URL: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"VENMO_INVALID_DEEP_LINK_RETURN_URL\",\n    message: \"Venmo deep link return URL is invalid.\",\n  },\n  VENMO_TOKENIZATION_FAILED: {\n    type: BraintreeError.types.UNKNOWN,\n    code: \"VENMO_TOKENIZATION_FAILED\",\n    message: \"Venmo encountered a problem\",\n  },\n  VENMO_ECD_DISABLED: {\n    type: BraintreeError.types.MERCHANT,\n    code: \"ECD_DISABLED\",\n    message:\n      \"Cannot collect customer data when ECD is disabled. Enable this feature in the Control Panel to collect this data.\",\n  },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/shared/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/shared/events.js":
/*!***********************************************************!*\
  !*** ./node_modules/braintree-web/venmo/shared/events.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VENMO_DESKTOP_UNKNOWN_ERROR =\n  exports.VENMO_DESKTOP_REQUEST_NEW_QR_CODE =\n  exports.VENMO_DESKTOP_CLOSED_FROM_PARENT =\n  exports.VENMO_DESKTOP_IFRAME_READY =\n  exports.VENMO_DESKTOP_DISPLAY_QR_CODE =\n  exports.VENMO_DESKTOP_DISPLAY_ERROR =\n  exports.VENMO_DESKTOP_CUSTOMER_CANCELED =\n  exports.VENMO_DESKTOP_AUTHORIZING =\n  exports.VENMO_DESKTOP_AUTHORIZE =\n  exports.VENMO_DESKTOP_AUTHORIZATION_TIMED_OUT =\n    void 0;\nexports.VENMO_DESKTOP_AUTHORIZATION_TIMED_OUT =\n  \"VENMO_DESKTOP_AUTHORIZATION_TIMED_OUT\";\nexports.VENMO_DESKTOP_AUTHORIZE = \"VENMO_DESKTOP_AUTHORIZE\";\nexports.VENMO_DESKTOP_AUTHORIZING = \"VENMO_DESKTOP_AUTHORIZING\";\nexports.VENMO_DESKTOP_CUSTOMER_CANCELED = \"VENMO_DESKTOP_CUSTOMER_CANCELED\";\nexports.VENMO_DESKTOP_DISPLAY_ERROR = \"VENMO_DESKTOP_DISPLAY_ERROR\";\nexports.VENMO_DESKTOP_DISPLAY_QR_CODE = \"VENMO_DESKTOP_DISPLAY_QR_CODE\";\nexports.VENMO_DESKTOP_IFRAME_READY = \"VENMO_DESKTOP_IFRAME_READY\";\nexports.VENMO_DESKTOP_CLOSED_FROM_PARENT = \"VENMO_DESKTOP_CLOSED_FROM_PARENT\";\nexports.VENMO_DESKTOP_REQUEST_NEW_QR_CODE = \"VENMO_DESKTOP_REQUEST_NEW_QR_CODE\";\nexports.VENMO_DESKTOP_UNKNOWN_ERROR = \"VENMO_DESKTOP_UNKNOWN_ERROR\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9zaGFyZWQvZXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQyxFQUFFLHlDQUF5QztBQUMzQyxFQUFFLHdDQUF3QztBQUMxQyxFQUFFLGtDQUFrQztBQUNwQyxFQUFFLHFDQUFxQztBQUN2QyxFQUFFLG1DQUFtQztBQUNyQyxFQUFFLHVDQUF1QztBQUN6QyxFQUFFLGlDQUFpQztBQUNuQyxFQUFFLCtCQUErQjtBQUNqQyxFQUFFLDZDQUE2QztBQUMvQztBQUNBLDZDQUE2QztBQUM3QztBQUNBLCtCQUErQjtBQUMvQixpQ0FBaUM7QUFDakMsdUNBQXVDO0FBQ3ZDLG1DQUFtQztBQUNuQyxxQ0FBcUM7QUFDckMsa0NBQWtDO0FBQ2xDLHdDQUF3QztBQUN4Qyx5Q0FBeUM7QUFDekMsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL3Zlbm1vL3NoYXJlZC9ldmVudHMuanM/MDYyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVkVOTU9fREVTS1RPUF9VTktOT1dOX0VSUk9SID1cbiAgZXhwb3J0cy5WRU5NT19ERVNLVE9QX1JFUVVFU1RfTkVXX1FSX0NPREUgPVxuICBleHBvcnRzLlZFTk1PX0RFU0tUT1BfQ0xPU0VEX0ZST01fUEFSRU5UID1cbiAgZXhwb3J0cy5WRU5NT19ERVNLVE9QX0lGUkFNRV9SRUFEWSA9XG4gIGV4cG9ydHMuVkVOTU9fREVTS1RPUF9ESVNQTEFZX1FSX0NPREUgPVxuICBleHBvcnRzLlZFTk1PX0RFU0tUT1BfRElTUExBWV9FUlJPUiA9XG4gIGV4cG9ydHMuVkVOTU9fREVTS1RPUF9DVVNUT01FUl9DQU5DRUxFRCA9XG4gIGV4cG9ydHMuVkVOTU9fREVTS1RPUF9BVVRIT1JJWklORyA9XG4gIGV4cG9ydHMuVkVOTU9fREVTS1RPUF9BVVRIT1JJWkUgPVxuICBleHBvcnRzLlZFTk1PX0RFU0tUT1BfQVVUSE9SSVpBVElPTl9USU1FRF9PVVQgPVxuICAgIHZvaWQgMDtcbmV4cG9ydHMuVkVOTU9fREVTS1RPUF9BVVRIT1JJWkFUSU9OX1RJTUVEX09VVCA9XG4gIFwiVkVOTU9fREVTS1RPUF9BVVRIT1JJWkFUSU9OX1RJTUVEX09VVFwiO1xuZXhwb3J0cy5WRU5NT19ERVNLVE9QX0FVVEhPUklaRSA9IFwiVkVOTU9fREVTS1RPUF9BVVRIT1JJWkVcIjtcbmV4cG9ydHMuVkVOTU9fREVTS1RPUF9BVVRIT1JJWklORyA9IFwiVkVOTU9fREVTS1RPUF9BVVRIT1JJWklOR1wiO1xuZXhwb3J0cy5WRU5NT19ERVNLVE9QX0NVU1RPTUVSX0NBTkNFTEVEID0gXCJWRU5NT19ERVNLVE9QX0NVU1RPTUVSX0NBTkNFTEVEXCI7XG5leHBvcnRzLlZFTk1PX0RFU0tUT1BfRElTUExBWV9FUlJPUiA9IFwiVkVOTU9fREVTS1RPUF9ESVNQTEFZX0VSUk9SXCI7XG5leHBvcnRzLlZFTk1PX0RFU0tUT1BfRElTUExBWV9RUl9DT0RFID0gXCJWRU5NT19ERVNLVE9QX0RJU1BMQVlfUVJfQ09ERVwiO1xuZXhwb3J0cy5WRU5NT19ERVNLVE9QX0lGUkFNRV9SRUFEWSA9IFwiVkVOTU9fREVTS1RPUF9JRlJBTUVfUkVBRFlcIjtcbmV4cG9ydHMuVkVOTU9fREVTS1RPUF9DTE9TRURfRlJPTV9QQVJFTlQgPSBcIlZFTk1PX0RFU0tUT1BfQ0xPU0VEX0ZST01fUEFSRU5UXCI7XG5leHBvcnRzLlZFTk1PX0RFU0tUT1BfUkVRVUVTVF9ORVdfUVJfQ09ERSA9IFwiVkVOTU9fREVTS1RPUF9SRVFVRVNUX05FV19RUl9DT0RFXCI7XG5leHBvcnRzLlZFTk1PX0RFU0tUT1BfVU5LTk9XTl9FUlJPUiA9IFwiVkVOTU9fREVTS1RPUF9VTktOT1dOX0VSUk9SXCI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/shared/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/shared/get-venmo-url.js":
/*!******************************************************************!*\
  !*** ./node_modules/braintree-web/venmo/shared/get-venmo-url.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar venmoConstants = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/braintree-web/venmo/shared/constants.js\");\n\nfunction getVenmoUrl(options) {\n  if (options.useAllowDesktopWebLogin)\n    return venmoConstants.VENMO_WEB_LOGIN_URL;\n\n  if (options.mobileWebFallBack)\n    return venmoConstants.VENMO_APP_OR_MOBILE_AUTH_URL;\n\n  return venmoConstants.VENMO_MOBILE_APP_AUTH_ONLY_URL;\n}\n\nmodule.exports = getVenmoUrl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9zaGFyZWQvZ2V0LXZlbm1vLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLHFCQUFxQixtQkFBTyxDQUFDLGlGQUFhOztBQUUxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9icmFpbnRyZWUtd2ViL3Zlbm1vL3NoYXJlZC9nZXQtdmVubW8tdXJsLmpzP2JjMjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgdmVubW9Db25zdGFudHMgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG5cbmZ1bmN0aW9uIGdldFZlbm1vVXJsKG9wdGlvbnMpIHtcbiAgaWYgKG9wdGlvbnMudXNlQWxsb3dEZXNrdG9wV2ViTG9naW4pXG4gICAgcmV0dXJuIHZlbm1vQ29uc3RhbnRzLlZFTk1PX1dFQl9MT0dJTl9VUkw7XG5cbiAgaWYgKG9wdGlvbnMubW9iaWxlV2ViRmFsbEJhY2spXG4gICAgcmV0dXJuIHZlbm1vQ29uc3RhbnRzLlZFTk1PX0FQUF9PUl9NT0JJTEVfQVVUSF9VUkw7XG5cbiAgcmV0dXJuIHZlbm1vQ29uc3RhbnRzLlZFTk1PX01PQklMRV9BUFBfQVVUSF9PTkxZX1VSTDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBnZXRWZW5tb1VybDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/shared/get-venmo-url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/shared/supports-venmo.js":
/*!*******************************************************************!*\
  !*** ./node_modules/braintree-web/venmo/shared/supports-venmo.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar browserDetection = __webpack_require__(/*! ./browser-detection */ \"(ssr)/./node_modules/braintree-web/venmo/shared/browser-detection.js\");\nvar inIframe = __webpack_require__(/*! ../../lib/in-iframe */ \"(ssr)/./node_modules/braintree-web/lib/in-iframe.js\");\n\nfunction isBrowserSupported(options) {\n  var isKnownUnsupportedMobileBrowser,\n    merchantAllowsDesktopBrowsers,\n    merchantAllowsIosChrome,\n    merchantAllowsReturningToNewBrowserTab,\n    merchantAllowsWebviews;\n  var isAndroid = browserDetection.isAndroid();\n  var isMobileDevice = isAndroid || browserDetection.isIos();\n  var isAndroidChrome = isAndroid && browserDetection.isChrome();\n  var isMobileDeviceThatSupportsReturnToSameTab =\n    browserDetection.isIosSafari() || isAndroidChrome;\n\n  options = options || {};\n  // NEXT_MAJOR_VERSION allowDesktop will default to true, but can be opted out\n  merchantAllowsDesktopBrowsers =\n    (options.allowDesktopWebLogin || options.allowDesktop) === true;\n  merchantAllowsReturningToNewBrowserTab = options.hasOwnProperty(\n    \"allowNewBrowserTab\"\n  )\n    ? options.allowNewBrowserTab\n    : true;\n  // NEXT_MAJOR_VERSION webviews are not supported, except for the case where\n  // the merchant themselves is presenting venmo in a webview using the deep\n  // link url to get back to their app. For the next major version, we should\n  // just not have this option and instead require the merchant to determine\n  // if the venmo button should be displayed when presenting it in the\n  // merchant's app via a webview.\n  merchantAllowsWebviews = options.hasOwnProperty(\"allowWebviews\")\n    ? options.allowWebviews\n    : true;\n  // Venmo only works on iOS Chrome when the\n  // button is not rendered in an iFrame and\n  // allowNewBrowserTab is set to true\n  merchantAllowsIosChrome =\n    merchantAllowsReturningToNewBrowserTab && !inIframe();\n\n  isKnownUnsupportedMobileBrowser =\n    (!merchantAllowsIosChrome && browserDetection.isIosChrome()) ||\n    browserDetection.isFacebookOwnedBrowserOnAndroid() ||\n    browserDetection.isSamsung();\n\n  if (isKnownUnsupportedMobileBrowser) {\n    return false;\n  }\n\n  if (\n    !merchantAllowsWebviews &&\n    (browserDetection.isAndroidWebview() || browserDetection.isIosWebview())\n  ) {\n    return false;\n  }\n\n  if (!isMobileDevice) {\n    return merchantAllowsDesktopBrowsers;\n  }\n\n  if (!merchantAllowsReturningToNewBrowserTab) {\n    return isMobileDeviceThatSupportsReturnToSameTab;\n  }\n\n  return isMobileDevice;\n}\n\nmodule.exports = {\n  isBrowserSupported: isBrowserSupported,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYnJhaW50cmVlLXdlYi92ZW5tby9zaGFyZWQvc3VwcG9ydHMtdmVubW8uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsdUJBQXVCLG1CQUFPLENBQUMsaUdBQXFCO0FBQ3BELGVBQWUsbUJBQU8sQ0FBQyxnRkFBcUI7O0FBRTVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2JyYWludHJlZS13ZWIvdmVubW8vc2hhcmVkL3N1cHBvcnRzLXZlbm1vLmpzPzdmZGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBicm93c2VyRGV0ZWN0aW9uID0gcmVxdWlyZShcIi4vYnJvd3Nlci1kZXRlY3Rpb25cIik7XG52YXIgaW5JZnJhbWUgPSByZXF1aXJlKFwiLi4vLi4vbGliL2luLWlmcmFtZVwiKTtcblxuZnVuY3Rpb24gaXNCcm93c2VyU3VwcG9ydGVkKG9wdGlvbnMpIHtcbiAgdmFyIGlzS25vd25VbnN1cHBvcnRlZE1vYmlsZUJyb3dzZXIsXG4gICAgbWVyY2hhbnRBbGxvd3NEZXNrdG9wQnJvd3NlcnMsXG4gICAgbWVyY2hhbnRBbGxvd3NJb3NDaHJvbWUsXG4gICAgbWVyY2hhbnRBbGxvd3NSZXR1cm5pbmdUb05ld0Jyb3dzZXJUYWIsXG4gICAgbWVyY2hhbnRBbGxvd3NXZWJ2aWV3cztcbiAgdmFyIGlzQW5kcm9pZCA9IGJyb3dzZXJEZXRlY3Rpb24uaXNBbmRyb2lkKCk7XG4gIHZhciBpc01vYmlsZURldmljZSA9IGlzQW5kcm9pZCB8fCBicm93c2VyRGV0ZWN0aW9uLmlzSW9zKCk7XG4gIHZhciBpc0FuZHJvaWRDaHJvbWUgPSBpc0FuZHJvaWQgJiYgYnJvd3NlckRldGVjdGlvbi5pc0Nocm9tZSgpO1xuICB2YXIgaXNNb2JpbGVEZXZpY2VUaGF0U3VwcG9ydHNSZXR1cm5Ub1NhbWVUYWIgPVxuICAgIGJyb3dzZXJEZXRlY3Rpb24uaXNJb3NTYWZhcmkoKSB8fCBpc0FuZHJvaWRDaHJvbWU7XG5cbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIC8vIE5FWFRfTUFKT1JfVkVSU0lPTiBhbGxvd0Rlc2t0b3Agd2lsbCBkZWZhdWx0IHRvIHRydWUsIGJ1dCBjYW4gYmUgb3B0ZWQgb3V0XG4gIG1lcmNoYW50QWxsb3dzRGVza3RvcEJyb3dzZXJzID1cbiAgICAob3B0aW9ucy5hbGxvd0Rlc2t0b3BXZWJMb2dpbiB8fCBvcHRpb25zLmFsbG93RGVza3RvcCkgPT09IHRydWU7XG4gIG1lcmNoYW50QWxsb3dzUmV0dXJuaW5nVG9OZXdCcm93c2VyVGFiID0gb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShcbiAgICBcImFsbG93TmV3QnJvd3NlclRhYlwiXG4gIClcbiAgICA/IG9wdGlvbnMuYWxsb3dOZXdCcm93c2VyVGFiXG4gICAgOiB0cnVlO1xuICAvLyBORVhUX01BSk9SX1ZFUlNJT04gd2Vidmlld3MgYXJlIG5vdCBzdXBwb3J0ZWQsIGV4Y2VwdCBmb3IgdGhlIGNhc2Ugd2hlcmVcbiAgLy8gdGhlIG1lcmNoYW50IHRoZW1zZWx2ZXMgaXMgcHJlc2VudGluZyB2ZW5tbyBpbiBhIHdlYnZpZXcgdXNpbmcgdGhlIGRlZXBcbiAgLy8gbGluayB1cmwgdG8gZ2V0IGJhY2sgdG8gdGhlaXIgYXBwLiBGb3IgdGhlIG5leHQgbWFqb3IgdmVyc2lvbiwgd2Ugc2hvdWxkXG4gIC8vIGp1c3Qgbm90IGhhdmUgdGhpcyBvcHRpb24gYW5kIGluc3RlYWQgcmVxdWlyZSB0aGUgbWVyY2hhbnQgdG8gZGV0ZXJtaW5lXG4gIC8vIGlmIHRoZSB2ZW5tbyBidXR0b24gc2hvdWxkIGJlIGRpc3BsYXllZCB3aGVuIHByZXNlbnRpbmcgaXQgaW4gdGhlXG4gIC8vIG1lcmNoYW50J3MgYXBwIHZpYSBhIHdlYnZpZXcuXG4gIG1lcmNoYW50QWxsb3dzV2Vidmlld3MgPSBvcHRpb25zLmhhc093blByb3BlcnR5KFwiYWxsb3dXZWJ2aWV3c1wiKVxuICAgID8gb3B0aW9ucy5hbGxvd1dlYnZpZXdzXG4gICAgOiB0cnVlO1xuICAvLyBWZW5tbyBvbmx5IHdvcmtzIG9uIGlPUyBDaHJvbWUgd2hlbiB0aGVcbiAgLy8gYnV0dG9uIGlzIG5vdCByZW5kZXJlZCBpbiBhbiBpRnJhbWUgYW5kXG4gIC8vIGFsbG93TmV3QnJvd3NlclRhYiBpcyBzZXQgdG8gdHJ1ZVxuICBtZXJjaGFudEFsbG93c0lvc0Nocm9tZSA9XG4gICAgbWVyY2hhbnRBbGxvd3NSZXR1cm5pbmdUb05ld0Jyb3dzZXJUYWIgJiYgIWluSWZyYW1lKCk7XG5cbiAgaXNLbm93blVuc3VwcG9ydGVkTW9iaWxlQnJvd3NlciA9XG4gICAgKCFtZXJjaGFudEFsbG93c0lvc0Nocm9tZSAmJiBicm93c2VyRGV0ZWN0aW9uLmlzSW9zQ2hyb21lKCkpIHx8XG4gICAgYnJvd3NlckRldGVjdGlvbi5pc0ZhY2Vib29rT3duZWRCcm93c2VyT25BbmRyb2lkKCkgfHxcbiAgICBicm93c2VyRGV0ZWN0aW9uLmlzU2Ftc3VuZygpO1xuXG4gIGlmIChpc0tub3duVW5zdXBwb3J0ZWRNb2JpbGVCcm93c2VyKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKFxuICAgICFtZXJjaGFudEFsbG93c1dlYnZpZXdzICYmXG4gICAgKGJyb3dzZXJEZXRlY3Rpb24uaXNBbmRyb2lkV2VidmlldygpIHx8IGJyb3dzZXJEZXRlY3Rpb24uaXNJb3NXZWJ2aWV3KCkpXG4gICkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICghaXNNb2JpbGVEZXZpY2UpIHtcbiAgICByZXR1cm4gbWVyY2hhbnRBbGxvd3NEZXNrdG9wQnJvd3NlcnM7XG4gIH1cblxuICBpZiAoIW1lcmNoYW50QWxsb3dzUmV0dXJuaW5nVG9OZXdCcm93c2VyVGFiKSB7XG4gICAgcmV0dXJuIGlzTW9iaWxlRGV2aWNlVGhhdFN1cHBvcnRzUmV0dXJuVG9TYW1lVGFiO1xuICB9XG5cbiAgcmV0dXJuIGlzTW9iaWxlRGV2aWNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNCcm93c2VyU3VwcG9ydGVkOiBpc0Jyb3dzZXJTdXBwb3J0ZWQsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/shared/supports-venmo.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/shared/web-login-backdrop.js":
/*!***********************************************************************!*\
  !*** ./node_modules/braintree-web/venmo/shared/web-login-backdrop.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar frameService = __webpack_require__(/*! ../../lib/frame-service/external */ \"(ssr)/./node_modules/braintree-web/lib/frame-service/external/index.js\");\nvar useMin = __webpack_require__(/*! ../../lib/use-min */ \"(ssr)/./node_modules/braintree-web/lib/use-min.js\");\nvar ExtendedPromise = __webpack_require__(/*! @braintree/extended-promise */ \"(ssr)/./node_modules/@braintree/extended-promise/dist/index.js\");\n\nvar VERSION = \"3.99.0\";\nvar VENMO_LOGO_SVG =\n  '<svg width=\"198\" height=\"58\" viewBox=\"0 0 198 58\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.0702 13.6572C44.1935 15.4585 44.6999 17.3139 44.6999 19.6576C44.6999 27.1328 38.1277 36.8436 32.7935 43.6625H20.6099L15.7236 15.2939L26.3917 14.3105L28.9751 34.4966C31.389 30.6783 34.3678 24.6779 34.3678 20.587C34.3678 18.3477 33.9727 16.8225 33.3553 15.5666L43.0702 13.6572Z\" fill=\"white\"/>\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M56.8965 26.1491C58.8596 26.1491 63.8018 25.2772 63.8018 22.5499C63.8018 21.2402 62.8481 20.587 61.7242 20.587C59.7579 20.587 57.1776 22.8763 56.8965 26.1491ZM56.6715 31.5506C56.6715 34.8807 58.5787 36.1873 61.107 36.1873C63.8603 36.1873 66.4966 35.534 69.923 33.8433L68.6324 42.3523C66.2183 43.4976 62.4559 44.2617 58.8039 44.2617C49.5403 44.2617 46.2249 38.8071 46.2249 31.9879C46.2249 23.1496 51.6179 13.765 62.7365 13.765C68.858 13.765 72.2809 17.0949 72.2809 21.7317C72.2815 29.2066 62.4005 31.4965 56.6715 31.5506Z\" fill=\"white\"/>\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M103.067 20.3142C103.067 21.4052 102.897 22.9875 102.727 24.0216L99.5262 43.6622H89.1385L92.0585 25.658C92.1139 25.1696 92.284 24.1865 92.284 23.6411C92.284 22.3314 91.4414 22.0047 90.4282 22.0047C89.0826 22.0047 87.7337 22.6042 86.8354 23.0418L83.5234 43.6625H73.0772L77.8495 14.257H86.8908L87.0052 16.6041C89.1382 15.2404 91.9469 13.7656 95.932 13.7656C101.212 13.765 103.067 16.3845 103.067 20.3142Z\" fill=\"white\"/>\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M133.906 16.9841C136.881 14.9131 139.69 13.765 143.563 13.765C148.897 13.765 150.753 16.3845 150.753 20.3142C150.753 21.4052 150.583 22.9875 150.413 24.0216L147.216 43.6622H136.825L139.801 25.2774C139.855 24.786 139.971 24.1865 139.971 23.8063C139.971 22.3317 139.128 22.0047 138.115 22.0047C136.824 22.0047 135.535 22.5501 134.577 23.0418L131.266 43.6625H120.878L123.854 25.2777C123.908 24.7863 124.02 24.1868 124.02 23.8065C124.02 22.332 123.177 22.0049 122.167 22.0049C120.819 22.0049 119.473 22.6045 118.574 23.0421L115.26 43.6628H104.817L109.589 14.2573H118.52L118.8 16.7122C120.878 15.241 123.684 13.7662 127.446 13.7662C130.704 13.765 132.837 15.129 133.906 16.9841Z\" fill=\"white\"/>\\n  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M171.426 25.5502C171.426 23.1496 170.808 21.513 168.956 21.513C164.857 21.513 164.015 28.55 164.015 32.1498C164.015 34.8807 164.802 36.5709 166.653 36.5709C170.528 36.5709 171.426 29.1497 171.426 25.5502ZM153.458 31.7152C153.458 22.442 158.511 13.765 170.136 13.765C178.896 13.765 182.098 18.7854 182.098 25.7148C182.098 34.8805 177.099 44.3723 165.194 44.3723C156.378 44.3723 153.458 38.7525 153.458 31.7152Z\" fill=\"white\"/>\\n</svg>';\nvar CONTINUE_OR_CANCEL_INSTRUCTIONS =\n  \"Tap cancel payment to cancel and return to the business. Continue payment will relaunch the payment window.\";\n\nvar POPUP_WIDTH = 400;\nvar POPUP_HEIGHT = 570;\nvar ELEMENT_IDS = {\n  backdrop: \"venmo-desktop-web-backdrop\",\n  backdropHidden: \"venmo-desktop-web-backdrop.hidden\",\n  backdropContainer: \"venmo-backdrop-container\",\n  cancelButton: \"venmo-popup-cancel-button\",\n  continueButton: \"venmo-popup-continue-button\",\n  message: \"venmo-message\",\n  instructions: \"venmo-instructions\",\n  venmoLogo: \"venmo-full-logo\",\n};\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\nfunction openPopup(options) {\n  var frameServiceInstance = options.frameServiceInstance;\n  var venmoUrl = options.venmoUrl;\n  var checkForStatusChange = options.checkForStatusChange;\n  var cancelTokenization = options.cancelTokenization;\n  var extendedPromise = new ExtendedPromise();\n\n  document\n    .getElementById(ELEMENT_IDS.continueButton)\n    .addEventListener(\"click\", function () {\n      frameServiceInstance.focus();\n    });\n  document\n    .getElementById(ELEMENT_IDS.cancelButton)\n    .addEventListener(\"click\", function () {\n      frameServiceInstance.close();\n      cancelTokenization();\n      closeBackdrop();\n    });\n\n  frameServiceInstance.open({}, function (frameServiceErr) {\n    var retryStartingCount = 1;\n\n    if (frameServiceErr) {\n      extendedPromise.reject(frameServiceErr);\n    } else {\n      checkForStatusChange(retryStartingCount)\n        .then(function (data) {\n          extendedPromise.resolve(data);\n        })\n        .catch(function (statusCheckError) {\n          extendedPromise.reject(statusCheckError);\n        });\n    }\n    frameServiceInstance.close();\n    closeBackdrop();\n  });\n  frameServiceInstance.redirect(venmoUrl);\n\n  return extendedPromise;\n}\n\nfunction centeredPopupDimensions() {\n  var popupTop =\n    Math.round((window.outerHeight - POPUP_HEIGHT) / 2) + window.screenTop;\n  var popupLeft =\n    Math.round((window.outerWidth - POPUP_WIDTH) / 2) + window.screenLeft;\n\n  return {\n    top: popupTop,\n    left: popupLeft,\n  };\n}\n\nfunction closeBackdrop() {\n  document.getElementById(\"venmo-desktop-web-backdrop\").classList.add(\"hidden\");\n}\n\nfunction getElementStyles() {\n  var backdropStyles = [\n    \"#\" + ELEMENT_IDS.backdropHidden + \" {\",\n    \"display: none;\",\n    \"}\",\n    \"#\" + ELEMENT_IDS.backdrop + \" {\",\n    \"z-index: 3141592632;\",\n    \"cursor: pointer;\",\n    \"position: fixed;\",\n    \"top: 0;\",\n    \"left: 0;\",\n    \"bottom: 0;\",\n    \"width: 100%;\",\n    \"background: rgba(0, 0, 0, 0.8);\",\n    \"}\",\n  ];\n  var backdropContainerStyles = [\n    \"#\" + ELEMENT_IDS.backdropContainer + \" {\",\n    \"display: flex;\",\n    \"align-content: center;\",\n    \"justify-content: center;\",\n    \"align-items: center;\",\n    \"width: 100%;\",\n    \"height: 100%;\",\n    \"flex-direction: column;\",\n    \"}\",\n  ];\n\n  var cancelButtonStyles = [\n    \"#\" + ELEMENT_IDS.cancelButton + \" {\",\n    \"height: 24px;\",\n    \"width: 380px;\",\n    \"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\",\n    \"font-style: normal;\",\n    \"font-weight: 700;\",\n    \"font-size: 18px;\",\n    \"line-height: 24px;\",\n    \"text-align: center;\",\n    \"background-color: transparent;\",\n    \"border: none;\",\n    \"color: #FFFFFF;\",\n    \"margin-top: 28px;\",\n    \"}\",\n  ];\n\n  var continueButtonStyles = [\n    \"#\" + ELEMENT_IDS.continueButton + \" {\",\n    \"width: 400px;\",\n    \"height: 50px;\",\n    \"background: #0074DE;\",\n    \"border-radius: 24px;\",\n    \"border: none;\",\n    \"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\",\n    \"font-style: normal;\",\n    \"font-weight: 700;\",\n    \"font-size: 18px;\",\n    \"color: #FFFFFF;\",\n    \"margin-top: 44px;\",\n    \"}\",\n  ];\n\n  var messageStyles = [\n    \"#\" + ELEMENT_IDS.message + \" {\",\n    \"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\",\n    \"font-style: normal;\",\n    \"font-weight: 500;\",\n    \"font-size: 24px;\",\n    \"line-height: 32px;\",\n    \"text-align: center;\",\n    \"color: #FFFFFF;\",\n    \"margin-top: 32px;\",\n    \"}\",\n  ];\n\n  var instructionStyles = [\n    \"#\" + ELEMENT_IDS.instructions + \" {\",\n    \"font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\",\n    \"font-style: normal;\",\n    \"font-weight: 400;\",\n    \"font-size: 16px;\",\n    \"line-height: 20px;\",\n    \"text-align: center;\",\n    \"color: #FFFFFF;\",\n    \"margin-top: 16px;\",\n    \"width: 400px;\",\n    \"}\",\n  ];\n\n  var allStyles = backdropStyles.concat(\n    backdropContainerStyles,\n    cancelButtonStyles,\n    continueButtonStyles,\n    messageStyles,\n    instructionStyles\n  );\n\n  return allStyles.join(\"\\n\");\n}\n\nfunction buildAndStyleElements() {\n  var alreadyRenderedBackdrop = document.getElementById(ELEMENT_IDS.backdrop);\n  var backdropStylesElement,\n    backdropDiv,\n    backDropContentContainer,\n    venmoLogoDiv,\n    venmoMessageDiv,\n    instructionsDiv,\n    continueButton,\n    cancelButton;\n\n  if (alreadyRenderedBackdrop) {\n    alreadyRenderedBackdrop.classList.remove(\"hidden\");\n\n    return;\n  }\n  backdropStylesElement = document.createElement(\"style\");\n  backdropDiv = document.createElement(\"div\");\n  backDropContentContainer = document.createElement(\"div\");\n  venmoLogoDiv = document.createElement(\"div\");\n  venmoMessageDiv = document.createElement(\"div\");\n  instructionsDiv = document.createElement(\"div\");\n  continueButton = document.createElement(\"button\");\n  cancelButton = document.createElement(\"button\");\n\n  backdropStylesElement.id = \"venmo-desktop-web__injected-styles\";\n  backdropStylesElement.innerHTML = getElementStyles();\n\n  backdropDiv.id = ELEMENT_IDS.backdrop;\n\n  backDropContentContainer.id = ELEMENT_IDS.backdropContainer;\n\n  venmoLogoDiv.id = ELEMENT_IDS.venmoLogo;\n  venmoLogoDiv.innerHTML = VENMO_LOGO_SVG;\n\n  venmoMessageDiv.id = ELEMENT_IDS.message;\n  venmoMessageDiv.innerText = \"What would you like to do?\";\n\n  instructionsDiv.id = ELEMENT_IDS.instructions;\n  instructionsDiv.innerText = CONTINUE_OR_CANCEL_INSTRUCTIONS;\n\n  continueButton.id = ELEMENT_IDS.continueButton;\n  continueButton.innerText = \"Continue payment\";\n\n  cancelButton.id = ELEMENT_IDS.cancelButton;\n  cancelButton.innerText = \"Cancel payment\";\n\n  document.head.appendChild(backdropStylesElement);\n  backDropContentContainer.appendChild(venmoLogoDiv);\n  backDropContentContainer.appendChild(venmoMessageDiv);\n  backDropContentContainer.appendChild(instructionsDiv);\n  backDropContentContainer.appendChild(continueButton);\n  backDropContentContainer.appendChild(cancelButton);\n  backdropDiv.appendChild(backDropContentContainer);\n  document.body.appendChild(backdropDiv);\n\n  backdropDiv.addEventListener(\"click\", function (event) {\n    event.stopPropagation();\n  });\n}\n\n/**\n * Applies a backdrop over the page, and opens a popup to the supplied url. Uses supplied status and cancel functions to handle the flow.\n * @function runWebLogin\n * @ignore\n * @param {object} options Options for running the web login flow.\n * @param {string} options.venmoUrl Venmo url that is to be used for logging in.\n * @param {Venmo~checkPaymentContextStatusAndProcessResult} options.checkForStatusChange {@link Venmo~checkPaymentContextStatusAndProcessResult} to be invoked in order to check for a payment context status update.\n * @param {Venmo~cancelTokenization} options.cancelTokenization {@link Venmo~cancelTokenization} to be invoked when the appropriate payment context status is retrieved.\n * @param {boolean} options.debug A flag to control whether to use minified assets or not.\n * @returns {Promise} Returns a promise\n */\nfunction runWebLogin(options) {\n  buildAndStyleElements();\n\n  return openPopup(options);\n}\n\n/**\n * When using frameservice, it needs to be created separately from the action of opening. The setup process includes\n * steps that browsers may consider async or too disconnected from the user action required to open a popup.\n *\n * This function enables us to do that setup at an appropriate time.\n * @function setupDesktopWebLogin\n * @ignore\n * @param {object} options Options use for setting up the Desktop Web Login flow.\n * @param {string} options.assetsUrl Url that points to the hosted Braintree assets.\n * @param {boolean} options.debug A flag to control whether to use minified assets or not.\n\n * @returns {Promise} Returns a promise\n */\nfunction setupDesktopWebLogin(options) {\n  var extendedPromise = new ExtendedPromise();\n  var popupName = \"venmoDesktopWebLogin\";\n  var assetsUrl = options.assetsUrl;\n  var debug = options.debug || false;\n  var popupLocation = centeredPopupDimensions();\n  var assetsBaseUrl = assetsUrl + \"/web/\" + VERSION + \"/html\";\n\n  frameService.create(\n    {\n      name: popupName,\n      dispatchFrameUrl:\n        assetsBaseUrl + \"/dispatch-frame\" + useMin(debug) + \".html\",\n      openFrameUrl:\n        assetsBaseUrl + \"/venmo-landing-frame\" + useMin(debug) + \".html\",\n      top: popupLocation.top,\n      left: popupLocation.left,\n      height: POPUP_HEIGHT,\n      width: POPUP_WIDTH,\n    },\n    function (frameServiceInstance) {\n      extendedPromise.resolve(frameServiceInstance);\n    }\n  );\n\n  return extendedPromise;\n}\n\nmodule.exports = {\n  runWebLogin: runWebLogin,\n  openPopup: openPopup,\n  setupDesktopWebLogin: setupDesktopWebLogin,\n  POPUP_WIDTH: POPUP_WIDTH,\n  POPUP_HEIGHT: POPUP_HEIGHT,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/shared/web-login-backdrop.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/braintree-web/venmo/venmo.js":
/*!***************************************************!*\
  !*** ./node_modules/braintree-web/venmo/venmo.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar analytics = __webpack_require__(/*! ../lib/analytics */ \"(ssr)/./node_modules/braintree-web/lib/analytics.js\");\nvar isBrowserSupported = __webpack_require__(/*! ./shared/supports-venmo */ \"(ssr)/./node_modules/braintree-web/venmo/shared/supports-venmo.js\");\nvar browserDetection = __webpack_require__(/*! ./shared/browser-detection */ \"(ssr)/./node_modules/braintree-web/venmo/shared/browser-detection.js\");\nvar constants = __webpack_require__(/*! ./shared/constants */ \"(ssr)/./node_modules/braintree-web/venmo/shared/constants.js\");\nvar errors = __webpack_require__(/*! ./shared/errors */ \"(ssr)/./node_modules/braintree-web/venmo/shared/errors.js\");\nvar querystring = __webpack_require__(/*! ../lib/querystring */ \"(ssr)/./node_modules/braintree-web/lib/querystring.js\");\nvar isVerifiedDomain = __webpack_require__(/*! ../lib/is-verified-domain */ \"(ssr)/./node_modules/braintree-web/lib/is-verified-domain.js\");\nvar methods = __webpack_require__(/*! ../lib/methods */ \"(ssr)/./node_modules/braintree-web/lib/methods.js\");\nvar convertMethodsToError = __webpack_require__(/*! ../lib/convert-methods-to-error */ \"(ssr)/./node_modules/braintree-web/lib/convert-methods-to-error.js\");\nvar wrapPromise = __webpack_require__(/*! @braintree/wrap-promise */ \"(ssr)/./node_modules/@braintree/wrap-promise/dist/wrap-promise.js\");\nvar BraintreeError = __webpack_require__(/*! ../lib/braintree-error */ \"(ssr)/./node_modules/braintree-web/lib/braintree-error.js\");\nvar inIframe = __webpack_require__(/*! ../lib/in-iframe */ \"(ssr)/./node_modules/braintree-web/lib/in-iframe.js\");\nvar ExtendedPromise = __webpack_require__(/*! @braintree/extended-promise */ \"(ssr)/./node_modules/@braintree/extended-promise/dist/index.js\");\nvar getVenmoUrl = __webpack_require__(/*! ./shared/get-venmo-url */ \"(ssr)/./node_modules/braintree-web/venmo/shared/get-venmo-url.js\");\nvar desktopWebLogin = __webpack_require__(/*! ./shared/web-login-backdrop */ \"(ssr)/./node_modules/braintree-web/venmo/shared/web-login-backdrop.js\");\nvar snakeCaseToCamelCase = __webpack_require__(/*! ../lib/snake-case-to-camel-case */ \"(ssr)/./node_modules/braintree-web/lib/snake-case-to-camel-case.js\");\n\n// NEXT_MAJOR_VERSION the source code for this is actually in a\n// typescript repo called venmo-desktop, once the SDK is migrated\n// to typescript, we can move the TS files out of that separate\n// repo and into the web SDK properly\nvar createVenmoDesktop = __webpack_require__(/*! ./external/ */ \"(ssr)/./node_modules/braintree-web/venmo/external/index.js\");\nvar graphqlQueries = __webpack_require__(/*! ./external/queries */ \"(ssr)/./node_modules/braintree-web/venmo/external/queries.js\");\n\nvar VERSION = \"3.99.0\";\nvar DEFAULT_MOBILE_POLLING_INTERVAL = 250; // 1/4 second\nvar DEFAULT_MOBILE_EXPIRING_THRESHOLD = 300000; // 5 minutes\n\nExtendedPromise.suppressUnhandledPromiseMessage = true;\n\n/**\n * Venmo tokenize payload.\n * @typedef {object} Venmo~tokenizePayload\n * @property {string} nonce The payment method nonce.\n * @property {string} type The payment method type, always `VenmoAccount`.\n * @property {object} details Additional Venmo account details.\n * @property {string} details.username The username of the Venmo account.\n * @property {string} details.paymentContextId The context ID of the Venmo payment. Only available when used with {@link https://braintree.github.io/braintree-web/current/module-braintree-web_venmo.html#.create|`paymentMethodUsage`}.\n */\n\n/**\n * @class\n * @param {object} options The Venmo {@link module:braintree-web/venmo.create create} options.\n * @description <strong>Do not use this constructor directly. Use {@link module:braintree-web/venmo.create|braintree-web.venmo.create} instead.</strong>\n * @classdesc This class represents a Venmo component produced by {@link module:braintree-web/venmo.create|braintree-web/venmo.create}. Instances of this class have methods for tokenizing Venmo payments.\n */\nfunction Venmo(options) {\n  var self = this;\n\n  this._allowDesktopWebLogin = options.allowDesktopWebLogin || false;\n  this._mobileWebFallBack = options.mobileWebFallBack || false;\n  this._createPromise = options.createPromise;\n  this._allowNewBrowserTab = options.allowNewBrowserTab !== false;\n  this._allowWebviews = options.allowWebviews !== false;\n  this._allowDesktop = options.allowDesktop === true;\n  this._useRedirectForIOS = options.useRedirectForIOS === true;\n  this._profileId = options.profileId;\n  this._displayName = options.displayName;\n  this._deepLinkReturnUrl = options.deepLinkReturnUrl;\n  this._ignoreHistoryChanges = options.ignoreHistoryChanges;\n  this._paymentMethodUsage = (options.paymentMethodUsage || \"\").toUpperCase();\n  this._shouldUseLegacyFlow = !this._paymentMethodUsage;\n  this._requireManualReturn = options.requireManualReturn === true;\n  this._useDesktopQRFlow =\n    this._allowDesktop && this._isDesktop() && !this._allowDesktopWebLogin;\n  this._useAllowDesktopWebLogin =\n    this._allowDesktopWebLogin && this._isDesktop();\n  this._cannotHaveReturnUrls = inIframe() || this._requireManualReturn;\n  this._allowAndroidRecreation = options.allowAndroidRecreation !== false;\n  this._maxRetryCount = 3;\n  this._collectCustomerBillingAddress =\n    options.collectCustomerBillingAddress || false;\n  this._collectCustomerShippingAddress =\n    options.collectCustomerShippingAddress || false;\n  this._lineItems = options.lineItems;\n  this._subTotalAmount = options.subTotalAmount;\n  this._discountAmount = options.discountAmount;\n  this._taxAmount = options.taxAmount;\n  this._shippingAmount = options.shippingAmount;\n  this._totalAmount = options.totalAmount;\n\n  this._shouldCreateVenmoPaymentContext =\n    this._cannotHaveReturnUrls || !this._shouldUseLegacyFlow;\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"venmo.desktop-flow.configured.\" + String(Boolean(this._allowDesktop))\n  );\n\n  // if the url has a tokenization result, that indicates\n  // that it cannot be the desktop flow or the manual return\n  // flow. If it's the hash change with paymentMethodUsage\n  // flow, we want to skip creating a new payment context, since\n  // there is already a pending payment context waiting to be\n  // processed. For the hash change flow without paymentMethodUsage,\n  // no further actions are needed.\n  if (this.hasTokenizationResult()) {\n    analytics.sendEvent(\n      this._createPromise,\n      \"venmo.appswitch.return-in-new-tab\"\n    );\n  } else if (this._useDesktopQRFlow) {\n    this._createPromise = this._createPromise.then(function (client) {\n      var config = client.getConfiguration().gatewayConfiguration;\n\n      return createVenmoDesktop({\n        url:\n          config.assetsUrl +\n          \"/web/\" +\n          VERSION +\n          \"/html/venmo-desktop-frame.html\",\n        environment:\n          config.environment === \"production\" ? \"PRODUCTION\" : \"SANDBOX\",\n        profileId: self._profileId || config.payWithVenmo.merchantId,\n        paymentMethodUsage: self._paymentMethodUsage,\n        displayName: self._displayName,\n        Promise: Promise,\n        apiRequest: function (query, data) {\n          return client\n            .request({\n              api: \"graphQLApi\",\n              data: {\n                query: query,\n                variables: data,\n              },\n            })\n            .then(function (response) {\n              return response.data;\n            });\n        },\n        sendEvent: function (eventName) {\n          analytics.sendEvent(self._createPromise, eventName);\n        },\n        verifyDomain: isVerifiedDomain,\n      })\n        .then(function (venmoDesktopInstance) {\n          self._venmoDesktopInstance = venmoDesktopInstance;\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.desktop-flow.presented\"\n          );\n\n          return client;\n        })\n        .catch(function () {\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.desktop-flow.setup-failed\"\n          );\n          self._useDesktopQRFlow = false;\n\n          return client;\n        });\n    });\n  } else if (this._shouldCreateVenmoPaymentContext) {\n    // these variables are only relevant for the manual return flow\n    // and they are only set to make testing easier (so they can\n    // be overwritten with smaller values in the tests)\n    this._mobilePollingInterval = DEFAULT_MOBILE_POLLING_INTERVAL;\n    this._mobilePollingExpiresThreshold = DEFAULT_MOBILE_EXPIRING_THRESHOLD;\n\n    this._createPromise = this._createPromise.then(function (client) {\n      var paymentContextPromise, webLoginPromise;\n      var analyticsCategory = self._cannotHaveReturnUrls\n        ? \"manual-return\"\n        : \"mobile-payment-context\";\n      var config = client.getConfiguration();\n\n      webLoginPromise = desktopWebLogin\n        .setupDesktopWebLogin({\n          assetsUrl: config.gatewayConfiguration.assetsUrl,\n          debug: config.isDebug,\n        })\n        .then(function (frameServiceInstance) {\n          self._frameServiceInstance = frameServiceInstance;\n        })\n        .catch(function (desktopWebErr) {\n          return desktopWebErr;\n        });\n\n      self._mobilePollingContextEnvironment =\n        config.gatewayConfiguration.environment.toUpperCase();\n\n      paymentContextPromise = self\n        ._createVenmoPaymentContext(client)\n        .then(function () {\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.\" + analyticsCategory + \".presented\"\n          );\n\n          return client;\n        })\n        .catch(function (err) {\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.\" + analyticsCategory + \".setup-failed\"\n          );\n\n          return Promise.reject(\n            new BraintreeError({\n              type: errors.VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED.type,\n              code: errors.VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED.code,\n              message: isValidationError(err)\n                ? err.details.originalError[0].message\n                : errors.VENMO_MOBILE_PAYMENT_CONTEXT_SETUP_FAILED.message,\n              details: {\n                originalError: err,\n              },\n            })\n          );\n        });\n\n      return ExtendedPromise.all([webLoginPromise, paymentContextPromise])\n        .then(function (results) {\n          var paymentContextResult = results[1]; // We only care about the returned value of the paymentContextPromise\n\n          return Promise.resolve(paymentContextResult);\n        })\n        .catch(function (promiseErr) {\n          // ExtendedPromise.all returns just one error and it's either which fails first/at all.\n          return Promise.reject(promiseErr);\n        });\n    });\n  }\n}\n\nfunction isValidationError(err) {\n  return (\n    err.details &&\n    err.details.originalError &&\n    err.details.originalError[0] &&\n    err.details.originalError[0].extensions &&\n    err.details.originalError[0].extensions.errorClass === \"VALIDATION\" &&\n    err.details.originalError[0].extensions.errorType === \"user_error\"\n  );\n}\n\nVenmo.prototype._createVenmoPaymentContext = function (\n  client,\n  cancelIfTokenizationInProgress\n) {\n  var self = this;\n  var promise, transactionDetails;\n  var configuration = client.getConfiguration();\n  var venmoConfiguration = configuration.gatewayConfiguration.payWithVenmo;\n  var transactionDetailsPresent = false;\n\n  if (!this._shouldCreateVenmoPaymentContext) {\n    return Promise.resolve();\n  }\n\n  if (this._shouldUseLegacyFlow) {\n    promise = client\n      .request({\n        api: \"graphQLApi\",\n        data: {\n          query: graphqlQueries.LEGACY_CREATE_PAYMENT_CONTEXT_QUERY,\n          variables: {\n            input: {\n              environment: this._mobilePollingContextEnvironment,\n              intent: \"PAY_FROM_APP\",\n            },\n          },\n        },\n      })\n      .then(function (response) {\n        return response\n          .data.createVenmoQRCodePaymentContext.venmoQRCodePaymentContext;\n      });\n  } else {\n    // Merchants are not allowed to collect user addresses unless ECD (Enriched Customer Data) is enabled on the BT Control Panel.\n    if (\n      (this._collectCustomerBillingAddress ||\n        this._collectCustomerShippingAddress) &&\n      !venmoConfiguration.enrichedCustomerDataEnabled\n    ) {\n      return Promise.reject(new BraintreeError(errors.VENMO_ECD_DISABLED));\n    }\n\n    if (this._lineItems) {\n      this._lineItems.forEach(function (item) {\n        item.unitTaxAmount = item.unitTaxAmount || \"0\";\n      });\n    }\n    transactionDetails = {\n      subTotalAmount: this._subTotalAmount,\n      discountAmount: this._discountAmount,\n      taxAmount: this._taxAmount,\n      shippingAmount: this._shippingAmount,\n      totalAmount: this._totalAmount,\n      lineItems: this._lineItems,\n    };\n    transactionDetailsPresent = Object.keys(transactionDetails).some(function (\n      detail\n    ) {\n      return transactionDetails[detail] !== undefined; // eslint-disable-line no-undefined\n    });\n    promise = client\n      .request({\n        api: \"graphQLApi\",\n        data: {\n          query: graphqlQueries.CREATE_PAYMENT_CONTEXT_QUERY,\n          variables: {\n            input: {\n              paymentMethodUsage: this._paymentMethodUsage,\n              intent: \"CONTINUE\",\n              customerClient: \"MOBILE_WEB\",\n              displayName: this._displayName,\n              paysheetDetails: {\n                collectCustomerBillingAddress:\n                  this._collectCustomerBillingAddress,\n                collectCustomerShippingAddress:\n                  this._collectCustomerShippingAddress,\n                transactionDetails: transactionDetailsPresent\n                  ? transactionDetails\n                  : undefined, // eslint-disable-line no-undefined\n              },\n            },\n          },\n        },\n      })\n      .then(function (response) {\n        return response.data.createVenmoPaymentContext.venmoPaymentContext;\n      });\n  }\n\n  return promise.then(function (context) {\n    var expiredTime = new Date(context.expiresAt) - new Date(context.createdAt);\n    var refreshIn = expiredTime * 0.6666;\n\n    // prevents multiple setTimeouts from firing from separate calls\n    // to create a payment context by canceling the previous one\n    // if there is a pending call\n    clearTimeout(self._refreshPaymentContextTimeout);\n    self._refreshPaymentContextTimeout = setTimeout(function () {\n      if (self._tokenizationInProgress) {\n        return;\n      }\n      self._createVenmoPaymentContext(client, true);\n    }, refreshIn);\n\n    if (cancelIfTokenizationInProgress && self._tokenizationInProgress) {\n      return;\n    }\n\n    self._venmoPaymentContextStatus = context.status;\n    self._venmoPaymentContextId = context.id;\n  });\n};\n\nVenmo.prototype.appSwitch = function (url) {\n  if (this._deepLinkReturnUrl) {\n    if (isIosWebviewInDeepLinkReturnUrlFlow()) {\n      analytics.sendEvent(\n        this._createPromise,\n        \"venmo.appswitch.start.ios-webview\"\n      );\n      // Deep link URLs do not launch iOS apps from a webview when using window.open or PopupBridge.open.\n      window.location.href = url;\n    } else if (\n      window.popupBridge &&\n      typeof window.popupBridge.open === \"function\"\n    ) {\n      analytics.sendEvent(\n        this._createPromise,\n        \"venmo.appswitch.start.popup-bridge\"\n      );\n      window.popupBridge.open(url);\n    } else {\n      analytics.sendEvent(this._createPromise, \"venmo.appswitch.start.webview\");\n      window.open(url);\n    }\n  } else {\n    analytics.sendEvent(this._createPromise, \"venmo.appswitch.start.browser\");\n\n    if (\n      browserDetection.doesNotSupportWindowOpenInIos() ||\n      this._shouldUseRedirectStrategy()\n    ) {\n      window.location.href = url;\n    } else {\n      window.open(url);\n    }\n  }\n};\n\nVenmo.prototype.getUrl = function () {\n  return this._createPromise.then(\n    function (client) {\n      var configuration = client.getConfiguration();\n      var params = {};\n      var currentUrl =\n        this._deepLinkReturnUrl ||\n        window.location.href.replace(window.location.hash, \"\");\n      var venmoConfiguration = configuration.gatewayConfiguration.payWithVenmo;\n      var analyticsMetadata = configuration.analyticsMetadata;\n      var accessToken = venmoConfiguration.accessToken;\n      var braintreeData = {\n        _meta: {\n          version: analyticsMetadata.sdkVersion,\n          integration: analyticsMetadata.integration,\n          platform: analyticsMetadata.platform,\n          sessionId: analyticsMetadata.sessionId,\n        },\n      };\n\n      this._isDebug = configuration.isDebug;\n      this._assetsUrl = configuration.gatewayConfiguration.assetsUrl;\n\n      currentUrl = currentUrl.replace(/#*$/, \"\");\n\n      /* eslint-disable camelcase */\n      if (this._venmoPaymentContextId) {\n        if (this._shouldUseLegacyFlow) {\n          // NEXT_MAJOR_VERSION stop adding the context id to the access token.\n          // the context id is placed here for backwards compatiblity\n          // with versions of the venmo app that did not support\n          // pulling the resource id off of the query params\n          accessToken += \"|pcid:\" + this._venmoPaymentContextId;\n        } else {\n          params.resource_id = this._venmoPaymentContextId;\n        }\n      }\n\n      if (this._shouldIncludeReturnUrls() || this._useAllowDesktopWebLogin) {\n        if (this._useAllowDesktopWebLogin) {\n          currentUrl =\n            this._assetsUrl + \"/web/\" + VERSION + \"/html/redirect-frame.html\";\n        }\n        params[\"x-success\"] = currentUrl + \"#venmoSuccess=1\";\n        params[\"x-cancel\"] = currentUrl + \"#venmoCancel=1\";\n        params[\"x-error\"] = currentUrl + \"#venmoError=1\";\n      } else {\n        params[\"x-success\"] = \"NOOP\";\n        params[\"x-cancel\"] = \"NOOP\";\n        params[\"x-error\"] = \"NOOP\";\n      }\n\n      if (!this._allowAndroidRecreation) {\n        params.allowAndroidRecreation = 0;\n      } else {\n        params.allowAndroidRecreation = 1;\n      }\n\n      params.ua = window.navigator.userAgent;\n      params.braintree_merchant_id =\n        this._profileId || venmoConfiguration.merchantId;\n      params.braintree_access_token = accessToken;\n      params.braintree_environment = venmoConfiguration.environment;\n      params.braintree_sdk_data = btoa(JSON.stringify(braintreeData));\n\n      return (\n        getVenmoUrl({\n          useAllowDesktopWebLogin: this._useAllowDesktopWebLogin,\n          mobileWebFallBack: this._mobileWebFallBack,\n        }) +\n        \"?\" +\n        querystring.stringify(params)\n      );\n    }.bind(this)\n  );\n};\n\n/**\n * Returns a boolean indicating whether the current browser supports Venmo as a payment method. Please note that iOS Chrome is not supported when the Venmo button is rendered in an iFrame.\n *\n * If `options.allowNewBrowserTab` is false when calling {@link module:braintree-web/venmo.create|venmo.create}, this method will return true only for browsers known to support returning from the Venmo app to the same browser tab. Currently, this is limited to iOS Safari and Android Chrome.\n * If `options.allowWebviews` is false when calling {@link module:braintree-web/venmo.create|venmo.create}, this method will return true only for mobile browsers that are not webviews.\n * @public\n * @returns {boolean} True if the current browser is supported, false if not.\n */\nVenmo.prototype.isBrowserSupported = function () {\n  return isBrowserSupported.isBrowserSupported({\n    allowNewBrowserTab: this._allowNewBrowserTab,\n    allowWebviews: this._allowWebviews,\n    allowDesktop: this._allowDesktop,\n    allowDesktopWebLogin: this._allowDesktopWebLogin,\n  });\n};\n\n/**\n * Returns a boolean indicating whether a Venmo tokenization result is ready to be processed immediately.\n *\n * This method should be called after initialization to see if the result of Venmo authorization is available. If it returns true, call {@link Venmo#tokenize|tokenize} immediately to process the results.\n *\n * @public\n * @returns {boolean} True if the results of Venmo payment authorization are available and ready to process.\n */\nVenmo.prototype.hasTokenizationResult = function () {\n  return this._hasTokenizationResult();\n};\n\n// a private version that lets us pass in a custom hash\n// when listening on a hashchange event\nVenmo.prototype._hasTokenizationResult = function (hash) {\n  var params = getFragmentParameters(hash);\n\n  return (\n    typeof (params.venmoSuccess || params.venmoError || params.venmoCancel) !==\n    \"undefined\"\n  );\n};\n\nVenmo.prototype._shouldIncludeReturnUrls = function () {\n  // when a deep link return url is passed, we should always\n  // respect it and include the return urls so the venmo app\n  // can app switch back to it\n  if (this._deepLinkReturnUrl) {\n    return true;\n  }\n\n  // when the sdk is initialized within an iframe, it's\n  // impossible to return back to the correct place automatically\n  // without also setting a deepLinkReturnUrl. When the return\n  // urls are omitted, the Venmo app prompts the user to return\n  // manually.\n  return !this._cannotHaveReturnUrls;\n};\n\nVenmo.prototype._isDesktop = function () {\n  return !(browserDetection.isIos() || browserDetection.isAndroid());\n};\n\n/**\n * Launches the Venmo flow and returns a nonce payload.\n *\n * If {@link Venmo#hasTokenizationResult|hasTokenizationResult} returns true, calling tokenize will immediately process and return the results without initiating the Venmo payment authorization flow.\n *\n * Only one Venmo flow can be active at a time. One way to achieve this is to disable your Venmo button while the flow is open.\n * @public\n * @param {object} [options] Options for tokenization.\n * @param {number} [options.processResultsDelay=500] The amount of time in milliseconds to delay processing the results. In most cases, this value should be left as the default.\n * @param {callback} [callback] The second argument, <code>data</code>, is a {@link Venmo~tokenizePayload|tokenizePayload}. If no callback is provided, the method will return a Promise that resolves with a {@link Venmo~tokenizePayload|tokenizePayload}.\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * button.addEventListener('click', function () {\n *   // Disable the button so that we don't attempt to open multiple popups.\n *   button.setAttribute('disabled', 'disabled');\n *\n *   // Because tokenize opens a new window, this must be called\n *   // as a result of a user action, such as a button click.\n *   venmoInstance.tokenize().then(function (payload) {\n *     // Submit payload.nonce to your server\n *     // Use payload.username to get the Venmo username and display any UI\n *   }).catch(function (tokenizeError) {\n *     // Handle flow errors or premature flow closure\n *     switch (tokenizeErr.code) {\n *       case 'VENMO_APP_CANCELED':\n *         console.log('User canceled Venmo flow.');\n *         break;\n *       case 'VENMO_CANCELED':\n *         console.log('User canceled Venmo, or Venmo app is not available.');\n *         break;\n *       default:\n *         console.error('Error!', tokenizeErr);\n *     }\n *   }).then(function () {\n *     button.removeAttribute('disabled');\n *   });\n * });\n */\nVenmo.prototype.tokenize = function (options) {\n  var self = this;\n  var tokenizationPromise;\n\n  options = options || {};\n\n  if (this._tokenizationInProgress === true) {\n    return Promise.reject(\n      new BraintreeError(errors.VENMO_TOKENIZATION_REQUEST_ACTIVE)\n    );\n  }\n\n  this._tokenizationInProgress = true;\n  if (this._useDesktopQRFlow) {\n    // for the desktop flow, we create a venmo payment\n    // context and then present a qr code modal to the\n    // customer and they will open up their venmo app\n    // and scan it and approve the purchase on their\n    // mobile device. The sdk will start polling\n    // in order to determine when the status of the\n    // payment context has updated and then pass the\n    // resulting nonce back to the merchant.\n    tokenizationPromise = this._tokenizeForDesktopQRFlow(options);\n  } else if (this._useAllowDesktopWebLogin) {\n    /**\n     * For Desktop Web Login, we open a browser popup to allow for authorization. Once authorized, the redirect urls are used by Venmo, and we query the API for a payment context status update.\n     *\n     * - Payment context is created on initialization\n     * - Popup is opened to Venmo login url.\n     *  - The payment is authorized or canceled, and the popup is closed\n     * - Once the popup is closed, we query the API for a payment context status update\n     *\n     * This is an alternate, opt-in flow to be used the Desktop QR Flow is not desired for Pay with Venmo desktop experiences.\n     */\n    tokenizationPromise = this._tokenizeWebLoginWithRedirect();\n  } else if (this._cannotHaveReturnUrls) {\n    // in the manual return strategy, we create the payment\n    // context on initialization, then continually poll once\n    // the app switch begins until we get a response indiciating\n    // the payment context was approved by the customer on the\n    // Venmo app. The payment context response also includes a\n    // nonce. There are 2 cases where we use the manual return\n    // strategy:\n    // 1. the sdk is instantiated in an iframe, because\n    //    the venmo app is unable to redirect automatically\n    //    when that is the case so we rely on the customer\n    //    to do a manual redirect and continunally poll for\n    //    updates on the payment context to get the nonce\n    // 2. same deal for when `requireManualReturn` is configured\n    tokenizationPromise = this._tokenizeForMobileWithManualReturn();\n  } else {\n    // the default mobile flow is to app switch to the\n    // venmo app, and then have the venmo app switch\n    // back to the page with the venmo nonce details\n    // encoded into the hash portion of the url. If\n    // `paymentMethodUsage` is provided when instantiating\n    // the sdk, we also create a payment context and pass\n    // the resource id to the Venmo app during the app switch.\n    // Once we get a succesful return, we ping the payment\n    // context query to get any additional data needed\n    // to send back to the merchant.\n    tokenizationPromise =\n      this._tokenizeForMobileWithHashChangeListeners(options);\n  }\n\n  return tokenizationPromise\n    .then(function (payload) {\n      return self._createPromise\n        .then(function (client) {\n          return self._createVenmoPaymentContext(client);\n        })\n        .then(function () {\n          self._tokenizationInProgress = false;\n\n          return formatTokenizePayload(payload);\n        });\n    })\n    .catch(function (err) {\n      return self._createPromise\n        .then(function (client) {\n          // We create a new Payment Context because if the last one failed, then presumably we don't want to use it again.\n          // On the first pass, we create the payment context at initialization, and since we used that first one we now need to create a new one\n          // for the next time someone tries to tokenize.\n          return self._createVenmoPaymentContext(client);\n        })\n        .then(function () {\n          self._tokenizationInProgress = false;\n\n          return Promise.reject(err);\n        });\n    });\n};\n\n/**\n * Cancels the venmo tokenization process\n *\n * @public\n * @function Venmo~cancelTokenization\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n * @example\n * venmoTokenizeButton.addEventListener('click', function () {\n *   venmoInstance.tokenize().then(function (payload) {\n *     // handle payload\n *   }).catch(function (err) {\n *     if (err.code === 'VENMO_TOKENIZATION_CANCELED_BY_MERCHANT') {\n *       // tokenization was canceled by calling cancelTokenization\n *     }\n *   });\n * });\n *\n * venmoCancelButton.addEventListener('click', function () {\n *   // Hide the button when the venmo flow is not in progress\n *   venmoCancelButton.style.display = \"none\";\n *\n *   venmoInstance.cancelTokenization().then(function () {\n *     // done canceling the flow\n *   }).catch(function (err) {\n *     // should only get here if there is no tokenization in progress\n *   });\n * });\n */\nVenmo.prototype.cancelTokenization = function () {\n  if (!this._tokenizationInProgress) {\n    return Promise.reject(\n      new BraintreeError(errors.VENMO_TOKENIZATION_REQUEST_NOT_ACTIVE)\n    );\n  }\n\n  this._removeVisibilityEventListener();\n\n  // important to reject the tokenization promise first\n  // so the tokenize method rejects with this error\n  // rather than a customer canceled error in the mobile\n  // polling and desktop flows\n  if (this._tokenizePromise) {\n    this._tokenizePromise.reject(\n      new BraintreeError(errors.VENMO_TOKENIZATION_CANCELED_BY_MERCHANT)\n    );\n  }\n\n  return Promise.all([\n    this._cancelMobilePaymentContext(),\n    this._cancelVenmoDesktopContext(),\n  ]);\n};\n\nVenmo.prototype._tokenizeWebLoginWithRedirect = function () {\n  var self = this;\n\n  analytics.sendEvent(self._createPromise, \"venmo.tokenize.web-login.start\");\n  this._tokenizePromise = new ExtendedPromise();\n\n  return this.getUrl().then(function (url) {\n    desktopWebLogin\n      .runWebLogin({\n        checkForStatusChange:\n          self._checkPaymentContextStatusAndProcessResult.bind(self),\n        cancelTokenization: self.cancelTokenization.bind(self),\n        frameServiceInstance: self._frameServiceInstance,\n        venmoUrl: url,\n        debug: self._isDebug,\n      })\n      .then(function (payload) {\n        analytics.sendEvent(\n          self._createPromise,\n          \"venmo.tokenize.web-login.success\"\n        );\n\n        self._tokenizePromise.resolve({\n          paymentMethodNonce: payload.paymentMethodId,\n          username: payload.userName,\n          payerInfo: payload.payerInfo,\n          id: self._venmoPaymentContextId,\n        });\n      })\n      .catch(function (err) {\n        analytics.sendEvent(\n          self._createPromise,\n          \"venmo.tokenize.web-login.failure\"\n        );\n\n        self._tokenizePromise.reject(err);\n      });\n\n    return self._tokenizePromise;\n  });\n};\n\nVenmo.prototype._queryPaymentContextStatus = function (id) {\n  var self = this;\n\n  return this._createPromise\n    .then(function (client) {\n      var query = self._shouldUseLegacyFlow\n        ? graphqlQueries.LEGACY_VENMO_PAYMENT_CONTEXT_STATUS_QUERY\n        : graphqlQueries.VENMO_PAYMENT_CONTEXT_STATUS_QUERY;\n\n      return client.request({\n        api: \"graphQLApi\",\n        data: {\n          query: query,\n          variables: {\n            id: id,\n          },\n        },\n      });\n    })\n    .then(function (response) {\n      return response.data.node;\n    });\n};\n\n/**\n * Queries the GraphQL API to get the payment context and process the status. Retries until there is an update to the payment context status.\n * @name Venmo~checkPaymentContextStatusAndProcessResult\n * @ignore\n * @param {number} retryCount The counter for tracking number of retries made against the API.\n * @returns {Promise} Returns a promise\n */\nVenmo.prototype._checkPaymentContextStatusAndProcessResult = function (\n  retryCount\n) {\n  var self = this;\n\n  return self\n    ._queryPaymentContextStatus(self._venmoPaymentContextId)\n    .catch(function (networkError) {\n      return Promise.reject(\n        new BraintreeError({\n          type: errors.VENMO_NETWORK_ERROR.type,\n          code: errors.VENMO_NETWORK_ERROR.code,\n          message: errors.VENMO_NETWORK_ERROR.message,\n          details: networkError,\n        })\n      );\n    })\n    .then(function (node) {\n      var resultStatus = node.status;\n\n      if (resultStatus !== self._venmoPaymentContextStatus) {\n        self._venmoPaymentContextStatus = resultStatus;\n\n        analytics.sendEvent(\n          self._createPromise,\n          \"venmo.tokenize.web-login.status-change\"\n        );\n\n        switch (resultStatus) {\n          case \"APPROVED\":\n            return Promise.resolve(node);\n          case \"CANCELED\":\n            return Promise.reject(\n              new BraintreeError(errors.VENMO_CUSTOMER_CANCELED)\n            );\n          case \"FAILED\":\n            return Promise.reject(\n              new BraintreeError(errors.VENMO_TOKENIZATION_FAILED)\n            );\n          default:\n        }\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (retryCount < self._maxRetryCount) {\n          retryCount++;\n\n          return self\n            ._checkPaymentContextStatusAndProcessResult(retryCount)\n            .then(resolve)\n            .catch(reject);\n        }\n\n        return reject(new BraintreeError(errors.VENMO_TOKENIZATION_FAILED));\n      });\n    });\n};\n\nVenmo.prototype._pollForStatusChange = function () {\n  var self = this;\n\n  if (Date.now() > self._mobilePollingContextExpiresIn) {\n    return Promise.reject(\n      new BraintreeError(errors.VENMO_MOBILE_POLLING_TOKENIZATION_TIMEOUT)\n    );\n  }\n\n  return this._queryPaymentContextStatus(this._venmoPaymentContextId)\n    .catch(function (networkError) {\n      return Promise.reject(\n        new BraintreeError({\n          type: errors.VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR.type,\n          code: errors.VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR.code,\n          message:\n            errors.VENMO_MOBILE_POLLING_TOKENIZATION_NETWORK_ERROR.message,\n          details: {\n            originalError: networkError,\n          },\n        })\n      );\n    })\n    .then(function (node) {\n      var newStatus = node.status;\n\n      if (newStatus !== self._venmoPaymentContextStatus) {\n        self._venmoPaymentContextStatus = newStatus;\n\n        analytics.sendEvent(\n          self._createPromise,\n          \"venmo.tokenize.manual-return.status-change.\" +\n            newStatus.toLowerCase()\n        );\n\n        switch (newStatus) {\n          case \"EXPIRED\":\n          case \"FAILED\":\n          case \"CANCELED\":\n            return Promise.reject(\n              new BraintreeError(\n                errors[\"VENMO_MOBILE_POLLING_TOKENIZATION_\" + newStatus]\n              )\n            );\n          case \"APPROVED\":\n            return Promise.resolve(node);\n          case \"CREATED\":\n          case \"SCANNED\":\n          default:\n          // any other statuses are irrelevant to the polling\n          // and can just be ignored\n        }\n      }\n\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          self._pollForStatusChange().then(resolve).catch(reject);\n        }, self._mobilePollingInterval);\n      });\n    });\n};\n\nVenmo.prototype._tokenizeForMobileWithManualReturn = function () {\n  var self = this;\n\n  analytics.sendEvent(\n    this._createPromise,\n    \"venmo.tokenize.manual-return.start\"\n  );\n\n  this._mobilePollingContextExpiresIn =\n    Date.now() + this._mobilePollingExpiresThreshold;\n  this._tokenizePromise = new ExtendedPromise();\n\n  this._pollForStatusChange()\n    .then(function (payload) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.tokenize.manual-return.success\"\n      );\n\n      self._tokenizePromise.resolve({\n        paymentMethodNonce: payload.paymentMethodId,\n        username: payload.userName,\n        payerInfo: payload.payerInfo,\n        id: self._venmoPaymentContextId,\n      });\n    })\n    .catch(function (err) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.tokenize.manual-return.failure\"\n      );\n\n      self._tokenizePromise.reject(err);\n    });\n\n  return this.getUrl().then(function (url) {\n    self.appSwitch(url);\n\n    return self._tokenizePromise;\n  });\n};\n\nVenmo.prototype._shouldUseRedirectStrategy = function () {\n  if (!browserDetection.isIos()) {\n    return false;\n  }\n\n  if (this._mobileWebFallBack === true) {\n    return true;\n  }\n\n  return this._useRedirectForIOS;\n};\n\nVenmo.prototype._tokenizeForMobileWithHashChangeListeners = function (options) {\n  var self = this;\n  var resultProcessingInProgress, visibilityChangeListenerTimeout;\n\n  if (this.hasTokenizationResult()) {\n    return this.processHashChangeFlowResults();\n  }\n\n  analytics.sendEvent(this._createPromise, \"venmo.tokenize.mobile.start\");\n  this._tokenizePromise = new ExtendedPromise();\n\n  this._previousHash = window.location.hash;\n\n  function completeFlow(hash) {\n    var error;\n\n    self\n      .processHashChangeFlowResults(hash)\n      .catch(function (err) {\n        error = err;\n      })\n      .then(function (res) {\n        if (\n          !self._ignoreHistoryChanges &&\n          window.location.hash !== self._previousHash\n        ) {\n          window.location.hash = self._previousHash;\n        }\n        self._removeVisibilityEventListener();\n\n        if (error) {\n          self._tokenizePromise.reject(error);\n        } else {\n          self._tokenizePromise.resolve(res);\n        }\n        delete self._tokenizePromise;\n      });\n  }\n\n  // The Venmo SDK app switches back with the results of the\n  // tokenization encoded in the hash\n  this._onHashChangeListener = function (e) {\n    var hash = e.newURL.split(\"#\")[1];\n\n    if (!self._hasTokenizationResult(hash)) {\n      return;\n    }\n\n    resultProcessingInProgress = true;\n    clearTimeout(visibilityChangeListenerTimeout);\n    completeFlow(hash);\n  };\n\n  window.addEventListener(\"hashchange\", this._onHashChangeListener, false);\n\n  // Subscribe to document visibility change events to detect when app switch\n  // has returned. Acts as a fallback for the hashchange listener and catches\n  // the cancel case via manual app switch back\n  this._visibilityChangeListener = function () {\n    var delay =\n      options.processResultsDelay || constants.DEFAULT_PROCESS_RESULTS_DELAY;\n\n    if (!window.document.hidden) {\n      if (!resultProcessingInProgress) {\n        visibilityChangeListenerTimeout = setTimeout(completeFlow, delay);\n      }\n    }\n  };\n\n  return this.getUrl().then(function (url) {\n    self.appSwitch(url);\n\n    // Add a brief delay to ignore visibility change events that occur right before app switch\n    setTimeout(function () {\n      window.document.addEventListener(\n        documentVisibilityChangeEventName(),\n        self._visibilityChangeListener\n      );\n    }, constants.DOCUMENT_VISIBILITY_CHANGE_EVENT_DELAY);\n\n    return self._tokenizePromise;\n  });\n};\n\nVenmo.prototype._tokenizeForDesktopQRFlow = function () {\n  var self = this;\n\n  analytics.sendEvent(this._createPromise, \"venmo.tokenize.desktop.start\");\n\n  this._tokenizePromise = new ExtendedPromise();\n\n  this._createPromise\n    .then(function () {\n      return self._venmoDesktopInstance.launchDesktopFlow();\n    })\n    .then(function (payload) {\n      self._venmoDesktopInstance.hideDesktopFlow();\n\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.tokenize.desktop.success\"\n      );\n\n      self._tokenizePromise.resolve(payload);\n    })\n    .catch(function (err) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.tokenize.desktop.failure\"\n      );\n\n      if (self._venmoDesktopInstance) {\n        self._venmoDesktopInstance.hideDesktopFlow();\n      }\n\n      if (err && err.reason === \"CUSTOMER_CANCELED\") {\n        self._tokenizePromise.reject(\n          new BraintreeError(errors.VENMO_DESKTOP_CANCELED)\n        );\n\n        return;\n      }\n\n      self._tokenizePromise.reject(\n        new BraintreeError({\n          type: errors.VENMO_DESKTOP_UNKNOWN_ERROR.type,\n          code: errors.VENMO_DESKTOP_UNKNOWN_ERROR.code,\n          message: errors.VENMO_DESKTOP_UNKNOWN_ERROR.message,\n          details: {\n            originalError: err,\n          },\n        })\n      );\n    });\n\n  return this._tokenizePromise;\n};\n\nVenmo.prototype._cancelMobilePaymentContext = function () {\n  var self = this;\n\n  return this._createPromise.then(function (client) {\n    var query;\n\n    if (self._venmoPaymentContextId) {\n      query = self._shouldUseLegacyFlow\n        ? graphqlQueries.LEGACY_UPDATE_PAYMENT_CONTEXT_QUERY\n        : graphqlQueries.UPDATE_PAYMENT_CONTEXT_QUERY;\n\n      return client.request({\n        api: \"graphQLApi\",\n        data: {\n          query: query,\n          variables: {\n            input: {\n              id: self._venmoPaymentContextId,\n              status: \"CANCELED\",\n            },\n          },\n        },\n      });\n    }\n\n    return Promise.resolve();\n  });\n};\n\nVenmo.prototype._cancelVenmoDesktopContext = function () {\n  var self = this;\n\n  return this._createPromise.then(function () {\n    if (self._venmoDesktopInstance) {\n      self._venmoDesktopInstance.updateVenmoDesktopPaymentContext(\"CANCELED\");\n    }\n\n    return Promise.resolve();\n  });\n};\n\n/**\n * Cleanly tear down anything set up by {@link module:braintree-web/venmo.create|create}.\n * @public\n * @param {callback} [callback] Called once teardown is complete. No data is returned if teardown completes successfully.\n * @example\n * venmoInstance.teardown();\n * @example <caption>With callback</caption>\n * venmoInstance.teardown(function () {\n *   // teardown is complete\n * });\n * @returns {(Promise|void)} Returns a promise if no callback is provided.\n */\nVenmo.prototype.teardown = function () {\n  var self = this;\n\n  this._removeVisibilityEventListener();\n\n  return this._createPromise.then(\n    function () {\n      if (self._venmoDesktopInstance) {\n        self._venmoDesktopInstance.teardown();\n      }\n\n      clearTimeout(self._refreshPaymentContextTimeout);\n      self._cancelMobilePaymentContext();\n\n      convertMethodsToError(this, methods(Venmo.prototype));\n    }.bind(this)\n  );\n};\n\nVenmo.prototype._removeVisibilityEventListener = function () {\n  window.removeEventListener(\"hashchange\", this._onHashChangeListener);\n  window.document.removeEventListener(\n    documentVisibilityChangeEventName(),\n    this._visibilityChangeListener\n  );\n\n  delete this._visibilityChangeListener;\n  delete this._onHashChangeListener;\n};\n\n/**\n * The hash parameter in this function is optional. If no hash parameter is passed, the `getFragmentParameters` function will default to the hash present in the website's URL instead.\n *\n * There are two scenarios where this method is called:\n *\n * 1. When called within a browser that is capable of returning to the same tab that started the Venmo flow, we set up a listener to detect hash changes in the url. Part of the return to the merchant's website from the Venmo app includes encoding the details of the purchase in the hash of the url. The callback is invoked and the hash is pulled off from the event payload. The reason we pull the hash off of the event payload instead of pulling it directly from the URL is because sometimes a single page app will use the hash parameter for it's routing system, and it's possible to hit a race condition where the routing code has already removed the Venmo specific attributes from the hash before we are able to pull it off the url. Grabbing the hash from the event handler instead ensures we get the Venmo details, no matter what the url is converted to.\n * 2. The other scenario is for browsers that cannot return to the same tab, and instead the Venmo app must open a new tab. Since there is no hash listener to pull the hash from, we pull the hash details directly from the url using the `getFragmentParameters` method.\n *\n * @ignore\n * @param {string} [hash] Optionally provided browser url hash.\n * @returns {Promise} Returns a promise\n */\nVenmo.prototype.processHashChangeFlowResults = function (hash) {\n  var self = this;\n  var params = getFragmentParameters(hash);\n\n  // NEXT_MAJOR_VERSION only rely on payment context status call and stop relying on the\n  // content of the hash\n\n  return new Promise(function (resolve, reject) {\n    if (!self._shouldUseLegacyFlow) {\n      self\n        ._pollForStatusChange()\n        .then(function (payload) {\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.appswitch.handle.payment-context-status-query.success\"\n          );\n\n          return resolve({\n            paymentMethodNonce: payload.paymentMethodId,\n            username: payload.userName,\n            payerInfo: payload.payerInfo,\n            id: self._venmoPaymentContextId,\n          });\n        })\n        .catch(function (err) {\n          if (\n            err.type === errors.VENMO_MOBILE_POLLING_TOKENIZATION_CANCELED.type\n          ) {\n            // We want to reject in this case because if it the process was canceled, we don't want to take the happy path\n            reject(err);\n          }\n\n          analytics.sendEvent(\n            self._createPromise,\n            \"venmo.process-results.payment-context-status-query-failed\"\n          );\n          // If the polling request fails, but not because of cancelization, we will rely on the params provided from the hash\n          resolve(params);\n        });\n    } else if (params.venmoSuccess) {\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.appswitch.handle.success\"\n      );\n\n      resolve(params);\n    } else if (params.venmoError) {\n      analytics.sendEvent(self._createPromise, \"venmo.appswitch.handle.error\");\n      reject(\n        new BraintreeError({\n          type: errors.VENMO_APP_FAILED.type,\n          code: errors.VENMO_APP_FAILED.code,\n          message: errors.VENMO_APP_FAILED.message,\n          details: {\n            originalError: {\n              message: decodeURIComponent(params.errorMessage),\n              code: params.errorCode,\n            },\n          },\n        })\n      );\n    } else if (params.venmoCancel) {\n      analytics.sendEvent(self._createPromise, \"venmo.appswitch.handle.cancel\");\n      reject(new BraintreeError(errors.VENMO_APP_CANCELED));\n    } else {\n      // User has either manually switched back to browser, or app is not available for app switch\n      analytics.sendEvent(\n        self._createPromise,\n        \"venmo.appswitch.cancel-or-unavailable\"\n      );\n      reject(new BraintreeError(errors.VENMO_CANCELED));\n    }\n\n    self._clearFragmentParameters();\n  });\n};\n\nVenmo.prototype._clearFragmentParameters = function () {\n  if (this._ignoreHistoryChanges) {\n    return;\n  }\n\n  if (\n    typeof window.history.replaceState === \"function\" &&\n    window.location.hash\n  ) {\n    history.pushState(\n      {},\n      \"\",\n      window.location.href.slice(0, window.location.href.indexOf(\"#\"))\n    );\n  }\n};\n\nfunction getFragmentParameters(hash) {\n  var keyValuesArray = (hash || window.location.hash.substring(1)).split(\"&\");\n\n  var parsedParams = keyValuesArray.reduce(function (toReturn, keyValue) {\n    var parts = keyValue.split(\"=\");\n    // some Single Page Apps may pre-pend a / to the first value\n    // in the hash, assuming it's a route in their app\n    // instead of information from Venmo, this removes all\n    // non-alphanumeric characters from the keys in the params\n    var decodedKey = decodeURIComponent(parts[0]).replace(/\\W/g, \"\");\n    var key = snakeCaseToCamelCase(decodedKey);\n    var value = decodeURIComponent(parts[1]);\n\n    toReturn[key] = value;\n\n    return toReturn;\n  }, {});\n\n  if (parsedParams.resourceId) {\n    parsedParams.id = parsedParams.resourceId;\n  }\n\n  return parsedParams;\n}\n\nfunction formatUserName(username) {\n  username = username || \"\";\n\n  // NEXT_MAJOR_VERSION the web sdks have a prepended @ sign\n  // but the ios and android ones do not. This should be standardized\n  return \"@\" + username.replace(\"@\", \"\");\n}\n\nfunction formatTokenizePayload(payload) {\n  var formattedPayload = {\n    nonce: payload.paymentMethodNonce,\n    type: \"VenmoAccount\",\n    details: {\n      username: formatUserName(payload.username),\n      paymentContextId: payload.id,\n    },\n  };\n\n  if (payload.payerInfo) {\n    formattedPayload.details.payerInfo = payload.payerInfo;\n    formattedPayload.details.payerInfo.userName = formatUserName(\n      payload.payerInfo.userName\n    );\n  }\n\n  return formattedPayload;\n}\n\n// From https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API\nfunction documentVisibilityChangeEventName() {\n  var visibilityChange;\n\n  if (typeof window.document.hidden !== \"undefined\") {\n    // Opera 12.10 and Firefox 18 and later support\n    visibilityChange = \"visibilitychange\";\n  } else if (typeof window.document.msHidden !== \"undefined\") {\n    visibilityChange = \"msvisibilitychange\";\n  } else if (typeof window.document.webkitHidden !== \"undefined\") {\n    visibilityChange = \"webkitvisibilitychange\";\n  }\n\n  return visibilityChange;\n}\n\nfunction isIosWebviewInDeepLinkReturnUrlFlow() {\n  // we know it's a webview because this flow only gets\n  // used when checking the deep link flow\n  // test the platform here to get around custom useragents\n  return (\n    window.navigator.platform &&\n    /iPhone|iPad|iPod/.test(window.navigator.platform)\n  );\n}\n\nmodule.exports = wrapPromise.wrapPrototype(Venmo);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/braintree-web/venmo/venmo.js\n");

/***/ })

};
;