"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jsonexport";
exports.ids = ["vendor-chunks/jsonexport"];
exports.modules = {

/***/ "(ssr)/./node_modules/jsonexport/dist/core/eol.js":
/*!**************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/eol.js ***!
  \**************************************************/
/***/ ((module) => {

eval("/* jshint node:true */\n  \n\n  module.exports = \"\\n\";\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvZW9sLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsRUFBZTs7QUFFZjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9qc29uZXhwb3J0L2Rpc3QvY29yZS9lb2wuanM/ZGM3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBqc2hpbnQgbm9kZTp0cnVlICovXG4gICd1c2Ugc3RyaWN0JztcblxuICBtb2R1bGUuZXhwb3J0cyA9IFwiXFxuXCI7XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/eol.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/core/escape-delimiters.js":
/*!****************************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/escape-delimiters.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("/* jshint node:true */\n\n\n// Escape the textDelimiters contained in the field\n/*(https://tools.ietf.org/html/rfc4180)\n   7.  If double-quotes are used to enclose fields, then a double-quote\n   appearing inside a field must be escaped by preceding it with\n   another double quote.\n   For example: \"aaa\",\"b\"\"bb\",\"ccc\"\n*/\n\nmodule.exports = function escapedDelimiters(textDelimiter, rowDelimiter, forceTextDelimiter) {\n  var endOfLine = '\\n';\n\n  if (typeof textDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"textDelimiter\", must be a string.');\n  }\n\n  if (typeof rowDelimiter !== 'string') {\n    throw new TypeError('Invalid param \"rowDelimiter\", must be a string.');\n  }\n\n  var textDelimiterRegex = new RegExp(\"\\\\\" + textDelimiter, 'g');\n  var escapedDelimiter = textDelimiter + textDelimiter;\n\n  var enclosingCondition = textDelimiter === '\"' ? function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0 || value.indexOf('\"') >= 0;\n  } : function (value) {\n    return value.indexOf(rowDelimiter) >= 0 || value.indexOf(endOfLine) >= 0;\n  };\n\n  return function (value) {\n    if (forceTextDelimiter) value = \"\" + value;\n\n    if (!value.replace) return value;\n    // Escape the textDelimiters contained in the field\n    value = value.replace(textDelimiterRegex, escapedDelimiter);\n\n    // Escape the whole field if it contains a rowDelimiter or a linebreak or double quote\n    if (forceTextDelimiter || enclosingCondition(value)) {\n      value = textDelimiter + value + textDelimiter;\n    }\n\n    return value;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvZXNjYXBlLWRlbGltaXRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL25vZGVfbW9kdWxlcy9qc29uZXhwb3J0L2Rpc3QvY29yZS9lc2NhcGUtZGVsaW1pdGVycy5qcz8yNzY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGpzaGludCBub2RlOnRydWUgKi9cbid1c2Ugc3RyaWN0JztcblxuLy8gRXNjYXBlIHRoZSB0ZXh0RGVsaW1pdGVycyBjb250YWluZWQgaW4gdGhlIGZpZWxkXG4vKihodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDE4MClcbiAgIDcuICBJZiBkb3VibGUtcXVvdGVzIGFyZSB1c2VkIHRvIGVuY2xvc2UgZmllbGRzLCB0aGVuIGEgZG91YmxlLXF1b3RlXG4gICBhcHBlYXJpbmcgaW5zaWRlIGEgZmllbGQgbXVzdCBiZSBlc2NhcGVkIGJ5IHByZWNlZGluZyBpdCB3aXRoXG4gICBhbm90aGVyIGRvdWJsZSBxdW90ZS5cbiAgIEZvciBleGFtcGxlOiBcImFhYVwiLFwiYlwiXCJiYlwiLFwiY2NjXCJcbiovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXNjYXBlZERlbGltaXRlcnModGV4dERlbGltaXRlciwgcm93RGVsaW1pdGVyLCBmb3JjZVRleHREZWxpbWl0ZXIpIHtcbiAgdmFyIGVuZE9mTGluZSA9ICdcXG4nO1xuXG4gIGlmICh0eXBlb2YgdGV4dERlbGltaXRlciAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIHBhcmFtIFwidGV4dERlbGltaXRlclwiLCBtdXN0IGJlIGEgc3RyaW5nLicpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiByb3dEZWxpbWl0ZXIgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBwYXJhbSBcInJvd0RlbGltaXRlclwiLCBtdXN0IGJlIGEgc3RyaW5nLicpO1xuICB9XG5cbiAgdmFyIHRleHREZWxpbWl0ZXJSZWdleCA9IG5ldyBSZWdFeHAoXCJcXFxcXCIgKyB0ZXh0RGVsaW1pdGVyLCAnZycpO1xuICB2YXIgZXNjYXBlZERlbGltaXRlciA9IHRleHREZWxpbWl0ZXIgKyB0ZXh0RGVsaW1pdGVyO1xuXG4gIHZhciBlbmNsb3NpbmdDb25kaXRpb24gPSB0ZXh0RGVsaW1pdGVyID09PSAnXCInID8gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlLmluZGV4T2Yocm93RGVsaW1pdGVyKSA+PSAwIHx8IHZhbHVlLmluZGV4T2YoZW5kT2ZMaW5lKSA+PSAwIHx8IHZhbHVlLmluZGV4T2YoJ1wiJykgPj0gMDtcbiAgfSA6IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZS5pbmRleE9mKHJvd0RlbGltaXRlcikgPj0gMCB8fCB2YWx1ZS5pbmRleE9mKGVuZE9mTGluZSkgPj0gMDtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKGZvcmNlVGV4dERlbGltaXRlcikgdmFsdWUgPSBcIlwiICsgdmFsdWU7XG5cbiAgICBpZiAoIXZhbHVlLnJlcGxhY2UpIHJldHVybiB2YWx1ZTtcbiAgICAvLyBFc2NhcGUgdGhlIHRleHREZWxpbWl0ZXJzIGNvbnRhaW5lZCBpbiB0aGUgZmllbGRcbiAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UodGV4dERlbGltaXRlclJlZ2V4LCBlc2NhcGVkRGVsaW1pdGVyKTtcblxuICAgIC8vIEVzY2FwZSB0aGUgd2hvbGUgZmllbGQgaWYgaXQgY29udGFpbnMgYSByb3dEZWxpbWl0ZXIgb3IgYSBsaW5lYnJlYWsgb3IgZG91YmxlIHF1b3RlXG4gICAgaWYgKGZvcmNlVGV4dERlbGltaXRlciB8fCBlbmNsb3NpbmdDb25kaXRpb24odmFsdWUpKSB7XG4gICAgICB2YWx1ZSA9IHRleHREZWxpbWl0ZXIgKyB2YWx1ZSArIHRleHREZWxpbWl0ZXI7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xuICB9O1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/escape-delimiters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/core/helper.js":
/*!*****************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/helper.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports.isFunction = function (fn) {\n    var getType = {};\n    return fn && getType.toString.call(fn) === '[object Function]';\n};\n\nmodule.exports.isArray = function (arr) {\n    return Array.isArray(arr);\n};\n\nmodule.exports.isObject = function (obj) {\n    return obj instanceof Object;\n};\n\nmodule.exports.isString = function (str) {\n    return typeof str === 'string';\n};\n\nmodule.exports.isNumber = function (num) {\n    return typeof num === 'number';\n};\n\nmodule.exports.isBoolean = function (bool) {\n    return typeof bool === 'boolean';\n};\n\nmodule.exports.isDate = function (date) {\n    return date instanceof Date;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvaGVscGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCO0FBQ3RCO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCO0FBQ0E7O0FBRUEsdUJBQXVCO0FBQ3ZCO0FBQ0E7O0FBRUEsd0JBQXdCO0FBQ3hCO0FBQ0E7O0FBRUEscUJBQXFCO0FBQ3JCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2pzb25leHBvcnQvZGlzdC9jb3JlL2hlbHBlci5qcz8yMWNmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMuaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIChmbikge1xuICAgIHZhciBnZXRUeXBlID0ge307XG4gICAgcmV0dXJuIGZuICYmIGdldFR5cGUudG9TdHJpbmcuY2FsbChmbikgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5pc0FycmF5ID0gZnVuY3Rpb24gKGFycikge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGFycik7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5pc09iamVjdCA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICByZXR1cm4gb2JqIGluc3RhbmNlb2YgT2JqZWN0O1xufTtcblxubW9kdWxlLmV4cG9ydHMuaXNTdHJpbmcgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnO1xufTtcblxubW9kdWxlLmV4cG9ydHMuaXNOdW1iZXIgPSBmdW5jdGlvbiAobnVtKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBudW0gPT09ICdudW1iZXInO1xufTtcblxubW9kdWxlLmV4cG9ydHMuaXNCb29sZWFuID0gZnVuY3Rpb24gKGJvb2wpIHtcbiAgICByZXR1cm4gdHlwZW9mIGJvb2wgPT09ICdib29sZWFuJztcbn07XG5cbm1vZHVsZS5leHBvcnRzLmlzRGF0ZSA9IGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUgaW5zdGFuY2VvZiBEYXRlO1xufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/helper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/core/join-rows.js":
/*!********************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/join-rows.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar EOL = __webpack_require__(/*! ./eol */ \"(ssr)/./node_modules/jsonexport/dist/core/eol.js\");\nvar helper = __webpack_require__(/*! ./helper */ \"(ssr)/./node_modules/jsonexport/dist/core/helper.js\");\n\nmodule.exports = function joinRows(rows, join) {\n  if (!rows || !helper.isArray(rows)) {\n    throw new TypeError('Invalid params \"rows\" for joinRows.' + ' Must be an array of string.');\n  }\n  //Merge all rows in a single output with the correct End of Line string\n  var r = rows.join(join || EOL || '\\n');\n  return r;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvam9pbi1yb3dzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLFVBQVUsbUJBQU8sQ0FBQywrREFBTztBQUN6QixhQUFhLG1CQUFPLENBQUMscUVBQVU7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2pzb25leHBvcnQvZGlzdC9jb3JlL2pvaW4tcm93cy5qcz80YTA2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEVPTCA9IHJlcXVpcmUoJy4vZW9sJyk7XG52YXIgaGVscGVyID0gcmVxdWlyZSgnLi9oZWxwZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBqb2luUm93cyhyb3dzLCBqb2luKSB7XG4gIGlmICghcm93cyB8fCAhaGVscGVyLmlzQXJyYXkocm93cykpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIHBhcmFtcyBcInJvd3NcIiBmb3Igam9pblJvd3MuJyArICcgTXVzdCBiZSBhbiBhcnJheSBvZiBzdHJpbmcuJyk7XG4gIH1cbiAgLy9NZXJnZSBhbGwgcm93cyBpbiBhIHNpbmdsZSBvdXRwdXQgd2l0aCB0aGUgY29ycmVjdCBFbmQgb2YgTGluZSBzdHJpbmdcbiAgdmFyIHIgPSByb3dzLmpvaW4oam9pbiB8fCBFT0wgfHwgJ1xcbicpO1xuICByZXR1cm4gcjtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/join-rows.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/core/stream.js":
/*!*****************************************************!*\
  !*** ./node_modules/jsonexport/dist/core/stream.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/* jshint node:true */\n  \n\n  var Stream = function (_Transform) {\n    throw new Error(\"jsonexport called without third argument as a callback and is required\")\n  }\n\n  module.exports = Stream;\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvc3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsRUFBZTs7QUFFZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Jlc3RhdXJhbnQvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2NvcmUvc3RyZWFtLmpzPzY2MTgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoganNoaW50IG5vZGU6dHJ1ZSAqL1xuICAndXNlIHN0cmljdCc7XG5cbiAgdmFyIFN0cmVhbSA9IGZ1bmN0aW9uIChfVHJhbnNmb3JtKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwianNvbmV4cG9ydCBjYWxsZWQgd2l0aG91dCB0aGlyZCBhcmd1bWVudCBhcyBhIGNhbGxiYWNrIGFuZCBpcyByZXF1aXJlZFwiKVxuICB9XG5cbiAgbW9kdWxlLmV4cG9ydHMgPSBTdHJlYW07XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/core/stream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/index.js":
/*!***********************************************!*\
  !*** ./node_modules/jsonexport/dist/index.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* jshint node:true */\n\n/**\n * Module dependencies.\n */\n//const _ = require('underscore');\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar Parser = __webpack_require__(/*! ./parser/csv */ \"(ssr)/./node_modules/jsonexport/dist/parser/csv.js\");\nvar Stream = __webpack_require__(/*! ./core/stream */ \"(ssr)/./node_modules/jsonexport/dist/core/stream.js\");\nvar helper = __webpack_require__(/*! ./core/helper */ \"(ssr)/./node_modules/jsonexport/dist/core/helper.js\");\nvar EOL = __webpack_require__(/*! ./core/eol */ \"(ssr)/./node_modules/jsonexport/dist/core/eol.js\");\n\n/**\n * Main function that converts json to csv\n *\n * @param {Object|Array} json\n * @param {Object} [options]\n * @param {Function} callback(err, csv) - Callback function\n *      if error, returning error in call back.\n *      if csv is created successfully, returning csv output to callback.\n */\nmodule.exports = function () {\n  var DEFAULT_OPTIONS = {\n    headers: [], //              Array\n    rename: [], //               Array\n    headerPathString: '.', //    String\n    rowDelimiter: ',', //        String\n    textDelimiter: '\"', //       String\n    arrayPathString: ';', //     String\n    undefinedString: '', //      String\n    endOfLine: EOL || '\\n', //   String\n    mainPathItem: null, //       String\n    booleanTrueString: null, //  String\n    booleanFalseString: null, // String\n    includeHeaders: true, //     Boolean\n    fillGaps: false, //          Boolean\n    verticalOutput: true, //     Boolean\n    forceTextDelimiter: false //Boolean\n  };\n  // argument parsing\n  var json = void 0,\n      userOptions = void 0,\n      callback = void 0;\n  if (arguments.length === 3) {\n    var _arguments = Array.prototype.slice.call(arguments);\n\n    json = _arguments[0];\n    userOptions = _arguments[1];\n    callback = _arguments[2];\n  } else if (arguments.length === 2) {\n    var any = void 0;\n\n    var _arguments2 = Array.prototype.slice.call(arguments);\n\n    json = _arguments2[0];\n    any = _arguments2[1];\n\n    if (typeof any === 'function') {\n      callback = any;\n    } else if ((typeof any === 'undefined' ? 'undefined' : _typeof(any)) === 'object') {\n      userOptions = any;\n    }\n  } else if (arguments.length === 1) {\n    var _arguments3 = Array.prototype.slice.call(arguments),\n        _any = _arguments3[0];\n\n    if ((typeof _any === 'undefined' ? 'undefined' : _typeof(_any)) === 'object') {\n      var defaultKeys = Object.keys(DEFAULT_OPTIONS);\n      var objectKeys = Object.keys(_any);\n      var isOptions = objectKeys.every(function (key) {\n        return defaultKeys.includes(key);\n      });\n      if (objectKeys.length > 0 && isOptions) {\n        userOptions = _any;\n      } else {\n        json = _any;\n      }\n    } else {\n      json = _any;\n    }\n  } else {\n    return new Stream(new Parser(DEFAULT_OPTIONS));\n  }\n  var options = Object.assign({}, DEFAULT_OPTIONS, userOptions);\n  var parser = new Parser(options);\n  // if no json is provided Stream API will be used\n  if (!json) {\n    return new Stream(parser);\n  }\n  // always return an promise\n  return new Promise(function (resolve, reject) {\n    parser.parse(json, function (err, result) {\n      if (callback) return callback(err, result);\n      if (err) return reject(err);\n      if (reject) return resolve(result);\n    });\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvanNvbmV4cG9ydC9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxR0FBcUcscUJBQXFCLG1CQUFtQjs7QUFFN0ksYUFBYSxtQkFBTyxDQUFDLHdFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQywwRUFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsMEVBQWU7QUFDcEMsVUFBVSxtQkFBTyxDQUFDLG9FQUFZOztBQUU5QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLGNBQWM7QUFDekIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsVUFBVTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbm9kZV9tb2R1bGVzL2pzb25leHBvcnQvZGlzdC9pbmRleC5qcz8zYzM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGpzaGludCBub2RlOnRydWUgKi9cbid1c2Ugc3RyaWN0Jztcbi8qKlxuICogTW9kdWxlIGRlcGVuZGVuY2llcy5cbiAqL1xuLy9jb25zdCBfID0gcmVxdWlyZSgndW5kZXJzY29yZScpO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbnZhciBQYXJzZXIgPSByZXF1aXJlKCcuL3BhcnNlci9jc3YnKTtcbnZhciBTdHJlYW0gPSByZXF1aXJlKCcuL2NvcmUvc3RyZWFtJyk7XG52YXIgaGVscGVyID0gcmVxdWlyZSgnLi9jb3JlL2hlbHBlcicpO1xudmFyIEVPTCA9IHJlcXVpcmUoJy4vY29yZS9lb2wnKTtcblxuLyoqXG4gKiBNYWluIGZ1bmN0aW9uIHRoYXQgY29udmVydHMganNvbiB0byBjc3ZcbiAqXG4gKiBAcGFyYW0ge09iamVjdHxBcnJheX0ganNvblxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2soZXJyLCBjc3YpIC0gQ2FsbGJhY2sgZnVuY3Rpb25cbiAqICAgICAgaWYgZXJyb3IsIHJldHVybmluZyBlcnJvciBpbiBjYWxsIGJhY2suXG4gKiAgICAgIGlmIGNzdiBpcyBjcmVhdGVkIHN1Y2Nlc3NmdWxseSwgcmV0dXJuaW5nIGNzdiBvdXRwdXQgdG8gY2FsbGJhY2suXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgREVGQVVMVF9PUFRJT05TID0ge1xuICAgIGhlYWRlcnM6IFtdLCAvLyAgICAgICAgICAgICAgQXJyYXlcbiAgICByZW5hbWU6IFtdLCAvLyAgICAgICAgICAgICAgIEFycmF5XG4gICAgaGVhZGVyUGF0aFN0cmluZzogJy4nLCAvLyAgICBTdHJpbmdcbiAgICByb3dEZWxpbWl0ZXI6ICcsJywgLy8gICAgICAgIFN0cmluZ1xuICAgIHRleHREZWxpbWl0ZXI6ICdcIicsIC8vICAgICAgIFN0cmluZ1xuICAgIGFycmF5UGF0aFN0cmluZzogJzsnLCAvLyAgICAgU3RyaW5nXG4gICAgdW5kZWZpbmVkU3RyaW5nOiAnJywgLy8gICAgICBTdHJpbmdcbiAgICBlbmRPZkxpbmU6IEVPTCB8fCAnXFxuJywgLy8gICBTdHJpbmdcbiAgICBtYWluUGF0aEl0ZW06IG51bGwsIC8vICAgICAgIFN0cmluZ1xuICAgIGJvb2xlYW5UcnVlU3RyaW5nOiBudWxsLCAvLyAgU3RyaW5nXG4gICAgYm9vbGVhbkZhbHNlU3RyaW5nOiBudWxsLCAvLyBTdHJpbmdcbiAgICBpbmNsdWRlSGVhZGVyczogdHJ1ZSwgLy8gICAgIEJvb2xlYW5cbiAgICBmaWxsR2FwczogZmFsc2UsIC8vICAgICAgICAgIEJvb2xlYW5cbiAgICB2ZXJ0aWNhbE91dHB1dDogdHJ1ZSwgLy8gICAgIEJvb2xlYW5cbiAgICBmb3JjZVRleHREZWxpbWl0ZXI6IGZhbHNlIC8vQm9vbGVhblxuICB9O1xuICAvLyBhcmd1bWVudCBwYXJzaW5nXG4gIHZhciBqc29uID0gdm9pZCAwLFxuICAgICAgdXNlck9wdGlvbnMgPSB2b2lkIDAsXG4gICAgICBjYWxsYmFjayA9IHZvaWQgMDtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDMpIHtcbiAgICB2YXIgX2FyZ3VtZW50cyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG5cbiAgICBqc29uID0gX2FyZ3VtZW50c1swXTtcbiAgICB1c2VyT3B0aW9ucyA9IF9hcmd1bWVudHNbMV07XG4gICAgY2FsbGJhY2sgPSBfYXJndW1lbnRzWzJdO1xuICB9IGVsc2UgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIHtcbiAgICB2YXIgYW55ID0gdm9pZCAwO1xuXG4gICAgdmFyIF9hcmd1bWVudHMyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuICAgIGpzb24gPSBfYXJndW1lbnRzMlswXTtcbiAgICBhbnkgPSBfYXJndW1lbnRzMlsxXTtcblxuICAgIGlmICh0eXBlb2YgYW55ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayA9IGFueTtcbiAgICB9IGVsc2UgaWYgKCh0eXBlb2YgYW55ID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhbnkpKSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHVzZXJPcHRpb25zID0gYW55O1xuICAgIH1cbiAgfSBlbHNlIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgdmFyIF9hcmd1bWVudHMzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSxcbiAgICAgICAgX2FueSA9IF9hcmd1bWVudHMzWzBdO1xuXG4gICAgaWYgKCh0eXBlb2YgX2FueSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YoX2FueSkpID09PSAnb2JqZWN0Jykge1xuICAgICAgdmFyIGRlZmF1bHRLZXlzID0gT2JqZWN0LmtleXMoREVGQVVMVF9PUFRJT05TKTtcbiAgICAgIHZhciBvYmplY3RLZXlzID0gT2JqZWN0LmtleXMoX2FueSk7XG4gICAgICB2YXIgaXNPcHRpb25zID0gb2JqZWN0S2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0S2V5cy5pbmNsdWRlcyhrZXkpO1xuICAgICAgfSk7XG4gICAgICBpZiAob2JqZWN0S2V5cy5sZW5ndGggPiAwICYmIGlzT3B0aW9ucykge1xuICAgICAgICB1c2VyT3B0aW9ucyA9IF9hbnk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBqc29uID0gX2FueTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAganNvbiA9IF9hbnk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiBuZXcgU3RyZWFtKG5ldyBQYXJzZXIoREVGQVVMVF9PUFRJT05TKSk7XG4gIH1cbiAgdmFyIG9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHt9LCBERUZBVUxUX09QVElPTlMsIHVzZXJPcHRpb25zKTtcbiAgdmFyIHBhcnNlciA9IG5ldyBQYXJzZXIob3B0aW9ucyk7XG4gIC8vIGlmIG5vIGpzb24gaXMgcHJvdmlkZWQgU3RyZWFtIEFQSSB3aWxsIGJlIHVzZWRcbiAgaWYgKCFqc29uKSB7XG4gICAgcmV0dXJuIG5ldyBTdHJlYW0ocGFyc2VyKTtcbiAgfVxuICAvLyBhbHdheXMgcmV0dXJuIGFuIHByb21pc2VcbiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICBwYXJzZXIucGFyc2UoanNvbiwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICBpZiAoY2FsbGJhY2spIHJldHVybiBjYWxsYmFjayhlcnIsIHJlc3VsdCk7XG4gICAgICBpZiAoZXJyKSByZXR1cm4gcmVqZWN0KGVycik7XG4gICAgICBpZiAocmVqZWN0KSByZXR1cm4gcmVzb2x2ZShyZXN1bHQpO1xuICAgIH0pO1xuICB9KTtcbn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/parser/csv.js":
/*!****************************************************!*\
  !*** ./node_modules/jsonexport/dist/parser/csv.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* jshint node:true */\n\n\n/**\n * Module dependencies.\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar joinRows = __webpack_require__(/*! ../core/join-rows */ \"(ssr)/./node_modules/jsonexport/dist/core/join-rows.js\");\nvar Handler = __webpack_require__(/*! ./handler */ \"(ssr)/./node_modules/jsonexport/dist/parser/handler.js\");\nvar helper = __webpack_require__(/*! ../core/helper */ \"(ssr)/./node_modules/jsonexport/dist/core/helper.js\");\n\nvar Parser = function () {\n  function Parser(options) {\n    _classCallCheck(this, Parser);\n\n    this._options = options || {};\n    this._handler = new Handler(this._options);\n    this._headers = this._options.headers || [];\n    this._escape = __webpack_require__(/*! ../core/escape-delimiters */ \"(ssr)/./node_modules/jsonexport/dist/core/escape-delimiters.js\")(this._options.textDelimiter, this._options.rowDelimiter, this._options.forceTextDelimiter);\n  }\n\n  /**\n   * Generates a CSV file with optional headers based on the passed JSON,\n   * with can be an Object or Array.\n   *\n   * @param {Object|Array} json\n   * @param {Function} done(err,csv) - Callback function\n   *      if error, returning error in call back.\n   *      if csv is created successfully, returning csv output to callback.\n   */\n\n\n  _createClass(Parser, [{\n    key: 'parse',\n    value: function parse(json, done, stream) {\n      if (helper.isArray(json)) return done(null, this._parseArray(json, stream));else if (helper.isObject(json)) return done(null, this._parseObject(json));\n      return done(new Error('Unable to parse the JSON object, its not an Array or Object.'));\n    }\n  }, {\n    key: '_checkRows',\n    value: function _checkRows(rows) {\n      var lastRow = null;\n      var finalRows = [];\n      var fillGaps = function fillGaps(col, index) {\n        return col === '' || col === undefined ? lastRow[index] : col;\n      };\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n\n          var missing = this._headers.length - row.length;\n          if (missing > 0) row = row.concat(Array(missing).join(\".\").split(\".\"));\n          if (lastRow && this._options.fillGaps) row = row.map(fillGaps);\n          finalRows.push(row.join(this._options.rowDelimiter));\n          lastRow = row;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return finalRows;\n    }\n  }, {\n    key: '_parseArray',\n    value: function _parseArray(json, stream) {\n      var self = this;\n      this._headers = this._headers || [];\n      var fileRows = [];\n      var outputFile = void 0;\n      var fillRows = void 0;\n\n      var getHeaderIndex = function getHeaderIndex(header) {\n        var index = self._headers.indexOf(header);\n        if (index === -1) {\n          self._headers.push(header);\n          index = self._headers.indexOf(header);\n        }\n        return index;\n      };\n\n      //Generate the csv output\n      fillRows = function fillRows(result) {\n        var rows = [];\n        var fillAndPush = function fillAndPush(row) {\n          return rows.push(row.map(function (col) {\n            return col != null ? col : '';\n          }));\n        };\n        // initialize the array with empty strings to handle 'unpopular' headers\n        var newRow = function newRow() {\n          return new Array(self._headers.length).fill(null);\n        };\n        var emptyRowIndexByHeader = {};\n        var currentRow = newRow();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = result[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var element = _step2.value;\n\n            var elementHeaderIndex = getHeaderIndex(element.item);\n            if (currentRow[elementHeaderIndex] != undefined) {\n              fillAndPush(currentRow);\n              currentRow = newRow();\n            }\n            emptyRowIndexByHeader[elementHeaderIndex] = emptyRowIndexByHeader[elementHeaderIndex] || 0;\n            // make sure there isn't a empty row for this header\n            if (self._options.fillTopRow && emptyRowIndexByHeader[elementHeaderIndex] < rows.length) {\n              rows[emptyRowIndexByHeader[elementHeaderIndex]][elementHeaderIndex] = self._escape(element.value);\n              emptyRowIndexByHeader[elementHeaderIndex] += 1;\n              continue;\n            }\n            currentRow[elementHeaderIndex] = self._escape(element.value);\n            emptyRowIndexByHeader[elementHeaderIndex] += 1;\n          }\n          // push last row\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        if (currentRow.length > 0) {\n          fillAndPush(currentRow);\n        }\n        fileRows = fileRows.concat(self._checkRows(rows));\n      };\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = json[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n\n          //Call checkType to list all items inside this object\n          //Items are returned as a object {item: 'Prop Value, Item Name', value: 'Prop Data Value'}\n          var itemResult = self._handler.check(item, self._options.mainPathItem, item, json);\n          fillRows(itemResult);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (!stream && self._options.includeHeaders) {\n        //Add the headers to the first line\n        fileRows.unshift(this.headers);\n      }\n\n      return joinRows(fileRows, self._options.endOfLine);\n    }\n  }, {\n    key: '_parseObject',\n    value: function _parseObject(json) {\n      var self = this;\n      var fileRows = [];\n      var parseResult = [];\n      var outputFile = void 0;\n      var fillRows = void 0;\n      var horizontalRows = [[], []];\n\n      fillRows = function fillRows(result) {\n        var value = result.value || result.value === 0 ? result.value.toString() : self._options.undefinedString;\n        value = self._escape(value);\n\n        //Type header;value\n        if (self._options.verticalOutput) {\n          var row = [result.item, value];\n          fileRows.push(row.join(self._options.rowDelimiter));\n        } else {\n          horizontalRows[0].push(result.item);\n          horizontalRows[1].push(value);\n        }\n      };\n      for (var prop in json) {\n        var prefix = \"\";\n        if (this._options.mainPathItem) prefix = this._options.mainPathItem + this._options.headerPathString;\n        parseResult = this._handler.check(json[prop], prefix + prop, prop, json);\n\n        parseResult.forEach(fillRows);\n      }\n      if (!this._options.verticalOutput) {\n        fileRows.push(horizontalRows[0].join(this._options.rowDelimiter));\n        fileRows.push(horizontalRows[1].join(this._options.rowDelimiter));\n      }\n      return joinRows(fileRows, this._options.endOfLine);\n    }\n  }, {\n    key: 'headers',\n    get: function get() {\n      var _this = this;\n\n      var headers = this._headers;\n\n      if (this._options.rename && this._options.rename.length > 0) headers = headers.map(function (header) {\n        return _this._options.rename[_this._options.headers.indexOf(header)] || header;\n      });\n\n      if (this._options.forceTextDelimiter) {\n        headers = headers.map(function (header) {\n          return '' + _this._options.textDelimiter + header + _this._options.textDelimiter;\n        });\n      }\n\n      if (this._options.mapHeaders) headers = headers.map(this._options.mapHeaders);\n\n      return headers.join(this._options.rowDelimiter);\n    }\n  }]);\n\n  return Parser;\n}();\n\nmodule.exports = Parser;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/parser/csv.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/jsonexport/dist/parser/handler.js":
/*!********************************************************!*\
  !*** ./node_modules/jsonexport/dist/parser/handler.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* jshint node:true */\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar helper = __webpack_require__(/*! ../core/helper */ \"(ssr)/./node_modules/jsonexport/dist/core/helper.js\");\n\nvar Handler = function () {\n  function Handler(options) {\n    _classCallCheck(this, Handler);\n\n    this._options = options;\n\n    // an object of {typeName:(value,index,parent)=>any}\n    this._options.typeHandlers = this._options.typeHandlers || {};\n  }\n\n  /**\n   * Check if results needing mapping to alternate value\n   *\n   * @returns [{item, value}] result\n   */\n\n\n  _createClass(Handler, [{\n    key: '_setHeaders',\n    value: function _setHeaders(result, item) {\n      var self = this;\n      if (!item) return result;\n      return result.map(function (element) {\n        element.item = element.item ? item + self._options.headerPathString + element.item : item;\n        return element;\n      });\n    }\n  }, {\n    key: 'castValue',\n    value: function castValue(element, item, index, parent) {\n      //cast by matching constructor\n      var types = this._options.typeHandlers;\n      for (var type in types) {\n        if (isInstanceOfTypeName(element, type)) {\n          element = types[type].call(types, element, index, parent);\n          break; //first match we move on\n        }\n      }\n\n      return element;\n    }\n  }, {\n    key: 'checkComplex',\n    value: function checkComplex(element, item) {\n      //Check if element is a Date\n      if (helper.isDate(element)) {\n        return [{\n          item: item,\n          value: (this._options.handleDate || this._handleDate)(element, item)\n        }];\n      }\n      //Check if element is an Array\n      else if (helper.isArray(element)) {\n          var resultArray = this._handleArray(element, item);\n          return this._setHeaders(resultArray, item);\n        }\n        //Check if element is a Object\n        else if (helper.isObject(element)) {\n            var resultObject = this._handleObject(element);\n            return this._setHeaders(resultObject, item);\n          }\n\n      return [{\n        item: item,\n        value: ''\n      }];\n    }\n\n    /**\n     * Check the element type of the element call the correct handle function\n     *\n     * @param element Element that will be checked\n     * @param item Used to make the headers/path breadcrumb\n     * @returns [{item, value}] result\n     */\n\n  }, {\n    key: 'check',\n    value: function check(element, item, index, parent) {\n      element = this.castValue(element, item, index, parent);\n      // try simple value by highier performance switch\n      switch (typeof element === 'undefined' ? 'undefined' : _typeof(element)) {\n        case 'string':\n          return [{\n            item: item,\n            value: this._handleString(element, item)\n          }];\n\n        case 'number':\n          return [{\n            item: item,\n            value: this._handleNumber(element, item)\n          }];\n\n        case 'boolean':\n          return [{\n            item: item,\n            value: this._handleBoolean.bind(this)(element, item)\n          }];\n      }\n\n      return this.checkComplex(element, item);\n    }\n\n    /**\n     * Handle all Objects\n     *\n     * @param {Object} obj\n     * @returns [{item, value}] result\n     */\n\n  }, {\n    key: '_handleObject',\n    value: function _handleObject(obj) {\n      var result = [];\n      //Look every object props\n      for (var prop in obj) {\n        var propData = obj[prop];\n        //Check the propData type\n        var resultCheckType = this.check(propData, prop, prop, obj);\n        //Append to results aka merge results aka array-append-array\n        result = result.concat(resultCheckType);\n      }\n      return result;\n    }\n\n    /**\n     * Handle all Arrays, merges arrays with primitive types in a single value\n     *\n     * @param {Array} array\n     * @returns [{item, value}] result\n     */\n\n  }, {\n    key: '_handleArray',\n    value: function _handleArray(array) {\n      var self = this;\n      var result = [];\n      var firstElementWithoutItem;\n      for (var aIndex = 0; aIndex < array.length; ++aIndex) {\n        var element = array[aIndex];\n        //Check the propData type\n        var resultCheckType = self.check(element, null, aIndex, array);\n        //Check for results without itens, merge all itens with the first occurrence\n        if (resultCheckType.length === 0) continue;\n        var firstResult = resultCheckType[0];\n        if (!firstResult.item && firstElementWithoutItem !== undefined) {\n          firstElementWithoutItem.value += self._options.arrayPathString + firstResult.value;\n          continue;\n        } else if (resultCheckType.length > 0 && !firstResult.item && firstElementWithoutItem === undefined) {\n          firstElementWithoutItem = firstResult;\n        }\n        //Append to results\n        result = result.concat(resultCheckType);\n      }\n      return result;\n    }\n    /**\n     * Handle all Boolean variables, can be replaced with options.handleBoolean\n     *\n     * @param {Boolean} boolean\n     * @returns {String} result\n     */\n\n  }, {\n    key: '_handleBoolean',\n    value: function _handleBoolean(boolean) {\n      var result;\n      //Check for booolean options\n      if (boolean) {\n        result = this._options.booleanTrueString || 'true';\n      } else {\n        result = this._options.booleanFalseString || 'false';\n      }\n      return result;\n    }\n    /**\n     * Handle all String variables, can be replaced with options.handleString\n     *\n     * @param {String} string\n     * @returns {String} string\n     */\n\n  }, {\n    key: '_handleString',\n    value: function _handleString(string) {\n      return string;\n    }\n    /**\n     * Handle all Number variables, can be replaced with options.handleNumber\n     *\n     * @param {Number} number\n     * @returns {Number} number\n     */\n\n  }, {\n    key: '_handleNumber',\n    value: function _handleNumber(number) {\n      return number;\n    }\n    /**\n     * Handle all Date variables, can be replaced with options.handleDate\n     *\n     * @param {Date} number\n     * @returns {string} result\n     */\n\n  }, {\n    key: '_handleDate',\n    value: function _handleDate(date) {\n      return date.toLocaleDateString();\n    }\n  }]);\n\n  return Handler;\n}();\n\nmodule.exports = Handler;\n\nvar globalScope = typeof window === \"undefined\" ? global : window;\nfunction isInstanceOfTypeName(element, typeName) {\n  if (element instanceof globalScope[typeName]) {\n    return true; //Buffer and complex objects\n  }\n\n  //literals in javascript cannot be checked by instance of\n  switch (typeof element === 'undefined' ? 'undefined' : _typeof(element)) {\n    case 'string':\n      return typeName === \"String\";\n    case 'boolean':\n      return typeName === \"Boolean\";\n    case 'number':\n      return typeName === \"Number\";\n  }\n\n  return false;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/jsonexport/dist/parser/handler.js\n");

/***/ })

};
;